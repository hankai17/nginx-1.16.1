
lua_5_4_6:     file format elf64-x86-64


Disassembly of section .init:

0000000000401640 <_init>:
  401640:	f3 0f 1e fa          	endbr64 
  401644:	48 83 ec 08          	sub    $0x8,%rsp
  401648:	48 8b 05 a1 d9 24 00 	mov    0x24d9a1(%rip),%rax        # 64eff0 <__gmon_start__@Base>
  40164f:	48 85 c0             	test   %rax,%rax
  401652:	74 02                	je     401656 <_init+0x16>
  401654:	ff d0                	callq  *%rax
  401656:	48 83 c4 08          	add    $0x8,%rsp
  40165a:	c3                   	retq   

Disassembly of section .plt:

0000000000401660 <.plt>:
  401660:	ff 35 a2 d9 24 00    	pushq  0x24d9a2(%rip)        # 64f008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401666:	ff 25 a4 d9 24 00    	jmpq   *0x24d9a4(%rip)        # 64f010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40166c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401670 <ftell@plt>:
  401670:	ff 25 a2 d9 24 00    	jmpq   *0x24d9a2(%rip)        # 64f018 <ftell@GLIBC_2.2.5>
  401676:	68 00 00 00 00       	pushq  $0x0
  40167b:	e9 e0 ff ff ff       	jmpq   401660 <.plt>

0000000000401680 <setvbuf@plt>:
  401680:	ff 25 9a d9 24 00    	jmpq   *0x24d99a(%rip)        # 64f020 <setvbuf@GLIBC_2.2.5>
  401686:	68 01 00 00 00       	pushq  $0x1
  40168b:	e9 d0 ff ff ff       	jmpq   401660 <.plt>

0000000000401690 <__errno_location@plt>:
  401690:	ff 25 92 d9 24 00    	jmpq   *0x24d992(%rip)        # 64f028 <__errno_location@GLIBC_2.2.5>
  401696:	68 02 00 00 00       	pushq  $0x2
  40169b:	e9 c0 ff ff ff       	jmpq   401660 <.plt>

00000000004016a0 <atan2@plt>:
  4016a0:	ff 25 8a d9 24 00    	jmpq   *0x24d98a(%rip)        # 64f030 <atan2@GLIBC_2.2.5>
  4016a6:	68 03 00 00 00       	pushq  $0x3
  4016ab:	e9 b0 ff ff ff       	jmpq   401660 <.plt>

00000000004016b0 <ungetc@plt>:
  4016b0:	ff 25 82 d9 24 00    	jmpq   *0x24d982(%rip)        # 64f038 <ungetc@GLIBC_2.2.5>
  4016b6:	68 04 00 00 00       	pushq  $0x4
  4016bb:	e9 a0 ff ff ff       	jmpq   401660 <.plt>

00000000004016c0 <ceil@plt>:
  4016c0:	ff 25 7a d9 24 00    	jmpq   *0x24d97a(%rip)        # 64f040 <ceil@GLIBC_2.2.5>
  4016c6:	68 05 00 00 00       	pushq  $0x5
  4016cb:	e9 90 ff ff ff       	jmpq   401660 <.plt>

00000000004016d0 <clearerr@plt>:
  4016d0:	ff 25 72 d9 24 00    	jmpq   *0x24d972(%rip)        # 64f048 <clearerr@GLIBC_2.2.5>
  4016d6:	68 06 00 00 00       	pushq  $0x6
  4016db:	e9 80 ff ff ff       	jmpq   401660 <.plt>

00000000004016e0 <sin@plt>:
  4016e0:	ff 25 6a d9 24 00    	jmpq   *0x24d96a(%rip)        # 64f050 <sin@GLIBC_2.2.5>
  4016e6:	68 07 00 00 00       	pushq  $0x7
  4016eb:	e9 70 ff ff ff       	jmpq   401660 <.plt>

00000000004016f0 <strstr@plt>:
  4016f0:	ff 25 62 d9 24 00    	jmpq   *0x24d962(%rip)        # 64f058 <strstr@GLIBC_2.2.5>
  4016f6:	68 08 00 00 00       	pushq  $0x8
  4016fb:	e9 60 ff ff ff       	jmpq   401660 <.plt>

0000000000401700 <strcoll@plt>:
  401700:	ff 25 5a d9 24 00    	jmpq   *0x24d95a(%rip)        # 64f060 <strcoll@GLIBC_2.2.5>
  401706:	68 09 00 00 00       	pushq  $0x9
  40170b:	e9 50 ff ff ff       	jmpq   401660 <.plt>

0000000000401710 <getc@plt>:
  401710:	ff 25 52 d9 24 00    	jmpq   *0x24d952(%rip)        # 64f068 <getc@GLIBC_2.2.5>
  401716:	68 0a 00 00 00       	pushq  $0xa
  40171b:	e9 40 ff ff ff       	jmpq   401660 <.plt>

0000000000401720 <log@plt>:
  401720:	ff 25 4a d9 24 00    	jmpq   *0x24d94a(%rip)        # 64f070 <log@GLIBC_2.2.5>
  401726:	68 0b 00 00 00       	pushq  $0xb
  40172b:	e9 30 ff ff ff       	jmpq   401660 <.plt>

0000000000401730 <strerror@plt>:
  401730:	ff 25 42 d9 24 00    	jmpq   *0x24d942(%rip)        # 64f078 <strerror@GLIBC_2.2.5>
  401736:	68 0c 00 00 00       	pushq  $0xc
  40173b:	e9 20 ff ff ff       	jmpq   401660 <.plt>

0000000000401740 <strchr@plt>:
  401740:	ff 25 3a d9 24 00    	jmpq   *0x24d93a(%rip)        # 64f080 <strchr@GLIBC_2.2.5>
  401746:	68 0d 00 00 00       	pushq  $0xd
  40174b:	e9 10 ff ff ff       	jmpq   401660 <.plt>

0000000000401750 <longjmp@plt>:
  401750:	ff 25 32 d9 24 00    	jmpq   *0x24d932(%rip)        # 64f088 <longjmp@GLIBC_2.2.5>
  401756:	68 0e 00 00 00       	pushq  $0xe
  40175b:	e9 00 ff ff ff       	jmpq   401660 <.plt>

0000000000401760 <strspn@plt>:
  401760:	ff 25 2a d9 24 00    	jmpq   *0x24d92a(%rip)        # 64f090 <strspn@GLIBC_2.2.5>
  401766:	68 0f 00 00 00       	pushq  $0xf
  40176b:	e9 f0 fe ff ff       	jmpq   401660 <.plt>

0000000000401770 <strlen@plt>:
  401770:	ff 25 22 d9 24 00    	jmpq   *0x24d922(%rip)        # 64f098 <strlen@GLIBC_2.2.5>
  401776:	68 10 00 00 00       	pushq  $0x10
  40177b:	e9 e0 fe ff ff       	jmpq   401660 <.plt>

0000000000401780 <memcmp@plt>:
  401780:	ff 25 1a d9 24 00    	jmpq   *0x24d91a(%rip)        # 64f0a0 <memcmp@GLIBC_2.2.5>
  401786:	68 11 00 00 00       	pushq  $0x11
  40178b:	e9 d0 fe ff ff       	jmpq   401660 <.plt>

0000000000401790 <strncmp@plt>:
  401790:	ff 25 12 d9 24 00    	jmpq   *0x24d912(%rip)        # 64f0a8 <strncmp@GLIBC_2.2.5>
  401796:	68 12 00 00 00       	pushq  $0x12
  40179b:	e9 c0 fe ff ff       	jmpq   401660 <.plt>

00000000004017a0 <log10@plt>:
  4017a0:	ff 25 0a d9 24 00    	jmpq   *0x24d90a(%rip)        # 64f0b0 <log10@GLIBC_2.2.5>
  4017a6:	68 13 00 00 00       	pushq  $0x13
  4017ab:	e9 b0 fe ff ff       	jmpq   401660 <.plt>

00000000004017b0 <difftime@plt>:
  4017b0:	ff 25 02 d9 24 00    	jmpq   *0x24d902(%rip)        # 64f0b8 <difftime@GLIBC_2.2.5>
  4017b6:	68 14 00 00 00       	pushq  $0x14
  4017bb:	e9 a0 fe ff ff       	jmpq   401660 <.plt>

00000000004017c0 <abort@plt>:
  4017c0:	ff 25 fa d8 24 00    	jmpq   *0x24d8fa(%rip)        # 64f0c0 <abort@GLIBC_2.2.5>
  4017c6:	68 15 00 00 00       	pushq  $0x15
  4017cb:	e9 90 fe ff ff       	jmpq   401660 <.plt>

00000000004017d0 <tan@plt>:
  4017d0:	ff 25 f2 d8 24 00    	jmpq   *0x24d8f2(%rip)        # 64f0c8 <tan@GLIBC_2.2.5>
  4017d6:	68 16 00 00 00       	pushq  $0x16
  4017db:	e9 80 fe ff ff       	jmpq   401660 <.plt>

00000000004017e0 <rename@plt>:
  4017e0:	ff 25 ea d8 24 00    	jmpq   *0x24d8ea(%rip)        # 64f0d0 <rename@GLIBC_2.2.5>
  4017e6:	68 17 00 00 00       	pushq  $0x17
  4017eb:	e9 70 fe ff ff       	jmpq   401660 <.plt>

00000000004017f0 <clock@plt>:
  4017f0:	ff 25 e2 d8 24 00    	jmpq   *0x24d8e2(%rip)        # 64f0d8 <clock@GLIBC_2.2.5>
  4017f6:	68 18 00 00 00       	pushq  $0x18
  4017fb:	e9 60 fe ff ff       	jmpq   401660 <.plt>

0000000000401800 <mktime@plt>:
  401800:	ff 25 da d8 24 00    	jmpq   *0x24d8da(%rip)        # 64f0e0 <mktime@GLIBC_2.2.5>
  401806:	68 19 00 00 00       	pushq  $0x19
  40180b:	e9 50 fe ff ff       	jmpq   401660 <.plt>

0000000000401810 <localtime@plt>:
  401810:	ff 25 d2 d8 24 00    	jmpq   *0x24d8d2(%rip)        # 64f0e8 <localtime@GLIBC_2.2.5>
  401816:	68 1a 00 00 00       	pushq  $0x1a
  40181b:	e9 40 fe ff ff       	jmpq   401660 <.plt>

0000000000401820 <strtod@plt>:
  401820:	ff 25 ca d8 24 00    	jmpq   *0x24d8ca(%rip)        # 64f0f0 <strtod@GLIBC_2.2.5>
  401826:	68 1b 00 00 00       	pushq  $0x1b
  40182b:	e9 30 fe ff ff       	jmpq   401660 <.plt>

0000000000401830 <sqrt@plt>:
  401830:	ff 25 c2 d8 24 00    	jmpq   *0x24d8c2(%rip)        # 64f0f8 <sqrt@GLIBC_2.2.5>
  401836:	68 1c 00 00 00       	pushq  $0x1c
  40183b:	e9 20 fe ff ff       	jmpq   401660 <.plt>

0000000000401840 <strftime@plt>:
  401840:	ff 25 ba d8 24 00    	jmpq   *0x24d8ba(%rip)        # 64f100 <strftime@GLIBC_2.2.5>
  401846:	68 1d 00 00 00       	pushq  $0x1d
  40184b:	e9 10 fe ff ff       	jmpq   401660 <.plt>

0000000000401850 <tmpnam@plt>:
  401850:	ff 25 b2 d8 24 00    	jmpq   *0x24d8b2(%rip)        # 64f108 <tmpnam@GLIBC_2.2.5>
  401856:	68 1e 00 00 00       	pushq  $0x1e
  40185b:	e9 00 fe ff ff       	jmpq   401660 <.plt>

0000000000401860 <memcpy@plt>:
  401860:	ff 25 aa d8 24 00    	jmpq   *0x24d8aa(%rip)        # 64f110 <memcpy@GLIBC_2.14>
  401866:	68 1f 00 00 00       	pushq  $0x1f
  40186b:	e9 f0 fd ff ff       	jmpq   401660 <.plt>

0000000000401870 <system@plt>:
  401870:	ff 25 a2 d8 24 00    	jmpq   *0x24d8a2(%rip)        # 64f118 <system@GLIBC_2.2.5>
  401876:	68 20 00 00 00       	pushq  $0x20
  40187b:	e9 e0 fd ff ff       	jmpq   401660 <.plt>

0000000000401880 <gmtime@plt>:
  401880:	ff 25 9a d8 24 00    	jmpq   *0x24d89a(%rip)        # 64f120 <gmtime@GLIBC_2.2.5>
  401886:	68 21 00 00 00       	pushq  $0x21
  40188b:	e9 d0 fd ff ff       	jmpq   401660 <.plt>

0000000000401890 <setlocale@plt>:
  401890:	ff 25 92 d8 24 00    	jmpq   *0x24d892(%rip)        # 64f128 <setlocale@GLIBC_2.2.5>
  401896:	68 22 00 00 00       	pushq  $0x22
  40189b:	e9 c0 fd ff ff       	jmpq   401660 <.plt>

00000000004018a0 <pow@plt>:
  4018a0:	ff 25 8a d8 24 00    	jmpq   *0x24d88a(%rip)        # 64f130 <pow@GLIBC_2.2.5>
  4018a6:	68 23 00 00 00       	pushq  $0x23
  4018ab:	e9 b0 fd ff ff       	jmpq   401660 <.plt>

00000000004018b0 <time@plt>:
  4018b0:	ff 25 82 d8 24 00    	jmpq   *0x24d882(%rip)        # 64f138 <time@GLIBC_2.2.5>
  4018b6:	68 24 00 00 00       	pushq  $0x24
  4018bb:	e9 a0 fd ff ff       	jmpq   401660 <.plt>

00000000004018c0 <strcpy@plt>:
  4018c0:	ff 25 7a d8 24 00    	jmpq   *0x24d87a(%rip)        # 64f140 <strcpy@GLIBC_2.2.5>
  4018c6:	68 25 00 00 00       	pushq  $0x25
  4018cb:	e9 90 fd ff ff       	jmpq   401660 <.plt>

00000000004018d0 <freopen64@plt>:
  4018d0:	ff 25 72 d8 24 00    	jmpq   *0x24d872(%rip)        # 64f148 <freopen64@GLIBC_2.2.5>
  4018d6:	68 26 00 00 00       	pushq  $0x26
  4018db:	e9 80 fd ff ff       	jmpq   401660 <.plt>

00000000004018e0 <acos@plt>:
  4018e0:	ff 25 6a d8 24 00    	jmpq   *0x24d86a(%rip)        # 64f150 <acos@GLIBC_2.2.5>
  4018e6:	68 27 00 00 00       	pushq  $0x27
  4018eb:	e9 70 fd ff ff       	jmpq   401660 <.plt>

00000000004018f0 <fclose@plt>:
  4018f0:	ff 25 62 d8 24 00    	jmpq   *0x24d862(%rip)        # 64f158 <fclose@GLIBC_2.2.5>
  4018f6:	68 28 00 00 00       	pushq  $0x28
  4018fb:	e9 60 fd ff ff       	jmpq   401660 <.plt>

0000000000401900 <__ctype_b_loc@plt>:
  401900:	ff 25 5a d8 24 00    	jmpq   *0x24d85a(%rip)        # 64f160 <__ctype_b_loc@GLIBC_2.3>
  401906:	68 29 00 00 00       	pushq  $0x29
  40190b:	e9 50 fd ff ff       	jmpq   401660 <.plt>

0000000000401910 <fseek@plt>:
  401910:	ff 25 52 d8 24 00    	jmpq   *0x24d852(%rip)        # 64f168 <fseek@GLIBC_2.2.5>
  401916:	68 2a 00 00 00       	pushq  $0x2a
  40191b:	e9 40 fd ff ff       	jmpq   401660 <.plt>

0000000000401920 <memchr@plt>:
  401920:	ff 25 4a d8 24 00    	jmpq   *0x24d84a(%rip)        # 64f170 <memchr@GLIBC_2.2.5>
  401926:	68 2b 00 00 00       	pushq  $0x2b
  40192b:	e9 30 fd ff ff       	jmpq   401660 <.plt>

0000000000401930 <fopen64@plt>:
  401930:	ff 25 42 d8 24 00    	jmpq   *0x24d842(%rip)        # 64f178 <fopen64@GLIBC_2.2.5>
  401936:	68 2c 00 00 00       	pushq  $0x2c
  40193b:	e9 20 fd ff ff       	jmpq   401660 <.plt>

0000000000401940 <fputs@plt>:
  401940:	ff 25 3a d8 24 00    	jmpq   *0x24d83a(%rip)        # 64f180 <fputs@GLIBC_2.2.5>
  401946:	68 2d 00 00 00       	pushq  $0x2d
  40194b:	e9 10 fd ff ff       	jmpq   401660 <.plt>

0000000000401950 <fflush@plt>:
  401950:	ff 25 32 d8 24 00    	jmpq   *0x24d832(%rip)        # 64f188 <fflush@GLIBC_2.2.5>
  401956:	68 2e 00 00 00       	pushq  $0x2e
  40195b:	e9 00 fd ff ff       	jmpq   401660 <.plt>

0000000000401960 <free@plt>:
  401960:	ff 25 2a d8 24 00    	jmpq   *0x24d82a(%rip)        # 64f190 <free@GLIBC_2.2.5>
  401966:	68 2f 00 00 00       	pushq  $0x2f
  40196b:	e9 f0 fc ff ff       	jmpq   401660 <.plt>

0000000000401970 <exit@plt>:
  401970:	ff 25 22 d8 24 00    	jmpq   *0x24d822(%rip)        # 64f198 <exit@GLIBC_2.2.5>
  401976:	68 30 00 00 00       	pushq  $0x30
  40197b:	e9 e0 fc ff ff       	jmpq   401660 <.plt>

0000000000401980 <getenv@plt>:
  401980:	ff 25 1a d8 24 00    	jmpq   *0x24d81a(%rip)        # 64f1a0 <getenv@GLIBC_2.2.5>
  401986:	68 31 00 00 00       	pushq  $0x31
  40198b:	e9 d0 fc ff ff       	jmpq   401660 <.plt>

0000000000401990 <fputc@plt>:
  401990:	ff 25 12 d8 24 00    	jmpq   *0x24d812(%rip)        # 64f1a8 <fputc@GLIBC_2.2.5>
  401996:	68 32 00 00 00       	pushq  $0x32
  40199b:	e9 c0 fc ff ff       	jmpq   401660 <.plt>

00000000004019a0 <exp@plt>:
  4019a0:	ff 25 0a d8 24 00    	jmpq   *0x24d80a(%rip)        # 64f1b0 <exp@GLIBC_2.2.5>
  4019a6:	68 33 00 00 00       	pushq  $0x33
  4019ab:	e9 b0 fc ff ff       	jmpq   401660 <.plt>

00000000004019b0 <fmod@plt>:
  4019b0:	ff 25 02 d8 24 00    	jmpq   *0x24d802(%rip)        # 64f1b8 <fmod@GLIBC_2.2.5>
  4019b6:	68 34 00 00 00       	pushq  $0x34
  4019bb:	e9 a0 fc ff ff       	jmpq   401660 <.plt>

00000000004019c0 <strcmp@plt>:
  4019c0:	ff 25 fa d7 24 00    	jmpq   *0x24d7fa(%rip)        # 64f1c0 <strcmp@GLIBC_2.2.5>
  4019c6:	68 35 00 00 00       	pushq  $0x35
  4019cb:	e9 90 fc ff ff       	jmpq   401660 <.plt>

00000000004019d0 <fprintf@plt>:
  4019d0:	ff 25 f2 d7 24 00    	jmpq   *0x24d7f2(%rip)        # 64f1c8 <fprintf@GLIBC_2.2.5>
  4019d6:	68 36 00 00 00       	pushq  $0x36
  4019db:	e9 80 fc ff ff       	jmpq   401660 <.plt>

00000000004019e0 <_setjmp@plt>:
  4019e0:	ff 25 ea d7 24 00    	jmpq   *0x24d7ea(%rip)        # 64f1d0 <_setjmp@GLIBC_2.2.5>
  4019e6:	68 37 00 00 00       	pushq  $0x37
  4019eb:	e9 70 fc ff ff       	jmpq   401660 <.plt>

00000000004019f0 <tolower@plt>:
  4019f0:	ff 25 e2 d7 24 00    	jmpq   *0x24d7e2(%rip)        # 64f1d8 <tolower@GLIBC_2.2.5>
  4019f6:	68 38 00 00 00       	pushq  $0x38
  4019fb:	e9 60 fc ff ff       	jmpq   401660 <.plt>

0000000000401a00 <fread@plt>:
  401a00:	ff 25 da d7 24 00    	jmpq   *0x24d7da(%rip)        # 64f1e0 <fread@GLIBC_2.2.5>
  401a06:	68 39 00 00 00       	pushq  $0x39
  401a0b:	e9 50 fc ff ff       	jmpq   401660 <.plt>

0000000000401a10 <ldexp@plt>:
  401a10:	ff 25 d2 d7 24 00    	jmpq   *0x24d7d2(%rip)        # 64f1e8 <ldexp@GLIBC_2.2.5>
  401a16:	68 3a 00 00 00       	pushq  $0x3a
  401a1b:	e9 40 fc ff ff       	jmpq   401660 <.plt>

0000000000401a20 <log2@plt>:
  401a20:	ff 25 ca d7 24 00    	jmpq   *0x24d7ca(%rip)        # 64f1f0 <log2@GLIBC_2.2.5>
  401a26:	68 3b 00 00 00       	pushq  $0x3b
  401a2b:	e9 30 fc ff ff       	jmpq   401660 <.plt>

0000000000401a30 <feof@plt>:
  401a30:	ff 25 c2 d7 24 00    	jmpq   *0x24d7c2(%rip)        # 64f1f8 <feof@GLIBC_2.2.5>
  401a36:	68 3c 00 00 00       	pushq  $0x3c
  401a3b:	e9 20 fc ff ff       	jmpq   401660 <.plt>

0000000000401a40 <fgets@plt>:
  401a40:	ff 25 ba d7 24 00    	jmpq   *0x24d7ba(%rip)        # 64f200 <fgets@GLIBC_2.2.5>
  401a46:	68 3d 00 00 00       	pushq  $0x3d
  401a4b:	e9 10 fc ff ff       	jmpq   401660 <.plt>

0000000000401a50 <snprintf@plt>:
  401a50:	ff 25 b2 d7 24 00    	jmpq   *0x24d7b2(%rip)        # 64f208 <snprintf@GLIBC_2.2.5>
  401a56:	68 3e 00 00 00       	pushq  $0x3e
  401a5b:	e9 00 fc ff ff       	jmpq   401660 <.plt>

0000000000401a60 <realloc@plt>:
  401a60:	ff 25 aa d7 24 00    	jmpq   *0x24d7aa(%rip)        # 64f210 <realloc@GLIBC_2.2.5>
  401a66:	68 3f 00 00 00       	pushq  $0x3f
  401a6b:	e9 f0 fb ff ff       	jmpq   401660 <.plt>

0000000000401a70 <asin@plt>:
  401a70:	ff 25 a2 d7 24 00    	jmpq   *0x24d7a2(%rip)        # 64f218 <asin@GLIBC_2.2.5>
  401a76:	68 40 00 00 00       	pushq  $0x40
  401a7b:	e9 e0 fb ff ff       	jmpq   401660 <.plt>

0000000000401a80 <floor@plt>:
  401a80:	ff 25 9a d7 24 00    	jmpq   *0x24d79a(%rip)        # 64f220 <floor@GLIBC_2.2.5>
  401a86:	68 41 00 00 00       	pushq  $0x41
  401a8b:	e9 d0 fb ff ff       	jmpq   401660 <.plt>

0000000000401a90 <strpbrk@plt>:
  401a90:	ff 25 92 d7 24 00    	jmpq   *0x24d792(%rip)        # 64f228 <strpbrk@GLIBC_2.2.5>
  401a96:	68 42 00 00 00       	pushq  $0x42
  401a9b:	e9 c0 fb ff ff       	jmpq   401660 <.plt>

0000000000401aa0 <tmpfile64@plt>:
  401aa0:	ff 25 8a d7 24 00    	jmpq   *0x24d78a(%rip)        # 64f230 <tmpfile64@GLIBC_2.2.5>
  401aa6:	68 43 00 00 00       	pushq  $0x43
  401aab:	e9 b0 fb ff ff       	jmpq   401660 <.plt>

0000000000401ab0 <remove@plt>:
  401ab0:	ff 25 82 d7 24 00    	jmpq   *0x24d782(%rip)        # 64f238 <remove@GLIBC_2.2.5>
  401ab6:	68 44 00 00 00       	pushq  $0x44
  401abb:	e9 a0 fb ff ff       	jmpq   401660 <.plt>

0000000000401ac0 <__sysv_signal@plt>:
  401ac0:	ff 25 7a d7 24 00    	jmpq   *0x24d77a(%rip)        # 64f240 <__sysv_signal@GLIBC_2.2.5>
  401ac6:	68 45 00 00 00       	pushq  $0x45
  401acb:	e9 90 fb ff ff       	jmpq   401660 <.plt>

0000000000401ad0 <toupper@plt>:
  401ad0:	ff 25 72 d7 24 00    	jmpq   *0x24d772(%rip)        # 64f248 <toupper@GLIBC_2.2.5>
  401ad6:	68 46 00 00 00       	pushq  $0x46
  401adb:	e9 80 fb ff ff       	jmpq   401660 <.plt>

0000000000401ae0 <frexp@plt>:
  401ae0:	ff 25 6a d7 24 00    	jmpq   *0x24d76a(%rip)        # 64f250 <frexp@GLIBC_2.2.5>
  401ae6:	68 47 00 00 00       	pushq  $0x47
  401aeb:	e9 70 fb ff ff       	jmpq   401660 <.plt>

0000000000401af0 <cos@plt>:
  401af0:	ff 25 62 d7 24 00    	jmpq   *0x24d762(%rip)        # 64f258 <cos@GLIBC_2.2.5>
  401af6:	68 48 00 00 00       	pushq  $0x48
  401afb:	e9 60 fb ff ff       	jmpq   401660 <.plt>

0000000000401b00 <ferror@plt>:
  401b00:	ff 25 5a d7 24 00    	jmpq   *0x24d75a(%rip)        # 64f260 <ferror@GLIBC_2.2.5>
  401b06:	68 49 00 00 00       	pushq  $0x49
  401b0b:	e9 50 fb ff ff       	jmpq   401660 <.plt>

0000000000401b10 <localeconv@plt>:
  401b10:	ff 25 52 d7 24 00    	jmpq   *0x24d752(%rip)        # 64f268 <localeconv@GLIBC_2.2.5>
  401b16:	68 4a 00 00 00       	pushq  $0x4a
  401b1b:	e9 40 fb ff ff       	jmpq   401660 <.plt>

0000000000401b20 <fwrite@plt>:
  401b20:	ff 25 4a d7 24 00    	jmpq   *0x24d74a(%rip)        # 64f270 <fwrite@GLIBC_2.2.5>
  401b26:	68 4b 00 00 00       	pushq  $0x4b
  401b2b:	e9 30 fb ff ff       	jmpq   401660 <.plt>

Disassembly of section .text:

0000000000401b30 <_start>:
  401b30:	f3 0f 1e fa          	endbr64 
  401b34:	31 ed                	xor    %ebp,%ebp
  401b36:	49 89 d1             	mov    %rdx,%r9
  401b39:	5e                   	pop    %rsi
  401b3a:	48 89 e2             	mov    %rsp,%rdx
  401b3d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401b41:	50                   	push   %rax
  401b42:	54                   	push   %rsp
  401b43:	49 c7 c0 20 cd 43 00 	mov    $0x43cd20,%r8
  401b4a:	48 c7 c1 b0 cc 43 00 	mov    $0x43ccb0,%rcx
  401b51:	48 c7 c7 3d cc 43 00 	mov    $0x43cc3d,%rdi
  401b58:	ff 15 8a d4 24 00    	callq  *0x24d48a(%rip)        # 64efe8 <__libc_start_main@GLIBC_2.2.5>
  401b5e:	f4                   	hlt    

0000000000401b5f <.annobin_init.c>:
  401b5f:	90                   	nop

0000000000401b60 <_dl_relocate_static_pie>:
  401b60:	f3 0f 1e fa          	endbr64 
  401b64:	c3                   	retq   

0000000000401b65 <.annobin__dl_relocate_static_pie.end>:
  401b65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b6c:	00 00 00 
  401b6f:	90                   	nop

0000000000401b70 <deregister_tm_clones>:
  401b70:	48 8d 3d 11 d7 24 00 	lea    0x24d711(%rip),%rdi        # 64f288 <__TMC_END__>
  401b77:	48 8d 05 0a d7 24 00 	lea    0x24d70a(%rip),%rax        # 64f288 <__TMC_END__>
  401b7e:	48 39 f8             	cmp    %rdi,%rax
  401b81:	74 15                	je     401b98 <deregister_tm_clones+0x28>
  401b83:	48 8b 05 56 d4 24 00 	mov    0x24d456(%rip),%rax        # 64efe0 <_ITM_deregisterTMCloneTable@Base>
  401b8a:	48 85 c0             	test   %rax,%rax
  401b8d:	74 09                	je     401b98 <deregister_tm_clones+0x28>
  401b8f:	ff e0                	jmpq   *%rax
  401b91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b98:	c3                   	retq   
  401b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401ba0 <register_tm_clones>:
  401ba0:	48 8d 3d e1 d6 24 00 	lea    0x24d6e1(%rip),%rdi        # 64f288 <__TMC_END__>
  401ba7:	48 8d 35 da d6 24 00 	lea    0x24d6da(%rip),%rsi        # 64f288 <__TMC_END__>
  401bae:	48 29 fe             	sub    %rdi,%rsi
  401bb1:	48 c1 fe 03          	sar    $0x3,%rsi
  401bb5:	48 89 f0             	mov    %rsi,%rax
  401bb8:	48 c1 e8 3f          	shr    $0x3f,%rax
  401bbc:	48 01 c6             	add    %rax,%rsi
  401bbf:	48 d1 fe             	sar    %rsi
  401bc2:	74 14                	je     401bd8 <register_tm_clones+0x38>
  401bc4:	48 8b 05 2d d4 24 00 	mov    0x24d42d(%rip),%rax        # 64eff8 <_ITM_registerTMCloneTable@Base>
  401bcb:	48 85 c0             	test   %rax,%rax
  401bce:	74 08                	je     401bd8 <register_tm_clones+0x38>
  401bd0:	ff e0                	jmpq   *%rax
  401bd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401bd8:	c3                   	retq   
  401bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401be0 <__do_global_dtors_aux>:
  401be0:	f3 0f 1e fa          	endbr64 
  401be4:	80 3d dd d6 24 00 00 	cmpb   $0x0,0x24d6dd(%rip)        # 64f2c8 <completed.7303>
  401beb:	75 13                	jne    401c00 <__do_global_dtors_aux+0x20>
  401bed:	55                   	push   %rbp
  401bee:	48 89 e5             	mov    %rsp,%rbp
  401bf1:	e8 7a ff ff ff       	callq  401b70 <deregister_tm_clones>
  401bf6:	c6 05 cb d6 24 00 01 	movb   $0x1,0x24d6cb(%rip)        # 64f2c8 <completed.7303>
  401bfd:	5d                   	pop    %rbp
  401bfe:	c3                   	retq   
  401bff:	90                   	nop
  401c00:	c3                   	retq   
  401c01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401c08:	00 00 00 00 
  401c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c10 <frame_dummy>:
  401c10:	f3 0f 1e fa          	endbr64 
  401c14:	eb 8a                	jmp    401ba0 <register_tm_clones>

0000000000401c16 <index2value>:
  401c16:	55                   	push   %rbp
  401c17:	48 89 e5             	mov    %rsp,%rbp
  401c1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401c1e:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  401c21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401c25:	48 8b 40 20          	mov    0x20(%rax),%rax
  401c29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401c2d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  401c31:	7e 40                	jle    401c73 <index2value+0x5d>
  401c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c37:	48 8b 00             	mov    (%rax),%rax
  401c3a:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  401c3d:	48 63 d2             	movslq %edx,%rdx
  401c40:	48 c1 e2 04          	shl    $0x4,%rdx
  401c44:	48 01 d0             	add    %rdx,%rax
  401c47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401c4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401c4f:	48 8b 40 10          	mov    0x10(%rax),%rax
  401c53:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  401c57:	72 11                	jb     401c6a <index2value+0x54>
  401c59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401c5d:	48 8b 40 18          	mov    0x18(%rax),%rax
  401c61:	48 83 c0 50          	add    $0x50,%rax
  401c65:	e9 b1 00 00 00       	jmpq   401d1b <index2value+0x105>
  401c6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401c6e:	e9 a8 00 00 00       	jmpq   401d1b <index2value+0x105>
  401c73:	81 7d d4 d9 b9 f0 ff 	cmpl   $0xfff0b9d9,-0x2c(%rbp)
  401c7a:	7c 1a                	jl     401c96 <index2value+0x80>
  401c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401c80:	48 8b 40 10          	mov    0x10(%rax),%rax
  401c84:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  401c87:	48 63 d2             	movslq %edx,%rdx
  401c8a:	48 c1 e2 04          	shl    $0x4,%rdx
  401c8e:	48 01 d0             	add    %rdx,%rax
  401c91:	e9 85 00 00 00       	jmpq   401d1b <index2value+0x105>
  401c96:	81 7d d4 d8 b9 f0 ff 	cmpl   $0xfff0b9d8,-0x2c(%rbp)
  401c9d:	75 0e                	jne    401cad <index2value+0x97>
  401c9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401ca3:	48 8b 40 18          	mov    0x18(%rax),%rax
  401ca7:	48 83 c0 40          	add    $0x40,%rax
  401cab:	eb 6e                	jmp    401d1b <index2value+0x105>
  401cad:	b8 d8 b9 f0 ff       	mov    $0xfff0b9d8,%eax
  401cb2:	2b 45 d4             	sub    -0x2c(%rbp),%eax
  401cb5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  401cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401cbc:	48 8b 00             	mov    (%rax),%rax
  401cbf:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  401cc3:	3c 66                	cmp    $0x66,%al
  401cc5:	75 48                	jne    401d0f <index2value+0xf9>
  401cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ccb:	48 8b 00             	mov    (%rax),%rax
  401cce:	48 8b 00             	mov    (%rax),%rax
  401cd1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401cd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401cd9:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  401cdd:	0f b6 c0             	movzbl %al,%eax
  401ce0:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  401ce3:	7f 1c                	jg     401d01 <index2value+0xeb>
  401ce5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401ce8:	83 e8 01             	sub    $0x1,%eax
  401ceb:	48 98                	cltq   
  401ced:	48 83 c0 02          	add    $0x2,%rax
  401cf1:	48 c1 e0 04          	shl    $0x4,%rax
  401cf5:	48 89 c2             	mov    %rax,%rdx
  401cf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401cfc:	48 01 d0             	add    %rdx,%rax
  401cff:	eb 1a                	jmp    401d1b <index2value+0x105>
  401d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401d05:	48 8b 40 18          	mov    0x18(%rax),%rax
  401d09:	48 83 c0 50          	add    $0x50,%rax
  401d0d:	eb 0c                	jmp    401d1b <index2value+0x105>
  401d0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401d13:	48 8b 40 18          	mov    0x18(%rax),%rax
  401d17:	48 83 c0 50          	add    $0x50,%rax
  401d1b:	5d                   	pop    %rbp
  401d1c:	c3                   	retq   

0000000000401d1d <index2stack>:
  401d1d:	55                   	push   %rbp
  401d1e:	48 89 e5             	mov    %rsp,%rbp
  401d21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401d25:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d2c:	48 8b 40 20          	mov    0x20(%rax),%rax
  401d30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401d34:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  401d38:	7e 1e                	jle    401d58 <index2stack+0x3b>
  401d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d3e:	48 8b 00             	mov    (%rax),%rax
  401d41:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401d44:	48 63 d2             	movslq %edx,%rdx
  401d47:	48 c1 e2 04          	shl    $0x4,%rdx
  401d4b:	48 01 d0             	add    %rdx,%rax
  401d4e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401d52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d56:	eb 15                	jmp    401d6d <index2stack+0x50>
  401d58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d5c:	48 8b 40 10          	mov    0x10(%rax),%rax
  401d60:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401d63:	48 63 d2             	movslq %edx,%rdx
  401d66:	48 c1 e2 04          	shl    $0x4,%rdx
  401d6a:	48 01 d0             	add    %rdx,%rax
  401d6d:	5d                   	pop    %rbp
  401d6e:	c3                   	retq   

0000000000401d6f <lua_checkstack>:
  401d6f:	55                   	push   %rbp
  401d70:	48 89 e5             	mov    %rsp,%rbp
  401d73:	48 83 ec 20          	sub    $0x20,%rsp
  401d77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401d7b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401d7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d82:	48 8b 40 20          	mov    0x20(%rax),%rax
  401d86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401d8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d8e:	48 8b 50 28          	mov    0x28(%rax),%rdx
  401d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d96:	48 8b 40 10          	mov    0x10(%rax),%rax
  401d9a:	48 29 c2             	sub    %rax,%rdx
  401d9d:	48 89 d0             	mov    %rdx,%rax
  401da0:	48 c1 f8 04          	sar    $0x4,%rax
  401da4:	48 89 c2             	mov    %rax,%rdx
  401da7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401daa:	48 98                	cltq   
  401dac:	48 39 c2             	cmp    %rax,%rdx
  401daf:	7e 09                	jle    401dba <lua_checkstack+0x4b>
  401db1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401db8:	eb 19                	jmp    401dd3 <lua_checkstack+0x64>
  401dba:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  401dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401dc1:	ba 00 00 00 00       	mov    $0x0,%edx
  401dc6:	89 ce                	mov    %ecx,%esi
  401dc8:	48 89 c7             	mov    %rax,%rdi
  401dcb:	e8 6a f8 00 00       	callq  41163a <luaD_growstack>
  401dd0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401dd3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  401dd7:	74 3f                	je     401e18 <lua_checkstack+0xa9>
  401dd9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401ddd:	48 8b 50 08          	mov    0x8(%rax),%rdx
  401de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401de5:	48 8b 40 10          	mov    0x10(%rax),%rax
  401de9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  401dec:	48 63 c9             	movslq %ecx,%rcx
  401def:	48 c1 e1 04          	shl    $0x4,%rcx
  401df3:	48 01 c8             	add    %rcx,%rax
  401df6:	48 39 c2             	cmp    %rax,%rdx
  401df9:	73 1d                	jae    401e18 <lua_checkstack+0xa9>
  401dfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401dff:	48 8b 40 10          	mov    0x10(%rax),%rax
  401e03:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401e06:	48 63 d2             	movslq %edx,%rdx
  401e09:	48 c1 e2 04          	shl    $0x4,%rdx
  401e0d:	48 01 c2             	add    %rax,%rdx
  401e10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e14:	48 89 50 08          	mov    %rdx,0x8(%rax)
  401e18:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401e1b:	c9                   	leaveq 
  401e1c:	c3                   	retq   

0000000000401e1d <lua_xmove>:
  401e1d:	55                   	push   %rbp
  401e1e:	48 89 e5             	mov    %rsp,%rbp
  401e21:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401e25:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  401e29:	89 55 cc             	mov    %edx,-0x34(%rbp)
  401e2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401e30:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  401e34:	0f 84 8d 00 00 00    	je     401ec7 <lua_xmove+0xaa>
  401e3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401e3e:	48 8b 40 10          	mov    0x10(%rax),%rax
  401e42:	8b 55 cc             	mov    -0x34(%rbp),%edx
  401e45:	48 63 d2             	movslq %edx,%rdx
  401e48:	48 c1 e2 04          	shl    $0x4,%rdx
  401e4c:	48 f7 da             	neg    %rdx
  401e4f:	48 01 c2             	add    %rax,%rdx
  401e52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401e56:	48 89 50 10          	mov    %rdx,0x10(%rax)
  401e5a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401e61:	eb 5a                	jmp    401ebd <lua_xmove+0xa0>
  401e63:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401e67:	48 8b 40 10          	mov    0x10(%rax),%rax
  401e6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401e6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401e73:	48 8b 40 10          	mov    0x10(%rax),%rax
  401e77:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401e7a:	48 63 d2             	movslq %edx,%rdx
  401e7d:	48 c1 e2 04          	shl    $0x4,%rdx
  401e81:	48 01 d0             	add    %rdx,%rax
  401e84:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401e88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401e90:	48 8b 12             	mov    (%rdx),%rdx
  401e93:	48 89 10             	mov    %rdx,(%rax)
  401e96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e9a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  401e9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401ea2:	88 50 08             	mov    %dl,0x8(%rax)
  401ea5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401ea9:	48 8b 40 10          	mov    0x10(%rax),%rax
  401ead:	48 8d 50 10          	lea    0x10(%rax),%rdx
  401eb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401eb5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  401eb9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401ebd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401ec0:	3b 45 cc             	cmp    -0x34(%rbp),%eax
  401ec3:	7c 9e                	jl     401e63 <lua_xmove+0x46>
  401ec5:	eb 01                	jmp    401ec8 <lua_xmove+0xab>
  401ec7:	90                   	nop
  401ec8:	5d                   	pop    %rbp
  401ec9:	c3                   	retq   

0000000000401eca <lua_atpanic>:
  401eca:	55                   	push   %rbp
  401ecb:	48 89 e5             	mov    %rsp,%rbp
  401ece:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401ed2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401ed6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401eda:	48 8b 40 18          	mov    0x18(%rax),%rax
  401ede:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
  401ee5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401eed:	48 8b 40 18          	mov    0x18(%rax),%rax
  401ef1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401ef5:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)
  401efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f00:	5d                   	pop    %rbp
  401f01:	c3                   	retq   

0000000000401f02 <lua_version>:
  401f02:	55                   	push   %rbp
  401f03:	48 89 e5             	mov    %rsp,%rbp
  401f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401f0a:	f2 0f 10 05 4e af 03 	movsd  0x3af4e(%rip),%xmm0        # 43ce60 <nullup.4455+0x8>
  401f11:	00 
  401f12:	5d                   	pop    %rbp
  401f13:	c3                   	retq   

0000000000401f14 <lua_absindex>:
  401f14:	55                   	push   %rbp
  401f15:	48 89 e5             	mov    %rsp,%rbp
  401f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401f1c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  401f1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  401f23:	7f 2f                	jg     401f54 <lua_absindex+0x40>
  401f25:	81 7d f4 d9 b9 f0 ff 	cmpl   $0xfff0b9d9,-0xc(%rbp)
  401f2c:	7c 26                	jl     401f54 <lua_absindex+0x40>
  401f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f32:	48 8b 50 10          	mov    0x10(%rax),%rdx
  401f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f3a:	48 8b 40 20          	mov    0x20(%rax),%rax
  401f3e:	48 8b 00             	mov    (%rax),%rax
  401f41:	48 29 c2             	sub    %rax,%rdx
  401f44:	48 89 d0             	mov    %rdx,%rax
  401f47:	48 c1 f8 04          	sar    $0x4,%rax
  401f4b:	89 c2                	mov    %eax,%edx
  401f4d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401f50:	01 d0                	add    %edx,%eax
  401f52:	eb 03                	jmp    401f57 <lua_absindex+0x43>
  401f54:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401f57:	5d                   	pop    %rbp
  401f58:	c3                   	retq   

0000000000401f59 <lua_gettop>:
  401f59:	55                   	push   %rbp
  401f5a:	48 89 e5             	mov    %rsp,%rbp
  401f5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f65:	48 8b 50 10          	mov    0x10(%rax),%rdx
  401f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f6d:	48 8b 40 20          	mov    0x20(%rax),%rax
  401f71:	48 8b 00             	mov    (%rax),%rax
  401f74:	48 83 c0 10          	add    $0x10,%rax
  401f78:	48 29 c2             	sub    %rax,%rdx
  401f7b:	48 89 d0             	mov    %rdx,%rax
  401f7e:	48 c1 f8 04          	sar    $0x4,%rax
  401f82:	5d                   	pop    %rbp
  401f83:	c3                   	retq   

0000000000401f84 <lua_settop>:
  401f84:	55                   	push   %rbp
  401f85:	48 89 e5             	mov    %rsp,%rbp
  401f88:	48 83 ec 30          	sub    $0x30,%rsp
  401f8c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401f90:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  401f93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401f97:	48 8b 40 20          	mov    0x20(%rax),%rax
  401f9b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401fa3:	48 8b 00             	mov    (%rax),%rax
  401fa6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401faa:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  401fae:	78 55                	js     402005 <lua_settop+0x81>
  401fb0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401fb3:	48 98                	cltq   
  401fb5:	48 83 c0 01          	add    $0x1,%rax
  401fb9:	48 c1 e0 04          	shl    $0x4,%rax
  401fbd:	48 89 c2             	mov    %rax,%rdx
  401fc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401fc4:	48 01 c2             	add    %rax,%rdx
  401fc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401fcb:	48 8b 40 10          	mov    0x10(%rax),%rax
  401fcf:	48 29 c2             	sub    %rax,%rdx
  401fd2:	48 89 d0             	mov    %rdx,%rax
  401fd5:	48 c1 f8 04          	sar    $0x4,%rax
  401fd9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401fdd:	eb 1d                	jmp    401ffc <lua_settop+0x78>
  401fdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401fe3:	48 8b 40 10          	mov    0x10(%rax),%rax
  401fe7:	48 8d 48 10          	lea    0x10(%rax),%rcx
  401feb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401fef:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  401ff3:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  401ff7:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
  401ffc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  402001:	7f dc                	jg     401fdf <lua_settop+0x5b>
  402003:	eb 0c                	jmp    402011 <lua_settop+0x8d>
  402005:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  402008:	83 c0 01             	add    $0x1,%eax
  40200b:	48 98                	cltq   
  40200d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  402011:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402015:	48 8b 40 10          	mov    0x10(%rax),%rax
  402019:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40201d:	48 c1 e2 04          	shl    $0x4,%rdx
  402021:	48 01 d0             	add    %rdx,%rax
  402024:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402028:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40202d:	79 2c                	jns    40205b <lua_settop+0xd7>
  40202f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402033:	48 8b 40 40          	mov    0x40(%rax),%rax
  402037:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  40203b:	77 1e                	ja     40205b <lua_settop+0xd7>
  40203d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  402041:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402045:	b9 00 00 00 00       	mov    $0x0,%ecx
  40204a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40204f:	48 89 c7             	mov    %rax,%rdi
  402052:	e8 46 25 01 00       	callq  41459d <luaF_close>
  402057:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40205b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40205f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  402063:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402067:	90                   	nop
  402068:	c9                   	leaveq 
  402069:	c3                   	retq   

000000000040206a <lua_closeslot>:
  40206a:	55                   	push   %rbp
  40206b:	48 89 e5             	mov    %rsp,%rbp
  40206e:	48 83 ec 20          	sub    $0x20,%rsp
  402072:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402076:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402079:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40207c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402080:	89 d6                	mov    %edx,%esi
  402082:	48 89 c7             	mov    %rax,%rdi
  402085:	e8 93 fc ff ff       	callq  401d1d <index2stack>
  40208a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40208e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  402092:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402096:	b9 00 00 00 00       	mov    $0x0,%ecx
  40209b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4020a0:	48 89 c7             	mov    %rax,%rdi
  4020a3:	e8 f5 24 01 00       	callq  41459d <luaF_close>
  4020a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4020ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4020b0:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4020b4:	90                   	nop
  4020b5:	c9                   	leaveq 
  4020b6:	c3                   	retq   

00000000004020b7 <reverse>:
  4020b7:	55                   	push   %rbp
  4020b8:	48 89 e5             	mov    %rsp,%rbp
  4020bb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  4020bf:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  4020c3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  4020c7:	e9 91 00 00 00       	jmpq   40215d <reverse+0xa6>
  4020cc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4020d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4020d4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4020d8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4020dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4020e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4020e4:	48 8b 12             	mov    (%rdx),%rdx
  4020e7:	48 89 10             	mov    %rdx,(%rax)
  4020ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4020ee:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4020f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4020f6:	88 50 08             	mov    %dl,0x8(%rax)
  4020f9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4020fd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402101:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  402105:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402109:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40210d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402111:	48 8b 12             	mov    (%rdx),%rdx
  402114:	48 89 10             	mov    %rdx,(%rax)
  402117:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40211b:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40211f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402123:	88 50 08             	mov    %dl,0x8(%rax)
  402126:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40212a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40212e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  402132:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  402136:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40213a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40213e:	48 8b 12             	mov    (%rdx),%rdx
  402141:	48 89 10             	mov    %rdx,(%rax)
  402144:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  402148:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40214c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402150:	88 50 08             	mov    %dl,0x8(%rax)
  402153:	48 83 45 b0 10       	addq   $0x10,-0x50(%rbp)
  402158:	48 83 6d a8 10       	subq   $0x10,-0x58(%rbp)
  40215d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  402161:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
  402165:	0f 82 61 ff ff ff    	jb     4020cc <reverse+0x15>
  40216b:	90                   	nop
  40216c:	5d                   	pop    %rbp
  40216d:	c3                   	retq   

000000000040216e <lua_rotate>:
  40216e:	55                   	push   %rbp
  40216f:	48 89 e5             	mov    %rsp,%rbp
  402172:	48 83 ec 30          	sub    $0x30,%rsp
  402176:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40217a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  40217d:	89 55 d0             	mov    %edx,-0x30(%rbp)
  402180:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402184:	48 8b 40 10          	mov    0x10(%rax),%rax
  402188:	48 83 e8 10          	sub    $0x10,%rax
  40218c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402190:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  402193:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402197:	89 d6                	mov    %edx,%esi
  402199:	48 89 c7             	mov    %rax,%rdi
  40219c:	e8 7c fb ff ff       	callq  401d1d <index2stack>
  4021a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4021a5:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
  4021a9:	78 18                	js     4021c3 <lua_rotate+0x55>
  4021ab:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4021ae:	48 98                	cltq   
  4021b0:	48 c1 e0 04          	shl    $0x4,%rax
  4021b4:	48 f7 d8             	neg    %rax
  4021b7:	48 89 c2             	mov    %rax,%rdx
  4021ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4021be:	48 01 d0             	add    %rdx,%rax
  4021c1:	eb 1a                	jmp    4021dd <lua_rotate+0x6f>
  4021c3:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4021c6:	48 98                	cltq   
  4021c8:	48 c1 e0 04          	shl    $0x4,%rax
  4021cc:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  4021d3:	48 29 c2             	sub    %rax,%rdx
  4021d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4021da:	48 01 d0             	add    %rdx,%rax
  4021dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4021e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4021e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4021e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4021ed:	48 89 ce             	mov    %rcx,%rsi
  4021f0:	48 89 c7             	mov    %rax,%rdi
  4021f3:	e8 bf fe ff ff       	callq  4020b7 <reverse>
  4021f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4021fc:	48 8d 48 10          	lea    0x10(%rax),%rcx
  402200:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  402204:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402208:	48 89 ce             	mov    %rcx,%rsi
  40220b:	48 89 c7             	mov    %rax,%rdi
  40220e:	e8 a4 fe ff ff       	callq  4020b7 <reverse>
  402213:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  402217:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40221b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40221f:	48 89 ce             	mov    %rcx,%rsi
  402222:	48 89 c7             	mov    %rax,%rdi
  402225:	e8 8d fe ff ff       	callq  4020b7 <reverse>
  40222a:	90                   	nop
  40222b:	c9                   	leaveq 
  40222c:	c3                   	retq   

000000000040222d <lua_copy>:
  40222d:	55                   	push   %rbp
  40222e:	48 89 e5             	mov    %rsp,%rbp
  402231:	48 83 ec 30          	sub    $0x30,%rsp
  402235:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  402239:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  40223c:	89 55 d0             	mov    %edx,-0x30(%rbp)
  40223f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  402242:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402246:	89 d6                	mov    %edx,%esi
  402248:	48 89 c7             	mov    %rax,%rdi
  40224b:	e8 c6 f9 ff ff       	callq  401c16 <index2value>
  402250:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402254:	8b 55 d0             	mov    -0x30(%rbp),%edx
  402257:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40225b:	89 d6                	mov    %edx,%esi
  40225d:	48 89 c7             	mov    %rax,%rdi
  402260:	e8 b1 f9 ff ff       	callq  401c16 <index2value>
  402265:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  402269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40226d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402275:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402279:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40227d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402281:	48 8b 12             	mov    (%rdx),%rdx
  402284:	48 89 10             	mov    %rdx,(%rax)
  402287:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40228b:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40228f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402293:	88 50 08             	mov    %dl,0x8(%rax)
  402296:	81 7d d0 d8 b9 f0 ff 	cmpl   $0xfff0b9d8,-0x30(%rbp)
  40229d:	7d 6d                	jge    40230c <lua_copy+0xdf>
  40229f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4022a3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4022a7:	0f b6 c0             	movzbl %al,%eax
  4022aa:	83 e0 40             	and    $0x40,%eax
  4022ad:	85 c0                	test   %eax,%eax
  4022af:	74 5b                	je     40230c <lua_copy+0xdf>
  4022b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4022b5:	48 8b 40 20          	mov    0x20(%rax),%rax
  4022b9:	48 8b 00             	mov    (%rax),%rax
  4022bc:	48 8b 00             	mov    (%rax),%rax
  4022bf:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4022c3:	0f b6 c0             	movzbl %al,%eax
  4022c6:	83 e0 20             	and    $0x20,%eax
  4022c9:	85 c0                	test   %eax,%eax
  4022cb:	74 3f                	je     40230c <lua_copy+0xdf>
  4022cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4022d1:	48 8b 00             	mov    (%rax),%rax
  4022d4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4022d8:	0f b6 c0             	movzbl %al,%eax
  4022db:	83 e0 18             	and    $0x18,%eax
  4022de:	85 c0                	test   %eax,%eax
  4022e0:	74 2a                	je     40230c <lua_copy+0xdf>
  4022e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4022e6:	48 8b 00             	mov    (%rax),%rax
  4022e9:	48 89 c2             	mov    %rax,%rdx
  4022ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4022f0:	48 8b 40 20          	mov    0x20(%rax),%rax
  4022f4:	48 8b 00             	mov    (%rax),%rax
  4022f7:	48 8b 00             	mov    (%rax),%rax
  4022fa:	48 89 c1             	mov    %rax,%rcx
  4022fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402301:	48 89 ce             	mov    %rcx,%rsi
  402304:	48 89 c7             	mov    %rax,%rdi
  402307:	e8 43 27 01 00       	callq  414a4f <luaC_barrier_>
  40230c:	90                   	nop
  40230d:	c9                   	leaveq 
  40230e:	c3                   	retq   

000000000040230f <lua_pushvalue>:
  40230f:	55                   	push   %rbp
  402310:	48 89 e5             	mov    %rsp,%rbp
  402313:	48 83 ec 20          	sub    $0x20,%rsp
  402317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40231b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40231e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402322:	48 8b 40 10          	mov    0x10(%rax),%rax
  402326:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40232a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40232d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402331:	89 d6                	mov    %edx,%esi
  402333:	48 89 c7             	mov    %rax,%rdi
  402336:	e8 db f8 ff ff       	callq  401c16 <index2value>
  40233b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40233f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402343:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402347:	48 8b 12             	mov    (%rdx),%rdx
  40234a:	48 89 10             	mov    %rdx,(%rax)
  40234d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402351:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  402355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402359:	88 50 08             	mov    %dl,0x8(%rax)
  40235c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402360:	48 8b 40 10          	mov    0x10(%rax),%rax
  402364:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40236c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402370:	90                   	nop
  402371:	c9                   	leaveq 
  402372:	c3                   	retq   

0000000000402373 <lua_type>:
  402373:	55                   	push   %rbp
  402374:	48 89 e5             	mov    %rsp,%rbp
  402377:	48 83 ec 20          	sub    $0x20,%rsp
  40237b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40237f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402382:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402385:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402389:	89 d6                	mov    %edx,%esi
  40238b:	48 89 c7             	mov    %rax,%rdi
  40238e:	e8 83 f8 ff ff       	callq  401c16 <index2value>
  402393:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40239b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40239f:	0f b6 c0             	movzbl %al,%eax
  4023a2:	83 e0 0f             	and    $0xf,%eax
  4023a5:	85 c0                	test   %eax,%eax
  4023a7:	75 12                	jne    4023bb <lua_type+0x48>
  4023a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4023ad:	48 8b 40 18          	mov    0x18(%rax),%rax
  4023b1:	48 83 c0 50          	add    $0x50,%rax
  4023b5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4023b9:	74 10                	je     4023cb <lua_type+0x58>
  4023bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4023bf:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4023c3:	0f b6 c0             	movzbl %al,%eax
  4023c6:	83 e0 0f             	and    $0xf,%eax
  4023c9:	eb 05                	jmp    4023d0 <lua_type+0x5d>
  4023cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4023d0:	c9                   	leaveq 
  4023d1:	c3                   	retq   

00000000004023d2 <lua_typename>:
  4023d2:	55                   	push   %rbp
  4023d3:	48 89 e5             	mov    %rsp,%rbp
  4023d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4023da:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4023dd:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4023e0:	83 c0 01             	add    $0x1,%eax
  4023e3:	48 98                	cltq   
  4023e5:	48 8b 04 c5 60 29 44 	mov    0x442960(,%rax,8),%rax
  4023ec:	00 
  4023ed:	5d                   	pop    %rbp
  4023ee:	c3                   	retq   

00000000004023ef <lua_iscfunction>:
  4023ef:	55                   	push   %rbp
  4023f0:	48 89 e5             	mov    %rsp,%rbp
  4023f3:	48 83 ec 20          	sub    $0x20,%rsp
  4023f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4023fb:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4023fe:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402401:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402405:	89 d6                	mov    %edx,%esi
  402407:	48 89 c7             	mov    %rax,%rdi
  40240a:	e8 07 f8 ff ff       	callq  401c16 <index2value>
  40240f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402417:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40241b:	3c 16                	cmp    $0x16,%al
  40241d:	74 0c                	je     40242b <lua_iscfunction+0x3c>
  40241f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402423:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402427:	3c 66                	cmp    $0x66,%al
  402429:	75 07                	jne    402432 <lua_iscfunction+0x43>
  40242b:	b8 01 00 00 00       	mov    $0x1,%eax
  402430:	eb 05                	jmp    402437 <lua_iscfunction+0x48>
  402432:	b8 00 00 00 00       	mov    $0x0,%eax
  402437:	c9                   	leaveq 
  402438:	c3                   	retq   

0000000000402439 <lua_isinteger>:
  402439:	55                   	push   %rbp
  40243a:	48 89 e5             	mov    %rsp,%rbp
  40243d:	48 83 ec 20          	sub    $0x20,%rsp
  402441:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402445:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402448:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40244b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40244f:	89 d6                	mov    %edx,%esi
  402451:	48 89 c7             	mov    %rax,%rdi
  402454:	e8 bd f7 ff ff       	callq  401c16 <index2value>
  402459:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40245d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402461:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402465:	3c 03                	cmp    $0x3,%al
  402467:	0f 94 c0             	sete   %al
  40246a:	0f b6 c0             	movzbl %al,%eax
  40246d:	c9                   	leaveq 
  40246e:	c3                   	retq   

000000000040246f <lua_isnumber>:
  40246f:	55                   	push   %rbp
  402470:	48 89 e5             	mov    %rsp,%rbp
  402473:	48 83 ec 20          	sub    $0x20,%rsp
  402477:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40247b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40247e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402481:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402485:	89 d6                	mov    %edx,%esi
  402487:	48 89 c7             	mov    %rax,%rdi
  40248a:	e8 87 f7 ff ff       	callq  401c16 <index2value>
  40248f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402497:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40249b:	3c 13                	cmp    $0x13,%al
  40249d:	75 14                	jne    4024b3 <lua_isnumber+0x44>
  40249f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4024a3:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4024a7:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  4024ac:	b8 01 00 00 00       	mov    $0x1,%eax
  4024b1:	eb 13                	jmp    4024c6 <lua_isnumber+0x57>
  4024b3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4024b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4024bb:	48 89 d6             	mov    %rdx,%rsi
  4024be:	48 89 c7             	mov    %rax,%rdi
  4024c1:	e8 7d 03 03 00       	callq  432843 <luaV_tonumber_>
  4024c6:	c9                   	leaveq 
  4024c7:	c3                   	retq   

00000000004024c8 <lua_isstring>:
  4024c8:	55                   	push   %rbp
  4024c9:	48 89 e5             	mov    %rsp,%rbp
  4024cc:	48 83 ec 20          	sub    $0x20,%rsp
  4024d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4024d4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4024d7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4024da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4024de:	89 d6                	mov    %edx,%esi
  4024e0:	48 89 c7             	mov    %rax,%rdi
  4024e3:	e8 2e f7 ff ff       	callq  401c16 <index2value>
  4024e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4024ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4024f0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4024f4:	0f b6 c0             	movzbl %al,%eax
  4024f7:	83 e0 0f             	and    $0xf,%eax
  4024fa:	83 f8 04             	cmp    $0x4,%eax
  4024fd:	74 13                	je     402512 <lua_isstring+0x4a>
  4024ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402503:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402507:	0f b6 c0             	movzbl %al,%eax
  40250a:	83 e0 0f             	and    $0xf,%eax
  40250d:	83 f8 03             	cmp    $0x3,%eax
  402510:	75 07                	jne    402519 <lua_isstring+0x51>
  402512:	b8 01 00 00 00       	mov    $0x1,%eax
  402517:	eb 05                	jmp    40251e <lua_isstring+0x56>
  402519:	b8 00 00 00 00       	mov    $0x0,%eax
  40251e:	c9                   	leaveq 
  40251f:	c3                   	retq   

0000000000402520 <lua_isuserdata>:
  402520:	55                   	push   %rbp
  402521:	48 89 e5             	mov    %rsp,%rbp
  402524:	48 83 ec 20          	sub    $0x20,%rsp
  402528:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40252c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40252f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402536:	89 d6                	mov    %edx,%esi
  402538:	48 89 c7             	mov    %rax,%rdi
  40253b:	e8 d6 f6 ff ff       	callq  401c16 <index2value>
  402540:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402548:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40254c:	3c 47                	cmp    $0x47,%al
  40254e:	74 0c                	je     40255c <lua_isuserdata+0x3c>
  402550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402554:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402558:	3c 02                	cmp    $0x2,%al
  40255a:	75 07                	jne    402563 <lua_isuserdata+0x43>
  40255c:	b8 01 00 00 00       	mov    $0x1,%eax
  402561:	eb 05                	jmp    402568 <lua_isuserdata+0x48>
  402563:	b8 00 00 00 00       	mov    $0x0,%eax
  402568:	c9                   	leaveq 
  402569:	c3                   	retq   

000000000040256a <lua_rawequal>:
  40256a:	55                   	push   %rbp
  40256b:	48 89 e5             	mov    %rsp,%rbp
  40256e:	48 83 ec 20          	sub    $0x20,%rsp
  402572:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402576:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402579:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40257c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40257f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402583:	89 d6                	mov    %edx,%esi
  402585:	48 89 c7             	mov    %rax,%rdi
  402588:	e8 89 f6 ff ff       	callq  401c16 <index2value>
  40258d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402591:	8b 55 e0             	mov    -0x20(%rbp),%edx
  402594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402598:	89 d6                	mov    %edx,%esi
  40259a:	48 89 c7             	mov    %rax,%rdi
  40259d:	e8 74 f6 ff ff       	callq  401c16 <index2value>
  4025a2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4025a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4025aa:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4025ae:	0f b6 c0             	movzbl %al,%eax
  4025b1:	83 e0 0f             	and    $0xf,%eax
  4025b4:	85 c0                	test   %eax,%eax
  4025b6:	75 12                	jne    4025ca <lua_rawequal+0x60>
  4025b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4025bc:	48 8b 40 18          	mov    0x18(%rax),%rax
  4025c0:	48 83 c0 50          	add    $0x50,%rax
  4025c4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4025c8:	74 3b                	je     402605 <lua_rawequal+0x9b>
  4025ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4025ce:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4025d2:	0f b6 c0             	movzbl %al,%eax
  4025d5:	83 e0 0f             	and    $0xf,%eax
  4025d8:	85 c0                	test   %eax,%eax
  4025da:	75 12                	jne    4025ee <lua_rawequal+0x84>
  4025dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4025e0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4025e4:	48 83 c0 50          	add    $0x50,%rax
  4025e8:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  4025ec:	74 17                	je     402605 <lua_rawequal+0x9b>
  4025ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4025f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4025f6:	48 89 c6             	mov    %rax,%rsi
  4025f9:	bf 00 00 00 00       	mov    $0x0,%edi
  4025fe:	e8 04 14 03 00       	callq  433a07 <luaV_equalobj>
  402603:	eb 05                	jmp    40260a <lua_rawequal+0xa0>
  402605:	b8 00 00 00 00       	mov    $0x0,%eax
  40260a:	c9                   	leaveq 
  40260b:	c3                   	retq   

000000000040260c <lua_arith>:
  40260c:	55                   	push   %rbp
  40260d:	48 89 e5             	mov    %rsp,%rbp
  402610:	48 83 ec 20          	sub    $0x20,%rsp
  402614:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402618:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40261b:	83 7d e4 0c          	cmpl   $0xc,-0x1c(%rbp)
  40261f:	74 06                	je     402627 <lua_arith+0x1b>
  402621:	83 7d e4 0d          	cmpl   $0xd,-0x1c(%rbp)
  402625:	75 4d                	jne    402674 <lua_arith+0x68>
  402627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40262b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40262f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402637:	48 8b 40 10          	mov    0x10(%rax),%rax
  40263b:	48 83 e8 10          	sub    $0x10,%rax
  40263f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  402643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402647:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40264b:	48 8b 12             	mov    (%rdx),%rdx
  40264e:	48 89 10             	mov    %rdx,(%rax)
  402651:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402655:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  402659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40265d:	88 50 08             	mov    %dl,0x8(%rax)
  402660:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402664:	48 8b 40 10          	mov    0x10(%rax),%rax
  402668:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40266c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402670:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402678:	48 8b 40 10          	mov    0x10(%rax),%rax
  40267c:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
  402680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402684:	48 8b 40 10          	mov    0x10(%rax),%rax
  402688:	48 83 e8 10          	sub    $0x10,%rax
  40268c:	48 89 c1             	mov    %rax,%rcx
  40268f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402693:	48 8b 40 10          	mov    0x10(%rax),%rax
  402697:	48 83 e8 20          	sub    $0x20,%rax
  40269b:	48 89 c7             	mov    %rax,%rdi
  40269e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4026a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4026a5:	49 89 d0             	mov    %rdx,%r8
  4026a8:	48 89 fa             	mov    %rdi,%rdx
  4026ab:	48 89 c7             	mov    %rax,%rdi
  4026ae:	e8 c1 c6 01 00       	callq  41ed74 <luaO_arith>
  4026b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4026b7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4026bb:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4026bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4026c3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4026c7:	90                   	nop
  4026c8:	c9                   	leaveq 
  4026c9:	c3                   	retq   

00000000004026ca <lua_compare>:
  4026ca:	55                   	push   %rbp
  4026cb:	48 89 e5             	mov    %rsp,%rbp
  4026ce:	48 83 ec 40          	sub    $0x40,%rsp
  4026d2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4026d6:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4026d9:	89 55 d0             	mov    %edx,-0x30(%rbp)
  4026dc:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  4026df:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4026e6:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4026e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4026ed:	89 d6                	mov    %edx,%esi
  4026ef:	48 89 c7             	mov    %rax,%rdi
  4026f2:	e8 1f f5 ff ff       	callq  401c16 <index2value>
  4026f7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4026fb:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4026fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402702:	89 d6                	mov    %edx,%esi
  402704:	48 89 c7             	mov    %rax,%rdi
  402707:	e8 0a f5 ff ff       	callq  401c16 <index2value>
  40270c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402710:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402714:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402718:	0f b6 c0             	movzbl %al,%eax
  40271b:	83 e0 0f             	and    $0xf,%eax
  40271e:	85 c0                	test   %eax,%eax
  402720:	75 16                	jne    402738 <lua_compare+0x6e>
  402722:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402726:	48 8b 40 18          	mov    0x18(%rax),%rax
  40272a:	48 83 c0 50          	add    $0x50,%rax
  40272e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  402732:	0f 84 8a 00 00 00    	je     4027c2 <lua_compare+0xf8>
  402738:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40273c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402740:	0f b6 c0             	movzbl %al,%eax
  402743:	83 e0 0f             	and    $0xf,%eax
  402746:	85 c0                	test   %eax,%eax
  402748:	75 12                	jne    40275c <lua_compare+0x92>
  40274a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40274e:	48 8b 40 18          	mov    0x18(%rax),%rax
  402752:	48 83 c0 50          	add    $0x50,%rax
  402756:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  40275a:	74 66                	je     4027c2 <lua_compare+0xf8>
  40275c:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
  402760:	74 28                	je     40278a <lua_compare+0xc0>
  402762:	83 7d cc 02          	cmpl   $0x2,-0x34(%rbp)
  402766:	74 3e                	je     4027a6 <lua_compare+0xdc>
  402768:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  40276c:	75 55                	jne    4027c3 <lua_compare+0xf9>
  40276e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402772:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402776:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40277a:	48 89 ce             	mov    %rcx,%rsi
  40277d:	48 89 c7             	mov    %rax,%rdi
  402780:	e8 82 12 03 00       	callq  433a07 <luaV_equalobj>
  402785:	89 45 fc             	mov    %eax,-0x4(%rbp)
  402788:	eb 39                	jmp    4027c3 <lua_compare+0xf9>
  40278a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40278e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402792:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402796:	48 89 ce             	mov    %rcx,%rsi
  402799:	48 89 c7             	mov    %rax,%rdi
  40279c:	e8 1b 11 03 00       	callq  4338bc <luaV_lessthan>
  4027a1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4027a4:	eb 1d                	jmp    4027c3 <lua_compare+0xf9>
  4027a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4027aa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4027ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4027b2:	48 89 ce             	mov    %rcx,%rsi
  4027b5:	48 89 c7             	mov    %rax,%rdi
  4027b8:	e8 e2 11 03 00       	callq  43399f <luaV_lessequal>
  4027bd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4027c0:	eb 01                	jmp    4027c3 <lua_compare+0xf9>
  4027c2:	90                   	nop
  4027c3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4027c6:	c9                   	leaveq 
  4027c7:	c3                   	retq   

00000000004027c8 <lua_stringtonumber>:
  4027c8:	55                   	push   %rbp
  4027c9:	48 89 e5             	mov    %rsp,%rbp
  4027cc:	48 83 ec 20          	sub    $0x20,%rsp
  4027d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4027d4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4027d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4027dc:	48 8b 40 10          	mov    0x10(%rax),%rax
  4027e0:	48 89 c2             	mov    %rax,%rdx
  4027e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4027e7:	48 89 d6             	mov    %rdx,%rsi
  4027ea:	48 89 c7             	mov    %rax,%rdi
  4027ed:	e8 64 ca 01 00       	callq  41f256 <luaO_str2num>
  4027f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4027f6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4027fb:	74 14                	je     402811 <lua_stringtonumber+0x49>
  4027fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402801:	48 8b 40 10          	mov    0x10(%rax),%rax
  402805:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402809:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40280d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402815:	c9                   	leaveq 
  402816:	c3                   	retq   

0000000000402817 <lua_tonumberx>:
  402817:	55                   	push   %rbp
  402818:	48 89 e5             	mov    %rsp,%rbp
  40281b:	48 83 ec 40          	sub    $0x40,%rsp
  40281f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  402823:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  402826:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40282a:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40282e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  402833:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  402836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40283a:	89 d6                	mov    %edx,%esi
  40283c:	48 89 c7             	mov    %rax,%rdi
  40283f:	e8 d2 f3 ff ff       	callq  401c16 <index2value>
  402844:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40284c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402850:	3c 13                	cmp    $0x13,%al
  402852:	75 14                	jne    402868 <lua_tonumberx+0x51>
  402854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402858:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40285c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  402861:	b8 01 00 00 00       	mov    $0x1,%eax
  402866:	eb 13                	jmp    40287b <lua_tonumberx+0x64>
  402868:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  40286c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402870:	48 89 d6             	mov    %rdx,%rsi
  402873:	48 89 c7             	mov    %rax,%rdi
  402876:	e8 c8 ff 02 00       	callq  432843 <luaV_tonumber_>
  40287b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40287e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  402883:	74 09                	je     40288e <lua_tonumberx+0x77>
  402885:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  402889:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40288c:	89 10                	mov    %edx,(%rax)
  40288e:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  402893:	c9                   	leaveq 
  402894:	c3                   	retq   

0000000000402895 <lua_tointegerx>:
  402895:	55                   	push   %rbp
  402896:	48 89 e5             	mov    %rsp,%rbp
  402899:	48 83 ec 40          	sub    $0x40,%rsp
  40289d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4028a1:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4028a4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4028a8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  4028af:	00 
  4028b0:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4028b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4028b7:	89 d6                	mov    %edx,%esi
  4028b9:	48 89 c7             	mov    %rax,%rdi
  4028bc:	e8 55 f3 ff ff       	callq  401c16 <index2value>
  4028c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4028c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4028c9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4028cd:	3c 03                	cmp    $0x3,%al
  4028cf:	0f 94 c0             	sete   %al
  4028d2:	0f b6 c0             	movzbl %al,%eax
  4028d5:	48 85 c0             	test   %rax,%rax
  4028d8:	74 12                	je     4028ec <lua_tointegerx+0x57>
  4028da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4028de:	48 8b 00             	mov    (%rax),%rax
  4028e1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4028e5:	b8 01 00 00 00       	mov    $0x1,%eax
  4028ea:	eb 18                	jmp    402904 <lua_tointegerx+0x6f>
  4028ec:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
  4028f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4028f4:	ba 00 00 00 00       	mov    $0x0,%edx
  4028f9:	48 89 ce             	mov    %rcx,%rsi
  4028fc:	48 89 c7             	mov    %rax,%rdi
  4028ff:	e8 c2 00 03 00       	callq  4329c6 <luaV_tointeger>
  402904:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402907:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40290c:	74 09                	je     402917 <lua_tointegerx+0x82>
  40290e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  402912:	8b 55 f4             	mov    -0xc(%rbp),%edx
  402915:	89 10                	mov    %edx,(%rax)
  402917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40291b:	c9                   	leaveq 
  40291c:	c3                   	retq   

000000000040291d <lua_toboolean>:
  40291d:	55                   	push   %rbp
  40291e:	48 89 e5             	mov    %rsp,%rbp
  402921:	48 83 ec 20          	sub    $0x20,%rsp
  402925:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402929:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40292c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40292f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402933:	89 d6                	mov    %edx,%esi
  402935:	48 89 c7             	mov    %rax,%rdi
  402938:	e8 d9 f2 ff ff       	callq  401c16 <index2value>
  40293d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402945:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402949:	3c 01                	cmp    $0x1,%al
  40294b:	74 19                	je     402966 <lua_toboolean+0x49>
  40294d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402951:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402955:	0f b6 c0             	movzbl %al,%eax
  402958:	83 e0 0f             	and    $0xf,%eax
  40295b:	85 c0                	test   %eax,%eax
  40295d:	74 07                	je     402966 <lua_toboolean+0x49>
  40295f:	b8 01 00 00 00       	mov    $0x1,%eax
  402964:	eb 05                	jmp    40296b <lua_toboolean+0x4e>
  402966:	b8 00 00 00 00       	mov    $0x0,%eax
  40296b:	c9                   	leaveq 
  40296c:	c3                   	retq   

000000000040296d <lua_tolstring>:
  40296d:	55                   	push   %rbp
  40296e:	48 89 e5             	mov    %rsp,%rbp
  402971:	48 83 ec 30          	sub    $0x30,%rsp
  402975:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402979:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40297c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  402980:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402987:	89 d6                	mov    %edx,%esi
  402989:	48 89 c7             	mov    %rax,%rdi
  40298c:	e8 85 f2 ff ff       	callq  401c16 <index2value>
  402991:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402999:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40299d:	0f b6 c0             	movzbl %al,%eax
  4029a0:	83 e0 0f             	and    $0xf,%eax
  4029a3:	83 f8 04             	cmp    $0x4,%eax
  4029a6:	74 74                	je     402a1c <lua_tolstring+0xaf>
  4029a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4029ac:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4029b0:	0f b6 c0             	movzbl %al,%eax
  4029b3:	83 e0 0f             	and    $0xf,%eax
  4029b6:	83 f8 03             	cmp    $0x3,%eax
  4029b9:	74 1c                	je     4029d7 <lua_tolstring+0x6a>
  4029bb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4029c0:	74 0b                	je     4029cd <lua_tolstring+0x60>
  4029c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4029c6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4029cd:	b8 00 00 00 00       	mov    $0x0,%eax
  4029d2:	e9 88 00 00 00       	jmpq   402a5f <lua_tolstring+0xf2>
  4029d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4029db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4029df:	48 89 d6             	mov    %rdx,%rsi
  4029e2:	48 89 c7             	mov    %rax,%rdi
  4029e5:	e8 6b ca 01 00       	callq  41f455 <luaO_tostring>
  4029ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4029ee:	48 8b 40 18          	mov    0x18(%rax),%rax
  4029f2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4029f6:	48 85 c0             	test   %rax,%rax
  4029f9:	7e 0c                	jle    402a07 <lua_tolstring+0x9a>
  4029fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4029ff:	48 89 c7             	mov    %rax,%rdi
  402a02:	e8 51 59 01 00       	callq  418358 <luaC_step>
  402a07:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402a0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402a0e:	89 d6                	mov    %edx,%esi
  402a10:	48 89 c7             	mov    %rax,%rdi
  402a13:	e8 fe f1 ff ff       	callq  401c16 <index2value>
  402a18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402a1c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  402a21:	74 31                	je     402a54 <lua_tolstring+0xe7>
  402a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402a27:	48 8b 00             	mov    (%rax),%rax
  402a2a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402a2e:	3c 04                	cmp    $0x4,%al
  402a30:	75 10                	jne    402a42 <lua_tolstring+0xd5>
  402a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402a36:	48 8b 00             	mov    (%rax),%rax
  402a39:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  402a3d:	0f b6 c0             	movzbl %al,%eax
  402a40:	eb 0b                	jmp    402a4d <lua_tolstring+0xe0>
  402a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402a46:	48 8b 00             	mov    (%rax),%rax
  402a49:	48 8b 40 10          	mov    0x10(%rax),%rax
  402a4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  402a51:	48 89 02             	mov    %rax,(%rdx)
  402a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402a58:	48 8b 00             	mov    (%rax),%rax
  402a5b:	48 83 c0 18          	add    $0x18,%rax
  402a5f:	c9                   	leaveq 
  402a60:	c3                   	retq   

0000000000402a61 <lua_rawlen>:
  402a61:	55                   	push   %rbp
  402a62:	48 89 e5             	mov    %rsp,%rbp
  402a65:	48 83 ec 20          	sub    $0x20,%rsp
  402a69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402a6d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402a70:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402a73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402a77:	89 d6                	mov    %edx,%esi
  402a79:	48 89 c7             	mov    %rax,%rdi
  402a7c:	e8 95 f1 ff ff       	callq  401c16 <index2value>
  402a81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402a85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402a89:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402a8d:	0f b6 c0             	movzbl %al,%eax
  402a90:	83 e0 3f             	and    $0x3f,%eax
  402a93:	83 f8 05             	cmp    $0x5,%eax
  402a96:	74 42                	je     402ada <lua_rawlen+0x79>
  402a98:	83 f8 05             	cmp    $0x5,%eax
  402a9b:	7f 07                	jg     402aa4 <lua_rawlen+0x43>
  402a9d:	83 f8 04             	cmp    $0x4,%eax
  402aa0:	74 0e                	je     402ab0 <lua_rawlen+0x4f>
  402aa2:	eb 47                	jmp    402aeb <lua_rawlen+0x8a>
  402aa4:	83 f8 07             	cmp    $0x7,%eax
  402aa7:	74 24                	je     402acd <lua_rawlen+0x6c>
  402aa9:	83 f8 14             	cmp    $0x14,%eax
  402aac:	74 12                	je     402ac0 <lua_rawlen+0x5f>
  402aae:	eb 3b                	jmp    402aeb <lua_rawlen+0x8a>
  402ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ab4:	48 8b 00             	mov    (%rax),%rax
  402ab7:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  402abb:	0f b6 c0             	movzbl %al,%eax
  402abe:	eb 30                	jmp    402af0 <lua_rawlen+0x8f>
  402ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ac4:	48 8b 00             	mov    (%rax),%rax
  402ac7:	48 8b 40 10          	mov    0x10(%rax),%rax
  402acb:	eb 23                	jmp    402af0 <lua_rawlen+0x8f>
  402acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ad1:	48 8b 00             	mov    (%rax),%rax
  402ad4:	48 8b 40 10          	mov    0x10(%rax),%rax
  402ad8:	eb 16                	jmp    402af0 <lua_rawlen+0x8f>
  402ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ade:	48 8b 00             	mov    (%rax),%rax
  402ae1:	48 89 c7             	mov    %rax,%rdi
  402ae4:	e8 56 b0 02 00       	callq  42db3f <luaH_getn>
  402ae9:	eb 05                	jmp    402af0 <lua_rawlen+0x8f>
  402aeb:	b8 00 00 00 00       	mov    $0x0,%eax
  402af0:	c9                   	leaveq 
  402af1:	c3                   	retq   

0000000000402af2 <lua_tocfunction>:
  402af2:	55                   	push   %rbp
  402af3:	48 89 e5             	mov    %rsp,%rbp
  402af6:	48 83 ec 20          	sub    $0x20,%rsp
  402afa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402afe:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402b01:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402b04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402b08:	89 d6                	mov    %edx,%esi
  402b0a:	48 89 c7             	mov    %rax,%rdi
  402b0d:	e8 04 f1 ff ff       	callq  401c16 <index2value>
  402b12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b1a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402b1e:	3c 16                	cmp    $0x16,%al
  402b20:	75 09                	jne    402b2b <lua_tocfunction+0x39>
  402b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b26:	48 8b 00             	mov    (%rax),%rax
  402b29:	eb 1e                	jmp    402b49 <lua_tocfunction+0x57>
  402b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b2f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402b33:	3c 66                	cmp    $0x66,%al
  402b35:	75 0d                	jne    402b44 <lua_tocfunction+0x52>
  402b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b3b:	48 8b 00             	mov    (%rax),%rax
  402b3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  402b42:	eb 05                	jmp    402b49 <lua_tocfunction+0x57>
  402b44:	b8 00 00 00 00       	mov    $0x0,%eax
  402b49:	c9                   	leaveq 
  402b4a:	c3                   	retq   

0000000000402b4b <touserdata>:
  402b4b:	55                   	push   %rbp
  402b4c:	48 89 e5             	mov    %rsp,%rbp
  402b4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  402b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b57:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402b5b:	0f b6 c0             	movzbl %al,%eax
  402b5e:	83 e0 0f             	and    $0xf,%eax
  402b61:	83 f8 02             	cmp    $0x2,%eax
  402b64:	74 41                	je     402ba7 <touserdata+0x5c>
  402b66:	83 f8 07             	cmp    $0x7,%eax
  402b69:	75 45                	jne    402bb0 <touserdata+0x65>
  402b6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b6f:	48 8b 00             	mov    (%rax),%rax
  402b72:	48 89 c2             	mov    %rax,%rdx
  402b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b79:	48 8b 00             	mov    (%rax),%rax
  402b7c:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  402b80:	66 85 c0             	test   %ax,%ax
  402b83:	74 18                	je     402b9d <touserdata+0x52>
  402b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402b89:	48 8b 00             	mov    (%rax),%rax
  402b8c:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  402b90:	0f b7 c0             	movzwl %ax,%eax
  402b93:	48 c1 e0 04          	shl    $0x4,%rax
  402b97:	48 83 c0 28          	add    $0x28,%rax
  402b9b:	eb 05                	jmp    402ba2 <touserdata+0x57>
  402b9d:	b8 20 00 00 00       	mov    $0x20,%eax
  402ba2:	48 01 d0             	add    %rdx,%rax
  402ba5:	eb 0e                	jmp    402bb5 <touserdata+0x6a>
  402ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402bab:	48 8b 00             	mov    (%rax),%rax
  402bae:	eb 05                	jmp    402bb5 <touserdata+0x6a>
  402bb0:	b8 00 00 00 00       	mov    $0x0,%eax
  402bb5:	5d                   	pop    %rbp
  402bb6:	c3                   	retq   

0000000000402bb7 <lua_touserdata>:
  402bb7:	55                   	push   %rbp
  402bb8:	48 89 e5             	mov    %rsp,%rbp
  402bbb:	48 83 ec 20          	sub    $0x20,%rsp
  402bbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402bc3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402bc6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402bc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402bcd:	89 d6                	mov    %edx,%esi
  402bcf:	48 89 c7             	mov    %rax,%rdi
  402bd2:	e8 3f f0 ff ff       	callq  401c16 <index2value>
  402bd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402bdf:	48 89 c7             	mov    %rax,%rdi
  402be2:	e8 64 ff ff ff       	callq  402b4b <touserdata>
  402be7:	c9                   	leaveq 
  402be8:	c3                   	retq   

0000000000402be9 <lua_tothread>:
  402be9:	55                   	push   %rbp
  402bea:	48 89 e5             	mov    %rsp,%rbp
  402bed:	48 83 ec 20          	sub    $0x20,%rsp
  402bf1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402bf5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402bf8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402bfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402bff:	89 d6                	mov    %edx,%esi
  402c01:	48 89 c7             	mov    %rax,%rdi
  402c04:	e8 0d f0 ff ff       	callq  401c16 <index2value>
  402c09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402c0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c11:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402c15:	3c 48                	cmp    $0x48,%al
  402c17:	75 09                	jne    402c22 <lua_tothread+0x39>
  402c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c1d:	48 8b 00             	mov    (%rax),%rax
  402c20:	eb 05                	jmp    402c27 <lua_tothread+0x3e>
  402c22:	b8 00 00 00 00       	mov    $0x0,%eax
  402c27:	c9                   	leaveq 
  402c28:	c3                   	retq   

0000000000402c29 <lua_topointer>:
  402c29:	55                   	push   %rbp
  402c2a:	48 89 e5             	mov    %rsp,%rbp
  402c2d:	48 83 ec 20          	sub    $0x20,%rsp
  402c31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402c35:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  402c38:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  402c3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402c3f:	89 d6                	mov    %edx,%esi
  402c41:	48 89 c7             	mov    %rax,%rdi
  402c44:	e8 cd ef ff ff       	callq  401c16 <index2value>
  402c49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402c4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c51:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402c55:	0f b6 c0             	movzbl %al,%eax
  402c58:	83 e0 3f             	and    $0x3f,%eax
  402c5b:	83 f8 07             	cmp    $0x7,%eax
  402c5e:	74 15                	je     402c75 <lua_topointer+0x4c>
  402c60:	83 f8 16             	cmp    $0x16,%eax
  402c63:	74 07                	je     402c6c <lua_topointer+0x43>
  402c65:	83 f8 02             	cmp    $0x2,%eax
  402c68:	74 0b                	je     402c75 <lua_topointer+0x4c>
  402c6a:	eb 17                	jmp    402c83 <lua_topointer+0x5a>
  402c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c70:	48 8b 00             	mov    (%rax),%rax
  402c73:	eb 2e                	jmp    402ca3 <lua_topointer+0x7a>
  402c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c79:	48 89 c7             	mov    %rax,%rdi
  402c7c:	e8 ca fe ff ff       	callq  402b4b <touserdata>
  402c81:	eb 20                	jmp    402ca3 <lua_topointer+0x7a>
  402c83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c87:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402c8b:	0f b6 c0             	movzbl %al,%eax
  402c8e:	83 e0 40             	and    $0x40,%eax
  402c91:	85 c0                	test   %eax,%eax
  402c93:	74 09                	je     402c9e <lua_topointer+0x75>
  402c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402c99:	48 8b 00             	mov    (%rax),%rax
  402c9c:	eb 05                	jmp    402ca3 <lua_topointer+0x7a>
  402c9e:	b8 00 00 00 00       	mov    $0x0,%eax
  402ca3:	c9                   	leaveq 
  402ca4:	c3                   	retq   

0000000000402ca5 <lua_pushnil>:
  402ca5:	55                   	push   %rbp
  402ca6:	48 89 e5             	mov    %rsp,%rbp
  402ca9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  402cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402cb1:	48 8b 40 10          	mov    0x10(%rax),%rax
  402cb5:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  402cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402cbd:	48 8b 40 10          	mov    0x10(%rax),%rax
  402cc1:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402cc9:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402ccd:	90                   	nop
  402cce:	5d                   	pop    %rbp
  402ccf:	c3                   	retq   

0000000000402cd0 <lua_pushnumber>:
  402cd0:	55                   	push   %rbp
  402cd1:	48 89 e5             	mov    %rsp,%rbp
  402cd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402cd8:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  402cdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402ce1:	48 8b 40 10          	mov    0x10(%rax),%rax
  402ce5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ced:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  402cf2:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  402cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402cfa:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  402cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d02:	48 8b 40 10          	mov    0x10(%rax),%rax
  402d06:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402d0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d0e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402d12:	90                   	nop
  402d13:	5d                   	pop    %rbp
  402d14:	c3                   	retq   

0000000000402d15 <lua_pushinteger>:
  402d15:	55                   	push   %rbp
  402d16:	48 89 e5             	mov    %rsp,%rbp
  402d19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402d1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  402d21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d25:	48 8b 40 10          	mov    0x10(%rax),%rax
  402d29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402d2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402d31:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402d35:	48 89 10             	mov    %rdx,(%rax)
  402d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402d3c:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  402d40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d44:	48 8b 40 10          	mov    0x10(%rax),%rax
  402d48:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402d4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d50:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402d54:	90                   	nop
  402d55:	5d                   	pop    %rbp
  402d56:	c3                   	retq   

0000000000402d57 <lua_pushlstring>:
  402d57:	55                   	push   %rbp
  402d58:	48 89 e5             	mov    %rsp,%rbp
  402d5b:	48 83 ec 40          	sub    $0x40,%rsp
  402d5f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  402d63:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  402d67:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  402d6b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  402d70:	75 13                	jne    402d85 <lua_pushlstring+0x2e>
  402d72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402d76:	be e1 cd 43 00       	mov    $0x43cde1,%esi
  402d7b:	48 89 c7             	mov    %rax,%rdi
  402d7e:	e8 29 43 02 00       	callq  4270ac <luaS_new>
  402d83:	eb 17                	jmp    402d9c <lua_pushlstring+0x45>
  402d85:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  402d89:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  402d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402d91:	48 89 ce             	mov    %rcx,%rsi
  402d94:	48 89 c7             	mov    %rax,%rdi
  402d97:	e8 7f 42 02 00       	callq  42701b <luaS_newlstr>
  402d9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402da0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402da4:	48 8b 40 10          	mov    0x10(%rax),%rax
  402da8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  402dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402db0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402db4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402db8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402dbc:	48 89 10             	mov    %rdx,(%rax)
  402dbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dc3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402dc7:	83 c8 40             	or     $0x40,%eax
  402dca:	89 c2                	mov    %eax,%edx
  402dcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402dd0:	88 50 08             	mov    %dl,0x8(%rax)
  402dd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402dd7:	48 8b 40 10          	mov    0x10(%rax),%rax
  402ddb:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402ddf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402de3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402de7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402deb:	48 8b 40 18          	mov    0x18(%rax),%rax
  402def:	48 8b 40 18          	mov    0x18(%rax),%rax
  402df3:	48 85 c0             	test   %rax,%rax
  402df6:	7e 0c                	jle    402e04 <lua_pushlstring+0xad>
  402df8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402dfc:	48 89 c7             	mov    %rax,%rdi
  402dff:	e8 54 55 01 00       	callq  418358 <luaC_step>
  402e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402e08:	48 83 c0 18          	add    $0x18,%rax
  402e0c:	c9                   	leaveq 
  402e0d:	c3                   	retq   

0000000000402e0e <lua_pushstring>:
  402e0e:	55                   	push   %rbp
  402e0f:	48 89 e5             	mov    %rsp,%rbp
  402e12:	48 83 ec 30          	sub    $0x30,%rsp
  402e16:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  402e1a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  402e1e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  402e23:	75 0e                	jne    402e33 <lua_pushstring+0x25>
  402e25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402e29:	48 8b 40 10          	mov    0x10(%rax),%rax
  402e2d:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  402e31:	eb 56                	jmp    402e89 <lua_pushstring+0x7b>
  402e33:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  402e37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402e3b:	48 89 d6             	mov    %rdx,%rsi
  402e3e:	48 89 c7             	mov    %rax,%rdi
  402e41:	e8 66 42 02 00       	callq  4270ac <luaS_new>
  402e46:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402e4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402e4e:	48 8b 40 10          	mov    0x10(%rax),%rax
  402e52:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  402e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402e5a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402e5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402e62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402e66:	48 89 10             	mov    %rdx,(%rax)
  402e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402e6d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  402e71:	83 c8 40             	or     $0x40,%eax
  402e74:	89 c2                	mov    %eax,%edx
  402e76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402e7a:	88 50 08             	mov    %dl,0x8(%rax)
  402e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402e81:	48 83 c0 18          	add    $0x18,%rax
  402e85:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  402e89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402e8d:	48 8b 40 10          	mov    0x10(%rax),%rax
  402e91:	48 8d 50 10          	lea    0x10(%rax),%rdx
  402e95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402e99:	48 89 50 10          	mov    %rdx,0x10(%rax)
  402e9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402ea1:	48 8b 40 18          	mov    0x18(%rax),%rax
  402ea5:	48 8b 40 18          	mov    0x18(%rax),%rax
  402ea9:	48 85 c0             	test   %rax,%rax
  402eac:	7e 0c                	jle    402eba <lua_pushstring+0xac>
  402eae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402eb2:	48 89 c7             	mov    %rax,%rdi
  402eb5:	e8 9e 54 01 00       	callq  418358 <luaC_step>
  402eba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  402ebe:	c9                   	leaveq 
  402ebf:	c3                   	retq   

0000000000402ec0 <lua_pushvfstring>:
  402ec0:	55                   	push   %rbp
  402ec1:	48 89 e5             	mov    %rsp,%rbp
  402ec4:	48 83 ec 30          	sub    $0x30,%rsp
  402ec8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  402ecc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  402ed0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  402ed4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  402ed8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  402edc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402ee0:	48 89 ce             	mov    %rcx,%rsi
  402ee3:	48 89 c7             	mov    %rax,%rdi
  402ee6:	e8 d7 c7 01 00       	callq  41f6c2 <luaO_pushvfstring>
  402eeb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  402eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402ef3:	48 8b 40 18          	mov    0x18(%rax),%rax
  402ef7:	48 8b 40 18          	mov    0x18(%rax),%rax
  402efb:	48 85 c0             	test   %rax,%rax
  402efe:	7e 0c                	jle    402f0c <lua_pushvfstring+0x4c>
  402f00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402f04:	48 89 c7             	mov    %rax,%rdi
  402f07:	e8 4c 54 01 00       	callq  418358 <luaC_step>
  402f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402f10:	c9                   	leaveq 
  402f11:	c3                   	retq   

0000000000402f12 <lua_pushfstring>:
  402f12:	55                   	push   %rbp
  402f13:	48 89 e5             	mov    %rsp,%rbp
  402f16:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  402f1d:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  402f24:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  402f2b:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  402f32:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  402f39:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  402f40:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  402f47:	84 c0                	test   %al,%al
  402f49:	74 20                	je     402f6b <lua_pushfstring+0x59>
  402f4b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  402f4f:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  402f53:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  402f57:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  402f5b:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  402f5f:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  402f63:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  402f67:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  402f6b:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
  402f72:	00 00 00 
  402f75:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
  402f7c:	00 00 00 
  402f7f:	48 8d 45 10          	lea    0x10(%rbp),%rax
  402f83:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  402f8a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  402f91:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  402f98:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  402f9f:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  402fa6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  402fad:	48 89 ce             	mov    %rcx,%rsi
  402fb0:	48 89 c7             	mov    %rax,%rdi
  402fb3:	e8 0a c7 01 00       	callq  41f6c2 <luaO_pushvfstring>
  402fb8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  402fbf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  402fc6:	48 8b 40 18          	mov    0x18(%rax),%rax
  402fca:	48 8b 40 18          	mov    0x18(%rax),%rax
  402fce:	48 85 c0             	test   %rax,%rax
  402fd1:	7e 0f                	jle    402fe2 <lua_pushfstring+0xd0>
  402fd3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  402fda:	48 89 c7             	mov    %rax,%rdi
  402fdd:	e8 76 53 01 00       	callq  418358 <luaC_step>
  402fe2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  402fe9:	c9                   	leaveq 
  402fea:	c3                   	retq   

0000000000402feb <lua_pushcclosure>:
  402feb:	55                   	push   %rbp
  402fec:	48 89 e5             	mov    %rsp,%rbp
  402fef:	48 83 ec 50          	sub    $0x50,%rsp
  402ff3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  402ff7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  402ffb:	89 55 bc             	mov    %edx,-0x44(%rbp)
  402ffe:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
  403002:	75 38                	jne    40303c <lua_pushcclosure+0x51>
  403004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403008:	48 8b 40 10          	mov    0x10(%rax),%rax
  40300c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403014:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  403018:	48 89 10             	mov    %rdx,(%rax)
  40301b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40301f:	c6 40 08 16          	movb   $0x16,0x8(%rax)
  403023:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403027:	48 8b 40 10          	mov    0x10(%rax),%rax
  40302b:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40302f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403033:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403037:	e9 f9 00 00 00       	jmpq   403135 <lua_pushcclosure+0x14a>
  40303c:	8b 55 bc             	mov    -0x44(%rbp),%edx
  40303f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403043:	89 d6                	mov    %edx,%esi
  403045:	48 89 c7             	mov    %rax,%rdi
  403048:	e8 e4 0d 01 00       	callq  413e31 <luaF_newCclosure>
  40304d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403051:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403055:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  403059:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40305d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403061:	48 8b 40 10          	mov    0x10(%rax),%rax
  403065:	8b 55 bc             	mov    -0x44(%rbp),%edx
  403068:	48 63 d2             	movslq %edx,%rdx
  40306b:	48 c1 e2 04          	shl    $0x4,%rdx
  40306f:	48 f7 da             	neg    %rdx
  403072:	48 01 c2             	add    %rax,%rdx
  403075:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403079:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40307d:	eb 51                	jmp    4030d0 <lua_pushcclosure+0xe5>
  40307f:	8b 45 bc             	mov    -0x44(%rbp),%eax
  403082:	48 98                	cltq   
  403084:	48 83 c0 02          	add    $0x2,%rax
  403088:	48 c1 e0 04          	shl    $0x4,%rax
  40308c:	48 89 c2             	mov    %rax,%rdx
  40308f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403093:	48 01 d0             	add    %rdx,%rax
  403096:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40309a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40309e:	48 8b 40 10          	mov    0x10(%rax),%rax
  4030a2:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4030a5:	48 63 d2             	movslq %edx,%rdx
  4030a8:	48 c1 e2 04          	shl    $0x4,%rdx
  4030ac:	48 01 d0             	add    %rdx,%rax
  4030af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4030b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4030b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4030bb:	48 8b 12             	mov    (%rdx),%rdx
  4030be:	48 89 10             	mov    %rdx,(%rax)
  4030c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4030c5:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4030c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4030cd:	88 50 08             	mov    %dl,0x8(%rax)
  4030d0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4030d3:	8d 50 ff             	lea    -0x1(%rax),%edx
  4030d6:	89 55 bc             	mov    %edx,-0x44(%rbp)
  4030d9:	85 c0                	test   %eax,%eax
  4030db:	75 a2                	jne    40307f <lua_pushcclosure+0x94>
  4030dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4030e1:	48 8b 40 10          	mov    0x10(%rax),%rax
  4030e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4030e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4030ed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4030f1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4030f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4030f9:	48 89 10             	mov    %rdx,(%rax)
  4030fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403100:	c6 40 08 66          	movb   $0x66,0x8(%rax)
  403104:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403108:	48 8b 40 10          	mov    0x10(%rax),%rax
  40310c:	48 8d 50 10          	lea    0x10(%rax),%rdx
  403110:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403114:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403118:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40311c:	48 8b 40 18          	mov    0x18(%rax),%rax
  403120:	48 8b 40 18          	mov    0x18(%rax),%rax
  403124:	48 85 c0             	test   %rax,%rax
  403127:	7e 0c                	jle    403135 <lua_pushcclosure+0x14a>
  403129:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40312d:	48 89 c7             	mov    %rax,%rdi
  403130:	e8 23 52 01 00       	callq  418358 <luaC_step>
  403135:	90                   	nop
  403136:	c9                   	leaveq 
  403137:	c3                   	retq   

0000000000403138 <lua_pushboolean>:
  403138:	55                   	push   %rbp
  403139:	48 89 e5             	mov    %rsp,%rbp
  40313c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403140:	89 75 f4             	mov    %esi,-0xc(%rbp)
  403143:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  403147:	74 0e                	je     403157 <lua_pushboolean+0x1f>
  403149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40314d:	48 8b 40 10          	mov    0x10(%rax),%rax
  403151:	c6 40 08 11          	movb   $0x11,0x8(%rax)
  403155:	eb 0c                	jmp    403163 <lua_pushboolean+0x2b>
  403157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40315b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40315f:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  403163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403167:	48 8b 40 10          	mov    0x10(%rax),%rax
  40316b:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40316f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403173:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403177:	90                   	nop
  403178:	5d                   	pop    %rbp
  403179:	c3                   	retq   

000000000040317a <lua_pushlightuserdata>:
  40317a:	55                   	push   %rbp
  40317b:	48 89 e5             	mov    %rsp,%rbp
  40317e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403182:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40318a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40318e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403196:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40319a:	48 89 10             	mov    %rdx,(%rax)
  40319d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4031a1:	c6 40 08 02          	movb   $0x2,0x8(%rax)
  4031a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031a9:	48 8b 40 10          	mov    0x10(%rax),%rax
  4031ad:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4031b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031b5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4031b9:	90                   	nop
  4031ba:	5d                   	pop    %rbp
  4031bb:	c3                   	retq   

00000000004031bc <lua_pushthread>:
  4031bc:	55                   	push   %rbp
  4031bd:	48 89 e5             	mov    %rsp,%rbp
  4031c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4031c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031c8:	48 8b 40 10          	mov    0x10(%rax),%rax
  4031cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4031d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4031d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4031dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4031e0:	48 89 10             	mov    %rdx,(%rax)
  4031e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4031e7:	c6 40 08 48          	movb   $0x48,0x8(%rax)
  4031eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031ef:	48 8b 40 10          	mov    0x10(%rax),%rax
  4031f3:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4031f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031fb:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4031ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403203:	48 8b 40 18          	mov    0x18(%rax),%rax
  403207:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40320e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  403212:	0f 94 c0             	sete   %al
  403215:	0f b6 c0             	movzbl %al,%eax
  403218:	5d                   	pop    %rbp
  403219:	c3                   	retq   

000000000040321a <auxgetstr>:
  40321a:	55                   	push   %rbp
  40321b:	48 89 e5             	mov    %rsp,%rbp
  40321e:	48 83 ec 50          	sub    $0x50,%rsp
  403222:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  403226:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40322a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  40322e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  403232:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403236:	48 89 d6             	mov    %rdx,%rsi
  403239:	48 89 c7             	mov    %rax,%rdi
  40323c:	e8 6b 3e 02 00       	callq  4270ac <luaS_new>
  403241:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403245:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403249:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40324d:	3c 45                	cmp    $0x45,%al
  40324f:	74 0f                	je     403260 <auxgetstr+0x46>
  403251:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403258:	00 
  403259:	b8 00 00 00 00       	mov    $0x0,%eax
  40325e:	eb 30                	jmp    403290 <auxgetstr+0x76>
  403260:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403264:	48 8b 00             	mov    (%rax),%rax
  403267:	48 89 c2             	mov    %rax,%rdx
  40326a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40326e:	48 89 c6             	mov    %rax,%rsi
  403271:	48 89 d7             	mov    %rdx,%rdi
  403274:	e8 dc a4 02 00       	callq  42d755 <luaH_getstr>
  403279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40327d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403281:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403285:	0f b6 c0             	movzbl %al,%eax
  403288:	83 e0 0f             	and    $0xf,%eax
  40328b:	85 c0                	test   %eax,%eax
  40328d:	0f 95 c0             	setne  %al
  403290:	84 c0                	test   %al,%al
  403292:	74 47                	je     4032db <auxgetstr+0xc1>
  403294:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403298:	48 8b 40 10          	mov    0x10(%rax),%rax
  40329c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4032a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4032a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4032a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4032ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4032b0:	48 8b 12             	mov    (%rdx),%rdx
  4032b3:	48 89 10             	mov    %rdx,(%rax)
  4032b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4032ba:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4032be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4032c2:	88 50 08             	mov    %dl,0x8(%rax)
  4032c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032c9:	48 8b 40 10          	mov    0x10(%rax),%rax
  4032cd:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4032d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032d5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4032d9:	eb 7f                	jmp    40335a <auxgetstr+0x140>
  4032db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032df:	48 8b 40 10          	mov    0x10(%rax),%rax
  4032e3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4032e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4032eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4032ef:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4032f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4032f7:	48 89 10             	mov    %rdx,(%rax)
  4032fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4032fe:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403302:	83 c8 40             	or     $0x40,%eax
  403305:	89 c2                	mov    %eax,%edx
  403307:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40330b:	88 50 08             	mov    %dl,0x8(%rax)
  40330e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403312:	48 8b 40 10          	mov    0x10(%rax),%rax
  403316:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40331a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40331e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403322:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403326:	48 8b 40 10          	mov    0x10(%rax),%rax
  40332a:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  40332e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403332:	48 8b 40 10          	mov    0x10(%rax),%rax
  403336:	48 83 e8 10          	sub    $0x10,%rax
  40333a:	48 89 c7             	mov    %rax,%rdi
  40333d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403341:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  403345:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403349:	49 89 c8             	mov    %rcx,%r8
  40334c:	48 89 d1             	mov    %rdx,%rcx
  40334f:	48 89 fa             	mov    %rdi,%rdx
  403352:	48 89 c7             	mov    %rax,%rdi
  403355:	e8 04 fc 02 00       	callq  432f5e <luaV_finishget>
  40335a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40335e:	48 8b 40 10          	mov    0x10(%rax),%rax
  403362:	48 83 e8 10          	sub    $0x10,%rax
  403366:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40336a:	0f b6 c0             	movzbl %al,%eax
  40336d:	83 e0 0f             	and    $0xf,%eax
  403370:	c9                   	leaveq 
  403371:	c3                   	retq   

0000000000403372 <lua_getglobal>:
  403372:	55                   	push   %rbp
  403373:	48 89 e5             	mov    %rsp,%rbp
  403376:	48 83 ec 20          	sub    $0x20,%rsp
  40337a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40337e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403386:	48 8b 40 18          	mov    0x18(%rax),%rax
  40338a:	48 8b 40 40          	mov    0x40(%rax),%rax
  40338e:	48 8b 40 10          	mov    0x10(%rax),%rax
  403392:	48 83 c0 10          	add    $0x10,%rax
  403396:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40339a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40339e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4033a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4033a6:	48 89 ce             	mov    %rcx,%rsi
  4033a9:	48 89 c7             	mov    %rax,%rdi
  4033ac:	e8 69 fe ff ff       	callq  40321a <auxgetstr>
  4033b1:	c9                   	leaveq 
  4033b2:	c3                   	retq   

00000000004033b3 <lua_gettable>:
  4033b3:	55                   	push   %rbp
  4033b4:	48 89 e5             	mov    %rsp,%rbp
  4033b7:	48 83 ec 30          	sub    $0x30,%rsp
  4033bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4033bf:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4033c2:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4033c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4033c9:	89 d6                	mov    %edx,%esi
  4033cb:	48 89 c7             	mov    %rax,%rdi
  4033ce:	e8 43 e8 ff ff       	callq  401c16 <index2value>
  4033d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4033d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4033db:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4033df:	3c 45                	cmp    $0x45,%al
  4033e1:	74 0f                	je     4033f2 <lua_gettable+0x3f>
  4033e3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4033ea:	00 
  4033eb:	b8 00 00 00 00       	mov    $0x0,%eax
  4033f0:	eb 38                	jmp    40342a <lua_gettable+0x77>
  4033f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4033f6:	48 8b 40 10          	mov    0x10(%rax),%rax
  4033fa:	48 83 e8 10          	sub    $0x10,%rax
  4033fe:	48 89 c2             	mov    %rax,%rdx
  403401:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403405:	48 8b 00             	mov    (%rax),%rax
  403408:	48 89 d6             	mov    %rdx,%rsi
  40340b:	48 89 c7             	mov    %rax,%rdi
  40340e:	e8 bc a3 02 00       	callq  42d7cf <luaH_get>
  403413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40341b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40341f:	0f b6 c0             	movzbl %al,%eax
  403422:	83 e0 0f             	and    $0xf,%eax
  403425:	85 c0                	test   %eax,%eax
  403427:	0f 95 c0             	setne  %al
  40342a:	84 c0                	test   %al,%al
  40342c:	74 37                	je     403465 <lua_gettable+0xb2>
  40342e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403432:	48 8b 40 10          	mov    0x10(%rax),%rax
  403436:	48 83 e8 10          	sub    $0x10,%rax
  40343a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40343e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403442:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403446:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40344a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40344e:	48 8b 12             	mov    (%rdx),%rdx
  403451:	48 89 10             	mov    %rdx,(%rax)
  403454:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403458:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40345c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403460:	88 50 08             	mov    %dl,0x8(%rax)
  403463:	eb 38                	jmp    40349d <lua_gettable+0xea>
  403465:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403469:	48 8b 40 10          	mov    0x10(%rax),%rax
  40346d:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  403471:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403475:	48 8b 40 10          	mov    0x10(%rax),%rax
  403479:	48 83 e8 10          	sub    $0x10,%rax
  40347d:	48 89 c7             	mov    %rax,%rdi
  403480:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403484:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  403488:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40348c:	49 89 c8             	mov    %rcx,%r8
  40348f:	48 89 d1             	mov    %rdx,%rcx
  403492:	48 89 fa             	mov    %rdi,%rdx
  403495:	48 89 c7             	mov    %rax,%rdi
  403498:	e8 c1 fa 02 00       	callq  432f5e <luaV_finishget>
  40349d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4034a1:	48 8b 40 10          	mov    0x10(%rax),%rax
  4034a5:	48 83 e8 10          	sub    $0x10,%rax
  4034a9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4034ad:	0f b6 c0             	movzbl %al,%eax
  4034b0:	83 e0 0f             	and    $0xf,%eax
  4034b3:	c9                   	leaveq 
  4034b4:	c3                   	retq   

00000000004034b5 <lua_getfield>:
  4034b5:	55                   	push   %rbp
  4034b6:	48 89 e5             	mov    %rsp,%rbp
  4034b9:	48 83 ec 20          	sub    $0x20,%rsp
  4034bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4034c1:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4034c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4034c8:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4034cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4034cf:	89 d6                	mov    %edx,%esi
  4034d1:	48 89 c7             	mov    %rax,%rdi
  4034d4:	e8 3d e7 ff ff       	callq  401c16 <index2value>
  4034d9:	48 89 c1             	mov    %rax,%rcx
  4034dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4034e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4034e4:	48 89 ce             	mov    %rcx,%rsi
  4034e7:	48 89 c7             	mov    %rax,%rdi
  4034ea:	e8 2b fd ff ff       	callq  40321a <auxgetstr>
  4034ef:	c9                   	leaveq 
  4034f0:	c3                   	retq   

00000000004034f1 <lua_geti>:
  4034f1:	55                   	push   %rbp
  4034f2:	48 89 e5             	mov    %rsp,%rbp
  4034f5:	48 83 ec 60          	sub    $0x60,%rsp
  4034f9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  4034fd:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  403500:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  403504:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  403507:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40350b:	89 d6                	mov    %edx,%esi
  40350d:	48 89 c7             	mov    %rax,%rdi
  403510:	e8 01 e7 ff ff       	callq  401c16 <index2value>
  403515:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403519:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40351d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403521:	3c 45                	cmp    $0x45,%al
  403523:	74 0f                	je     403534 <lua_geti+0x43>
  403525:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40352c:	00 
  40352d:	b8 00 00 00 00       	mov    $0x0,%eax
  403532:	eb 65                	jmp    403599 <lua_geti+0xa8>
  403534:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  403538:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40353c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403540:	48 8b 00             	mov    (%rax),%rax
  403543:	8b 40 0c             	mov    0xc(%rax),%eax
  403546:	89 c0                	mov    %eax,%eax
  403548:	48 39 c2             	cmp    %rax,%rdx
  40354b:	73 1c                	jae    403569 <lua_geti+0x78>
  40354d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403551:	48 8b 00             	mov    (%rax),%rax
  403554:	48 8b 40 10          	mov    0x10(%rax),%rax
  403558:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40355c:	48 c1 e2 04          	shl    $0x4,%rdx
  403560:	48 83 ea 10          	sub    $0x10,%rdx
  403564:	48 01 d0             	add    %rdx,%rax
  403567:	eb 19                	jmp    403582 <lua_geti+0x91>
  403569:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40356d:	48 8b 00             	mov    (%rax),%rax
  403570:	48 89 c2             	mov    %rax,%rdx
  403573:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  403577:	48 89 c6             	mov    %rax,%rsi
  40357a:	48 89 d7             	mov    %rdx,%rdi
  40357d:	e8 0b a0 02 00       	callq  42d58d <luaH_getint>
  403582:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40358a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40358e:	0f b6 c0             	movzbl %al,%eax
  403591:	83 e0 0f             	and    $0xf,%eax
  403594:	85 c0                	test   %eax,%eax
  403596:	0f 95 c0             	setne  %al
  403599:	84 c0                	test   %al,%al
  40359b:	74 33                	je     4035d0 <lua_geti+0xdf>
  40359d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4035a1:	48 8b 40 10          	mov    0x10(%rax),%rax
  4035a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4035a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4035ad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4035b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035b5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4035b9:	48 8b 12             	mov    (%rdx),%rdx
  4035bc:	48 89 10             	mov    %rdx,(%rax)
  4035bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4035c3:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4035c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035cb:	88 50 08             	mov    %dl,0x8(%rax)
  4035ce:	eb 3e                	jmp    40360e <lua_geti+0x11d>
  4035d0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4035d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4035d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4035dc:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  4035e0:	48 89 10             	mov    %rdx,(%rax)
  4035e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4035e7:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4035eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4035ef:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4035f3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4035f7:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  4035fb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4035ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403603:	49 89 f8             	mov    %rdi,%r8
  403606:	48 89 c7             	mov    %rax,%rdi
  403609:	e8 50 f9 02 00       	callq  432f5e <luaV_finishget>
  40360e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403612:	48 8b 40 10          	mov    0x10(%rax),%rax
  403616:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40361a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40361e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403622:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403626:	48 8b 40 10          	mov    0x10(%rax),%rax
  40362a:	48 83 e8 10          	sub    $0x10,%rax
  40362e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403632:	0f b6 c0             	movzbl %al,%eax
  403635:	83 e0 0f             	and    $0xf,%eax
  403638:	c9                   	leaveq 
  403639:	c3                   	retq   

000000000040363a <finishrawget>:
  40363a:	55                   	push   %rbp
  40363b:	48 89 e5             	mov    %rsp,%rbp
  40363e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403642:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403646:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40364a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40364e:	0f b6 c0             	movzbl %al,%eax
  403651:	83 e0 0f             	and    $0xf,%eax
  403654:	85 c0                	test   %eax,%eax
  403656:	75 0e                	jne    403666 <finishrawget+0x2c>
  403658:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40365c:	48 8b 40 10          	mov    0x10(%rax),%rax
  403660:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  403664:	eb 31                	jmp    403697 <finishrawget+0x5d>
  403666:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40366a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40366e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403672:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403676:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40367a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40367e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  403682:	48 8b 12             	mov    (%rdx),%rdx
  403685:	48 89 10             	mov    %rdx,(%rax)
  403688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40368c:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  403690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403694:	88 50 08             	mov    %dl,0x8(%rax)
  403697:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40369b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40369f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4036a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4036a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4036ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4036af:	48 8b 40 10          	mov    0x10(%rax),%rax
  4036b3:	48 83 e8 10          	sub    $0x10,%rax
  4036b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4036bb:	0f b6 c0             	movzbl %al,%eax
  4036be:	83 e0 0f             	and    $0xf,%eax
  4036c1:	5d                   	pop    %rbp
  4036c2:	c3                   	retq   

00000000004036c3 <gettable>:
  4036c3:	55                   	push   %rbp
  4036c4:	48 89 e5             	mov    %rsp,%rbp
  4036c7:	48 83 ec 20          	sub    $0x20,%rsp
  4036cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4036cf:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4036d2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4036d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4036d9:	89 d6                	mov    %edx,%esi
  4036db:	48 89 c7             	mov    %rax,%rdi
  4036de:	e8 33 e5 ff ff       	callq  401c16 <index2value>
  4036e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4036e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4036eb:	48 8b 00             	mov    (%rax),%rax
  4036ee:	c9                   	leaveq 
  4036ef:	c3                   	retq   

00000000004036f0 <lua_rawget>:
  4036f0:	55                   	push   %rbp
  4036f1:	48 89 e5             	mov    %rsp,%rbp
  4036f4:	48 83 ec 20          	sub    $0x20,%rsp
  4036f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4036fc:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4036ff:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  403702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403706:	89 d6                	mov    %edx,%esi
  403708:	48 89 c7             	mov    %rax,%rdi
  40370b:	e8 b3 ff ff ff       	callq  4036c3 <gettable>
  403710:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403718:	48 8b 40 10          	mov    0x10(%rax),%rax
  40371c:	48 83 e8 10          	sub    $0x10,%rax
  403720:	48 89 c2             	mov    %rax,%rdx
  403723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403727:	48 89 d6             	mov    %rdx,%rsi
  40372a:	48 89 c7             	mov    %rax,%rdi
  40372d:	e8 9d a0 02 00       	callq  42d7cf <luaH_get>
  403732:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403736:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40373a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40373e:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  403742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403746:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40374a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40374e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403752:	48 89 d6             	mov    %rdx,%rsi
  403755:	48 89 c7             	mov    %rax,%rdi
  403758:	e8 dd fe ff ff       	callq  40363a <finishrawget>
  40375d:	c9                   	leaveq 
  40375e:	c3                   	retq   

000000000040375f <lua_rawgeti>:
  40375f:	55                   	push   %rbp
  403760:	48 89 e5             	mov    %rsp,%rbp
  403763:	48 83 ec 30          	sub    $0x30,%rsp
  403767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40376b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40376e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403772:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  403775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403779:	89 d6                	mov    %edx,%esi
  40377b:	48 89 c7             	mov    %rax,%rdi
  40377e:	e8 40 ff ff ff       	callq  4036c3 <gettable>
  403783:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403787:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40378b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40378f:	48 89 d6             	mov    %rdx,%rsi
  403792:	48 89 c7             	mov    %rax,%rdi
  403795:	e8 f3 9d 02 00       	callq  42d58d <luaH_getint>
  40379a:	48 89 c2             	mov    %rax,%rdx
  40379d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4037a1:	48 89 d6             	mov    %rdx,%rsi
  4037a4:	48 89 c7             	mov    %rax,%rdi
  4037a7:	e8 8e fe ff ff       	callq  40363a <finishrawget>
  4037ac:	c9                   	leaveq 
  4037ad:	c3                   	retq   

00000000004037ae <lua_rawgetp>:
  4037ae:	55                   	push   %rbp
  4037af:	48 89 e5             	mov    %rsp,%rbp
  4037b2:	48 83 ec 40          	sub    $0x40,%rsp
  4037b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4037ba:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4037bd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4037c1:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4037c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4037c8:	89 d6                	mov    %edx,%esi
  4037ca:	48 89 c7             	mov    %rax,%rdi
  4037cd:	e8 f1 fe ff ff       	callq  4036c3 <gettable>
  4037d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4037d6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  4037da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4037de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037e2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4037e6:	48 89 10             	mov    %rdx,(%rax)
  4037e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037ed:	c6 40 08 02          	movb   $0x2,0x8(%rax)
  4037f1:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4037f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4037f9:	48 89 d6             	mov    %rdx,%rsi
  4037fc:	48 89 c7             	mov    %rax,%rdi
  4037ff:	e8 cb 9f 02 00       	callq  42d7cf <luaH_get>
  403804:	48 89 c2             	mov    %rax,%rdx
  403807:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40380b:	48 89 d6             	mov    %rdx,%rsi
  40380e:	48 89 c7             	mov    %rax,%rdi
  403811:	e8 24 fe ff ff       	callq  40363a <finishrawget>
  403816:	c9                   	leaveq 
  403817:	c3                   	retq   

0000000000403818 <lua_createtable>:
  403818:	55                   	push   %rbp
  403819:	48 89 e5             	mov    %rsp,%rbp
  40381c:	48 83 ec 30          	sub    $0x30,%rsp
  403820:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403824:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  403827:	89 55 d0             	mov    %edx,-0x30(%rbp)
  40382a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40382e:	48 89 c7             	mov    %rax,%rdi
  403831:	e8 43 98 02 00       	callq  42d079 <luaH_new>
  403836:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40383a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40383e:	48 8b 40 10          	mov    0x10(%rax),%rax
  403842:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40384a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40384e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403852:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403856:	48 89 10             	mov    %rdx,(%rax)
  403859:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40385d:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  403861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403865:	48 8b 40 10          	mov    0x10(%rax),%rax
  403869:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40386d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403871:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403875:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  403879:	7f 06                	jg     403881 <lua_createtable+0x69>
  40387b:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
  40387f:	7e 16                	jle    403897 <lua_createtable+0x7f>
  403881:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  403884:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  403887:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40388b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40388f:	48 89 c7             	mov    %rax,%rdi
  403892:	e8 a2 94 02 00       	callq  42cd39 <luaH_resize>
  403897:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40389b:	48 8b 40 18          	mov    0x18(%rax),%rax
  40389f:	48 8b 40 18          	mov    0x18(%rax),%rax
  4038a3:	48 85 c0             	test   %rax,%rax
  4038a6:	7e 0c                	jle    4038b4 <lua_createtable+0x9c>
  4038a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4038ac:	48 89 c7             	mov    %rax,%rdi
  4038af:	e8 a4 4a 01 00       	callq  418358 <luaC_step>
  4038b4:	90                   	nop
  4038b5:	c9                   	leaveq 
  4038b6:	c3                   	retq   

00000000004038b7 <lua_getmetatable>:
  4038b7:	55                   	push   %rbp
  4038b8:	48 89 e5             	mov    %rsp,%rbp
  4038bb:	48 83 ec 40          	sub    $0x40,%rsp
  4038bf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4038c3:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  4038c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4038cd:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4038d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4038d4:	89 d6                	mov    %edx,%esi
  4038d6:	48 89 c7             	mov    %rax,%rdi
  4038d9:	e8 38 e3 ff ff       	callq  401c16 <index2value>
  4038de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4038e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4038e6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4038ea:	0f b6 c0             	movzbl %al,%eax
  4038ed:	83 e0 0f             	and    $0xf,%eax
  4038f0:	83 f8 05             	cmp    $0x5,%eax
  4038f3:	74 07                	je     4038fc <lua_getmetatable+0x45>
  4038f5:	83 f8 07             	cmp    $0x7,%eax
  4038f8:	74 13                	je     40390d <lua_getmetatable+0x56>
  4038fa:	eb 22                	jmp    40391e <lua_getmetatable+0x67>
  4038fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403900:	48 8b 00             	mov    (%rax),%rax
  403903:	48 8b 40 28          	mov    0x28(%rax),%rax
  403907:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40390b:	eb 37                	jmp    403944 <lua_getmetatable+0x8d>
  40390d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403911:	48 8b 00             	mov    (%rax),%rax
  403914:	48 8b 40 18          	mov    0x18(%rax),%rax
  403918:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40391c:	eb 26                	jmp    403944 <lua_getmetatable+0x8d>
  40391e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403922:	48 8b 40 18          	mov    0x18(%rax),%rax
  403926:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40392a:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
  40392e:	0f b6 d2             	movzbl %dl,%edx
  403931:	83 e2 0f             	and    $0xf,%edx
  403934:	48 63 d2             	movslq %edx,%rdx
  403937:	48 83 c2 3c          	add    $0x3c,%rdx
  40393b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  40393f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403943:	90                   	nop
  403944:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403949:	74 42                	je     40398d <lua_getmetatable+0xd6>
  40394b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40394f:	48 8b 40 10          	mov    0x10(%rax),%rax
  403953:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40395b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40395f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403963:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403967:	48 89 10             	mov    %rdx,(%rax)
  40396a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40396e:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  403972:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403976:	48 8b 40 10          	mov    0x10(%rax),%rax
  40397a:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40397e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403982:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403986:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  40398d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  403990:	c9                   	leaveq 
  403991:	c3                   	retq   

0000000000403992 <lua_getiuservalue>:
  403992:	55                   	push   %rbp
  403993:	48 89 e5             	mov    %rsp,%rbp
  403996:	48 83 ec 30          	sub    $0x30,%rsp
  40399a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40399e:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4039a1:	89 55 d0             	mov    %edx,-0x30(%rbp)
  4039a4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4039a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4039ab:	89 d6                	mov    %edx,%esi
  4039ad:	48 89 c7             	mov    %rax,%rdi
  4039b0:	e8 61 e2 ff ff       	callq  401c16 <index2value>
  4039b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4039b9:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
  4039bd:	7e 13                	jle    4039d2 <lua_getiuservalue+0x40>
  4039bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039c3:	48 8b 00             	mov    (%rax),%rax
  4039c6:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4039ca:	0f b7 c0             	movzwl %ax,%eax
  4039cd:	39 45 d0             	cmp    %eax,-0x30(%rbp)
  4039d0:	7e 15                	jle    4039e7 <lua_getiuservalue+0x55>
  4039d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4039d6:	48 8b 40 10          	mov    0x10(%rax),%rax
  4039da:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4039de:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  4039e5:	eb 61                	jmp    403a48 <lua_getiuservalue+0xb6>
  4039e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4039eb:	48 8b 40 10          	mov    0x10(%rax),%rax
  4039ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4039f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039f7:	48 8b 00             	mov    (%rax),%rax
  4039fa:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4039fd:	83 ea 01             	sub    $0x1,%edx
  403a00:	48 63 d2             	movslq %edx,%rdx
  403a03:	48 83 c2 02          	add    $0x2,%rdx
  403a07:	48 c1 e2 04          	shl    $0x4,%rdx
  403a0b:	48 01 d0             	add    %rdx,%rax
  403a0e:	48 83 c0 08          	add    $0x8,%rax
  403a12:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403a16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403a1a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403a1e:	48 8b 12             	mov    (%rdx),%rdx
  403a21:	48 89 10             	mov    %rdx,(%rax)
  403a24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a28:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  403a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403a30:	88 50 08             	mov    %dl,0x8(%rax)
  403a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403a37:	48 8b 40 10          	mov    0x10(%rax),%rax
  403a3b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403a3f:	0f b6 c0             	movzbl %al,%eax
  403a42:	83 e0 0f             	and    $0xf,%eax
  403a45:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403a48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403a4c:	48 8b 40 10          	mov    0x10(%rax),%rax
  403a50:	48 8d 50 10          	lea    0x10(%rax),%rdx
  403a54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403a58:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403a5c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403a5f:	c9                   	leaveq 
  403a60:	c3                   	retq   

0000000000403a61 <auxsetstr>:
  403a61:	55                   	push   %rbp
  403a62:	48 89 e5             	mov    %rsp,%rbp
  403a65:	48 83 ec 50          	sub    $0x50,%rsp
  403a69:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  403a6d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  403a71:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  403a75:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  403a79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403a7d:	48 89 d6             	mov    %rdx,%rsi
  403a80:	48 89 c7             	mov    %rax,%rdi
  403a83:	e8 24 36 02 00       	callq  4270ac <luaS_new>
  403a88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403a8c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403a90:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403a94:	3c 45                	cmp    $0x45,%al
  403a96:	74 0f                	je     403aa7 <auxsetstr+0x46>
  403a98:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403a9f:	00 
  403aa0:	b8 00 00 00 00       	mov    $0x0,%eax
  403aa5:	eb 30                	jmp    403ad7 <auxsetstr+0x76>
  403aa7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403aab:	48 8b 00             	mov    (%rax),%rax
  403aae:	48 89 c2             	mov    %rax,%rdx
  403ab1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403ab5:	48 89 c6             	mov    %rax,%rsi
  403ab8:	48 89 d7             	mov    %rdx,%rdi
  403abb:	e8 95 9c 02 00       	callq  42d755 <luaH_getstr>
  403ac0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ac8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403acc:	0f b6 c0             	movzbl %al,%eax
  403acf:	83 e0 0f             	and    $0xf,%eax
  403ad2:	85 c0                	test   %eax,%eax
  403ad4:	0f 95 c0             	setne  %al
  403ad7:	84 c0                	test   %al,%al
  403ad9:	0f 84 b0 00 00 00    	je     403b8f <auxsetstr+0x12e>
  403adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ae3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403ae7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403aeb:	48 8b 40 10          	mov    0x10(%rax),%rax
  403aef:	48 83 e8 10          	sub    $0x10,%rax
  403af3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403af7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403afb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403aff:	48 8b 12             	mov    (%rdx),%rdx
  403b02:	48 89 10             	mov    %rdx,(%rax)
  403b05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403b09:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  403b0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b11:	88 50 08             	mov    %dl,0x8(%rax)
  403b14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b18:	48 8b 40 10          	mov    0x10(%rax),%rax
  403b1c:	48 83 e8 10          	sub    $0x10,%rax
  403b20:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403b24:	0f b6 c0             	movzbl %al,%eax
  403b27:	83 e0 40             	and    $0x40,%eax
  403b2a:	85 c0                	test   %eax,%eax
  403b2c:	74 48                	je     403b76 <auxsetstr+0x115>
  403b2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403b32:	48 8b 00             	mov    (%rax),%rax
  403b35:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403b39:	0f b6 c0             	movzbl %al,%eax
  403b3c:	83 e0 20             	and    $0x20,%eax
  403b3f:	85 c0                	test   %eax,%eax
  403b41:	74 33                	je     403b76 <auxsetstr+0x115>
  403b43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b47:	48 8b 40 10          	mov    0x10(%rax),%rax
  403b4b:	48 83 e8 10          	sub    $0x10,%rax
  403b4f:	48 8b 00             	mov    (%rax),%rax
  403b52:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403b56:	0f b6 c0             	movzbl %al,%eax
  403b59:	83 e0 18             	and    $0x18,%eax
  403b5c:	85 c0                	test   %eax,%eax
  403b5e:	74 16                	je     403b76 <auxsetstr+0x115>
  403b60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403b64:	48 8b 10             	mov    (%rax),%rdx
  403b67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b6b:	48 89 d6             	mov    %rdx,%rsi
  403b6e:	48 89 c7             	mov    %rax,%rdi
  403b71:	e8 75 0f 01 00       	callq  414aeb <luaC_barrierback_>
  403b76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b7a:	48 8b 40 10          	mov    0x10(%rax),%rax
  403b7e:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  403b82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b86:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403b8a:	e9 93 00 00 00       	jmpq   403c22 <auxsetstr+0x1c1>
  403b8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b93:	48 8b 40 10          	mov    0x10(%rax),%rax
  403b97:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  403b9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403b9f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  403ba3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  403ba7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403bab:	48 89 10             	mov    %rdx,(%rax)
  403bae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403bb2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403bb6:	83 c8 40             	or     $0x40,%eax
  403bb9:	89 c2                	mov    %eax,%edx
  403bbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403bbf:	88 50 08             	mov    %dl,0x8(%rax)
  403bc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403bc6:	48 8b 40 10          	mov    0x10(%rax),%rax
  403bca:	48 8d 50 10          	lea    0x10(%rax),%rdx
  403bce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403bd2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403bd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403bda:	48 8b 40 10          	mov    0x10(%rax),%rax
  403bde:	48 83 e8 20          	sub    $0x20,%rax
  403be2:	48 89 c1             	mov    %rax,%rcx
  403be5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403be9:	48 8b 40 10          	mov    0x10(%rax),%rax
  403bed:	48 83 e8 10          	sub    $0x10,%rax
  403bf1:	48 89 c7             	mov    %rax,%rdi
  403bf4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403bf8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  403bfc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c00:	49 89 d0             	mov    %rdx,%r8
  403c03:	48 89 fa             	mov    %rdi,%rdx
  403c06:	48 89 c7             	mov    %rax,%rdi
  403c09:	e8 2e f5 02 00       	callq  43313c <luaV_finishset>
  403c0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c12:	48 8b 40 10          	mov    0x10(%rax),%rax
  403c16:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
  403c1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c1e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403c22:	90                   	nop
  403c23:	c9                   	leaveq 
  403c24:	c3                   	retq   

0000000000403c25 <lua_setglobal>:
  403c25:	55                   	push   %rbp
  403c26:	48 89 e5             	mov    %rsp,%rbp
  403c29:	48 83 ec 20          	sub    $0x20,%rsp
  403c2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403c31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403c35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c39:	48 8b 40 18          	mov    0x18(%rax),%rax
  403c3d:	48 8b 40 40          	mov    0x40(%rax),%rax
  403c41:	48 8b 40 10          	mov    0x10(%rax),%rax
  403c45:	48 83 c0 10          	add    $0x10,%rax
  403c49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403c4d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403c51:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403c55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c59:	48 89 ce             	mov    %rcx,%rsi
  403c5c:	48 89 c7             	mov    %rax,%rdi
  403c5f:	e8 fd fd ff ff       	callq  403a61 <auxsetstr>
  403c64:	90                   	nop
  403c65:	c9                   	leaveq 
  403c66:	c3                   	retq   

0000000000403c67 <lua_settable>:
  403c67:	55                   	push   %rbp
  403c68:	48 89 e5             	mov    %rsp,%rbp
  403c6b:	48 83 ec 30          	sub    $0x30,%rsp
  403c6f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403c73:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  403c76:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  403c79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403c7d:	89 d6                	mov    %edx,%esi
  403c7f:	48 89 c7             	mov    %rax,%rdi
  403c82:	e8 8f df ff ff       	callq  401c16 <index2value>
  403c87:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403c8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403c8f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403c93:	3c 45                	cmp    $0x45,%al
  403c95:	74 0f                	je     403ca6 <lua_settable+0x3f>
  403c97:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403c9e:	00 
  403c9f:	b8 00 00 00 00       	mov    $0x0,%eax
  403ca4:	eb 38                	jmp    403cde <lua_settable+0x77>
  403ca6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403caa:	48 8b 40 10          	mov    0x10(%rax),%rax
  403cae:	48 83 e8 20          	sub    $0x20,%rax
  403cb2:	48 89 c2             	mov    %rax,%rdx
  403cb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403cb9:	48 8b 00             	mov    (%rax),%rax
  403cbc:	48 89 d6             	mov    %rdx,%rsi
  403cbf:	48 89 c7             	mov    %rax,%rdi
  403cc2:	e8 08 9b 02 00       	callq  42d7cf <luaH_get>
  403cc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ccf:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403cd3:	0f b6 c0             	movzbl %al,%eax
  403cd6:	83 e0 0f             	and    $0xf,%eax
  403cd9:	85 c0                	test   %eax,%eax
  403cdb:	0f 95 c0             	setne  %al
  403cde:	84 c0                	test   %al,%al
  403ce0:	0f 84 9d 00 00 00    	je     403d83 <lua_settable+0x11c>
  403ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403cea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403cf2:	48 8b 40 10          	mov    0x10(%rax),%rax
  403cf6:	48 83 e8 10          	sub    $0x10,%rax
  403cfa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403d02:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403d06:	48 8b 12             	mov    (%rdx),%rdx
  403d09:	48 89 10             	mov    %rdx,(%rax)
  403d0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403d10:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  403d14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403d18:	88 50 08             	mov    %dl,0x8(%rax)
  403d1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d1f:	48 8b 40 10          	mov    0x10(%rax),%rax
  403d23:	48 83 e8 10          	sub    $0x10,%rax
  403d27:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403d2b:	0f b6 c0             	movzbl %al,%eax
  403d2e:	83 e0 40             	and    $0x40,%eax
  403d31:	85 c0                	test   %eax,%eax
  403d33:	0f 84 82 00 00 00    	je     403dbb <lua_settable+0x154>
  403d39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403d3d:	48 8b 00             	mov    (%rax),%rax
  403d40:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403d44:	0f b6 c0             	movzbl %al,%eax
  403d47:	83 e0 20             	and    $0x20,%eax
  403d4a:	85 c0                	test   %eax,%eax
  403d4c:	74 6d                	je     403dbb <lua_settable+0x154>
  403d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d52:	48 8b 40 10          	mov    0x10(%rax),%rax
  403d56:	48 83 e8 10          	sub    $0x10,%rax
  403d5a:	48 8b 00             	mov    (%rax),%rax
  403d5d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403d61:	0f b6 c0             	movzbl %al,%eax
  403d64:	83 e0 18             	and    $0x18,%eax
  403d67:	85 c0                	test   %eax,%eax
  403d69:	74 50                	je     403dbb <lua_settable+0x154>
  403d6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403d6f:	48 8b 10             	mov    (%rax),%rdx
  403d72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d76:	48 89 d6             	mov    %rdx,%rsi
  403d79:	48 89 c7             	mov    %rax,%rdi
  403d7c:	e8 6a 0d 01 00       	callq  414aeb <luaC_barrierback_>
  403d81:	eb 38                	jmp    403dbb <lua_settable+0x154>
  403d83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d87:	48 8b 40 10          	mov    0x10(%rax),%rax
  403d8b:	48 83 e8 10          	sub    $0x10,%rax
  403d8f:	48 89 c1             	mov    %rax,%rcx
  403d92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d96:	48 8b 40 10          	mov    0x10(%rax),%rax
  403d9a:	48 83 e8 20          	sub    $0x20,%rax
  403d9e:	48 89 c7             	mov    %rax,%rdi
  403da1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403da5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  403da9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403dad:	49 89 d0             	mov    %rdx,%r8
  403db0:	48 89 fa             	mov    %rdi,%rdx
  403db3:	48 89 c7             	mov    %rax,%rdi
  403db6:	e8 81 f3 02 00       	callq  43313c <luaV_finishset>
  403dbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403dbf:	48 8b 40 10          	mov    0x10(%rax),%rax
  403dc3:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
  403dc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403dcb:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403dcf:	90                   	nop
  403dd0:	c9                   	leaveq 
  403dd1:	c3                   	retq   

0000000000403dd2 <lua_setfield>:
  403dd2:	55                   	push   %rbp
  403dd3:	48 89 e5             	mov    %rsp,%rbp
  403dd6:	48 83 ec 20          	sub    $0x20,%rsp
  403dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403dde:	89 75 f4             	mov    %esi,-0xc(%rbp)
  403de1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  403de5:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403dec:	89 d6                	mov    %edx,%esi
  403dee:	48 89 c7             	mov    %rax,%rdi
  403df1:	e8 20 de ff ff       	callq  401c16 <index2value>
  403df6:	48 89 c1             	mov    %rax,%rcx
  403df9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403e01:	48 89 ce             	mov    %rcx,%rsi
  403e04:	48 89 c7             	mov    %rax,%rdi
  403e07:	e8 55 fc ff ff       	callq  403a61 <auxsetstr>
  403e0c:	90                   	nop
  403e0d:	c9                   	leaveq 
  403e0e:	c3                   	retq   

0000000000403e0f <lua_seti>:
  403e0f:	55                   	push   %rbp
  403e10:	48 89 e5             	mov    %rsp,%rbp
  403e13:	48 83 ec 60          	sub    $0x60,%rsp
  403e17:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  403e1b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  403e1e:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  403e22:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  403e25:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403e29:	89 d6                	mov    %edx,%esi
  403e2b:	48 89 c7             	mov    %rax,%rdi
  403e2e:	e8 e3 dd ff ff       	callq  401c16 <index2value>
  403e33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403e37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403e3b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403e3f:	3c 45                	cmp    $0x45,%al
  403e41:	74 0f                	je     403e52 <lua_seti+0x43>
  403e43:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403e4a:	00 
  403e4b:	b8 00 00 00 00       	mov    $0x0,%eax
  403e50:	eb 65                	jmp    403eb7 <lua_seti+0xa8>
  403e52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  403e56:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  403e5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403e5e:	48 8b 00             	mov    (%rax),%rax
  403e61:	8b 40 0c             	mov    0xc(%rax),%eax
  403e64:	89 c0                	mov    %eax,%eax
  403e66:	48 39 c2             	cmp    %rax,%rdx
  403e69:	73 1c                	jae    403e87 <lua_seti+0x78>
  403e6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403e6f:	48 8b 00             	mov    (%rax),%rax
  403e72:	48 8b 40 10          	mov    0x10(%rax),%rax
  403e76:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  403e7a:	48 c1 e2 04          	shl    $0x4,%rdx
  403e7e:	48 83 ea 10          	sub    $0x10,%rdx
  403e82:	48 01 d0             	add    %rdx,%rax
  403e85:	eb 19                	jmp    403ea0 <lua_seti+0x91>
  403e87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403e8b:	48 8b 00             	mov    (%rax),%rax
  403e8e:	48 89 c2             	mov    %rax,%rdx
  403e91:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  403e95:	48 89 c6             	mov    %rax,%rsi
  403e98:	48 89 d7             	mov    %rdx,%rdi
  403e9b:	e8 ed 96 02 00       	callq  42d58d <luaH_getint>
  403ea0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ea8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403eac:	0f b6 c0             	movzbl %al,%eax
  403eaf:	83 e0 0f             	and    $0xf,%eax
  403eb2:	85 c0                	test   %eax,%eax
  403eb4:	0f 95 c0             	setne  %al
  403eb7:	84 c0                	test   %al,%al
  403eb9:	0f 84 9d 00 00 00    	je     403f5c <lua_seti+0x14d>
  403ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ec3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403ec7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403ecb:	48 8b 40 10          	mov    0x10(%rax),%rax
  403ecf:	48 83 e8 10          	sub    $0x10,%rax
  403ed3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403ed7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403edb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403edf:	48 8b 12             	mov    (%rdx),%rdx
  403ee2:	48 89 10             	mov    %rdx,(%rax)
  403ee5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403ee9:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  403eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403ef1:	88 50 08             	mov    %dl,0x8(%rax)
  403ef4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403ef8:	48 8b 40 10          	mov    0x10(%rax),%rax
  403efc:	48 83 e8 10          	sub    $0x10,%rax
  403f00:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  403f04:	0f b6 c0             	movzbl %al,%eax
  403f07:	83 e0 40             	and    $0x40,%eax
  403f0a:	85 c0                	test   %eax,%eax
  403f0c:	0f 84 92 00 00 00    	je     403fa4 <lua_seti+0x195>
  403f12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f16:	48 8b 00             	mov    (%rax),%rax
  403f19:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403f1d:	0f b6 c0             	movzbl %al,%eax
  403f20:	83 e0 20             	and    $0x20,%eax
  403f23:	85 c0                	test   %eax,%eax
  403f25:	74 7d                	je     403fa4 <lua_seti+0x195>
  403f27:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403f2b:	48 8b 40 10          	mov    0x10(%rax),%rax
  403f2f:	48 83 e8 10          	sub    $0x10,%rax
  403f33:	48 8b 00             	mov    (%rax),%rax
  403f36:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  403f3a:	0f b6 c0             	movzbl %al,%eax
  403f3d:	83 e0 18             	and    $0x18,%eax
  403f40:	85 c0                	test   %eax,%eax
  403f42:	74 60                	je     403fa4 <lua_seti+0x195>
  403f44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f48:	48 8b 10             	mov    (%rax),%rdx
  403f4b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403f4f:	48 89 d6             	mov    %rdx,%rsi
  403f52:	48 89 c7             	mov    %rax,%rdi
  403f55:	e8 91 0b 01 00       	callq  414aeb <luaC_barrierback_>
  403f5a:	eb 48                	jmp    403fa4 <lua_seti+0x195>
  403f5c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  403f60:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  403f64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403f68:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  403f6c:	48 89 10             	mov    %rdx,(%rax)
  403f6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403f73:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  403f77:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403f7b:	48 8b 40 10          	mov    0x10(%rax),%rax
  403f7f:	48 83 e8 10          	sub    $0x10,%rax
  403f83:	48 89 c7             	mov    %rax,%rdi
  403f86:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403f8a:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  403f8e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  403f92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403f96:	49 89 c8             	mov    %rcx,%r8
  403f99:	48 89 f9             	mov    %rdi,%rcx
  403f9c:	48 89 c7             	mov    %rax,%rdi
  403f9f:	e8 98 f1 02 00       	callq  43313c <luaV_finishset>
  403fa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403fa8:	48 8b 40 10          	mov    0x10(%rax),%rax
  403fac:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  403fb0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403fb4:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403fb8:	90                   	nop
  403fb9:	c9                   	leaveq 
  403fba:	c3                   	retq   

0000000000403fbb <aux_rawset>:
  403fbb:	55                   	push   %rbp
  403fbc:	48 89 e5             	mov    %rsp,%rbp
  403fbf:	48 83 ec 30          	sub    $0x30,%rsp
  403fc3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403fc7:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  403fca:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403fce:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  403fd1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  403fd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403fd8:	89 d6                	mov    %edx,%esi
  403fda:	48 89 c7             	mov    %rax,%rdi
  403fdd:	e8 e1 f6 ff ff       	callq  4036c3 <gettable>
  403fe2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403fea:	48 8b 40 10          	mov    0x10(%rax),%rax
  403fee:	48 83 e8 10          	sub    $0x10,%rax
  403ff2:	48 89 c1             	mov    %rax,%rcx
  403ff5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403ff9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  403ffd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404001:	48 89 c7             	mov    %rax,%rdi
  404004:	e8 f8 98 02 00       	callq  42d901 <luaH_set>
  404009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40400d:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  404011:	83 e0 c0             	and    $0xffffffc0,%eax
  404014:	89 c2                	mov    %eax,%edx
  404016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40401a:	88 50 0a             	mov    %dl,0xa(%rax)
  40401d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404021:	48 8b 40 10          	mov    0x10(%rax),%rax
  404025:	48 83 e8 10          	sub    $0x10,%rax
  404029:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40402d:	0f b6 c0             	movzbl %al,%eax
  404030:	83 e0 40             	and    $0x40,%eax
  404033:	85 c0                	test   %eax,%eax
  404035:	74 42                	je     404079 <aux_rawset+0xbe>
  404037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40403b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40403f:	0f b6 c0             	movzbl %al,%eax
  404042:	83 e0 20             	and    $0x20,%eax
  404045:	85 c0                	test   %eax,%eax
  404047:	74 30                	je     404079 <aux_rawset+0xbe>
  404049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40404d:	48 8b 40 10          	mov    0x10(%rax),%rax
  404051:	48 83 e8 10          	sub    $0x10,%rax
  404055:	48 8b 00             	mov    (%rax),%rax
  404058:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40405c:	0f b6 c0             	movzbl %al,%eax
  40405f:	83 e0 18             	and    $0x18,%eax
  404062:	85 c0                	test   %eax,%eax
  404064:	74 13                	je     404079 <aux_rawset+0xbe>
  404066:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40406a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40406e:	48 89 d6             	mov    %rdx,%rsi
  404071:	48 89 c7             	mov    %rax,%rdi
  404074:	e8 72 0a 01 00       	callq  414aeb <luaC_barrierback_>
  404079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40407d:	48 8b 40 10          	mov    0x10(%rax),%rax
  404081:	8b 55 e0             	mov    -0x20(%rbp),%edx
  404084:	48 63 d2             	movslq %edx,%rdx
  404087:	48 c1 e2 04          	shl    $0x4,%rdx
  40408b:	48 f7 da             	neg    %rdx
  40408e:	48 01 c2             	add    %rax,%rdx
  404091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404095:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404099:	90                   	nop
  40409a:	c9                   	leaveq 
  40409b:	c3                   	retq   

000000000040409c <lua_rawset>:
  40409c:	55                   	push   %rbp
  40409d:	48 89 e5             	mov    %rsp,%rbp
  4040a0:	48 83 ec 10          	sub    $0x10,%rsp
  4040a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4040a8:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4040ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4040af:	48 8b 40 10          	mov    0x10(%rax),%rax
  4040b3:	48 83 e8 20          	sub    $0x20,%rax
  4040b7:	48 89 c2             	mov    %rax,%rdx
  4040ba:	8b 75 f4             	mov    -0xc(%rbp),%esi
  4040bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4040c1:	b9 02 00 00 00       	mov    $0x2,%ecx
  4040c6:	48 89 c7             	mov    %rax,%rdi
  4040c9:	e8 ed fe ff ff       	callq  403fbb <aux_rawset>
  4040ce:	90                   	nop
  4040cf:	c9                   	leaveq 
  4040d0:	c3                   	retq   

00000000004040d1 <lua_rawsetp>:
  4040d1:	55                   	push   %rbp
  4040d2:	48 89 e5             	mov    %rsp,%rbp
  4040d5:	48 83 ec 40          	sub    $0x40,%rsp
  4040d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4040dd:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4040e0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4040e4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  4040e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4040ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4040f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4040f4:	48 89 10             	mov    %rdx,(%rax)
  4040f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4040fb:	c6 40 08 02          	movb   $0x2,0x8(%rax)
  4040ff:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  404103:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  404106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40410a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40410f:	48 89 c7             	mov    %rax,%rdi
  404112:	e8 a4 fe ff ff       	callq  403fbb <aux_rawset>
  404117:	90                   	nop
  404118:	c9                   	leaveq 
  404119:	c3                   	retq   

000000000040411a <lua_rawseti>:
  40411a:	55                   	push   %rbp
  40411b:	48 89 e5             	mov    %rsp,%rbp
  40411e:	48 83 ec 30          	sub    $0x30,%rsp
  404122:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404126:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  404129:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40412d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  404130:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404134:	89 d6                	mov    %edx,%esi
  404136:	48 89 c7             	mov    %rax,%rdi
  404139:	e8 85 f5 ff ff       	callq  4036c3 <gettable>
  40413e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404146:	48 8b 40 10          	mov    0x10(%rax),%rax
  40414a:	48 83 e8 10          	sub    $0x10,%rax
  40414e:	48 89 c1             	mov    %rax,%rcx
  404151:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  404155:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  404159:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40415d:	48 89 c7             	mov    %rax,%rdi
  404160:	e8 ed 97 02 00       	callq  42d952 <luaH_setint>
  404165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404169:	48 8b 40 10          	mov    0x10(%rax),%rax
  40416d:	48 83 e8 10          	sub    $0x10,%rax
  404171:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  404175:	0f b6 c0             	movzbl %al,%eax
  404178:	83 e0 40             	and    $0x40,%eax
  40417b:	85 c0                	test   %eax,%eax
  40417d:	74 42                	je     4041c1 <lua_rawseti+0xa7>
  40417f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404183:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  404187:	0f b6 c0             	movzbl %al,%eax
  40418a:	83 e0 20             	and    $0x20,%eax
  40418d:	85 c0                	test   %eax,%eax
  40418f:	74 30                	je     4041c1 <lua_rawseti+0xa7>
  404191:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404195:	48 8b 40 10          	mov    0x10(%rax),%rax
  404199:	48 83 e8 10          	sub    $0x10,%rax
  40419d:	48 8b 00             	mov    (%rax),%rax
  4041a0:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4041a4:	0f b6 c0             	movzbl %al,%eax
  4041a7:	83 e0 18             	and    $0x18,%eax
  4041aa:	85 c0                	test   %eax,%eax
  4041ac:	74 13                	je     4041c1 <lua_rawseti+0xa7>
  4041ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4041b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4041b6:	48 89 d6             	mov    %rdx,%rsi
  4041b9:	48 89 c7             	mov    %rax,%rdi
  4041bc:	e8 2a 09 01 00       	callq  414aeb <luaC_barrierback_>
  4041c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4041c5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4041c9:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4041cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4041d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4041d5:	90                   	nop
  4041d6:	c9                   	leaveq 
  4041d7:	c3                   	retq   

00000000004041d8 <lua_setmetatable>:
  4041d8:	55                   	push   %rbp
  4041d9:	48 89 e5             	mov    %rsp,%rbp
  4041dc:	48 83 ec 20          	sub    $0x20,%rsp
  4041e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4041e4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4041e7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4041ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4041ee:	89 d6                	mov    %edx,%esi
  4041f0:	48 89 c7             	mov    %rax,%rdi
  4041f3:	e8 1e da ff ff       	callq  401c16 <index2value>
  4041f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4041fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404200:	48 8b 40 10          	mov    0x10(%rax),%rax
  404204:	48 83 e8 10          	sub    $0x10,%rax
  404208:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40420c:	0f b6 c0             	movzbl %al,%eax
  40420f:	83 e0 0f             	and    $0xf,%eax
  404212:	85 c0                	test   %eax,%eax
  404214:	75 0a                	jne    404220 <lua_setmetatable+0x48>
  404216:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40421d:	00 
  40421e:	eb 13                	jmp    404233 <lua_setmetatable+0x5b>
  404220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404224:	48 8b 40 10          	mov    0x10(%rax),%rax
  404228:	48 83 e8 10          	sub    $0x10,%rax
  40422c:	48 8b 00             	mov    (%rax),%rax
  40422f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404233:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404237:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40423b:	0f b6 c0             	movzbl %al,%eax
  40423e:	83 e0 0f             	and    $0xf,%eax
  404241:	83 f8 05             	cmp    $0x5,%eax
  404244:	74 0e                	je     404254 <lua_setmetatable+0x7c>
  404246:	83 f8 07             	cmp    $0x7,%eax
  404249:	0f 84 82 00 00 00    	je     4042d1 <lua_setmetatable+0xf9>
  40424f:	e9 f7 00 00 00       	jmpq   40434b <lua_setmetatable+0x173>
  404254:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404258:	48 8b 00             	mov    (%rax),%rax
  40425b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40425f:	48 89 50 28          	mov    %rdx,0x28(%rax)
  404263:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404268:	0f 84 04 01 00 00    	je     404372 <lua_setmetatable+0x19a>
  40426e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404272:	48 8b 00             	mov    (%rax),%rax
  404275:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  404279:	0f b6 c0             	movzbl %al,%eax
  40427c:	83 e0 20             	and    $0x20,%eax
  40427f:	85 c0                	test   %eax,%eax
  404281:	74 2f                	je     4042b2 <lua_setmetatable+0xda>
  404283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404287:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40428b:	0f b6 c0             	movzbl %al,%eax
  40428e:	83 e0 18             	and    $0x18,%eax
  404291:	85 c0                	test   %eax,%eax
  404293:	74 1d                	je     4042b2 <lua_setmetatable+0xda>
  404295:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  404299:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40429d:	48 8b 00             	mov    (%rax),%rax
  4042a0:	48 89 c1             	mov    %rax,%rcx
  4042a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4042a7:	48 89 ce             	mov    %rcx,%rsi
  4042aa:	48 89 c7             	mov    %rax,%rdi
  4042ad:	e8 9d 07 01 00       	callq  414a4f <luaC_barrier_>
  4042b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4042b6:	48 8b 08             	mov    (%rax),%rcx
  4042b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4042bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4042c1:	48 89 ce             	mov    %rcx,%rsi
  4042c4:	48 89 c7             	mov    %rax,%rdi
  4042c7:	e8 41 2a 01 00       	callq  416d0d <luaC_checkfinalizer>
  4042cc:	e9 a1 00 00 00       	jmpq   404372 <lua_setmetatable+0x19a>
  4042d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4042d5:	48 8b 00             	mov    (%rax),%rax
  4042d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4042dc:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4042e0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4042e5:	0f 84 8a 00 00 00    	je     404375 <lua_setmetatable+0x19d>
  4042eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4042ef:	48 8b 00             	mov    (%rax),%rax
  4042f2:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4042f6:	0f b6 c0             	movzbl %al,%eax
  4042f9:	83 e0 20             	and    $0x20,%eax
  4042fc:	85 c0                	test   %eax,%eax
  4042fe:	74 2f                	je     40432f <lua_setmetatable+0x157>
  404300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404304:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  404308:	0f b6 c0             	movzbl %al,%eax
  40430b:	83 e0 18             	and    $0x18,%eax
  40430e:	85 c0                	test   %eax,%eax
  404310:	74 1d                	je     40432f <lua_setmetatable+0x157>
  404312:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  404316:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40431a:	48 8b 00             	mov    (%rax),%rax
  40431d:	48 89 c1             	mov    %rax,%rcx
  404320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404324:	48 89 ce             	mov    %rcx,%rsi
  404327:	48 89 c7             	mov    %rax,%rdi
  40432a:	e8 20 07 01 00       	callq  414a4f <luaC_barrier_>
  40432f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404333:	48 8b 08             	mov    (%rax),%rcx
  404336:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40433a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40433e:	48 89 ce             	mov    %rcx,%rsi
  404341:	48 89 c7             	mov    %rax,%rdi
  404344:	e8 c4 29 01 00       	callq  416d0d <luaC_checkfinalizer>
  404349:	eb 2a                	jmp    404375 <lua_setmetatable+0x19d>
  40434b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40434f:	48 8b 40 18          	mov    0x18(%rax),%rax
  404353:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  404357:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
  40435b:	0f b6 d2             	movzbl %dl,%edx
  40435e:	83 e2 0f             	and    $0xf,%edx
  404361:	48 63 d2             	movslq %edx,%rdx
  404364:	48 8d 4a 3c          	lea    0x3c(%rdx),%rcx
  404368:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40436c:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
  404370:	eb 04                	jmp    404376 <lua_setmetatable+0x19e>
  404372:	90                   	nop
  404373:	eb 01                	jmp    404376 <lua_setmetatable+0x19e>
  404375:	90                   	nop
  404376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40437a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40437e:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  404382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404386:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40438a:	b8 01 00 00 00       	mov    $0x1,%eax
  40438f:	c9                   	leaveq 
  404390:	c3                   	retq   

0000000000404391 <lua_setiuservalue>:
  404391:	55                   	push   %rbp
  404392:	48 89 e5             	mov    %rsp,%rbp
  404395:	48 83 ec 30          	sub    $0x30,%rsp
  404399:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40439d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4043a0:	89 55 d0             	mov    %edx,-0x30(%rbp)
  4043a3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4043a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4043aa:	89 d6                	mov    %edx,%esi
  4043ac:	48 89 c7             	mov    %rax,%rdi
  4043af:	e8 62 d8 ff ff       	callq  401c16 <index2value>
  4043b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4043b8:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4043bb:	8d 50 ff             	lea    -0x1(%rax),%edx
  4043be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4043c2:	48 8b 00             	mov    (%rax),%rax
  4043c5:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4043c9:	0f b7 c0             	movzwl %ax,%eax
  4043cc:	39 c2                	cmp    %eax,%edx
  4043ce:	72 0c                	jb     4043dc <lua_setiuservalue+0x4b>
  4043d0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4043d7:	e9 b9 00 00 00       	jmpq   404495 <lua_setiuservalue+0x104>
  4043dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4043e0:	48 8b 00             	mov    (%rax),%rax
  4043e3:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4043e6:	83 ea 01             	sub    $0x1,%edx
  4043e9:	48 63 d2             	movslq %edx,%rdx
  4043ec:	48 83 c2 02          	add    $0x2,%rdx
  4043f0:	48 c1 e2 04          	shl    $0x4,%rdx
  4043f4:	48 01 d0             	add    %rdx,%rax
  4043f7:	48 83 c0 08          	add    $0x8,%rax
  4043fb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4043ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404403:	48 8b 40 10          	mov    0x10(%rax),%rax
  404407:	48 83 e8 10          	sub    $0x10,%rax
  40440b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40440f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404413:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404417:	48 8b 12             	mov    (%rdx),%rdx
  40441a:	48 89 10             	mov    %rdx,(%rax)
  40441d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404421:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  404425:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404429:	88 50 08             	mov    %dl,0x8(%rax)
  40442c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404430:	48 8b 40 10          	mov    0x10(%rax),%rax
  404434:	48 83 e8 10          	sub    $0x10,%rax
  404438:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40443c:	0f b6 c0             	movzbl %al,%eax
  40443f:	83 e0 40             	and    $0x40,%eax
  404442:	85 c0                	test   %eax,%eax
  404444:	74 48                	je     40448e <lua_setiuservalue+0xfd>
  404446:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40444a:	48 8b 00             	mov    (%rax),%rax
  40444d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  404451:	0f b6 c0             	movzbl %al,%eax
  404454:	83 e0 20             	and    $0x20,%eax
  404457:	85 c0                	test   %eax,%eax
  404459:	74 33                	je     40448e <lua_setiuservalue+0xfd>
  40445b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40445f:	48 8b 40 10          	mov    0x10(%rax),%rax
  404463:	48 83 e8 10          	sub    $0x10,%rax
  404467:	48 8b 00             	mov    (%rax),%rax
  40446a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40446e:	0f b6 c0             	movzbl %al,%eax
  404471:	83 e0 18             	and    $0x18,%eax
  404474:	85 c0                	test   %eax,%eax
  404476:	74 16                	je     40448e <lua_setiuservalue+0xfd>
  404478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40447c:	48 8b 10             	mov    (%rax),%rdx
  40447f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404483:	48 89 d6             	mov    %rdx,%rsi
  404486:	48 89 c7             	mov    %rax,%rdi
  404489:	e8 5d 06 01 00       	callq  414aeb <luaC_barrierback_>
  40448e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  404495:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404499:	48 8b 40 10          	mov    0x10(%rax),%rax
  40449d:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4044a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4044a5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4044a9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4044ac:	c9                   	leaveq 
  4044ad:	c3                   	retq   

00000000004044ae <lua_callk>:
  4044ae:	55                   	push   %rbp
  4044af:	48 89 e5             	mov    %rsp,%rbp
  4044b2:	48 83 ec 30          	sub    $0x30,%rsp
  4044b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4044ba:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4044bd:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4044c0:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4044c4:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  4044c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044cc:	48 8b 40 10          	mov    0x10(%rax),%rax
  4044d0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4044d3:	48 63 d2             	movslq %edx,%rdx
  4044d6:	48 c1 e2 04          	shl    $0x4,%rdx
  4044da:	48 c7 c1 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rcx
  4044e1:	48 29 d1             	sub    %rdx,%rcx
  4044e4:	48 89 ca             	mov    %rcx,%rdx
  4044e7:	48 01 d0             	add    %rdx,%rax
  4044ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4044ee:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  4044f3:	74 4a                	je     40453f <lua_callk+0x91>
  4044f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044f9:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  4044ff:	66 b8 00 00          	mov    $0x0,%ax
  404503:	85 c0                	test   %eax,%eax
  404505:	75 38                	jne    40453f <lua_callk+0x91>
  404507:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40450b:	48 8b 40 20          	mov    0x20(%rax),%rax
  40450f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404513:	48 89 50 20          	mov    %rdx,0x20(%rax)
  404517:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40451b:	48 8b 40 20          	mov    0x20(%rax),%rax
  40451f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  404523:	48 89 50 30          	mov    %rdx,0x30(%rax)
  404527:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40452a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40452e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404532:	48 89 ce             	mov    %rcx,%rsi
  404535:	48 89 c7             	mov    %rax,%rdi
  404538:	e8 8c e3 00 00       	callq  4128c9 <luaD_call>
  40453d:	eb 16                	jmp    404555 <lua_callk+0xa7>
  40453f:	8b 55 e0             	mov    -0x20(%rbp),%edx
  404542:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  404546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40454a:	48 89 ce             	mov    %rcx,%rsi
  40454d:	48 89 c7             	mov    %rax,%rdi
  404550:	e8 a2 e3 00 00       	callq  4128f7 <luaD_callnoyield>
  404555:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  404559:	79 2d                	jns    404588 <lua_callk+0xda>
  40455b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40455f:	48 8b 40 20          	mov    0x20(%rax),%rax
  404563:	48 8b 50 08          	mov    0x8(%rax),%rdx
  404567:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40456b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40456f:	48 39 c2             	cmp    %rax,%rdx
  404572:	73 14                	jae    404588 <lua_callk+0xda>
  404574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404578:	48 8b 40 20          	mov    0x20(%rax),%rax
  40457c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  404580:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  404584:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404588:	90                   	nop
  404589:	c9                   	leaveq 
  40458a:	c3                   	retq   

000000000040458b <f_call>:
  40458b:	55                   	push   %rbp
  40458c:	48 89 e5             	mov    %rsp,%rbp
  40458f:	48 83 ec 20          	sub    $0x20,%rsp
  404593:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404597:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40459b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40459f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4045a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4045a7:	8b 50 08             	mov    0x8(%rax),%edx
  4045aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4045ae:	48 8b 08             	mov    (%rax),%rcx
  4045b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045b5:	48 89 ce             	mov    %rcx,%rsi
  4045b8:	48 89 c7             	mov    %rax,%rdi
  4045bb:	e8 37 e3 00 00       	callq  4128f7 <luaD_callnoyield>
  4045c0:	90                   	nop
  4045c1:	c9                   	leaveq 
  4045c2:	c3                   	retq   

00000000004045c3 <lua_pcallk>:
  4045c3:	55                   	push   %rbp
  4045c4:	48 89 e5             	mov    %rsp,%rbp
  4045c7:	48 83 ec 60          	sub    $0x60,%rsp
  4045cb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4045cf:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  4045d2:	89 55 c0             	mov    %edx,-0x40(%rbp)
  4045d5:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  4045d8:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
  4045dc:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
  4045e0:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
  4045e4:	75 0a                	jne    4045f0 <lua_pcallk+0x2d>
  4045e6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4045ed:	00 
  4045ee:	eb 2b                	jmp    40461b <lua_pcallk+0x58>
  4045f0:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4045f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4045f7:	89 d6                	mov    %edx,%esi
  4045f9:	48 89 c7             	mov    %rax,%rdi
  4045fc:	e8 1c d7 ff ff       	callq  401d1d <index2stack>
  404601:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404605:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404609:	48 8b 40 30          	mov    0x30(%rax),%rax
  40460d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  404611:	48 29 c2             	sub    %rax,%rdx
  404614:	48 89 d0             	mov    %rdx,%rax
  404617:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40461b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40461f:	48 8b 40 10          	mov    0x10(%rax),%rax
  404623:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  404626:	48 63 d2             	movslq %edx,%rdx
  404629:	48 c1 e2 04          	shl    $0x4,%rdx
  40462d:	48 c7 c1 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rcx
  404634:	48 29 d1             	sub    %rdx,%rcx
  404637:	48 89 ca             	mov    %rcx,%rdx
  40463a:	48 01 d0             	add    %rdx,%rax
  40463d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  404641:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404646:	74 12                	je     40465a <lua_pcallk+0x97>
  404648:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40464c:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  404652:	66 b8 00 00          	mov    $0x0,%ax
  404656:	85 c0                	test   %eax,%eax
  404658:	74 3c                	je     404696 <lua_pcallk+0xd3>
  40465a:	8b 45 c0             	mov    -0x40(%rbp),%eax
  40465d:	89 45 d8             	mov    %eax,-0x28(%rbp)
  404660:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404664:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404668:	48 8b 40 30          	mov    0x30(%rax),%rax
  40466c:	48 89 d1             	mov    %rdx,%rcx
  40466f:	48 29 c1             	sub    %rax,%rcx
  404672:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  404676:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  40467a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40467e:	49 89 f0             	mov    %rsi,%r8
  404681:	be 8b 45 40 00       	mov    $0x40458b,%esi
  404686:	48 89 c7             	mov    %rax,%rdi
  404689:	e8 a7 ea 00 00       	callq  413135 <luaD_pcall>
  40468e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  404691:	e9 df 00 00 00       	jmpq   404775 <lua_pcallk+0x1b2>
  404696:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40469a:	48 8b 40 20          	mov    0x20(%rax),%rax
  40469e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4046a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4046a6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  4046aa:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4046ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4046b2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4046b6:	48 89 50 30          	mov    %rdx,0x30(%rax)
  4046ba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4046be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4046c2:	48 8b 40 30          	mov    0x30(%rax),%rax
  4046c6:	48 29 c2             	sub    %rax,%rdx
  4046c9:	48 89 d0             	mov    %rdx,%rax
  4046cc:	89 c2                	mov    %eax,%edx
  4046ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4046d2:	89 50 38             	mov    %edx,0x38(%rax)
  4046d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4046d9:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
  4046e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4046e4:	48 89 50 28          	mov    %rdx,0x28(%rax)
  4046e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4046ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4046f0:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  4046f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4046fb:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4046ff:	83 e0 fe             	and    $0xfffffffe,%eax
  404702:	89 c2                	mov    %eax,%edx
  404704:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404708:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40470c:	0f b6 c0             	movzbl %al,%eax
  40470f:	09 d0                	or     %edx,%eax
  404711:	89 c2                	mov    %eax,%edx
  404713:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404717:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  40471b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40471f:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  404723:	83 c8 10             	or     $0x10,%eax
  404726:	89 c2                	mov    %eax,%edx
  404728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40472c:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  404730:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  404734:	8b 55 c0             	mov    -0x40(%rbp),%edx
  404737:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40473b:	48 89 ce             	mov    %rcx,%rsi
  40473e:	48 89 c7             	mov    %rax,%rdi
  404741:	e8 83 e1 00 00       	callq  4128c9 <luaD_call>
  404746:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40474a:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40474e:	83 e0 ef             	and    $0xffffffef,%eax
  404751:	89 c2                	mov    %eax,%edx
  404753:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404757:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  40475b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40475f:	48 8b 50 28          	mov    0x28(%rax),%rdx
  404763:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404767:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  40476e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404775:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
  404779:	79 2d                	jns    4047a8 <lua_pcallk+0x1e5>
  40477b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40477f:	48 8b 40 20          	mov    0x20(%rax),%rax
  404783:	48 8b 50 08          	mov    0x8(%rax),%rdx
  404787:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40478b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40478f:	48 39 c2             	cmp    %rax,%rdx
  404792:	73 14                	jae    4047a8 <lua_pcallk+0x1e5>
  404794:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404798:	48 8b 40 20          	mov    0x20(%rax),%rax
  40479c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4047a0:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  4047a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4047a8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4047ab:	c9                   	leaveq 
  4047ac:	c3                   	retq   

00000000004047ad <lua_load>:
  4047ad:	55                   	push   %rbp
  4047ae:	48 89 e5             	mov    %rsp,%rbp
  4047b1:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  4047b5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  4047b9:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4047bd:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4047c1:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4047c5:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4047c9:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  4047ce:	75 08                	jne    4047d8 <lua_load+0x2b>
  4047d0:	48 c7 45 90 e2 cd 43 	movq   $0x43cde2,-0x70(%rbp)
  4047d7:	00 
  4047d8:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  4047dc:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4047e0:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  4047e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4047e8:	48 89 c7             	mov    %rax,%rdi
  4047eb:	e8 19 83 03 00       	callq  43cb09 <luaZ_init>
  4047f0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4047f4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  4047f8:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  4047fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404800:	48 89 c7             	mov    %rax,%rdi
  404803:	e8 94 eb 00 00       	callq  41339c <luaD_protectedparser>
  404808:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40480b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40480f:	0f 85 d1 00 00 00    	jne    4048e6 <lua_load+0x139>
  404815:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404819:	48 8b 40 10          	mov    0x10(%rax),%rax
  40481d:	48 83 e8 10          	sub    $0x10,%rax
  404821:	48 8b 00             	mov    (%rax),%rax
  404824:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404828:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40482c:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  404830:	84 c0                	test   %al,%al
  404832:	0f 84 ae 00 00 00    	je     4048e6 <lua_load+0x139>
  404838:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40483c:	48 8b 40 18          	mov    0x18(%rax),%rax
  404840:	48 8b 40 40          	mov    0x40(%rax),%rax
  404844:	48 8b 40 10          	mov    0x10(%rax),%rax
  404848:	48 83 c0 10          	add    $0x10,%rax
  40484c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404850:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404854:	48 8b 40 20          	mov    0x20(%rax),%rax
  404858:	48 8b 40 10          	mov    0x10(%rax),%rax
  40485c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  404860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404864:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  404868:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40486c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  404870:	48 8b 12             	mov    (%rdx),%rdx
  404873:	48 89 10             	mov    %rdx,(%rax)
  404876:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40487a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40487e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404882:	88 50 08             	mov    %dl,0x8(%rax)
  404885:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404889:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40488d:	0f b6 c0             	movzbl %al,%eax
  404890:	83 e0 40             	and    $0x40,%eax
  404893:	85 c0                	test   %eax,%eax
  404895:	74 4f                	je     4048e6 <lua_load+0x139>
  404897:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40489b:	48 8b 40 20          	mov    0x20(%rax),%rax
  40489f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4048a3:	0f b6 c0             	movzbl %al,%eax
  4048a6:	83 e0 20             	and    $0x20,%eax
  4048a9:	85 c0                	test   %eax,%eax
  4048ab:	74 39                	je     4048e6 <lua_load+0x139>
  4048ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4048b1:	48 8b 00             	mov    (%rax),%rax
  4048b4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4048b8:	0f b6 c0             	movzbl %al,%eax
  4048bb:	83 e0 18             	and    $0x18,%eax
  4048be:	85 c0                	test   %eax,%eax
  4048c0:	74 24                	je     4048e6 <lua_load+0x139>
  4048c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4048c6:	48 8b 00             	mov    (%rax),%rax
  4048c9:	48 89 c2             	mov    %rax,%rdx
  4048cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4048d0:	48 8b 40 20          	mov    0x20(%rax),%rax
  4048d4:	48 89 c1             	mov    %rax,%rcx
  4048d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4048db:	48 89 ce             	mov    %rcx,%rsi
  4048de:	48 89 c7             	mov    %rax,%rdi
  4048e1:	e8 69 01 01 00       	callq  414a4f <luaC_barrier_>
  4048e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4048e9:	c9                   	leaveq 
  4048ea:	c3                   	retq   

00000000004048eb <lua_dump>:
  4048eb:	55                   	push   %rbp
  4048ec:	48 89 e5             	mov    %rsp,%rbp
  4048ef:	48 83 ec 30          	sub    $0x30,%rsp
  4048f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4048f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4048fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4048ff:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  404902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404906:	48 8b 40 10          	mov    0x10(%rax),%rax
  40490a:	48 83 e8 10          	sub    $0x10,%rax
  40490e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404916:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40491a:	3c 46                	cmp    $0x46,%al
  40491c:	75 2a                	jne    404948 <lua_dump+0x5d>
  40491e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404922:	48 8b 00             	mov    (%rax),%rax
  404925:	48 8b 70 18          	mov    0x18(%rax),%rsi
  404929:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40492c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  404930:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404938:	41 89 f8             	mov    %edi,%r8d
  40493b:	48 89 c7             	mov    %rax,%rdi
  40493e:	e8 6f f4 00 00       	callq  413db2 <luaU_dump>
  404943:	89 45 fc             	mov    %eax,-0x4(%rbp)
  404946:	eb 07                	jmp    40494f <lua_dump+0x64>
  404948:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40494f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404952:	c9                   	leaveq 
  404953:	c3                   	retq   

0000000000404954 <lua_status>:
  404954:	55                   	push   %rbp
  404955:	48 89 e5             	mov    %rsp,%rbp
  404958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40495c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404960:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  404964:	0f b6 c0             	movzbl %al,%eax
  404967:	5d                   	pop    %rbp
  404968:	c3                   	retq   

0000000000404969 <lua_gc>:
  404969:	55                   	push   %rbp
  40496a:	48 89 e5             	mov    %rsp,%rbp
  40496d:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
  404974:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
  40497b:	89 b5 e4 fe ff ff    	mov    %esi,-0x11c(%rbp)
  404981:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  404988:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  40498f:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  404996:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  40499d:	84 c0                	test   %al,%al
  40499f:	74 20                	je     4049c1 <lua_gc+0x58>
  4049a1:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  4049a5:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  4049a9:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  4049ad:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4049b1:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  4049b5:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  4049b9:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  4049bd:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  4049c1:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
  4049c8:	00 00 00 
  4049cb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  4049d2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4049d6:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4049dd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4049e4:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  4049e8:	0f b6 c0             	movzbl %al,%eax
  4049eb:	83 e0 02             	and    $0x2,%eax
  4049ee:	85 c0                	test   %eax,%eax
  4049f0:	74 0a                	je     4049fc <lua_gc+0x93>
  4049f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4049f7:	e9 fb 05 00 00       	jmpq   404ff7 <lua_gc+0x68e>
  4049fc:	c7 85 f8 fe ff ff 10 	movl   $0x10,-0x108(%rbp)
  404a03:	00 00 00 
  404a06:	c7 85 fc fe ff ff 30 	movl   $0x30,-0x104(%rbp)
  404a0d:	00 00 00 
  404a10:	48 8d 45 10          	lea    0x10(%rbp),%rax
  404a14:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  404a1b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  404a22:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  404a29:	83 bd e4 fe ff ff 0b 	cmpl   $0xb,-0x11c(%rbp)
  404a30:	0f 87 ae 05 00 00    	ja     404fe4 <lua_gc+0x67b>
  404a36:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  404a3c:	48 8b 04 c5 e8 cd 43 	mov    0x43cde8(,%rax,8),%rax
  404a43:	00 
  404a44:	ff e0                	jmpq   *%rax
  404a46:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404a4d:	c6 40 6a 01          	movb   $0x1,0x6a(%rax)
  404a51:	e9 9b 05 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404a56:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404a5d:	be 00 00 00 00       	mov    $0x0,%esi
  404a62:	48 89 c7             	mov    %rax,%rdi
  404a65:	e8 cc 0e 02 00       	callq  425936 <luaE_setdebt>
  404a6a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404a71:	c6 40 6a 00          	movb   $0x0,0x6a(%rax)
  404a75:	e9 77 05 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404a7a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404a81:	be 00 00 00 00       	mov    $0x0,%esi
  404a86:	48 89 c7             	mov    %rax,%rdi
  404a89:	e8 b1 39 01 00       	callq  41843f <luaC_fullgc>
  404a8e:	e9 5e 05 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404a93:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404a9a:	48 8b 50 10          	mov    0x10(%rax),%rdx
  404a9e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404aa5:	48 8b 40 18          	mov    0x18(%rax),%rax
  404aa9:	48 01 d0             	add    %rdx,%rax
  404aac:	48 c1 e8 0a          	shr    $0xa,%rax
  404ab0:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404ab6:	e9 36 05 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404abb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404ac2:	48 8b 40 10          	mov    0x10(%rax),%rax
  404ac6:	89 c2                	mov    %eax,%edx
  404ac8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404acf:	48 8b 40 18          	mov    0x18(%rax),%rax
  404ad3:	01 d0                	add    %edx,%eax
  404ad5:	25 ff 03 00 00       	and    $0x3ff,%eax
  404ada:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404ae0:	e9 0c 05 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404ae5:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404aeb:	83 f8 2f             	cmp    $0x2f,%eax
  404aee:	77 23                	ja     404b13 <lua_gc+0x1aa>
  404af0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404af7:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404afd:	89 d2                	mov    %edx,%edx
  404aff:	48 01 d0             	add    %rdx,%rax
  404b02:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404b08:	83 c2 08             	add    $0x8,%edx
  404b0b:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404b11:	eb 12                	jmp    404b25 <lua_gc+0x1bc>
  404b13:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404b1a:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404b1e:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404b25:	8b 00                	mov    (%rax),%eax
  404b27:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  404b2d:	48 c7 85 40 ff ff ff 	movq   $0x1,-0xc0(%rbp)
  404b34:	01 00 00 00 
  404b38:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404b3f:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  404b43:	88 85 33 ff ff ff    	mov    %al,-0xcd(%rbp)
  404b49:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404b50:	c6 40 6a 00          	movb   $0x0,0x6a(%rax)
  404b54:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
  404b5b:	75 25                	jne    404b82 <lua_gc+0x219>
  404b5d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404b64:	be 00 00 00 00       	mov    $0x0,%esi
  404b69:	48 89 c7             	mov    %rax,%rdi
  404b6c:	e8 c5 0d 02 00       	callq  425936 <luaE_setdebt>
  404b71:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404b78:	48 89 c7             	mov    %rax,%rdi
  404b7b:	e8 d8 37 01 00       	callq  418358 <luaC_step>
  404b80:	eb 60                	jmp    404be2 <lua_gc+0x279>
  404b82:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  404b88:	48 98                	cltq   
  404b8a:	48 c1 e0 0a          	shl    $0xa,%rax
  404b8e:	48 89 c2             	mov    %rax,%rdx
  404b91:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404b98:	48 8b 40 18          	mov    0x18(%rax),%rax
  404b9c:	48 01 d0             	add    %rdx,%rax
  404b9f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  404ba6:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  404bad:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404bb4:	48 89 d6             	mov    %rdx,%rsi
  404bb7:	48 89 c7             	mov    %rax,%rdi
  404bba:	e8 77 0d 02 00       	callq  425936 <luaE_setdebt>
  404bbf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404bc6:	48 8b 40 18          	mov    0x18(%rax),%rax
  404bca:	48 8b 40 18          	mov    0x18(%rax),%rax
  404bce:	48 85 c0             	test   %rax,%rax
  404bd1:	7e 0f                	jle    404be2 <lua_gc+0x279>
  404bd3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404bda:	48 89 c7             	mov    %rax,%rdi
  404bdd:	e8 76 37 01 00       	callq  418358 <luaC_step>
  404be2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404be9:	0f b6 95 33 ff ff ff 	movzbl -0xcd(%rbp),%edx
  404bf0:	88 50 6a             	mov    %dl,0x6a(%rax)
  404bf3:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
  404bfa:	00 
  404bfb:	0f 8e ef 03 00 00    	jle    404ff0 <lua_gc+0x687>
  404c01:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404c08:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  404c0c:	3c 08                	cmp    $0x8,%al
  404c0e:	0f 85 dc 03 00 00    	jne    404ff0 <lua_gc+0x687>
  404c14:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%rbp)
  404c1b:	00 00 00 
  404c1e:	e9 cd 03 00 00       	jmpq   404ff0 <lua_gc+0x687>
  404c23:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404c29:	83 f8 2f             	cmp    $0x2f,%eax
  404c2c:	77 23                	ja     404c51 <lua_gc+0x2e8>
  404c2e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404c35:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404c3b:	89 d2                	mov    %edx,%edx
  404c3d:	48 01 d0             	add    %rdx,%rax
  404c40:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404c46:	83 c2 08             	add    $0x8,%edx
  404c49:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404c4f:	eb 12                	jmp    404c63 <lua_gc+0x2fa>
  404c51:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404c58:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404c5c:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404c63:	8b 00                	mov    (%rax),%eax
  404c65:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  404c6b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404c72:	0f b6 40 6c          	movzbl 0x6c(%rax),%eax
  404c76:	0f b6 c0             	movzbl %al,%eax
  404c79:	c1 e0 02             	shl    $0x2,%eax
  404c7c:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404c82:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  404c88:	8d 50 03             	lea    0x3(%rax),%edx
  404c8b:	85 c0                	test   %eax,%eax
  404c8d:	0f 48 c2             	cmovs  %edx,%eax
  404c90:	c1 f8 02             	sar    $0x2,%eax
  404c93:	89 c2                	mov    %eax,%edx
  404c95:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404c9c:	88 50 6c             	mov    %dl,0x6c(%rax)
  404c9f:	e9 4d 03 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404ca4:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404caa:	83 f8 2f             	cmp    $0x2f,%eax
  404cad:	77 23                	ja     404cd2 <lua_gc+0x369>
  404caf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404cb6:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404cbc:	89 d2                	mov    %edx,%edx
  404cbe:	48 01 d0             	add    %rdx,%rax
  404cc1:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404cc7:	83 c2 08             	add    $0x8,%edx
  404cca:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404cd0:	eb 12                	jmp    404ce4 <lua_gc+0x37b>
  404cd2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404cd9:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404cdd:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404ce4:	8b 00                	mov    (%rax),%eax
  404ce6:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  404cec:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404cf3:	0f b6 40 6d          	movzbl 0x6d(%rax),%eax
  404cf7:	0f b6 c0             	movzbl %al,%eax
  404cfa:	c1 e0 02             	shl    $0x2,%eax
  404cfd:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404d03:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
  404d09:	8d 50 03             	lea    0x3(%rax),%edx
  404d0c:	85 c0                	test   %eax,%eax
  404d0e:	0f 48 c2             	cmovs  %edx,%eax
  404d11:	c1 f8 02             	sar    $0x2,%eax
  404d14:	89 c2                	mov    %eax,%edx
  404d16:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404d1d:	88 50 6d             	mov    %dl,0x6d(%rax)
  404d20:	e9 cc 02 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404d25:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404d2c:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  404d30:	84 c0                	test   %al,%al
  404d32:	0f 94 c0             	sete   %al
  404d35:	0f b6 c0             	movzbl %al,%eax
  404d38:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404d3e:	e9 ae 02 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404d43:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404d49:	83 f8 2f             	cmp    $0x2f,%eax
  404d4c:	77 23                	ja     404d71 <lua_gc+0x408>
  404d4e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404d55:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404d5b:	89 d2                	mov    %edx,%edx
  404d5d:	48 01 d0             	add    %rdx,%rax
  404d60:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404d66:	83 c2 08             	add    $0x8,%edx
  404d69:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404d6f:	eb 12                	jmp    404d83 <lua_gc+0x41a>
  404d71:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404d78:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404d7c:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404d83:	8b 00                	mov    (%rax),%eax
  404d85:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  404d8b:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404d91:	83 f8 2f             	cmp    $0x2f,%eax
  404d94:	77 23                	ja     404db9 <lua_gc+0x450>
  404d96:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404d9d:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404da3:	89 d2                	mov    %edx,%edx
  404da5:	48 01 d0             	add    %rdx,%rax
  404da8:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404dae:	83 c2 08             	add    $0x8,%edx
  404db1:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404db7:	eb 12                	jmp    404dcb <lua_gc+0x462>
  404db9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404dc0:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404dc4:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404dcb:	8b 00                	mov    (%rax),%eax
  404dcd:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
  404dd3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404dda:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  404dde:	3c 01                	cmp    $0x1,%al
  404de0:	74 10                	je     404df2 <lua_gc+0x489>
  404de2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404de9:	48 8b 40 28          	mov    0x28(%rax),%rax
  404ded:	48 85 c0             	test   %rax,%rax
  404df0:	74 07                	je     404df9 <lua_gc+0x490>
  404df2:	b8 0a 00 00 00       	mov    $0xa,%eax
  404df7:	eb 05                	jmp    404dfe <lua_gc+0x495>
  404df9:	b8 0b 00 00 00       	mov    $0xb,%eax
  404dfe:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404e04:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
  404e0b:	74 12                	je     404e1f <lua_gc+0x4b6>
  404e0d:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  404e13:	89 c2                	mov    %eax,%edx
  404e15:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404e1c:	88 50 68             	mov    %dl,0x68(%rax)
  404e1f:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
  404e26:	74 1d                	je     404e45 <lua_gc+0x4dc>
  404e28:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
  404e2e:	8d 50 03             	lea    0x3(%rax),%edx
  404e31:	85 c0                	test   %eax,%eax
  404e33:	0f 48 c2             	cmovs  %edx,%eax
  404e36:	c1 f8 02             	sar    $0x2,%eax
  404e39:	89 c2                	mov    %eax,%edx
  404e3b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404e42:	88 50 69             	mov    %dl,0x69(%rax)
  404e45:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404e4c:	be 01 00 00 00       	mov    $0x1,%esi
  404e51:	48 89 c7             	mov    %rax,%rdi
  404e54:	e8 24 2b 01 00       	callq  41797d <luaC_changemode>
  404e59:	e9 93 01 00 00       	jmpq   404ff1 <lua_gc+0x688>
  404e5e:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404e64:	83 f8 2f             	cmp    $0x2f,%eax
  404e67:	77 23                	ja     404e8c <lua_gc+0x523>
  404e69:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404e70:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404e76:	89 d2                	mov    %edx,%edx
  404e78:	48 01 d0             	add    %rdx,%rax
  404e7b:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404e81:	83 c2 08             	add    $0x8,%edx
  404e84:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404e8a:	eb 12                	jmp    404e9e <lua_gc+0x535>
  404e8c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404e93:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404e97:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404e9e:	8b 00                	mov    (%rax),%eax
  404ea0:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  404ea6:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404eac:	83 f8 2f             	cmp    $0x2f,%eax
  404eaf:	77 23                	ja     404ed4 <lua_gc+0x56b>
  404eb1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404eb8:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404ebe:	89 d2                	mov    %edx,%edx
  404ec0:	48 01 d0             	add    %rdx,%rax
  404ec3:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404ec9:	83 c2 08             	add    $0x8,%edx
  404ecc:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404ed2:	eb 12                	jmp    404ee6 <lua_gc+0x57d>
  404ed4:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404edb:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404edf:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404ee6:	8b 00                	mov    (%rax),%eax
  404ee8:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
  404eee:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  404ef4:	83 f8 2f             	cmp    $0x2f,%eax
  404ef7:	77 23                	ja     404f1c <lua_gc+0x5b3>
  404ef9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  404f00:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404f06:	89 d2                	mov    %edx,%edx
  404f08:	48 01 d0             	add    %rdx,%rax
  404f0b:	8b 95 f8 fe ff ff    	mov    -0x108(%rbp),%edx
  404f11:	83 c2 08             	add    $0x8,%edx
  404f14:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%rbp)
  404f1a:	eb 12                	jmp    404f2e <lua_gc+0x5c5>
  404f1c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404f23:	48 8d 50 08          	lea    0x8(%rax),%rdx
  404f27:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  404f2e:	8b 00                	mov    (%rax),%eax
  404f30:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  404f36:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404f3d:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  404f41:	3c 01                	cmp    $0x1,%al
  404f43:	74 10                	je     404f55 <lua_gc+0x5ec>
  404f45:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404f4c:	48 8b 40 28          	mov    0x28(%rax),%rax
  404f50:	48 85 c0             	test   %rax,%rax
  404f53:	74 07                	je     404f5c <lua_gc+0x5f3>
  404f55:	b8 0a 00 00 00       	mov    $0xa,%eax
  404f5a:	eb 05                	jmp    404f61 <lua_gc+0x5f8>
  404f5c:	b8 0b 00 00 00       	mov    $0xb,%eax
  404f61:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  404f67:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
  404f6e:	74 1d                	je     404f8d <lua_gc+0x624>
  404f70:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  404f76:	8d 50 03             	lea    0x3(%rax),%edx
  404f79:	85 c0                	test   %eax,%eax
  404f7b:	0f 48 c2             	cmovs  %edx,%eax
  404f7e:	c1 f8 02             	sar    $0x2,%eax
  404f81:	89 c2                	mov    %eax,%edx
  404f83:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404f8a:	88 50 6c             	mov    %dl,0x6c(%rax)
  404f8d:	83 bd 18 ff ff ff 00 	cmpl   $0x0,-0xe8(%rbp)
  404f94:	74 1d                	je     404fb3 <lua_gc+0x64a>
  404f96:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
  404f9c:	8d 50 03             	lea    0x3(%rax),%edx
  404f9f:	85 c0                	test   %eax,%eax
  404fa1:	0f 48 c2             	cmovs  %edx,%eax
  404fa4:	c1 f8 02             	sar    $0x2,%eax
  404fa7:	89 c2                	mov    %eax,%edx
  404fa9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404fb0:	88 50 6d             	mov    %dl,0x6d(%rax)
  404fb3:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
  404fba:	74 12                	je     404fce <lua_gc+0x665>
  404fbc:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
  404fc2:	89 c2                	mov    %eax,%edx
  404fc4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  404fcb:	88 50 6e             	mov    %dl,0x6e(%rax)
  404fce:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  404fd5:	be 00 00 00 00       	mov    $0x0,%esi
  404fda:	48 89 c7             	mov    %rax,%rdi
  404fdd:	e8 9b 29 01 00       	callq  41797d <luaC_changemode>
  404fe2:	eb 0d                	jmp    404ff1 <lua_gc+0x688>
  404fe4:	c7 85 4c ff ff ff ff 	movl   $0xffffffff,-0xb4(%rbp)
  404feb:	ff ff ff 
  404fee:	eb 01                	jmp    404ff1 <lua_gc+0x688>
  404ff0:	90                   	nop
  404ff1:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  404ff7:	c9                   	leaveq 
  404ff8:	c3                   	retq   

0000000000404ff9 <lua_error>:
  404ff9:	55                   	push   %rbp
  404ffa:	48 89 e5             	mov    %rsp,%rbp
  404ffd:	48 83 ec 20          	sub    $0x20,%rsp
  405001:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  405005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405009:	48 8b 40 10          	mov    0x10(%rax),%rax
  40500d:	48 83 e8 10          	sub    $0x10,%rax
  405011:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405019:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40501d:	3c 44                	cmp    $0x44,%al
  40501f:	75 2f                	jne    405050 <lua_error+0x57>
  405021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405025:	48 8b 00             	mov    (%rax),%rax
  405028:	48 89 c2             	mov    %rax,%rdx
  40502b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40502f:	48 8b 40 18          	mov    0x18(%rax),%rax
  405033:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  40503a:	48 39 c2             	cmp    %rax,%rdx
  40503d:	75 11                	jne    405050 <lua_error+0x57>
  40503f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405043:	be 04 00 00 00       	mov    $0x4,%esi
  405048:	48 89 c7             	mov    %rax,%rdi
  40504b:	e8 29 c1 00 00       	callq  411179 <luaD_throw>
  405050:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405054:	48 89 c7             	mov    %rax,%rdi
  405057:	e8 30 ba 00 00       	callq  410a8c <luaG_errormsg>

000000000040505c <lua_next>:
  40505c:	55                   	push   %rbp
  40505d:	48 89 e5             	mov    %rsp,%rbp
  405060:	48 83 ec 20          	sub    $0x20,%rsp
  405064:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  405068:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40506b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40506e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405072:	89 d6                	mov    %edx,%esi
  405074:	48 89 c7             	mov    %rax,%rdi
  405077:	e8 47 e6 ff ff       	callq  4036c3 <gettable>
  40507c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405084:	48 8b 40 10          	mov    0x10(%rax),%rax
  405088:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  40508c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  405090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405094:	48 89 ce             	mov    %rcx,%rsi
  405097:	48 89 c7             	mov    %rax,%rdi
  40509a:	e8 6c 75 02 00       	callq  42c60b <luaH_next>
  40509f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4050a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4050a6:	74 16                	je     4050be <lua_next+0x62>
  4050a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050ac:	48 8b 40 10          	mov    0x10(%rax),%rax
  4050b0:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4050b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4050bc:	eb 14                	jmp    4050d2 <lua_next+0x76>
  4050be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050c2:	48 8b 40 10          	mov    0x10(%rax),%rax
  4050c6:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4050ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4050d2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4050d5:	c9                   	leaveq 
  4050d6:	c3                   	retq   

00000000004050d7 <lua_toclose>:
  4050d7:	55                   	push   %rbp
  4050d8:	48 89 e5             	mov    %rsp,%rbp
  4050db:	48 83 ec 20          	sub    $0x20,%rsp
  4050df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4050e3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4050e6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4050e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050ed:	89 d6                	mov    %edx,%esi
  4050ef:	48 89 c7             	mov    %rax,%rdi
  4050f2:	e8 26 cc ff ff       	callq  401d1d <index2stack>
  4050f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4050fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4050ff:	48 8b 40 20          	mov    0x20(%rax),%rax
  405103:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
  405107:	98                   	cwtl   
  405108:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40510b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40510f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405113:	48 89 d6             	mov    %rdx,%rsi
  405116:	48 89 c7             	mov    %rax,%rdi
  405119:	e8 0e f2 00 00       	callq  41432c <luaF_newtbcupval>
  40511e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  405122:	7c 16                	jl     40513a <lua_toclose+0x63>
  405124:	8b 45 f4             	mov    -0xc(%rbp),%eax
  405127:	ba fd ff ff ff       	mov    $0xfffffffd,%edx
  40512c:	29 c2                	sub    %eax,%edx
  40512e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405132:	48 8b 40 20          	mov    0x20(%rax),%rax
  405136:	66 89 50 3c          	mov    %dx,0x3c(%rax)
  40513a:	90                   	nop
  40513b:	c9                   	leaveq 
  40513c:	c3                   	retq   

000000000040513d <lua_concat>:
  40513d:	55                   	push   %rbp
  40513e:	48 89 e5             	mov    %rsp,%rbp
  405141:	48 83 ec 20          	sub    $0x20,%rsp
  405145:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  405149:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40514c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  405150:	7e 13                	jle    405165 <lua_concat+0x28>
  405152:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  405155:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405159:	89 d6                	mov    %edx,%esi
  40515b:	48 89 c7             	mov    %rax,%rdi
  40515e:	e8 a6 ed 02 00       	callq  433f09 <luaV_concat>
  405163:	eb 59                	jmp    4051be <lua_concat+0x81>
  405165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405169:	48 8b 40 10          	mov    0x10(%rax),%rax
  40516d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405171:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405175:	ba 00 00 00 00       	mov    $0x0,%edx
  40517a:	be e1 cd 43 00       	mov    $0x43cde1,%esi
  40517f:	48 89 c7             	mov    %rax,%rdi
  405182:	e8 94 1e 02 00       	callq  42701b <luaS_newlstr>
  405187:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40518b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40518f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405193:	48 89 10             	mov    %rdx,(%rax)
  405196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40519a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40519e:	83 c8 40             	or     $0x40,%eax
  4051a1:	89 c2                	mov    %eax,%edx
  4051a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4051a7:	88 50 08             	mov    %dl,0x8(%rax)
  4051aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4051ae:	48 8b 40 10          	mov    0x10(%rax),%rax
  4051b2:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4051b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4051ba:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4051be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4051c2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4051c6:	48 8b 40 18          	mov    0x18(%rax),%rax
  4051ca:	48 85 c0             	test   %rax,%rax
  4051cd:	7e 0c                	jle    4051db <lua_concat+0x9e>
  4051cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4051d3:	48 89 c7             	mov    %rax,%rdi
  4051d6:	e8 7d 31 01 00       	callq  418358 <luaC_step>
  4051db:	90                   	nop
  4051dc:	c9                   	leaveq 
  4051dd:	c3                   	retq   

00000000004051de <lua_len>:
  4051de:	55                   	push   %rbp
  4051df:	48 89 e5             	mov    %rsp,%rbp
  4051e2:	48 83 ec 20          	sub    $0x20,%rsp
  4051e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4051ea:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4051ed:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4051f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4051f4:	89 d6                	mov    %edx,%esi
  4051f6:	48 89 c7             	mov    %rax,%rdi
  4051f9:	e8 18 ca ff ff       	callq  401c16 <index2value>
  4051fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405206:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40520a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40520e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405212:	48 89 ce             	mov    %rcx,%rsi
  405215:	48 89 c7             	mov    %rax,%rdi
  405218:	e8 0a f1 02 00       	callq  434327 <luaV_objlen>
  40521d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405221:	48 8b 40 10          	mov    0x10(%rax),%rax
  405225:	48 8d 50 10          	lea    0x10(%rax),%rdx
  405229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40522d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  405231:	90                   	nop
  405232:	c9                   	leaveq 
  405233:	c3                   	retq   

0000000000405234 <lua_getallocf>:
  405234:	55                   	push   %rbp
  405235:	48 89 e5             	mov    %rsp,%rbp
  405238:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40523c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  405240:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  405245:	74 13                	je     40525a <lua_getallocf+0x26>
  405247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40524b:	48 8b 40 18          	mov    0x18(%rax),%rax
  40524f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  405253:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405257:	48 89 10             	mov    %rdx,(%rax)
  40525a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40525e:	48 8b 40 18          	mov    0x18(%rax),%rax
  405262:	48 8b 00             	mov    (%rax),%rax
  405265:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40526d:	5d                   	pop    %rbp
  40526e:	c3                   	retq   

000000000040526f <lua_setallocf>:
  40526f:	55                   	push   %rbp
  405270:	48 89 e5             	mov    %rsp,%rbp
  405273:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  405277:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40527b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40527f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405283:	48 8b 40 18          	mov    0x18(%rax),%rax
  405287:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40528b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40528f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405293:	48 8b 40 18          	mov    0x18(%rax),%rax
  405297:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40529b:	48 89 10             	mov    %rdx,(%rax)
  40529e:	90                   	nop
  40529f:	5d                   	pop    %rbp
  4052a0:	c3                   	retq   

00000000004052a1 <lua_setwarnf>:
  4052a1:	55                   	push   %rbp
  4052a2:	48 89 e5             	mov    %rsp,%rbp
  4052a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4052a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4052ad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4052b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4052b5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4052b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4052bd:	48 89 90 80 05 00 00 	mov    %rdx,0x580(%rax)
  4052c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4052c8:	48 8b 40 18          	mov    0x18(%rax),%rax
  4052cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4052d0:	48 89 90 78 05 00 00 	mov    %rdx,0x578(%rax)
  4052d7:	90                   	nop
  4052d8:	5d                   	pop    %rbp
  4052d9:	c3                   	retq   

00000000004052da <lua_warning>:
  4052da:	55                   	push   %rbp
  4052db:	48 89 e5             	mov    %rsp,%rbp
  4052de:	48 83 ec 20          	sub    $0x20,%rsp
  4052e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4052e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4052ea:	89 55 ec             	mov    %edx,-0x14(%rbp)
  4052ed:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4052f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4052f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4052f8:	48 89 ce             	mov    %rcx,%rsi
  4052fb:	48 89 c7             	mov    %rax,%rdi
  4052fe:	e8 2e 14 02 00       	callq  426731 <luaE_warning>
  405303:	90                   	nop
  405304:	c9                   	leaveq 
  405305:	c3                   	retq   

0000000000405306 <lua_newuserdatauv>:
  405306:	55                   	push   %rbp
  405307:	48 89 e5             	mov    %rsp,%rbp
  40530a:	48 83 ec 40          	sub    $0x40,%rsp
  40530e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405312:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  405316:	89 55 cc             	mov    %edx,-0x34(%rbp)
  405319:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40531c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  405320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405324:	48 89 ce             	mov    %rcx,%rsi
  405327:	48 89 c7             	mov    %rax,%rdi
  40532a:	e8 a6 1e 02 00       	callq  4271d5 <luaS_newudata>
  40532f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405333:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405337:	48 8b 40 10          	mov    0x10(%rax),%rax
  40533b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40533f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405343:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405347:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40534b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40534f:	48 89 10             	mov    %rdx,(%rax)
  405352:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405356:	c6 40 08 47          	movb   $0x47,0x8(%rax)
  40535a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40535e:	48 8b 40 10          	mov    0x10(%rax),%rax
  405362:	48 8d 50 10          	lea    0x10(%rax),%rdx
  405366:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40536a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40536e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405372:	48 8b 40 18          	mov    0x18(%rax),%rax
  405376:	48 8b 40 18          	mov    0x18(%rax),%rax
  40537a:	48 85 c0             	test   %rax,%rax
  40537d:	7e 0c                	jle    40538b <lua_newuserdatauv+0x85>
  40537f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405383:	48 89 c7             	mov    %rax,%rdi
  405386:	e8 cd 2f 01 00       	callq  418358 <luaC_step>
  40538b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40538f:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  405393:	66 85 c0             	test   %ax,%ax
  405396:	74 15                	je     4053ad <lua_newuserdatauv+0xa7>
  405398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40539c:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4053a0:	0f b7 c0             	movzwl %ax,%eax
  4053a3:	48 c1 e0 04          	shl    $0x4,%rax
  4053a7:	48 8d 50 28          	lea    0x28(%rax),%rdx
  4053ab:	eb 05                	jmp    4053b2 <lua_newuserdatauv+0xac>
  4053ad:	ba 20 00 00 00       	mov    $0x20,%edx
  4053b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4053b6:	48 01 d0             	add    %rdx,%rax
  4053b9:	c9                   	leaveq 
  4053ba:	c3                   	retq   

00000000004053bb <aux_upvalue>:
  4053bb:	55                   	push   %rbp
  4053bc:	48 89 e5             	mov    %rsp,%rbp
  4053bf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4053c3:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4053c6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4053ca:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4053ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4053d2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4053d6:	0f b6 c0             	movzbl %al,%eax
  4053d9:	83 e0 3f             	and    $0x3f,%eax
  4053dc:	83 f8 06             	cmp    $0x6,%eax
  4053df:	74 70                	je     405451 <aux_upvalue+0x96>
  4053e1:	83 f8 26             	cmp    $0x26,%eax
  4053e4:	0f 85 17 01 00 00    	jne    405501 <aux_upvalue+0x146>
  4053ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4053ee:	48 8b 00             	mov    (%rax),%rax
  4053f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4053f5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4053f8:	8d 50 ff             	lea    -0x1(%rax),%edx
  4053fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4053ff:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  405403:	0f b6 c0             	movzbl %al,%eax
  405406:	39 c2                	cmp    %eax,%edx
  405408:	72 0a                	jb     405414 <aux_upvalue+0x59>
  40540a:	b8 00 00 00 00       	mov    $0x0,%eax
  40540f:	e9 f2 00 00 00       	jmpq   405506 <aux_upvalue+0x14b>
  405414:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  405417:	83 e8 01             	sub    $0x1,%eax
  40541a:	48 98                	cltq   
  40541c:	48 83 c0 02          	add    $0x2,%rax
  405420:	48 c1 e0 04          	shl    $0x4,%rax
  405424:	48 89 c2             	mov    %rax,%rdx
  405427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40542b:	48 01 c2             	add    %rax,%rdx
  40542e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  405432:	48 89 10             	mov    %rdx,(%rax)
  405435:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40543a:	74 0b                	je     405447 <aux_upvalue+0x8c>
  40543c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  405440:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405444:	48 89 10             	mov    %rdx,(%rax)
  405447:	b8 e1 cd 43 00       	mov    $0x43cde1,%eax
  40544c:	e9 b5 00 00 00       	jmpq   405506 <aux_upvalue+0x14b>
  405451:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405455:	48 8b 00             	mov    (%rax),%rax
  405458:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40545c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405460:	48 8b 40 18          	mov    0x18(%rax),%rax
  405464:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405468:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40546b:	8d 50 ff             	lea    -0x1(%rax),%edx
  40546e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405472:	8b 40 10             	mov    0x10(%rax),%eax
  405475:	39 c2                	cmp    %eax,%edx
  405477:	72 0a                	jb     405483 <aux_upvalue+0xc8>
  405479:	b8 00 00 00 00       	mov    $0x0,%eax
  40547e:	e9 83 00 00 00       	jmpq   405506 <aux_upvalue+0x14b>
  405483:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  405486:	8d 50 ff             	lea    -0x1(%rax),%edx
  405489:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40548d:	48 63 d2             	movslq %edx,%rdx
  405490:	48 83 c2 04          	add    $0x4,%rdx
  405494:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  405498:	48 8b 50 10          	mov    0x10(%rax),%rdx
  40549c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4054a0:	48 89 10             	mov    %rdx,(%rax)
  4054a3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  4054a8:	74 1f                	je     4054c9 <aux_upvalue+0x10e>
  4054aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4054ad:	8d 50 ff             	lea    -0x1(%rax),%edx
  4054b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4054b4:	48 63 d2             	movslq %edx,%rdx
  4054b7:	48 83 c2 04          	add    $0x4,%rdx
  4054bb:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4054bf:	48 89 c2             	mov    %rax,%rdx
  4054c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4054c6:	48 89 10             	mov    %rdx,(%rax)
  4054c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4054cd:	48 8b 40 50          	mov    0x50(%rax),%rax
  4054d1:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4054d4:	48 63 d2             	movslq %edx,%rdx
  4054d7:	48 c1 e2 04          	shl    $0x4,%rdx
  4054db:	48 83 ea 10          	sub    $0x10,%rdx
  4054df:	48 01 d0             	add    %rdx,%rax
  4054e2:	48 8b 00             	mov    (%rax),%rax
  4054e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4054e9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4054ee:	74 0a                	je     4054fa <aux_upvalue+0x13f>
  4054f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4054f4:	48 83 c0 18          	add    $0x18,%rax
  4054f8:	eb 0c                	jmp    405506 <aux_upvalue+0x14b>
  4054fa:	b8 48 ce 43 00       	mov    $0x43ce48,%eax
  4054ff:	eb 05                	jmp    405506 <aux_upvalue+0x14b>
  405501:	b8 00 00 00 00       	mov    $0x0,%eax
  405506:	5d                   	pop    %rbp
  405507:	c3                   	retq   

0000000000405508 <lua_getupvalue>:
  405508:	55                   	push   %rbp
  405509:	48 89 e5             	mov    %rsp,%rbp
  40550c:	48 83 ec 30          	sub    $0x30,%rsp
  405510:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405514:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  405517:	89 55 d0             	mov    %edx,-0x30(%rbp)
  40551a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  405521:	00 
  405522:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  405525:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405529:	89 d6                	mov    %edx,%esi
  40552b:	48 89 c7             	mov    %rax,%rdi
  40552e:	e8 e3 c6 ff ff       	callq  401c16 <index2value>
  405533:	48 89 c7             	mov    %rax,%rdi
  405536:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40553a:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40553d:	b9 00 00 00 00       	mov    $0x0,%ecx
  405542:	89 c6                	mov    %eax,%esi
  405544:	e8 72 fe ff ff       	callq  4053bb <aux_upvalue>
  405549:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40554d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405552:	74 45                	je     405599 <lua_getupvalue+0x91>
  405554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405558:	48 8b 40 10          	mov    0x10(%rax),%rax
  40555c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  405560:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405564:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405568:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40556c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  405570:	48 8b 12             	mov    (%rdx),%rdx
  405573:	48 89 10             	mov    %rdx,(%rax)
  405576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40557a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40557e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405582:	88 50 08             	mov    %dl,0x8(%rax)
  405585:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405589:	48 8b 40 10          	mov    0x10(%rax),%rax
  40558d:	48 8d 50 10          	lea    0x10(%rax),%rdx
  405591:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405595:	48 89 50 10          	mov    %rdx,0x10(%rax)
  405599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40559d:	c9                   	leaveq 
  40559e:	c3                   	retq   

000000000040559f <lua_setupvalue>:
  40559f:	55                   	push   %rbp
  4055a0:	48 89 e5             	mov    %rsp,%rbp
  4055a3:	48 83 ec 40          	sub    $0x40,%rsp
  4055a7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4055ab:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  4055ae:	89 55 c0             	mov    %edx,-0x40(%rbp)
  4055b1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  4055b8:	00 
  4055b9:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  4055c0:	00 
  4055c1:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4055c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4055c8:	89 d6                	mov    %edx,%esi
  4055ca:	48 89 c7             	mov    %rax,%rdi
  4055cd:	e8 44 c6 ff ff       	callq  401c16 <index2value>
  4055d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4055d6:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4055da:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  4055de:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4055e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4055e5:	48 89 c7             	mov    %rax,%rdi
  4055e8:	e8 ce fd ff ff       	callq  4053bb <aux_upvalue>
  4055ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4055f1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4055f6:	0f 84 9e 00 00 00    	je     40569a <lua_setupvalue+0xfb>
  4055fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  405600:	48 8b 40 10          	mov    0x10(%rax),%rax
  405604:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  405608:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40560c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  405610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405614:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405618:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40561c:	48 8b 40 10          	mov    0x10(%rax),%rax
  405620:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  405624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405628:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40562c:	48 8b 12             	mov    (%rdx),%rdx
  40562f:	48 89 10             	mov    %rdx,(%rax)
  405632:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405636:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40563a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40563e:	88 50 08             	mov    %dl,0x8(%rax)
  405641:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405645:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  405649:	0f b6 c0             	movzbl %al,%eax
  40564c:	83 e0 40             	and    $0x40,%eax
  40564f:	85 c0                	test   %eax,%eax
  405651:	74 47                	je     40569a <lua_setupvalue+0xfb>
  405653:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  405657:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40565b:	0f b6 c0             	movzbl %al,%eax
  40565e:	83 e0 20             	and    $0x20,%eax
  405661:	85 c0                	test   %eax,%eax
  405663:	74 35                	je     40569a <lua_setupvalue+0xfb>
  405665:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405669:	48 8b 00             	mov    (%rax),%rax
  40566c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  405670:	0f b6 c0             	movzbl %al,%eax
  405673:	83 e0 18             	and    $0x18,%eax
  405676:	85 c0                	test   %eax,%eax
  405678:	74 20                	je     40569a <lua_setupvalue+0xfb>
  40567a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40567e:	48 8b 00             	mov    (%rax),%rax
  405681:	48 89 c2             	mov    %rax,%rdx
  405684:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  405688:	48 89 c1             	mov    %rax,%rcx
  40568b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40568f:	48 89 ce             	mov    %rcx,%rsi
  405692:	48 89 c7             	mov    %rax,%rdi
  405695:	e8 b5 f3 00 00       	callq  414a4f <luaC_barrier_>
  40569a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40569e:	c9                   	leaveq 
  40569f:	c3                   	retq   

00000000004056a0 <getupvalref>:
  4056a0:	55                   	push   %rbp
  4056a1:	48 89 e5             	mov    %rsp,%rbp
  4056a4:	48 83 ec 28          	sub    $0x28,%rsp
  4056a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4056ac:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4056af:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4056b2:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4056b6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4056b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4056bd:	89 d6                	mov    %edx,%esi
  4056bf:	48 89 c7             	mov    %rax,%rdi
  4056c2:	e8 4f c5 ff ff       	callq  401c16 <index2value>
  4056c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4056cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056cf:	48 8b 00             	mov    (%rax),%rax
  4056d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4056d6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4056db:	74 0b                	je     4056e8 <getupvalref+0x48>
  4056dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4056e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4056e5:	48 89 10             	mov    %rdx,(%rax)
  4056e8:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  4056ec:	7e 2d                	jle    40571b <getupvalref+0x7b>
  4056ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4056f2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4056f6:	8b 40 10             	mov    0x10(%rax),%eax
  4056f9:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  4056fc:	7f 1d                	jg     40571b <getupvalref+0x7b>
  4056fe:	8b 45 e0             	mov    -0x20(%rbp),%eax
  405701:	83 e8 01             	sub    $0x1,%eax
  405704:	48 98                	cltq   
  405706:	48 83 c0 04          	add    $0x4,%rax
  40570a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  405711:	00 
  405712:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405716:	48 01 d0             	add    %rdx,%rax
  405719:	eb 05                	jmp    405720 <getupvalref+0x80>
  40571b:	b8 58 ce 43 00       	mov    $0x43ce58,%eax
  405720:	c9                   	leaveq 
  405721:	c3                   	retq   

0000000000405722 <lua_upvalueid>:
  405722:	55                   	push   %rbp
  405723:	48 89 e5             	mov    %rsp,%rbp
  405726:	48 83 ec 20          	sub    $0x20,%rsp
  40572a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40572e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  405731:	89 55 e0             	mov    %edx,-0x20(%rbp)
  405734:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  405737:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40573b:	89 d6                	mov    %edx,%esi
  40573d:	48 89 c7             	mov    %rax,%rdi
  405740:	e8 d1 c4 ff ff       	callq  401c16 <index2value>
  405745:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40574d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  405751:	0f b6 c0             	movzbl %al,%eax
  405754:	83 e0 3f             	and    $0x3f,%eax
  405757:	83 f8 16             	cmp    $0x16,%eax
  40575a:	74 63                	je     4057bf <lua_upvalueid+0x9d>
  40575c:	83 f8 26             	cmp    $0x26,%eax
  40575f:	74 21                	je     405782 <lua_upvalueid+0x60>
  405761:	83 f8 06             	cmp    $0x6,%eax
  405764:	75 60                	jne    4057c6 <lua_upvalueid+0xa4>
  405766:	8b 55 e0             	mov    -0x20(%rbp),%edx
  405769:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40576c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405770:	b9 00 00 00 00       	mov    $0x0,%ecx
  405775:	48 89 c7             	mov    %rax,%rdi
  405778:	e8 23 ff ff ff       	callq  4056a0 <getupvalref>
  40577d:	48 8b 00             	mov    (%rax),%rax
  405780:	eb 49                	jmp    4057cb <lua_upvalueid+0xa9>
  405782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405786:	48 8b 00             	mov    (%rax),%rax
  405789:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40578d:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  405791:	7e 2c                	jle    4057bf <lua_upvalueid+0x9d>
  405793:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405797:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40579b:	0f b6 c0             	movzbl %al,%eax
  40579e:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  4057a1:	7f 1c                	jg     4057bf <lua_upvalueid+0x9d>
  4057a3:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4057a6:	83 e8 01             	sub    $0x1,%eax
  4057a9:	48 98                	cltq   
  4057ab:	48 83 c0 02          	add    $0x2,%rax
  4057af:	48 c1 e0 04          	shl    $0x4,%rax
  4057b3:	48 89 c2             	mov    %rax,%rdx
  4057b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4057ba:	48 01 d0             	add    %rdx,%rax
  4057bd:	eb 0c                	jmp    4057cb <lua_upvalueid+0xa9>
  4057bf:	b8 00 00 00 00       	mov    $0x0,%eax
  4057c4:	eb 05                	jmp    4057cb <lua_upvalueid+0xa9>
  4057c6:	b8 00 00 00 00       	mov    $0x0,%eax
  4057cb:	c9                   	leaveq 
  4057cc:	c3                   	retq   

00000000004057cd <lua_upvaluejoin>:
  4057cd:	55                   	push   %rbp
  4057ce:	48 89 e5             	mov    %rsp,%rbp
  4057d1:	48 83 ec 40          	sub    $0x40,%rsp
  4057d5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4057d9:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4057dc:	89 55 d0             	mov    %edx,-0x30(%rbp)
  4057df:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  4057e2:	44 89 45 c8          	mov    %r8d,-0x38(%rbp)
  4057e6:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
  4057ea:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4057ed:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  4057f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4057f4:	48 89 c7             	mov    %rax,%rdi
  4057f7:	e8 a4 fe ff ff       	callq  4056a0 <getupvalref>
  4057fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405800:	8b 55 c8             	mov    -0x38(%rbp),%edx
  405803:	8b 75 cc             	mov    -0x34(%rbp),%esi
  405806:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40580a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40580f:	48 89 c7             	mov    %rax,%rdi
  405812:	e8 89 fe ff ff       	callq  4056a0 <getupvalref>
  405817:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40581b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40581f:	48 8b 10             	mov    (%rax),%rdx
  405822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405826:	48 89 10             	mov    %rdx,(%rax)
  405829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40582d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  405831:	0f b6 c0             	movzbl %al,%eax
  405834:	83 e0 20             	and    $0x20,%eax
  405837:	85 c0                	test   %eax,%eax
  405839:	74 35                	je     405870 <lua_upvaluejoin+0xa3>
  40583b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40583f:	48 8b 00             	mov    (%rax),%rax
  405842:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  405846:	0f b6 c0             	movzbl %al,%eax
  405849:	83 e0 18             	and    $0x18,%eax
  40584c:	85 c0                	test   %eax,%eax
  40584e:	74 20                	je     405870 <lua_upvaluejoin+0xa3>
  405850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405854:	48 8b 00             	mov    (%rax),%rax
  405857:	48 89 c2             	mov    %rax,%rdx
  40585a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40585e:	48 89 c1             	mov    %rax,%rcx
  405861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405865:	48 89 ce             	mov    %rcx,%rsi
  405868:	48 89 c7             	mov    %rax,%rdi
  40586b:	e8 df f1 00 00       	callq  414a4f <luaC_barrier_>
  405870:	90                   	nop
  405871:	c9                   	leaveq 
  405872:	c3                   	retq   

0000000000405873 <findfield>:
  405873:	55                   	push   %rbp
  405874:	48 89 e5             	mov    %rsp,%rbp
  405877:	48 83 ec 10          	sub    $0x10,%rsp
  40587b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40587f:	89 75 f4             	mov    %esi,-0xc(%rbp)
  405882:	89 55 f0             	mov    %edx,-0x10(%rbp)
  405885:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  405889:	74 16                	je     4058a1 <findfield+0x2e>
  40588b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40588f:	be ff ff ff ff       	mov    $0xffffffff,%esi
  405894:	48 89 c7             	mov    %rax,%rdi
  405897:	e8 d7 ca ff ff       	callq  402373 <lua_type>
  40589c:	83 f8 05             	cmp    $0x5,%eax
  40589f:	74 0a                	je     4058ab <findfield+0x38>
  4058a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4058a6:	e9 fa 00 00 00       	jmpq   4059a5 <findfield+0x132>
  4058ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4058af:	48 89 c7             	mov    %rax,%rdi
  4058b2:	e8 ee d3 ff ff       	callq  402ca5 <lua_pushnil>
  4058b7:	e9 cb 00 00 00       	jmpq   405987 <findfield+0x114>
  4058bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4058c0:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4058c5:	48 89 c7             	mov    %rax,%rdi
  4058c8:	e8 a6 ca ff ff       	callq  402373 <lua_type>
  4058cd:	83 f8 04             	cmp    $0x4,%eax
  4058d0:	0f 85 a0 00 00 00    	jne    405976 <findfield+0x103>
  4058d6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4058d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4058dd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4058e2:	89 ce                	mov    %ecx,%esi
  4058e4:	48 89 c7             	mov    %rax,%rdi
  4058e7:	e8 7e cc ff ff       	callq  40256a <lua_rawequal>
  4058ec:	85 c0                	test   %eax,%eax
  4058ee:	74 1b                	je     40590b <findfield+0x98>
  4058f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4058f4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4058f9:	48 89 c7             	mov    %rax,%rdi
  4058fc:	e8 83 c6 ff ff       	callq  401f84 <lua_settop>
  405901:	b8 01 00 00 00       	mov    $0x1,%eax
  405906:	e9 9a 00 00 00       	jmpq   4059a5 <findfield+0x132>
  40590b:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40590e:	8d 50 ff             	lea    -0x1(%rax),%edx
  405911:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  405914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405918:	89 ce                	mov    %ecx,%esi
  40591a:	48 89 c7             	mov    %rax,%rdi
  40591d:	e8 51 ff ff ff       	callq  405873 <findfield>
  405922:	85 c0                	test   %eax,%eax
  405924:	74 50                	je     405976 <findfield+0x103>
  405926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40592a:	be 80 ce 43 00       	mov    $0x43ce80,%esi
  40592f:	48 89 c7             	mov    %rax,%rdi
  405932:	e8 d7 d4 ff ff       	callq  402e0e <lua_pushstring>
  405937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40593b:	ba fd ff ff ff       	mov    $0xfffffffd,%edx
  405940:	be ff ff ff ff       	mov    $0xffffffff,%esi
  405945:	48 89 c7             	mov    %rax,%rdi
  405948:	e8 e0 c8 ff ff       	callq  40222d <lua_copy>
  40594d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405951:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405956:	48 89 c7             	mov    %rax,%rdi
  405959:	e8 26 c6 ff ff       	callq  401f84 <lua_settop>
  40595e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405962:	be 03 00 00 00       	mov    $0x3,%esi
  405967:	48 89 c7             	mov    %rax,%rdi
  40596a:	e8 ce f7 ff ff       	callq  40513d <lua_concat>
  40596f:	b8 01 00 00 00       	mov    $0x1,%eax
  405974:	eb 2f                	jmp    4059a5 <findfield+0x132>
  405976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40597a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40597f:	48 89 c7             	mov    %rax,%rdi
  405982:	e8 fd c5 ff ff       	callq  401f84 <lua_settop>
  405987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40598b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405990:	48 89 c7             	mov    %rax,%rdi
  405993:	e8 c4 f6 ff ff       	callq  40505c <lua_next>
  405998:	85 c0                	test   %eax,%eax
  40599a:	0f 85 1c ff ff ff    	jne    4058bc <findfield+0x49>
  4059a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4059a5:	c9                   	leaveq 
  4059a6:	c3                   	retq   

00000000004059a7 <pushglobalfuncname>:
  4059a7:	55                   	push   %rbp
  4059a8:	48 89 e5             	mov    %rsp,%rbp
  4059ab:	48 83 ec 20          	sub    $0x20,%rsp
  4059af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4059b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4059b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059bb:	48 89 c7             	mov    %rax,%rdi
  4059be:	e8 96 c5 ff ff       	callq  401f59 <lua_gettop>
  4059c3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4059c6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4059ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059ce:	be 82 ce 43 00       	mov    $0x43ce82,%esi
  4059d3:	48 89 c7             	mov    %rax,%rdi
  4059d6:	e8 62 a2 00 00       	callq  40fc3d <lua_getinfo>
  4059db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059df:	ba 84 ce 43 00       	mov    $0x43ce84,%edx
  4059e4:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  4059e9:	48 89 c7             	mov    %rax,%rdi
  4059ec:	e8 c4 da ff ff       	callq  4034b5 <lua_getfield>
  4059f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4059f4:	8d 48 01             	lea    0x1(%rax),%ecx
  4059f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059fb:	ba 02 00 00 00       	mov    $0x2,%edx
  405a00:	89 ce                	mov    %ecx,%esi
  405a02:	48 89 c7             	mov    %rax,%rdi
  405a05:	e8 69 fe ff ff       	callq  405873 <findfield>
  405a0a:	85 c0                	test   %eax,%eax
  405a0c:	0f 84 a4 00 00 00    	je     405ab6 <pushglobalfuncname+0x10f>
  405a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a16:	ba 00 00 00 00       	mov    $0x0,%edx
  405a1b:	be ff ff ff ff       	mov    $0xffffffff,%esi
  405a20:	48 89 c7             	mov    %rax,%rdi
  405a23:	e8 45 cf ff ff       	callq  40296d <lua_tolstring>
  405a28:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  405a2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a30:	ba 03 00 00 00       	mov    $0x3,%edx
  405a35:	be 8c ce 43 00       	mov    $0x43ce8c,%esi
  405a3a:	48 89 c7             	mov    %rax,%rdi
  405a3d:	e8 4e bd ff ff       	callq  401790 <strncmp@plt>
  405a42:	85 c0                	test   %eax,%eax
  405a44:	75 3e                	jne    405a84 <pushglobalfuncname+0xdd>
  405a46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a4a:	48 8d 50 03          	lea    0x3(%rax),%rdx
  405a4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a52:	48 89 d6             	mov    %rdx,%rsi
  405a55:	48 89 c7             	mov    %rax,%rdi
  405a58:	e8 b1 d3 ff ff       	callq  402e0e <lua_pushstring>
  405a5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a61:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  405a66:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405a6b:	48 89 c7             	mov    %rax,%rdi
  405a6e:	e8 fb c6 ff ff       	callq  40216e <lua_rotate>
  405a73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a77:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405a7c:	48 89 c7             	mov    %rax,%rdi
  405a7f:	e8 00 c5 ff ff       	callq  401f84 <lua_settop>
  405a84:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405a87:	8d 50 01             	lea    0x1(%rax),%edx
  405a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a8e:	be ff ff ff ff       	mov    $0xffffffff,%esi
  405a93:	48 89 c7             	mov    %rax,%rdi
  405a96:	e8 92 c7 ff ff       	callq  40222d <lua_copy>
  405a9b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405a9e:	8d 50 01             	lea    0x1(%rax),%edx
  405aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405aa5:	89 d6                	mov    %edx,%esi
  405aa7:	48 89 c7             	mov    %rax,%rdi
  405aaa:	e8 d5 c4 ff ff       	callq  401f84 <lua_settop>
  405aaf:	b8 01 00 00 00       	mov    $0x1,%eax
  405ab4:	eb 16                	jmp    405acc <pushglobalfuncname+0x125>
  405ab6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  405ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405abd:	89 d6                	mov    %edx,%esi
  405abf:	48 89 c7             	mov    %rax,%rdi
  405ac2:	e8 bd c4 ff ff       	callq  401f84 <lua_settop>
  405ac7:	b8 00 00 00 00       	mov    $0x0,%eax
  405acc:	c9                   	leaveq 
  405acd:	c3                   	retq   

0000000000405ace <pushfuncname>:
  405ace:	55                   	push   %rbp
  405acf:	48 89 e5             	mov    %rsp,%rbp
  405ad2:	48 83 ec 10          	sub    $0x10,%rsp
  405ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  405ada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  405ade:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  405ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405ae6:	48 89 d6             	mov    %rdx,%rsi
  405ae9:	48 89 c7             	mov    %rax,%rdi
  405aec:	e8 b6 fe ff ff       	callq  4059a7 <pushglobalfuncname>
  405af1:	85 c0                	test   %eax,%eax
  405af3:	74 5b                	je     405b50 <pushfuncname+0x82>
  405af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405af9:	ba 00 00 00 00       	mov    $0x0,%edx
  405afe:	be ff ff ff ff       	mov    $0xffffffff,%esi
  405b03:	48 89 c7             	mov    %rax,%rdi
  405b06:	e8 62 ce ff ff       	callq  40296d <lua_tolstring>
  405b0b:	48 89 c2             	mov    %rax,%rdx
  405b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405b12:	be 90 ce 43 00       	mov    $0x43ce90,%esi
  405b17:	48 89 c7             	mov    %rax,%rdi
  405b1a:	b8 00 00 00 00       	mov    $0x0,%eax
  405b1f:	e8 ee d3 ff ff       	callq  402f12 <lua_pushfstring>
  405b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405b28:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  405b2d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405b32:	48 89 c7             	mov    %rax,%rdi
  405b35:	e8 34 c6 ff ff       	callq  40216e <lua_rotate>
  405b3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405b3e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  405b43:	48 89 c7             	mov    %rax,%rdi
  405b46:	e8 39 c4 ff ff       	callq  401f84 <lua_settop>
  405b4b:	e9 a5 00 00 00       	jmpq   405bf5 <pushfuncname+0x127>
  405b50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405b54:	48 8b 40 10          	mov    0x10(%rax),%rax
  405b58:	0f b6 00             	movzbl (%rax),%eax
  405b5b:	84 c0                	test   %al,%al
  405b5d:	74 28                	je     405b87 <pushfuncname+0xb9>
  405b5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405b63:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405b67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405b6b:	48 8b 50 10          	mov    0x10(%rax),%rdx
  405b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405b73:	be 9e ce 43 00       	mov    $0x43ce9e,%esi
  405b78:	48 89 c7             	mov    %rax,%rdi
  405b7b:	b8 00 00 00 00       	mov    $0x0,%eax
  405b80:	e8 8d d3 ff ff       	callq  402f12 <lua_pushfstring>
  405b85:	eb 6e                	jmp    405bf5 <pushfuncname+0x127>
  405b87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405b8b:	48 8b 40 18          	mov    0x18(%rax),%rax
  405b8f:	0f b6 00             	movzbl (%rax),%eax
  405b92:	3c 6d                	cmp    $0x6d,%al
  405b94:	75 13                	jne    405ba9 <pushfuncname+0xdb>
  405b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405b9a:	be a6 ce 43 00       	mov    $0x43cea6,%esi
  405b9f:	48 89 c7             	mov    %rax,%rdi
  405ba2:	e8 67 d2 ff ff       	callq  402e0e <lua_pushstring>
  405ba7:	eb 4c                	jmp    405bf5 <pushfuncname+0x127>
  405ba9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405bad:	48 8b 40 18          	mov    0x18(%rax),%rax
  405bb1:	0f b6 00             	movzbl (%rax),%eax
  405bb4:	3c 43                	cmp    $0x43,%al
  405bb6:	74 2c                	je     405be4 <pushfuncname+0x116>
  405bb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405bbc:	8b 50 34             	mov    0x34(%rax),%edx
  405bbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405bc3:	48 8d 70 44          	lea    0x44(%rax),%rsi
  405bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405bcb:	89 d1                	mov    %edx,%ecx
  405bcd:	48 89 f2             	mov    %rsi,%rdx
  405bd0:	be b1 ce 43 00       	mov    $0x43ceb1,%esi
  405bd5:	48 89 c7             	mov    %rax,%rdi
  405bd8:	b8 00 00 00 00       	mov    $0x0,%eax
  405bdd:	e8 30 d3 ff ff       	callq  402f12 <lua_pushfstring>
  405be2:	eb 11                	jmp    405bf5 <pushfuncname+0x127>
  405be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405be8:	be c2 ce 43 00       	mov    $0x43cec2,%esi
  405bed:	48 89 c7             	mov    %rax,%rdi
  405bf0:	e8 19 d2 ff ff       	callq  402e0e <lua_pushstring>
  405bf5:	90                   	nop
  405bf6:	c9                   	leaveq 
  405bf7:	c3                   	retq   

0000000000405bf8 <lastlevel>:
  405bf8:	55                   	push   %rbp
  405bf9:	48 89 e5             	mov    %rsp,%rbp
  405bfc:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  405c03:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
  405c0a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  405c11:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  405c18:	eb 09                	jmp    405c23 <lastlevel+0x2b>
  405c1a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405c1d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405c20:	d1 65 f8             	shll   -0x8(%rbp)
  405c23:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  405c2a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  405c2d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  405c34:	89 ce                	mov    %ecx,%esi
  405c36:	48 89 c7             	mov    %rax,%rdi
  405c39:	e8 0e 97 00 00       	callq  40f34c <lua_getstack>
  405c3e:	85 c0                	test   %eax,%eax
  405c40:	75 d8                	jne    405c1a <lastlevel+0x22>
  405c42:	eb 44                	jmp    405c88 <lastlevel+0x90>
  405c44:	8b 55 fc             	mov    -0x4(%rbp),%edx
  405c47:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405c4a:	01 d0                	add    %edx,%eax
  405c4c:	89 c2                	mov    %eax,%edx
  405c4e:	c1 ea 1f             	shr    $0x1f,%edx
  405c51:	01 d0                	add    %edx,%eax
  405c53:	d1 f8                	sar    %eax
  405c55:	89 45 f4             	mov    %eax,-0xc(%rbp)
  405c58:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  405c5f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  405c62:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  405c69:	89 ce                	mov    %ecx,%esi
  405c6b:	48 89 c7             	mov    %rax,%rdi
  405c6e:	e8 d9 96 00 00       	callq  40f34c <lua_getstack>
  405c73:	85 c0                	test   %eax,%eax
  405c75:	74 0b                	je     405c82 <lastlevel+0x8a>
  405c77:	8b 45 f4             	mov    -0xc(%rbp),%eax
  405c7a:	83 c0 01             	add    $0x1,%eax
  405c7d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405c80:	eb 06                	jmp    405c88 <lastlevel+0x90>
  405c82:	8b 45 f4             	mov    -0xc(%rbp),%eax
  405c85:	89 45 f8             	mov    %eax,-0x8(%rbp)
  405c88:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405c8b:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  405c8e:	7c b4                	jl     405c44 <lastlevel+0x4c>
  405c90:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405c93:	83 e8 01             	sub    $0x1,%eax
  405c96:	c9                   	leaveq 
  405c97:	c3                   	retq   

0000000000405c98 <luaL_traceback>:
  405c98:	55                   	push   %rbp
  405c99:	48 89 e5             	mov    %rsp,%rbp
  405c9c:	48 81 ec e0 04 00 00 	sub    $0x4e0,%rsp
  405ca3:	48 89 bd 38 fb ff ff 	mov    %rdi,-0x4c8(%rbp)
  405caa:	48 89 b5 30 fb ff ff 	mov    %rsi,-0x4d0(%rbp)
  405cb1:	48 89 95 28 fb ff ff 	mov    %rdx,-0x4d8(%rbp)
  405cb8:	89 8d 24 fb ff ff    	mov    %ecx,-0x4dc(%rbp)
  405cbe:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  405cc5:	48 89 c7             	mov    %rax,%rdi
  405cc8:	e8 2b ff ff ff       	callq  405bf8 <lastlevel>
  405ccd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  405cd0:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405cd3:	2b 85 24 fb ff ff    	sub    -0x4dc(%rbp),%eax
  405cd9:	83 f8 15             	cmp    $0x15,%eax
  405cdc:	7e 07                	jle    405ce5 <luaL_traceback+0x4d>
  405cde:	b8 0a 00 00 00       	mov    $0xa,%eax
  405ce3:	eb 05                	jmp    405cea <luaL_traceback+0x52>
  405ce5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  405cea:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405ced:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  405cf4:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  405cfb:	48 89 d6             	mov    %rdx,%rsi
  405cfe:	48 89 c7             	mov    %rax,%rdi
  405d01:	e8 83 12 00 00       	callq  406f89 <luaL_buffinit>
  405d06:	48 83 bd 28 fb ff ff 	cmpq   $0x0,-0x4d8(%rbp)
  405d0d:	00 
  405d0e:	74 63                	je     405d73 <luaL_traceback+0xdb>
  405d10:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
  405d17:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405d1e:	48 89 d6             	mov    %rdx,%rsi
  405d21:	48 89 c7             	mov    %rax,%rdi
  405d24:	e8 e1 10 00 00       	callq  406e0a <luaL_addstring>
  405d29:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  405d30:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  405d37:	48 39 c2             	cmp    %rax,%rdx
  405d3a:	72 17                	jb     405d53 <luaL_traceback+0xbb>
  405d3c:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405d43:	be 01 00 00 00       	mov    $0x1,%esi
  405d48:	48 89 c7             	mov    %rax,%rdi
  405d4b:	e8 28 10 00 00       	callq  406d78 <luaL_prepbuffsize>
  405d50:	48 85 c0             	test   %rax,%rax
  405d53:	90                   	nop
  405d54:	48 8b 8d d0 fb ff ff 	mov    -0x430(%rbp),%rcx
  405d5b:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  405d62:	48 8d 50 01          	lea    0x1(%rax),%rdx
  405d66:	48 89 95 e0 fb ff ff 	mov    %rdx,-0x420(%rbp)
  405d6d:	48 01 c8             	add    %rcx,%rax
  405d70:	c6 00 0a             	movb   $0xa,(%rax)
  405d73:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405d7a:	be c4 ce 43 00       	mov    $0x43cec4,%esi
  405d7f:	48 89 c7             	mov    %rax,%rdi
  405d82:	e8 83 10 00 00       	callq  406e0a <luaL_addstring>
  405d87:	e9 25 01 00 00       	jmpq   405eb1 <luaL_traceback+0x219>
  405d8c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405d8f:	8d 50 ff             	lea    -0x1(%rax),%edx
  405d92:	89 55 fc             	mov    %edx,-0x4(%rbp)
  405d95:	85 c0                	test   %eax,%eax
  405d97:	75 48                	jne    405de1 <luaL_traceback+0x149>
  405d99:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405d9c:	2b 85 24 fb ff ff    	sub    -0x4dc(%rbp),%eax
  405da2:	83 e8 0a             	sub    $0xa,%eax
  405da5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  405da8:	8b 55 f4             	mov    -0xc(%rbp),%edx
  405dab:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  405db2:	be d5 ce 43 00       	mov    $0x43ced5,%esi
  405db7:	48 89 c7             	mov    %rax,%rdi
  405dba:	b8 00 00 00 00       	mov    $0x0,%eax
  405dbf:	e8 4e d1 ff ff       	callq  402f12 <lua_pushfstring>
  405dc4:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405dcb:	48 89 c7             	mov    %rax,%rdi
  405dce:	e8 27 11 00 00       	callq  406efa <luaL_addvalue>
  405dd3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  405dd6:	01 85 24 fb ff ff    	add    %eax,-0x4dc(%rbp)
  405ddc:	e9 d0 00 00 00       	jmpq   405eb1 <luaL_traceback+0x219>
  405de1:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  405de8:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  405def:	be f0 ce 43 00       	mov    $0x43cef0,%esi
  405df4:	48 89 c7             	mov    %rax,%rdi
  405df7:	e8 41 9e 00 00       	callq  40fc3d <lua_getinfo>
  405dfc:	8b 85 70 fb ff ff    	mov    -0x490(%rbp),%eax
  405e02:	85 c0                	test   %eax,%eax
  405e04:	7f 26                	jg     405e2c <luaL_traceback+0x194>
  405e06:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  405e0d:	48 8d 50 44          	lea    0x44(%rax),%rdx
  405e11:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  405e18:	be f5 ce 43 00       	mov    $0x43cef5,%esi
  405e1d:	48 89 c7             	mov    %rax,%rdi
  405e20:	b8 00 00 00 00       	mov    $0x0,%eax
  405e25:	e8 e8 d0 ff ff       	callq  402f12 <lua_pushfstring>
  405e2a:	eb 2f                	jmp    405e5b <luaL_traceback+0x1c3>
  405e2c:	8b 95 70 fb ff ff    	mov    -0x490(%rbp),%edx
  405e32:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  405e39:	48 8d 70 44          	lea    0x44(%rax),%rsi
  405e3d:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  405e44:	89 d1                	mov    %edx,%ecx
  405e46:	48 89 f2             	mov    %rsi,%rdx
  405e49:	be ff ce 43 00       	mov    $0x43ceff,%esi
  405e4e:	48 89 c7             	mov    %rax,%rdi
  405e51:	b8 00 00 00 00       	mov    $0x0,%eax
  405e56:	e8 b7 d0 ff ff       	callq  402f12 <lua_pushfstring>
  405e5b:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405e62:	48 89 c7             	mov    %rax,%rdi
  405e65:	e8 90 10 00 00       	callq  406efa <luaL_addvalue>
  405e6a:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  405e71:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  405e78:	48 89 d6             	mov    %rdx,%rsi
  405e7b:	48 89 c7             	mov    %rax,%rdi
  405e7e:	e8 4b fc ff ff       	callq  405ace <pushfuncname>
  405e83:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405e8a:	48 89 c7             	mov    %rax,%rdi
  405e8d:	e8 68 10 00 00       	callq  406efa <luaL_addvalue>
  405e92:	0f b6 85 7f fb ff ff 	movzbl -0x481(%rbp),%eax
  405e99:	84 c0                	test   %al,%al
  405e9b:	74 14                	je     405eb1 <luaL_traceback+0x219>
  405e9d:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405ea4:	be 0c cf 43 00       	mov    $0x43cf0c,%esi
  405ea9:	48 89 c7             	mov    %rax,%rdi
  405eac:	e8 59 0f 00 00       	callq  406e0a <luaL_addstring>
  405eb1:	8b 85 24 fb ff ff    	mov    -0x4dc(%rbp),%eax
  405eb7:	8d 50 01             	lea    0x1(%rax),%edx
  405eba:	89 95 24 fb ff ff    	mov    %edx,-0x4dc(%rbp)
  405ec0:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  405ec7:	48 8b 8d 30 fb ff ff 	mov    -0x4d0(%rbp),%rcx
  405ece:	89 c6                	mov    %eax,%esi
  405ed0:	48 89 cf             	mov    %rcx,%rdi
  405ed3:	e8 74 94 00 00       	callq  40f34c <lua_getstack>
  405ed8:	85 c0                	test   %eax,%eax
  405eda:	0f 85 ac fe ff ff    	jne    405d8c <luaL_traceback+0xf4>
  405ee0:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  405ee7:	48 89 c7             	mov    %rax,%rdi
  405eea:	e8 50 0f 00 00       	callq  406e3f <luaL_pushresult>
  405eef:	90                   	nop
  405ef0:	c9                   	leaveq 
  405ef1:	c3                   	retq   

0000000000405ef2 <luaL_argerror>:
  405ef2:	55                   	push   %rbp
  405ef3:	48 89 e5             	mov    %rsp,%rbp
  405ef6:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  405efd:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  405f04:	89 b5 64 ff ff ff    	mov    %esi,-0x9c(%rbp)
  405f0a:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  405f11:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  405f18:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405f1f:	be 00 00 00 00       	mov    $0x0,%esi
  405f24:	48 89 c7             	mov    %rax,%rdi
  405f27:	e8 20 94 00 00       	callq  40f34c <lua_getstack>
  405f2c:	85 c0                	test   %eax,%eax
  405f2e:	75 2b                	jne    405f5b <luaL_argerror+0x69>
  405f30:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  405f37:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
  405f3d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405f44:	be 21 cf 43 00       	mov    $0x43cf21,%esi
  405f49:	48 89 c7             	mov    %rax,%rdi
  405f4c:	b8 00 00 00 00       	mov    $0x0,%eax
  405f51:	e8 9a 02 00 00       	callq  4061f0 <luaL_error>
  405f56:	e9 ec 00 00 00       	jmpq   406047 <luaL_argerror+0x155>
  405f5b:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  405f62:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405f69:	be 37 cf 43 00       	mov    $0x43cf37,%esi
  405f6e:	48 89 c7             	mov    %rax,%rdi
  405f71:	e8 c7 9c 00 00       	callq  40fc3d <lua_getinfo>
  405f76:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  405f7a:	be 39 cf 43 00       	mov    $0x43cf39,%esi
  405f7f:	48 89 c7             	mov    %rax,%rdi
  405f82:	e8 39 ba ff ff       	callq  4019c0 <strcmp@plt>
  405f87:	85 c0                	test   %eax,%eax
  405f89:	75 3c                	jne    405fc7 <luaL_argerror+0xd5>
  405f8b:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%rbp)
  405f92:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
  405f99:	75 2c                	jne    405fc7 <luaL_argerror+0xd5>
  405f9b:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  405fa2:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  405fa9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405fb0:	be 40 cf 43 00       	mov    $0x43cf40,%esi
  405fb5:	48 89 c7             	mov    %rax,%rdi
  405fb8:	b8 00 00 00 00       	mov    $0x0,%eax
  405fbd:	e8 2e 02 00 00       	callq  4061f0 <luaL_error>
  405fc2:	e9 80 00 00 00       	jmpq   406047 <luaL_argerror+0x155>
  405fc7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  405fce:	48 85 c0             	test   %rax,%rax
  405fd1:	75 44                	jne    406017 <luaL_argerror+0x125>
  405fd3:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  405fda:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405fe1:	48 89 d6             	mov    %rdx,%rsi
  405fe4:	48 89 c7             	mov    %rax,%rdi
  405fe7:	e8 bb f9 ff ff       	callq  4059a7 <pushglobalfuncname>
  405fec:	85 c0                	test   %eax,%eax
  405fee:	74 1b                	je     40600b <luaL_argerror+0x119>
  405ff0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405ff7:	ba 00 00 00 00       	mov    $0x0,%edx
  405ffc:	be ff ff ff ff       	mov    $0xffffffff,%esi
  406001:	48 89 c7             	mov    %rax,%rdi
  406004:	e8 64 c9 ff ff       	callq  40296d <lua_tolstring>
  406009:	eb 05                	jmp    406010 <luaL_argerror+0x11e>
  40600b:	b8 c2 ce 43 00       	mov    $0x43cec2,%eax
  406010:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  406017:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  40601e:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
  406025:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
  40602b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  406032:	49 89 f0             	mov    %rsi,%r8
  406035:	be 5e cf 43 00       	mov    $0x43cf5e,%esi
  40603a:	48 89 c7             	mov    %rax,%rdi
  40603d:	b8 00 00 00 00       	mov    $0x0,%eax
  406042:	e8 a9 01 00 00       	callq  4061f0 <luaL_error>
  406047:	c9                   	leaveq 
  406048:	c3                   	retq   

0000000000406049 <luaL_typeerror>:
  406049:	55                   	push   %rbp
  40604a:	48 89 e5             	mov    %rsp,%rbp
  40604d:	48 83 ec 30          	sub    $0x30,%rsp
  406051:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406055:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  406058:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40605c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40605f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406063:	ba 7c cf 43 00       	mov    $0x43cf7c,%edx
  406068:	89 ce                	mov    %ecx,%esi
  40606a:	48 89 c7             	mov    %rax,%rdi
  40606d:	e8 cd 16 00 00       	callq  40773f <luaL_getmetafield>
  406072:	83 f8 04             	cmp    $0x4,%eax
  406075:	75 1c                	jne    406093 <luaL_typeerror+0x4a>
  406077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40607b:	ba 00 00 00 00       	mov    $0x0,%edx
  406080:	be ff ff ff ff       	mov    $0xffffffff,%esi
  406085:	48 89 c7             	mov    %rax,%rdi
  406088:	e8 e0 c8 ff ff       	callq  40296d <lua_tolstring>
  40608d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406091:	eb 45                	jmp    4060d8 <luaL_typeerror+0x8f>
  406093:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  406096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40609a:	89 d6                	mov    %edx,%esi
  40609c:	48 89 c7             	mov    %rax,%rdi
  40609f:	e8 cf c2 ff ff       	callq  402373 <lua_type>
  4060a4:	83 f8 02             	cmp    $0x2,%eax
  4060a7:	75 0a                	jne    4060b3 <luaL_typeerror+0x6a>
  4060a9:	48 c7 45 f8 83 cf 43 	movq   $0x43cf83,-0x8(%rbp)
  4060b0:	00 
  4060b1:	eb 25                	jmp    4060d8 <luaL_typeerror+0x8f>
  4060b3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4060b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060ba:	89 d6                	mov    %edx,%esi
  4060bc:	48 89 c7             	mov    %rax,%rdi
  4060bf:	e8 af c2 ff ff       	callq  402373 <lua_type>
  4060c4:	89 c2                	mov    %eax,%edx
  4060c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060ca:	89 d6                	mov    %edx,%esi
  4060cc:	48 89 c7             	mov    %rax,%rdi
  4060cf:	e8 fe c2 ff ff       	callq  4023d2 <lua_typename>
  4060d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4060d8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4060dc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4060e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060e4:	be 92 cf 43 00       	mov    $0x43cf92,%esi
  4060e9:	48 89 c7             	mov    %rax,%rdi
  4060ec:	b8 00 00 00 00       	mov    $0x0,%eax
  4060f1:	e8 1c ce ff ff       	callq  402f12 <lua_pushfstring>
  4060f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4060fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4060fe:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  406101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406105:	89 ce                	mov    %ecx,%esi
  406107:	48 89 c7             	mov    %rax,%rdi
  40610a:	e8 e3 fd ff ff       	callq  405ef2 <luaL_argerror>
  40610f:	c9                   	leaveq 
  406110:	c3                   	retq   

0000000000406111 <tag_error>:
  406111:	55                   	push   %rbp
  406112:	48 89 e5             	mov    %rsp,%rbp
  406115:	48 83 ec 10          	sub    $0x10,%rsp
  406119:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40611d:	89 75 f4             	mov    %esi,-0xc(%rbp)
  406120:	89 55 f0             	mov    %edx,-0x10(%rbp)
  406123:	8b 55 f0             	mov    -0x10(%rbp),%edx
  406126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40612a:	89 d6                	mov    %edx,%esi
  40612c:	48 89 c7             	mov    %rax,%rdi
  40612f:	e8 9e c2 ff ff       	callq  4023d2 <lua_typename>
  406134:	48 89 c2             	mov    %rax,%rdx
  406137:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40613a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40613e:	89 ce                	mov    %ecx,%esi
  406140:	48 89 c7             	mov    %rax,%rdi
  406143:	e8 01 ff ff ff       	callq  406049 <luaL_typeerror>
  406148:	90                   	nop
  406149:	c9                   	leaveq 
  40614a:	c3                   	retq   

000000000040614b <luaL_where>:
  40614b:	55                   	push   %rbp
  40614c:	48 89 e5             	mov    %rsp,%rbp
  40614f:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  406156:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  40615d:	89 b5 64 ff ff ff    	mov    %esi,-0x9c(%rbp)
  406163:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  40616a:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
  406170:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  406177:	89 ce                	mov    %ecx,%esi
  406179:	48 89 c7             	mov    %rax,%rdi
  40617c:	e8 cb 91 00 00       	callq  40f34c <lua_getstack>
  406181:	85 c0                	test   %eax,%eax
  406183:	74 50                	je     4061d5 <luaL_where+0x8a>
  406185:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  40618c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  406193:	be a6 cf 43 00       	mov    $0x43cfa6,%esi
  406198:	48 89 c7             	mov    %rax,%rdi
  40619b:	e8 9d 9a 00 00       	callq  40fc3d <lua_getinfo>
  4061a0:	8b 45 a0             	mov    -0x60(%rbp),%eax
  4061a3:	85 c0                	test   %eax,%eax
  4061a5:	7e 2e                	jle    4061d5 <luaL_where+0x8a>
  4061a7:	8b 55 a0             	mov    -0x60(%rbp),%edx
  4061aa:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  4061b1:	48 8d 70 44          	lea    0x44(%rax),%rsi
  4061b5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4061bc:	89 d1                	mov    %edx,%ecx
  4061be:	48 89 f2             	mov    %rsi,%rdx
  4061c1:	be a9 cf 43 00       	mov    $0x43cfa9,%esi
  4061c6:	48 89 c7             	mov    %rax,%rdi
  4061c9:	b8 00 00 00 00       	mov    $0x0,%eax
  4061ce:	e8 3f cd ff ff       	callq  402f12 <lua_pushfstring>
  4061d3:	eb 19                	jmp    4061ee <luaL_where+0xa3>
  4061d5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4061dc:	be b1 cf 43 00       	mov    $0x43cfb1,%esi
  4061e1:	48 89 c7             	mov    %rax,%rdi
  4061e4:	b8 00 00 00 00       	mov    $0x0,%eax
  4061e9:	e8 24 cd ff ff       	callq  402f12 <lua_pushfstring>
  4061ee:	c9                   	leaveq 
  4061ef:	c3                   	retq   

00000000004061f0 <luaL_error>:
  4061f0:	55                   	push   %rbp
  4061f1:	48 89 e5             	mov    %rsp,%rbp
  4061f4:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4061fb:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  406202:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  406209:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  406210:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  406217:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  40621e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  406225:	84 c0                	test   %al,%al
  406227:	74 20                	je     406249 <luaL_error+0x59>
  406229:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40622d:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  406231:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  406235:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  406239:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  40623d:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  406241:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  406245:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  406249:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
  406250:	00 00 00 
  406253:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
  40625a:	00 00 00 
  40625d:	48 8d 45 10          	lea    0x10(%rbp),%rax
  406261:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  406268:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  40626f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  406276:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40627d:	be 01 00 00 00       	mov    $0x1,%esi
  406282:	48 89 c7             	mov    %rax,%rdi
  406285:	e8 c1 fe ff ff       	callq  40614b <luaL_where>
  40628a:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
  406291:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  406298:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40629f:	48 89 ce             	mov    %rcx,%rsi
  4062a2:	48 89 c7             	mov    %rax,%rdi
  4062a5:	e8 16 cc ff ff       	callq  402ec0 <lua_pushvfstring>
  4062aa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4062b1:	be 02 00 00 00       	mov    $0x2,%esi
  4062b6:	48 89 c7             	mov    %rax,%rdi
  4062b9:	e8 7f ee ff ff       	callq  40513d <lua_concat>
  4062be:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4062c5:	48 89 c7             	mov    %rax,%rdi
  4062c8:	e8 2c ed ff ff       	callq  404ff9 <lua_error>
  4062cd:	c9                   	leaveq 
  4062ce:	c3                   	retq   

00000000004062cf <luaL_fileresult>:
  4062cf:	55                   	push   %rbp
  4062d0:	48 89 e5             	mov    %rsp,%rbp
  4062d3:	48 83 ec 30          	sub    $0x30,%rsp
  4062d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4062db:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4062de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4062e2:	e8 a9 b3 ff ff       	callq  401690 <__errno_location@plt>
  4062e7:	8b 00                	mov    (%rax),%eax
  4062e9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4062ec:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4062f0:	74 18                	je     40630a <luaL_fileresult+0x3b>
  4062f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4062f6:	be 01 00 00 00       	mov    $0x1,%esi
  4062fb:	48 89 c7             	mov    %rax,%rdi
  4062fe:	e8 35 ce ff ff       	callq  403138 <lua_pushboolean>
  406303:	b8 01 00 00 00       	mov    $0x1,%eax
  406308:	eb 72                	jmp    40637c <luaL_fileresult+0xad>
  40630a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40630e:	48 89 c7             	mov    %rax,%rdi
  406311:	e8 8f c9 ff ff       	callq  402ca5 <lua_pushnil>
  406316:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40631b:	74 29                	je     406346 <luaL_fileresult+0x77>
  40631d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406320:	89 c7                	mov    %eax,%edi
  406322:	e8 09 b4 ff ff       	callq  401730 <strerror@plt>
  406327:	48 89 c1             	mov    %rax,%rcx
  40632a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40632e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406332:	be b2 cf 43 00       	mov    $0x43cfb2,%esi
  406337:	48 89 c7             	mov    %rax,%rdi
  40633a:	b8 00 00 00 00       	mov    $0x0,%eax
  40633f:	e8 ce cb ff ff       	callq  402f12 <lua_pushfstring>
  406344:	eb 1c                	jmp    406362 <luaL_fileresult+0x93>
  406346:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406349:	89 c7                	mov    %eax,%edi
  40634b:	e8 e0 b3 ff ff       	callq  401730 <strerror@plt>
  406350:	48 89 c2             	mov    %rax,%rdx
  406353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406357:	48 89 d6             	mov    %rdx,%rsi
  40635a:	48 89 c7             	mov    %rax,%rdi
  40635d:	e8 ac ca ff ff       	callq  402e0e <lua_pushstring>
  406362:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406365:	48 63 d0             	movslq %eax,%rdx
  406368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40636c:	48 89 d6             	mov    %rdx,%rsi
  40636f:	48 89 c7             	mov    %rax,%rdi
  406372:	e8 9e c9 ff ff       	callq  402d15 <lua_pushinteger>
  406377:	b8 03 00 00 00       	mov    $0x3,%eax
  40637c:	c9                   	leaveq 
  40637d:	c3                   	retq   

000000000040637e <luaL_execresult>:
  40637e:	55                   	push   %rbp
  40637f:	48 89 e5             	mov    %rsp,%rbp
  406382:	48 83 ec 20          	sub    $0x20,%rsp
  406386:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40638a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40638d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  406391:	74 23                	je     4063b6 <luaL_execresult+0x38>
  406393:	e8 f8 b2 ff ff       	callq  401690 <__errno_location@plt>
  406398:	8b 00                	mov    (%rax),%eax
  40639a:	85 c0                	test   %eax,%eax
  40639c:	74 18                	je     4063b6 <luaL_execresult+0x38>
  40639e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4063a2:	ba 00 00 00 00       	mov    $0x0,%edx
  4063a7:	be 00 00 00 00       	mov    $0x0,%esi
  4063ac:	48 89 c7             	mov    %rax,%rdi
  4063af:	e8 1b ff ff ff       	callq  4062cf <luaL_fileresult>
  4063b4:	eb 65                	jmp    40641b <luaL_execresult+0x9d>
  4063b6:	48 c7 45 f8 b9 cf 43 	movq   $0x43cfb9,-0x8(%rbp)
  4063bd:	00 
  4063be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4063c2:	0f b6 00             	movzbl (%rax),%eax
  4063c5:	3c 65                	cmp    $0x65,%al
  4063c7:	75 19                	jne    4063e2 <luaL_execresult+0x64>
  4063c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4063cd:	75 13                	jne    4063e2 <luaL_execresult+0x64>
  4063cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4063d3:	be 01 00 00 00       	mov    $0x1,%esi
  4063d8:	48 89 c7             	mov    %rax,%rdi
  4063db:	e8 58 cd ff ff       	callq  403138 <lua_pushboolean>
  4063e0:	eb 0c                	jmp    4063ee <luaL_execresult+0x70>
  4063e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4063e6:	48 89 c7             	mov    %rax,%rdi
  4063e9:	e8 b7 c8 ff ff       	callq  402ca5 <lua_pushnil>
  4063ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4063f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4063f6:	48 89 d6             	mov    %rdx,%rsi
  4063f9:	48 89 c7             	mov    %rax,%rdi
  4063fc:	e8 0d ca ff ff       	callq  402e0e <lua_pushstring>
  406401:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  406404:	48 63 d0             	movslq %eax,%rdx
  406407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40640b:	48 89 d6             	mov    %rdx,%rsi
  40640e:	48 89 c7             	mov    %rax,%rdi
  406411:	e8 ff c8 ff ff       	callq  402d15 <lua_pushinteger>
  406416:	b8 03 00 00 00       	mov    $0x3,%eax
  40641b:	c9                   	leaveq 
  40641c:	c3                   	retq   

000000000040641d <luaL_newmetatable>:
  40641d:	55                   	push   %rbp
  40641e:	48 89 e5             	mov    %rsp,%rbp
  406421:	48 83 ec 10          	sub    $0x10,%rsp
  406425:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406429:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40642d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  406431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406435:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  40643a:	48 89 c7             	mov    %rax,%rdi
  40643d:	e8 73 d0 ff ff       	callq  4034b5 <lua_getfield>
  406442:	85 c0                	test   %eax,%eax
  406444:	74 07                	je     40644d <luaL_newmetatable+0x30>
  406446:	b8 00 00 00 00       	mov    $0x0,%eax
  40644b:	eb 7b                	jmp    4064c8 <luaL_newmetatable+0xab>
  40644d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406451:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406456:	48 89 c7             	mov    %rax,%rdi
  406459:	e8 26 bb ff ff       	callq  401f84 <lua_settop>
  40645e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406462:	ba 02 00 00 00       	mov    $0x2,%edx
  406467:	be 00 00 00 00       	mov    $0x0,%esi
  40646c:	48 89 c7             	mov    %rax,%rdi
  40646f:	e8 a4 d3 ff ff       	callq  403818 <lua_createtable>
  406474:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  406478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40647c:	48 89 d6             	mov    %rdx,%rsi
  40647f:	48 89 c7             	mov    %rax,%rdi
  406482:	e8 87 c9 ff ff       	callq  402e0e <lua_pushstring>
  406487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40648b:	ba 7c cf 43 00       	mov    $0x43cf7c,%edx
  406490:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406495:	48 89 c7             	mov    %rax,%rdi
  406498:	e8 35 d9 ff ff       	callq  403dd2 <lua_setfield>
  40649d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4064a1:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4064a6:	48 89 c7             	mov    %rax,%rdi
  4064a9:	e8 61 be ff ff       	callq  40230f <lua_pushvalue>
  4064ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4064b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4064b6:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  4064bb:	48 89 c7             	mov    %rax,%rdi
  4064be:	e8 0f d9 ff ff       	callq  403dd2 <lua_setfield>
  4064c3:	b8 01 00 00 00       	mov    $0x1,%eax
  4064c8:	c9                   	leaveq 
  4064c9:	c3                   	retq   

00000000004064ca <luaL_setmetatable>:
  4064ca:	55                   	push   %rbp
  4064cb:	48 89 e5             	mov    %rsp,%rbp
  4064ce:	48 83 ec 10          	sub    $0x10,%rsp
  4064d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4064d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4064da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4064de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4064e2:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  4064e7:	48 89 c7             	mov    %rax,%rdi
  4064ea:	e8 c6 cf ff ff       	callq  4034b5 <lua_getfield>
  4064ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4064f3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4064f8:	48 89 c7             	mov    %rax,%rdi
  4064fb:	e8 d8 dc ff ff       	callq  4041d8 <lua_setmetatable>
  406500:	90                   	nop
  406501:	c9                   	leaveq 
  406502:	c3                   	retq   

0000000000406503 <luaL_testudata>:
  406503:	55                   	push   %rbp
  406504:	48 89 e5             	mov    %rsp,%rbp
  406507:	48 83 ec 30          	sub    $0x30,%rsp
  40650b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40650f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  406512:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  406516:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  406519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40651d:	89 d6                	mov    %edx,%esi
  40651f:	48 89 c7             	mov    %rax,%rdi
  406522:	e8 90 c6 ff ff       	callq  402bb7 <lua_touserdata>
  406527:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40652b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  406530:	74 63                	je     406595 <luaL_testudata+0x92>
  406532:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  406535:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406539:	89 d6                	mov    %edx,%esi
  40653b:	48 89 c7             	mov    %rax,%rdi
  40653e:	e8 74 d3 ff ff       	callq  4038b7 <lua_getmetatable>
  406543:	85 c0                	test   %eax,%eax
  406545:	74 4e                	je     406595 <luaL_testudata+0x92>
  406547:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40654b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40654f:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  406554:	48 89 c7             	mov    %rax,%rdi
  406557:	e8 59 cf ff ff       	callq  4034b5 <lua_getfield>
  40655c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406560:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  406565:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40656a:	48 89 c7             	mov    %rax,%rdi
  40656d:	e8 f8 bf ff ff       	callq  40256a <lua_rawequal>
  406572:	85 c0                	test   %eax,%eax
  406574:	75 08                	jne    40657e <luaL_testudata+0x7b>
  406576:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40657d:	00 
  40657e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406582:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  406587:	48 89 c7             	mov    %rax,%rdi
  40658a:	e8 f5 b9 ff ff       	callq  401f84 <lua_settop>
  40658f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406593:	eb 05                	jmp    40659a <luaL_testudata+0x97>
  406595:	b8 00 00 00 00       	mov    $0x0,%eax
  40659a:	c9                   	leaveq 
  40659b:	c3                   	retq   

000000000040659c <luaL_checkudata>:
  40659c:	55                   	push   %rbp
  40659d:	48 89 e5             	mov    %rsp,%rbp
  4065a0:	48 83 ec 30          	sub    $0x30,%rsp
  4065a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4065a8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4065ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4065af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4065b3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4065b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4065ba:	89 ce                	mov    %ecx,%esi
  4065bc:	48 89 c7             	mov    %rax,%rdi
  4065bf:	e8 3f ff ff ff       	callq  406503 <luaL_testudata>
  4065c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4065c8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4065cd:	0f 95 c0             	setne  %al
  4065d0:	0f b6 c0             	movzbl %al,%eax
  4065d3:	48 85 c0             	test   %rax,%rax
  4065d6:	75 17                	jne    4065ef <luaL_checkudata+0x53>
  4065d8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4065dc:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4065df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4065e3:	89 ce                	mov    %ecx,%esi
  4065e5:	48 89 c7             	mov    %rax,%rdi
  4065e8:	e8 5c fa ff ff       	callq  406049 <luaL_typeerror>
  4065ed:	85 c0                	test   %eax,%eax
  4065ef:	90                   	nop
  4065f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4065f4:	c9                   	leaveq 
  4065f5:	c3                   	retq   

00000000004065f6 <luaL_checkoption>:
  4065f6:	55                   	push   %rbp
  4065f7:	48 89 e5             	mov    %rsp,%rbp
  4065fa:	48 83 ec 30          	sub    $0x30,%rsp
  4065fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406602:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  406605:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  406609:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40660d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  406612:	74 1a                	je     40662e <luaL_checkoption+0x38>
  406614:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  406618:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40661b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40661f:	b9 00 00 00 00       	mov    $0x0,%ecx
  406624:	48 89 c7             	mov    %rax,%rdi
  406627:	e8 f8 01 00 00       	callq  406824 <luaL_optlstring>
  40662c:	eb 16                	jmp    406644 <luaL_checkoption+0x4e>
  40662e:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  406631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406635:	ba 00 00 00 00       	mov    $0x0,%edx
  40663a:	89 ce                	mov    %ecx,%esi
  40663c:	48 89 c7             	mov    %rax,%rdi
  40663f:	e8 88 01 00 00       	callq  4067cc <luaL_checklstring>
  406644:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406648:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40664f:	eb 33                	jmp    406684 <luaL_checkoption+0x8e>
  406651:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406654:	48 98                	cltq   
  406656:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40665d:	00 
  40665e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406662:	48 01 d0             	add    %rdx,%rax
  406665:	48 8b 00             	mov    (%rax),%rax
  406668:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40666c:	48 89 d6             	mov    %rdx,%rsi
  40666f:	48 89 c7             	mov    %rax,%rdi
  406672:	e8 49 b3 ff ff       	callq  4019c0 <strcmp@plt>
  406677:	85 c0                	test   %eax,%eax
  406679:	75 05                	jne    406680 <luaL_checkoption+0x8a>
  40667b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40667e:	eb 4e                	jmp    4066ce <luaL_checkoption+0xd8>
  406680:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  406684:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406687:	48 98                	cltq   
  406689:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  406690:	00 
  406691:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406695:	48 01 d0             	add    %rdx,%rax
  406698:	48 8b 00             	mov    (%rax),%rax
  40669b:	48 85 c0             	test   %rax,%rax
  40669e:	75 b1                	jne    406651 <luaL_checkoption+0x5b>
  4066a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4066a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066a8:	be be cf 43 00       	mov    $0x43cfbe,%esi
  4066ad:	48 89 c7             	mov    %rax,%rdi
  4066b0:	b8 00 00 00 00       	mov    $0x0,%eax
  4066b5:	e8 58 c8 ff ff       	callq  402f12 <lua_pushfstring>
  4066ba:	48 89 c2             	mov    %rax,%rdx
  4066bd:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4066c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066c4:	89 ce                	mov    %ecx,%esi
  4066c6:	48 89 c7             	mov    %rax,%rdi
  4066c9:	e8 24 f8 ff ff       	callq  405ef2 <luaL_argerror>
  4066ce:	c9                   	leaveq 
  4066cf:	c3                   	retq   

00000000004066d0 <luaL_checkstack>:
  4066d0:	55                   	push   %rbp
  4066d1:	48 89 e5             	mov    %rsp,%rbp
  4066d4:	48 83 ec 20          	sub    $0x20,%rsp
  4066d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4066dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4066df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4066e3:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4066e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4066ea:	89 d6                	mov    %edx,%esi
  4066ec:	48 89 c7             	mov    %rax,%rdi
  4066ef:	e8 7b b6 ff ff       	callq  401d6f <lua_checkstack>
  4066f4:	85 c0                	test   %eax,%eax
  4066f6:	0f 94 c0             	sete   %al
  4066f9:	0f b6 c0             	movzbl %al,%eax
  4066fc:	48 85 c0             	test   %rax,%rax
  4066ff:	74 39                	je     40673a <luaL_checkstack+0x6a>
  406701:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  406706:	74 1c                	je     406724 <luaL_checkstack+0x54>
  406708:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40670c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406710:	be d2 cf 43 00       	mov    $0x43cfd2,%esi
  406715:	48 89 c7             	mov    %rax,%rdi
  406718:	b8 00 00 00 00       	mov    $0x0,%eax
  40671d:	e8 ce fa ff ff       	callq  4061f0 <luaL_error>
  406722:	eb 16                	jmp    40673a <luaL_checkstack+0x6a>
  406724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406728:	be e6 cf 43 00       	mov    $0x43cfe6,%esi
  40672d:	48 89 c7             	mov    %rax,%rdi
  406730:	b8 00 00 00 00       	mov    $0x0,%eax
  406735:	e8 b6 fa ff ff       	callq  4061f0 <luaL_error>
  40673a:	90                   	nop
  40673b:	c9                   	leaveq 
  40673c:	c3                   	retq   

000000000040673d <luaL_checktype>:
  40673d:	55                   	push   %rbp
  40673e:	48 89 e5             	mov    %rsp,%rbp
  406741:	48 83 ec 10          	sub    $0x10,%rsp
  406745:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406749:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40674c:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40674f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  406752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406756:	89 d6                	mov    %edx,%esi
  406758:	48 89 c7             	mov    %rax,%rdi
  40675b:	e8 13 bc ff ff       	callq  402373 <lua_type>
  406760:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  406763:	0f 95 c0             	setne  %al
  406766:	0f b6 c0             	movzbl %al,%eax
  406769:	48 85 c0             	test   %rax,%rax
  40676c:	74 14                	je     406782 <luaL_checktype+0x45>
  40676e:	8b 55 f0             	mov    -0x10(%rbp),%edx
  406771:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  406774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406778:	89 ce                	mov    %ecx,%esi
  40677a:	48 89 c7             	mov    %rax,%rdi
  40677d:	e8 8f f9 ff ff       	callq  406111 <tag_error>
  406782:	90                   	nop
  406783:	c9                   	leaveq 
  406784:	c3                   	retq   

0000000000406785 <luaL_checkany>:
  406785:	55                   	push   %rbp
  406786:	48 89 e5             	mov    %rsp,%rbp
  406789:	48 83 ec 10          	sub    $0x10,%rsp
  40678d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406791:	89 75 f4             	mov    %esi,-0xc(%rbp)
  406794:	8b 55 f4             	mov    -0xc(%rbp),%edx
  406797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40679b:	89 d6                	mov    %edx,%esi
  40679d:	48 89 c7             	mov    %rax,%rdi
  4067a0:	e8 ce bb ff ff       	callq  402373 <lua_type>
  4067a5:	83 f8 ff             	cmp    $0xffffffff,%eax
  4067a8:	0f 94 c0             	sete   %al
  4067ab:	0f b6 c0             	movzbl %al,%eax
  4067ae:	48 85 c0             	test   %rax,%rax
  4067b1:	74 16                	je     4067c9 <luaL_checkany+0x44>
  4067b3:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4067b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4067ba:	ba f5 cf 43 00       	mov    $0x43cff5,%edx
  4067bf:	89 ce                	mov    %ecx,%esi
  4067c1:	48 89 c7             	mov    %rax,%rdi
  4067c4:	e8 29 f7 ff ff       	callq  405ef2 <luaL_argerror>
  4067c9:	90                   	nop
  4067ca:	c9                   	leaveq 
  4067cb:	c3                   	retq   

00000000004067cc <luaL_checklstring>:
  4067cc:	55                   	push   %rbp
  4067cd:	48 89 e5             	mov    %rsp,%rbp
  4067d0:	48 83 ec 30          	sub    $0x30,%rsp
  4067d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4067d8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4067db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4067df:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4067e3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4067e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4067ea:	89 ce                	mov    %ecx,%esi
  4067ec:	48 89 c7             	mov    %rax,%rdi
  4067ef:	e8 79 c1 ff ff       	callq  40296d <lua_tolstring>
  4067f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4067f8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4067fd:	0f 94 c0             	sete   %al
  406800:	0f b6 c0             	movzbl %al,%eax
  406803:	48 85 c0             	test   %rax,%rax
  406806:	74 16                	je     40681e <luaL_checklstring+0x52>
  406808:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40680b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40680f:	ba 04 00 00 00       	mov    $0x4,%edx
  406814:	89 ce                	mov    %ecx,%esi
  406816:	48 89 c7             	mov    %rax,%rdi
  406819:	e8 f3 f8 ff ff       	callq  406111 <tag_error>
  40681e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406822:	c9                   	leaveq 
  406823:	c3                   	retq   

0000000000406824 <luaL_optlstring>:
  406824:	55                   	push   %rbp
  406825:	48 89 e5             	mov    %rsp,%rbp
  406828:	48 83 ec 20          	sub    $0x20,%rsp
  40682c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406830:	89 75 f4             	mov    %esi,-0xc(%rbp)
  406833:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  406837:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40683b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40683e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406842:	89 d6                	mov    %edx,%esi
  406844:	48 89 c7             	mov    %rax,%rdi
  406847:	e8 27 bb ff ff       	callq  402373 <lua_type>
  40684c:	85 c0                	test   %eax,%eax
  40684e:	7f 31                	jg     406881 <luaL_optlstring+0x5d>
  406850:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  406855:	74 24                	je     40687b <luaL_optlstring+0x57>
  406857:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40685c:	74 11                	je     40686f <luaL_optlstring+0x4b>
  40685e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406862:	48 89 c7             	mov    %rax,%rdi
  406865:	e8 06 af ff ff       	callq  401770 <strlen@plt>
  40686a:	48 89 c2             	mov    %rax,%rdx
  40686d:	eb 05                	jmp    406874 <luaL_optlstring+0x50>
  40686f:	ba 00 00 00 00       	mov    $0x0,%edx
  406874:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406878:	48 89 10             	mov    %rdx,(%rax)
  40687b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40687f:	eb 15                	jmp    406896 <luaL_optlstring+0x72>
  406881:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  406885:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  406888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40688c:	89 ce                	mov    %ecx,%esi
  40688e:	48 89 c7             	mov    %rax,%rdi
  406891:	e8 36 ff ff ff       	callq  4067cc <luaL_checklstring>
  406896:	c9                   	leaveq 
  406897:	c3                   	retq   

0000000000406898 <luaL_checknumber>:
  406898:	55                   	push   %rbp
  406899:	48 89 e5             	mov    %rsp,%rbp
  40689c:	48 83 ec 20          	sub    $0x20,%rsp
  4068a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4068a4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4068a7:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  4068ab:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4068ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068b2:	89 ce                	mov    %ecx,%esi
  4068b4:	48 89 c7             	mov    %rax,%rdi
  4068b7:	e8 5b bf ff ff       	callq  402817 <lua_tonumberx>
  4068bc:	66 48 0f 7e c0       	movq   %xmm0,%rax
  4068c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4068c5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4068c8:	85 c0                	test   %eax,%eax
  4068ca:	0f 94 c0             	sete   %al
  4068cd:	0f b6 c0             	movzbl %al,%eax
  4068d0:	48 85 c0             	test   %rax,%rax
  4068d3:	74 16                	je     4068eb <luaL_checknumber+0x53>
  4068d5:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4068d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068dc:	ba 03 00 00 00       	mov    $0x3,%edx
  4068e1:	89 ce                	mov    %ecx,%esi
  4068e3:	48 89 c7             	mov    %rax,%rdi
  4068e6:	e8 26 f8 ff ff       	callq  406111 <tag_error>
  4068eb:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  4068f0:	c9                   	leaveq 
  4068f1:	c3                   	retq   

00000000004068f2 <luaL_optnumber>:
  4068f2:	55                   	push   %rbp
  4068f3:	48 89 e5             	mov    %rsp,%rbp
  4068f6:	48 83 ec 20          	sub    $0x20,%rsp
  4068fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4068fe:	89 75 f4             	mov    %esi,-0xc(%rbp)
  406901:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  406906:	8b 55 f4             	mov    -0xc(%rbp),%edx
  406909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40690d:	89 d6                	mov    %edx,%esi
  40690f:	48 89 c7             	mov    %rax,%rdi
  406912:	e8 5c ba ff ff       	callq  402373 <lua_type>
  406917:	85 c0                	test   %eax,%eax
  406919:	7e 18                	jle    406933 <luaL_optnumber+0x41>
  40691b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40691e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406922:	89 d6                	mov    %edx,%esi
  406924:	48 89 c7             	mov    %rax,%rdi
  406927:	e8 6c ff ff ff       	callq  406898 <luaL_checknumber>
  40692c:	66 48 0f 7e c0       	movq   %xmm0,%rax
  406931:	eb 04                	jmp    406937 <luaL_optnumber+0x45>
  406933:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406937:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40693b:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  406940:	c9                   	leaveq 
  406941:	c3                   	retq   

0000000000406942 <interror>:
  406942:	55                   	push   %rbp
  406943:	48 89 e5             	mov    %rsp,%rbp
  406946:	48 83 ec 10          	sub    $0x10,%rsp
  40694a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40694e:	89 75 f4             	mov    %esi,-0xc(%rbp)
  406951:	8b 55 f4             	mov    -0xc(%rbp),%edx
  406954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406958:	89 d6                	mov    %edx,%esi
  40695a:	48 89 c7             	mov    %rax,%rdi
  40695d:	e8 0d bb ff ff       	callq  40246f <lua_isnumber>
  406962:	85 c0                	test   %eax,%eax
  406964:	74 18                	je     40697e <interror+0x3c>
  406966:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  406969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40696d:	ba 08 d0 43 00       	mov    $0x43d008,%edx
  406972:	89 ce                	mov    %ecx,%esi
  406974:	48 89 c7             	mov    %rax,%rdi
  406977:	e8 76 f5 ff ff       	callq  405ef2 <luaL_argerror>
  40697c:	eb 16                	jmp    406994 <interror+0x52>
  40697e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  406981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406985:	ba 03 00 00 00       	mov    $0x3,%edx
  40698a:	89 ce                	mov    %ecx,%esi
  40698c:	48 89 c7             	mov    %rax,%rdi
  40698f:	e8 7d f7 ff ff       	callq  406111 <tag_error>
  406994:	90                   	nop
  406995:	c9                   	leaveq 
  406996:	c3                   	retq   

0000000000406997 <luaL_checkinteger>:
  406997:	55                   	push   %rbp
  406998:	48 89 e5             	mov    %rsp,%rbp
  40699b:	48 83 ec 20          	sub    $0x20,%rsp
  40699f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4069a3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4069a6:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  4069aa:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4069ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4069b1:	89 ce                	mov    %ecx,%esi
  4069b3:	48 89 c7             	mov    %rax,%rdi
  4069b6:	e8 da be ff ff       	callq  402895 <lua_tointegerx>
  4069bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4069bf:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4069c2:	85 c0                	test   %eax,%eax
  4069c4:	0f 94 c0             	sete   %al
  4069c7:	0f b6 c0             	movzbl %al,%eax
  4069ca:	48 85 c0             	test   %rax,%rax
  4069cd:	74 11                	je     4069e0 <luaL_checkinteger+0x49>
  4069cf:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4069d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4069d6:	89 d6                	mov    %edx,%esi
  4069d8:	48 89 c7             	mov    %rax,%rdi
  4069db:	e8 62 ff ff ff       	callq  406942 <interror>
  4069e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4069e4:	c9                   	leaveq 
  4069e5:	c3                   	retq   

00000000004069e6 <luaL_optinteger>:
  4069e6:	55                   	push   %rbp
  4069e7:	48 89 e5             	mov    %rsp,%rbp
  4069ea:	48 83 ec 20          	sub    $0x20,%rsp
  4069ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4069f2:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4069f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4069f9:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4069fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406a00:	89 d6                	mov    %edx,%esi
  406a02:	48 89 c7             	mov    %rax,%rdi
  406a05:	e8 69 b9 ff ff       	callq  402373 <lua_type>
  406a0a:	85 c0                	test   %eax,%eax
  406a0c:	7e 13                	jle    406a21 <luaL_optinteger+0x3b>
  406a0e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  406a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406a15:	89 d6                	mov    %edx,%esi
  406a17:	48 89 c7             	mov    %rax,%rdi
  406a1a:	e8 78 ff ff ff       	callq  406997 <luaL_checkinteger>
  406a1f:	eb 04                	jmp    406a25 <luaL_optinteger+0x3f>
  406a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406a25:	c9                   	leaveq 
  406a26:	c3                   	retq   

0000000000406a27 <resizebox>:
  406a27:	55                   	push   %rbp
  406a28:	48 89 e5             	mov    %rsp,%rbp
  406a2b:	48 83 ec 40          	sub    $0x40,%rsp
  406a2f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  406a33:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  406a36:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  406a3a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  406a3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406a42:	48 89 d6             	mov    %rdx,%rsi
  406a45:	48 89 c7             	mov    %rax,%rdi
  406a48:	e8 e7 e7 ff ff       	callq  405234 <lua_getallocf>
  406a4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406a51:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  406a54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406a58:	89 d6                	mov    %edx,%esi
  406a5a:	48 89 c7             	mov    %rax,%rdi
  406a5d:	e8 55 c1 ff ff       	callq  402bb7 <lua_touserdata>
  406a62:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406a66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406a6a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406a6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406a72:	48 8b 30             	mov    (%rax),%rsi
  406a75:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  406a79:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  406a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406a81:	ff d0                	callq  *%rax
  406a83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  406a87:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  406a8c:	75 0e                	jne    406a9c <resizebox+0x75>
  406a8e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  406a93:	74 07                	je     406a9c <resizebox+0x75>
  406a95:	b8 01 00 00 00       	mov    $0x1,%eax
  406a9a:	eb 05                	jmp    406aa1 <resizebox+0x7a>
  406a9c:	b8 00 00 00 00       	mov    $0x0,%eax
  406aa1:	85 c0                	test   %eax,%eax
  406aa3:	0f 95 c0             	setne  %al
  406aa6:	0f b6 c0             	movzbl %al,%eax
  406aa9:	48 85 c0             	test   %rax,%rax
  406aac:	74 1d                	je     406acb <resizebox+0xa4>
  406aae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406ab2:	be 2d d0 43 00       	mov    $0x43d02d,%esi
  406ab7:	48 89 c7             	mov    %rax,%rdi
  406aba:	e8 4f c3 ff ff       	callq  402e0e <lua_pushstring>
  406abf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406ac3:	48 89 c7             	mov    %rax,%rdi
  406ac6:	e8 2e e5 ff ff       	callq  404ff9 <lua_error>
  406acb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406acf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  406ad3:	48 89 10             	mov    %rdx,(%rax)
  406ad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406ada:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  406ade:	48 89 50 08          	mov    %rdx,0x8(%rax)
  406ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406ae6:	c9                   	leaveq 
  406ae7:	c3                   	retq   

0000000000406ae8 <boxgc>:
  406ae8:	55                   	push   %rbp
  406ae9:	48 89 e5             	mov    %rsp,%rbp
  406aec:	48 83 ec 10          	sub    $0x10,%rsp
  406af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406af8:	ba 00 00 00 00       	mov    $0x0,%edx
  406afd:	be 01 00 00 00       	mov    $0x1,%esi
  406b02:	48 89 c7             	mov    %rax,%rdi
  406b05:	e8 1d ff ff ff       	callq  406a27 <resizebox>
  406b0a:	b8 00 00 00 00       	mov    $0x0,%eax
  406b0f:	c9                   	leaveq 
  406b10:	c3                   	retq   

0000000000406b11 <newbox>:
  406b11:	55                   	push   %rbp
  406b12:	48 89 e5             	mov    %rsp,%rbp
  406b15:	48 83 ec 20          	sub    $0x20,%rsp
  406b19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406b1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406b21:	ba 00 00 00 00       	mov    $0x0,%edx
  406b26:	be 10 00 00 00       	mov    $0x10,%esi
  406b2b:	48 89 c7             	mov    %rax,%rdi
  406b2e:	e8 d3 e7 ff ff       	callq  405306 <lua_newuserdatauv>
  406b33:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406b3b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  406b42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406b46:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  406b4d:	00 
  406b4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406b52:	be 90 d0 43 00       	mov    $0x43d090,%esi
  406b57:	48 89 c7             	mov    %rax,%rdi
  406b5a:	e8 be f8 ff ff       	callq  40641d <luaL_newmetatable>
  406b5f:	85 c0                	test   %eax,%eax
  406b61:	74 16                	je     406b79 <newbox+0x68>
  406b63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406b67:	ba 00 00 00 00       	mov    $0x0,%edx
  406b6c:	be 60 d0 43 00       	mov    $0x43d060,%esi
  406b71:	48 89 c7             	mov    %rax,%rdi
  406b74:	e8 b1 0f 00 00       	callq  407b2a <luaL_setfuncs>
  406b79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406b7d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406b82:	48 89 c7             	mov    %rax,%rdi
  406b85:	e8 4e d6 ff ff       	callq  4041d8 <lua_setmetatable>
  406b8a:	90                   	nop
  406b8b:	c9                   	leaveq 
  406b8c:	c3                   	retq   

0000000000406b8d <newbuffsize>:
  406b8d:	55                   	push   %rbp
  406b8e:	48 89 e5             	mov    %rsp,%rbp
  406b91:	48 83 ec 20          	sub    $0x20,%rsp
  406b95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406b99:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  406b9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406ba1:	48 8b 40 08          	mov    0x8(%rax),%rax
  406ba5:	48 d1 e8             	shr    %rax
  406ba8:	48 89 c2             	mov    %rax,%rdx
  406bab:	48 89 d0             	mov    %rdx,%rax
  406bae:	48 01 c0             	add    %rax,%rax
  406bb1:	48 01 d0             	add    %rdx,%rax
  406bb4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406bb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406bbc:	48 f7 d0             	not    %rax
  406bbf:	48 89 c2             	mov    %rax,%rdx
  406bc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406bc6:	48 8b 40 10          	mov    0x10(%rax),%rax
  406bca:	48 39 c2             	cmp    %rax,%rdx
  406bcd:	0f 92 c0             	setb   %al
  406bd0:	0f b6 c0             	movzbl %al,%eax
  406bd3:	48 85 c0             	test   %rax,%rax
  406bd6:	74 1e                	je     406bf6 <newbuffsize+0x69>
  406bd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406bdc:	48 8b 40 18          	mov    0x18(%rax),%rax
  406be0:	be 97 d0 43 00       	mov    $0x43d097,%esi
  406be5:	48 89 c7             	mov    %rax,%rdi
  406be8:	b8 00 00 00 00       	mov    $0x0,%eax
  406bed:	e8 fe f5 ff ff       	callq  4061f0 <luaL_error>
  406bf2:	48 98                	cltq   
  406bf4:	eb 2c                	jmp    406c22 <newbuffsize+0x95>
  406bf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406bfa:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406bfe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406c02:	48 01 d0             	add    %rdx,%rax
  406c05:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  406c09:	73 13                	jae    406c1e <newbuffsize+0x91>
  406c0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406c0f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406c13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406c17:	48 01 d0             	add    %rdx,%rax
  406c1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406c22:	c9                   	leaveq 
  406c23:	c3                   	retq   

0000000000406c24 <prepbuffsize>:
  406c24:	55                   	push   %rbp
  406c25:	48 89 e5             	mov    %rsp,%rbp
  406c28:	48 83 ec 40          	sub    $0x40,%rsp
  406c2c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  406c30:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  406c34:	89 55 cc             	mov    %edx,-0x34(%rbp)
  406c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c3b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406c3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c43:	48 8b 40 10          	mov    0x10(%rax),%rax
  406c47:	48 29 c2             	sub    %rax,%rdx
  406c4a:	48 89 d0             	mov    %rdx,%rax
  406c4d:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  406c51:	77 17                	ja     406c6a <prepbuffsize+0x46>
  406c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c57:	48 8b 10             	mov    (%rax),%rdx
  406c5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c5e:	48 8b 40 10          	mov    0x10(%rax),%rax
  406c62:	48 01 d0             	add    %rdx,%rax
  406c65:	e9 0c 01 00 00       	jmpq   406d76 <prepbuffsize+0x152>
  406c6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c6e:	48 8b 40 18          	mov    0x18(%rax),%rax
  406c72:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406c76:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  406c7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c7e:	48 89 d6             	mov    %rdx,%rsi
  406c81:	48 89 c7             	mov    %rax,%rdi
  406c84:	e8 04 ff ff ff       	callq  406b8d <newbuffsize>
  406c89:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  406c8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c91:	48 8b 00             	mov    (%rax),%rax
  406c94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  406c98:	48 83 c2 20          	add    $0x20,%rdx
  406c9c:	48 39 d0             	cmp    %rdx,%rax
  406c9f:	74 1e                	je     406cbf <prepbuffsize+0x9b>
  406ca1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  406ca5:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  406ca8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406cac:	89 ce                	mov    %ecx,%esi
  406cae:	48 89 c7             	mov    %rax,%rdi
  406cb1:	e8 71 fd ff ff       	callq  406a27 <resizebox>
  406cb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406cba:	e9 91 00 00 00       	jmpq   406d50 <prepbuffsize+0x12c>
  406cbf:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  406cc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406cc6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  406ccb:	89 ce                	mov    %ecx,%esi
  406ccd:	48 89 c7             	mov    %rax,%rdi
  406cd0:	e8 99 b4 ff ff       	callq  40216e <lua_rotate>
  406cd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406cd9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406cde:	48 89 c7             	mov    %rax,%rdi
  406ce1:	e8 9e b2 ff ff       	callq  401f84 <lua_settop>
  406ce6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406cea:	48 89 c7             	mov    %rax,%rdi
  406ced:	e8 1f fe ff ff       	callq  406b11 <newbox>
  406cf2:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  406cf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406cf9:	ba 01 00 00 00       	mov    $0x1,%edx
  406cfe:	89 ce                	mov    %ecx,%esi
  406d00:	48 89 c7             	mov    %rax,%rdi
  406d03:	e8 66 b4 ff ff       	callq  40216e <lua_rotate>
  406d08:	8b 55 cc             	mov    -0x34(%rbp),%edx
  406d0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406d0f:	89 d6                	mov    %edx,%esi
  406d11:	48 89 c7             	mov    %rax,%rdi
  406d14:	e8 be e3 ff ff       	callq  4050d7 <lua_toclose>
  406d19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  406d1d:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  406d20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406d24:	89 ce                	mov    %ecx,%esi
  406d26:	48 89 c7             	mov    %rax,%rdi
  406d29:	e8 f9 fc ff ff       	callq  406a27 <resizebox>
  406d2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406d32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d36:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406d3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d3e:	48 8b 08             	mov    (%rax),%rcx
  406d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406d45:	48 89 ce             	mov    %rcx,%rsi
  406d48:	48 89 c7             	mov    %rax,%rdi
  406d4b:	e8 10 ab ff ff       	callq  401860 <memcpy@plt>
  406d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  406d58:	48 89 10             	mov    %rdx,(%rax)
  406d5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  406d63:	48 89 50 08          	mov    %rdx,0x8(%rax)
  406d67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d6b:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406d73:	48 01 d0             	add    %rdx,%rax
  406d76:	c9                   	leaveq 
  406d77:	c3                   	retq   

0000000000406d78 <luaL_prepbuffsize>:
  406d78:	55                   	push   %rbp
  406d79:	48 89 e5             	mov    %rsp,%rbp
  406d7c:	48 83 ec 10          	sub    $0x10,%rsp
  406d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  406d88:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  406d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406d90:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  406d95:	48 89 ce             	mov    %rcx,%rsi
  406d98:	48 89 c7             	mov    %rax,%rdi
  406d9b:	e8 84 fe ff ff       	callq  406c24 <prepbuffsize>
  406da0:	c9                   	leaveq 
  406da1:	c3                   	retq   

0000000000406da2 <luaL_addlstring>:
  406da2:	55                   	push   %rbp
  406da3:	48 89 e5             	mov    %rsp,%rbp
  406da6:	48 83 ec 30          	sub    $0x30,%rsp
  406daa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406dae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  406db2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  406db6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  406dbb:	74 4a                	je     406e07 <luaL_addlstring+0x65>
  406dbd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  406dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406dc5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  406dca:	48 89 ce             	mov    %rcx,%rsi
  406dcd:	48 89 c7             	mov    %rax,%rdi
  406dd0:	e8 4f fe ff ff       	callq  406c24 <prepbuffsize>
  406dd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406dd9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  406ddd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  406de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406de5:	48 89 ce             	mov    %rcx,%rsi
  406de8:	48 89 c7             	mov    %rax,%rdi
  406deb:	e8 70 aa ff ff       	callq  401860 <memcpy@plt>
  406df0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406df4:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406df8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406dfc:	48 01 c2             	add    %rax,%rdx
  406dff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406e03:	48 89 50 10          	mov    %rdx,0x10(%rax)
  406e07:	90                   	nop
  406e08:	c9                   	leaveq 
  406e09:	c3                   	retq   

0000000000406e0a <luaL_addstring>:
  406e0a:	55                   	push   %rbp
  406e0b:	48 89 e5             	mov    %rsp,%rbp
  406e0e:	48 83 ec 10          	sub    $0x10,%rsp
  406e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406e16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  406e1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406e1e:	48 89 c7             	mov    %rax,%rdi
  406e21:	e8 4a a9 ff ff       	callq  401770 <strlen@plt>
  406e26:	48 89 c2             	mov    %rax,%rdx
  406e29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  406e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406e31:	48 89 ce             	mov    %rcx,%rsi
  406e34:	48 89 c7             	mov    %rax,%rdi
  406e37:	e8 66 ff ff ff       	callq  406da2 <luaL_addlstring>
  406e3c:	90                   	nop
  406e3d:	c9                   	leaveq 
  406e3e:	c3                   	retq   

0000000000406e3f <luaL_pushresult>:
  406e3f:	55                   	push   %rbp
  406e40:	48 89 e5             	mov    %rsp,%rbp
  406e43:	48 83 ec 20          	sub    $0x20,%rsp
  406e47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406e4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406e4f:	48 8b 40 18          	mov    0x18(%rax),%rax
  406e53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406e5b:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406e5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406e63:	48 8b 08             	mov    (%rax),%rcx
  406e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406e6a:	48 89 ce             	mov    %rcx,%rsi
  406e6d:	48 89 c7             	mov    %rax,%rdi
  406e70:	e8 e2 be ff ff       	callq  402d57 <lua_pushlstring>
  406e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406e79:	48 8b 00             	mov    (%rax),%rax
  406e7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  406e80:	48 83 c2 20          	add    $0x20,%rdx
  406e84:	48 39 d0             	cmp    %rdx,%rax
  406e87:	74 11                	je     406e9a <luaL_pushresult+0x5b>
  406e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406e8d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406e92:	48 89 c7             	mov    %rax,%rdi
  406e95:	e8 d0 b1 ff ff       	callq  40206a <lua_closeslot>
  406e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406e9e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  406ea3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406ea8:	48 89 c7             	mov    %rax,%rdi
  406eab:	e8 be b2 ff ff       	callq  40216e <lua_rotate>
  406eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406eb4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406eb9:	48 89 c7             	mov    %rax,%rdi
  406ebc:	e8 c3 b0 ff ff       	callq  401f84 <lua_settop>
  406ec1:	90                   	nop
  406ec2:	c9                   	leaveq 
  406ec3:	c3                   	retq   

0000000000406ec4 <luaL_pushresultsize>:
  406ec4:	55                   	push   %rbp
  406ec5:	48 89 e5             	mov    %rsp,%rbp
  406ec8:	48 83 ec 10          	sub    $0x10,%rsp
  406ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406ed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  406ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406ed8:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406edc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406ee0:	48 01 c2             	add    %rax,%rdx
  406ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406ee7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  406eeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406eef:	48 89 c7             	mov    %rax,%rdi
  406ef2:	e8 48 ff ff ff       	callq  406e3f <luaL_pushresult>
  406ef7:	90                   	nop
  406ef8:	c9                   	leaveq 
  406ef9:	c3                   	retq   

0000000000406efa <luaL_addvalue>:
  406efa:	55                   	push   %rbp
  406efb:	48 89 e5             	mov    %rsp,%rbp
  406efe:	48 83 ec 30          	sub    $0x30,%rsp
  406f02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  406f06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406f0a:	48 8b 40 18          	mov    0x18(%rax),%rax
  406f0e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406f12:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  406f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406f1a:	be ff ff ff ff       	mov    $0xffffffff,%esi
  406f1f:	48 89 c7             	mov    %rax,%rdi
  406f22:	e8 46 ba ff ff       	callq  40296d <lua_tolstring>
  406f27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406f2b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  406f2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406f33:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  406f38:	48 89 ce             	mov    %rcx,%rsi
  406f3b:	48 89 c7             	mov    %rax,%rdi
  406f3e:	e8 e1 fc ff ff       	callq  406c24 <prepbuffsize>
  406f43:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  406f47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  406f4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  406f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406f53:	48 89 ce             	mov    %rcx,%rsi
  406f56:	48 89 c7             	mov    %rax,%rdi
  406f59:	e8 02 a9 ff ff       	callq  401860 <memcpy@plt>
  406f5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406f62:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406f66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406f6a:	48 01 c2             	add    %rax,%rdx
  406f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406f71:	48 89 50 10          	mov    %rdx,0x10(%rax)
  406f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406f79:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  406f7e:	48 89 c7             	mov    %rax,%rdi
  406f81:	e8 fe af ff ff       	callq  401f84 <lua_settop>
  406f86:	90                   	nop
  406f87:	c9                   	leaveq 
  406f88:	c3                   	retq   

0000000000406f89 <luaL_buffinit>:
  406f89:	55                   	push   %rbp
  406f8a:	48 89 e5             	mov    %rsp,%rbp
  406f8d:	48 83 ec 10          	sub    $0x10,%rsp
  406f91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406f95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  406f99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406f9d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  406fa1:	48 89 50 18          	mov    %rdx,0x18(%rax)
  406fa5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406fa9:	48 8d 50 20          	lea    0x20(%rax),%rdx
  406fad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406fb1:	48 89 10             	mov    %rdx,(%rax)
  406fb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406fb8:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  406fbf:	00 
  406fc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406fc4:	48 c7 40 08 00 04 00 	movq   $0x400,0x8(%rax)
  406fcb:	00 
  406fcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  406fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406fd4:	48 89 d6             	mov    %rdx,%rsi
  406fd7:	48 89 c7             	mov    %rax,%rdi
  406fda:	e8 9b c1 ff ff       	callq  40317a <lua_pushlightuserdata>
  406fdf:	90                   	nop
  406fe0:	c9                   	leaveq 
  406fe1:	c3                   	retq   

0000000000406fe2 <luaL_buffinitsize>:
  406fe2:	55                   	push   %rbp
  406fe3:	48 89 e5             	mov    %rsp,%rbp
  406fe6:	48 83 ec 20          	sub    $0x20,%rsp
  406fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406fee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  406ff2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  406ff6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  406ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406ffe:	48 89 d6             	mov    %rdx,%rsi
  407001:	48 89 c7             	mov    %rax,%rdi
  407004:	e8 80 ff ff ff       	callq  406f89 <luaL_buffinit>
  407009:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40700d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407011:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  407016:	48 89 ce             	mov    %rcx,%rsi
  407019:	48 89 c7             	mov    %rax,%rdi
  40701c:	e8 03 fc ff ff       	callq  406c24 <prepbuffsize>
  407021:	c9                   	leaveq 
  407022:	c3                   	retq   

0000000000407023 <luaL_ref>:
  407023:	55                   	push   %rbp
  407024:	48 89 e5             	mov    %rsp,%rbp
  407027:	48 83 ec 20          	sub    $0x20,%rsp
  40702b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40702f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  407032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407036:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40703b:	48 89 c7             	mov    %rax,%rdi
  40703e:	e8 30 b3 ff ff       	callq  402373 <lua_type>
  407043:	85 c0                	test   %eax,%eax
  407045:	75 1b                	jne    407062 <luaL_ref+0x3f>
  407047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40704b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407050:	48 89 c7             	mov    %rax,%rdi
  407053:	e8 2c af ff ff       	callq  401f84 <lua_settop>
  407058:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40705d:	e9 ee 00 00 00       	jmpq   407150 <luaL_ref+0x12d>
  407062:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407065:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407069:	89 d6                	mov    %edx,%esi
  40706b:	48 89 c7             	mov    %rax,%rdi
  40706e:	e8 a1 ae ff ff       	callq  401f14 <lua_absindex>
  407073:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  407076:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  407079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40707d:	ba 03 00 00 00       	mov    $0x3,%edx
  407082:	89 ce                	mov    %ecx,%esi
  407084:	48 89 c7             	mov    %rax,%rdi
  407087:	e8 d3 c6 ff ff       	callq  40375f <lua_rawgeti>
  40708c:	85 c0                	test   %eax,%eax
  40708e:	75 30                	jne    4070c0 <luaL_ref+0x9d>
  407090:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  407097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40709b:	be 00 00 00 00       	mov    $0x0,%esi
  4070a0:	48 89 c7             	mov    %rax,%rdi
  4070a3:	e8 6d bc ff ff       	callq  402d15 <lua_pushinteger>
  4070a8:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4070ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4070af:	ba 03 00 00 00       	mov    $0x3,%edx
  4070b4:	89 ce                	mov    %ecx,%esi
  4070b6:	48 89 c7             	mov    %rax,%rdi
  4070b9:	e8 5c d0 ff ff       	callq  40411a <lua_rawseti>
  4070be:	eb 19                	jmp    4070d9 <luaL_ref+0xb6>
  4070c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4070c4:	ba 00 00 00 00       	mov    $0x0,%edx
  4070c9:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4070ce:	48 89 c7             	mov    %rax,%rdi
  4070d1:	e8 bf b7 ff ff       	callq  402895 <lua_tointegerx>
  4070d6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4070d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4070dd:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4070e2:	48 89 c7             	mov    %rax,%rdi
  4070e5:	e8 9a ae ff ff       	callq  401f84 <lua_settop>
  4070ea:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4070ee:	74 2f                	je     40711f <luaL_ref+0xfc>
  4070f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4070f3:	48 63 d0             	movslq %eax,%rdx
  4070f6:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4070f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4070fd:	89 ce                	mov    %ecx,%esi
  4070ff:	48 89 c7             	mov    %rax,%rdi
  407102:	e8 58 c6 ff ff       	callq  40375f <lua_rawgeti>
  407107:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40710a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40710e:	ba 03 00 00 00       	mov    $0x3,%edx
  407113:	89 ce                	mov    %ecx,%esi
  407115:	48 89 c7             	mov    %rax,%rdi
  407118:	e8 fd cf ff ff       	callq  40411a <lua_rawseti>
  40711d:	eb 17                	jmp    407136 <luaL_ref+0x113>
  40711f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407126:	89 d6                	mov    %edx,%esi
  407128:	48 89 c7             	mov    %rax,%rdi
  40712b:	e8 31 b9 ff ff       	callq  402a61 <lua_rawlen>
  407130:	83 c0 01             	add    $0x1,%eax
  407133:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407136:	8b 45 fc             	mov    -0x4(%rbp),%eax
  407139:	48 63 d0             	movslq %eax,%rdx
  40713c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40713f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407143:	89 ce                	mov    %ecx,%esi
  407145:	48 89 c7             	mov    %rax,%rdi
  407148:	e8 cd cf ff ff       	callq  40411a <lua_rawseti>
  40714d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  407150:	c9                   	leaveq 
  407151:	c3                   	retq   

0000000000407152 <luaL_unref>:
  407152:	55                   	push   %rbp
  407153:	48 89 e5             	mov    %rsp,%rbp
  407156:	48 83 ec 10          	sub    $0x10,%rsp
  40715a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40715e:	89 75 f4             	mov    %esi,-0xc(%rbp)
  407161:	89 55 f0             	mov    %edx,-0x10(%rbp)
  407164:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  407168:	78 6c                	js     4071d6 <luaL_unref+0x84>
  40716a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40716d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407171:	89 d6                	mov    %edx,%esi
  407173:	48 89 c7             	mov    %rax,%rdi
  407176:	e8 99 ad ff ff       	callq  401f14 <lua_absindex>
  40717b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40717e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407185:	ba 03 00 00 00       	mov    $0x3,%edx
  40718a:	89 ce                	mov    %ecx,%esi
  40718c:	48 89 c7             	mov    %rax,%rdi
  40718f:	e8 cb c5 ff ff       	callq  40375f <lua_rawgeti>
  407194:	8b 45 f0             	mov    -0x10(%rbp),%eax
  407197:	48 63 d0             	movslq %eax,%rdx
  40719a:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40719d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4071a1:	89 ce                	mov    %ecx,%esi
  4071a3:	48 89 c7             	mov    %rax,%rdi
  4071a6:	e8 6f cf ff ff       	callq  40411a <lua_rawseti>
  4071ab:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4071ae:	48 63 d0             	movslq %eax,%rdx
  4071b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4071b5:	48 89 d6             	mov    %rdx,%rsi
  4071b8:	48 89 c7             	mov    %rax,%rdi
  4071bb:	e8 55 bb ff ff       	callq  402d15 <lua_pushinteger>
  4071c0:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4071c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4071c7:	ba 03 00 00 00       	mov    $0x3,%edx
  4071cc:	89 ce                	mov    %ecx,%esi
  4071ce:	48 89 c7             	mov    %rax,%rdi
  4071d1:	e8 44 cf ff ff       	callq  40411a <lua_rawseti>
  4071d6:	90                   	nop
  4071d7:	c9                   	leaveq 
  4071d8:	c3                   	retq   

00000000004071d9 <getF>:
  4071d9:	55                   	push   %rbp
  4071da:	48 89 e5             	mov    %rsp,%rbp
  4071dd:	48 83 ec 30          	sub    $0x30,%rsp
  4071e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4071e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4071e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4071ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4071f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4071f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4071f9:	8b 00                	mov    (%rax),%eax
  4071fb:	85 c0                	test   %eax,%eax
  4071fd:	7e 1c                	jle    40721b <getF+0x42>
  4071ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407203:	8b 00                	mov    (%rax),%eax
  407205:	48 63 d0             	movslq %eax,%rdx
  407208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40720c:	48 89 10             	mov    %rdx,(%rax)
  40720f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407213:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  407219:	eb 47                	jmp    407262 <getF+0x89>
  40721b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40721f:	48 8b 40 08          	mov    0x8(%rax),%rax
  407223:	48 89 c7             	mov    %rax,%rdi
  407226:	e8 05 a8 ff ff       	callq  401a30 <feof@plt>
  40722b:	85 c0                	test   %eax,%eax
  40722d:	74 07                	je     407236 <getF+0x5d>
  40722f:	b8 00 00 00 00       	mov    $0x0,%eax
  407234:	eb 34                	jmp    40726a <getF+0x91>
  407236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40723a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40723e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  407242:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
  407246:	48 89 c1             	mov    %rax,%rcx
  407249:	ba 00 20 00 00       	mov    $0x2000,%edx
  40724e:	be 01 00 00 00       	mov    $0x1,%esi
  407253:	e8 a8 a7 ff ff       	callq  401a00 <fread@plt>
  407258:	48 89 c2             	mov    %rax,%rdx
  40725b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40725f:	48 89 10             	mov    %rdx,(%rax)
  407262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407266:	48 83 c0 10          	add    $0x10,%rax
  40726a:	c9                   	leaveq 
  40726b:	c3                   	retq   

000000000040726c <errfile>:
  40726c:	55                   	push   %rbp
  40726d:	48 89 e5             	mov    %rsp,%rbp
  407270:	48 83 ec 30          	sub    $0x30,%rsp
  407274:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407278:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40727c:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40727f:	e8 0c a4 ff ff       	callq  401690 <__errno_location@plt>
  407284:	8b 00                	mov    (%rax),%eax
  407286:	89 c7                	mov    %eax,%edi
  407288:	e8 a3 a4 ff ff       	callq  401730 <strerror@plt>
  40728d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407291:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  407294:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407298:	ba 00 00 00 00       	mov    $0x0,%edx
  40729d:	89 ce                	mov    %ecx,%esi
  40729f:	48 89 c7             	mov    %rax,%rdi
  4072a2:	e8 c6 b6 ff ff       	callq  40296d <lua_tolstring>
  4072a7:	48 83 c0 01          	add    $0x1,%rax
  4072ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4072af:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  4072b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4072b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4072bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4072bf:	49 89 f0             	mov    %rsi,%r8
  4072c2:	be a8 d0 43 00       	mov    $0x43d0a8,%esi
  4072c7:	48 89 c7             	mov    %rax,%rdi
  4072ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4072cf:	e8 3e bc ff ff       	callq  402f12 <lua_pushfstring>
  4072d4:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  4072d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4072db:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4072e0:	89 ce                	mov    %ecx,%esi
  4072e2:	48 89 c7             	mov    %rax,%rdi
  4072e5:	e8 84 ae ff ff       	callq  40216e <lua_rotate>
  4072ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4072ee:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4072f3:	48 89 c7             	mov    %rax,%rdi
  4072f6:	e8 89 ac ff ff       	callq  401f84 <lua_settop>
  4072fb:	b8 06 00 00 00       	mov    $0x6,%eax
  407300:	c9                   	leaveq 
  407301:	c3                   	retq   

0000000000407302 <skipBOM>:
  407302:	55                   	push   %rbp
  407303:	48 89 e5             	mov    %rsp,%rbp
  407306:	48 83 ec 20          	sub    $0x20,%rsp
  40730a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40730e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407312:	48 89 c7             	mov    %rax,%rdi
  407315:	e8 f6 a3 ff ff       	callq  401710 <getc@plt>
  40731a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40731d:	81 7d fc ef 00 00 00 	cmpl   $0xef,-0x4(%rbp)
  407324:	75 34                	jne    40735a <skipBOM+0x58>
  407326:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40732a:	48 89 c7             	mov    %rax,%rdi
  40732d:	e8 de a3 ff ff       	callq  401710 <getc@plt>
  407332:	3d bb 00 00 00       	cmp    $0xbb,%eax
  407337:	75 21                	jne    40735a <skipBOM+0x58>
  407339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40733d:	48 89 c7             	mov    %rax,%rdi
  407340:	e8 cb a3 ff ff       	callq  401710 <getc@plt>
  407345:	3d bf 00 00 00       	cmp    $0xbf,%eax
  40734a:	75 0e                	jne    40735a <skipBOM+0x58>
  40734c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407350:	48 89 c7             	mov    %rax,%rdi
  407353:	e8 b8 a3 ff ff       	callq  401710 <getc@plt>
  407358:	eb 03                	jmp    40735d <skipBOM+0x5b>
  40735a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40735d:	c9                   	leaveq 
  40735e:	c3                   	retq   

000000000040735f <skipcomment>:
  40735f:	55                   	push   %rbp
  407360:	48 89 e5             	mov    %rsp,%rbp
  407363:	48 83 ec 20          	sub    $0x20,%rsp
  407367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40736b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40736f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407373:	48 89 c7             	mov    %rax,%rdi
  407376:	e8 87 ff ff ff       	callq  407302 <skipBOM>
  40737b:	89 c2                	mov    %eax,%edx
  40737d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407381:	89 10                	mov    %edx,(%rax)
  407383:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407387:	8b 00                	mov    (%rax),%eax
  407389:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40738c:	83 7d fc 23          	cmpl   $0x23,-0x4(%rbp)
  407390:	75 36                	jne    4073c8 <skipcomment+0x69>
  407392:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407396:	48 89 c7             	mov    %rax,%rdi
  407399:	e8 72 a3 ff ff       	callq  401710 <getc@plt>
  40739e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4073a1:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  4073a5:	74 06                	je     4073ad <skipcomment+0x4e>
  4073a7:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  4073ab:	75 e5                	jne    407392 <skipcomment+0x33>
  4073ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4073b1:	48 89 c7             	mov    %rax,%rdi
  4073b4:	e8 57 a3 ff ff       	callq  401710 <getc@plt>
  4073b9:	89 c2                	mov    %eax,%edx
  4073bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4073bf:	89 10                	mov    %edx,(%rax)
  4073c1:	b8 01 00 00 00       	mov    $0x1,%eax
  4073c6:	eb 05                	jmp    4073cd <skipcomment+0x6e>
  4073c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4073cd:	c9                   	leaveq 
  4073ce:	c3                   	retq   

00000000004073cf <luaL_loadfilex>:
  4073cf:	55                   	push   %rbp
  4073d0:	48 89 e5             	mov    %rsp,%rbp
  4073d3:	48 81 ec 50 20 00 00 	sub    $0x2050,%rsp
  4073da:	48 89 bd c8 df ff ff 	mov    %rdi,-0x2038(%rbp)
  4073e1:	48 89 b5 c0 df ff ff 	mov    %rsi,-0x2040(%rbp)
  4073e8:	48 89 95 b8 df ff ff 	mov    %rdx,-0x2048(%rbp)
  4073ef:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  4073f6:	48 89 c7             	mov    %rax,%rdi
  4073f9:	e8 5b ab ff ff       	callq  401f59 <lua_gettop>
  4073fe:	83 c0 01             	add    $0x1,%eax
  407401:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407404:	48 83 bd c0 df ff ff 	cmpq   $0x0,-0x2040(%rbp)
  40740b:	00 
  40740c:	75 24                	jne    407432 <luaL_loadfilex+0x63>
  40740e:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407415:	be b9 d0 43 00       	mov    $0x43d0b9,%esi
  40741a:	48 89 c7             	mov    %rax,%rdi
  40741d:	e8 ec b9 ff ff       	callq  402e0e <lua_pushstring>
  407422:	48 8b 05 87 7e 24 00 	mov    0x247e87(%rip),%rax        # 64f2b0 <stdin@@GLIBC_2.2.5>
  407429:	48 89 85 e8 df ff ff 	mov    %rax,-0x2018(%rbp)
  407430:	eb 63                	jmp    407495 <luaL_loadfilex+0xc6>
  407432:	48 8b 95 c0 df ff ff 	mov    -0x2040(%rbp),%rdx
  407439:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407440:	be c0 d0 43 00       	mov    $0x43d0c0,%esi
  407445:	48 89 c7             	mov    %rax,%rdi
  407448:	b8 00 00 00 00       	mov    $0x0,%eax
  40744d:	e8 c0 ba ff ff       	callq  402f12 <lua_pushfstring>
  407452:	48 8b 85 c0 df ff ff 	mov    -0x2040(%rbp),%rax
  407459:	be c4 d0 43 00       	mov    $0x43d0c4,%esi
  40745e:	48 89 c7             	mov    %rax,%rdi
  407461:	e8 ca a4 ff ff       	callq  401930 <fopen64@plt>
  407466:	48 89 85 e8 df ff ff 	mov    %rax,-0x2018(%rbp)
  40746d:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  407474:	48 85 c0             	test   %rax,%rax
  407477:	75 1c                	jne    407495 <luaL_loadfilex+0xc6>
  407479:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40747c:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407483:	be c6 d0 43 00       	mov    $0x43d0c6,%esi
  407488:	48 89 c7             	mov    %rax,%rdi
  40748b:	e8 dc fd ff ff       	callq  40726c <errfile>
  407490:	e9 c9 01 00 00       	jmpq   40765e <luaL_loadfilex+0x28f>
  407495:	c7 85 e0 df ff ff 00 	movl   $0x0,-0x2020(%rbp)
  40749c:	00 00 00 
  40749f:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  4074a6:	48 8d 95 dc df ff ff 	lea    -0x2024(%rbp),%rdx
  4074ad:	48 89 d6             	mov    %rdx,%rsi
  4074b0:	48 89 c7             	mov    %rax,%rdi
  4074b3:	e8 a7 fe ff ff       	callq  40735f <skipcomment>
  4074b8:	85 c0                	test   %eax,%eax
  4074ba:	74 19                	je     4074d5 <luaL_loadfilex+0x106>
  4074bc:	8b 85 e0 df ff ff    	mov    -0x2020(%rbp),%eax
  4074c2:	8d 50 01             	lea    0x1(%rax),%edx
  4074c5:	89 95 e0 df ff ff    	mov    %edx,-0x2020(%rbp)
  4074cb:	48 98                	cltq   
  4074cd:	c6 84 05 f0 df ff ff 	movb   $0xa,-0x2010(%rbp,%rax,1)
  4074d4:	0a 
  4074d5:	b8 1b 00 00 00       	mov    $0x1b,%eax
  4074da:	0f be d0             	movsbl %al,%edx
  4074dd:	8b 85 dc df ff ff    	mov    -0x2024(%rbp),%eax
  4074e3:	39 c2                	cmp    %eax,%edx
  4074e5:	75 77                	jne    40755e <luaL_loadfilex+0x18f>
  4074e7:	c7 85 e0 df ff ff 00 	movl   $0x0,-0x2020(%rbp)
  4074ee:	00 00 00 
  4074f1:	48 83 bd c0 df ff ff 	cmpq   $0x0,-0x2040(%rbp)
  4074f8:	00 
  4074f9:	74 63                	je     40755e <luaL_loadfilex+0x18f>
  4074fb:	48 8b 95 e8 df ff ff 	mov    -0x2018(%rbp),%rdx
  407502:	48 8b 85 c0 df ff ff 	mov    -0x2040(%rbp),%rax
  407509:	be cb d0 43 00       	mov    $0x43d0cb,%esi
  40750e:	48 89 c7             	mov    %rax,%rdi
  407511:	e8 ba a3 ff ff       	callq  4018d0 <freopen64@plt>
  407516:	48 89 85 e8 df ff ff 	mov    %rax,-0x2018(%rbp)
  40751d:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  407524:	48 85 c0             	test   %rax,%rax
  407527:	75 1c                	jne    407545 <luaL_loadfilex+0x176>
  407529:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40752c:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407533:	be ce d0 43 00       	mov    $0x43d0ce,%esi
  407538:	48 89 c7             	mov    %rax,%rdi
  40753b:	e8 2c fd ff ff       	callq  40726c <errfile>
  407540:	e9 19 01 00 00       	jmpq   40765e <luaL_loadfilex+0x28f>
  407545:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  40754c:	48 8d 95 dc df ff ff 	lea    -0x2024(%rbp),%rdx
  407553:	48 89 d6             	mov    %rdx,%rsi
  407556:	48 89 c7             	mov    %rax,%rdi
  407559:	e8 01 fe ff ff       	callq  40735f <skipcomment>
  40755e:	8b 85 dc df ff ff    	mov    -0x2024(%rbp),%eax
  407564:	83 f8 ff             	cmp    $0xffffffff,%eax
  407567:	74 20                	je     407589 <luaL_loadfilex+0x1ba>
  407569:	8b 8d dc df ff ff    	mov    -0x2024(%rbp),%ecx
  40756f:	8b 85 e0 df ff ff    	mov    -0x2020(%rbp),%eax
  407575:	8d 50 01             	lea    0x1(%rax),%edx
  407578:	89 95 e0 df ff ff    	mov    %edx,-0x2020(%rbp)
  40757e:	89 ca                	mov    %ecx,%edx
  407580:	48 98                	cltq   
  407582:	88 94 05 f0 df ff ff 	mov    %dl,-0x2010(%rbp,%rax,1)
  407589:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407590:	ba 00 00 00 00       	mov    $0x0,%edx
  407595:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40759a:	48 89 c7             	mov    %rax,%rdi
  40759d:	e8 cb b3 ff ff       	callq  40296d <lua_tolstring>
  4075a2:	48 89 c6             	mov    %rax,%rsi
  4075a5:	48 8b 8d b8 df ff ff 	mov    -0x2048(%rbp),%rcx
  4075ac:	48 8d 95 e0 df ff ff 	lea    -0x2020(%rbp),%rdx
  4075b3:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  4075ba:	49 89 c8             	mov    %rcx,%r8
  4075bd:	48 89 f1             	mov    %rsi,%rcx
  4075c0:	be d9 71 40 00       	mov    $0x4071d9,%esi
  4075c5:	48 89 c7             	mov    %rax,%rdi
  4075c8:	e8 e0 d1 ff ff       	callq  4047ad <lua_load>
  4075cd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4075d0:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  4075d7:	48 89 c7             	mov    %rax,%rdi
  4075da:	e8 21 a5 ff ff       	callq  401b00 <ferror@plt>
  4075df:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4075e2:	48 83 bd c0 df ff ff 	cmpq   $0x0,-0x2040(%rbp)
  4075e9:	00 
  4075ea:	74 0f                	je     4075fb <luaL_loadfilex+0x22c>
  4075ec:	48 8b 85 e8 df ff ff 	mov    -0x2018(%rbp),%rax
  4075f3:	48 89 c7             	mov    %rax,%rdi
  4075f6:	e8 f5 a2 ff ff       	callq  4018f0 <fclose@plt>
  4075fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4075ff:	74 2d                	je     40762e <luaL_loadfilex+0x25f>
  407601:	8b 55 fc             	mov    -0x4(%rbp),%edx
  407604:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  40760b:	89 d6                	mov    %edx,%esi
  40760d:	48 89 c7             	mov    %rax,%rdi
  407610:	e8 6f a9 ff ff       	callq  401f84 <lua_settop>
  407615:	8b 55 fc             	mov    -0x4(%rbp),%edx
  407618:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  40761f:	be d5 d0 43 00       	mov    $0x43d0d5,%esi
  407624:	48 89 c7             	mov    %rax,%rdi
  407627:	e8 40 fc ff ff       	callq  40726c <errfile>
  40762c:	eb 30                	jmp    40765e <luaL_loadfilex+0x28f>
  40762e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  407631:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  407638:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40763d:	89 ce                	mov    %ecx,%esi
  40763f:	48 89 c7             	mov    %rax,%rdi
  407642:	e8 27 ab ff ff       	callq  40216e <lua_rotate>
  407647:	48 8b 85 c8 df ff ff 	mov    -0x2038(%rbp),%rax
  40764e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407653:	48 89 c7             	mov    %rax,%rdi
  407656:	e8 29 a9 ff ff       	callq  401f84 <lua_settop>
  40765b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40765e:	c9                   	leaveq 
  40765f:	c3                   	retq   

0000000000407660 <getS>:
  407660:	55                   	push   %rbp
  407661:	48 89 e5             	mov    %rsp,%rbp
  407664:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407668:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40766c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  407670:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407674:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40767c:	48 8b 40 08          	mov    0x8(%rax),%rax
  407680:	48 85 c0             	test   %rax,%rax
  407683:	75 07                	jne    40768c <getS+0x2c>
  407685:	b8 00 00 00 00       	mov    $0x0,%eax
  40768a:	eb 22                	jmp    4076ae <getS+0x4e>
  40768c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407690:	48 8b 50 08          	mov    0x8(%rax),%rdx
  407694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  407698:	48 89 10             	mov    %rdx,(%rax)
  40769b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40769f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4076a6:	00 
  4076a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4076ab:	48 8b 00             	mov    (%rax),%rax
  4076ae:	5d                   	pop    %rbp
  4076af:	c3                   	retq   

00000000004076b0 <luaL_loadbufferx>:
  4076b0:	55                   	push   %rbp
  4076b1:	48 89 e5             	mov    %rsp,%rbp
  4076b4:	48 83 ec 40          	sub    $0x40,%rsp
  4076b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4076bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4076c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4076c4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4076c8:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4076cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4076d0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4076d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4076d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4076dc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4076e0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4076e4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4076e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4076ec:	49 89 f0             	mov    %rsi,%r8
  4076ef:	be 60 76 40 00       	mov    $0x407660,%esi
  4076f4:	48 89 c7             	mov    %rax,%rdi
  4076f7:	e8 b1 d0 ff ff       	callq  4047ad <lua_load>
  4076fc:	c9                   	leaveq 
  4076fd:	c3                   	retq   

00000000004076fe <luaL_loadstring>:
  4076fe:	55                   	push   %rbp
  4076ff:	48 89 e5             	mov    %rsp,%rbp
  407702:	48 83 ec 10          	sub    $0x10,%rsp
  407706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40770a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40770e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407712:	48 89 c7             	mov    %rax,%rdi
  407715:	e8 56 a0 ff ff       	callq  401770 <strlen@plt>
  40771a:	48 89 c7             	mov    %rax,%rdi
  40771d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407721:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  407725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407729:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40772f:	48 89 d1             	mov    %rdx,%rcx
  407732:	48 89 fa             	mov    %rdi,%rdx
  407735:	48 89 c7             	mov    %rax,%rdi
  407738:	e8 73 ff ff ff       	callq  4076b0 <luaL_loadbufferx>
  40773d:	c9                   	leaveq 
  40773e:	c3                   	retq   

000000000040773f <luaL_getmetafield>:
  40773f:	55                   	push   %rbp
  407740:	48 89 e5             	mov    %rsp,%rbp
  407743:	48 83 ec 30          	sub    $0x30,%rsp
  407747:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40774b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40774e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  407752:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407755:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407759:	89 d6                	mov    %edx,%esi
  40775b:	48 89 c7             	mov    %rax,%rdi
  40775e:	e8 54 c1 ff ff       	callq  4038b7 <lua_getmetatable>
  407763:	85 c0                	test   %eax,%eax
  407765:	75 07                	jne    40776e <luaL_getmetafield+0x2f>
  407767:	b8 00 00 00 00       	mov    $0x0,%eax
  40776c:	eb 6a                	jmp    4077d8 <luaL_getmetafield+0x99>
  40776e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407772:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407776:	48 89 d6             	mov    %rdx,%rsi
  407779:	48 89 c7             	mov    %rax,%rdi
  40777c:	e8 8d b6 ff ff       	callq  402e0e <lua_pushstring>
  407781:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407785:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40778a:	48 89 c7             	mov    %rax,%rdi
  40778d:	e8 5e bf ff ff       	callq  4036f0 <lua_rawget>
  407792:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407795:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  407799:	75 13                	jne    4077ae <luaL_getmetafield+0x6f>
  40779b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40779f:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  4077a4:	48 89 c7             	mov    %rax,%rdi
  4077a7:	e8 d8 a7 ff ff       	callq  401f84 <lua_settop>
  4077ac:	eb 27                	jmp    4077d5 <luaL_getmetafield+0x96>
  4077ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4077b2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4077b7:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4077bc:	48 89 c7             	mov    %rax,%rdi
  4077bf:	e8 aa a9 ff ff       	callq  40216e <lua_rotate>
  4077c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4077c8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4077cd:	48 89 c7             	mov    %rax,%rdi
  4077d0:	e8 af a7 ff ff       	callq  401f84 <lua_settop>
  4077d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4077d8:	c9                   	leaveq 
  4077d9:	c3                   	retq   

00000000004077da <luaL_callmeta>:
  4077da:	55                   	push   %rbp
  4077db:	48 89 e5             	mov    %rsp,%rbp
  4077de:	48 83 ec 20          	sub    $0x20,%rsp
  4077e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4077e6:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4077e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4077ed:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4077f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4077f4:	89 d6                	mov    %edx,%esi
  4077f6:	48 89 c7             	mov    %rax,%rdi
  4077f9:	e8 16 a7 ff ff       	callq  401f14 <lua_absindex>
  4077fe:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407801:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  407805:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40780c:	89 ce                	mov    %ecx,%esi
  40780e:	48 89 c7             	mov    %rax,%rdi
  407811:	e8 29 ff ff ff       	callq  40773f <luaL_getmetafield>
  407816:	85 c0                	test   %eax,%eax
  407818:	75 07                	jne    407821 <luaL_callmeta+0x47>
  40781a:	b8 00 00 00 00       	mov    $0x0,%eax
  40781f:	eb 37                	jmp    407858 <luaL_callmeta+0x7e>
  407821:	8b 55 f4             	mov    -0xc(%rbp),%edx
  407824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407828:	89 d6                	mov    %edx,%esi
  40782a:	48 89 c7             	mov    %rax,%rdi
  40782d:	e8 dd aa ff ff       	callq  40230f <lua_pushvalue>
  407832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407836:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40783c:	b9 00 00 00 00       	mov    $0x0,%ecx
  407841:	ba 01 00 00 00       	mov    $0x1,%edx
  407846:	be 01 00 00 00       	mov    $0x1,%esi
  40784b:	48 89 c7             	mov    %rax,%rdi
  40784e:	e8 5b cc ff ff       	callq  4044ae <lua_callk>
  407853:	b8 01 00 00 00       	mov    $0x1,%eax
  407858:	c9                   	leaveq 
  407859:	c3                   	retq   

000000000040785a <luaL_len>:
  40785a:	55                   	push   %rbp
  40785b:	48 89 e5             	mov    %rsp,%rbp
  40785e:	48 83 ec 20          	sub    $0x20,%rsp
  407862:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407866:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  407869:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40786c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407870:	89 d6                	mov    %edx,%esi
  407872:	48 89 c7             	mov    %rax,%rdi
  407875:	e8 64 d9 ff ff       	callq  4051de <lua_len>
  40787a:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  40787e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407882:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407887:	48 89 c7             	mov    %rax,%rdi
  40788a:	e8 06 b0 ff ff       	callq  402895 <lua_tointegerx>
  40788f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407893:	8b 45 f4             	mov    -0xc(%rbp),%eax
  407896:	85 c0                	test   %eax,%eax
  407898:	0f 94 c0             	sete   %al
  40789b:	0f b6 c0             	movzbl %al,%eax
  40789e:	48 85 c0             	test   %rax,%rax
  4078a1:	74 16                	je     4078b9 <luaL_len+0x5f>
  4078a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078a7:	be e0 d0 43 00       	mov    $0x43d0e0,%esi
  4078ac:	48 89 c7             	mov    %rax,%rdi
  4078af:	b8 00 00 00 00       	mov    $0x0,%eax
  4078b4:	e8 37 e9 ff ff       	callq  4061f0 <luaL_error>
  4078b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078bd:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4078c2:	48 89 c7             	mov    %rax,%rdi
  4078c5:	e8 ba a6 ff ff       	callq  401f84 <lua_settop>
  4078ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4078ce:	c9                   	leaveq 
  4078cf:	c3                   	retq   

00000000004078d0 <luaL_tolstring>:
  4078d0:	55                   	push   %rbp
  4078d1:	48 89 e5             	mov    %rsp,%rbp
  4078d4:	48 83 ec 30          	sub    $0x30,%rsp
  4078d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4078dc:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4078df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4078e3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4078e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078ea:	89 d6                	mov    %edx,%esi
  4078ec:	48 89 c7             	mov    %rax,%rdi
  4078ef:	e8 20 a6 ff ff       	callq  401f14 <lua_absindex>
  4078f4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4078f7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4078fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078fe:	ba 00 d1 43 00       	mov    $0x43d100,%edx
  407903:	89 ce                	mov    %ecx,%esi
  407905:	48 89 c7             	mov    %rax,%rdi
  407908:	e8 cd fe ff ff       	callq  4077da <luaL_callmeta>
  40790d:	85 c0                	test   %eax,%eax
  40790f:	74 34                	je     407945 <luaL_tolstring+0x75>
  407911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407915:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40791a:	48 89 c7             	mov    %rax,%rdi
  40791d:	e8 a6 ab ff ff       	callq  4024c8 <lua_isstring>
  407922:	85 c0                	test   %eax,%eax
  407924:	0f 85 e9 01 00 00    	jne    407b13 <luaL_tolstring+0x243>
  40792a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40792e:	be 10 d1 43 00       	mov    $0x43d110,%esi
  407933:	48 89 c7             	mov    %rax,%rdi
  407936:	b8 00 00 00 00       	mov    $0x0,%eax
  40793b:	e8 b0 e8 ff ff       	callq  4061f0 <luaL_error>
  407940:	e9 ce 01 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  407945:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40794c:	89 d6                	mov    %edx,%esi
  40794e:	48 89 c7             	mov    %rax,%rdi
  407951:	e8 1d aa ff ff       	callq  402373 <lua_type>
  407956:	83 f8 01             	cmp    $0x1,%eax
  407959:	0f 84 b1 00 00 00    	je     407a10 <luaL_tolstring+0x140>
  40795f:	83 f8 01             	cmp    $0x1,%eax
  407962:	7f 0d                	jg     407971 <luaL_tolstring+0xa1>
  407964:	85 c0                	test   %eax,%eax
  407966:	0f 84 d9 00 00 00    	je     407a45 <luaL_tolstring+0x175>
  40796c:	e9 ea 00 00 00       	jmpq   407a5b <luaL_tolstring+0x18b>
  407971:	83 f8 03             	cmp    $0x3,%eax
  407974:	74 0a                	je     407980 <luaL_tolstring+0xb0>
  407976:	83 f8 04             	cmp    $0x4,%eax
  407979:	74 7f                	je     4079fa <luaL_tolstring+0x12a>
  40797b:	e9 db 00 00 00       	jmpq   407a5b <luaL_tolstring+0x18b>
  407980:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407987:	89 d6                	mov    %edx,%esi
  407989:	48 89 c7             	mov    %rax,%rdi
  40798c:	e8 a8 aa ff ff       	callq  402439 <lua_isinteger>
  407991:	85 c0                	test   %eax,%eax
  407993:	74 34                	je     4079c9 <luaL_tolstring+0xf9>
  407995:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  407998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40799c:	ba 00 00 00 00       	mov    $0x0,%edx
  4079a1:	89 ce                	mov    %ecx,%esi
  4079a3:	48 89 c7             	mov    %rax,%rdi
  4079a6:	e8 ea ae ff ff       	callq  402895 <lua_tointegerx>
  4079ab:	48 89 c2             	mov    %rax,%rdx
  4079ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4079b2:	be 32 d1 43 00       	mov    $0x43d132,%esi
  4079b7:	48 89 c7             	mov    %rax,%rdi
  4079ba:	b8 00 00 00 00       	mov    $0x0,%eax
  4079bf:	e8 4e b5 ff ff       	callq  402f12 <lua_pushfstring>
  4079c4:	e9 4a 01 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  4079c9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4079cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4079d0:	ba 00 00 00 00       	mov    $0x0,%edx
  4079d5:	89 ce                	mov    %ecx,%esi
  4079d7:	48 89 c7             	mov    %rax,%rdi
  4079da:	e8 38 ae ff ff       	callq  402817 <lua_tonumberx>
  4079df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4079e3:	be 35 d1 43 00       	mov    $0x43d135,%esi
  4079e8:	48 89 c7             	mov    %rax,%rdi
  4079eb:	b8 01 00 00 00       	mov    $0x1,%eax
  4079f0:	e8 1d b5 ff ff       	callq  402f12 <lua_pushfstring>
  4079f5:	e9 19 01 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  4079fa:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4079fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a01:	89 d6                	mov    %edx,%esi
  407a03:	48 89 c7             	mov    %rax,%rdi
  407a06:	e8 04 a9 ff ff       	callq  40230f <lua_pushvalue>
  407a0b:	e9 03 01 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  407a10:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407a13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a17:	89 d6                	mov    %edx,%esi
  407a19:	48 89 c7             	mov    %rax,%rdi
  407a1c:	e8 fc ae ff ff       	callq  40291d <lua_toboolean>
  407a21:	85 c0                	test   %eax,%eax
  407a23:	74 07                	je     407a2c <luaL_tolstring+0x15c>
  407a25:	ba 38 d1 43 00       	mov    $0x43d138,%edx
  407a2a:	eb 05                	jmp    407a31 <luaL_tolstring+0x161>
  407a2c:	ba 3d d1 43 00       	mov    $0x43d13d,%edx
  407a31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a35:	48 89 d6             	mov    %rdx,%rsi
  407a38:	48 89 c7             	mov    %rax,%rdi
  407a3b:	e8 ce b3 ff ff       	callq  402e0e <lua_pushstring>
  407a40:	e9 ce 00 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  407a45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a49:	be 43 d1 43 00       	mov    $0x43d143,%esi
  407a4e:	48 89 c7             	mov    %rax,%rdi
  407a51:	e8 b8 b3 ff ff       	callq  402e0e <lua_pushstring>
  407a56:	e9 b8 00 00 00       	jmpq   407b13 <luaL_tolstring+0x243>
  407a5b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  407a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a62:	ba 7c cf 43 00       	mov    $0x43cf7c,%edx
  407a67:	89 ce                	mov    %ecx,%esi
  407a69:	48 89 c7             	mov    %rax,%rdi
  407a6c:	e8 ce fc ff ff       	callq  40773f <luaL_getmetafield>
  407a71:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407a74:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
  407a78:	75 18                	jne    407a92 <luaL_tolstring+0x1c2>
  407a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a7e:	ba 00 00 00 00       	mov    $0x0,%edx
  407a83:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407a88:	48 89 c7             	mov    %rax,%rdi
  407a8b:	e8 dd ae ff ff       	callq  40296d <lua_tolstring>
  407a90:	eb 21                	jmp    407ab3 <luaL_tolstring+0x1e3>
  407a92:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407a95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a99:	89 d6                	mov    %edx,%esi
  407a9b:	48 89 c7             	mov    %rax,%rdi
  407a9e:	e8 d0 a8 ff ff       	callq  402373 <lua_type>
  407aa3:	89 c2                	mov    %eax,%edx
  407aa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407aa9:	89 d6                	mov    %edx,%esi
  407aab:	48 89 c7             	mov    %rax,%rdi
  407aae:	e8 1f a9 ff ff       	callq  4023d2 <lua_typename>
  407ab3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  407ab7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407aba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407abe:	89 d6                	mov    %edx,%esi
  407ac0:	48 89 c7             	mov    %rax,%rdi
  407ac3:	e8 61 b1 ff ff       	callq  402c29 <lua_topointer>
  407ac8:	48 89 c1             	mov    %rax,%rcx
  407acb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407ad3:	be 47 d1 43 00       	mov    $0x43d147,%esi
  407ad8:	48 89 c7             	mov    %rax,%rdi
  407adb:	b8 00 00 00 00       	mov    $0x0,%eax
  407ae0:	e8 2d b4 ff ff       	callq  402f12 <lua_pushfstring>
  407ae5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  407ae9:	74 27                	je     407b12 <luaL_tolstring+0x242>
  407aeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407aef:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  407af4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407af9:	48 89 c7             	mov    %rax,%rdi
  407afc:	e8 6d a6 ff ff       	callq  40216e <lua_rotate>
  407b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b05:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407b0a:	48 89 c7             	mov    %rax,%rdi
  407b0d:	e8 72 a4 ff ff       	callq  401f84 <lua_settop>
  407b12:	90                   	nop
  407b13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407b17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b1b:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407b20:	48 89 c7             	mov    %rax,%rdi
  407b23:	e8 45 ae ff ff       	callq  40296d <lua_tolstring>
  407b28:	c9                   	leaveq 
  407b29:	c3                   	retq   

0000000000407b2a <luaL_setfuncs>:
  407b2a:	55                   	push   %rbp
  407b2b:	48 89 e5             	mov    %rsp,%rbp
  407b2e:	48 83 ec 30          	sub    $0x30,%rsp
  407b32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407b36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  407b3a:	89 55 dc             	mov    %edx,-0x24(%rbp)
  407b3d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  407b40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b44:	ba 4e d1 43 00       	mov    $0x43d14e,%edx
  407b49:	89 ce                	mov    %ecx,%esi
  407b4b:	48 89 c7             	mov    %rax,%rdi
  407b4e:	e8 7d eb ff ff       	callq  4066d0 <luaL_checkstack>
  407b53:	e9 88 00 00 00       	jmpq   407be0 <luaL_setfuncs+0xb6>
  407b58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407b5c:	48 8b 40 08          	mov    0x8(%rax),%rax
  407b60:	48 85 c0             	test   %rax,%rax
  407b63:	75 13                	jne    407b78 <luaL_setfuncs+0x4e>
  407b65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b69:	be 00 00 00 00       	mov    $0x0,%esi
  407b6e:	48 89 c7             	mov    %rax,%rdi
  407b71:	e8 c2 b5 ff ff       	callq  403138 <lua_pushboolean>
  407b76:	eb 44                	jmp    407bbc <luaL_setfuncs+0x92>
  407b78:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  407b7f:	eb 19                	jmp    407b9a <luaL_setfuncs+0x70>
  407b81:	8b 45 dc             	mov    -0x24(%rbp),%eax
  407b84:	f7 d8                	neg    %eax
  407b86:	89 c2                	mov    %eax,%edx
  407b88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b8c:	89 d6                	mov    %edx,%esi
  407b8e:	48 89 c7             	mov    %rax,%rdi
  407b91:	e8 79 a7 ff ff       	callq  40230f <lua_pushvalue>
  407b96:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  407b9a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  407b9d:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  407ba0:	7c df                	jl     407b81 <luaL_setfuncs+0x57>
  407ba2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407ba6:	48 8b 48 08          	mov    0x8(%rax),%rcx
  407baa:	8b 55 dc             	mov    -0x24(%rbp),%edx
  407bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bb1:	48 89 ce             	mov    %rcx,%rsi
  407bb4:	48 89 c7             	mov    %rax,%rdi
  407bb7:	e8 2f b4 ff ff       	callq  402feb <lua_pushcclosure>
  407bbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407bc0:	48 8b 10             	mov    (%rax),%rdx
  407bc3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
  407bc8:	2b 45 dc             	sub    -0x24(%rbp),%eax
  407bcb:	89 c1                	mov    %eax,%ecx
  407bcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bd1:	89 ce                	mov    %ecx,%esi
  407bd3:	48 89 c7             	mov    %rax,%rdi
  407bd6:	e8 f7 c1 ff ff       	callq  403dd2 <lua_setfield>
  407bdb:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
  407be0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407be4:	48 8b 00             	mov    (%rax),%rax
  407be7:	48 85 c0             	test   %rax,%rax
  407bea:	0f 85 68 ff ff ff    	jne    407b58 <luaL_setfuncs+0x2e>
  407bf0:	8b 45 dc             	mov    -0x24(%rbp),%eax
  407bf3:	f7 d0                	not    %eax
  407bf5:	89 c2                	mov    %eax,%edx
  407bf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bfb:	89 d6                	mov    %edx,%esi
  407bfd:	48 89 c7             	mov    %rax,%rdi
  407c00:	e8 7f a3 ff ff       	callq  401f84 <lua_settop>
  407c05:	90                   	nop
  407c06:	c9                   	leaveq 
  407c07:	c3                   	retq   

0000000000407c08 <luaL_getsubtable>:
  407c08:	55                   	push   %rbp
  407c09:	48 89 e5             	mov    %rsp,%rbp
  407c0c:	48 83 ec 20          	sub    $0x20,%rsp
  407c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407c14:	89 75 f4             	mov    %esi,-0xc(%rbp)
  407c17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  407c1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  407c1f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c26:	89 ce                	mov    %ecx,%esi
  407c28:	48 89 c7             	mov    %rax,%rdi
  407c2b:	e8 85 b8 ff ff       	callq  4034b5 <lua_getfield>
  407c30:	83 f8 05             	cmp    $0x5,%eax
  407c33:	75 07                	jne    407c3c <luaL_getsubtable+0x34>
  407c35:	b8 01 00 00 00       	mov    $0x1,%eax
  407c3a:	eb 66                	jmp    407ca2 <luaL_getsubtable+0x9a>
  407c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c40:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407c45:	48 89 c7             	mov    %rax,%rdi
  407c48:	e8 37 a3 ff ff       	callq  401f84 <lua_settop>
  407c4d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  407c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c54:	89 d6                	mov    %edx,%esi
  407c56:	48 89 c7             	mov    %rax,%rdi
  407c59:	e8 b6 a2 ff ff       	callq  401f14 <lua_absindex>
  407c5e:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c65:	ba 00 00 00 00       	mov    $0x0,%edx
  407c6a:	be 00 00 00 00       	mov    $0x0,%esi
  407c6f:	48 89 c7             	mov    %rax,%rdi
  407c72:	e8 a1 bb ff ff       	callq  403818 <lua_createtable>
  407c77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c7b:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407c80:	48 89 c7             	mov    %rax,%rdi
  407c83:	e8 87 a6 ff ff       	callq  40230f <lua_pushvalue>
  407c88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  407c8c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407c93:	89 ce                	mov    %ecx,%esi
  407c95:	48 89 c7             	mov    %rax,%rdi
  407c98:	e8 35 c1 ff ff       	callq  403dd2 <lua_setfield>
  407c9d:	b8 00 00 00 00       	mov    $0x0,%eax
  407ca2:	c9                   	leaveq 
  407ca3:	c3                   	retq   

0000000000407ca4 <luaL_requiref>:
  407ca4:	55                   	push   %rbp
  407ca5:	48 89 e5             	mov    %rsp,%rbp
  407ca8:	48 83 ec 20          	sub    $0x20,%rsp
  407cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407cb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407cb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  407cb8:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  407cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407cbf:	ba 84 ce 43 00       	mov    $0x43ce84,%edx
  407cc4:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  407cc9:	48 89 c7             	mov    %rax,%rdi
  407ccc:	e8 37 ff ff ff       	callq  407c08 <luaL_getsubtable>
  407cd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407cd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407cd9:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407cde:	48 89 c7             	mov    %rax,%rdi
  407ce1:	e8 cf b7 ff ff       	callq  4034b5 <lua_getfield>
  407ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407cea:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407cef:	48 89 c7             	mov    %rax,%rdi
  407cf2:	e8 26 ac ff ff       	callq  40291d <lua_toboolean>
  407cf7:	85 c0                	test   %eax,%eax
  407cf9:	0f 85 83 00 00 00    	jne    407d82 <luaL_requiref+0xde>
  407cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d03:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407d08:	48 89 c7             	mov    %rax,%rdi
  407d0b:	e8 74 a2 ff ff       	callq  401f84 <lua_settop>
  407d10:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  407d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d18:	ba 00 00 00 00       	mov    $0x0,%edx
  407d1d:	48 89 ce             	mov    %rcx,%rsi
  407d20:	48 89 c7             	mov    %rax,%rdi
  407d23:	e8 c3 b2 ff ff       	callq  402feb <lua_pushcclosure>
  407d28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d30:	48 89 d6             	mov    %rdx,%rsi
  407d33:	48 89 c7             	mov    %rax,%rdi
  407d36:	e8 d3 b0 ff ff       	callq  402e0e <lua_pushstring>
  407d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d3f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  407d45:	b9 00 00 00 00       	mov    $0x0,%ecx
  407d4a:	ba 01 00 00 00       	mov    $0x1,%edx
  407d4f:	be 01 00 00 00       	mov    $0x1,%esi
  407d54:	48 89 c7             	mov    %rax,%rdi
  407d57:	e8 52 c7 ff ff       	callq  4044ae <lua_callk>
  407d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d60:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407d65:	48 89 c7             	mov    %rax,%rdi
  407d68:	e8 a2 a5 ff ff       	callq  40230f <lua_pushvalue>
  407d6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d75:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  407d7a:	48 89 c7             	mov    %rax,%rdi
  407d7d:	e8 50 c0 ff ff       	callq  403dd2 <lua_setfield>
  407d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d86:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  407d8b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407d90:	48 89 c7             	mov    %rax,%rdi
  407d93:	e8 d6 a3 ff ff       	callq  40216e <lua_rotate>
  407d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407d9c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  407da1:	48 89 c7             	mov    %rax,%rdi
  407da4:	e8 db a1 ff ff       	callq  401f84 <lua_settop>
  407da9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  407dad:	74 24                	je     407dd3 <luaL_requiref+0x12f>
  407daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407db3:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407db8:	48 89 c7             	mov    %rax,%rdi
  407dbb:	e8 4f a5 ff ff       	callq  40230f <lua_pushvalue>
  407dc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407dc8:	48 89 d6             	mov    %rdx,%rsi
  407dcb:	48 89 c7             	mov    %rax,%rdi
  407dce:	e8 52 be ff ff       	callq  403c25 <lua_setglobal>
  407dd3:	90                   	nop
  407dd4:	c9                   	leaveq 
  407dd5:	c3                   	retq   

0000000000407dd6 <luaL_addgsub>:
  407dd6:	55                   	push   %rbp
  407dd7:	48 89 e5             	mov    %rsp,%rbp
  407dda:	48 83 ec 30          	sub    $0x30,%rsp
  407dde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407de2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  407de6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  407dea:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  407dee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  407df2:	48 89 c7             	mov    %rax,%rdi
  407df5:	e8 76 99 ff ff       	callq  401770 <strlen@plt>
  407dfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407dfe:	eb 40                	jmp    407e40 <luaL_addgsub+0x6a>
  407e00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407e04:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  407e08:	48 89 c2             	mov    %rax,%rdx
  407e0b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407e0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407e13:	48 89 ce             	mov    %rcx,%rsi
  407e16:	48 89 c7             	mov    %rax,%rdi
  407e19:	e8 84 ef ff ff       	callq  406da2 <luaL_addlstring>
  407e1e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  407e22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407e26:	48 89 d6             	mov    %rdx,%rsi
  407e29:	48 89 c7             	mov    %rax,%rdi
  407e2c:	e8 d9 ef ff ff       	callq  406e0a <luaL_addstring>
  407e31:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  407e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407e39:	48 01 d0             	add    %rdx,%rax
  407e3c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  407e40:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407e44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407e48:	48 89 d6             	mov    %rdx,%rsi
  407e4b:	48 89 c7             	mov    %rax,%rdi
  407e4e:	e8 9d 98 ff ff       	callq  4016f0 <strstr@plt>
  407e53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  407e57:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  407e5c:	75 a2                	jne    407e00 <luaL_addgsub+0x2a>
  407e5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  407e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407e66:	48 89 d6             	mov    %rdx,%rsi
  407e69:	48 89 c7             	mov    %rax,%rdi
  407e6c:	e8 99 ef ff ff       	callq  406e0a <luaL_addstring>
  407e71:	90                   	nop
  407e72:	c9                   	leaveq 
  407e73:	c3                   	retq   

0000000000407e74 <luaL_gsub>:
  407e74:	55                   	push   %rbp
  407e75:	48 89 e5             	mov    %rsp,%rbp
  407e78:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  407e7f:	48 89 bd d8 fb ff ff 	mov    %rdi,-0x428(%rbp)
  407e86:	48 89 b5 d0 fb ff ff 	mov    %rsi,-0x430(%rbp)
  407e8d:	48 89 95 c8 fb ff ff 	mov    %rdx,-0x438(%rbp)
  407e94:	48 89 8d c0 fb ff ff 	mov    %rcx,-0x440(%rbp)
  407e9b:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
  407ea2:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  407ea9:	48 89 d6             	mov    %rdx,%rsi
  407eac:	48 89 c7             	mov    %rax,%rdi
  407eaf:	e8 d5 f0 ff ff       	callq  406f89 <luaL_buffinit>
  407eb4:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  407ebb:	48 8b 95 c8 fb ff ff 	mov    -0x438(%rbp),%rdx
  407ec2:	48 8b b5 d0 fb ff ff 	mov    -0x430(%rbp),%rsi
  407ec9:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  407ed0:	48 89 c7             	mov    %rax,%rdi
  407ed3:	e8 fe fe ff ff       	callq  407dd6 <luaL_addgsub>
  407ed8:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  407edf:	48 89 c7             	mov    %rax,%rdi
  407ee2:	e8 58 ef ff ff       	callq  406e3f <luaL_pushresult>
  407ee7:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  407eee:	ba 00 00 00 00       	mov    $0x0,%edx
  407ef3:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407ef8:	48 89 c7             	mov    %rax,%rdi
  407efb:	e8 6d aa ff ff       	callq  40296d <lua_tolstring>
  407f00:	c9                   	leaveq 
  407f01:	c3                   	retq   

0000000000407f02 <l_alloc>:
  407f02:	55                   	push   %rbp
  407f03:	48 89 e5             	mov    %rsp,%rbp
  407f06:	48 83 ec 20          	sub    $0x20,%rsp
  407f0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407f0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407f12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  407f16:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  407f1a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  407f1f:	75 13                	jne    407f34 <l_alloc+0x32>
  407f21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407f25:	48 89 c7             	mov    %rax,%rdi
  407f28:	e8 33 9a ff ff       	callq  401960 <free@plt>
  407f2d:	b8 00 00 00 00       	mov    $0x0,%eax
  407f32:	eb 13                	jmp    407f47 <l_alloc+0x45>
  407f34:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  407f38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407f3c:	48 89 d6             	mov    %rdx,%rsi
  407f3f:	48 89 c7             	mov    %rax,%rdi
  407f42:	e8 19 9b ff ff       	callq  401a60 <realloc@plt>
  407f47:	c9                   	leaveq 
  407f48:	c3                   	retq   

0000000000407f49 <panic>:
  407f49:	55                   	push   %rbp
  407f4a:	48 89 e5             	mov    %rsp,%rbp
  407f4d:	48 83 ec 20          	sub    $0x20,%rsp
  407f51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407f55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f59:	ba 00 00 00 00       	mov    $0x0,%edx
  407f5e:	be ff ff ff ff       	mov    $0xffffffff,%esi
  407f63:	48 89 c7             	mov    %rax,%rdi
  407f66:	e8 02 aa ff ff       	callq  40296d <lua_tolstring>
  407f6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407f6f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  407f74:	75 08                	jne    407f7e <panic+0x35>
  407f76:	48 c7 45 f8 60 d1 43 	movq   $0x43d160,-0x8(%rbp)
  407f7d:	00 
  407f7e:	48 8b 05 3b 73 24 00 	mov    0x24733b(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  407f85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  407f89:	be 80 d1 43 00       	mov    $0x43d180,%esi
  407f8e:	48 89 c7             	mov    %rax,%rdi
  407f91:	b8 00 00 00 00       	mov    $0x0,%eax
  407f96:	e8 35 9a ff ff       	callq  4019d0 <fprintf@plt>
  407f9b:	48 8b 05 1e 73 24 00 	mov    0x24731e(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  407fa2:	48 89 c7             	mov    %rax,%rdi
  407fa5:	e8 a6 99 ff ff       	callq  401950 <fflush@plt>
  407faa:	b8 00 00 00 00       	mov    $0x0,%eax
  407faf:	c9                   	leaveq 
  407fb0:	c3                   	retq   

0000000000407fb1 <checkcontrol>:
  407fb1:	55                   	push   %rbp
  407fb2:	48 89 e5             	mov    %rsp,%rbp
  407fb5:	48 83 ec 20          	sub    $0x20,%rsp
  407fb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407fbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407fc1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  407fc4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  407fc8:	75 13                	jne    407fdd <checkcontrol+0x2c>
  407fca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407fce:	48 8d 50 01          	lea    0x1(%rax),%rdx
  407fd2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  407fd6:	0f b6 00             	movzbl (%rax),%eax
  407fd9:	3c 40                	cmp    $0x40,%al
  407fdb:	74 07                	je     407fe4 <checkcontrol+0x33>
  407fdd:	b8 00 00 00 00       	mov    $0x0,%eax
  407fe2:	eb 5b                	jmp    40803f <checkcontrol+0x8e>
  407fe4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407fe8:	be b2 d1 43 00       	mov    $0x43d1b2,%esi
  407fed:	48 89 c7             	mov    %rax,%rdi
  407ff0:	e8 cb 99 ff ff       	callq  4019c0 <strcmp@plt>
  407ff5:	85 c0                	test   %eax,%eax
  407ff7:	75 17                	jne    408010 <checkcontrol+0x5f>
  407ff9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  407ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408001:	be 41 80 40 00       	mov    $0x408041,%esi
  408006:	48 89 c7             	mov    %rax,%rdi
  408009:	e8 93 d2 ff ff       	callq  4052a1 <lua_setwarnf>
  40800e:	eb 2a                	jmp    40803a <checkcontrol+0x89>
  408010:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408014:	be b6 d1 43 00       	mov    $0x43d1b6,%esi
  408019:	48 89 c7             	mov    %rax,%rdi
  40801c:	e8 9f 99 ff ff       	callq  4019c0 <strcmp@plt>
  408021:	85 c0                	test   %eax,%eax
  408023:	75 15                	jne    40803a <checkcontrol+0x89>
  408025:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  408029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40802d:	be 05 81 40 00       	mov    $0x408105,%esi
  408032:	48 89 c7             	mov    %rax,%rdi
  408035:	e8 67 d2 ff ff       	callq  4052a1 <lua_setwarnf>
  40803a:	b8 01 00 00 00       	mov    $0x1,%eax
  40803f:	c9                   	leaveq 
  408040:	c3                   	retq   

0000000000408041 <warnfoff>:
  408041:	55                   	push   %rbp
  408042:	48 89 e5             	mov    %rsp,%rbp
  408045:	48 83 ec 20          	sub    $0x20,%rsp
  408049:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40804d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  408051:	89 55 ec             	mov    %edx,-0x14(%rbp)
  408054:	8b 55 ec             	mov    -0x14(%rbp),%edx
  408057:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40805b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40805f:	48 89 ce             	mov    %rcx,%rsi
  408062:	48 89 c7             	mov    %rax,%rdi
  408065:	e8 47 ff ff ff       	callq  407fb1 <checkcontrol>
  40806a:	90                   	nop
  40806b:	c9                   	leaveq 
  40806c:	c3                   	retq   

000000000040806d <warnfcont>:
  40806d:	55                   	push   %rbp
  40806e:	48 89 e5             	mov    %rsp,%rbp
  408071:	48 83 ec 30          	sub    $0x30,%rsp
  408075:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408079:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40807d:	89 55 dc             	mov    %edx,-0x24(%rbp)
  408080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408084:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408088:	48 8b 15 31 72 24 00 	mov    0x247231(%rip),%rdx        # 64f2c0 <stderr@@GLIBC_2.2.5>
  40808f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408093:	48 89 d6             	mov    %rdx,%rsi
  408096:	48 89 c7             	mov    %rax,%rdi
  408099:	e8 a2 98 ff ff       	callq  401940 <fputs@plt>
  40809e:	48 8b 05 1b 72 24 00 	mov    0x24721b(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  4080a5:	48 89 c7             	mov    %rax,%rdi
  4080a8:	e8 a3 98 ff ff       	callq  401950 <fflush@plt>
  4080ad:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4080b1:	74 17                	je     4080ca <warnfcont+0x5d>
  4080b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4080b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4080bb:	be 6d 80 40 00       	mov    $0x40806d,%esi
  4080c0:	48 89 c7             	mov    %rax,%rdi
  4080c3:	e8 d9 d1 ff ff       	callq  4052a1 <lua_setwarnf>
  4080c8:	eb 38                	jmp    408102 <warnfcont+0x95>
  4080ca:	48 8b 05 ef 71 24 00 	mov    0x2471ef(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  4080d1:	48 89 c6             	mov    %rax,%rsi
  4080d4:	bf 0a 00 00 00       	mov    $0xa,%edi
  4080d9:	e8 b2 98 ff ff       	callq  401990 <fputc@plt>
  4080de:	48 8b 05 db 71 24 00 	mov    0x2471db(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  4080e5:	48 89 c7             	mov    %rax,%rdi
  4080e8:	e8 63 98 ff ff       	callq  401950 <fflush@plt>
  4080ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4080f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4080f5:	be 05 81 40 00       	mov    $0x408105,%esi
  4080fa:	48 89 c7             	mov    %rax,%rdi
  4080fd:	e8 9f d1 ff ff       	callq  4052a1 <lua_setwarnf>
  408102:	90                   	nop
  408103:	c9                   	leaveq 
  408104:	c3                   	retq   

0000000000408105 <warnfon>:
  408105:	55                   	push   %rbp
  408106:	48 89 e5             	mov    %rsp,%rbp
  408109:	48 83 ec 20          	sub    $0x20,%rsp
  40810d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408111:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  408115:	89 55 ec             	mov    %edx,-0x14(%rbp)
  408118:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40811b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40811f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408123:	48 89 ce             	mov    %rcx,%rsi
  408126:	48 89 c7             	mov    %rax,%rdi
  408129:	e8 83 fe ff ff       	callq  407fb1 <checkcontrol>
  40812e:	85 c0                	test   %eax,%eax
  408130:	75 45                	jne    408177 <warnfon+0x72>
  408132:	48 8b 05 87 71 24 00 	mov    0x247187(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  408139:	48 89 c1             	mov    %rax,%rcx
  40813c:	ba 0d 00 00 00       	mov    $0xd,%edx
  408141:	be 01 00 00 00       	mov    $0x1,%esi
  408146:	bf b9 d1 43 00       	mov    $0x43d1b9,%edi
  40814b:	e8 d0 99 ff ff       	callq  401b20 <fwrite@plt>
  408150:	48 8b 05 69 71 24 00 	mov    0x247169(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  408157:	48 89 c7             	mov    %rax,%rdi
  40815a:	e8 f1 97 ff ff       	callq  401950 <fflush@plt>
  40815f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  408162:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  408166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40816a:	48 89 ce             	mov    %rcx,%rsi
  40816d:	48 89 c7             	mov    %rax,%rdi
  408170:	e8 f8 fe ff ff       	callq  40806d <warnfcont>
  408175:	eb 01                	jmp    408178 <warnfon+0x73>
  408177:	90                   	nop
  408178:	c9                   	leaveq 
  408179:	c3                   	retq   

000000000040817a <luaL_newstate>:
  40817a:	55                   	push   %rbp
  40817b:	48 89 e5             	mov    %rsp,%rbp
  40817e:	48 83 ec 10          	sub    $0x10,%rsp
  408182:	be 00 00 00 00       	mov    $0x0,%esi
  408187:	bf 02 7f 40 00       	mov    $0x407f02,%edi
  40818c:	e8 eb e1 01 00       	callq  42637c <lua_newstate>
  408191:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408195:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40819a:	0f 95 c0             	setne  %al
  40819d:	0f b6 c0             	movzbl %al,%eax
  4081a0:	48 85 c0             	test   %rax,%rax
  4081a3:	74 26                	je     4081cb <luaL_newstate+0x51>
  4081a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4081a9:	be 49 7f 40 00       	mov    $0x407f49,%esi
  4081ae:	48 89 c7             	mov    %rax,%rdi
  4081b1:	e8 14 9d ff ff       	callq  401eca <lua_atpanic>
  4081b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4081ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4081be:	be 41 80 40 00       	mov    $0x408041,%esi
  4081c3:	48 89 c7             	mov    %rax,%rdi
  4081c6:	e8 d6 d0 ff ff       	callq  4052a1 <lua_setwarnf>
  4081cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4081cf:	c9                   	leaveq 
  4081d0:	c3                   	retq   

00000000004081d1 <luaL_checkversion_>:
  4081d1:	55                   	push   %rbp
  4081d2:	48 89 e5             	mov    %rsp,%rbp
  4081d5:	48 83 ec 30          	sub    $0x30,%rsp
  4081d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4081dd:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  4081e2:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4081e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4081ea:	48 89 c7             	mov    %rax,%rdi
  4081ed:	e8 10 9d ff ff       	callq  401f02 <lua_version>
  4081f2:	66 48 0f 7e c0       	movq   %xmm0,%rax
  4081f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4081fb:	48 81 7d d8 88 00 00 	cmpq   $0x88,-0x28(%rbp)
  408202:	00 
  408203:	74 18                	je     40821d <luaL_checkversion_+0x4c>
  408205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408209:	be c8 d1 43 00       	mov    $0x43d1c8,%esi
  40820e:	48 89 c7             	mov    %rax,%rdi
  408211:	b8 00 00 00 00       	mov    $0x0,%eax
  408216:	e8 d5 df ff ff       	callq  4061f0 <luaL_error>
  40821b:	eb 3a                	jmp    408257 <luaL_checkversion_+0x86>
  40821d:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  408222:	66 0f 2e 45 e0       	ucomisd -0x20(%rbp),%xmm0
  408227:	7a 0e                	jp     408237 <luaL_checkversion_+0x66>
  408229:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  40822e:	66 0f 2e 45 e0       	ucomisd -0x20(%rbp),%xmm0
  408233:	75 02                	jne    408237 <luaL_checkversion_+0x66>
  408235:	eb 20                	jmp    408257 <luaL_checkversion_+0x86>
  408237:	f2 0f 10 4d f8       	movsd  -0x8(%rbp),%xmm1
  40823c:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  408241:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408245:	be 00 d2 43 00       	mov    $0x43d200,%esi
  40824a:	48 89 c7             	mov    %rax,%rdi
  40824d:	b8 02 00 00 00       	mov    $0x2,%eax
  408252:	e8 99 df ff ff       	callq  4061f0 <luaL_error>
  408257:	90                   	nop
  408258:	c9                   	leaveq 
  408259:	c3                   	retq   

000000000040825a <luaB_print>:
  40825a:	55                   	push   %rbp
  40825b:	48 89 e5             	mov    %rsp,%rbp
  40825e:	48 83 ec 30          	sub    $0x30,%rsp
  408262:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  408266:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40826a:	48 89 c7             	mov    %rax,%rdi
  40826d:	e8 e7 9c ff ff       	callq  401f59 <lua_gettop>
  408272:	89 45 f8             	mov    %eax,-0x8(%rbp)
  408275:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40827c:	eb 6e                	jmp    4082ec <luaB_print+0x92>
  40827e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  408282:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  408285:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408289:	89 ce                	mov    %ecx,%esi
  40828b:	48 89 c7             	mov    %rax,%rdi
  40828e:	e8 3d f6 ff ff       	callq  4078d0 <luaL_tolstring>
  408293:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  408297:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40829b:	7e 1e                	jle    4082bb <luaB_print+0x61>
  40829d:	48 8b 05 fc 6f 24 00 	mov    0x246ffc(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  4082a4:	48 89 c1             	mov    %rax,%rcx
  4082a7:	ba 01 00 00 00       	mov    $0x1,%edx
  4082ac:	be 01 00 00 00       	mov    $0x1,%esi
  4082b1:	bf 40 d2 43 00       	mov    $0x43d240,%edi
  4082b6:	e8 65 98 ff ff       	callq  401b20 <fwrite@plt>
  4082bb:	48 8b 0d de 6f 24 00 	mov    0x246fde(%rip),%rcx        # 64f2a0 <stdout@@GLIBC_2.2.5>
  4082c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4082c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4082ca:	be 01 00 00 00       	mov    $0x1,%esi
  4082cf:	48 89 c7             	mov    %rax,%rdi
  4082d2:	e8 49 98 ff ff       	callq  401b20 <fwrite@plt>
  4082d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4082db:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4082e0:	48 89 c7             	mov    %rax,%rdi
  4082e3:	e8 9c 9c ff ff       	callq  401f84 <lua_settop>
  4082e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4082ec:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4082ef:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4082f2:	7e 8a                	jle    40827e <luaB_print+0x24>
  4082f4:	48 8b 05 a5 6f 24 00 	mov    0x246fa5(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  4082fb:	48 89 c1             	mov    %rax,%rcx
  4082fe:	ba 01 00 00 00       	mov    $0x1,%edx
  408303:	be 01 00 00 00       	mov    $0x1,%esi
  408308:	bf 42 d2 43 00       	mov    $0x43d242,%edi
  40830d:	e8 0e 98 ff ff       	callq  401b20 <fwrite@plt>
  408312:	48 8b 05 87 6f 24 00 	mov    0x246f87(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  408319:	48 89 c7             	mov    %rax,%rdi
  40831c:	e8 2f 96 ff ff       	callq  401950 <fflush@plt>
  408321:	b8 00 00 00 00       	mov    $0x0,%eax
  408326:	c9                   	leaveq 
  408327:	c3                   	retq   

0000000000408328 <luaB_warn>:
  408328:	55                   	push   %rbp
  408329:	48 89 e5             	mov    %rsp,%rbp
  40832c:	48 83 ec 20          	sub    $0x20,%rsp
  408330:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408338:	48 89 c7             	mov    %rax,%rdi
  40833b:	e8 19 9c ff ff       	callq  401f59 <lua_gettop>
  408340:	89 45 f8             	mov    %eax,-0x8(%rbp)
  408343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408347:	ba 00 00 00 00       	mov    $0x0,%edx
  40834c:	be 01 00 00 00       	mov    $0x1,%esi
  408351:	48 89 c7             	mov    %rax,%rdi
  408354:	e8 73 e4 ff ff       	callq  4067cc <luaL_checklstring>
  408359:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
  408360:	eb 1a                	jmp    40837c <luaB_warn+0x54>
  408362:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  408365:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408369:	ba 00 00 00 00       	mov    $0x0,%edx
  40836e:	89 ce                	mov    %ecx,%esi
  408370:	48 89 c7             	mov    %rax,%rdi
  408373:	e8 54 e4 ff ff       	callq  4067cc <luaL_checklstring>
  408378:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40837c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40837f:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  408382:	7e de                	jle    408362 <luaB_warn+0x3a>
  408384:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40838b:	eb 31                	jmp    4083be <luaB_warn+0x96>
  40838d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  408390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408394:	ba 00 00 00 00       	mov    $0x0,%edx
  408399:	89 ce                	mov    %ecx,%esi
  40839b:	48 89 c7             	mov    %rax,%rdi
  40839e:	e8 ca a5 ff ff       	callq  40296d <lua_tolstring>
  4083a3:	48 89 c1             	mov    %rax,%rcx
  4083a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083aa:	ba 01 00 00 00       	mov    $0x1,%edx
  4083af:	48 89 ce             	mov    %rcx,%rsi
  4083b2:	48 89 c7             	mov    %rax,%rdi
  4083b5:	e8 20 cf ff ff       	callq  4052da <lua_warning>
  4083ba:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4083be:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4083c1:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4083c4:	7c c7                	jl     40838d <luaB_warn+0x65>
  4083c6:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4083c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083cd:	ba 00 00 00 00       	mov    $0x0,%edx
  4083d2:	89 ce                	mov    %ecx,%esi
  4083d4:	48 89 c7             	mov    %rax,%rdi
  4083d7:	e8 91 a5 ff ff       	callq  40296d <lua_tolstring>
  4083dc:	48 89 c1             	mov    %rax,%rcx
  4083df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083e3:	ba 00 00 00 00       	mov    $0x0,%edx
  4083e8:	48 89 ce             	mov    %rcx,%rsi
  4083eb:	48 89 c7             	mov    %rax,%rdi
  4083ee:	e8 e7 ce ff ff       	callq  4052da <lua_warning>
  4083f3:	b8 00 00 00 00       	mov    $0x0,%eax
  4083f8:	c9                   	leaveq 
  4083f9:	c3                   	retq   

00000000004083fa <b_str2int>:
  4083fa:	55                   	push   %rbp
  4083fb:	48 89 e5             	mov    %rsp,%rbp
  4083fe:	48 83 ec 30          	sub    $0x30,%rsp
  408402:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408406:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  408409:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40840d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  408414:	00 
  408415:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40841c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408420:	be 44 d2 43 00       	mov    $0x43d244,%esi
  408425:	48 89 c7             	mov    %rax,%rdi
  408428:	e8 33 93 ff ff       	callq  401760 <strspn@plt>
  40842d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  408431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408435:	0f b6 00             	movzbl (%rax),%eax
  408438:	3c 2d                	cmp    $0x2d,%al
  40843a:	75 0e                	jne    40844a <b_str2int+0x50>
  40843c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  408441:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  408448:	eb 10                	jmp    40845a <b_str2int+0x60>
  40844a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40844e:	0f b6 00             	movzbl (%rax),%eax
  408451:	3c 2b                	cmp    $0x2b,%al
  408453:	75 05                	jne    40845a <b_str2int+0x60>
  408455:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  40845a:	e8 a1 94 ff ff       	callq  401900 <__ctype_b_loc@plt>
  40845f:	48 8b 10             	mov    (%rax),%rdx
  408462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408466:	0f b6 00             	movzbl (%rax),%eax
  408469:	0f b6 c0             	movzbl %al,%eax
  40846c:	48 01 c0             	add    %rax,%rax
  40846f:	48 01 d0             	add    %rdx,%rax
  408472:	0f b7 00             	movzwl (%rax),%eax
  408475:	0f b7 c0             	movzwl %ax,%eax
  408478:	83 e0 08             	and    $0x8,%eax
  40847b:	85 c0                	test   %eax,%eax
  40847d:	75 0a                	jne    408489 <b_str2int+0x8f>
  40847f:	b8 00 00 00 00       	mov    $0x0,%eax
  408484:	e9 d6 00 00 00       	jmpq   40855f <b_str2int+0x165>
  408489:	e8 72 94 ff ff       	callq  401900 <__ctype_b_loc@plt>
  40848e:	48 8b 10             	mov    (%rax),%rdx
  408491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408495:	0f b6 00             	movzbl (%rax),%eax
  408498:	0f b6 c0             	movzbl %al,%eax
  40849b:	48 01 c0             	add    %rax,%rax
  40849e:	48 01 d0             	add    %rdx,%rax
  4084a1:	0f b7 00             	movzwl (%rax),%eax
  4084a4:	0f b7 c0             	movzwl %ax,%eax
  4084a7:	25 00 08 00 00       	and    $0x800,%eax
  4084ac:	85 c0                	test   %eax,%eax
  4084ae:	74 0f                	je     4084bf <b_str2int+0xc5>
  4084b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4084b4:	0f b6 00             	movzbl (%rax),%eax
  4084b7:	0f be c0             	movsbl %al,%eax
  4084ba:	83 e8 30             	sub    $0x30,%eax
  4084bd:	eb 14                	jmp    4084d3 <b_str2int+0xd9>
  4084bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4084c3:	0f b6 00             	movzbl (%rax),%eax
  4084c6:	0f b6 c0             	movzbl %al,%eax
  4084c9:	89 c7                	mov    %eax,%edi
  4084cb:	e8 00 96 ff ff       	callq  401ad0 <toupper@plt>
  4084d0:	83 e8 37             	sub    $0x37,%eax
  4084d3:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4084d6:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4084d9:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4084dc:	7c 07                	jl     4084e5 <b_str2int+0xeb>
  4084de:	b8 00 00 00 00       	mov    $0x0,%eax
  4084e3:	eb 7a                	jmp    40855f <b_str2int+0x165>
  4084e5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4084e8:	48 98                	cltq   
  4084ea:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
  4084ef:	48 89 c2             	mov    %rax,%rdx
  4084f2:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4084f5:	48 98                	cltq   
  4084f7:	48 01 d0             	add    %rdx,%rax
  4084fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4084fe:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  408503:	e8 f8 93 ff ff       	callq  401900 <__ctype_b_loc@plt>
  408508:	48 8b 10             	mov    (%rax),%rdx
  40850b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40850f:	0f b6 00             	movzbl (%rax),%eax
  408512:	0f b6 c0             	movzbl %al,%eax
  408515:	48 01 c0             	add    %rax,%rax
  408518:	48 01 d0             	add    %rdx,%rax
  40851b:	0f b7 00             	movzwl (%rax),%eax
  40851e:	0f b7 c0             	movzwl %ax,%eax
  408521:	83 e0 08             	and    $0x8,%eax
  408524:	85 c0                	test   %eax,%eax
  408526:	0f 85 5d ff ff ff    	jne    408489 <b_str2int+0x8f>
  40852c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408530:	be 44 d2 43 00       	mov    $0x43d244,%esi
  408535:	48 89 c7             	mov    %rax,%rdi
  408538:	e8 23 92 ff ff       	callq  401760 <strspn@plt>
  40853d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  408541:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  408545:	74 09                	je     408550 <b_str2int+0x156>
  408547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40854b:	48 f7 d8             	neg    %rax
  40854e:	eb 04                	jmp    408554 <b_str2int+0x15a>
  408550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408554:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  408558:	48 89 02             	mov    %rax,(%rdx)
  40855b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40855f:	c9                   	leaveq 
  408560:	c3                   	retq   

0000000000408561 <luaB_tonumber>:
  408561:	55                   	push   %rbp
  408562:	48 89 e5             	mov    %rsp,%rbp
  408565:	48 83 ec 40          	sub    $0x40,%rsp
  408569:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40856d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408571:	be 02 00 00 00       	mov    $0x2,%esi
  408576:	48 89 c7             	mov    %rax,%rdi
  408579:	e8 f5 9d ff ff       	callq  402373 <lua_type>
  40857e:	85 c0                	test   %eax,%eax
  408580:	0f 8f 94 00 00 00    	jg     40861a <luaB_tonumber+0xb9>
  408586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40858a:	be 01 00 00 00       	mov    $0x1,%esi
  40858f:	48 89 c7             	mov    %rax,%rdi
  408592:	e8 dc 9d ff ff       	callq  402373 <lua_type>
  408597:	83 f8 03             	cmp    $0x3,%eax
  40859a:	75 1b                	jne    4085b7 <luaB_tonumber+0x56>
  40859c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4085a0:	be 01 00 00 00       	mov    $0x1,%esi
  4085a5:	48 89 c7             	mov    %rax,%rdi
  4085a8:	e8 d7 99 ff ff       	callq  401f84 <lua_settop>
  4085ad:	b8 01 00 00 00       	mov    $0x1,%eax
  4085b2:	e9 45 01 00 00       	jmpq   4086fc <luaB_tonumber+0x19b>
  4085b7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4085bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4085bf:	be 01 00 00 00       	mov    $0x1,%esi
  4085c4:	48 89 c7             	mov    %rax,%rdi
  4085c7:	e8 a1 a3 ff ff       	callq  40296d <lua_tolstring>
  4085cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4085d0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4085d5:	74 2d                	je     408604 <luaB_tonumber+0xa3>
  4085d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4085db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4085df:	48 89 d6             	mov    %rdx,%rsi
  4085e2:	48 89 c7             	mov    %rax,%rdi
  4085e5:	e8 de a1 ff ff       	callq  4027c8 <lua_stringtonumber>
  4085ea:	48 89 c2             	mov    %rax,%rdx
  4085ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4085f1:	48 83 c0 01          	add    $0x1,%rax
  4085f5:	48 39 c2             	cmp    %rax,%rdx
  4085f8:	75 0a                	jne    408604 <luaB_tonumber+0xa3>
  4085fa:	b8 01 00 00 00       	mov    $0x1,%eax
  4085ff:	e9 f8 00 00 00       	jmpq   4086fc <luaB_tonumber+0x19b>
  408604:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408608:	be 01 00 00 00       	mov    $0x1,%esi
  40860d:	48 89 c7             	mov    %rax,%rdi
  408610:	e8 70 e1 ff ff       	callq  406785 <luaL_checkany>
  408615:	e9 d1 00 00 00       	jmpq   4086eb <luaB_tonumber+0x18a>
  40861a:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  408621:	00 
  408622:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408626:	be 02 00 00 00       	mov    $0x2,%esi
  40862b:	48 89 c7             	mov    %rax,%rdi
  40862e:	e8 64 e3 ff ff       	callq  406997 <luaL_checkinteger>
  408633:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  408637:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40863b:	ba 04 00 00 00       	mov    $0x4,%edx
  408640:	be 01 00 00 00       	mov    $0x1,%esi
  408645:	48 89 c7             	mov    %rax,%rdi
  408648:	e8 f0 e0 ff ff       	callq  40673d <luaL_checktype>
  40864d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  408651:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408655:	be 01 00 00 00       	mov    $0x1,%esi
  40865a:	48 89 c7             	mov    %rax,%rdi
  40865d:	e8 0b a3 ff ff       	callq  40296d <lua_tolstring>
  408662:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  408666:	48 83 7d f0 01       	cmpq   $0x1,-0x10(%rbp)
  40866b:	7e 0e                	jle    40867b <luaB_tonumber+0x11a>
  40866d:	48 83 7d f0 24       	cmpq   $0x24,-0x10(%rbp)
  408672:	7f 07                	jg     40867b <luaB_tonumber+0x11a>
  408674:	b8 01 00 00 00       	mov    $0x1,%eax
  408679:	eb 05                	jmp    408680 <luaB_tonumber+0x11f>
  40867b:	b8 00 00 00 00       	mov    $0x0,%eax
  408680:	85 c0                	test   %eax,%eax
  408682:	0f 95 c0             	setne  %al
  408685:	0f b6 c0             	movzbl %al,%eax
  408688:	48 85 c0             	test   %rax,%rax
  40868b:	75 18                	jne    4086a5 <luaB_tonumber+0x144>
  40868d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408691:	ba 4b d2 43 00       	mov    $0x43d24b,%edx
  408696:	be 02 00 00 00       	mov    $0x2,%esi
  40869b:	48 89 c7             	mov    %rax,%rdi
  40869e:	e8 4f d8 ff ff       	callq  405ef2 <luaL_argerror>
  4086a3:	85 c0                	test   %eax,%eax
  4086a5:	90                   	nop
  4086a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4086aa:	89 c1                	mov    %eax,%ecx
  4086ac:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4086b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4086b4:	89 ce                	mov    %ecx,%esi
  4086b6:	48 89 c7             	mov    %rax,%rdi
  4086b9:	e8 3c fd ff ff       	callq  4083fa <b_str2int>
  4086be:	48 89 c1             	mov    %rax,%rcx
  4086c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4086c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4086c9:	48 01 d0             	add    %rdx,%rax
  4086cc:	48 39 c1             	cmp    %rax,%rcx
  4086cf:	75 1a                	jne    4086eb <luaB_tonumber+0x18a>
  4086d1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4086d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4086d9:	48 89 d6             	mov    %rdx,%rsi
  4086dc:	48 89 c7             	mov    %rax,%rdi
  4086df:	e8 31 a6 ff ff       	callq  402d15 <lua_pushinteger>
  4086e4:	b8 01 00 00 00       	mov    $0x1,%eax
  4086e9:	eb 11                	jmp    4086fc <luaB_tonumber+0x19b>
  4086eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4086ef:	48 89 c7             	mov    %rax,%rdi
  4086f2:	e8 ae a5 ff ff       	callq  402ca5 <lua_pushnil>
  4086f7:	b8 01 00 00 00       	mov    $0x1,%eax
  4086fc:	c9                   	leaveq 
  4086fd:	c3                   	retq   

00000000004086fe <luaB_error>:
  4086fe:	55                   	push   %rbp
  4086ff:	48 89 e5             	mov    %rsp,%rbp
  408702:	48 83 ec 20          	sub    $0x20,%rsp
  408706:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40870a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40870e:	ba 01 00 00 00       	mov    $0x1,%edx
  408713:	be 02 00 00 00       	mov    $0x2,%esi
  408718:	48 89 c7             	mov    %rax,%rdi
  40871b:	e8 c6 e2 ff ff       	callq  4069e6 <luaL_optinteger>
  408720:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408723:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408727:	be 01 00 00 00       	mov    $0x1,%esi
  40872c:	48 89 c7             	mov    %rax,%rdi
  40872f:	e8 50 98 ff ff       	callq  401f84 <lua_settop>
  408734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408738:	be 01 00 00 00       	mov    $0x1,%esi
  40873d:	48 89 c7             	mov    %rax,%rdi
  408740:	e8 2e 9c ff ff       	callq  402373 <lua_type>
  408745:	83 f8 04             	cmp    $0x4,%eax
  408748:	75 39                	jne    408783 <luaB_error+0x85>
  40874a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40874e:	7e 33                	jle    408783 <luaB_error+0x85>
  408750:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408753:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408757:	89 d6                	mov    %edx,%esi
  408759:	48 89 c7             	mov    %rax,%rdi
  40875c:	e8 ea d9 ff ff       	callq  40614b <luaL_where>
  408761:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408765:	be 01 00 00 00       	mov    $0x1,%esi
  40876a:	48 89 c7             	mov    %rax,%rdi
  40876d:	e8 9d 9b ff ff       	callq  40230f <lua_pushvalue>
  408772:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408776:	be 02 00 00 00       	mov    $0x2,%esi
  40877b:	48 89 c7             	mov    %rax,%rdi
  40877e:	e8 ba c9 ff ff       	callq  40513d <lua_concat>
  408783:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408787:	48 89 c7             	mov    %rax,%rdi
  40878a:	e8 6a c8 ff ff       	callq  404ff9 <lua_error>
  40878f:	c9                   	leaveq 
  408790:	c3                   	retq   

0000000000408791 <luaB_getmetatable>:
  408791:	55                   	push   %rbp
  408792:	48 89 e5             	mov    %rsp,%rbp
  408795:	48 83 ec 10          	sub    $0x10,%rsp
  408799:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40879d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4087a1:	be 01 00 00 00       	mov    $0x1,%esi
  4087a6:	48 89 c7             	mov    %rax,%rdi
  4087a9:	e8 d7 df ff ff       	callq  406785 <luaL_checkany>
  4087ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4087b2:	be 01 00 00 00       	mov    $0x1,%esi
  4087b7:	48 89 c7             	mov    %rax,%rdi
  4087ba:	e8 f8 b0 ff ff       	callq  4038b7 <lua_getmetatable>
  4087bf:	85 c0                	test   %eax,%eax
  4087c1:	75 13                	jne    4087d6 <luaB_getmetatable+0x45>
  4087c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4087c7:	48 89 c7             	mov    %rax,%rdi
  4087ca:	e8 d6 a4 ff ff       	callq  402ca5 <lua_pushnil>
  4087cf:	b8 01 00 00 00       	mov    $0x1,%eax
  4087d4:	eb 1b                	jmp    4087f1 <luaB_getmetatable+0x60>
  4087d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4087da:	ba 5d d2 43 00       	mov    $0x43d25d,%edx
  4087df:	be 01 00 00 00       	mov    $0x1,%esi
  4087e4:	48 89 c7             	mov    %rax,%rdi
  4087e7:	e8 53 ef ff ff       	callq  40773f <luaL_getmetafield>
  4087ec:	b8 01 00 00 00       	mov    $0x1,%eax
  4087f1:	c9                   	leaveq 
  4087f2:	c3                   	retq   

00000000004087f3 <luaB_setmetatable>:
  4087f3:	55                   	push   %rbp
  4087f4:	48 89 e5             	mov    %rsp,%rbp
  4087f7:	48 83 ec 20          	sub    $0x20,%rsp
  4087fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4087ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408803:	be 02 00 00 00       	mov    $0x2,%esi
  408808:	48 89 c7             	mov    %rax,%rdi
  40880b:	e8 63 9b ff ff       	callq  402373 <lua_type>
  408810:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408817:	ba 05 00 00 00       	mov    $0x5,%edx
  40881c:	be 01 00 00 00       	mov    $0x1,%esi
  408821:	48 89 c7             	mov    %rax,%rdi
  408824:	e8 14 df ff ff       	callq  40673d <luaL_checktype>
  408829:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40882d:	74 06                	je     408835 <luaB_setmetatable+0x42>
  40882f:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
  408833:	75 07                	jne    40883c <luaB_setmetatable+0x49>
  408835:	b8 01 00 00 00       	mov    $0x1,%eax
  40883a:	eb 05                	jmp    408841 <luaB_setmetatable+0x4e>
  40883c:	b8 00 00 00 00       	mov    $0x0,%eax
  408841:	85 c0                	test   %eax,%eax
  408843:	0f 95 c0             	setne  %al
  408846:	0f b6 c0             	movzbl %al,%eax
  408849:	48 85 c0             	test   %rax,%rax
  40884c:	75 18                	jne    408866 <luaB_setmetatable+0x73>
  40884e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408852:	ba 69 d2 43 00       	mov    $0x43d269,%edx
  408857:	be 02 00 00 00       	mov    $0x2,%esi
  40885c:	48 89 c7             	mov    %rax,%rdi
  40885f:	e8 e5 d7 ff ff       	callq  406049 <luaL_typeerror>
  408864:	85 c0                	test   %eax,%eax
  408866:	90                   	nop
  408867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40886b:	ba 5d d2 43 00       	mov    $0x43d25d,%edx
  408870:	be 01 00 00 00       	mov    $0x1,%esi
  408875:	48 89 c7             	mov    %rax,%rdi
  408878:	e8 c2 ee ff ff       	callq  40773f <luaL_getmetafield>
  40887d:	85 c0                	test   %eax,%eax
  40887f:	0f 95 c0             	setne  %al
  408882:	0f b6 c0             	movzbl %al,%eax
  408885:	48 85 c0             	test   %rax,%rax
  408888:	74 18                	je     4088a2 <luaB_setmetatable+0xaf>
  40888a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40888e:	be 78 d2 43 00       	mov    $0x43d278,%esi
  408893:	48 89 c7             	mov    %rax,%rdi
  408896:	b8 00 00 00 00       	mov    $0x0,%eax
  40889b:	e8 50 d9 ff ff       	callq  4061f0 <luaL_error>
  4088a0:	eb 27                	jmp    4088c9 <luaB_setmetatable+0xd6>
  4088a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4088a6:	be 02 00 00 00       	mov    $0x2,%esi
  4088ab:	48 89 c7             	mov    %rax,%rdi
  4088ae:	e8 d1 96 ff ff       	callq  401f84 <lua_settop>
  4088b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4088b7:	be 01 00 00 00       	mov    $0x1,%esi
  4088bc:	48 89 c7             	mov    %rax,%rdi
  4088bf:	e8 14 b9 ff ff       	callq  4041d8 <lua_setmetatable>
  4088c4:	b8 01 00 00 00       	mov    $0x1,%eax
  4088c9:	c9                   	leaveq 
  4088ca:	c3                   	retq   

00000000004088cb <luaB_rawequal>:
  4088cb:	55                   	push   %rbp
  4088cc:	48 89 e5             	mov    %rsp,%rbp
  4088cf:	48 83 ec 10          	sub    $0x10,%rsp
  4088d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4088d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4088db:	be 01 00 00 00       	mov    $0x1,%esi
  4088e0:	48 89 c7             	mov    %rax,%rdi
  4088e3:	e8 9d de ff ff       	callq  406785 <luaL_checkany>
  4088e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4088ec:	be 02 00 00 00       	mov    $0x2,%esi
  4088f1:	48 89 c7             	mov    %rax,%rdi
  4088f4:	e8 8c de ff ff       	callq  406785 <luaL_checkany>
  4088f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4088fd:	ba 02 00 00 00       	mov    $0x2,%edx
  408902:	be 01 00 00 00       	mov    $0x1,%esi
  408907:	48 89 c7             	mov    %rax,%rdi
  40890a:	e8 5b 9c ff ff       	callq  40256a <lua_rawequal>
  40890f:	89 c2                	mov    %eax,%edx
  408911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408915:	89 d6                	mov    %edx,%esi
  408917:	48 89 c7             	mov    %rax,%rdi
  40891a:	e8 19 a8 ff ff       	callq  403138 <lua_pushboolean>
  40891f:	b8 01 00 00 00       	mov    $0x1,%eax
  408924:	c9                   	leaveq 
  408925:	c3                   	retq   

0000000000408926 <luaB_rawlen>:
  408926:	55                   	push   %rbp
  408927:	48 89 e5             	mov    %rsp,%rbp
  40892a:	48 83 ec 20          	sub    $0x20,%rsp
  40892e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408936:	be 01 00 00 00       	mov    $0x1,%esi
  40893b:	48 89 c7             	mov    %rax,%rdi
  40893e:	e8 30 9a ff ff       	callq  402373 <lua_type>
  408943:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408946:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
  40894a:	74 06                	je     408952 <luaB_rawlen+0x2c>
  40894c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
  408950:	75 07                	jne    408959 <luaB_rawlen+0x33>
  408952:	b8 01 00 00 00       	mov    $0x1,%eax
  408957:	eb 05                	jmp    40895e <luaB_rawlen+0x38>
  408959:	b8 00 00 00 00       	mov    $0x0,%eax
  40895e:	85 c0                	test   %eax,%eax
  408960:	0f 95 c0             	setne  %al
  408963:	0f b6 c0             	movzbl %al,%eax
  408966:	48 85 c0             	test   %rax,%rax
  408969:	75 18                	jne    408983 <luaB_rawlen+0x5d>
  40896b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40896f:	ba 9c d2 43 00       	mov    $0x43d29c,%edx
  408974:	be 01 00 00 00       	mov    $0x1,%esi
  408979:	48 89 c7             	mov    %rax,%rdi
  40897c:	e8 c8 d6 ff ff       	callq  406049 <luaL_typeerror>
  408981:	85 c0                	test   %eax,%eax
  408983:	90                   	nop
  408984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408988:	be 01 00 00 00       	mov    $0x1,%esi
  40898d:	48 89 c7             	mov    %rax,%rdi
  408990:	e8 cc a0 ff ff       	callq  402a61 <lua_rawlen>
  408995:	48 89 c2             	mov    %rax,%rdx
  408998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40899c:	48 89 d6             	mov    %rdx,%rsi
  40899f:	48 89 c7             	mov    %rax,%rdi
  4089a2:	e8 6e a3 ff ff       	callq  402d15 <lua_pushinteger>
  4089a7:	b8 01 00 00 00       	mov    $0x1,%eax
  4089ac:	c9                   	leaveq 
  4089ad:	c3                   	retq   

00000000004089ae <luaB_rawget>:
  4089ae:	55                   	push   %rbp
  4089af:	48 89 e5             	mov    %rsp,%rbp
  4089b2:	48 83 ec 10          	sub    $0x10,%rsp
  4089b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4089ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4089be:	ba 05 00 00 00       	mov    $0x5,%edx
  4089c3:	be 01 00 00 00       	mov    $0x1,%esi
  4089c8:	48 89 c7             	mov    %rax,%rdi
  4089cb:	e8 6d dd ff ff       	callq  40673d <luaL_checktype>
  4089d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4089d4:	be 02 00 00 00       	mov    $0x2,%esi
  4089d9:	48 89 c7             	mov    %rax,%rdi
  4089dc:	e8 a4 dd ff ff       	callq  406785 <luaL_checkany>
  4089e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4089e5:	be 02 00 00 00       	mov    $0x2,%esi
  4089ea:	48 89 c7             	mov    %rax,%rdi
  4089ed:	e8 92 95 ff ff       	callq  401f84 <lua_settop>
  4089f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4089f6:	be 01 00 00 00       	mov    $0x1,%esi
  4089fb:	48 89 c7             	mov    %rax,%rdi
  4089fe:	e8 ed ac ff ff       	callq  4036f0 <lua_rawget>
  408a03:	b8 01 00 00 00       	mov    $0x1,%eax
  408a08:	c9                   	leaveq 
  408a09:	c3                   	retq   

0000000000408a0a <luaB_rawset>:
  408a0a:	55                   	push   %rbp
  408a0b:	48 89 e5             	mov    %rsp,%rbp
  408a0e:	48 83 ec 10          	sub    $0x10,%rsp
  408a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a1a:	ba 05 00 00 00       	mov    $0x5,%edx
  408a1f:	be 01 00 00 00       	mov    $0x1,%esi
  408a24:	48 89 c7             	mov    %rax,%rdi
  408a27:	e8 11 dd ff ff       	callq  40673d <luaL_checktype>
  408a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a30:	be 02 00 00 00       	mov    $0x2,%esi
  408a35:	48 89 c7             	mov    %rax,%rdi
  408a38:	e8 48 dd ff ff       	callq  406785 <luaL_checkany>
  408a3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a41:	be 03 00 00 00       	mov    $0x3,%esi
  408a46:	48 89 c7             	mov    %rax,%rdi
  408a49:	e8 37 dd ff ff       	callq  406785 <luaL_checkany>
  408a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a52:	be 03 00 00 00       	mov    $0x3,%esi
  408a57:	48 89 c7             	mov    %rax,%rdi
  408a5a:	e8 25 95 ff ff       	callq  401f84 <lua_settop>
  408a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a63:	be 01 00 00 00       	mov    $0x1,%esi
  408a68:	48 89 c7             	mov    %rax,%rdi
  408a6b:	e8 2c b6 ff ff       	callq  40409c <lua_rawset>
  408a70:	b8 01 00 00 00       	mov    $0x1,%eax
  408a75:	c9                   	leaveq 
  408a76:	c3                   	retq   

0000000000408a77 <pushmode>:
  408a77:	55                   	push   %rbp
  408a78:	48 89 e5             	mov    %rsp,%rbp
  408a7b:	48 83 ec 10          	sub    $0x10,%rsp
  408a7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408a83:	89 75 f4             	mov    %esi,-0xc(%rbp)
  408a86:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  408a8a:	75 0e                	jne    408a9a <pushmode+0x23>
  408a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408a90:	48 89 c7             	mov    %rax,%rdi
  408a93:	e8 0d a2 ff ff       	callq  402ca5 <lua_pushnil>
  408a98:	eb 21                	jmp    408abb <pushmode+0x44>
  408a9a:	83 7d f4 0b          	cmpl   $0xb,-0xc(%rbp)
  408a9e:	75 07                	jne    408aa7 <pushmode+0x30>
  408aa0:	ba ac d2 43 00       	mov    $0x43d2ac,%edx
  408aa5:	eb 05                	jmp    408aac <pushmode+0x35>
  408aa7:	ba b8 d2 43 00       	mov    $0x43d2b8,%edx
  408aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408ab0:	48 89 d6             	mov    %rdx,%rsi
  408ab3:	48 89 c7             	mov    %rax,%rdi
  408ab6:	e8 53 a3 ff ff       	callq  402e0e <lua_pushstring>
  408abb:	b8 01 00 00 00       	mov    $0x1,%eax
  408ac0:	c9                   	leaveq 
  408ac1:	c3                   	retq   

0000000000408ac2 <luaB_collectgarbage>:
  408ac2:	55                   	push   %rbp
  408ac3:	48 89 e5             	mov    %rsp,%rbp
  408ac6:	48 83 ec 50          	sub    $0x50,%rsp
  408aca:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  408ace:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408ad2:	b9 60 d6 43 00       	mov    $0x43d660,%ecx
  408ad7:	ba c5 d2 43 00       	mov    $0x43d2c5,%edx
  408adc:	be 01 00 00 00       	mov    $0x1,%esi
  408ae1:	48 89 c7             	mov    %rax,%rdi
  408ae4:	e8 0d db ff ff       	callq  4065f6 <luaL_checkoption>
  408ae9:	48 98                	cltq   
  408aeb:	8b 04 85 c0 d6 43 00 	mov    0x43d6c0(,%rax,4),%eax
  408af2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408af5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  408af8:	83 e8 03             	sub    $0x3,%eax
  408afb:	83 f8 08             	cmp    $0x8,%eax
  408afe:	0f 87 4c 02 00 00    	ja     408d50 <luaB_collectgarbage+0x28e>
  408b04:	89 c0                	mov    %eax,%eax
  408b06:	48 8b 04 c5 d0 d2 43 	mov    0x43d2d0(,%rax,8),%rax
  408b0d:	00 
  408b0e:	ff e0                	jmpq   *%rax
  408b10:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408b13:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408b17:	89 d6                	mov    %edx,%esi
  408b19:	48 89 c7             	mov    %rax,%rdi
  408b1c:	b8 00 00 00 00       	mov    $0x0,%eax
  408b21:	e8 43 be ff ff       	callq  404969 <lua_gc>
  408b26:	89 45 f8             	mov    %eax,-0x8(%rbp)
  408b29:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408b2d:	be 04 00 00 00       	mov    $0x4,%esi
  408b32:	48 89 c7             	mov    %rax,%rdi
  408b35:	b8 00 00 00 00       	mov    $0x0,%eax
  408b3a:	e8 2a be ff ff       	callq  404969 <lua_gc>
  408b3f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  408b42:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
  408b46:	0f 84 3f 02 00 00    	je     408d8b <luaB_collectgarbage+0x2c9>
  408b4c:	f2 0f 2a 4d f8       	cvtsi2sdl -0x8(%rbp),%xmm1
  408b51:	f2 0f 2a 45 f4       	cvtsi2sdl -0xc(%rbp),%xmm0
  408b56:	f2 0f 10 15 8a 4b 03 	movsd  0x34b8a(%rip),%xmm2        # 43d6e8 <optsnum.3460+0x28>
  408b5d:	00 
  408b5e:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
  408b62:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  408b66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408b6a:	48 89 c7             	mov    %rax,%rdi
  408b6d:	e8 5e a1 ff ff       	callq  402cd0 <lua_pushnumber>
  408b72:	b8 01 00 00 00       	mov    $0x1,%eax
  408b77:	e9 2d 02 00 00       	jmpq   408da9 <luaB_collectgarbage+0x2e7>
  408b7c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408b80:	ba 00 00 00 00       	mov    $0x0,%edx
  408b85:	be 02 00 00 00       	mov    $0x2,%esi
  408b8a:	48 89 c7             	mov    %rax,%rdi
  408b8d:	e8 54 de ff ff       	callq  4069e6 <luaL_optinteger>
  408b92:	89 45 f0             	mov    %eax,-0x10(%rbp)
  408b95:	8b 55 f0             	mov    -0x10(%rbp),%edx
  408b98:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  408b9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408b9f:	89 ce                	mov    %ecx,%esi
  408ba1:	48 89 c7             	mov    %rax,%rdi
  408ba4:	b8 00 00 00 00       	mov    $0x0,%eax
  408ba9:	e8 bb bd ff ff       	callq  404969 <lua_gc>
  408bae:	89 45 ec             	mov    %eax,-0x14(%rbp)
  408bb1:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
  408bb5:	0f 84 d3 01 00 00    	je     408d8e <luaB_collectgarbage+0x2cc>
  408bbb:	8b 55 ec             	mov    -0x14(%rbp),%edx
  408bbe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408bc2:	89 d6                	mov    %edx,%esi
  408bc4:	48 89 c7             	mov    %rax,%rdi
  408bc7:	e8 6c a5 ff ff       	callq  403138 <lua_pushboolean>
  408bcc:	b8 01 00 00 00       	mov    $0x1,%eax
  408bd1:	e9 d3 01 00 00       	jmpq   408da9 <luaB_collectgarbage+0x2e7>
  408bd6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408bda:	ba 00 00 00 00       	mov    $0x0,%edx
  408bdf:	be 02 00 00 00       	mov    $0x2,%esi
  408be4:	48 89 c7             	mov    %rax,%rdi
  408be7:	e8 fa dd ff ff       	callq  4069e6 <luaL_optinteger>
  408bec:	89 45 e8             	mov    %eax,-0x18(%rbp)
  408bef:	8b 55 e8             	mov    -0x18(%rbp),%edx
  408bf2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  408bf5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408bf9:	89 ce                	mov    %ecx,%esi
  408bfb:	48 89 c7             	mov    %rax,%rdi
  408bfe:	b8 00 00 00 00       	mov    $0x0,%eax
  408c03:	e8 61 bd ff ff       	callq  404969 <lua_gc>
  408c08:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  408c0b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
  408c0f:	0f 84 7c 01 00 00    	je     408d91 <luaB_collectgarbage+0x2cf>
  408c15:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  408c18:	48 63 d0             	movslq %eax,%rdx
  408c1b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408c1f:	48 89 d6             	mov    %rdx,%rsi
  408c22:	48 89 c7             	mov    %rax,%rdi
  408c25:	e8 eb a0 ff ff       	callq  402d15 <lua_pushinteger>
  408c2a:	b8 01 00 00 00       	mov    $0x1,%eax
  408c2f:	e9 75 01 00 00       	jmpq   408da9 <luaB_collectgarbage+0x2e7>
  408c34:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408c37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408c3b:	89 d6                	mov    %edx,%esi
  408c3d:	48 89 c7             	mov    %rax,%rdi
  408c40:	b8 00 00 00 00       	mov    $0x0,%eax
  408c45:	e8 1f bd ff ff       	callq  404969 <lua_gc>
  408c4a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  408c4d:	83 7d e0 ff          	cmpl   $0xffffffff,-0x20(%rbp)
  408c51:	0f 84 3d 01 00 00    	je     408d94 <luaB_collectgarbage+0x2d2>
  408c57:	8b 55 e0             	mov    -0x20(%rbp),%edx
  408c5a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408c5e:	89 d6                	mov    %edx,%esi
  408c60:	48 89 c7             	mov    %rax,%rdi
  408c63:	e8 d0 a4 ff ff       	callq  403138 <lua_pushboolean>
  408c68:	b8 01 00 00 00       	mov    $0x1,%eax
  408c6d:	e9 37 01 00 00       	jmpq   408da9 <luaB_collectgarbage+0x2e7>
  408c72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408c76:	ba 00 00 00 00       	mov    $0x0,%edx
  408c7b:	be 02 00 00 00       	mov    $0x2,%esi
  408c80:	48 89 c7             	mov    %rax,%rdi
  408c83:	e8 5e dd ff ff       	callq  4069e6 <luaL_optinteger>
  408c88:	89 45 dc             	mov    %eax,-0x24(%rbp)
  408c8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408c8f:	ba 00 00 00 00       	mov    $0x0,%edx
  408c94:	be 03 00 00 00       	mov    $0x3,%esi
  408c99:	48 89 c7             	mov    %rax,%rdi
  408c9c:	e8 45 dd ff ff       	callq  4069e6 <luaL_optinteger>
  408ca1:	89 45 d8             	mov    %eax,-0x28(%rbp)
  408ca4:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  408ca7:	8b 55 dc             	mov    -0x24(%rbp),%edx
  408caa:	8b 75 fc             	mov    -0x4(%rbp),%esi
  408cad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408cb1:	48 89 c7             	mov    %rax,%rdi
  408cb4:	b8 00 00 00 00       	mov    $0x0,%eax
  408cb9:	e8 ab bc ff ff       	callq  404969 <lua_gc>
  408cbe:	89 c2                	mov    %eax,%edx
  408cc0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408cc4:	89 d6                	mov    %edx,%esi
  408cc6:	48 89 c7             	mov    %rax,%rdi
  408cc9:	e8 a9 fd ff ff       	callq  408a77 <pushmode>
  408cce:	e9 d6 00 00 00       	jmpq   408da9 <luaB_collectgarbage+0x2e7>
  408cd3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408cd7:	ba 00 00 00 00       	mov    $0x0,%edx
  408cdc:	be 02 00 00 00       	mov    $0x2,%esi
  408ce1:	48 89 c7             	mov    %rax,%rdi
  408ce4:	e8 fd dc ff ff       	callq  4069e6 <luaL_optinteger>
  408ce9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  408cec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408cf0:	ba 00 00 00 00       	mov    $0x0,%edx
  408cf5:	be 03 00 00 00       	mov    $0x3,%esi
  408cfa:	48 89 c7             	mov    %rax,%rdi
  408cfd:	e8 e4 dc ff ff       	callq  4069e6 <luaL_optinteger>
  408d02:	89 45 d0             	mov    %eax,-0x30(%rbp)
  408d05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d09:	ba 00 00 00 00       	mov    $0x0,%edx
  408d0e:	be 04 00 00 00       	mov    $0x4,%esi
  408d13:	48 89 c7             	mov    %rax,%rdi
  408d16:	e8 cb dc ff ff       	callq  4069e6 <luaL_optinteger>
  408d1b:	89 45 cc             	mov    %eax,-0x34(%rbp)
  408d1e:	8b 7d cc             	mov    -0x34(%rbp),%edi
  408d21:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  408d24:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  408d27:	8b 75 fc             	mov    -0x4(%rbp),%esi
  408d2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d2e:	41 89 f8             	mov    %edi,%r8d
  408d31:	48 89 c7             	mov    %rax,%rdi
  408d34:	b8 00 00 00 00       	mov    $0x0,%eax
  408d39:	e8 2b bc ff ff       	callq  404969 <lua_gc>
  408d3e:	89 c2                	mov    %eax,%edx
  408d40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d44:	89 d6                	mov    %edx,%esi
  408d46:	48 89 c7             	mov    %rax,%rdi
  408d49:	e8 29 fd ff ff       	callq  408a77 <pushmode>
  408d4e:	eb 59                	jmp    408da9 <luaB_collectgarbage+0x2e7>
  408d50:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408d53:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d57:	89 d6                	mov    %edx,%esi
  408d59:	48 89 c7             	mov    %rax,%rdi
  408d5c:	b8 00 00 00 00       	mov    $0x0,%eax
  408d61:	e8 03 bc ff ff       	callq  404969 <lua_gc>
  408d66:	89 45 c8             	mov    %eax,-0x38(%rbp)
  408d69:	83 7d c8 ff          	cmpl   $0xffffffff,-0x38(%rbp)
  408d6d:	74 28                	je     408d97 <luaB_collectgarbage+0x2d5>
  408d6f:	8b 45 c8             	mov    -0x38(%rbp),%eax
  408d72:	48 63 d0             	movslq %eax,%rdx
  408d75:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d79:	48 89 d6             	mov    %rdx,%rsi
  408d7c:	48 89 c7             	mov    %rax,%rdi
  408d7f:	e8 91 9f ff ff       	callq  402d15 <lua_pushinteger>
  408d84:	b8 01 00 00 00       	mov    $0x1,%eax
  408d89:	eb 1e                	jmp    408da9 <luaB_collectgarbage+0x2e7>
  408d8b:	90                   	nop
  408d8c:	eb 0a                	jmp    408d98 <luaB_collectgarbage+0x2d6>
  408d8e:	90                   	nop
  408d8f:	eb 07                	jmp    408d98 <luaB_collectgarbage+0x2d6>
  408d91:	90                   	nop
  408d92:	eb 04                	jmp    408d98 <luaB_collectgarbage+0x2d6>
  408d94:	90                   	nop
  408d95:	eb 01                	jmp    408d98 <luaB_collectgarbage+0x2d6>
  408d97:	90                   	nop
  408d98:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  408d9c:	48 89 c7             	mov    %rax,%rdi
  408d9f:	e8 01 9f ff ff       	callq  402ca5 <lua_pushnil>
  408da4:	b8 01 00 00 00       	mov    $0x1,%eax
  408da9:	c9                   	leaveq 
  408daa:	c3                   	retq   

0000000000408dab <luaB_type>:
  408dab:	55                   	push   %rbp
  408dac:	48 89 e5             	mov    %rsp,%rbp
  408daf:	48 83 ec 20          	sub    $0x20,%rsp
  408db3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408dbb:	be 01 00 00 00       	mov    $0x1,%esi
  408dc0:	48 89 c7             	mov    %rax,%rdi
  408dc3:	e8 ab 95 ff ff       	callq  402373 <lua_type>
  408dc8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408dcb:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  408dcf:	0f 95 c0             	setne  %al
  408dd2:	0f b6 c0             	movzbl %al,%eax
  408dd5:	48 85 c0             	test   %rax,%rax
  408dd8:	75 18                	jne    408df2 <luaB_type+0x47>
  408dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408dde:	ba 18 d3 43 00       	mov    $0x43d318,%edx
  408de3:	be 01 00 00 00       	mov    $0x1,%esi
  408de8:	48 89 c7             	mov    %rax,%rdi
  408deb:	e8 02 d1 ff ff       	callq  405ef2 <luaL_argerror>
  408df0:	85 c0                	test   %eax,%eax
  408df2:	90                   	nop
  408df3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408dfa:	89 d6                	mov    %edx,%esi
  408dfc:	48 89 c7             	mov    %rax,%rdi
  408dff:	e8 ce 95 ff ff       	callq  4023d2 <lua_typename>
  408e04:	48 89 c2             	mov    %rax,%rdx
  408e07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408e0b:	48 89 d6             	mov    %rdx,%rsi
  408e0e:	48 89 c7             	mov    %rax,%rdi
  408e11:	e8 f8 9f ff ff       	callq  402e0e <lua_pushstring>
  408e16:	b8 01 00 00 00       	mov    $0x1,%eax
  408e1b:	c9                   	leaveq 
  408e1c:	c3                   	retq   

0000000000408e1d <luaB_next>:
  408e1d:	55                   	push   %rbp
  408e1e:	48 89 e5             	mov    %rsp,%rbp
  408e21:	48 83 ec 10          	sub    $0x10,%rsp
  408e25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408e29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408e2d:	ba 05 00 00 00       	mov    $0x5,%edx
  408e32:	be 01 00 00 00       	mov    $0x1,%esi
  408e37:	48 89 c7             	mov    %rax,%rdi
  408e3a:	e8 fe d8 ff ff       	callq  40673d <luaL_checktype>
  408e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408e43:	be 02 00 00 00       	mov    $0x2,%esi
  408e48:	48 89 c7             	mov    %rax,%rdi
  408e4b:	e8 34 91 ff ff       	callq  401f84 <lua_settop>
  408e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408e54:	be 01 00 00 00       	mov    $0x1,%esi
  408e59:	48 89 c7             	mov    %rax,%rdi
  408e5c:	e8 fb c1 ff ff       	callq  40505c <lua_next>
  408e61:	85 c0                	test   %eax,%eax
  408e63:	74 07                	je     408e6c <luaB_next+0x4f>
  408e65:	b8 02 00 00 00       	mov    $0x2,%eax
  408e6a:	eb 11                	jmp    408e7d <luaB_next+0x60>
  408e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408e70:	48 89 c7             	mov    %rax,%rdi
  408e73:	e8 2d 9e ff ff       	callq  402ca5 <lua_pushnil>
  408e78:	b8 01 00 00 00       	mov    $0x1,%eax
  408e7d:	c9                   	leaveq 
  408e7e:	c3                   	retq   

0000000000408e7f <pairscont>:
  408e7f:	55                   	push   %rbp
  408e80:	48 89 e5             	mov    %rsp,%rbp
  408e83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408e87:	89 75 f4             	mov    %esi,-0xc(%rbp)
  408e8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  408e8e:	b8 03 00 00 00       	mov    $0x3,%eax
  408e93:	5d                   	pop    %rbp
  408e94:	c3                   	retq   

0000000000408e95 <luaB_pairs>:
  408e95:	55                   	push   %rbp
  408e96:	48 89 e5             	mov    %rsp,%rbp
  408e99:	48 83 ec 10          	sub    $0x10,%rsp
  408e9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408ea5:	be 01 00 00 00       	mov    $0x1,%esi
  408eaa:	48 89 c7             	mov    %rax,%rdi
  408ead:	e8 d3 d8 ff ff       	callq  406785 <luaL_checkany>
  408eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408eb6:	ba 27 d3 43 00       	mov    $0x43d327,%edx
  408ebb:	be 01 00 00 00       	mov    $0x1,%esi
  408ec0:	48 89 c7             	mov    %rax,%rdi
  408ec3:	e8 77 e8 ff ff       	callq  40773f <luaL_getmetafield>
  408ec8:	85 c0                	test   %eax,%eax
  408eca:	75 35                	jne    408f01 <luaB_pairs+0x6c>
  408ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408ed0:	ba 00 00 00 00       	mov    $0x0,%edx
  408ed5:	be 1d 8e 40 00       	mov    $0x408e1d,%esi
  408eda:	48 89 c7             	mov    %rax,%rdi
  408edd:	e8 09 a1 ff ff       	callq  402feb <lua_pushcclosure>
  408ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408ee6:	be 01 00 00 00       	mov    $0x1,%esi
  408eeb:	48 89 c7             	mov    %rax,%rdi
  408eee:	e8 1c 94 ff ff       	callq  40230f <lua_pushvalue>
  408ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408ef7:	48 89 c7             	mov    %rax,%rdi
  408efa:	e8 a6 9d ff ff       	callq  402ca5 <lua_pushnil>
  408eff:	eb 32                	jmp    408f33 <luaB_pairs+0x9e>
  408f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408f05:	be 01 00 00 00       	mov    $0x1,%esi
  408f0a:	48 89 c7             	mov    %rax,%rdi
  408f0d:	e8 fd 93 ff ff       	callq  40230f <lua_pushvalue>
  408f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408f16:	41 b8 7f 8e 40 00    	mov    $0x408e7f,%r8d
  408f1c:	b9 00 00 00 00       	mov    $0x0,%ecx
  408f21:	ba 03 00 00 00       	mov    $0x3,%edx
  408f26:	be 01 00 00 00       	mov    $0x1,%esi
  408f2b:	48 89 c7             	mov    %rax,%rdi
  408f2e:	e8 7b b5 ff ff       	callq  4044ae <lua_callk>
  408f33:	b8 03 00 00 00       	mov    $0x3,%eax
  408f38:	c9                   	leaveq 
  408f39:	c3                   	retq   

0000000000408f3a <ipairsaux>:
  408f3a:	55                   	push   %rbp
  408f3b:	48 89 e5             	mov    %rsp,%rbp
  408f3e:	48 83 ec 20          	sub    $0x20,%rsp
  408f42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  408f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f4a:	be 02 00 00 00       	mov    $0x2,%esi
  408f4f:	48 89 c7             	mov    %rax,%rdi
  408f52:	e8 40 da ff ff       	callq  406997 <luaL_checkinteger>
  408f57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408f5f:	48 83 c0 01          	add    $0x1,%rax
  408f63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408f67:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  408f6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f6f:	48 89 d6             	mov    %rdx,%rsi
  408f72:	48 89 c7             	mov    %rax,%rdi
  408f75:	e8 9b 9d ff ff       	callq  402d15 <lua_pushinteger>
  408f7a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  408f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f82:	be 01 00 00 00       	mov    $0x1,%esi
  408f87:	48 89 c7             	mov    %rax,%rdi
  408f8a:	e8 62 a5 ff ff       	callq  4034f1 <lua_geti>
  408f8f:	85 c0                	test   %eax,%eax
  408f91:	75 07                	jne    408f9a <ipairsaux+0x60>
  408f93:	b8 01 00 00 00       	mov    $0x1,%eax
  408f98:	eb 05                	jmp    408f9f <ipairsaux+0x65>
  408f9a:	b8 02 00 00 00       	mov    $0x2,%eax
  408f9f:	c9                   	leaveq 
  408fa0:	c3                   	retq   

0000000000408fa1 <luaB_ipairs>:
  408fa1:	55                   	push   %rbp
  408fa2:	48 89 e5             	mov    %rsp,%rbp
  408fa5:	48 83 ec 10          	sub    $0x10,%rsp
  408fa9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  408fad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408fb1:	be 01 00 00 00       	mov    $0x1,%esi
  408fb6:	48 89 c7             	mov    %rax,%rdi
  408fb9:	e8 c7 d7 ff ff       	callq  406785 <luaL_checkany>
  408fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408fc2:	ba 00 00 00 00       	mov    $0x0,%edx
  408fc7:	be 3a 8f 40 00       	mov    $0x408f3a,%esi
  408fcc:	48 89 c7             	mov    %rax,%rdi
  408fcf:	e8 17 a0 ff ff       	callq  402feb <lua_pushcclosure>
  408fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408fd8:	be 01 00 00 00       	mov    $0x1,%esi
  408fdd:	48 89 c7             	mov    %rax,%rdi
  408fe0:	e8 2a 93 ff ff       	callq  40230f <lua_pushvalue>
  408fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408fe9:	be 00 00 00 00       	mov    $0x0,%esi
  408fee:	48 89 c7             	mov    %rax,%rdi
  408ff1:	e8 1f 9d ff ff       	callq  402d15 <lua_pushinteger>
  408ff6:	b8 03 00 00 00       	mov    $0x3,%eax
  408ffb:	c9                   	leaveq 
  408ffc:	c3                   	retq   

0000000000408ffd <load_aux>:
  408ffd:	55                   	push   %rbp
  408ffe:	48 89 e5             	mov    %rsp,%rbp
  409001:	48 83 ec 10          	sub    $0x10,%rsp
  409005:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409009:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40900c:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40900f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  409013:	0f 94 c0             	sete   %al
  409016:	0f b6 c0             	movzbl %al,%eax
  409019:	48 85 c0             	test   %rax,%rax
  40901c:	74 4a                	je     409068 <load_aux+0x6b>
  40901e:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  409022:	74 3d                	je     409061 <load_aux+0x64>
  409024:	8b 55 f0             	mov    -0x10(%rbp),%edx
  409027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40902b:	89 d6                	mov    %edx,%esi
  40902d:	48 89 c7             	mov    %rax,%rdi
  409030:	e8 da 92 ff ff       	callq  40230f <lua_pushvalue>
  409035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409039:	ba 01 00 00 00       	mov    $0x1,%edx
  40903e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409043:	48 89 c7             	mov    %rax,%rdi
  409046:	e8 54 c5 ff ff       	callq  40559f <lua_setupvalue>
  40904b:	48 85 c0             	test   %rax,%rax
  40904e:	75 11                	jne    409061 <load_aux+0x64>
  409050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409054:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409059:	48 89 c7             	mov    %rax,%rdi
  40905c:	e8 23 8f ff ff       	callq  401f84 <lua_settop>
  409061:	b8 01 00 00 00       	mov    $0x1,%eax
  409066:	eb 27                	jmp    40908f <load_aux+0x92>
  409068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40906c:	48 89 c7             	mov    %rax,%rdi
  40906f:	e8 31 9c ff ff       	callq  402ca5 <lua_pushnil>
  409074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409078:	ba 01 00 00 00       	mov    $0x1,%edx
  40907d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409082:	48 89 c7             	mov    %rax,%rdi
  409085:	e8 e4 90 ff ff       	callq  40216e <lua_rotate>
  40908a:	b8 02 00 00 00       	mov    $0x2,%eax
  40908f:	c9                   	leaveq 
  409090:	c3                   	retq   

0000000000409091 <luaB_loadfile>:
  409091:	55                   	push   %rbp
  409092:	48 89 e5             	mov    %rsp,%rbp
  409095:	48 83 ec 30          	sub    $0x30,%rsp
  409099:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40909d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4090a1:	b9 00 00 00 00       	mov    $0x0,%ecx
  4090a6:	ba 00 00 00 00       	mov    $0x0,%edx
  4090ab:	be 01 00 00 00       	mov    $0x1,%esi
  4090b0:	48 89 c7             	mov    %rax,%rdi
  4090b3:	e8 6c d7 ff ff       	callq  406824 <luaL_optlstring>
  4090b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4090bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4090c0:	b9 00 00 00 00       	mov    $0x0,%ecx
  4090c5:	ba 00 00 00 00       	mov    $0x0,%edx
  4090ca:	be 02 00 00 00       	mov    $0x2,%esi
  4090cf:	48 89 c7             	mov    %rax,%rdi
  4090d2:	e8 4d d7 ff ff       	callq  406824 <luaL_optlstring>
  4090d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4090db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4090df:	be 03 00 00 00       	mov    $0x3,%esi
  4090e4:	48 89 c7             	mov    %rax,%rdi
  4090e7:	e8 87 92 ff ff       	callq  402373 <lua_type>
  4090ec:	83 f8 ff             	cmp    $0xffffffff,%eax
  4090ef:	74 07                	je     4090f8 <luaB_loadfile+0x67>
  4090f1:	b8 03 00 00 00       	mov    $0x3,%eax
  4090f6:	eb 05                	jmp    4090fd <luaB_loadfile+0x6c>
  4090f8:	b8 00 00 00 00       	mov    $0x0,%eax
  4090fd:	89 45 ec             	mov    %eax,-0x14(%rbp)
  409100:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  409104:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  409108:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40910c:	48 89 ce             	mov    %rcx,%rsi
  40910f:	48 89 c7             	mov    %rax,%rdi
  409112:	e8 b8 e2 ff ff       	callq  4073cf <luaL_loadfilex>
  409117:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40911a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40911d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  409120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409124:	89 ce                	mov    %ecx,%esi
  409126:	48 89 c7             	mov    %rax,%rdi
  409129:	e8 cf fe ff ff       	callq  408ffd <load_aux>
  40912e:	c9                   	leaveq 
  40912f:	c3                   	retq   

0000000000409130 <generic_reader>:
  409130:	55                   	push   %rbp
  409131:	48 89 e5             	mov    %rsp,%rbp
  409134:	48 83 ec 20          	sub    $0x20,%rsp
  409138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40913c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  409140:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  409144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409148:	ba 2f d3 43 00       	mov    $0x43d32f,%edx
  40914d:	be 02 00 00 00       	mov    $0x2,%esi
  409152:	48 89 c7             	mov    %rax,%rdi
  409155:	e8 76 d5 ff ff       	callq  4066d0 <luaL_checkstack>
  40915a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40915e:	be 01 00 00 00       	mov    $0x1,%esi
  409163:	48 89 c7             	mov    %rax,%rdi
  409166:	e8 a4 91 ff ff       	callq  40230f <lua_pushvalue>
  40916b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40916f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409175:	b9 00 00 00 00       	mov    $0x0,%ecx
  40917a:	ba 01 00 00 00       	mov    $0x1,%edx
  40917f:	be 00 00 00 00       	mov    $0x0,%esi
  409184:	48 89 c7             	mov    %rax,%rdi
  409187:	e8 22 b3 ff ff       	callq  4044ae <lua_callk>
  40918c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409190:	be ff ff ff ff       	mov    $0xffffffff,%esi
  409195:	48 89 c7             	mov    %rax,%rdi
  409198:	e8 d6 91 ff ff       	callq  402373 <lua_type>
  40919d:	85 c0                	test   %eax,%eax
  40919f:	75 23                	jne    4091c4 <generic_reader+0x94>
  4091a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4091a5:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4091aa:	48 89 c7             	mov    %rax,%rdi
  4091ad:	e8 d2 8d ff ff       	callq  401f84 <lua_settop>
  4091b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4091b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4091bd:	b8 00 00 00 00       	mov    $0x0,%eax
  4091c2:	eb 70                	jmp    409234 <generic_reader+0x104>
  4091c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4091c8:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4091cd:	48 89 c7             	mov    %rax,%rdi
  4091d0:	e8 f3 92 ff ff       	callq  4024c8 <lua_isstring>
  4091d5:	85 c0                	test   %eax,%eax
  4091d7:	0f 94 c0             	sete   %al
  4091da:	0f b6 c0             	movzbl %al,%eax
  4091dd:	48 85 c0             	test   %rax,%rax
  4091e0:	74 16                	je     4091f8 <generic_reader+0xc8>
  4091e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4091e6:	be 50 d3 43 00       	mov    $0x43d350,%esi
  4091eb:	48 89 c7             	mov    %rax,%rdi
  4091ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4091f3:	e8 f8 cf ff ff       	callq  4061f0 <luaL_error>
  4091f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4091fc:	ba 05 00 00 00       	mov    $0x5,%edx
  409201:	be ff ff ff ff       	mov    $0xffffffff,%esi
  409206:	48 89 c7             	mov    %rax,%rdi
  409209:	e8 1f 90 ff ff       	callq  40222d <lua_copy>
  40920e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409212:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409217:	48 89 c7             	mov    %rax,%rdi
  40921a:	e8 65 8d ff ff       	callq  401f84 <lua_settop>
  40921f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409227:	be 05 00 00 00       	mov    $0x5,%esi
  40922c:	48 89 c7             	mov    %rax,%rdi
  40922f:	e8 39 97 ff ff       	callq  40296d <lua_tolstring>
  409234:	c9                   	leaveq 
  409235:	c3                   	retq   

0000000000409236 <luaB_load>:
  409236:	55                   	push   %rbp
  409237:	48 89 e5             	mov    %rsp,%rbp
  40923a:	48 83 ec 50          	sub    $0x50,%rsp
  40923e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  409242:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  409246:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40924a:	be 01 00 00 00       	mov    $0x1,%esi
  40924f:	48 89 c7             	mov    %rax,%rdi
  409252:	e8 16 97 ff ff       	callq  40296d <lua_tolstring>
  409257:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40925b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40925f:	b9 00 00 00 00       	mov    $0x0,%ecx
  409264:	ba 75 d3 43 00       	mov    $0x43d375,%edx
  409269:	be 03 00 00 00       	mov    $0x3,%esi
  40926e:	48 89 c7             	mov    %rax,%rdi
  409271:	e8 ae d5 ff ff       	callq  406824 <luaL_optlstring>
  409276:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40927a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40927e:	be 04 00 00 00       	mov    $0x4,%esi
  409283:	48 89 c7             	mov    %rax,%rdi
  409286:	e8 e8 90 ff ff       	callq  402373 <lua_type>
  40928b:	83 f8 ff             	cmp    $0xffffffff,%eax
  40928e:	74 07                	je     409297 <luaB_load+0x61>
  409290:	b8 04 00 00 00       	mov    $0x4,%eax
  409295:	eb 05                	jmp    40929c <luaB_load+0x66>
  409297:	b8 00 00 00 00       	mov    $0x0,%eax
  40929c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40929f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4092a4:	74 42                	je     4092e8 <luaB_load+0xb2>
  4092a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4092aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4092ae:	b9 00 00 00 00       	mov    $0x0,%ecx
  4092b3:	be 02 00 00 00       	mov    $0x2,%esi
  4092b8:	48 89 c7             	mov    %rax,%rdi
  4092bb:	e8 64 d5 ff ff       	callq  406824 <luaL_optlstring>
  4092c0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4092c4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4092c8:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4092cc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4092d0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4092d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4092d8:	49 89 f8             	mov    %rdi,%r8
  4092db:	48 89 c7             	mov    %rax,%rdi
  4092de:	e8 cd e3 ff ff       	callq  4076b0 <luaL_loadbufferx>
  4092e3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4092e6:	eb 6d                	jmp    409355 <luaB_load+0x11f>
  4092e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4092ec:	b9 00 00 00 00       	mov    $0x0,%ecx
  4092f1:	ba 78 d3 43 00       	mov    $0x43d378,%edx
  4092f6:	be 02 00 00 00       	mov    $0x2,%esi
  4092fb:	48 89 c7             	mov    %rax,%rdi
  4092fe:	e8 21 d5 ff ff       	callq  406824 <luaL_optlstring>
  409303:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  409307:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40930b:	ba 06 00 00 00       	mov    $0x6,%edx
  409310:	be 01 00 00 00       	mov    $0x1,%esi
  409315:	48 89 c7             	mov    %rax,%rdi
  409318:	e8 20 d4 ff ff       	callq  40673d <luaL_checktype>
  40931d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409321:	be 05 00 00 00       	mov    $0x5,%esi
  409326:	48 89 c7             	mov    %rax,%rdi
  409329:	e8 56 8c ff ff       	callq  401f84 <lua_settop>
  40932e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409332:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  409336:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40933a:	49 89 c8             	mov    %rcx,%r8
  40933d:	48 89 d1             	mov    %rdx,%rcx
  409340:	ba 00 00 00 00       	mov    $0x0,%edx
  409345:	be 30 91 40 00       	mov    $0x409130,%esi
  40934a:	48 89 c7             	mov    %rax,%rdi
  40934d:	e8 5b b4 ff ff       	callq  4047ad <lua_load>
  409352:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409355:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409358:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40935b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40935f:	89 ce                	mov    %ecx,%esi
  409361:	48 89 c7             	mov    %rax,%rdi
  409364:	e8 94 fc ff ff       	callq  408ffd <load_aux>
  409369:	c9                   	leaveq 
  40936a:	c3                   	retq   

000000000040936b <dofilecont>:
  40936b:	55                   	push   %rbp
  40936c:	48 89 e5             	mov    %rsp,%rbp
  40936f:	48 83 ec 20          	sub    $0x20,%rsp
  409373:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409377:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40937a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40937e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409382:	48 89 c7             	mov    %rax,%rdi
  409385:	e8 cf 8b ff ff       	callq  401f59 <lua_gettop>
  40938a:	83 e8 01             	sub    $0x1,%eax
  40938d:	c9                   	leaveq 
  40938e:	c3                   	retq   

000000000040938f <luaB_dofile>:
  40938f:	55                   	push   %rbp
  409390:	48 89 e5             	mov    %rsp,%rbp
  409393:	48 83 ec 20          	sub    $0x20,%rsp
  409397:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40939b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40939f:	b9 00 00 00 00       	mov    $0x0,%ecx
  4093a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4093a9:	be 01 00 00 00       	mov    $0x1,%esi
  4093ae:	48 89 c7             	mov    %rax,%rdi
  4093b1:	e8 6e d4 ff ff       	callq  406824 <luaL_optlstring>
  4093b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4093ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4093be:	be 01 00 00 00       	mov    $0x1,%esi
  4093c3:	48 89 c7             	mov    %rax,%rdi
  4093c6:	e8 b9 8b ff ff       	callq  401f84 <lua_settop>
  4093cb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4093cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4093d3:	ba 00 00 00 00       	mov    $0x0,%edx
  4093d8:	48 89 ce             	mov    %rcx,%rsi
  4093db:	48 89 c7             	mov    %rax,%rdi
  4093de:	e8 ec df ff ff       	callq  4073cf <luaL_loadfilex>
  4093e3:	85 c0                	test   %eax,%eax
  4093e5:	0f 95 c0             	setne  %al
  4093e8:	0f b6 c0             	movzbl %al,%eax
  4093eb:	48 85 c0             	test   %rax,%rax
  4093ee:	74 0e                	je     4093fe <luaB_dofile+0x6f>
  4093f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4093f4:	48 89 c7             	mov    %rax,%rdi
  4093f7:	e8 fd bb ff ff       	callq  404ff9 <lua_error>
  4093fc:	eb 37                	jmp    409435 <luaB_dofile+0xa6>
  4093fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409402:	41 b8 6b 93 40 00    	mov    $0x40936b,%r8d
  409408:	b9 00 00 00 00       	mov    $0x0,%ecx
  40940d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  409412:	be 00 00 00 00       	mov    $0x0,%esi
  409417:	48 89 c7             	mov    %rax,%rdi
  40941a:	e8 8f b0 ff ff       	callq  4044ae <lua_callk>
  40941f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409423:	ba 00 00 00 00       	mov    $0x0,%edx
  409428:	be 00 00 00 00       	mov    $0x0,%esi
  40942d:	48 89 c7             	mov    %rax,%rdi
  409430:	e8 36 ff ff ff       	callq  40936b <dofilecont>
  409435:	c9                   	leaveq 
  409436:	c3                   	retq   

0000000000409437 <luaB_assert>:
  409437:	55                   	push   %rbp
  409438:	48 89 e5             	mov    %rsp,%rbp
  40943b:	48 83 ec 10          	sub    $0x10,%rsp
  40943f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409447:	be 01 00 00 00       	mov    $0x1,%esi
  40944c:	48 89 c7             	mov    %rax,%rdi
  40944f:	e8 c9 94 ff ff       	callq  40291d <lua_toboolean>
  409454:	85 c0                	test   %eax,%eax
  409456:	0f 95 c0             	setne  %al
  409459:	0f b6 c0             	movzbl %al,%eax
  40945c:	48 85 c0             	test   %rax,%rax
  40945f:	74 0e                	je     40946f <luaB_assert+0x38>
  409461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409465:	48 89 c7             	mov    %rax,%rdi
  409468:	e8 ec 8a ff ff       	callq  401f59 <lua_gettop>
  40946d:	eb 66                	jmp    4094d5 <luaB_assert+0x9e>
  40946f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409473:	be 01 00 00 00       	mov    $0x1,%esi
  409478:	48 89 c7             	mov    %rax,%rdi
  40947b:	e8 05 d3 ff ff       	callq  406785 <luaL_checkany>
  409480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409484:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  409489:	be 01 00 00 00       	mov    $0x1,%esi
  40948e:	48 89 c7             	mov    %rax,%rdi
  409491:	e8 d8 8c ff ff       	callq  40216e <lua_rotate>
  409496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40949a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40949f:	48 89 c7             	mov    %rax,%rdi
  4094a2:	e8 dd 8a ff ff       	callq  401f84 <lua_settop>
  4094a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4094ab:	be 80 d3 43 00       	mov    $0x43d380,%esi
  4094b0:	48 89 c7             	mov    %rax,%rdi
  4094b3:	e8 56 99 ff ff       	callq  402e0e <lua_pushstring>
  4094b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4094bc:	be 01 00 00 00       	mov    $0x1,%esi
  4094c1:	48 89 c7             	mov    %rax,%rdi
  4094c4:	e8 bb 8a ff ff       	callq  401f84 <lua_settop>
  4094c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4094cd:	48 89 c7             	mov    %rax,%rdi
  4094d0:	e8 29 f2 ff ff       	callq  4086fe <luaB_error>
  4094d5:	c9                   	leaveq 
  4094d6:	c3                   	retq   

00000000004094d7 <luaB_select>:
  4094d7:	55                   	push   %rbp
  4094d8:	48 89 e5             	mov    %rsp,%rbp
  4094db:	48 83 ec 20          	sub    $0x20,%rsp
  4094df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4094e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4094e7:	48 89 c7             	mov    %rax,%rdi
  4094ea:	e8 6a 8a ff ff       	callq  401f59 <lua_gettop>
  4094ef:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4094f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4094f6:	be 01 00 00 00       	mov    $0x1,%esi
  4094fb:	48 89 c7             	mov    %rax,%rdi
  4094fe:	e8 70 8e ff ff       	callq  402373 <lua_type>
  409503:	83 f8 04             	cmp    $0x4,%eax
  409506:	75 3c                	jne    409544 <luaB_select+0x6d>
  409508:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40950c:	ba 00 00 00 00       	mov    $0x0,%edx
  409511:	be 01 00 00 00       	mov    $0x1,%esi
  409516:	48 89 c7             	mov    %rax,%rdi
  409519:	e8 4f 94 ff ff       	callq  40296d <lua_tolstring>
  40951e:	0f b6 00             	movzbl (%rax),%eax
  409521:	3c 23                	cmp    $0x23,%al
  409523:	75 1f                	jne    409544 <luaB_select+0x6d>
  409525:	8b 45 f4             	mov    -0xc(%rbp),%eax
  409528:	83 e8 01             	sub    $0x1,%eax
  40952b:	48 63 d0             	movslq %eax,%rdx
  40952e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409532:	48 89 d6             	mov    %rdx,%rsi
  409535:	48 89 c7             	mov    %rax,%rdi
  409538:	e8 d8 97 ff ff       	callq  402d15 <lua_pushinteger>
  40953d:	b8 01 00 00 00       	mov    $0x1,%eax
  409542:	eb 6f                	jmp    4095b3 <luaB_select+0xdc>
  409544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409548:	be 01 00 00 00       	mov    $0x1,%esi
  40954d:	48 89 c7             	mov    %rax,%rdi
  409550:	e8 42 d4 ff ff       	callq  406997 <luaL_checkinteger>
  409555:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409559:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40955e:	79 0b                	jns    40956b <luaB_select+0x94>
  409560:	8b 45 f4             	mov    -0xc(%rbp),%eax
  409563:	48 98                	cltq   
  409565:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  409569:	eb 14                	jmp    40957f <luaB_select+0xa8>
  40956b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40956e:	48 98                	cltq   
  409570:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  409574:	7e 09                	jle    40957f <luaB_select+0xa8>
  409576:	8b 45 f4             	mov    -0xc(%rbp),%eax
  409579:	48 98                	cltq   
  40957b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40957f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  409584:	0f 9f c0             	setg   %al
  409587:	0f b6 c0             	movzbl %al,%eax
  40958a:	48 85 c0             	test   %rax,%rax
  40958d:	75 18                	jne    4095a7 <luaB_select+0xd0>
  40958f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409593:	ba 92 d3 43 00       	mov    $0x43d392,%edx
  409598:	be 01 00 00 00       	mov    $0x1,%esi
  40959d:	48 89 c7             	mov    %rax,%rdi
  4095a0:	e8 4d c9 ff ff       	callq  405ef2 <luaL_argerror>
  4095a5:	85 c0                	test   %eax,%eax
  4095a7:	90                   	nop
  4095a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4095ac:	89 c2                	mov    %eax,%edx
  4095ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4095b1:	29 d0                	sub    %edx,%eax
  4095b3:	c9                   	leaveq 
  4095b4:	c3                   	retq   

00000000004095b5 <finishpcall>:
  4095b5:	55                   	push   %rbp
  4095b6:	48 89 e5             	mov    %rsp,%rbp
  4095b9:	48 83 ec 20          	sub    $0x20,%rsp
  4095bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4095c1:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4095c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4095c8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4095cc:	74 0d                	je     4095db <finishpcall+0x26>
  4095ce:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
  4095d2:	74 07                	je     4095db <finishpcall+0x26>
  4095d4:	b8 01 00 00 00       	mov    $0x1,%eax
  4095d9:	eb 05                	jmp    4095e0 <finishpcall+0x2b>
  4095db:	b8 00 00 00 00       	mov    $0x0,%eax
  4095e0:	85 c0                	test   %eax,%eax
  4095e2:	0f 95 c0             	setne  %al
  4095e5:	0f b6 c0             	movzbl %al,%eax
  4095e8:	48 85 c0             	test   %rax,%rax
  4095eb:	74 29                	je     409616 <finishpcall+0x61>
  4095ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4095f1:	be 00 00 00 00       	mov    $0x0,%esi
  4095f6:	48 89 c7             	mov    %rax,%rdi
  4095f9:	e8 3a 9b ff ff       	callq  403138 <lua_pushboolean>
  4095fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409602:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409607:	48 89 c7             	mov    %rax,%rdi
  40960a:	e8 00 8d ff ff       	callq  40230f <lua_pushvalue>
  40960f:	b8 02 00 00 00       	mov    $0x2,%eax
  409614:	eb 16                	jmp    40962c <finishpcall+0x77>
  409616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40961a:	48 89 c7             	mov    %rax,%rdi
  40961d:	e8 37 89 ff ff       	callq  401f59 <lua_gettop>
  409622:	89 c2                	mov    %eax,%edx
  409624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409628:	29 c2                	sub    %eax,%edx
  40962a:	89 d0                	mov    %edx,%eax
  40962c:	c9                   	leaveq 
  40962d:	c3                   	retq   

000000000040962e <luaB_pcall>:
  40962e:	55                   	push   %rbp
  40962f:	48 89 e5             	mov    %rsp,%rbp
  409632:	48 83 ec 20          	sub    $0x20,%rsp
  409636:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40963a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40963e:	be 01 00 00 00       	mov    $0x1,%esi
  409643:	48 89 c7             	mov    %rax,%rdi
  409646:	e8 3a d1 ff ff       	callq  406785 <luaL_checkany>
  40964b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40964f:	be 01 00 00 00       	mov    $0x1,%esi
  409654:	48 89 c7             	mov    %rax,%rdi
  409657:	e8 dc 9a ff ff       	callq  403138 <lua_pushboolean>
  40965c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409660:	ba 01 00 00 00       	mov    $0x1,%edx
  409665:	be 01 00 00 00       	mov    $0x1,%esi
  40966a:	48 89 c7             	mov    %rax,%rdi
  40966d:	e8 fc 8a ff ff       	callq  40216e <lua_rotate>
  409672:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409676:	48 89 c7             	mov    %rax,%rdi
  409679:	e8 db 88 ff ff       	callq  401f59 <lua_gettop>
  40967e:	8d 70 fe             	lea    -0x2(%rax),%esi
  409681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409685:	41 b9 b5 95 40 00    	mov    $0x4095b5,%r9d
  40968b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409691:	b9 00 00 00 00       	mov    $0x0,%ecx
  409696:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40969b:	48 89 c7             	mov    %rax,%rdi
  40969e:	e8 20 af ff ff       	callq  4045c3 <lua_pcallk>
  4096a3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4096a6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4096a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4096ad:	ba 00 00 00 00       	mov    $0x0,%edx
  4096b2:	89 ce                	mov    %ecx,%esi
  4096b4:	48 89 c7             	mov    %rax,%rdi
  4096b7:	e8 f9 fe ff ff       	callq  4095b5 <finishpcall>
  4096bc:	c9                   	leaveq 
  4096bd:	c3                   	retq   

00000000004096be <luaB_xpcall>:
  4096be:	55                   	push   %rbp
  4096bf:	48 89 e5             	mov    %rsp,%rbp
  4096c2:	48 83 ec 20          	sub    $0x20,%rsp
  4096c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4096ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4096ce:	48 89 c7             	mov    %rax,%rdi
  4096d1:	e8 83 88 ff ff       	callq  401f59 <lua_gettop>
  4096d6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4096d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4096dd:	ba 06 00 00 00       	mov    $0x6,%edx
  4096e2:	be 02 00 00 00       	mov    $0x2,%esi
  4096e7:	48 89 c7             	mov    %rax,%rdi
  4096ea:	e8 4e d0 ff ff       	callq  40673d <luaL_checktype>
  4096ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4096f3:	be 01 00 00 00       	mov    $0x1,%esi
  4096f8:	48 89 c7             	mov    %rax,%rdi
  4096fb:	e8 38 9a ff ff       	callq  403138 <lua_pushboolean>
  409700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409704:	be 01 00 00 00       	mov    $0x1,%esi
  409709:	48 89 c7             	mov    %rax,%rdi
  40970c:	e8 fe 8b ff ff       	callq  40230f <lua_pushvalue>
  409711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409715:	ba 02 00 00 00       	mov    $0x2,%edx
  40971a:	be 03 00 00 00       	mov    $0x3,%esi
  40971f:	48 89 c7             	mov    %rax,%rdi
  409722:	e8 47 8a ff ff       	callq  40216e <lua_rotate>
  409727:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40972a:	8d 70 fe             	lea    -0x2(%rax),%esi
  40972d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409731:	41 b9 b5 95 40 00    	mov    $0x4095b5,%r9d
  409737:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  40973d:	b9 02 00 00 00       	mov    $0x2,%ecx
  409742:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  409747:	48 89 c7             	mov    %rax,%rdi
  40974a:	e8 74 ae ff ff       	callq  4045c3 <lua_pcallk>
  40974f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  409752:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  409755:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409759:	ba 02 00 00 00       	mov    $0x2,%edx
  40975e:	89 ce                	mov    %ecx,%esi
  409760:	48 89 c7             	mov    %rax,%rdi
  409763:	e8 4d fe ff ff       	callq  4095b5 <finishpcall>
  409768:	c9                   	leaveq 
  409769:	c3                   	retq   

000000000040976a <luaB_tostring>:
  40976a:	55                   	push   %rbp
  40976b:	48 89 e5             	mov    %rsp,%rbp
  40976e:	48 83 ec 10          	sub    $0x10,%rsp
  409772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40977a:	be 01 00 00 00       	mov    $0x1,%esi
  40977f:	48 89 c7             	mov    %rax,%rdi
  409782:	e8 fe cf ff ff       	callq  406785 <luaL_checkany>
  409787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40978b:	ba 00 00 00 00       	mov    $0x0,%edx
  409790:	be 01 00 00 00       	mov    $0x1,%esi
  409795:	48 89 c7             	mov    %rax,%rdi
  409798:	e8 33 e1 ff ff       	callq  4078d0 <luaL_tolstring>
  40979d:	b8 01 00 00 00       	mov    $0x1,%eax
  4097a2:	c9                   	leaveq 
  4097a3:	c3                   	retq   

00000000004097a4 <luaopen_base>:
  4097a4:	55                   	push   %rbp
  4097a5:	48 89 e5             	mov    %rsp,%rbp
  4097a8:	48 83 ec 10          	sub    $0x10,%rsp
  4097ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4097b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4097b4:	ba 02 00 00 00       	mov    $0x2,%edx
  4097b9:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  4097be:	48 89 c7             	mov    %rax,%rdi
  4097c1:	e8 99 9f ff ff       	callq  40375f <lua_rawgeti>
  4097c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4097ca:	ba 00 00 00 00       	mov    $0x0,%edx
  4097cf:	be 80 d4 43 00       	mov    $0x43d480,%esi
  4097d4:	48 89 c7             	mov    %rax,%rdi
  4097d7:	e8 4e e3 ff ff       	callq  407b2a <luaL_setfuncs>
  4097dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4097e0:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4097e5:	48 89 c7             	mov    %rax,%rdi
  4097e8:	e8 22 8b ff ff       	callq  40230f <lua_pushvalue>
  4097ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4097f1:	ba 56 d4 43 00       	mov    $0x43d456,%edx
  4097f6:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4097fb:	48 89 c7             	mov    %rax,%rdi
  4097fe:	e8 cf a5 ff ff       	callq  403dd2 <lua_setfield>
  409803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409807:	be 20 d6 43 00       	mov    $0x43d620,%esi
  40980c:	48 89 c7             	mov    %rax,%rdi
  40980f:	e8 fa 95 ff ff       	callq  402e0e <lua_pushstring>
  409814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409818:	ba 59 d4 43 00       	mov    $0x43d459,%edx
  40981d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  409822:	48 89 c7             	mov    %rax,%rdi
  409825:	e8 a8 a5 ff ff       	callq  403dd2 <lua_setfield>
  40982a:	b8 01 00 00 00       	mov    $0x1,%eax
  40982f:	c9                   	leaveq 
  409830:	c3                   	retq   

0000000000409831 <luaK_semerror>:
  409831:	55                   	push   %rbp
  409832:	48 89 e5             	mov    %rsp,%rbp
  409835:	48 83 ec 10          	sub    $0x10,%rsp
  409839:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40983d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  409841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409845:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  40984c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  409850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409854:	48 89 d6             	mov    %rdx,%rsi
  409857:	48 89 c7             	mov    %rax,%rdi
  40985a:	e8 3f 0a 01 00       	callq  41a29e <luaX_syntaxerror>

000000000040985f <tonumeral>:
  40985f:	55                   	push   %rbp
  409860:	48 89 e5             	mov    %rsp,%rbp
  409863:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409867:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40986b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40986f:	8b 50 10             	mov    0x10(%rax),%edx
  409872:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409876:	8b 40 14             	mov    0x14(%rax),%eax
  409879:	39 c2                	cmp    %eax,%edx
  40987b:	74 07                	je     409884 <tonumeral+0x25>
  40987d:	b8 00 00 00 00       	mov    $0x0,%eax
  409882:	eb 71                	jmp    4098f5 <tonumeral+0x96>
  409884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409888:	8b 00                	mov    (%rax),%eax
  40988a:	83 f8 05             	cmp    $0x5,%eax
  40988d:	74 32                	je     4098c1 <tonumeral+0x62>
  40988f:	83 f8 06             	cmp    $0x6,%eax
  409892:	75 5c                	jne    4098f0 <tonumeral+0x91>
  409894:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  409899:	74 1f                	je     4098ba <tonumeral+0x5b>
  40989b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40989f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4098a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4098a7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4098ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4098af:	48 89 10             	mov    %rdx,(%rax)
  4098b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4098b6:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4098ba:	b8 01 00 00 00       	mov    $0x1,%eax
  4098bf:	eb 34                	jmp    4098f5 <tonumeral+0x96>
  4098c1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4098c6:	74 21                	je     4098e9 <tonumeral+0x8a>
  4098c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4098cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4098d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4098d4:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
  4098d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4098dd:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  4098e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4098e5:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  4098e9:	b8 01 00 00 00       	mov    $0x1,%eax
  4098ee:	eb 05                	jmp    4098f5 <tonumeral+0x96>
  4098f0:	b8 00 00 00 00       	mov    $0x0,%eax
  4098f5:	5d                   	pop    %rbp
  4098f6:	c3                   	retq   

00000000004098f7 <const2val>:
  4098f7:	55                   	push   %rbp
  4098f8:	48 89 e5             	mov    %rsp,%rbp
  4098fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4098ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  409903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409907:	48 8b 40 10          	mov    0x10(%rax),%rax
  40990b:	48 8b 40 58          	mov    0x58(%rax),%rax
  40990f:	48 8b 08             	mov    (%rax),%rcx
  409912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409916:	8b 40 08             	mov    0x8(%rax),%eax
  409919:	48 63 d0             	movslq %eax,%rdx
  40991c:	48 89 d0             	mov    %rdx,%rax
  40991f:	48 01 c0             	add    %rax,%rax
  409922:	48 01 d0             	add    %rdx,%rax
  409925:	48 c1 e0 03          	shl    $0x3,%rax
  409929:	48 01 c8             	add    %rcx,%rax
  40992c:	5d                   	pop    %rbp
  40992d:	c3                   	retq   

000000000040992e <luaK_exp2const>:
  40992e:	55                   	push   %rbp
  40992f:	48 89 e5             	mov    %rsp,%rbp
  409932:	48 83 ec 38          	sub    $0x38,%rsp
  409936:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40993a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40993e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  409942:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409946:	8b 50 10             	mov    0x10(%rax),%edx
  409949:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40994d:	8b 40 14             	mov    0x14(%rax),%eax
  409950:	39 c2                	cmp    %eax,%edx
  409952:	74 0a                	je     40995e <luaK_exp2const+0x30>
  409954:	b8 00 00 00 00       	mov    $0x0,%eax
  409959:	e9 e1 00 00 00       	jmpq   409a3f <luaK_exp2const+0x111>
  40995e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409962:	8b 00                	mov    (%rax),%eax
  409964:	83 f8 0b             	cmp    $0xb,%eax
  409967:	0f 87 bf 00 00 00    	ja     409a2c <luaK_exp2const+0xfe>
  40996d:	89 c0                	mov    %eax,%eax
  40996f:	48 8b 04 c5 f0 d6 43 	mov    0x43d6f0(,%rax,8),%rax
  409976:	00 
  409977:	ff e0                	jmpq   *%rax
  409979:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40997d:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  409981:	b8 01 00 00 00       	mov    $0x1,%eax
  409986:	e9 b4 00 00 00       	jmpq   409a3f <luaK_exp2const+0x111>
  40998b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40998f:	c6 40 08 11          	movb   $0x11,0x8(%rax)
  409993:	b8 01 00 00 00       	mov    $0x1,%eax
  409998:	e9 a2 00 00 00       	jmpq   409a3f <luaK_exp2const+0x111>
  40999d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099a1:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4099a5:	b8 01 00 00 00       	mov    $0x1,%eax
  4099aa:	e9 90 00 00 00       	jmpq   409a3f <luaK_exp2const+0x111>
  4099af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4099b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4099bb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4099bf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4099c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4099c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4099cb:	48 89 10             	mov    %rdx,(%rax)
  4099ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4099d2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4099d6:	83 c8 40             	or     $0x40,%eax
  4099d9:	89 c2                	mov    %eax,%edx
  4099db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4099df:	88 50 08             	mov    %dl,0x8(%rax)
  4099e2:	b8 01 00 00 00       	mov    $0x1,%eax
  4099e7:	eb 56                	jmp    409a3f <luaK_exp2const+0x111>
  4099e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4099f1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4099f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4099f9:	48 89 d6             	mov    %rdx,%rsi
  4099fc:	48 89 c7             	mov    %rax,%rdi
  4099ff:	e8 f3 fe ff ff       	callq  4098f7 <const2val>
  409a04:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  409a08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409a0c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  409a10:	48 8b 12             	mov    (%rdx),%rdx
  409a13:	48 89 10             	mov    %rdx,(%rax)
  409a16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409a1a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  409a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409a22:	88 50 08             	mov    %dl,0x8(%rax)
  409a25:	b8 01 00 00 00       	mov    $0x1,%eax
  409a2a:	eb 13                	jmp    409a3f <luaK_exp2const+0x111>
  409a2c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409a30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a34:	48 89 d6             	mov    %rdx,%rsi
  409a37:	48 89 c7             	mov    %rax,%rdi
  409a3a:	e8 20 fe ff ff       	callq  40985f <tonumeral>
  409a3f:	c9                   	leaveq 
  409a40:	c3                   	retq   

0000000000409a41 <previousinstruction>:
  409a41:	55                   	push   %rbp
  409a42:	48 89 e5             	mov    %rsp,%rbp
  409a45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409a49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409a4d:	8b 50 20             	mov    0x20(%rax),%edx
  409a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409a54:	8b 40 24             	mov    0x24(%rax),%eax
  409a57:	39 c2                	cmp    %eax,%edx
  409a59:	7e 21                	jle    409a7c <previousinstruction+0x3b>
  409a5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409a5f:	48 8b 00             	mov    (%rax),%rax
  409a62:	48 8b 50 40          	mov    0x40(%rax),%rdx
  409a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409a6a:	8b 40 20             	mov    0x20(%rax),%eax
  409a6d:	48 98                	cltq   
  409a6f:	48 c1 e0 02          	shl    $0x2,%rax
  409a73:	48 83 e8 04          	sub    $0x4,%rax
  409a77:	48 01 d0             	add    %rdx,%rax
  409a7a:	eb 05                	jmp    409a81 <previousinstruction+0x40>
  409a7c:	b8 88 dc 43 00       	mov    $0x43dc88,%eax
  409a81:	5d                   	pop    %rbp
  409a82:	c3                   	retq   

0000000000409a83 <luaK_nil>:
  409a83:	55                   	push   %rbp
  409a84:	48 89 e5             	mov    %rsp,%rbp
  409a87:	48 83 ec 30          	sub    $0x30,%rsp
  409a8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  409a8f:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  409a92:	89 55 d0             	mov    %edx,-0x30(%rbp)
  409a95:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  409a98:	8b 45 d0             	mov    -0x30(%rbp),%eax
  409a9b:	01 d0                	add    %edx,%eax
  409a9d:	83 e8 01             	sub    $0x1,%eax
  409aa0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409aa7:	48 89 c7             	mov    %rax,%rdi
  409aaa:	e8 92 ff ff ff       	callq  409a41 <previousinstruction>
  409aaf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  409ab3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ab7:	8b 00                	mov    (%rax),%eax
  409ab9:	83 e0 7f             	and    $0x7f,%eax
  409abc:	83 f8 08             	cmp    $0x8,%eax
  409abf:	0f 85 ac 00 00 00    	jne    409b71 <luaK_nil+0xee>
  409ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ac9:	8b 00                	mov    (%rax),%eax
  409acb:	c1 e8 07             	shr    $0x7,%eax
  409ace:	25 ff 00 00 00       	and    $0xff,%eax
  409ad3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  409ad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ada:	8b 00                	mov    (%rax),%eax
  409adc:	c1 e8 10             	shr    $0x10,%eax
  409adf:	0f b6 d0             	movzbl %al,%edx
  409ae2:	8b 45 ec             	mov    -0x14(%rbp),%eax
  409ae5:	01 d0                	add    %edx,%eax
  409ae7:	89 45 e8             	mov    %eax,-0x18(%rbp)
  409aea:	8b 45 ec             	mov    -0x14(%rbp),%eax
  409aed:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  409af0:	7f 0b                	jg     409afd <luaK_nil+0x7a>
  409af2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  409af5:	83 c0 01             	add    $0x1,%eax
  409af8:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  409afb:	7e 13                	jle    409b10 <luaK_nil+0x8d>
  409afd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  409b00:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  409b03:	7f 6c                	jg     409b71 <luaK_nil+0xee>
  409b05:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409b08:	83 c0 01             	add    $0x1,%eax
  409b0b:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  409b0e:	7f 61                	jg     409b71 <luaK_nil+0xee>
  409b10:	8b 45 ec             	mov    -0x14(%rbp),%eax
  409b13:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  409b16:	7d 06                	jge    409b1e <luaK_nil+0x9b>
  409b18:	8b 45 ec             	mov    -0x14(%rbp),%eax
  409b1b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  409b1e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  409b21:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  409b24:	7e 06                	jle    409b2c <luaK_nil+0xa9>
  409b26:	8b 45 e8             	mov    -0x18(%rbp),%eax
  409b29:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409b2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409b30:	8b 00                	mov    (%rax),%eax
  409b32:	25 7f 80 ff ff       	and    $0xffff807f,%eax
  409b37:	89 c2                	mov    %eax,%edx
  409b39:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  409b3c:	c1 e0 07             	shl    $0x7,%eax
  409b3f:	25 80 7f 00 00       	and    $0x7f80,%eax
  409b44:	09 c2                	or     %eax,%edx
  409b46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409b4a:	89 10                	mov    %edx,(%rax)
  409b4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409b50:	8b 00                	mov    (%rax),%eax
  409b52:	25 ff ff 00 ff       	and    $0xff00ffff,%eax
  409b57:	89 c2                	mov    %eax,%edx
  409b59:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409b5c:	2b 45 d4             	sub    -0x2c(%rbp),%eax
  409b5f:	c1 e0 10             	shl    $0x10,%eax
  409b62:	25 00 00 ff 00       	and    $0xff0000,%eax
  409b67:	09 c2                	or     %eax,%edx
  409b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409b6d:	89 10                	mov    %edx,(%rax)
  409b6f:	eb 26                	jmp    409b97 <luaK_nil+0x114>
  409b71:	8b 45 d0             	mov    -0x30(%rbp),%eax
  409b74:	8d 48 ff             	lea    -0x1(%rax),%ecx
  409b77:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  409b7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409b7e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409b84:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409b8a:	be 08 00 00 00       	mov    $0x8,%esi
  409b8f:	48 89 c7             	mov    %rax,%rdi
  409b92:	e8 4f 07 00 00       	callq  40a2e6 <luaK_codeABCk>
  409b97:	c9                   	leaveq 
  409b98:	c3                   	retq   

0000000000409b99 <getjump>:
  409b99:	55                   	push   %rbp
  409b9a:	48 89 e5             	mov    %rsp,%rbp
  409b9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409ba1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409ba4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ba8:	48 8b 00             	mov    (%rax),%rax
  409bab:	48 8b 40 40          	mov    0x40(%rax),%rax
  409baf:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409bb2:	48 63 d2             	movslq %edx,%rdx
  409bb5:	48 c1 e2 02          	shl    $0x2,%rdx
  409bb9:	48 01 d0             	add    %rdx,%rax
  409bbc:	8b 00                	mov    (%rax),%eax
  409bbe:	c1 e8 07             	shr    $0x7,%eax
  409bc1:	2d ff ff ff 00       	sub    $0xffffff,%eax
  409bc6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409bc9:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  409bcd:	75 07                	jne    409bd6 <getjump+0x3d>
  409bcf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  409bd4:	eb 0b                	jmp    409be1 <getjump+0x48>
  409bd6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  409bd9:	8d 50 01             	lea    0x1(%rax),%edx
  409bdc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409bdf:	01 d0                	add    %edx,%eax
  409be1:	5d                   	pop    %rbp
  409be2:	c3                   	retq   

0000000000409be3 <fixjump>:
  409be3:	55                   	push   %rbp
  409be4:	48 89 e5             	mov    %rsp,%rbp
  409be7:	48 83 ec 20          	sub    $0x20,%rsp
  409beb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409bef:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409bf2:	89 55 e0             	mov    %edx,-0x20(%rbp)
  409bf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409bf9:	48 8b 00             	mov    (%rax),%rax
  409bfc:	48 8b 40 40          	mov    0x40(%rax),%rax
  409c00:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409c03:	48 63 d2             	movslq %edx,%rdx
  409c06:	48 c1 e2 02          	shl    $0x2,%rdx
  409c0a:	48 01 d0             	add    %rdx,%rax
  409c0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409c11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  409c14:	8d 50 01             	lea    0x1(%rax),%edx
  409c17:	8b 45 e0             	mov    -0x20(%rbp),%eax
  409c1a:	29 d0                	sub    %edx,%eax
  409c1c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  409c1f:	81 7d f4 01 00 00 ff 	cmpl   $0xff000001,-0xc(%rbp)
  409c26:	7c 09                	jl     409c31 <fixjump+0x4e>
  409c28:	81 7d f4 00 00 00 01 	cmpl   $0x1000000,-0xc(%rbp)
  409c2f:	7e 15                	jle    409c46 <fixjump+0x63>
  409c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409c35:	48 8b 40 10          	mov    0x10(%rax),%rax
  409c39:	be 50 d7 43 00       	mov    $0x43d750,%esi
  409c3e:	48 89 c7             	mov    %rax,%rdi
  409c41:	e8 58 06 01 00       	callq  41a29e <luaX_syntaxerror>
  409c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409c4a:	8b 00                	mov    (%rax),%eax
  409c4c:	83 e0 7f             	and    $0x7f,%eax
  409c4f:	89 c2                	mov    %eax,%edx
  409c51:	8b 45 f4             	mov    -0xc(%rbp),%eax
  409c54:	05 ff ff ff 00       	add    $0xffffff,%eax
  409c59:	c1 e0 07             	shl    $0x7,%eax
  409c5c:	09 c2                	or     %eax,%edx
  409c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409c62:	89 10                	mov    %edx,(%rax)
  409c64:	90                   	nop
  409c65:	c9                   	leaveq 
  409c66:	c3                   	retq   

0000000000409c67 <luaK_concat>:
  409c67:	55                   	push   %rbp
  409c68:	48 89 e5             	mov    %rsp,%rbp
  409c6b:	48 83 ec 30          	sub    $0x30,%rsp
  409c6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409c73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409c77:	89 55 dc             	mov    %edx,-0x24(%rbp)
  409c7a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  409c7e:	74 57                	je     409cd7 <luaK_concat+0x70>
  409c80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409c84:	8b 00                	mov    (%rax),%eax
  409c86:	83 f8 ff             	cmp    $0xffffffff,%eax
  409c89:	75 0b                	jne    409c96 <luaK_concat+0x2f>
  409c8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409c8f:	8b 55 dc             	mov    -0x24(%rbp),%edx
  409c92:	89 10                	mov    %edx,(%rax)
  409c94:	eb 42                	jmp    409cd8 <luaK_concat+0x71>
  409c96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409c9a:	8b 00                	mov    (%rax),%eax
  409c9c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409c9f:	eb 06                	jmp    409ca7 <luaK_concat+0x40>
  409ca1:	8b 45 f8             	mov    -0x8(%rbp),%eax
  409ca4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409ca7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  409caa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409cae:	89 d6                	mov    %edx,%esi
  409cb0:	48 89 c7             	mov    %rax,%rdi
  409cb3:	e8 e1 fe ff ff       	callq  409b99 <getjump>
  409cb8:	89 45 f8             	mov    %eax,-0x8(%rbp)
  409cbb:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
  409cbf:	75 e0                	jne    409ca1 <luaK_concat+0x3a>
  409cc1:	8b 55 dc             	mov    -0x24(%rbp),%edx
  409cc4:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  409cc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ccb:	89 ce                	mov    %ecx,%esi
  409ccd:	48 89 c7             	mov    %rax,%rdi
  409cd0:	e8 0e ff ff ff       	callq  409be3 <fixjump>
  409cd5:	eb 01                	jmp    409cd8 <luaK_concat+0x71>
  409cd7:	90                   	nop
  409cd8:	c9                   	leaveq 
  409cd9:	c3                   	retq   

0000000000409cda <luaK_jump>:
  409cda:	55                   	push   %rbp
  409cdb:	48 89 e5             	mov    %rsp,%rbp
  409cde:	48 83 ec 10          	sub    $0x10,%rsp
  409ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409cea:	b9 00 00 00 00       	mov    $0x0,%ecx
  409cef:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  409cf4:	be 38 00 00 00       	mov    $0x38,%esi
  409cf9:	48 89 c7             	mov    %rax,%rdi
  409cfc:	e8 aa 06 00 00       	callq  40a3ab <codesJ>
  409d01:	c9                   	leaveq 
  409d02:	c3                   	retq   

0000000000409d03 <luaK_ret>:
  409d03:	55                   	push   %rbp
  409d04:	48 89 e5             	mov    %rsp,%rbp
  409d07:	48 83 ec 20          	sub    $0x20,%rsp
  409d0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409d0f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409d12:	89 55 e0             	mov    %edx,-0x20(%rbp)
  409d15:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  409d19:	74 08                	je     409d23 <luaK_ret+0x20>
  409d1b:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
  409d1f:	74 0b                	je     409d2c <luaK_ret+0x29>
  409d21:	eb 12                	jmp    409d35 <luaK_ret+0x32>
  409d23:	c7 45 fc 47 00 00 00 	movl   $0x47,-0x4(%rbp)
  409d2a:	eb 11                	jmp    409d3d <luaK_ret+0x3a>
  409d2c:	c7 45 fc 48 00 00 00 	movl   $0x48,-0x4(%rbp)
  409d33:	eb 08                	jmp    409d3d <luaK_ret+0x3a>
  409d35:	c7 45 fc 46 00 00 00 	movl   $0x46,-0x4(%rbp)
  409d3c:	90                   	nop
  409d3d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  409d40:	8d 48 01             	lea    0x1(%rax),%ecx
  409d43:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409d46:	8b 75 fc             	mov    -0x4(%rbp),%esi
  409d49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409d4d:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409d53:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409d59:	48 89 c7             	mov    %rax,%rdi
  409d5c:	e8 85 05 00 00       	callq  40a2e6 <luaK_codeABCk>
  409d61:	90                   	nop
  409d62:	c9                   	leaveq 
  409d63:	c3                   	retq   

0000000000409d64 <condjump>:
  409d64:	55                   	push   %rbp
  409d65:	48 89 e5             	mov    %rsp,%rbp
  409d68:	48 83 ec 20          	sub    $0x20,%rsp
  409d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409d70:	89 75 f4             	mov    %esi,-0xc(%rbp)
  409d73:	89 55 f0             	mov    %edx,-0x10(%rbp)
  409d76:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  409d79:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
  409d7d:	44 89 4d e4          	mov    %r9d,-0x1c(%rbp)
  409d81:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  409d85:	8b 7d e8             	mov    -0x18(%rbp),%edi
  409d88:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  409d8b:	8b 55 f0             	mov    -0x10(%rbp),%edx
  409d8e:	8b 75 f4             	mov    -0xc(%rbp),%esi
  409d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409d95:	45 89 c1             	mov    %r8d,%r9d
  409d98:	41 89 f8             	mov    %edi,%r8d
  409d9b:	48 89 c7             	mov    %rax,%rdi
  409d9e:	e8 43 05 00 00       	callq  40a2e6 <luaK_codeABCk>
  409da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409da7:	48 89 c7             	mov    %rax,%rdi
  409daa:	e8 2b ff ff ff       	callq  409cda <luaK_jump>
  409daf:	c9                   	leaveq 
  409db0:	c3                   	retq   

0000000000409db1 <luaK_getlabel>:
  409db1:	55                   	push   %rbp
  409db2:	48 89 e5             	mov    %rsp,%rbp
  409db5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409dbd:	8b 50 20             	mov    0x20(%rax),%edx
  409dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409dc4:	89 50 24             	mov    %edx,0x24(%rax)
  409dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409dcb:	8b 40 20             	mov    0x20(%rax),%eax
  409dce:	5d                   	pop    %rbp
  409dcf:	c3                   	retq   

0000000000409dd0 <getjumpcontrol>:
  409dd0:	55                   	push   %rbp
  409dd1:	48 89 e5             	mov    %rsp,%rbp
  409dd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409dd8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ddf:	48 8b 00             	mov    (%rax),%rax
  409de2:	48 8b 40 40          	mov    0x40(%rax),%rax
  409de6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409de9:	48 63 d2             	movslq %edx,%rdx
  409dec:	48 c1 e2 02          	shl    $0x2,%rdx
  409df0:	48 01 d0             	add    %rdx,%rax
  409df3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409df7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  409dfb:	7e 2a                	jle    409e27 <getjumpcontrol+0x57>
  409dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e01:	48 83 e8 04          	sub    $0x4,%rax
  409e05:	8b 00                	mov    (%rax),%eax
  409e07:	83 e0 7f             	and    $0x7f,%eax
  409e0a:	89 c0                	mov    %eax,%eax
  409e0c:	0f b6 80 00 0c 44 00 	movzbl 0x440c00(%rax),%eax
  409e13:	0f b6 c0             	movzbl %al,%eax
  409e16:	83 e0 10             	and    $0x10,%eax
  409e19:	85 c0                	test   %eax,%eax
  409e1b:	74 0a                	je     409e27 <getjumpcontrol+0x57>
  409e1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e21:	48 83 e8 04          	sub    $0x4,%rax
  409e25:	eb 04                	jmp    409e2b <getjumpcontrol+0x5b>
  409e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e2b:	5d                   	pop    %rbp
  409e2c:	c3                   	retq   

0000000000409e2d <patchtestreg>:
  409e2d:	55                   	push   %rbp
  409e2e:	48 89 e5             	mov    %rsp,%rbp
  409e31:	48 83 ec 20          	sub    $0x20,%rsp
  409e35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409e39:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409e3c:	89 55 e0             	mov    %edx,-0x20(%rbp)
  409e3f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409e46:	89 d6                	mov    %edx,%esi
  409e48:	48 89 c7             	mov    %rax,%rdi
  409e4b:	e8 80 ff ff ff       	callq  409dd0 <getjumpcontrol>
  409e50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e58:	8b 00                	mov    (%rax),%eax
  409e5a:	83 e0 7f             	and    $0x7f,%eax
  409e5d:	83 f8 43             	cmp    $0x43,%eax
  409e60:	74 07                	je     409e69 <patchtestreg+0x3c>
  409e62:	b8 00 00 00 00       	mov    $0x0,%eax
  409e67:	eb 70                	jmp    409ed9 <patchtestreg+0xac>
  409e69:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
  409e70:	74 33                	je     409ea5 <patchtestreg+0x78>
  409e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e76:	8b 00                	mov    (%rax),%eax
  409e78:	c1 e8 10             	shr    $0x10,%eax
  409e7b:	0f b6 c0             	movzbl %al,%eax
  409e7e:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  409e81:	74 22                	je     409ea5 <patchtestreg+0x78>
  409e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409e87:	8b 00                	mov    (%rax),%eax
  409e89:	25 7f 80 ff ff       	and    $0xffff807f,%eax
  409e8e:	89 c2                	mov    %eax,%edx
  409e90:	8b 45 e0             	mov    -0x20(%rbp),%eax
  409e93:	c1 e0 07             	shl    $0x7,%eax
  409e96:	25 80 7f 00 00       	and    $0x7f80,%eax
  409e9b:	09 c2                	or     %eax,%edx
  409e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ea1:	89 10                	mov    %edx,(%rax)
  409ea3:	eb 2f                	jmp    409ed4 <patchtestreg+0xa7>
  409ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ea9:	8b 00                	mov    (%rax),%eax
  409eab:	c1 e8 10             	shr    $0x10,%eax
  409eae:	c1 e0 07             	shl    $0x7,%eax
  409eb1:	25 80 7f 00 00       	and    $0x7f80,%eax
  409eb6:	89 c2                	mov    %eax,%edx
  409eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ebc:	8b 00                	mov    (%rax),%eax
  409ebe:	c1 e8 0f             	shr    $0xf,%eax
  409ec1:	c1 e0 0f             	shl    $0xf,%eax
  409ec4:	0f b7 c0             	movzwl %ax,%eax
  409ec7:	09 d0                	or     %edx,%eax
  409ec9:	83 c8 42             	or     $0x42,%eax
  409ecc:	89 c2                	mov    %eax,%edx
  409ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ed2:	89 10                	mov    %edx,(%rax)
  409ed4:	b8 01 00 00 00       	mov    $0x1,%eax
  409ed9:	c9                   	leaveq 
  409eda:	c3                   	retq   

0000000000409edb <removevalues>:
  409edb:	55                   	push   %rbp
  409edc:	48 89 e5             	mov    %rsp,%rbp
  409edf:	48 83 ec 10          	sub    $0x10,%rsp
  409ee3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409ee7:	89 75 f4             	mov    %esi,-0xc(%rbp)
  409eea:	eb 2a                	jmp    409f16 <removevalues+0x3b>
  409eec:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  409eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ef3:	ba ff 00 00 00       	mov    $0xff,%edx
  409ef8:	89 ce                	mov    %ecx,%esi
  409efa:	48 89 c7             	mov    %rax,%rdi
  409efd:	e8 2b ff ff ff       	callq  409e2d <patchtestreg>
  409f02:	8b 55 f4             	mov    -0xc(%rbp),%edx
  409f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409f09:	89 d6                	mov    %edx,%esi
  409f0b:	48 89 c7             	mov    %rax,%rdi
  409f0e:	e8 86 fc ff ff       	callq  409b99 <getjump>
  409f13:	89 45 f4             	mov    %eax,-0xc(%rbp)
  409f16:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  409f1a:	75 d0                	jne    409eec <removevalues+0x11>
  409f1c:	90                   	nop
  409f1d:	c9                   	leaveq 
  409f1e:	c3                   	retq   

0000000000409f1f <patchlistaux>:
  409f1f:	55                   	push   %rbp
  409f20:	48 89 e5             	mov    %rsp,%rbp
  409f23:	48 83 ec 30          	sub    $0x30,%rsp
  409f27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409f2b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409f2e:	89 55 e0             	mov    %edx,-0x20(%rbp)
  409f31:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  409f34:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
  409f38:	eb 5c                	jmp    409f96 <patchlistaux+0x77>
  409f3a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  409f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409f41:	89 d6                	mov    %edx,%esi
  409f43:	48 89 c7             	mov    %rax,%rdi
  409f46:	e8 4e fc ff ff       	callq  409b99 <getjump>
  409f4b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409f4e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  409f51:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  409f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409f58:	89 ce                	mov    %ecx,%esi
  409f5a:	48 89 c7             	mov    %rax,%rdi
  409f5d:	e8 cb fe ff ff       	callq  409e2d <patchtestreg>
  409f62:	85 c0                	test   %eax,%eax
  409f64:	74 16                	je     409f7c <patchlistaux+0x5d>
  409f66:	8b 55 e0             	mov    -0x20(%rbp),%edx
  409f69:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  409f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409f70:	89 ce                	mov    %ecx,%esi
  409f72:	48 89 c7             	mov    %rax,%rdi
  409f75:	e8 69 fc ff ff       	callq  409be3 <fixjump>
  409f7a:	eb 14                	jmp    409f90 <patchlistaux+0x71>
  409f7c:	8b 55 d8             	mov    -0x28(%rbp),%edx
  409f7f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  409f82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409f86:	89 ce                	mov    %ecx,%esi
  409f88:	48 89 c7             	mov    %rax,%rdi
  409f8b:	e8 53 fc ff ff       	callq  409be3 <fixjump>
  409f90:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409f93:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  409f96:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
  409f9a:	75 9e                	jne    409f3a <patchlistaux+0x1b>
  409f9c:	90                   	nop
  409f9d:	c9                   	leaveq 
  409f9e:	c3                   	retq   

0000000000409f9f <luaK_patchlist>:
  409f9f:	55                   	push   %rbp
  409fa0:	48 89 e5             	mov    %rsp,%rbp
  409fa3:	48 83 ec 10          	sub    $0x10,%rsp
  409fa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409fab:	89 75 f4             	mov    %esi,-0xc(%rbp)
  409fae:	89 55 f0             	mov    %edx,-0x10(%rbp)
  409fb1:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  409fb4:	8b 55 f0             	mov    -0x10(%rbp),%edx
  409fb7:	8b 75 f4             	mov    -0xc(%rbp),%esi
  409fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409fbe:	41 89 c8             	mov    %ecx,%r8d
  409fc1:	b9 ff 00 00 00       	mov    $0xff,%ecx
  409fc6:	48 89 c7             	mov    %rax,%rdi
  409fc9:	e8 51 ff ff ff       	callq  409f1f <patchlistaux>
  409fce:	90                   	nop
  409fcf:	c9                   	leaveq 
  409fd0:	c3                   	retq   

0000000000409fd1 <luaK_patchtohere>:
  409fd1:	55                   	push   %rbp
  409fd2:	48 89 e5             	mov    %rsp,%rbp
  409fd5:	48 83 ec 20          	sub    $0x20,%rsp
  409fd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409fdd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  409fe0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409fe4:	48 89 c7             	mov    %rax,%rdi
  409fe7:	e8 c5 fd ff ff       	callq  409db1 <luaK_getlabel>
  409fec:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409fef:	8b 55 fc             	mov    -0x4(%rbp),%edx
  409ff2:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  409ff5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ff9:	89 ce                	mov    %ecx,%esi
  409ffb:	48 89 c7             	mov    %rax,%rdi
  409ffe:	e8 9c ff ff ff       	callq  409f9f <luaK_patchlist>
  40a003:	90                   	nop
  40a004:	c9                   	leaveq 
  40a005:	c3                   	retq   

000000000040a006 <savelineinfo>:
  40a006:	55                   	push   %rbp
  40a007:	48 89 e5             	mov    %rsp,%rbp
  40a00a:	48 83 ec 30          	sub    $0x30,%rsp
  40a00e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a012:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40a016:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40a019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a01d:	8b 40 28             	mov    0x28(%rax),%eax
  40a020:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a023:	29 c2                	sub    %eax,%edx
  40a025:	89 d0                	mov    %edx,%eax
  40a027:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a02a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a02e:	8b 40 20             	mov    0x20(%rax),%eax
  40a031:	83 e8 01             	sub    $0x1,%eax
  40a034:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40a037:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40a03a:	99                   	cltd   
  40a03b:	89 d0                	mov    %edx,%eax
  40a03d:	33 45 fc             	xor    -0x4(%rbp),%eax
  40a040:	29 d0                	sub    %edx,%eax
  40a042:	83 f8 7f             	cmp    $0x7f,%eax
  40a045:	7f 1a                	jg     40a061 <savelineinfo+0x5b>
  40a047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a04b:	0f b6 40 45          	movzbl 0x45(%rax),%eax
  40a04f:	8d 48 01             	lea    0x1(%rax),%ecx
  40a052:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40a056:	88 4a 45             	mov    %cl,0x45(%rdx)
  40a059:	84 c0                	test   %al,%al
  40a05b:	0f 89 a4 00 00 00    	jns    40a105 <savelineinfo+0xff>
  40a061:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a065:	48 8d 48 28          	lea    0x28(%rax),%rcx
  40a069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a06d:	8b 50 34             	mov    0x34(%rax),%edx
  40a070:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a074:	48 8b 70 60          	mov    0x60(%rax),%rsi
  40a078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a07c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a080:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a084:	48 83 ec 08          	sub    $0x8,%rsp
  40a088:	68 6b d7 43 00       	pushq  $0x43d76b
  40a08d:	41 b9 ff ff ff 7f    	mov    $0x7fffffff,%r9d
  40a093:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  40a099:	48 89 c7             	mov    %rax,%rdi
  40a09c:	e8 80 2e 01 00       	callq  41cf21 <luaM_growaux_>
  40a0a1:	48 83 c4 10          	add    $0x10,%rsp
  40a0a5:	48 89 c2             	mov    %rax,%rdx
  40a0a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a0ac:	48 89 50 60          	mov    %rdx,0x60(%rax)
  40a0b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a0b4:	48 8b 50 60          	mov    0x60(%rax),%rdx
  40a0b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a0bc:	8b 40 34             	mov    0x34(%rax),%eax
  40a0bf:	48 98                	cltq   
  40a0c1:	48 c1 e0 03          	shl    $0x3,%rax
  40a0c5:	48 01 c2             	add    %rax,%rdx
  40a0c8:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40a0cb:	89 02                	mov    %eax,(%rdx)
  40a0cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a0d1:	48 8b 70 60          	mov    0x60(%rax),%rsi
  40a0d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a0d9:	8b 40 34             	mov    0x34(%rax),%eax
  40a0dc:	8d 48 01             	lea    0x1(%rax),%ecx
  40a0df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40a0e3:	89 4a 34             	mov    %ecx,0x34(%rdx)
  40a0e6:	48 98                	cltq   
  40a0e8:	48 c1 e0 03          	shl    $0x3,%rax
  40a0ec:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  40a0f0:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a0f3:	89 42 04             	mov    %eax,0x4(%rdx)
  40a0f6:	c7 45 fc 80 ff ff ff 	movl   $0xffffff80,-0x4(%rbp)
  40a0fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a101:	c6 40 45 01          	movb   $0x1,0x45(%rax)
  40a105:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a109:	48 8d 48 1c          	lea    0x1c(%rax),%rcx
  40a10d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a111:	48 8b 70 58          	mov    0x58(%rax),%rsi
  40a115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a119:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a11d:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a121:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40a124:	48 83 ec 08          	sub    $0x8,%rsp
  40a128:	68 71 d7 43 00       	pushq  $0x43d771
  40a12d:	41 b9 ff ff ff 7f    	mov    $0x7fffffff,%r9d
  40a133:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40a139:	48 89 c7             	mov    %rax,%rdi
  40a13c:	e8 e0 2d 01 00       	callq  41cf21 <luaM_growaux_>
  40a141:	48 83 c4 10          	add    $0x10,%rsp
  40a145:	48 89 c2             	mov    %rax,%rdx
  40a148:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a14c:	48 89 50 58          	mov    %rdx,0x58(%rax)
  40a150:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a154:	48 8b 50 58          	mov    0x58(%rax),%rdx
  40a158:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40a15b:	48 98                	cltq   
  40a15d:	48 01 d0             	add    %rdx,%rax
  40a160:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40a163:	88 10                	mov    %dl,(%rax)
  40a165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a169:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a16c:	89 50 28             	mov    %edx,0x28(%rax)
  40a16f:	90                   	nop
  40a170:	c9                   	leaveq 
  40a171:	c3                   	retq   

000000000040a172 <removelastlineinfo>:
  40a172:	55                   	push   %rbp
  40a173:	48 89 e5             	mov    %rsp,%rbp
  40a176:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a17e:	48 8b 00             	mov    (%rax),%rax
  40a181:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a189:	8b 40 20             	mov    0x20(%rax),%eax
  40a18c:	83 e8 01             	sub    $0x1,%eax
  40a18f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40a192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a196:	48 8b 50 58          	mov    0x58(%rax),%rdx
  40a19a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40a19d:	48 98                	cltq   
  40a19f:	48 01 d0             	add    %rdx,%rax
  40a1a2:	0f b6 00             	movzbl (%rax),%eax
  40a1a5:	3c 80                	cmp    $0x80,%al
  40a1a7:	74 3a                	je     40a1e3 <removelastlineinfo+0x71>
  40a1a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1ad:	8b 50 28             	mov    0x28(%rax),%edx
  40a1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a1b4:	48 8b 48 58          	mov    0x58(%rax),%rcx
  40a1b8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40a1bb:	48 98                	cltq   
  40a1bd:	48 01 c8             	add    %rcx,%rax
  40a1c0:	0f b6 00             	movzbl (%rax),%eax
  40a1c3:	0f be c0             	movsbl %al,%eax
  40a1c6:	29 c2                	sub    %eax,%edx
  40a1c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1cc:	89 50 28             	mov    %edx,0x28(%rax)
  40a1cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1d3:	0f b6 40 45          	movzbl 0x45(%rax),%eax
  40a1d7:	8d 50 ff             	lea    -0x1(%rax),%edx
  40a1da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1de:	88 50 45             	mov    %dl,0x45(%rax)
  40a1e1:	eb 19                	jmp    40a1fc <removelastlineinfo+0x8a>
  40a1e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1e7:	8b 40 34             	mov    0x34(%rax),%eax
  40a1ea:	8d 50 ff             	lea    -0x1(%rax),%edx
  40a1ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1f1:	89 50 34             	mov    %edx,0x34(%rax)
  40a1f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1f8:	c6 40 45 81          	movb   $0x81,0x45(%rax)
  40a1fc:	90                   	nop
  40a1fd:	5d                   	pop    %rbp
  40a1fe:	c3                   	retq   

000000000040a1ff <removelastinstruction>:
  40a1ff:	55                   	push   %rbp
  40a200:	48 89 e5             	mov    %rsp,%rbp
  40a203:	48 83 ec 08          	sub    $0x8,%rsp
  40a207:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a20b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a20f:	48 89 c7             	mov    %rax,%rdi
  40a212:	e8 5b ff ff ff       	callq  40a172 <removelastlineinfo>
  40a217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a21b:	8b 40 20             	mov    0x20(%rax),%eax
  40a21e:	8d 50 ff             	lea    -0x1(%rax),%edx
  40a221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a225:	89 50 20             	mov    %edx,0x20(%rax)
  40a228:	90                   	nop
  40a229:	c9                   	leaveq 
  40a22a:	c3                   	retq   

000000000040a22b <luaK_code>:
  40a22b:	55                   	push   %rbp
  40a22c:	48 89 e5             	mov    %rsp,%rbp
  40a22f:	48 83 ec 20          	sub    $0x20,%rsp
  40a233:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a237:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40a23a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a23e:	48 8b 00             	mov    (%rax),%rax
  40a241:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a249:	48 8d 48 18          	lea    0x18(%rax),%rcx
  40a24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a251:	8b 50 20             	mov    0x20(%rax),%edx
  40a254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a258:	48 8b 70 40          	mov    0x40(%rax),%rsi
  40a25c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a260:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a264:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a268:	48 83 ec 08          	sub    $0x8,%rsp
  40a26c:	68 71 d7 43 00       	pushq  $0x43d771
  40a271:	41 b9 ff ff ff 7f    	mov    $0x7fffffff,%r9d
  40a277:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  40a27d:	48 89 c7             	mov    %rax,%rdi
  40a280:	e8 9c 2c 01 00       	callq  41cf21 <luaM_growaux_>
  40a285:	48 83 c4 10          	add    $0x10,%rsp
  40a289:	48 89 c2             	mov    %rax,%rdx
  40a28c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a290:	48 89 50 40          	mov    %rdx,0x40(%rax)
  40a294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a298:	48 8b 70 40          	mov    0x40(%rax),%rsi
  40a29c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a2a0:	8b 40 20             	mov    0x20(%rax),%eax
  40a2a3:	8d 48 01             	lea    0x1(%rax),%ecx
  40a2a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40a2aa:	89 4a 20             	mov    %ecx,0x20(%rdx)
  40a2ad:	48 98                	cltq   
  40a2af:	48 c1 e0 02          	shl    $0x2,%rax
  40a2b3:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  40a2b7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40a2ba:	89 02                	mov    %eax,(%rdx)
  40a2bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a2c0:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a2c4:	8b 50 08             	mov    0x8(%rax),%edx
  40a2c7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40a2cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a2cf:	48 89 ce             	mov    %rcx,%rsi
  40a2d2:	48 89 c7             	mov    %rax,%rdi
  40a2d5:	e8 2c fd ff ff       	callq  40a006 <savelineinfo>
  40a2da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a2de:	8b 40 20             	mov    0x20(%rax),%eax
  40a2e1:	83 e8 01             	sub    $0x1,%eax
  40a2e4:	c9                   	leaveq 
  40a2e5:	c3                   	retq   

000000000040a2e6 <luaK_codeABCk>:
  40a2e6:	55                   	push   %rbp
  40a2e7:	48 89 e5             	mov    %rsp,%rbp
  40a2ea:	48 83 ec 20          	sub    $0x20,%rsp
  40a2ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a2f2:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a2f5:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40a2f8:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  40a2fb:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
  40a2ff:	44 89 4d e4          	mov    %r9d,-0x1c(%rbp)
  40a303:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40a306:	c1 e0 07             	shl    $0x7,%eax
  40a309:	0b 45 f4             	or     -0xc(%rbp),%eax
  40a30c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40a30f:	c1 e2 10             	shl    $0x10,%edx
  40a312:	09 c2                	or     %eax,%edx
  40a314:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40a317:	c1 e0 18             	shl    $0x18,%eax
  40a31a:	09 c2                	or     %eax,%edx
  40a31c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40a31f:	c1 e0 0f             	shl    $0xf,%eax
  40a322:	09 c2                	or     %eax,%edx
  40a324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a328:	89 d6                	mov    %edx,%esi
  40a32a:	48 89 c7             	mov    %rax,%rdi
  40a32d:	e8 f9 fe ff ff       	callq  40a22b <luaK_code>
  40a332:	c9                   	leaveq 
  40a333:	c3                   	retq   

000000000040a334 <luaK_codeABx>:
  40a334:	55                   	push   %rbp
  40a335:	48 89 e5             	mov    %rsp,%rbp
  40a338:	48 83 ec 20          	sub    $0x20,%rsp
  40a33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a340:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a343:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40a346:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  40a349:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40a34c:	c1 e0 07             	shl    $0x7,%eax
  40a34f:	0b 45 f4             	or     -0xc(%rbp),%eax
  40a352:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40a355:	c1 e2 0f             	shl    $0xf,%edx
  40a358:	09 c2                	or     %eax,%edx
  40a35a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a35e:	89 d6                	mov    %edx,%esi
  40a360:	48 89 c7             	mov    %rax,%rdi
  40a363:	e8 c3 fe ff ff       	callq  40a22b <luaK_code>
  40a368:	c9                   	leaveq 
  40a369:	c3                   	retq   

000000000040a36a <luaK_codeAsBx>:
  40a36a:	55                   	push   %rbp
  40a36b:	48 89 e5             	mov    %rsp,%rbp
  40a36e:	48 83 ec 30          	sub    $0x30,%rsp
  40a372:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a376:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40a379:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40a37c:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  40a37f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a382:	05 ff ff 00 00       	add    $0xffff,%eax
  40a387:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a38a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40a38d:	c1 e0 07             	shl    $0x7,%eax
  40a390:	0b 45 e4             	or     -0x1c(%rbp),%eax
  40a393:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40a396:	c1 e2 0f             	shl    $0xf,%edx
  40a399:	09 c2                	or     %eax,%edx
  40a39b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a39f:	89 d6                	mov    %edx,%esi
  40a3a1:	48 89 c7             	mov    %rax,%rdi
  40a3a4:	e8 82 fe ff ff       	callq  40a22b <luaK_code>
  40a3a9:	c9                   	leaveq 
  40a3aa:	c3                   	retq   

000000000040a3ab <codesJ>:
  40a3ab:	55                   	push   %rbp
  40a3ac:	48 89 e5             	mov    %rsp,%rbp
  40a3af:	48 83 ec 30          	sub    $0x30,%rsp
  40a3b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a3b7:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40a3ba:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40a3bd:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  40a3c0:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40a3c3:	05 ff ff ff 00       	add    $0xffffff,%eax
  40a3c8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a3cb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40a3ce:	c1 e0 07             	shl    $0x7,%eax
  40a3d1:	0b 45 e4             	or     -0x1c(%rbp),%eax
  40a3d4:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a3d7:	c1 e2 0f             	shl    $0xf,%edx
  40a3da:	09 c2                	or     %eax,%edx
  40a3dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a3e0:	89 d6                	mov    %edx,%esi
  40a3e2:	48 89 c7             	mov    %rax,%rdi
  40a3e5:	e8 41 fe ff ff       	callq  40a22b <luaK_code>
  40a3ea:	c9                   	leaveq 
  40a3eb:	c3                   	retq   

000000000040a3ec <codeextraarg>:
  40a3ec:	55                   	push   %rbp
  40a3ed:	48 89 e5             	mov    %rsp,%rbp
  40a3f0:	48 83 ec 10          	sub    $0x10,%rsp
  40a3f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a3f8:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a3fb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40a3fe:	c1 e0 07             	shl    $0x7,%eax
  40a401:	83 c8 52             	or     $0x52,%eax
  40a404:	89 c2                	mov    %eax,%edx
  40a406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a40a:	89 d6                	mov    %edx,%esi
  40a40c:	48 89 c7             	mov    %rax,%rdi
  40a40f:	e8 17 fe ff ff       	callq  40a22b <luaK_code>
  40a414:	c9                   	leaveq 
  40a415:	c3                   	retq   

000000000040a416 <luaK_codek>:
  40a416:	55                   	push   %rbp
  40a417:	48 89 e5             	mov    %rsp,%rbp
  40a41a:	48 83 ec 20          	sub    $0x20,%rsp
  40a41e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a422:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40a425:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40a428:	81 7d e0 ff ff 01 00 	cmpl   $0x1ffff,-0x20(%rbp)
  40a42f:	7f 19                	jg     40a44a <luaK_codek+0x34>
  40a431:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40a434:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40a437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a43b:	be 03 00 00 00       	mov    $0x3,%esi
  40a440:	48 89 c7             	mov    %rax,%rdi
  40a443:	e8 ec fe ff ff       	callq  40a334 <luaK_codeABx>
  40a448:	eb 30                	jmp    40a47a <luaK_codek+0x64>
  40a44a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40a44d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a451:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a456:	be 04 00 00 00       	mov    $0x4,%esi
  40a45b:	48 89 c7             	mov    %rax,%rdi
  40a45e:	e8 d1 fe ff ff       	callq  40a334 <luaK_codeABx>
  40a463:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a466:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40a469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a46d:	89 d6                	mov    %edx,%esi
  40a46f:	48 89 c7             	mov    %rax,%rdi
  40a472:	e8 75 ff ff ff       	callq  40a3ec <codeextraarg>
  40a477:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40a47a:	c9                   	leaveq 
  40a47b:	c3                   	retq   

000000000040a47c <luaK_checkstack>:
  40a47c:	55                   	push   %rbp
  40a47d:	48 89 e5             	mov    %rsp,%rbp
  40a480:	48 83 ec 20          	sub    $0x20,%rsp
  40a484:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a488:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40a48b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a48f:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40a493:	0f b6 d0             	movzbl %al,%edx
  40a496:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40a499:	01 d0                	add    %edx,%eax
  40a49b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a49e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a4a2:	48 8b 00             	mov    (%rax),%rax
  40a4a5:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  40a4a9:	0f b6 c0             	movzbl %al,%eax
  40a4ac:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  40a4af:	7e 2b                	jle    40a4dc <luaK_checkstack+0x60>
  40a4b1:	81 7d fc fe 00 00 00 	cmpl   $0xfe,-0x4(%rbp)
  40a4b8:	7e 15                	jle    40a4cf <luaK_checkstack+0x53>
  40a4ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a4be:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a4c2:	be 80 d7 43 00       	mov    $0x43d780,%esi
  40a4c7:	48 89 c7             	mov    %rax,%rdi
  40a4ca:	e8 cf fd 00 00       	callq  41a29e <luaX_syntaxerror>
  40a4cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a4d3:	48 8b 00             	mov    (%rax),%rax
  40a4d6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40a4d9:	88 50 0c             	mov    %dl,0xc(%rax)
  40a4dc:	90                   	nop
  40a4dd:	c9                   	leaveq 
  40a4de:	c3                   	retq   

000000000040a4df <luaK_reserveregs>:
  40a4df:	55                   	push   %rbp
  40a4e0:	48 89 e5             	mov    %rsp,%rbp
  40a4e3:	48 83 ec 10          	sub    $0x10,%rsp
  40a4e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a4eb:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a4ee:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40a4f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a4f5:	89 d6                	mov    %edx,%esi
  40a4f7:	48 89 c7             	mov    %rax,%rdi
  40a4fa:	e8 7d ff ff ff       	callq  40a47c <luaK_checkstack>
  40a4ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a503:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40a507:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40a50a:	01 c2                	add    %eax,%edx
  40a50c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a510:	88 50 44             	mov    %dl,0x44(%rax)
  40a513:	90                   	nop
  40a514:	c9                   	leaveq 
  40a515:	c3                   	retq   

000000000040a516 <freereg>:
  40a516:	55                   	push   %rbp
  40a517:	48 89 e5             	mov    %rsp,%rbp
  40a51a:	48 83 ec 10          	sub    $0x10,%rsp
  40a51e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a522:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a529:	48 89 c7             	mov    %rax,%rdi
  40a52c:	e8 b8 6b 01 00       	callq  4210e9 <luaY_nvarstack>
  40a531:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  40a534:	7c 12                	jl     40a548 <freereg+0x32>
  40a536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a53a:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40a53e:	8d 50 ff             	lea    -0x1(%rax),%edx
  40a541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a545:	88 50 44             	mov    %dl,0x44(%rax)
  40a548:	90                   	nop
  40a549:	c9                   	leaveq 
  40a54a:	c3                   	retq   

000000000040a54b <freeregs>:
  40a54b:	55                   	push   %rbp
  40a54c:	48 89 e5             	mov    %rsp,%rbp
  40a54f:	48 83 ec 10          	sub    $0x10,%rsp
  40a553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a557:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40a55a:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40a55d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40a560:	3b 45 f0             	cmp    -0x10(%rbp),%eax
  40a563:	7e 24                	jle    40a589 <freeregs+0x3e>
  40a565:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40a568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a56c:	89 d6                	mov    %edx,%esi
  40a56e:	48 89 c7             	mov    %rax,%rdi
  40a571:	e8 a0 ff ff ff       	callq  40a516 <freereg>
  40a576:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40a579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a57d:	89 d6                	mov    %edx,%esi
  40a57f:	48 89 c7             	mov    %rax,%rdi
  40a582:	e8 8f ff ff ff       	callq  40a516 <freereg>
  40a587:	eb 22                	jmp    40a5ab <freeregs+0x60>
  40a589:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40a58c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a590:	89 d6                	mov    %edx,%esi
  40a592:	48 89 c7             	mov    %rax,%rdi
  40a595:	e8 7c ff ff ff       	callq  40a516 <freereg>
  40a59a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40a59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a5a1:	89 d6                	mov    %edx,%esi
  40a5a3:	48 89 c7             	mov    %rax,%rdi
  40a5a6:	e8 6b ff ff ff       	callq  40a516 <freereg>
  40a5ab:	90                   	nop
  40a5ac:	c9                   	leaveq 
  40a5ad:	c3                   	retq   

000000000040a5ae <freeexp>:
  40a5ae:	55                   	push   %rbp
  40a5af:	48 89 e5             	mov    %rsp,%rbp
  40a5b2:	48 83 ec 10          	sub    $0x10,%rsp
  40a5b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a5ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40a5be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a5c2:	8b 00                	mov    (%rax),%eax
  40a5c4:	83 f8 08             	cmp    $0x8,%eax
  40a5c7:	75 15                	jne    40a5de <freeexp+0x30>
  40a5c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a5cd:	8b 50 08             	mov    0x8(%rax),%edx
  40a5d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a5d4:	89 d6                	mov    %edx,%esi
  40a5d6:	48 89 c7             	mov    %rax,%rdi
  40a5d9:	e8 38 ff ff ff       	callq  40a516 <freereg>
  40a5de:	90                   	nop
  40a5df:	c9                   	leaveq 
  40a5e0:	c3                   	retq   

000000000040a5e1 <freeexps>:
  40a5e1:	55                   	push   %rbp
  40a5e2:	48 89 e5             	mov    %rsp,%rbp
  40a5e5:	48 83 ec 30          	sub    $0x30,%rsp
  40a5e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a5ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40a5f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40a5f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a5f9:	8b 00                	mov    (%rax),%eax
  40a5fb:	83 f8 08             	cmp    $0x8,%eax
  40a5fe:	75 09                	jne    40a609 <freeexps+0x28>
  40a600:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a604:	8b 40 08             	mov    0x8(%rax),%eax
  40a607:	eb 05                	jmp    40a60e <freeexps+0x2d>
  40a609:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40a60e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a611:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a615:	8b 00                	mov    (%rax),%eax
  40a617:	83 f8 08             	cmp    $0x8,%eax
  40a61a:	75 09                	jne    40a625 <freeexps+0x44>
  40a61c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a620:	8b 40 08             	mov    0x8(%rax),%eax
  40a623:	eb 05                	jmp    40a62a <freeexps+0x49>
  40a625:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40a62a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40a62d:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40a630:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40a633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a637:	89 ce                	mov    %ecx,%esi
  40a639:	48 89 c7             	mov    %rax,%rdi
  40a63c:	e8 0a ff ff ff       	callq  40a54b <freeregs>
  40a641:	90                   	nop
  40a642:	c9                   	leaveq 
  40a643:	c3                   	retq   

000000000040a644 <addk>:
  40a644:	55                   	push   %rbp
  40a645:	48 89 e5             	mov    %rsp,%rbp
  40a648:	48 83 ec 70          	sub    $0x70,%rsp
  40a64c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  40a650:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40a654:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40a658:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a65c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a660:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a664:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40a668:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a66c:	48 8b 00             	mov    (%rax),%rax
  40a66f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40a673:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a677:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a67b:	48 8b 40 50          	mov    0x50(%rax),%rax
  40a67f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  40a683:	48 89 d6             	mov    %rdx,%rsi
  40a686:	48 89 c7             	mov    %rax,%rdi
  40a689:	e8 41 31 02 00       	callq  42d7cf <luaH_get>
  40a68e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40a692:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a696:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40a69a:	3c 03                	cmp    $0x3,%al
  40a69c:	75 79                	jne    40a717 <addk+0xd3>
  40a69e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a6a2:	48 8b 00             	mov    (%rax),%rax
  40a6a5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40a6a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a6ac:	8b 40 2c             	mov    0x2c(%rax),%eax
  40a6af:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  40a6b2:	7d 63                	jge    40a717 <addk+0xd3>
  40a6b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a6b8:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a6bc:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a6bf:	48 63 d2             	movslq %edx,%rdx
  40a6c2:	48 c1 e2 04          	shl    $0x4,%rdx
  40a6c6:	48 01 d0             	add    %rdx,%rax
  40a6c9:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40a6cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a6d1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40a6d5:	31 d0                	xor    %edx,%eax
  40a6d7:	0f b6 c0             	movzbl %al,%eax
  40a6da:	83 e0 3f             	and    $0x3f,%eax
  40a6dd:	85 c0                	test   %eax,%eax
  40a6df:	75 36                	jne    40a717 <addk+0xd3>
  40a6e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a6e5:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a6e9:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a6ec:	48 63 d2             	movslq %edx,%rdx
  40a6ef:	48 c1 e2 04          	shl    $0x4,%rdx
  40a6f3:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
  40a6f7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a6fb:	48 89 c2             	mov    %rax,%rdx
  40a6fe:	48 89 ce             	mov    %rcx,%rsi
  40a701:	bf 00 00 00 00       	mov    $0x0,%edi
  40a706:	e8 fc 92 02 00       	callq  433a07 <luaV_equalobj>
  40a70b:	85 c0                	test   %eax,%eax
  40a70d:	74 08                	je     40a717 <addk+0xd3>
  40a70f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a712:	e9 6f 01 00 00       	jmpq   40a886 <addk+0x242>
  40a717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a71b:	8b 40 14             	mov    0x14(%rax),%eax
  40a71e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40a721:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a725:	8b 40 2c             	mov    0x2c(%rax),%eax
  40a728:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40a72b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40a72f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40a733:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a736:	48 63 d0             	movslq %eax,%rdx
  40a739:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40a73d:	48 89 10             	mov    %rdx,(%rax)
  40a740:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40a744:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  40a748:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a74c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40a750:	48 8b 70 50          	mov    0x50(%rax),%rsi
  40a754:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  40a758:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40a75c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  40a760:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a764:	49 89 f8             	mov    %rdi,%r8
  40a767:	48 89 c7             	mov    %rax,%rdi
  40a76a:	e8 20 31 02 00       	callq  42d88f <luaH_finishset>
  40a76f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a773:	48 8d 48 14          	lea    0x14(%rax),%rcx
  40a777:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a77b:	48 8b 70 38          	mov    0x38(%rax),%rsi
  40a77f:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a782:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a786:	48 83 ec 08          	sub    $0x8,%rsp
  40a78a:	68 b0 d7 43 00       	pushq  $0x43d7b0
  40a78f:	41 b9 ff ff ff 01    	mov    $0x1ffffff,%r9d
  40a795:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  40a79b:	48 89 c7             	mov    %rax,%rdi
  40a79e:	e8 7e 27 01 00       	callq  41cf21 <luaM_growaux_>
  40a7a3:	48 83 c4 10          	add    $0x10,%rsp
  40a7a7:	48 89 c2             	mov    %rax,%rdx
  40a7aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a7ae:	48 89 50 38          	mov    %rdx,0x38(%rax)
  40a7b2:	eb 1e                	jmp    40a7d2 <addk+0x18e>
  40a7b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a7b8:	48 8b 48 38          	mov    0x38(%rax),%rcx
  40a7bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40a7bf:	8d 50 01             	lea    0x1(%rax),%edx
  40a7c2:	89 55 fc             	mov    %edx,-0x4(%rbp)
  40a7c5:	48 98                	cltq   
  40a7c7:	48 c1 e0 04          	shl    $0x4,%rax
  40a7cb:	48 01 c8             	add    %rcx,%rax
  40a7ce:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  40a7d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a7d6:	8b 40 14             	mov    0x14(%rax),%eax
  40a7d9:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  40a7dc:	7c d6                	jl     40a7b4 <addk+0x170>
  40a7de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a7e2:	48 8b 40 38          	mov    0x38(%rax),%rax
  40a7e6:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40a7e9:	48 63 d2             	movslq %edx,%rdx
  40a7ec:	48 c1 e2 04          	shl    $0x4,%rdx
  40a7f0:	48 01 d0             	add    %rdx,%rax
  40a7f3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40a7f7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a7fb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40a7ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a803:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40a807:	48 8b 12             	mov    (%rdx),%rdx
  40a80a:	48 89 10             	mov    %rdx,(%rax)
  40a80d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a811:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40a815:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a819:	88 50 08             	mov    %dl,0x8(%rax)
  40a81c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a820:	8b 40 2c             	mov    0x2c(%rax),%eax
  40a823:	8d 50 01             	lea    0x1(%rax),%edx
  40a826:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a82a:	89 50 2c             	mov    %edx,0x2c(%rax)
  40a82d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a831:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40a835:	0f b6 c0             	movzbl %al,%eax
  40a838:	83 e0 40             	and    $0x40,%eax
  40a83b:	85 c0                	test   %eax,%eax
  40a83d:	74 44                	je     40a883 <addk+0x23f>
  40a83f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a843:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40a847:	0f b6 c0             	movzbl %al,%eax
  40a84a:	83 e0 20             	and    $0x20,%eax
  40a84d:	85 c0                	test   %eax,%eax
  40a84f:	74 32                	je     40a883 <addk+0x23f>
  40a851:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a855:	48 8b 00             	mov    (%rax),%rax
  40a858:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  40a85c:	0f b6 c0             	movzbl %al,%eax
  40a85f:	83 e0 18             	and    $0x18,%eax
  40a862:	85 c0                	test   %eax,%eax
  40a864:	74 1d                	je     40a883 <addk+0x23f>
  40a866:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a86a:	48 8b 00             	mov    (%rax),%rax
  40a86d:	48 89 c2             	mov    %rax,%rdx
  40a870:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40a874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a878:	48 89 ce             	mov    %rcx,%rsi
  40a87b:	48 89 c7             	mov    %rax,%rdi
  40a87e:	e8 cc a1 00 00       	callq  414a4f <luaC_barrier_>
  40a883:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a886:	c9                   	leaveq 
  40a887:	c3                   	retq   

000000000040a888 <stringK>:
  40a888:	55                   	push   %rbp
  40a889:	48 89 e5             	mov    %rsp,%rbp
  40a88c:	48 83 ec 30          	sub    $0x30,%rsp
  40a890:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40a894:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40a898:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  40a89c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a8a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40a8a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40a8a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40a8ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a8b0:	48 89 10             	mov    %rdx,(%rax)
  40a8b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a8b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40a8bb:	83 c8 40             	or     $0x40,%eax
  40a8be:	89 c2                	mov    %eax,%edx
  40a8c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a8c4:	88 50 08             	mov    %dl,0x8(%rax)
  40a8c7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40a8cb:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40a8cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a8d3:	48 89 ce             	mov    %rcx,%rsi
  40a8d6:	48 89 c7             	mov    %rax,%rdi
  40a8d9:	e8 66 fd ff ff       	callq  40a644 <addk>
  40a8de:	c9                   	leaveq 
  40a8df:	c3                   	retq   

000000000040a8e0 <luaK_intK>:
  40a8e0:	55                   	push   %rbp
  40a8e1:	48 89 e5             	mov    %rsp,%rbp
  40a8e4:	48 83 ec 30          	sub    $0x30,%rsp
  40a8e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40a8ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40a8f0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  40a8f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a8fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40a900:	48 89 10             	mov    %rdx,(%rax)
  40a903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a907:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  40a90b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40a90f:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40a913:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a917:	48 89 ce             	mov    %rcx,%rsi
  40a91a:	48 89 c7             	mov    %rax,%rdi
  40a91d:	e8 22 fd ff ff       	callq  40a644 <addk>
  40a922:	c9                   	leaveq 
  40a923:	c3                   	retq   

000000000040a924 <luaK_numberK>:
  40a924:	55                   	push   %rbp
  40a925:	48 89 e5             	mov    %rsp,%rbp
  40a928:	48 83 ec 70          	sub    $0x70,%rsp
  40a92c:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  40a930:	f2 0f 11 45 90       	movsd  %xmm0,-0x70(%rbp)
  40a935:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  40a939:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a941:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  40a946:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  40a94a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40a94e:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  40a952:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  40a956:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  40a95b:	be 00 00 00 00       	mov    $0x0,%esi
  40a960:	48 89 c7             	mov    %rax,%rdi
  40a963:	e8 57 7f 02 00       	callq  4328bf <luaV_flttointeger>
  40a968:	85 c0                	test   %eax,%eax
  40a96a:	75 19                	jne    40a985 <luaK_numberK+0x61>
  40a96c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  40a970:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40a974:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a978:	48 89 ce             	mov    %rcx,%rsi
  40a97b:	48 89 c7             	mov    %rax,%rdi
  40a97e:	e8 c1 fc ff ff       	callq  40a644 <addk>
  40a983:	eb 7f                	jmp    40aa04 <luaK_numberK+0xe0>
  40a985:	c7 45 f4 35 00 00 00 	movl   $0x35,-0xc(%rbp)
  40a98c:	b8 01 00 00 00       	mov    $0x1,%eax
  40a991:	2b 45 f4             	sub    -0xc(%rbp),%eax
  40a994:	f2 0f 10 05 0c 33 03 	movsd  0x3330c(%rip),%xmm0        # 43dca8 <ef.5921+0x18>
  40a99b:	00 
  40a99c:	89 c7                	mov    %eax,%edi
  40a99e:	e8 6d 70 ff ff       	callq  401a10 <ldexp@plt>
  40a9a3:	66 48 0f 7e c0       	movq   %xmm0,%rax
  40a9a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40a9ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a9b0:	48 85 c0             	test   %rax,%rax
  40a9b3:	74 11                	je     40a9c6 <luaK_numberK+0xa2>
  40a9b5:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  40a9ba:	f2 0f 59 45 e8       	mulsd  -0x18(%rbp),%xmm0
  40a9bf:	f2 0f 58 45 90       	addsd  -0x70(%rbp),%xmm0
  40a9c4:	eb 05                	jmp    40a9cb <luaK_numberK+0xa7>
  40a9c6:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  40a9cb:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  40a9d0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  40a9d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a9d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a9dc:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  40a9e1:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  40a9e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a9e9:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  40a9ed:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  40a9f1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40a9f5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40a9f9:	48 89 ce             	mov    %rcx,%rsi
  40a9fc:	48 89 c7             	mov    %rax,%rdi
  40a9ff:	e8 40 fc ff ff       	callq  40a644 <addk>
  40aa04:	c9                   	leaveq 
  40aa05:	c3                   	retq   

000000000040aa06 <boolF>:
  40aa06:	55                   	push   %rbp
  40aa07:	48 89 e5             	mov    %rsp,%rbp
  40aa0a:	48 83 ec 20          	sub    $0x20,%rsp
  40aa0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40aa12:	c6 45 f8 01          	movb   $0x1,-0x8(%rbp)
  40aa16:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  40aa1a:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  40aa1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40aa22:	48 89 ce             	mov    %rcx,%rsi
  40aa25:	48 89 c7             	mov    %rax,%rdi
  40aa28:	e8 17 fc ff ff       	callq  40a644 <addk>
  40aa2d:	c9                   	leaveq 
  40aa2e:	c3                   	retq   

000000000040aa2f <boolT>:
  40aa2f:	55                   	push   %rbp
  40aa30:	48 89 e5             	mov    %rsp,%rbp
  40aa33:	48 83 ec 20          	sub    $0x20,%rsp
  40aa37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40aa3b:	c6 45 f8 11          	movb   $0x11,-0x8(%rbp)
  40aa3f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  40aa43:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  40aa47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40aa4b:	48 89 ce             	mov    %rcx,%rsi
  40aa4e:	48 89 c7             	mov    %rax,%rdi
  40aa51:	e8 ee fb ff ff       	callq  40a644 <addk>
  40aa56:	c9                   	leaveq 
  40aa57:	c3                   	retq   

000000000040aa58 <nilK>:
  40aa58:	55                   	push   %rbp
  40aa59:	48 89 e5             	mov    %rsp,%rbp
  40aa5c:	48 83 ec 40          	sub    $0x40,%rsp
  40aa60:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40aa64:	c6 45 d8 00          	movb   $0x0,-0x28(%rbp)
  40aa68:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  40aa6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40aa70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40aa74:	48 8b 40 10          	mov    0x10(%rax),%rax
  40aa78:	48 8b 40 50          	mov    0x50(%rax),%rax
  40aa7c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40aa80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40aa84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40aa88:	48 89 10             	mov    %rdx,(%rax)
  40aa8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40aa8f:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  40aa93:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  40aa97:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40aa9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40aa9f:	48 89 ce             	mov    %rcx,%rsi
  40aaa2:	48 89 c7             	mov    %rax,%rdi
  40aaa5:	e8 9a fb ff ff       	callq  40a644 <addk>
  40aaaa:	c9                   	leaveq 
  40aaab:	c3                   	retq   

000000000040aaac <fitsC>:
  40aaac:	55                   	push   %rbp
  40aaad:	48 89 e5             	mov    %rsp,%rbp
  40aab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40aab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40aab8:	48 83 c0 7f          	add    $0x7f,%rax
  40aabc:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40aac2:	0f 96 c0             	setbe  %al
  40aac5:	0f b6 c0             	movzbl %al,%eax
  40aac8:	5d                   	pop    %rbp
  40aac9:	c3                   	retq   

000000000040aaca <fitsBx>:
  40aaca:	55                   	push   %rbp
  40aacb:	48 89 e5             	mov    %rsp,%rbp
  40aace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40aad2:	48 81 7d f8 01 00 ff 	cmpq   $0xffffffffffff0001,-0x8(%rbp)
  40aad9:	ff 
  40aada:	7c 11                	jl     40aaed <fitsBx+0x23>
  40aadc:	48 81 7d f8 00 00 01 	cmpq   $0x10000,-0x8(%rbp)
  40aae3:	00 
  40aae4:	7f 07                	jg     40aaed <fitsBx+0x23>
  40aae6:	b8 01 00 00 00       	mov    $0x1,%eax
  40aaeb:	eb 05                	jmp    40aaf2 <fitsBx+0x28>
  40aaed:	b8 00 00 00 00       	mov    $0x0,%eax
  40aaf2:	5d                   	pop    %rbp
  40aaf3:	c3                   	retq   

000000000040aaf4 <luaK_int>:
  40aaf4:	55                   	push   %rbp
  40aaf5:	48 89 e5             	mov    %rsp,%rbp
  40aaf8:	48 83 ec 20          	sub    $0x20,%rsp
  40aafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ab00:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40ab03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40ab07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab0b:	48 89 c7             	mov    %rax,%rdi
  40ab0e:	e8 b7 ff ff ff       	callq  40aaca <fitsBx>
  40ab13:	85 c0                	test   %eax,%eax
  40ab15:	74 1c                	je     40ab33 <luaK_int+0x3f>
  40ab17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab1b:	89 c1                	mov    %eax,%ecx
  40ab1d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40ab20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab24:	be 01 00 00 00       	mov    $0x1,%esi
  40ab29:	48 89 c7             	mov    %rax,%rdi
  40ab2c:	e8 39 f8 ff ff       	callq  40a36a <luaK_codeAsBx>
  40ab31:	eb 26                	jmp    40ab59 <luaK_int+0x65>
  40ab33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40ab37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab3b:	48 89 d6             	mov    %rdx,%rsi
  40ab3e:	48 89 c7             	mov    %rax,%rdi
  40ab41:	e8 9a fd ff ff       	callq  40a8e0 <luaK_intK>
  40ab46:	89 c2                	mov    %eax,%edx
  40ab48:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40ab4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab4f:	89 ce                	mov    %ecx,%esi
  40ab51:	48 89 c7             	mov    %rax,%rdi
  40ab54:	e8 bd f8 ff ff       	callq  40a416 <luaK_codek>
  40ab59:	90                   	nop
  40ab5a:	c9                   	leaveq 
  40ab5b:	c3                   	retq   

000000000040ab5c <luaK_float>:
  40ab5c:	55                   	push   %rbp
  40ab5d:	48 89 e5             	mov    %rsp,%rbp
  40ab60:	48 83 ec 30          	sub    $0x30,%rsp
  40ab64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ab68:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40ab6b:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
  40ab70:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  40ab74:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
  40ab79:	be 00 00 00 00       	mov    $0x0,%esi
  40ab7e:	48 89 c7             	mov    %rax,%rdi
  40ab81:	e8 39 7d 02 00       	callq  4328bf <luaV_flttointeger>
  40ab86:	85 c0                	test   %eax,%eax
  40ab88:	74 2c                	je     40abb6 <luaK_float+0x5a>
  40ab8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab8e:	48 89 c7             	mov    %rax,%rdi
  40ab91:	e8 34 ff ff ff       	callq  40aaca <fitsBx>
  40ab96:	85 c0                	test   %eax,%eax
  40ab98:	74 1c                	je     40abb6 <luaK_float+0x5a>
  40ab9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab9e:	89 c1                	mov    %eax,%ecx
  40aba0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40aba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40aba7:	be 02 00 00 00       	mov    $0x2,%esi
  40abac:	48 89 c7             	mov    %rax,%rdi
  40abaf:	e8 b6 f7 ff ff       	callq  40a36a <luaK_codeAsBx>
  40abb4:	eb 24                	jmp    40abda <luaK_float+0x7e>
  40abb6:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
  40abbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40abbf:	48 89 c7             	mov    %rax,%rdi
  40abc2:	e8 5d fd ff ff       	callq  40a924 <luaK_numberK>
  40abc7:	89 c2                	mov    %eax,%edx
  40abc9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40abcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40abd0:	89 ce                	mov    %ecx,%esi
  40abd2:	48 89 c7             	mov    %rax,%rdi
  40abd5:	e8 3c f8 ff ff       	callq  40a416 <luaK_codek>
  40abda:	90                   	nop
  40abdb:	c9                   	leaveq 
  40abdc:	c3                   	retq   

000000000040abdd <const2exp>:
  40abdd:	55                   	push   %rbp
  40abde:	48 89 e5             	mov    %rsp,%rbp
  40abe1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40abe5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40abe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40abed:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40abf1:	0f b6 c0             	movzbl %al,%eax
  40abf4:	83 e0 3f             	and    $0x3f,%eax
  40abf7:	83 f8 14             	cmp    $0x14,%eax
  40abfa:	0f 87 85 00 00 00    	ja     40ac85 <const2exp+0xa8>
  40ac00:	89 c0                	mov    %eax,%eax
  40ac02:	48 8b 04 c5 c0 d7 43 	mov    0x43d7c0(,%rax,8),%rax
  40ac09:	00 
  40ac0a:	ff e0                	jmpq   *%rax
  40ac0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac10:	c7 00 06 00 00 00    	movl   $0x6,(%rax)
  40ac16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ac1a:	48 8b 10             	mov    (%rax),%rdx
  40ac1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac21:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40ac25:	eb 5e                	jmp    40ac85 <const2exp+0xa8>
  40ac27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac2b:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
  40ac31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ac35:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40ac39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac3d:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
  40ac42:	eb 41                	jmp    40ac85 <const2exp+0xa8>
  40ac44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac48:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  40ac4e:	eb 35                	jmp    40ac85 <const2exp+0xa8>
  40ac50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac54:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  40ac5a:	eb 29                	jmp    40ac85 <const2exp+0xa8>
  40ac5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac60:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40ac66:	eb 1d                	jmp    40ac85 <const2exp+0xa8>
  40ac68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac6c:	c7 00 07 00 00 00    	movl   $0x7,(%rax)
  40ac72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ac76:	48 8b 00             	mov    (%rax),%rax
  40ac79:	48 89 c2             	mov    %rax,%rdx
  40ac7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ac80:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40ac84:	90                   	nop
  40ac85:	90                   	nop
  40ac86:	5d                   	pop    %rbp
  40ac87:	c3                   	retq   

000000000040ac88 <luaK_setreturns>:
  40ac88:	55                   	push   %rbp
  40ac89:	48 89 e5             	mov    %rsp,%rbp
  40ac8c:	48 83 ec 30          	sub    $0x30,%rsp
  40ac90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ac94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40ac98:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40ac9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ac9f:	48 8b 00             	mov    (%rax),%rax
  40aca2:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40aca6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40acaa:	8b 40 08             	mov    0x8(%rax),%eax
  40acad:	48 98                	cltq   
  40acaf:	48 c1 e0 02          	shl    $0x2,%rax
  40acb3:	48 01 d0             	add    %rdx,%rax
  40acb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40acba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40acbe:	8b 00                	mov    (%rax),%eax
  40acc0:	83 f8 12             	cmp    $0x12,%eax
  40acc3:	75 20                	jne    40ace5 <luaK_setreturns+0x5d>
  40acc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40acc9:	8b 00                	mov    (%rax),%eax
  40accb:	25 ff ff ff 00       	and    $0xffffff,%eax
  40acd0:	89 c2                	mov    %eax,%edx
  40acd2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40acd5:	83 c0 01             	add    $0x1,%eax
  40acd8:	c1 e0 18             	shl    $0x18,%eax
  40acdb:	09 c2                	or     %eax,%edx
  40acdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ace1:	89 10                	mov    %edx,(%rax)
  40ace3:	eb 57                	jmp    40ad3c <luaK_setreturns+0xb4>
  40ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ace9:	8b 00                	mov    (%rax),%eax
  40aceb:	25 ff ff ff 00       	and    $0xffffff,%eax
  40acf0:	89 c2                	mov    %eax,%edx
  40acf2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40acf5:	83 c0 01             	add    $0x1,%eax
  40acf8:	c1 e0 18             	shl    $0x18,%eax
  40acfb:	09 c2                	or     %eax,%edx
  40acfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ad01:	89 10                	mov    %edx,(%rax)
  40ad03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ad07:	8b 00                	mov    (%rax),%eax
  40ad09:	25 7f 80 ff ff       	and    $0xffff807f,%eax
  40ad0e:	89 c2                	mov    %eax,%edx
  40ad10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ad14:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40ad18:	0f b6 c0             	movzbl %al,%eax
  40ad1b:	c1 e0 07             	shl    $0x7,%eax
  40ad1e:	25 80 7f 00 00       	and    $0x7f80,%eax
  40ad23:	09 c2                	or     %eax,%edx
  40ad25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ad29:	89 10                	mov    %edx,(%rax)
  40ad2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ad2f:	be 01 00 00 00       	mov    $0x1,%esi
  40ad34:	48 89 c7             	mov    %rax,%rdi
  40ad37:	e8 a3 f7 ff ff       	callq  40a4df <luaK_reserveregs>
  40ad3c:	90                   	nop
  40ad3d:	c9                   	leaveq 
  40ad3e:	c3                   	retq   

000000000040ad3f <str2K>:
  40ad3f:	55                   	push   %rbp
  40ad40:	48 89 e5             	mov    %rsp,%rbp
  40ad43:	48 83 ec 10          	sub    $0x10,%rsp
  40ad47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ad4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40ad4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ad53:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40ad57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ad5b:	48 89 d6             	mov    %rdx,%rsi
  40ad5e:	48 89 c7             	mov    %rax,%rdi
  40ad61:	e8 22 fb ff ff       	callq  40a888 <stringK>
  40ad66:	89 c2                	mov    %eax,%edx
  40ad68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ad6c:	89 50 08             	mov    %edx,0x8(%rax)
  40ad6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ad73:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
  40ad79:	90                   	nop
  40ad7a:	c9                   	leaveq 
  40ad7b:	c3                   	retq   

000000000040ad7c <luaK_setoneret>:
  40ad7c:	55                   	push   %rbp
  40ad7d:	48 89 e5             	mov    %rsp,%rbp
  40ad80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ad84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40ad88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ad8c:	8b 00                	mov    (%rax),%eax
  40ad8e:	83 f8 12             	cmp    $0x12,%eax
  40ad91:	75 36                	jne    40adc9 <luaK_setoneret+0x4d>
  40ad93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ad97:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40ad9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ada1:	48 8b 00             	mov    (%rax),%rax
  40ada4:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40ada8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40adac:	8b 40 08             	mov    0x8(%rax),%eax
  40adaf:	48 98                	cltq   
  40adb1:	48 c1 e0 02          	shl    $0x2,%rax
  40adb5:	48 01 d0             	add    %rdx,%rax
  40adb8:	8b 00                	mov    (%rax),%eax
  40adba:	c1 e8 07             	shr    $0x7,%eax
  40adbd:	0f b6 d0             	movzbl %al,%edx
  40adc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40adc4:	89 50 08             	mov    %edx,0x8(%rax)
  40adc7:	eb 5e                	jmp    40ae27 <luaK_setoneret+0xab>
  40adc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40adcd:	8b 00                	mov    (%rax),%eax
  40adcf:	83 f8 13             	cmp    $0x13,%eax
  40add2:	75 53                	jne    40ae27 <luaK_setoneret+0xab>
  40add4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40add8:	48 8b 00             	mov    (%rax),%rax
  40addb:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40addf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ade3:	8b 40 08             	mov    0x8(%rax),%eax
  40ade6:	48 98                	cltq   
  40ade8:	48 c1 e0 02          	shl    $0x2,%rax
  40adec:	48 01 d0             	add    %rdx,%rax
  40adef:	8b 00                	mov    (%rax),%eax
  40adf1:	25 ff ff ff 00       	and    $0xffffff,%eax
  40adf6:	89 c1                	mov    %eax,%ecx
  40adf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40adfc:	48 8b 00             	mov    (%rax),%rax
  40adff:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40ae03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae07:	8b 40 08             	mov    0x8(%rax),%eax
  40ae0a:	48 98                	cltq   
  40ae0c:	48 c1 e0 02          	shl    $0x2,%rax
  40ae10:	48 01 d0             	add    %rdx,%rax
  40ae13:	81 c9 00 00 00 02    	or     $0x2000000,%ecx
  40ae19:	89 ca                	mov    %ecx,%edx
  40ae1b:	89 10                	mov    %edx,(%rax)
  40ae1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae21:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40ae27:	90                   	nop
  40ae28:	5d                   	pop    %rbp
  40ae29:	c3                   	retq   

000000000040ae2a <luaK_dischargevars>:
  40ae2a:	55                   	push   %rbp
  40ae2b:	48 89 e5             	mov    %rsp,%rbp
  40ae2e:	48 83 ec 10          	sub    $0x10,%rsp
  40ae32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ae36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40ae3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae3e:	8b 00                	mov    (%rax),%eax
  40ae40:	83 e8 09             	sub    $0x9,%eax
  40ae43:	83 f8 0a             	cmp    $0xa,%eax
  40ae46:	0f 87 3e 02 00 00    	ja     40b08a <luaK_dischargevars+0x260>
  40ae4c:	89 c0                	mov    %eax,%eax
  40ae4e:	48 8b 04 c5 68 d8 43 	mov    0x43d868(,%rax,8),%rax
  40ae55:	00 
  40ae56:	ff e0                	jmpq   *%rax
  40ae58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40ae5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ae60:	48 89 d6             	mov    %rdx,%rsi
  40ae63:	48 89 c7             	mov    %rax,%rdi
  40ae66:	e8 8c ea ff ff       	callq  4098f7 <const2val>
  40ae6b:	48 89 c2             	mov    %rax,%rdx
  40ae6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae72:	48 89 c6             	mov    %rax,%rsi
  40ae75:	48 89 d7             	mov    %rdx,%rdi
  40ae78:	e8 60 fd ff ff       	callq  40abdd <const2exp>
  40ae7d:	e9 09 02 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40ae82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae86:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40ae8a:	0f b6 d0             	movzbl %al,%edx
  40ae8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae91:	89 50 08             	mov    %edx,0x8(%rax)
  40ae94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae98:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40ae9e:	e9 e8 01 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40aea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aea7:	8b 50 08             	mov    0x8(%rax),%edx
  40aeaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40aeae:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40aeb4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40aeba:	89 d1                	mov    %edx,%ecx
  40aebc:	ba 00 00 00 00       	mov    $0x0,%edx
  40aec1:	be 09 00 00 00       	mov    $0x9,%esi
  40aec6:	48 89 c7             	mov    %rax,%rdi
  40aec9:	e8 18 f4 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40aece:	89 c2                	mov    %eax,%edx
  40aed0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aed4:	89 50 08             	mov    %edx,0x8(%rax)
  40aed7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aedb:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40aee1:	e9 a5 01 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40aee6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aeea:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40aeee:	0f bf c8             	movswl %ax,%ecx
  40aef1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aef5:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40aef9:	0f b6 d0             	movzbl %al,%edx
  40aefc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40af00:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40af06:	41 89 c8             	mov    %ecx,%r8d
  40af09:	89 d1                	mov    %edx,%ecx
  40af0b:	ba 00 00 00 00       	mov    $0x0,%edx
  40af10:	be 0b 00 00 00       	mov    $0xb,%esi
  40af15:	48 89 c7             	mov    %rax,%rdi
  40af18:	e8 c9 f3 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40af1d:	89 c2                	mov    %eax,%edx
  40af1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af23:	89 50 08             	mov    %edx,0x8(%rax)
  40af26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af2a:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40af30:	e9 56 01 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40af35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af39:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40af3d:	0f b6 d0             	movzbl %al,%edx
  40af40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40af44:	89 d6                	mov    %edx,%esi
  40af46:	48 89 c7             	mov    %rax,%rdi
  40af49:	e8 c8 f5 ff ff       	callq  40a516 <freereg>
  40af4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af52:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40af56:	0f bf c8             	movswl %ax,%ecx
  40af59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af5d:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40af61:	0f b6 d0             	movzbl %al,%edx
  40af64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40af68:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40af6e:	41 89 c8             	mov    %ecx,%r8d
  40af71:	89 d1                	mov    %edx,%ecx
  40af73:	ba 00 00 00 00       	mov    $0x0,%edx
  40af78:	be 0d 00 00 00       	mov    $0xd,%esi
  40af7d:	48 89 c7             	mov    %rax,%rdi
  40af80:	e8 61 f3 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40af85:	89 c2                	mov    %eax,%edx
  40af87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af8b:	89 50 08             	mov    %edx,0x8(%rax)
  40af8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af92:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40af98:	e9 ee 00 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40af9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40afa1:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40afa5:	0f b6 d0             	movzbl %al,%edx
  40afa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40afac:	89 d6                	mov    %edx,%esi
  40afae:	48 89 c7             	mov    %rax,%rdi
  40afb1:	e8 60 f5 ff ff       	callq  40a516 <freereg>
  40afb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40afba:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40afbe:	0f bf c8             	movswl %ax,%ecx
  40afc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40afc5:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40afc9:	0f b6 d0             	movzbl %al,%edx
  40afcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40afd0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40afd6:	41 89 c8             	mov    %ecx,%r8d
  40afd9:	89 d1                	mov    %edx,%ecx
  40afdb:	ba 00 00 00 00       	mov    $0x0,%edx
  40afe0:	be 0e 00 00 00       	mov    $0xe,%esi
  40afe5:	48 89 c7             	mov    %rax,%rdi
  40afe8:	e8 f9 f2 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40afed:	89 c2                	mov    %eax,%edx
  40afef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40aff3:	89 50 08             	mov    %edx,0x8(%rax)
  40aff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40affa:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40b000:	e9 86 00 00 00       	jmpq   40b08b <luaK_dischargevars+0x261>
  40b005:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b009:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b00d:	0f bf d0             	movswl %ax,%edx
  40b010:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b014:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b018:	0f b6 c8             	movzbl %al,%ecx
  40b01b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b01f:	89 ce                	mov    %ecx,%esi
  40b021:	48 89 c7             	mov    %rax,%rdi
  40b024:	e8 22 f5 ff ff       	callq  40a54b <freeregs>
  40b029:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b02d:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b031:	0f bf c8             	movswl %ax,%ecx
  40b034:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b038:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b03c:	0f b6 d0             	movzbl %al,%edx
  40b03f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b043:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b049:	41 89 c8             	mov    %ecx,%r8d
  40b04c:	89 d1                	mov    %edx,%ecx
  40b04e:	ba 00 00 00 00       	mov    $0x0,%edx
  40b053:	be 0c 00 00 00       	mov    $0xc,%esi
  40b058:	48 89 c7             	mov    %rax,%rdi
  40b05b:	e8 86 f2 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b060:	89 c2                	mov    %eax,%edx
  40b062:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b066:	89 50 08             	mov    %edx,0x8(%rax)
  40b069:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b06d:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40b073:	eb 16                	jmp    40b08b <luaK_dischargevars+0x261>
  40b075:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b07d:	48 89 d6             	mov    %rdx,%rsi
  40b080:	48 89 c7             	mov    %rax,%rdi
  40b083:	e8 f4 fc ff ff       	callq  40ad7c <luaK_setoneret>
  40b088:	eb 01                	jmp    40b08b <luaK_dischargevars+0x261>
  40b08a:	90                   	nop
  40b08b:	90                   	nop
  40b08c:	c9                   	leaveq 
  40b08d:	c3                   	retq   

000000000040b08e <discharge2reg>:
  40b08e:	55                   	push   %rbp
  40b08f:	48 89 e5             	mov    %rsp,%rbp
  40b092:	48 83 ec 30          	sub    $0x30,%rsp
  40b096:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b09a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b09e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40b0a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b0a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b0a9:	48 89 d6             	mov    %rdx,%rsi
  40b0ac:	48 89 c7             	mov    %rax,%rdi
  40b0af:	e8 76 fd ff ff       	callq  40ae2a <luaK_dischargevars>
  40b0b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b0b8:	8b 00                	mov    (%rax),%eax
  40b0ba:	83 f8 11             	cmp    $0x11,%eax
  40b0bd:	0f 87 70 01 00 00    	ja     40b233 <discharge2reg+0x1a5>
  40b0c3:	89 c0                	mov    %eax,%eax
  40b0c5:	48 8b 04 c5 c0 d8 43 	mov    0x43d8c0(,%rax,8),%rax
  40b0cc:	00 
  40b0cd:	ff e0                	jmpq   *%rax
  40b0cf:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b0d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b0d6:	ba 01 00 00 00       	mov    $0x1,%edx
  40b0db:	89 ce                	mov    %ecx,%esi
  40b0dd:	48 89 c7             	mov    %rax,%rdi
  40b0e0:	e8 9e e9 ff ff       	callq  409a83 <luaK_nil>
  40b0e5:	e9 33 01 00 00       	jmpq   40b21d <discharge2reg+0x18f>
  40b0ea:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b0ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b0f1:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b0f7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b0fd:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b102:	be 05 00 00 00       	mov    $0x5,%esi
  40b107:	48 89 c7             	mov    %rax,%rdi
  40b10a:	e8 d7 f1 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b10f:	e9 09 01 00 00       	jmpq   40b21d <discharge2reg+0x18f>
  40b114:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b11b:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b121:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b127:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b12c:	be 07 00 00 00       	mov    $0x7,%esi
  40b131:	48 89 c7             	mov    %rax,%rdi
  40b134:	e8 ad f1 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b139:	e9 df 00 00 00       	jmpq   40b21d <discharge2reg+0x18f>
  40b13e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b146:	48 89 d6             	mov    %rdx,%rsi
  40b149:	48 89 c7             	mov    %rax,%rdi
  40b14c:	e8 ee fb ff ff       	callq  40ad3f <str2K>
  40b151:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b155:	8b 50 08             	mov    0x8(%rax),%edx
  40b158:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b15b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b15f:	89 ce                	mov    %ecx,%esi
  40b161:	48 89 c7             	mov    %rax,%rdi
  40b164:	e8 ad f2 ff ff       	callq  40a416 <luaK_codek>
  40b169:	e9 af 00 00 00       	jmpq   40b21d <discharge2reg+0x18f>
  40b16e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b172:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
  40b177:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b17e:	89 d6                	mov    %edx,%esi
  40b180:	48 89 c7             	mov    %rax,%rdi
  40b183:	e8 d4 f9 ff ff       	callq  40ab5c <luaK_float>
  40b188:	e9 90 00 00 00       	jmpq   40b21d <discharge2reg+0x18f>
  40b18d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b191:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40b195:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b19c:	89 ce                	mov    %ecx,%esi
  40b19e:	48 89 c7             	mov    %rax,%rdi
  40b1a1:	e8 4e f9 ff ff       	callq  40aaf4 <luaK_int>
  40b1a6:	eb 75                	jmp    40b21d <discharge2reg+0x18f>
  40b1a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b1ac:	48 8b 00             	mov    (%rax),%rax
  40b1af:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40b1b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b1b7:	8b 40 08             	mov    0x8(%rax),%eax
  40b1ba:	48 98                	cltq   
  40b1bc:	48 c1 e0 02          	shl    $0x2,%rax
  40b1c0:	48 01 d0             	add    %rdx,%rax
  40b1c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b1cb:	8b 00                	mov    (%rax),%eax
  40b1cd:	25 7f 80 ff ff       	and    $0xffff807f,%eax
  40b1d2:	89 c2                	mov    %eax,%edx
  40b1d4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40b1d7:	c1 e0 07             	shl    $0x7,%eax
  40b1da:	25 80 7f 00 00       	and    $0x7f80,%eax
  40b1df:	09 c2                	or     %eax,%edx
  40b1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b1e5:	89 10                	mov    %edx,(%rax)
  40b1e7:	eb 34                	jmp    40b21d <discharge2reg+0x18f>
  40b1e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b1ed:	8b 40 08             	mov    0x8(%rax),%eax
  40b1f0:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  40b1f3:	74 27                	je     40b21c <discharge2reg+0x18e>
  40b1f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b1f9:	8b 48 08             	mov    0x8(%rax),%ecx
  40b1fc:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b1ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b203:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b209:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b20f:	be 00 00 00 00       	mov    $0x0,%esi
  40b214:	48 89 c7             	mov    %rax,%rdi
  40b217:	e8 ca f0 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b21c:	90                   	nop
  40b21d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b221:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b224:	89 50 08             	mov    %edx,0x8(%rax)
  40b227:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b22b:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40b231:	eb 01                	jmp    40b234 <discharge2reg+0x1a6>
  40b233:	90                   	nop
  40b234:	c9                   	leaveq 
  40b235:	c3                   	retq   

000000000040b236 <discharge2anyreg>:
  40b236:	55                   	push   %rbp
  40b237:	48 89 e5             	mov    %rsp,%rbp
  40b23a:	48 83 ec 10          	sub    $0x10,%rsp
  40b23e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b242:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b246:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b24a:	8b 00                	mov    (%rax),%eax
  40b24c:	83 f8 08             	cmp    $0x8,%eax
  40b24f:	74 32                	je     40b283 <discharge2anyreg+0x4d>
  40b251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b255:	be 01 00 00 00       	mov    $0x1,%esi
  40b25a:	48 89 c7             	mov    %rax,%rdi
  40b25d:	e8 7d f2 ff ff       	callq  40a4df <luaK_reserveregs>
  40b262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b266:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40b26a:	0f b6 c0             	movzbl %al,%eax
  40b26d:	8d 50 ff             	lea    -0x1(%rax),%edx
  40b270:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40b274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b278:	48 89 ce             	mov    %rcx,%rsi
  40b27b:	48 89 c7             	mov    %rax,%rdi
  40b27e:	e8 0b fe ff ff       	callq  40b08e <discharge2reg>
  40b283:	90                   	nop
  40b284:	c9                   	leaveq 
  40b285:	c3                   	retq   

000000000040b286 <code_loadbool>:
  40b286:	55                   	push   %rbp
  40b287:	48 89 e5             	mov    %rsp,%rbp
  40b28a:	48 83 ec 10          	sub    $0x10,%rsp
  40b28e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b292:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40b295:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40b298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b29c:	48 89 c7             	mov    %rax,%rdi
  40b29f:	e8 0d eb ff ff       	callq  409db1 <luaK_getlabel>
  40b2a4:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40b2a7:	8b 75 f0             	mov    -0x10(%rbp),%esi
  40b2aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b2ae:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b2b4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b2ba:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b2bf:	48 89 c7             	mov    %rax,%rdi
  40b2c2:	e8 1f f0 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b2c7:	c9                   	leaveq 
  40b2c8:	c3                   	retq   

000000000040b2c9 <need_value>:
  40b2c9:	55                   	push   %rbp
  40b2ca:	48 89 e5             	mov    %rsp,%rbp
  40b2cd:	48 83 ec 20          	sub    $0x20,%rsp
  40b2d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b2d5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40b2d8:	eb 3c                	jmp    40b316 <need_value+0x4d>
  40b2da:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40b2dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b2e1:	89 d6                	mov    %edx,%esi
  40b2e3:	48 89 c7             	mov    %rax,%rdi
  40b2e6:	e8 e5 ea ff ff       	callq  409dd0 <getjumpcontrol>
  40b2eb:	8b 00                	mov    (%rax),%eax
  40b2ed:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b2f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b2f3:	83 e0 7f             	and    $0x7f,%eax
  40b2f6:	83 f8 43             	cmp    $0x43,%eax
  40b2f9:	74 07                	je     40b302 <need_value+0x39>
  40b2fb:	b8 01 00 00 00       	mov    $0x1,%eax
  40b300:	eb 1f                	jmp    40b321 <need_value+0x58>
  40b302:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40b305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b309:	89 d6                	mov    %edx,%esi
  40b30b:	48 89 c7             	mov    %rax,%rdi
  40b30e:	e8 86 e8 ff ff       	callq  409b99 <getjump>
  40b313:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40b316:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
  40b31a:	75 be                	jne    40b2da <need_value+0x11>
  40b31c:	b8 00 00 00 00       	mov    $0x0,%eax
  40b321:	c9                   	leaveq 
  40b322:	c3                   	retq   

000000000040b323 <exp2reg>:
  40b323:	55                   	push   %rbp
  40b324:	48 89 e5             	mov    %rsp,%rbp
  40b327:	48 83 ec 30          	sub    $0x30,%rsp
  40b32b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b32f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b333:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40b336:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b339:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b33d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b341:	48 89 ce             	mov    %rcx,%rsi
  40b344:	48 89 c7             	mov    %rax,%rdi
  40b347:	e8 42 fd ff ff       	callq  40b08e <discharge2reg>
  40b34c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b350:	8b 00                	mov    (%rax),%eax
  40b352:	83 f8 10             	cmp    $0x10,%eax
  40b355:	75 1e                	jne    40b375 <exp2reg+0x52>
  40b357:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b35b:	8b 50 08             	mov    0x8(%rax),%edx
  40b35e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b362:	48 8d 48 10          	lea    0x10(%rax),%rcx
  40b366:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b36a:	48 89 ce             	mov    %rcx,%rsi
  40b36d:	48 89 c7             	mov    %rax,%rdi
  40b370:	e8 f2 e8 ff ff       	callq  409c67 <luaK_concat>
  40b375:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b379:	8b 50 10             	mov    0x10(%rax),%edx
  40b37c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b380:	8b 40 14             	mov    0x14(%rax),%eax
  40b383:	39 c2                	cmp    %eax,%edx
  40b385:	0f 84 f1 00 00 00    	je     40b47c <exp2reg+0x159>
  40b38b:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  40b392:	c7 45 f8 ff ff ff ff 	movl   $0xffffffff,-0x8(%rbp)
  40b399:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b39d:	8b 50 10             	mov    0x10(%rax),%edx
  40b3a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b3a4:	89 d6                	mov    %edx,%esi
  40b3a6:	48 89 c7             	mov    %rax,%rdi
  40b3a9:	e8 1b ff ff ff       	callq  40b2c9 <need_value>
  40b3ae:	85 c0                	test   %eax,%eax
  40b3b0:	75 19                	jne    40b3cb <exp2reg+0xa8>
  40b3b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b3b6:	8b 50 14             	mov    0x14(%rax),%edx
  40b3b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b3bd:	89 d6                	mov    %edx,%esi
  40b3bf:	48 89 c7             	mov    %rax,%rdi
  40b3c2:	e8 02 ff ff ff       	callq  40b2c9 <need_value>
  40b3c7:	85 c0                	test   %eax,%eax
  40b3c9:	74 64                	je     40b42f <exp2reg+0x10c>
  40b3cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b3cf:	8b 00                	mov    (%rax),%eax
  40b3d1:	83 f8 10             	cmp    $0x10,%eax
  40b3d4:	74 0e                	je     40b3e4 <exp2reg+0xc1>
  40b3d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b3da:	48 89 c7             	mov    %rax,%rdi
  40b3dd:	e8 f8 e8 ff ff       	callq  409cda <luaK_jump>
  40b3e2:	eb 05                	jmp    40b3e9 <exp2reg+0xc6>
  40b3e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40b3e9:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40b3ec:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b3ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b3f3:	ba 06 00 00 00       	mov    $0x6,%edx
  40b3f8:	89 ce                	mov    %ecx,%esi
  40b3fa:	48 89 c7             	mov    %rax,%rdi
  40b3fd:	e8 84 fe ff ff       	callq  40b286 <code_loadbool>
  40b402:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b405:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b408:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b40c:	ba 07 00 00 00       	mov    $0x7,%edx
  40b411:	89 ce                	mov    %ecx,%esi
  40b413:	48 89 c7             	mov    %rax,%rdi
  40b416:	e8 6b fe ff ff       	callq  40b286 <code_loadbool>
  40b41b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40b41e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40b421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b425:	89 d6                	mov    %edx,%esi
  40b427:	48 89 c7             	mov    %rax,%rdi
  40b42a:	e8 a2 eb ff ff       	callq  409fd1 <luaK_patchtohere>
  40b42f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b433:	48 89 c7             	mov    %rax,%rdi
  40b436:	e8 76 e9 ff ff       	callq  409db1 <luaK_getlabel>
  40b43b:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40b43e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b442:	8b 70 14             	mov    0x14(%rax),%esi
  40b445:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40b448:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b44b:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40b44e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b452:	41 89 f8             	mov    %edi,%r8d
  40b455:	48 89 c7             	mov    %rax,%rdi
  40b458:	e8 c2 ea ff ff       	callq  409f1f <patchlistaux>
  40b45d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b461:	8b 70 10             	mov    0x10(%rax),%esi
  40b464:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40b467:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b46a:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40b46d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b471:	41 89 f8             	mov    %edi,%r8d
  40b474:	48 89 c7             	mov    %rax,%rdi
  40b477:	e8 a3 ea ff ff       	callq  409f1f <patchlistaux>
  40b47c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b480:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
  40b487:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b48b:	8b 50 10             	mov    0x10(%rax),%edx
  40b48e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b492:	89 50 14             	mov    %edx,0x14(%rax)
  40b495:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b499:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40b49c:	89 50 08             	mov    %edx,0x8(%rax)
  40b49f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b4a3:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40b4a9:	90                   	nop
  40b4aa:	c9                   	leaveq 
  40b4ab:	c3                   	retq   

000000000040b4ac <luaK_exp2nextreg>:
  40b4ac:	55                   	push   %rbp
  40b4ad:	48 89 e5             	mov    %rsp,%rbp
  40b4b0:	48 83 ec 10          	sub    $0x10,%rsp
  40b4b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b4b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b4bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b4c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b4c4:	48 89 d6             	mov    %rdx,%rsi
  40b4c7:	48 89 c7             	mov    %rax,%rdi
  40b4ca:	e8 5b f9 ff ff       	callq  40ae2a <luaK_dischargevars>
  40b4cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b4d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b4d7:	48 89 d6             	mov    %rdx,%rsi
  40b4da:	48 89 c7             	mov    %rax,%rdi
  40b4dd:	e8 cc f0 ff ff       	callq  40a5ae <freeexp>
  40b4e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b4e6:	be 01 00 00 00       	mov    $0x1,%esi
  40b4eb:	48 89 c7             	mov    %rax,%rdi
  40b4ee:	e8 ec ef ff ff       	callq  40a4df <luaK_reserveregs>
  40b4f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b4f7:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40b4fb:	0f b6 c0             	movzbl %al,%eax
  40b4fe:	8d 50 ff             	lea    -0x1(%rax),%edx
  40b501:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40b505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b509:	48 89 ce             	mov    %rcx,%rsi
  40b50c:	48 89 c7             	mov    %rax,%rdi
  40b50f:	e8 0f fe ff ff       	callq  40b323 <exp2reg>
  40b514:	90                   	nop
  40b515:	c9                   	leaveq 
  40b516:	c3                   	retq   

000000000040b517 <luaK_exp2anyreg>:
  40b517:	55                   	push   %rbp
  40b518:	48 89 e5             	mov    %rsp,%rbp
  40b51b:	53                   	push   %rbx
  40b51c:	48 83 ec 18          	sub    $0x18,%rsp
  40b520:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b524:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b528:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b52c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b530:	48 89 d6             	mov    %rdx,%rsi
  40b533:	48 89 c7             	mov    %rax,%rdi
  40b536:	e8 ef f8 ff ff       	callq  40ae2a <luaK_dischargevars>
  40b53b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b53f:	8b 00                	mov    (%rax),%eax
  40b541:	83 f8 08             	cmp    $0x8,%eax
  40b544:	75 55                	jne    40b59b <luaK_exp2anyreg+0x84>
  40b546:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b54a:	8b 50 10             	mov    0x10(%rax),%edx
  40b54d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b551:	8b 40 14             	mov    0x14(%rax),%eax
  40b554:	39 c2                	cmp    %eax,%edx
  40b556:	75 09                	jne    40b561 <luaK_exp2anyreg+0x4a>
  40b558:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b55c:	8b 40 08             	mov    0x8(%rax),%eax
  40b55f:	eb 54                	jmp    40b5b5 <luaK_exp2anyreg+0x9e>
  40b561:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b565:	8b 58 08             	mov    0x8(%rax),%ebx
  40b568:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b56c:	48 89 c7             	mov    %rax,%rdi
  40b56f:	e8 75 5b 01 00       	callq  4210e9 <luaY_nvarstack>
  40b574:	39 c3                	cmp    %eax,%ebx
  40b576:	7c 23                	jl     40b59b <luaK_exp2anyreg+0x84>
  40b578:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b57c:	8b 50 08             	mov    0x8(%rax),%edx
  40b57f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b583:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b587:	48 89 ce             	mov    %rcx,%rsi
  40b58a:	48 89 c7             	mov    %rax,%rdi
  40b58d:	e8 91 fd ff ff       	callq  40b323 <exp2reg>
  40b592:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b596:	8b 40 08             	mov    0x8(%rax),%eax
  40b599:	eb 1a                	jmp    40b5b5 <luaK_exp2anyreg+0x9e>
  40b59b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b59f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b5a3:	48 89 d6             	mov    %rdx,%rsi
  40b5a6:	48 89 c7             	mov    %rax,%rdi
  40b5a9:	e8 fe fe ff ff       	callq  40b4ac <luaK_exp2nextreg>
  40b5ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b5b2:	8b 40 08             	mov    0x8(%rax),%eax
  40b5b5:	48 83 c4 18          	add    $0x18,%rsp
  40b5b9:	5b                   	pop    %rbx
  40b5ba:	5d                   	pop    %rbp
  40b5bb:	c3                   	retq   

000000000040b5bc <luaK_exp2anyregup>:
  40b5bc:	55                   	push   %rbp
  40b5bd:	48 89 e5             	mov    %rsp,%rbp
  40b5c0:	48 83 ec 10          	sub    $0x10,%rsp
  40b5c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b5c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b5cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b5d0:	8b 00                	mov    (%rax),%eax
  40b5d2:	83 f8 0a             	cmp    $0xa,%eax
  40b5d5:	75 12                	jne    40b5e9 <luaK_exp2anyregup+0x2d>
  40b5d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b5db:	8b 50 10             	mov    0x10(%rax),%edx
  40b5de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b5e2:	8b 40 14             	mov    0x14(%rax),%eax
  40b5e5:	39 c2                	cmp    %eax,%edx
  40b5e7:	74 13                	je     40b5fc <luaK_exp2anyregup+0x40>
  40b5e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b5ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b5f1:	48 89 d6             	mov    %rdx,%rsi
  40b5f4:	48 89 c7             	mov    %rax,%rdi
  40b5f7:	e8 1b ff ff ff       	callq  40b517 <luaK_exp2anyreg>
  40b5fc:	90                   	nop
  40b5fd:	c9                   	leaveq 
  40b5fe:	c3                   	retq   

000000000040b5ff <luaK_exp2val>:
  40b5ff:	55                   	push   %rbp
  40b600:	48 89 e5             	mov    %rsp,%rbp
  40b603:	48 83 ec 10          	sub    $0x10,%rsp
  40b607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b60b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b60f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b613:	8b 50 10             	mov    0x10(%rax),%edx
  40b616:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b61a:	8b 40 14             	mov    0x14(%rax),%eax
  40b61d:	39 c2                	cmp    %eax,%edx
  40b61f:	74 15                	je     40b636 <luaK_exp2val+0x37>
  40b621:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b629:	48 89 d6             	mov    %rdx,%rsi
  40b62c:	48 89 c7             	mov    %rax,%rdi
  40b62f:	e8 e3 fe ff ff       	callq  40b517 <luaK_exp2anyreg>
  40b634:	eb 13                	jmp    40b649 <luaK_exp2val+0x4a>
  40b636:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b63e:	48 89 d6             	mov    %rdx,%rsi
  40b641:	48 89 c7             	mov    %rax,%rdi
  40b644:	e8 e1 f7 ff ff       	callq  40ae2a <luaK_dischargevars>
  40b649:	90                   	nop
  40b64a:	c9                   	leaveq 
  40b64b:	c3                   	retq   

000000000040b64c <luaK_exp2K>:
  40b64c:	55                   	push   %rbp
  40b64d:	48 89 e5             	mov    %rsp,%rbp
  40b650:	48 83 ec 20          	sub    $0x20,%rsp
  40b654:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b658:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b65c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b660:	8b 50 10             	mov    0x10(%rax),%edx
  40b663:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b667:	8b 40 14             	mov    0x14(%rax),%eax
  40b66a:	39 c2                	cmp    %eax,%edx
  40b66c:	0f 85 da 00 00 00    	jne    40b74c <luaK_exp2K+0x100>
  40b672:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b676:	8b 00                	mov    (%rax),%eax
  40b678:	83 f8 07             	cmp    $0x7,%eax
  40b67b:	0f 87 a0 00 00 00    	ja     40b721 <luaK_exp2K+0xd5>
  40b681:	89 c0                	mov    %eax,%eax
  40b683:	48 8b 04 c5 50 d9 43 	mov    0x43d950(,%rax,8),%rax
  40b68a:	00 
  40b68b:	ff e0                	jmpq   *%rax
  40b68d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b691:	48 89 c7             	mov    %rax,%rdi
  40b694:	e8 96 f3 ff ff       	callq  40aa2f <boolT>
  40b699:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b69c:	e9 87 00 00 00       	jmpq   40b728 <luaK_exp2K+0xdc>
  40b6a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b6a5:	48 89 c7             	mov    %rax,%rdi
  40b6a8:	e8 59 f3 ff ff       	callq  40aa06 <boolF>
  40b6ad:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b6b0:	eb 76                	jmp    40b728 <luaK_exp2K+0xdc>
  40b6b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b6b6:	48 89 c7             	mov    %rax,%rdi
  40b6b9:	e8 9a f3 ff ff       	callq  40aa58 <nilK>
  40b6be:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b6c1:	eb 65                	jmp    40b728 <luaK_exp2K+0xdc>
  40b6c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b6c7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40b6cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b6cf:	48 89 d6             	mov    %rdx,%rsi
  40b6d2:	48 89 c7             	mov    %rax,%rdi
  40b6d5:	e8 06 f2 ff ff       	callq  40a8e0 <luaK_intK>
  40b6da:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b6dd:	eb 49                	jmp    40b728 <luaK_exp2K+0xdc>
  40b6df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b6e3:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
  40b6e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b6ec:	48 89 c7             	mov    %rax,%rdi
  40b6ef:	e8 30 f2 ff ff       	callq  40a924 <luaK_numberK>
  40b6f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b6f7:	eb 2f                	jmp    40b728 <luaK_exp2K+0xdc>
  40b6f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b6fd:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40b701:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b705:	48 89 d6             	mov    %rdx,%rsi
  40b708:	48 89 c7             	mov    %rax,%rdi
  40b70b:	e8 78 f1 ff ff       	callq  40a888 <stringK>
  40b710:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b713:	eb 13                	jmp    40b728 <luaK_exp2K+0xdc>
  40b715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b719:	8b 40 08             	mov    0x8(%rax),%eax
  40b71c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b71f:	eb 07                	jmp    40b728 <luaK_exp2K+0xdc>
  40b721:	b8 00 00 00 00       	mov    $0x0,%eax
  40b726:	eb 29                	jmp    40b751 <luaK_exp2K+0x105>
  40b728:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
  40b72f:	7f 1b                	jg     40b74c <luaK_exp2K+0x100>
  40b731:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b735:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
  40b73b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b73f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40b742:	89 50 08             	mov    %edx,0x8(%rax)
  40b745:	b8 01 00 00 00       	mov    $0x1,%eax
  40b74a:	eb 05                	jmp    40b751 <luaK_exp2K+0x105>
  40b74c:	b8 00 00 00 00       	mov    $0x0,%eax
  40b751:	c9                   	leaveq 
  40b752:	c3                   	retq   

000000000040b753 <luaK_exp2RK>:
  40b753:	55                   	push   %rbp
  40b754:	48 89 e5             	mov    %rsp,%rbp
  40b757:	48 83 ec 10          	sub    $0x10,%rsp
  40b75b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b75f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b763:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b76b:	48 89 d6             	mov    %rdx,%rsi
  40b76e:	48 89 c7             	mov    %rax,%rdi
  40b771:	e8 d6 fe ff ff       	callq  40b64c <luaK_exp2K>
  40b776:	85 c0                	test   %eax,%eax
  40b778:	74 07                	je     40b781 <luaK_exp2RK+0x2e>
  40b77a:	b8 01 00 00 00       	mov    $0x1,%eax
  40b77f:	eb 18                	jmp    40b799 <luaK_exp2RK+0x46>
  40b781:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b789:	48 89 d6             	mov    %rdx,%rsi
  40b78c:	48 89 c7             	mov    %rax,%rdi
  40b78f:	e8 83 fd ff ff       	callq  40b517 <luaK_exp2anyreg>
  40b794:	b8 00 00 00 00       	mov    $0x0,%eax
  40b799:	c9                   	leaveq 
  40b79a:	c3                   	retq   

000000000040b79b <codeABRK>:
  40b79b:	55                   	push   %rbp
  40b79c:	48 89 e5             	mov    %rsp,%rbp
  40b79f:	48 83 ec 30          	sub    $0x30,%rsp
  40b7a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b7a7:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40b7aa:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40b7ad:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  40b7b0:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  40b7b4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40b7b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b7bc:	48 89 d6             	mov    %rdx,%rsi
  40b7bf:	48 89 c7             	mov    %rax,%rdi
  40b7c2:	e8 8c ff ff ff       	callq  40b753 <luaK_exp2RK>
  40b7c7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b7ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b7ce:	8b 78 08             	mov    0x8(%rax),%edi
  40b7d1:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
  40b7d5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40b7d8:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40b7db:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40b7de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b7e2:	45 89 c1             	mov    %r8d,%r9d
  40b7e5:	41 89 f8             	mov    %edi,%r8d
  40b7e8:	48 89 c7             	mov    %rax,%rdi
  40b7eb:	e8 f6 ea ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b7f0:	90                   	nop
  40b7f1:	c9                   	leaveq 
  40b7f2:	c3                   	retq   

000000000040b7f3 <luaK_storevar>:
  40b7f3:	55                   	push   %rbp
  40b7f4:	48 89 e5             	mov    %rsp,%rbp
  40b7f7:	48 83 ec 30          	sub    $0x30,%rsp
  40b7fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b7ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b803:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40b807:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b80b:	8b 00                	mov    (%rax),%eax
  40b80d:	83 e8 09             	sub    $0x9,%eax
  40b810:	83 f8 06             	cmp    $0x6,%eax
  40b813:	0f 87 46 01 00 00    	ja     40b95f <luaK_storevar+0x16c>
  40b819:	89 c0                	mov    %eax,%eax
  40b81b:	48 8b 04 c5 90 d9 43 	mov    0x43d990(,%rax,8),%rax
  40b822:	00 
  40b823:	ff e0                	jmpq   *%rax
  40b825:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40b829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b82d:	48 89 d6             	mov    %rdx,%rsi
  40b830:	48 89 c7             	mov    %rax,%rdi
  40b833:	e8 76 ed ff ff       	callq  40a5ae <freeexp>
  40b838:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b83c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40b840:	0f b6 d0             	movzbl %al,%edx
  40b843:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40b847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b84b:	48 89 ce             	mov    %rcx,%rsi
  40b84e:	48 89 c7             	mov    %rax,%rdi
  40b851:	e8 cd fa ff ff       	callq  40b323 <exp2reg>
  40b856:	e9 17 01 00 00       	jmpq   40b972 <luaK_storevar+0x17f>
  40b85b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40b85f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b863:	48 89 d6             	mov    %rdx,%rsi
  40b866:	48 89 c7             	mov    %rax,%rdi
  40b869:	e8 a9 fc ff ff       	callq  40b517 <luaK_exp2anyreg>
  40b86e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b871:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b875:	8b 48 08             	mov    0x8(%rax),%ecx
  40b878:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40b87b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b87f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b885:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b88b:	be 0a 00 00 00       	mov    $0xa,%esi
  40b890:	48 89 c7             	mov    %rax,%rdi
  40b893:	e8 4e ea ff ff       	callq  40a2e6 <luaK_codeABCk>
  40b898:	e9 c2 00 00 00       	jmpq   40b95f <luaK_storevar+0x16c>
  40b89d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b8a1:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b8a5:	0f bf c8             	movswl %ax,%ecx
  40b8a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b8ac:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b8b0:	0f b6 d0             	movzbl %al,%edx
  40b8b3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40b8b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b8bb:	49 89 f0             	mov    %rsi,%r8
  40b8be:	be 0f 00 00 00       	mov    $0xf,%esi
  40b8c3:	48 89 c7             	mov    %rax,%rdi
  40b8c6:	e8 d0 fe ff ff       	callq  40b79b <codeABRK>
  40b8cb:	e9 8f 00 00 00       	jmpq   40b95f <luaK_storevar+0x16c>
  40b8d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b8d4:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b8d8:	0f bf c8             	movswl %ax,%ecx
  40b8db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b8df:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b8e3:	0f b6 d0             	movzbl %al,%edx
  40b8e6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40b8ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b8ee:	49 89 f0             	mov    %rsi,%r8
  40b8f1:	be 11 00 00 00       	mov    $0x11,%esi
  40b8f6:	48 89 c7             	mov    %rax,%rdi
  40b8f9:	e8 9d fe ff ff       	callq  40b79b <codeABRK>
  40b8fe:	eb 5f                	jmp    40b95f <luaK_storevar+0x16c>
  40b900:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b904:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b908:	0f bf c8             	movswl %ax,%ecx
  40b90b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b90f:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b913:	0f b6 d0             	movzbl %al,%edx
  40b916:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40b91a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b91e:	49 89 f0             	mov    %rsi,%r8
  40b921:	be 12 00 00 00       	mov    $0x12,%esi
  40b926:	48 89 c7             	mov    %rax,%rdi
  40b929:	e8 6d fe ff ff       	callq  40b79b <codeABRK>
  40b92e:	eb 2f                	jmp    40b95f <luaK_storevar+0x16c>
  40b930:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b934:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  40b938:	0f bf c8             	movswl %ax,%ecx
  40b93b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b93f:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40b943:	0f b6 d0             	movzbl %al,%edx
  40b946:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40b94a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b94e:	49 89 f0             	mov    %rsi,%r8
  40b951:	be 10 00 00 00       	mov    $0x10,%esi
  40b956:	48 89 c7             	mov    %rax,%rdi
  40b959:	e8 3d fe ff ff       	callq  40b79b <codeABRK>
  40b95e:	90                   	nop
  40b95f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40b963:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b967:	48 89 d6             	mov    %rdx,%rsi
  40b96a:	48 89 c7             	mov    %rax,%rdi
  40b96d:	e8 3c ec ff ff       	callq  40a5ae <freeexp>
  40b972:	c9                   	leaveq 
  40b973:	c3                   	retq   

000000000040b974 <luaK_self>:
  40b974:	55                   	push   %rbp
  40b975:	48 89 e5             	mov    %rsp,%rbp
  40b978:	48 83 ec 30          	sub    $0x30,%rsp
  40b97c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b980:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b984:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40b988:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b98c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b990:	48 89 d6             	mov    %rdx,%rsi
  40b993:	48 89 c7             	mov    %rax,%rdi
  40b996:	e8 7c fb ff ff       	callq  40b517 <luaK_exp2anyreg>
  40b99b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b99f:	8b 40 08             	mov    0x8(%rax),%eax
  40b9a2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b9a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b9a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b9ad:	48 89 d6             	mov    %rdx,%rsi
  40b9b0:	48 89 c7             	mov    %rax,%rdi
  40b9b3:	e8 f6 eb ff ff       	callq  40a5ae <freeexp>
  40b9b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b9bc:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  40b9c0:	0f b6 d0             	movzbl %al,%edx
  40b9c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b9c7:	89 50 08             	mov    %edx,0x8(%rax)
  40b9ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b9ce:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40b9d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b9d8:	be 02 00 00 00       	mov    $0x2,%esi
  40b9dd:	48 89 c7             	mov    %rax,%rdi
  40b9e0:	e8 fa ea ff ff       	callq  40a4df <luaK_reserveregs>
  40b9e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b9e9:	8b 50 08             	mov    0x8(%rax),%edx
  40b9ec:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40b9f0:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40b9f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b9f7:	49 89 f0             	mov    %rsi,%r8
  40b9fa:	be 14 00 00 00       	mov    $0x14,%esi
  40b9ff:	48 89 c7             	mov    %rax,%rdi
  40ba02:	e8 94 fd ff ff       	callq  40b79b <codeABRK>
  40ba07:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ba0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ba0f:	48 89 d6             	mov    %rdx,%rsi
  40ba12:	48 89 c7             	mov    %rax,%rdi
  40ba15:	e8 94 eb ff ff       	callq  40a5ae <freeexp>
  40ba1a:	90                   	nop
  40ba1b:	c9                   	leaveq 
  40ba1c:	c3                   	retq   

000000000040ba1d <negatecondition>:
  40ba1d:	55                   	push   %rbp
  40ba1e:	48 89 e5             	mov    %rsp,%rbp
  40ba21:	48 83 ec 20          	sub    $0x20,%rsp
  40ba25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ba29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40ba2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ba31:	8b 50 08             	mov    0x8(%rax),%edx
  40ba34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ba38:	89 d6                	mov    %edx,%esi
  40ba3a:	48 89 c7             	mov    %rax,%rdi
  40ba3d:	e8 8e e3 ff ff       	callq  409dd0 <getjumpcontrol>
  40ba42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40ba46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ba4a:	8b 00                	mov    (%rax),%eax
  40ba4c:	80 e4 7f             	and    $0x7f,%ah
  40ba4f:	89 c2                	mov    %eax,%edx
  40ba51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ba55:	8b 00                	mov    (%rax),%eax
  40ba57:	c1 e8 0f             	shr    $0xf,%eax
  40ba5a:	83 e0 01             	and    $0x1,%eax
  40ba5d:	85 c0                	test   %eax,%eax
  40ba5f:	75 07                	jne    40ba68 <negatecondition+0x4b>
  40ba61:	b8 00 80 00 00       	mov    $0x8000,%eax
  40ba66:	eb 05                	jmp    40ba6d <negatecondition+0x50>
  40ba68:	b8 00 00 00 00       	mov    $0x0,%eax
  40ba6d:	09 c2                	or     %eax,%edx
  40ba6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ba73:	89 10                	mov    %edx,(%rax)
  40ba75:	90                   	nop
  40ba76:	c9                   	leaveq 
  40ba77:	c3                   	retq   

000000000040ba78 <jumponcond>:
  40ba78:	55                   	push   %rbp
  40ba79:	48 89 e5             	mov    %rsp,%rbp
  40ba7c:	48 83 ec 30          	sub    $0x30,%rsp
  40ba80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ba84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40ba88:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40ba8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ba8f:	8b 00                	mov    (%rax),%eax
  40ba91:	83 f8 11             	cmp    $0x11,%eax
  40ba94:	75 6b                	jne    40bb01 <jumponcond+0x89>
  40ba96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ba9a:	48 8b 00             	mov    (%rax),%rax
  40ba9d:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40baa1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40baa5:	8b 40 08             	mov    0x8(%rax),%eax
  40baa8:	48 98                	cltq   
  40baaa:	48 c1 e0 02          	shl    $0x2,%rax
  40baae:	48 01 d0             	add    %rdx,%rax
  40bab1:	8b 00                	mov    (%rax),%eax
  40bab3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bab6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40bab9:	83 e0 7f             	and    $0x7f,%eax
  40babc:	83 f8 33             	cmp    $0x33,%eax
  40babf:	75 40                	jne    40bb01 <jumponcond+0x89>
  40bac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bac5:	48 89 c7             	mov    %rax,%rdi
  40bac8:	e8 32 e7 ff ff       	callq  40a1ff <removelastinstruction>
  40bacd:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  40bad1:	0f 94 c0             	sete   %al
  40bad4:	0f b6 c8             	movzbl %al,%ecx
  40bad7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40bada:	c1 e8 10             	shr    $0x10,%eax
  40badd:	0f b6 d0             	movzbl %al,%edx
  40bae0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bae4:	41 89 c9             	mov    %ecx,%r9d
  40bae7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40baed:	b9 00 00 00 00       	mov    $0x0,%ecx
  40baf2:	be 42 00 00 00       	mov    $0x42,%esi
  40baf7:	48 89 c7             	mov    %rax,%rdi
  40bafa:	e8 65 e2 ff ff       	callq  409d64 <condjump>
  40baff:	eb 51                	jmp    40bb52 <jumponcond+0xda>
  40bb01:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bb05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bb09:	48 89 d6             	mov    %rdx,%rsi
  40bb0c:	48 89 c7             	mov    %rax,%rdi
  40bb0f:	e8 22 f7 ff ff       	callq  40b236 <discharge2anyreg>
  40bb14:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bb18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bb1c:	48 89 d6             	mov    %rdx,%rsi
  40bb1f:	48 89 c7             	mov    %rax,%rdi
  40bb22:	e8 87 ea ff ff       	callq  40a5ae <freeexp>
  40bb27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bb2b:	8b 50 08             	mov    0x8(%rax),%edx
  40bb2e:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40bb31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bb35:	41 89 c9             	mov    %ecx,%r9d
  40bb38:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40bb3e:	89 d1                	mov    %edx,%ecx
  40bb40:	ba ff 00 00 00       	mov    $0xff,%edx
  40bb45:	be 43 00 00 00       	mov    $0x43,%esi
  40bb4a:	48 89 c7             	mov    %rax,%rdi
  40bb4d:	e8 12 e2 ff ff       	callq  409d64 <condjump>
  40bb52:	c9                   	leaveq 
  40bb53:	c3                   	retq   

000000000040bb54 <luaK_goiftrue>:
  40bb54:	55                   	push   %rbp
  40bb55:	48 89 e5             	mov    %rsp,%rbp
  40bb58:	48 83 ec 20          	sub    $0x20,%rsp
  40bb5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40bb60:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40bb64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bb68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bb6c:	48 89 d6             	mov    %rdx,%rsi
  40bb6f:	48 89 c7             	mov    %rax,%rdi
  40bb72:	e8 b3 f2 ff ff       	callq  40ae2a <luaK_dischargevars>
  40bb77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bb7b:	8b 00                	mov    (%rax),%eax
  40bb7d:	83 f8 07             	cmp    $0x7,%eax
  40bb80:	77 0c                	ja     40bb8e <luaK_goiftrue+0x3a>
  40bb82:	83 f8 04             	cmp    $0x4,%eax
  40bb85:	73 2b                	jae    40bbb2 <luaK_goiftrue+0x5e>
  40bb87:	83 f8 02             	cmp    $0x2,%eax
  40bb8a:	74 26                	je     40bbb2 <luaK_goiftrue+0x5e>
  40bb8c:	eb 2d                	jmp    40bbbb <luaK_goiftrue+0x67>
  40bb8e:	83 f8 10             	cmp    $0x10,%eax
  40bb91:	75 28                	jne    40bbbb <luaK_goiftrue+0x67>
  40bb93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bb97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bb9b:	48 89 d6             	mov    %rdx,%rsi
  40bb9e:	48 89 c7             	mov    %rax,%rdi
  40bba1:	e8 77 fe ff ff       	callq  40ba1d <negatecondition>
  40bba6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bbaa:	8b 40 08             	mov    0x8(%rax),%eax
  40bbad:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bbb0:	eb 25                	jmp    40bbd7 <luaK_goiftrue+0x83>
  40bbb2:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  40bbb9:	eb 1c                	jmp    40bbd7 <luaK_goiftrue+0x83>
  40bbbb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40bbbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bbc3:	ba 00 00 00 00       	mov    $0x0,%edx
  40bbc8:	48 89 ce             	mov    %rcx,%rsi
  40bbcb:	48 89 c7             	mov    %rax,%rdi
  40bbce:	e8 a5 fe ff ff       	callq  40ba78 <jumponcond>
  40bbd3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bbd6:	90                   	nop
  40bbd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bbdb:	48 8d 48 14          	lea    0x14(%rax),%rcx
  40bbdf:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40bbe2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bbe6:	48 89 ce             	mov    %rcx,%rsi
  40bbe9:	48 89 c7             	mov    %rax,%rdi
  40bbec:	e8 76 e0 ff ff       	callq  409c67 <luaK_concat>
  40bbf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bbf5:	8b 50 10             	mov    0x10(%rax),%edx
  40bbf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bbfc:	89 d6                	mov    %edx,%esi
  40bbfe:	48 89 c7             	mov    %rax,%rdi
  40bc01:	e8 cb e3 ff ff       	callq  409fd1 <luaK_patchtohere>
  40bc06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bc0a:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
  40bc11:	90                   	nop
  40bc12:	c9                   	leaveq 
  40bc13:	c3                   	retq   

000000000040bc14 <luaK_goiffalse>:
  40bc14:	55                   	push   %rbp
  40bc15:	48 89 e5             	mov    %rsp,%rbp
  40bc18:	48 83 ec 20          	sub    $0x20,%rsp
  40bc1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40bc20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40bc24:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bc28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bc2c:	48 89 d6             	mov    %rdx,%rsi
  40bc2f:	48 89 c7             	mov    %rax,%rdi
  40bc32:	e8 f3 f1 ff ff       	callq  40ae2a <luaK_dischargevars>
  40bc37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bc3b:	8b 00                	mov    (%rax),%eax
  40bc3d:	83 f8 03             	cmp    $0x3,%eax
  40bc40:	74 18                	je     40bc5a <luaK_goiffalse+0x46>
  40bc42:	83 f8 10             	cmp    $0x10,%eax
  40bc45:	74 07                	je     40bc4e <luaK_goiffalse+0x3a>
  40bc47:	83 f8 01             	cmp    $0x1,%eax
  40bc4a:	74 0e                	je     40bc5a <luaK_goiffalse+0x46>
  40bc4c:	eb 15                	jmp    40bc63 <luaK_goiffalse+0x4f>
  40bc4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bc52:	8b 40 08             	mov    0x8(%rax),%eax
  40bc55:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bc58:	eb 25                	jmp    40bc7f <luaK_goiffalse+0x6b>
  40bc5a:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  40bc61:	eb 1c                	jmp    40bc7f <luaK_goiffalse+0x6b>
  40bc63:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40bc67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bc6b:	ba 01 00 00 00       	mov    $0x1,%edx
  40bc70:	48 89 ce             	mov    %rcx,%rsi
  40bc73:	48 89 c7             	mov    %rax,%rdi
  40bc76:	e8 fd fd ff ff       	callq  40ba78 <jumponcond>
  40bc7b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bc7e:	90                   	nop
  40bc7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bc83:	48 8d 48 10          	lea    0x10(%rax),%rcx
  40bc87:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40bc8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bc8e:	48 89 ce             	mov    %rcx,%rsi
  40bc91:	48 89 c7             	mov    %rax,%rdi
  40bc94:	e8 ce df ff ff       	callq  409c67 <luaK_concat>
  40bc99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bc9d:	8b 50 14             	mov    0x14(%rax),%edx
  40bca0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bca4:	89 d6                	mov    %edx,%esi
  40bca6:	48 89 c7             	mov    %rax,%rdi
  40bca9:	e8 23 e3 ff ff       	callq  409fd1 <luaK_patchtohere>
  40bcae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bcb2:	c7 40 14 ff ff ff ff 	movl   $0xffffffff,0x14(%rax)
  40bcb9:	90                   	nop
  40bcba:	c9                   	leaveq 
  40bcbb:	c3                   	retq   

000000000040bcbc <codenot>:
  40bcbc:	55                   	push   %rbp
  40bcbd:	48 89 e5             	mov    %rsp,%rbp
  40bcc0:	48 83 ec 20          	sub    $0x20,%rsp
  40bcc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40bcc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40bccc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bcd0:	8b 00                	mov    (%rax),%eax
  40bcd2:	83 f8 11             	cmp    $0x11,%eax
  40bcd5:	0f 87 a1 00 00 00    	ja     40bd7c <codenot+0xc0>
  40bcdb:	89 c0                	mov    %eax,%eax
  40bcdd:	48 8b 04 c5 c8 d9 43 	mov    0x43d9c8(,%rax,8),%rax
  40bce4:	00 
  40bce5:	ff e0                	jmpq   *%rax
  40bce7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bceb:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  40bcf1:	e9 86 00 00 00       	jmpq   40bd7c <codenot+0xc0>
  40bcf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bcfa:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  40bd00:	eb 7a                	jmp    40bd7c <codenot+0xc0>
  40bd02:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bd06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd0a:	48 89 d6             	mov    %rdx,%rsi
  40bd0d:	48 89 c7             	mov    %rax,%rdi
  40bd10:	e8 08 fd ff ff       	callq  40ba1d <negatecondition>
  40bd15:	eb 65                	jmp    40bd7c <codenot+0xc0>
  40bd17:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bd1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd1f:	48 89 d6             	mov    %rdx,%rsi
  40bd22:	48 89 c7             	mov    %rax,%rdi
  40bd25:	e8 0c f5 ff ff       	callq  40b236 <discharge2anyreg>
  40bd2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40bd2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd32:	48 89 d6             	mov    %rdx,%rsi
  40bd35:	48 89 c7             	mov    %rax,%rdi
  40bd38:	e8 71 e8 ff ff       	callq  40a5ae <freeexp>
  40bd3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd41:	8b 50 08             	mov    0x8(%rax),%edx
  40bd44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd48:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40bd4e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40bd54:	89 d1                	mov    %edx,%ecx
  40bd56:	ba 00 00 00 00       	mov    $0x0,%edx
  40bd5b:	be 33 00 00 00       	mov    $0x33,%esi
  40bd60:	48 89 c7             	mov    %rax,%rdi
  40bd63:	e8 7e e5 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40bd68:	89 c2                	mov    %eax,%edx
  40bd6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd6e:	89 50 08             	mov    %edx,0x8(%rax)
  40bd71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd75:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40bd7b:	90                   	nop
  40bd7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd80:	8b 40 14             	mov    0x14(%rax),%eax
  40bd83:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40bd86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd8a:	8b 50 10             	mov    0x10(%rax),%edx
  40bd8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd91:	89 50 14             	mov    %edx,0x14(%rax)
  40bd94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bd98:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40bd9b:	89 50 10             	mov    %edx,0x10(%rax)
  40bd9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bda2:	8b 50 14             	mov    0x14(%rax),%edx
  40bda5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bda9:	89 d6                	mov    %edx,%esi
  40bdab:	48 89 c7             	mov    %rax,%rdi
  40bdae:	e8 28 e1 ff ff       	callq  409edb <removevalues>
  40bdb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bdb7:	8b 50 10             	mov    0x10(%rax),%edx
  40bdba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bdbe:	89 d6                	mov    %edx,%esi
  40bdc0:	48 89 c7             	mov    %rax,%rdi
  40bdc3:	e8 13 e1 ff ff       	callq  409edb <removevalues>
  40bdc8:	90                   	nop
  40bdc9:	c9                   	leaveq 
  40bdca:	c3                   	retq   

000000000040bdcb <isKstr>:
  40bdcb:	55                   	push   %rbp
  40bdcc:	48 89 e5             	mov    %rsp,%rbp
  40bdcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bdd3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40bdd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bddb:	8b 00                	mov    (%rax),%eax
  40bddd:	83 f8 04             	cmp    $0x4,%eax
  40bde0:	75 4a                	jne    40be2c <isKstr+0x61>
  40bde2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bde6:	8b 50 10             	mov    0x10(%rax),%edx
  40bde9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bded:	8b 40 14             	mov    0x14(%rax),%eax
  40bdf0:	39 c2                	cmp    %eax,%edx
  40bdf2:	75 38                	jne    40be2c <isKstr+0x61>
  40bdf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bdf8:	8b 40 08             	mov    0x8(%rax),%eax
  40bdfb:	3d ff 00 00 00       	cmp    $0xff,%eax
  40be00:	7f 2a                	jg     40be2c <isKstr+0x61>
  40be02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be06:	48 8b 00             	mov    (%rax),%rax
  40be09:	48 8b 50 38          	mov    0x38(%rax),%rdx
  40be0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40be11:	8b 40 08             	mov    0x8(%rax),%eax
  40be14:	48 98                	cltq   
  40be16:	48 c1 e0 04          	shl    $0x4,%rax
  40be1a:	48 01 d0             	add    %rdx,%rax
  40be1d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40be21:	3c 44                	cmp    $0x44,%al
  40be23:	75 07                	jne    40be2c <isKstr+0x61>
  40be25:	b8 01 00 00 00       	mov    $0x1,%eax
  40be2a:	eb 05                	jmp    40be31 <isKstr+0x66>
  40be2c:	b8 00 00 00 00       	mov    $0x0,%eax
  40be31:	5d                   	pop    %rbp
  40be32:	c3                   	retq   

000000000040be33 <luaK_isKint>:
  40be33:	55                   	push   %rbp
  40be34:	48 89 e5             	mov    %rsp,%rbp
  40be37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40be3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be3f:	8b 00                	mov    (%rax),%eax
  40be41:	83 f8 06             	cmp    $0x6,%eax
  40be44:	75 19                	jne    40be5f <luaK_isKint+0x2c>
  40be46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be4a:	8b 50 10             	mov    0x10(%rax),%edx
  40be4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be51:	8b 40 14             	mov    0x14(%rax),%eax
  40be54:	39 c2                	cmp    %eax,%edx
  40be56:	75 07                	jne    40be5f <luaK_isKint+0x2c>
  40be58:	b8 01 00 00 00       	mov    $0x1,%eax
  40be5d:	eb 05                	jmp    40be64 <luaK_isKint+0x31>
  40be5f:	b8 00 00 00 00       	mov    $0x0,%eax
  40be64:	5d                   	pop    %rbp
  40be65:	c3                   	retq   

000000000040be66 <isCint>:
  40be66:	55                   	push   %rbp
  40be67:	48 89 e5             	mov    %rsp,%rbp
  40be6a:	48 83 ec 08          	sub    $0x8,%rsp
  40be6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40be72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be76:	48 89 c7             	mov    %rax,%rdi
  40be79:	e8 b5 ff ff ff       	callq  40be33 <luaK_isKint>
  40be7e:	85 c0                	test   %eax,%eax
  40be80:	74 17                	je     40be99 <isCint+0x33>
  40be82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be86:	48 8b 40 08          	mov    0x8(%rax),%rax
  40be8a:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40be90:	77 07                	ja     40be99 <isCint+0x33>
  40be92:	b8 01 00 00 00       	mov    $0x1,%eax
  40be97:	eb 05                	jmp    40be9e <isCint+0x38>
  40be99:	b8 00 00 00 00       	mov    $0x0,%eax
  40be9e:	c9                   	leaveq 
  40be9f:	c3                   	retq   

000000000040bea0 <isSCint>:
  40bea0:	55                   	push   %rbp
  40bea1:	48 89 e5             	mov    %rsp,%rbp
  40bea4:	48 83 ec 08          	sub    $0x8,%rsp
  40bea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40beac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40beb0:	48 89 c7             	mov    %rax,%rdi
  40beb3:	e8 7b ff ff ff       	callq  40be33 <luaK_isKint>
  40beb8:	85 c0                	test   %eax,%eax
  40beba:	74 1b                	je     40bed7 <isSCint+0x37>
  40bebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bec0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bec4:	48 89 c7             	mov    %rax,%rdi
  40bec7:	e8 e0 eb ff ff       	callq  40aaac <fitsC>
  40becc:	85 c0                	test   %eax,%eax
  40bece:	74 07                	je     40bed7 <isSCint+0x37>
  40bed0:	b8 01 00 00 00       	mov    $0x1,%eax
  40bed5:	eb 05                	jmp    40bedc <isSCint+0x3c>
  40bed7:	b8 00 00 00 00       	mov    $0x0,%eax
  40bedc:	c9                   	leaveq 
  40bedd:	c3                   	retq   

000000000040bede <isSCnumber>:
  40bede:	55                   	push   %rbp
  40bedf:	48 89 e5             	mov    %rsp,%rbp
  40bee2:	48 83 ec 30          	sub    $0x30,%rsp
  40bee6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40beea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40beee:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40bef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bef6:	8b 00                	mov    (%rax),%eax
  40bef8:	83 f8 06             	cmp    $0x6,%eax
  40befb:	75 0e                	jne    40bf0b <isSCnumber+0x2d>
  40befd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf01:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bf05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40bf09:	eb 3c                	jmp    40bf47 <isSCnumber+0x69>
  40bf0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf0f:	8b 00                	mov    (%rax),%eax
  40bf11:	83 f8 05             	cmp    $0x5,%eax
  40bf14:	75 2a                	jne    40bf40 <isSCnumber+0x62>
  40bf16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf1a:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
  40bf1f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  40bf23:	be 00 00 00 00       	mov    $0x0,%esi
  40bf28:	48 89 c7             	mov    %rax,%rdi
  40bf2b:	e8 8f 69 02 00       	callq  4328bf <luaV_flttointeger>
  40bf30:	85 c0                	test   %eax,%eax
  40bf32:	74 0c                	je     40bf40 <isSCnumber+0x62>
  40bf34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bf38:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40bf3e:	eb 07                	jmp    40bf47 <isSCnumber+0x69>
  40bf40:	b8 00 00 00 00       	mov    $0x0,%eax
  40bf45:	eb 3b                	jmp    40bf82 <isSCnumber+0xa4>
  40bf47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf4b:	8b 50 10             	mov    0x10(%rax),%edx
  40bf4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf52:	8b 40 14             	mov    0x14(%rax),%eax
  40bf55:	39 c2                	cmp    %eax,%edx
  40bf57:	75 24                	jne    40bf7d <isSCnumber+0x9f>
  40bf59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf5d:	48 89 c7             	mov    %rax,%rdi
  40bf60:	e8 47 eb ff ff       	callq  40aaac <fitsC>
  40bf65:	85 c0                	test   %eax,%eax
  40bf67:	74 14                	je     40bf7d <isSCnumber+0x9f>
  40bf69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf6d:	8d 50 7f             	lea    0x7f(%rax),%edx
  40bf70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bf74:	89 10                	mov    %edx,(%rax)
  40bf76:	b8 01 00 00 00       	mov    $0x1,%eax
  40bf7b:	eb 05                	jmp    40bf82 <isSCnumber+0xa4>
  40bf7d:	b8 00 00 00 00       	mov    $0x0,%eax
  40bf82:	c9                   	leaveq 
  40bf83:	c3                   	retq   

000000000040bf84 <luaK_indexed>:
  40bf84:	55                   	push   %rbp
  40bf85:	48 89 e5             	mov    %rsp,%rbp
  40bf88:	48 83 ec 20          	sub    $0x20,%rsp
  40bf8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bf90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40bf94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40bf98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf9c:	8b 00                	mov    (%rax),%eax
  40bf9e:	83 f8 07             	cmp    $0x7,%eax
  40bfa1:	75 13                	jne    40bfb6 <luaK_indexed+0x32>
  40bfa3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40bfa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfab:	48 89 d6             	mov    %rdx,%rsi
  40bfae:	48 89 c7             	mov    %rax,%rdi
  40bfb1:	e8 89 ed ff ff       	callq  40ad3f <str2K>
  40bfb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bfba:	8b 00                	mov    (%rax),%eax
  40bfbc:	83 f8 0a             	cmp    $0xa,%eax
  40bfbf:	75 2a                	jne    40bfeb <luaK_indexed+0x67>
  40bfc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40bfc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfc9:	48 89 d6             	mov    %rdx,%rsi
  40bfcc:	48 89 c7             	mov    %rax,%rdi
  40bfcf:	e8 f7 fd ff ff       	callq  40bdcb <isKstr>
  40bfd4:	85 c0                	test   %eax,%eax
  40bfd6:	75 13                	jne    40bfeb <luaK_indexed+0x67>
  40bfd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40bfdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfe0:	48 89 d6             	mov    %rdx,%rsi
  40bfe3:	48 89 c7             	mov    %rax,%rdi
  40bfe6:	e8 2c f5 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40bfeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bfef:	8b 00                	mov    (%rax),%eax
  40bff1:	83 f8 0a             	cmp    $0xa,%eax
  40bff4:	75 30                	jne    40c026 <luaK_indexed+0xa2>
  40bff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bffa:	8b 40 08             	mov    0x8(%rax),%eax
  40bffd:	89 c2                	mov    %eax,%edx
  40bfff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c003:	88 50 0a             	mov    %dl,0xa(%rax)
  40c006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c00a:	8b 40 08             	mov    0x8(%rax),%eax
  40c00d:	89 c2                	mov    %eax,%edx
  40c00f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c013:	66 89 50 08          	mov    %dx,0x8(%rax)
  40c017:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c01b:	c7 00 0d 00 00 00    	movl   $0xd,(%rax)
  40c021:	e9 ac 00 00 00       	jmpq   40c0d2 <luaK_indexed+0x14e>
  40c026:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c02a:	8b 00                	mov    (%rax),%eax
  40c02c:	83 f8 09             	cmp    $0x9,%eax
  40c02f:	75 0a                	jne    40c03b <luaK_indexed+0xb7>
  40c031:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c035:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40c039:	eb 07                	jmp    40c042 <luaK_indexed+0xbe>
  40c03b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c03f:	8b 40 08             	mov    0x8(%rax),%eax
  40c042:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40c046:	88 42 0a             	mov    %al,0xa(%rdx)
  40c049:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c04d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c051:	48 89 d6             	mov    %rdx,%rsi
  40c054:	48 89 c7             	mov    %rax,%rdi
  40c057:	e8 6f fd ff ff       	callq  40bdcb <isKstr>
  40c05c:	85 c0                	test   %eax,%eax
  40c05e:	74 1d                	je     40c07d <luaK_indexed+0xf9>
  40c060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c064:	8b 40 08             	mov    0x8(%rax),%eax
  40c067:	89 c2                	mov    %eax,%edx
  40c069:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c06d:	66 89 50 08          	mov    %dx,0x8(%rax)
  40c071:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c075:	c7 00 0f 00 00 00    	movl   $0xf,(%rax)
  40c07b:	eb 55                	jmp    40c0d2 <luaK_indexed+0x14e>
  40c07d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c081:	48 89 c7             	mov    %rax,%rdi
  40c084:	e8 dd fd ff ff       	callq  40be66 <isCint>
  40c089:	85 c0                	test   %eax,%eax
  40c08b:	74 1e                	je     40c0ab <luaK_indexed+0x127>
  40c08d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c091:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c095:	89 c2                	mov    %eax,%edx
  40c097:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c09b:	66 89 50 08          	mov    %dx,0x8(%rax)
  40c09f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c0a3:	c7 00 0e 00 00 00    	movl   $0xe,(%rax)
  40c0a9:	eb 27                	jmp    40c0d2 <luaK_indexed+0x14e>
  40c0ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c0af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c0b3:	48 89 d6             	mov    %rdx,%rsi
  40c0b6:	48 89 c7             	mov    %rax,%rdi
  40c0b9:	e8 59 f4 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40c0be:	89 c2                	mov    %eax,%edx
  40c0c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c0c4:	66 89 50 08          	mov    %dx,0x8(%rax)
  40c0c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c0cc:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  40c0d2:	90                   	nop
  40c0d3:	c9                   	leaveq 
  40c0d4:	c3                   	retq   

000000000040c0d5 <validop>:
  40c0d5:	55                   	push   %rbp
  40c0d6:	48 89 e5             	mov    %rsp,%rbp
  40c0d9:	48 83 ec 30          	sub    $0x30,%rsp
  40c0dd:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40c0e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40c0e4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c0e8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40c0eb:	83 e8 03             	sub    $0x3,%eax
  40c0ee:	83 f8 0a             	cmp    $0xa,%eax
  40c0f1:	0f 87 b2 00 00 00    	ja     40c1a9 <validop+0xd4>
  40c0f7:	89 c0                	mov    %eax,%eax
  40c0f9:	48 8b 04 c5 58 da 43 	mov    0x43da58(,%rax,8),%rax
  40c100:	00 
  40c101:	ff e0                	jmpq   *%rax
  40c103:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  40c107:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c10b:	ba 00 00 00 00       	mov    $0x0,%edx
  40c110:	48 89 ce             	mov    %rcx,%rsi
  40c113:	48 89 c7             	mov    %rax,%rdi
  40c116:	e8 49 68 02 00       	callq  432964 <luaV_tointegerns>
  40c11b:	85 c0                	test   %eax,%eax
  40c11d:	74 23                	je     40c142 <validop+0x6d>
  40c11f:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  40c123:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c127:	ba 00 00 00 00       	mov    $0x0,%edx
  40c12c:	48 89 ce             	mov    %rcx,%rsi
  40c12f:	48 89 c7             	mov    %rax,%rdi
  40c132:	e8 2d 68 02 00       	callq  432964 <luaV_tointegerns>
  40c137:	85 c0                	test   %eax,%eax
  40c139:	74 07                	je     40c142 <validop+0x6d>
  40c13b:	b8 01 00 00 00       	mov    $0x1,%eax
  40c140:	eb 6c                	jmp    40c1ae <validop+0xd9>
  40c142:	b8 00 00 00 00       	mov    $0x0,%eax
  40c147:	eb 65                	jmp    40c1ae <validop+0xd9>
  40c149:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c14d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40c151:	3c 03                	cmp    $0x3,%al
  40c153:	75 2c                	jne    40c181 <validop+0xac>
  40c155:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c159:	48 8b 00             	mov    (%rax),%rax
  40c15c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  40c161:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40c165:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c169:	0f 9a c0             	setp   %al
  40c16c:	ba 01 00 00 00       	mov    $0x1,%edx
  40c171:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40c175:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c179:	0f 45 c2             	cmovne %edx,%eax
  40c17c:	0f b6 c0             	movzbl %al,%eax
  40c17f:	eb 2d                	jmp    40c1ae <validop+0xd9>
  40c181:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c185:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40c189:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40c18d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c191:	0f 9a c0             	setp   %al
  40c194:	ba 01 00 00 00       	mov    $0x1,%edx
  40c199:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40c19d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c1a1:	0f 45 c2             	cmovne %edx,%eax
  40c1a4:	0f b6 c0             	movzbl %al,%eax
  40c1a7:	eb 05                	jmp    40c1ae <validop+0xd9>
  40c1a9:	b8 01 00 00 00       	mov    $0x1,%eax
  40c1ae:	c9                   	leaveq 
  40c1af:	c3                   	retq   

000000000040c1b0 <constfolding>:
  40c1b0:	55                   	push   %rbp
  40c1b1:	48 89 e5             	mov    %rsp,%rbp
  40c1b4:	48 83 ec 60          	sub    $0x60,%rsp
  40c1b8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  40c1bc:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  40c1bf:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  40c1c3:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  40c1c7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40c1cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40c1cf:	48 89 d6             	mov    %rdx,%rsi
  40c1d2:	48 89 c7             	mov    %rax,%rdi
  40c1d5:	e8 85 d6 ff ff       	callq  40985f <tonumeral>
  40c1da:	85 c0                	test   %eax,%eax
  40c1dc:	74 30                	je     40c20e <constfolding+0x5e>
  40c1de:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  40c1e2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c1e6:	48 89 d6             	mov    %rdx,%rsi
  40c1e9:	48 89 c7             	mov    %rax,%rdi
  40c1ec:	e8 6e d6 ff ff       	callq  40985f <tonumeral>
  40c1f1:	85 c0                	test   %eax,%eax
  40c1f3:	74 19                	je     40c20e <constfolding+0x5e>
  40c1f5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  40c1f9:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40c1fd:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40c200:	48 89 ce             	mov    %rcx,%rsi
  40c203:	89 c7                	mov    %eax,%edi
  40c205:	e8 cb fe ff ff       	callq  40c0d5 <validop>
  40c20a:	85 c0                	test   %eax,%eax
  40c20c:	75 0a                	jne    40c218 <constfolding+0x68>
  40c20e:	b8 00 00 00 00       	mov    $0x0,%eax
  40c213:	e9 a2 00 00 00       	jmpq   40c2ba <constfolding+0x10a>
  40c218:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40c21c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40c220:	48 8b 40 38          	mov    0x38(%rax),%rax
  40c224:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
  40c228:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  40c22c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40c230:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  40c233:	49 89 f8             	mov    %rdi,%r8
  40c236:	48 89 c7             	mov    %rax,%rdi
  40c239:	e8 6e 28 01 00       	callq  41eaac <luaO_rawarith>
  40c23e:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40c242:	3c 03                	cmp    $0x3,%al
  40c244:	75 18                	jne    40c25e <constfolding+0xae>
  40c246:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40c24a:	c7 00 06 00 00 00    	movl   $0x6,(%rax)
  40c250:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c254:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40c258:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40c25c:	eb 57                	jmp    40c2b5 <constfolding+0x105>
  40c25e:	f2 0f 10 45 c0       	movsd  -0x40(%rbp),%xmm0
  40c263:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  40c268:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  40c26d:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  40c272:	7a 22                	jp     40c296 <constfolding+0xe6>
  40c274:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  40c279:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  40c27e:	75 16                	jne    40c296 <constfolding+0xe6>
  40c280:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40c284:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  40c289:	7a 12                	jp     40c29d <constfolding+0xed>
  40c28b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40c28f:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  40c294:	75 07                	jne    40c29d <constfolding+0xed>
  40c296:	b8 00 00 00 00       	mov    $0x0,%eax
  40c29b:	eb 1d                	jmp    40c2ba <constfolding+0x10a>
  40c29d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40c2a1:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
  40c2a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40c2ab:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  40c2b0:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
  40c2b5:	b8 01 00 00 00       	mov    $0x1,%eax
  40c2ba:	c9                   	leaveq 
  40c2bb:	c3                   	retq   

000000000040c2bc <binopr2op>:
  40c2bc:	55                   	push   %rbp
  40c2bd:	48 89 e5             	mov    %rsp,%rbp
  40c2c0:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40c2c3:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40c2c6:	89 55 f4             	mov    %edx,-0xc(%rbp)
  40c2c9:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40c2cc:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40c2cf:	29 c2                	sub    %eax,%edx
  40c2d1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40c2d4:	01 d0                	add    %edx,%eax
  40c2d6:	5d                   	pop    %rbp
  40c2d7:	c3                   	retq   

000000000040c2d8 <unopr2op>:
  40c2d8:	55                   	push   %rbp
  40c2d9:	48 89 e5             	mov    %rsp,%rbp
  40c2dc:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40c2df:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40c2e2:	83 c0 31             	add    $0x31,%eax
  40c2e5:	5d                   	pop    %rbp
  40c2e6:	c3                   	retq   

000000000040c2e7 <binopr2TM>:
  40c2e7:	55                   	push   %rbp
  40c2e8:	48 89 e5             	mov    %rsp,%rbp
  40c2eb:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40c2ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40c2f1:	83 c0 06             	add    $0x6,%eax
  40c2f4:	5d                   	pop    %rbp
  40c2f5:	c3                   	retq   

000000000040c2f6 <codeunexpval>:
  40c2f6:	55                   	push   %rbp
  40c2f7:	48 89 e5             	mov    %rsp,%rbp
  40c2fa:	48 83 ec 30          	sub    $0x30,%rsp
  40c2fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c302:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c305:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c309:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  40c30c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c310:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c314:	48 89 d6             	mov    %rdx,%rsi
  40c317:	48 89 c7             	mov    %rax,%rdi
  40c31a:	e8 f8 f1 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40c31f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c322:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c326:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c32a:	48 89 d6             	mov    %rdx,%rsi
  40c32d:	48 89 c7             	mov    %rax,%rdi
  40c330:	e8 79 e2 ff ff       	callq  40a5ae <freeexp>
  40c335:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40c338:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40c33b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c33f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c345:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40c34b:	89 d1                	mov    %edx,%ecx
  40c34d:	ba 00 00 00 00       	mov    $0x0,%edx
  40c352:	48 89 c7             	mov    %rax,%rdi
  40c355:	e8 8c df ff ff       	callq  40a2e6 <luaK_codeABCk>
  40c35a:	89 c2                	mov    %eax,%edx
  40c35c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c360:	89 50 08             	mov    %edx,0x8(%rax)
  40c363:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c367:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40c36d:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40c370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c374:	89 d6                	mov    %edx,%esi
  40c376:	48 89 c7             	mov    %rax,%rdi
  40c379:	e8 2c 0e 00 00       	callq  40d1aa <luaK_fixline>
  40c37e:	90                   	nop
  40c37f:	c9                   	leaveq 
  40c380:	c3                   	retq   

000000000040c381 <finishbinexpval>:
  40c381:	55                   	push   %rbp
  40c382:	48 89 e5             	mov    %rsp,%rbp
  40c385:	48 83 ec 40          	sub    $0x40,%rsp
  40c389:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c38d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40c391:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c395:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40c398:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40c39c:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40c3a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40c3a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c3a8:	48 89 d6             	mov    %rdx,%rsi
  40c3ab:	48 89 c7             	mov    %rax,%rdi
  40c3ae:	e8 64 f1 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40c3b3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c3b6:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  40c3b9:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40c3bc:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  40c3bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c3c3:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c3c9:	41 89 c8             	mov    %ecx,%r8d
  40c3cc:	89 d1                	mov    %edx,%ecx
  40c3ce:	ba 00 00 00 00       	mov    $0x0,%edx
  40c3d3:	48 89 c7             	mov    %rax,%rdi
  40c3d6:	e8 0b df ff ff       	callq  40a2e6 <luaK_codeABCk>
  40c3db:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40c3de:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c3e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c3e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c3ea:	48 89 ce             	mov    %rcx,%rsi
  40c3ed:	48 89 c7             	mov    %rax,%rdi
  40c3f0:	e8 ec e1 ff ff       	callq  40a5e1 <freeexps>
  40c3f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c3f9:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40c3fc:	89 50 08             	mov    %edx,0x8(%rax)
  40c3ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c403:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
  40c409:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c40d:	8b 75 10             	mov    0x10(%rbp),%esi
  40c410:	48 89 c7             	mov    %rax,%rdi
  40c413:	e8 92 0d 00 00       	callq  40d1aa <luaK_fixline>
  40c418:	8b 7d 20             	mov    0x20(%rbp),%edi
  40c41b:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
  40c41f:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  40c422:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40c425:	8b 75 18             	mov    0x18(%rbp),%esi
  40c428:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c42c:	45 89 c1             	mov    %r8d,%r9d
  40c42f:	41 89 f8             	mov    %edi,%r8d
  40c432:	48 89 c7             	mov    %rax,%rdi
  40c435:	e8 ac de ff ff       	callq  40a2e6 <luaK_codeABCk>
  40c43a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c43e:	8b 75 10             	mov    0x10(%rbp),%esi
  40c441:	48 89 c7             	mov    %rax,%rdi
  40c444:	e8 61 0d 00 00       	callq  40d1aa <luaK_fixline>
  40c449:	90                   	nop
  40c44a:	c9                   	leaveq 
  40c44b:	c3                   	retq   

000000000040c44c <codebinexpval>:
  40c44c:	55                   	push   %rbp
  40c44d:	48 89 e5             	mov    %rsp,%rbp
  40c450:	48 83 ec 30          	sub    $0x30,%rsp
  40c454:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c458:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c45b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c45f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40c463:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  40c467:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c46a:	ba 22 00 00 00       	mov    $0x22,%edx
  40c46f:	be 00 00 00 00       	mov    $0x0,%esi
  40c474:	89 c7                	mov    %eax,%edi
  40c476:	e8 41 fe ff ff       	callq  40c2bc <binopr2op>
  40c47b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c47e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c486:	48 89 d6             	mov    %rdx,%rsi
  40c489:	48 89 c7             	mov    %rax,%rdi
  40c48c:	e8 86 f0 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40c491:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40c494:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c497:	89 c7                	mov    %eax,%edi
  40c499:	e8 49 fe ff ff       	callq  40c2e7 <binopr2TM>
  40c49e:	89 c7                	mov    %eax,%edi
  40c4a0:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
  40c4a4:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40c4a7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c4ab:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40c4af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c4b3:	48 83 ec 08          	sub    $0x8,%rsp
  40c4b7:	57                   	push   %rdi
  40c4b8:	6a 2e                	pushq  $0x2e
  40c4ba:	8b 7d e0             	mov    -0x20(%rbp),%edi
  40c4bd:	57                   	push   %rdi
  40c4be:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c4c4:	48 89 c7             	mov    %rax,%rdi
  40c4c7:	e8 b5 fe ff ff       	callq  40c381 <finishbinexpval>
  40c4cc:	48 83 c4 20          	add    $0x20,%rsp
  40c4d0:	90                   	nop
  40c4d1:	c9                   	leaveq 
  40c4d2:	c3                   	retq   

000000000040c4d3 <codebini>:
  40c4d3:	55                   	push   %rbp
  40c4d4:	48 89 e5             	mov    %rsp,%rbp
  40c4d7:	48 83 ec 40          	sub    $0x40,%rsp
  40c4db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c4df:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c4e2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c4e6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40c4ea:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  40c4ee:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40c4f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c4f6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c4fa:	83 c0 7f             	add    $0x7f,%eax
  40c4fd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c500:	44 8b 4d e0          	mov    -0x20(%rbp),%r9d
  40c504:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
  40c508:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40c50b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c50f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40c513:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c517:	48 83 ec 08          	sub    $0x8,%rsp
  40c51b:	8b 7d 10             	mov    0x10(%rbp),%edi
  40c51e:	57                   	push   %rdi
  40c51f:	6a 2f                	pushq  $0x2f
  40c521:	8b 7d cc             	mov    -0x34(%rbp),%edi
  40c524:	57                   	push   %rdi
  40c525:	48 89 c7             	mov    %rax,%rdi
  40c528:	e8 54 fe ff ff       	callq  40c381 <finishbinexpval>
  40c52d:	48 83 c4 20          	add    $0x20,%rsp
  40c531:	90                   	nop
  40c532:	c9                   	leaveq 
  40c533:	c3                   	retq   

000000000040c534 <codebinK>:
  40c534:	55                   	push   %rbp
  40c535:	48 89 e5             	mov    %rsp,%rbp
  40c538:	48 83 ec 40          	sub    $0x40,%rsp
  40c53c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c540:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c543:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c547:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40c54b:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  40c54f:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40c553:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c556:	89 c7                	mov    %eax,%edi
  40c558:	e8 8a fd ff ff       	callq  40c2e7 <binopr2TM>
  40c55d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c560:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c564:	8b 40 08             	mov    0x8(%rax),%eax
  40c567:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40c56a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c56d:	ba 16 00 00 00       	mov    $0x16,%edx
  40c572:	be 00 00 00 00       	mov    $0x0,%esi
  40c577:	89 c7                	mov    %eax,%edi
  40c579:	e8 3e fd ff ff       	callq  40c2bc <binopr2op>
  40c57e:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40c581:	44 8b 4d e0          	mov    -0x20(%rbp),%r9d
  40c585:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
  40c589:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40c58c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c590:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40c594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c598:	48 83 ec 08          	sub    $0x8,%rsp
  40c59c:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40c59f:	57                   	push   %rdi
  40c5a0:	6a 30                	pushq  $0x30
  40c5a2:	8b 7d cc             	mov    -0x34(%rbp),%edi
  40c5a5:	57                   	push   %rdi
  40c5a6:	48 89 c7             	mov    %rax,%rdi
  40c5a9:	e8 d3 fd ff ff       	callq  40c381 <finishbinexpval>
  40c5ae:	48 83 c4 20          	add    $0x20,%rsp
  40c5b2:	90                   	nop
  40c5b3:	c9                   	leaveq 
  40c5b4:	c3                   	retq   

000000000040c5b5 <finishbinexpneg>:
  40c5b5:	55                   	push   %rbp
  40c5b6:	48 89 e5             	mov    %rsp,%rbp
  40c5b9:	48 83 ec 40          	sub    $0x40,%rsp
  40c5bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c5c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40c5c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c5c9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40c5cc:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40c5d0:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40c5d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c5d8:	48 89 c7             	mov    %rax,%rdi
  40c5db:	e8 53 f8 ff ff       	callq  40be33 <luaK_isKint>
  40c5e0:	85 c0                	test   %eax,%eax
  40c5e2:	75 0a                	jne    40c5ee <finishbinexpneg+0x39>
  40c5e4:	b8 00 00 00 00       	mov    $0x0,%eax
  40c5e9:	e9 dc 00 00 00       	jmpq   40c6ca <finishbinexpneg+0x115>
  40c5ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c5f2:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c5f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40c5fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c5fe:	48 89 c7             	mov    %rax,%rdi
  40c601:	e8 a6 e4 ff ff       	callq  40aaac <fitsC>
  40c606:	85 c0                	test   %eax,%eax
  40c608:	74 13                	je     40c61d <finishbinexpneg+0x68>
  40c60a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c60e:	48 f7 d8             	neg    %rax
  40c611:	48 89 c7             	mov    %rax,%rdi
  40c614:	e8 93 e4 ff ff       	callq  40aaac <fitsC>
  40c619:	85 c0                	test   %eax,%eax
  40c61b:	75 0a                	jne    40c627 <finishbinexpneg+0x72>
  40c61d:	b8 00 00 00 00       	mov    $0x0,%eax
  40c622:	e9 a3 00 00 00       	jmpq   40c6ca <finishbinexpneg+0x115>
  40c627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c62b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40c62e:	b8 7f 00 00 00       	mov    $0x7f,%eax
  40c633:	2b 45 f4             	sub    -0xc(%rbp),%eax
  40c636:	41 89 c0             	mov    %eax,%r8d
  40c639:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  40c63c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c640:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40c644:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c648:	48 83 ec 08          	sub    $0x8,%rsp
  40c64c:	8b 7d cc             	mov    -0x34(%rbp),%edi
  40c64f:	57                   	push   %rdi
  40c650:	6a 2f                	pushq  $0x2f
  40c652:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40c655:	57                   	push   %rdi
  40c656:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c65c:	48 89 c7             	mov    %rax,%rdi
  40c65f:	e8 1d fd ff ff       	callq  40c381 <finishbinexpval>
  40c664:	48 83 c4 20          	add    $0x20,%rsp
  40c668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c66c:	48 8b 00             	mov    (%rax),%rax
  40c66f:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40c673:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c677:	8b 40 20             	mov    0x20(%rax),%eax
  40c67a:	48 98                	cltq   
  40c67c:	48 c1 e0 02          	shl    $0x2,%rax
  40c680:	48 83 e8 04          	sub    $0x4,%rax
  40c684:	48 01 d0             	add    %rdx,%rax
  40c687:	8b 00                	mov    (%rax),%eax
  40c689:	25 ff ff 00 ff       	and    $0xff00ffff,%eax
  40c68e:	89 c6                	mov    %eax,%esi
  40c690:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40c693:	83 c0 7f             	add    $0x7f,%eax
  40c696:	c1 e0 10             	shl    $0x10,%eax
  40c699:	25 00 00 ff 00       	and    $0xff0000,%eax
  40c69e:	89 c1                	mov    %eax,%ecx
  40c6a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c6a4:	48 8b 00             	mov    (%rax),%rax
  40c6a7:	48 8b 50 40          	mov    0x40(%rax),%rdx
  40c6ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c6af:	8b 40 20             	mov    0x20(%rax),%eax
  40c6b2:	48 98                	cltq   
  40c6b4:	48 c1 e0 02          	shl    $0x2,%rax
  40c6b8:	48 83 e8 04          	sub    $0x4,%rax
  40c6bc:	48 01 d0             	add    %rdx,%rax
  40c6bf:	09 ce                	or     %ecx,%esi
  40c6c1:	89 f2                	mov    %esi,%edx
  40c6c3:	89 10                	mov    %edx,(%rax)
  40c6c5:	b8 01 00 00 00       	mov    $0x1,%eax
  40c6ca:	c9                   	leaveq 
  40c6cb:	c3                   	retq   

000000000040c6cc <swapexps>:
  40c6cc:	55                   	push   %rbp
  40c6cd:	48 89 e5             	mov    %rsp,%rbp
  40c6d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40c6d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40c6d8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40c6dc:	48 8b 01             	mov    (%rcx),%rax
  40c6df:	48 8b 51 08          	mov    0x8(%rcx),%rdx
  40c6e3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40c6e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40c6eb:	48 8b 41 10          	mov    0x10(%rcx),%rax
  40c6ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40c6f3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40c6f7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40c6fb:	48 8b 06             	mov    (%rsi),%rax
  40c6fe:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  40c702:	48 89 01             	mov    %rax,(%rcx)
  40c705:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  40c709:	48 8b 46 10          	mov    0x10(%rsi),%rax
  40c70d:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40c711:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c719:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c71d:	48 89 01             	mov    %rax,(%rcx)
  40c720:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  40c724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c728:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40c72c:	90                   	nop
  40c72d:	5d                   	pop    %rbp
  40c72e:	c3                   	retq   

000000000040c72f <codebinNoK>:
  40c72f:	55                   	push   %rbp
  40c730:	48 89 e5             	mov    %rsp,%rbp
  40c733:	48 83 ec 30          	sub    $0x30,%rsp
  40c737:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c73b:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40c73e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40c742:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40c746:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
  40c74a:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
  40c74e:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  40c752:	74 13                	je     40c767 <codebinNoK+0x38>
  40c754:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40c758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c75c:	48 89 d6             	mov    %rdx,%rsi
  40c75f:	48 89 c7             	mov    %rax,%rdi
  40c762:	e8 65 ff ff ff       	callq  40c6cc <swapexps>
  40c767:	8b 7d dc             	mov    -0x24(%rbp),%edi
  40c76a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c76e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c772:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40c775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c779:	41 89 f8             	mov    %edi,%r8d
  40c77c:	48 89 c7             	mov    %rax,%rdi
  40c77f:	e8 c8 fc ff ff       	callq  40c44c <codebinexpval>
  40c784:	90                   	nop
  40c785:	c9                   	leaveq 
  40c786:	c3                   	retq   

000000000040c787 <codearith>:
  40c787:	55                   	push   %rbp
  40c788:	48 89 e5             	mov    %rsp,%rbp
  40c78b:	48 83 ec 30          	sub    $0x30,%rsp
  40c78f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c793:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40c796:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40c79a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40c79e:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
  40c7a2:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
  40c7a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c7aa:	be 00 00 00 00       	mov    $0x0,%esi
  40c7af:	48 89 c7             	mov    %rax,%rdi
  40c7b2:	e8 a8 d0 ff ff       	callq  40985f <tonumeral>
  40c7b7:	85 c0                	test   %eax,%eax
  40c7b9:	74 3d                	je     40c7f8 <codearith+0x71>
  40c7bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40c7bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c7c3:	48 89 d6             	mov    %rdx,%rsi
  40c7c6:	48 89 c7             	mov    %rax,%rdi
  40c7c9:	e8 7e ee ff ff       	callq  40b64c <luaK_exp2K>
  40c7ce:	85 c0                	test   %eax,%eax
  40c7d0:	74 26                	je     40c7f8 <codearith+0x71>
  40c7d2:	44 8b 45 dc          	mov    -0x24(%rbp),%r8d
  40c7d6:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40c7d9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c7dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c7e1:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40c7e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c7e8:	45 89 c1             	mov    %r8d,%r9d
  40c7eb:	41 89 f8             	mov    %edi,%r8d
  40c7ee:	48 89 c7             	mov    %rax,%rdi
  40c7f1:	e8 3e fd ff ff       	callq  40c534 <codebinK>
  40c7f6:	eb 24                	jmp    40c81c <codearith+0x95>
  40c7f8:	44 8b 45 dc          	mov    -0x24(%rbp),%r8d
  40c7fc:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40c7ff:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c803:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c807:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40c80a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c80e:	45 89 c1             	mov    %r8d,%r9d
  40c811:	41 89 f8             	mov    %edi,%r8d
  40c814:	48 89 c7             	mov    %rax,%rdi
  40c817:	e8 13 ff ff ff       	callq  40c72f <codebinNoK>
  40c81c:	90                   	nop
  40c81d:	c9                   	leaveq 
  40c81e:	c3                   	retq   

000000000040c81f <codecommutative>:
  40c81f:	55                   	push   %rbp
  40c820:	48 89 e5             	mov    %rsp,%rbp
  40c823:	48 83 ec 30          	sub    $0x30,%rsp
  40c827:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c82b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c82e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c832:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40c836:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  40c83a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c841:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c845:	be 00 00 00 00       	mov    $0x0,%esi
  40c84a:	48 89 c7             	mov    %rax,%rdi
  40c84d:	e8 0d d0 ff ff       	callq  40985f <tonumeral>
  40c852:	85 c0                	test   %eax,%eax
  40c854:	74 1a                	je     40c870 <codecommutative+0x51>
  40c856:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c85a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c85e:	48 89 d6             	mov    %rdx,%rsi
  40c861:	48 89 c7             	mov    %rax,%rdi
  40c864:	e8 63 fe ff ff       	callq  40c6cc <swapexps>
  40c869:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40c870:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40c874:	75 41                	jne    40c8b7 <codecommutative+0x98>
  40c876:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c87a:	48 89 c7             	mov    %rax,%rdi
  40c87d:	e8 1e f6 ff ff       	callq  40bea0 <isSCint>
  40c882:	85 c0                	test   %eax,%eax
  40c884:	74 31                	je     40c8b7 <codecommutative+0x98>
  40c886:	8b 7d e0             	mov    -0x20(%rbp),%edi
  40c889:	8b 75 fc             	mov    -0x4(%rbp),%esi
  40c88c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c890:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c894:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c898:	48 83 ec 08          	sub    $0x8,%rsp
  40c89c:	6a 06                	pushq  $0x6
  40c89e:	41 89 f9             	mov    %edi,%r9d
  40c8a1:	41 89 f0             	mov    %esi,%r8d
  40c8a4:	be 15 00 00 00       	mov    $0x15,%esi
  40c8a9:	48 89 c7             	mov    %rax,%rdi
  40c8ac:	e8 22 fc ff ff       	callq  40c4d3 <codebini>
  40c8b1:	48 83 c4 10          	add    $0x10,%rsp
  40c8b5:	eb 24                	jmp    40c8db <codecommutative+0xbc>
  40c8b7:	44 8b 45 e0          	mov    -0x20(%rbp),%r8d
  40c8bb:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40c8be:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c8c2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c8c6:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40c8c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c8cd:	45 89 c1             	mov    %r8d,%r9d
  40c8d0:	41 89 f8             	mov    %edi,%r8d
  40c8d3:	48 89 c7             	mov    %rax,%rdi
  40c8d6:	e8 ac fe ff ff       	callq  40c787 <codearith>
  40c8db:	90                   	nop
  40c8dc:	c9                   	leaveq 
  40c8dd:	c3                   	retq   

000000000040c8de <codebitwise>:
  40c8de:	55                   	push   %rbp
  40c8df:	48 89 e5             	mov    %rsp,%rbp
  40c8e2:	48 83 ec 30          	sub    $0x30,%rsp
  40c8e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40c8ea:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40c8ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40c8f1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40c8f5:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  40c8f9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c900:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c904:	8b 00                	mov    (%rax),%eax
  40c906:	83 f8 06             	cmp    $0x6,%eax
  40c909:	75 1a                	jne    40c925 <codebitwise+0x47>
  40c90b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c90f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c913:	48 89 d6             	mov    %rdx,%rsi
  40c916:	48 89 c7             	mov    %rax,%rdi
  40c919:	e8 ae fd ff ff       	callq  40c6cc <swapexps>
  40c91e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40c925:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c929:	8b 00                	mov    (%rax),%eax
  40c92b:	83 f8 06             	cmp    $0x6,%eax
  40c92e:	75 3d                	jne    40c96d <codebitwise+0x8f>
  40c930:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c938:	48 89 d6             	mov    %rdx,%rsi
  40c93b:	48 89 c7             	mov    %rax,%rdi
  40c93e:	e8 09 ed ff ff       	callq  40b64c <luaK_exp2K>
  40c943:	85 c0                	test   %eax,%eax
  40c945:	74 26                	je     40c96d <codebitwise+0x8f>
  40c947:	44 8b 45 e0          	mov    -0x20(%rbp),%r8d
  40c94b:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40c94e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c952:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c956:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40c959:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c95d:	45 89 c1             	mov    %r8d,%r9d
  40c960:	41 89 f8             	mov    %edi,%r8d
  40c963:	48 89 c7             	mov    %rax,%rdi
  40c966:	e8 c9 fb ff ff       	callq  40c534 <codebinK>
  40c96b:	eb 24                	jmp    40c991 <codebitwise+0xb3>
  40c96d:	44 8b 45 e0          	mov    -0x20(%rbp),%r8d
  40c971:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40c974:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c978:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c97c:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40c97f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c983:	45 89 c1             	mov    %r8d,%r9d
  40c986:	41 89 f8             	mov    %edi,%r8d
  40c989:	48 89 c7             	mov    %rax,%rdi
  40c98c:	e8 9e fd ff ff       	callq  40c72f <codebinNoK>
  40c991:	90                   	nop
  40c992:	c9                   	leaveq 
  40c993:	c3                   	retq   

000000000040c994 <codeorder>:
  40c994:	55                   	push   %rbp
  40c995:	48 89 e5             	mov    %rsp,%rbp
  40c998:	48 83 ec 40          	sub    $0x40,%rsp
  40c99c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40c9a0:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  40c9a3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40c9a7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  40c9ab:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40c9b2:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  40c9b6:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  40c9ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c9be:	48 89 ce             	mov    %rcx,%rsi
  40c9c1:	48 89 c7             	mov    %rax,%rdi
  40c9c4:	e8 15 f5 ff ff       	callq  40bede <isSCnumber>
  40c9c9:	85 c0                	test   %eax,%eax
  40c9cb:	74 38                	je     40ca05 <codeorder+0x71>
  40c9cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40c9d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c9d5:	48 89 d6             	mov    %rdx,%rsi
  40c9d8:	48 89 c7             	mov    %rax,%rdi
  40c9db:	e8 37 eb ff ff       	callq  40b517 <luaK_exp2anyreg>
  40c9e0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40c9e3:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40c9e6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40c9e9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40c9ec:	ba 3e 00 00 00       	mov    $0x3e,%edx
  40c9f1:	be 0e 00 00 00       	mov    $0xe,%esi
  40c9f6:	89 c7                	mov    %eax,%edi
  40c9f8:	e8 bf f8 ff ff       	callq  40c2bc <binopr2op>
  40c9fd:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ca00:	e9 93 00 00 00       	jmpq   40ca98 <codeorder+0x104>
  40ca05:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  40ca09:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  40ca0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ca11:	48 89 ce             	mov    %rcx,%rsi
  40ca14:	48 89 c7             	mov    %rax,%rdi
  40ca17:	e8 c2 f4 ff ff       	callq  40bede <isSCnumber>
  40ca1c:	85 c0                	test   %eax,%eax
  40ca1e:	74 35                	je     40ca55 <codeorder+0xc1>
  40ca20:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40ca24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ca28:	48 89 d6             	mov    %rdx,%rsi
  40ca2b:	48 89 c7             	mov    %rax,%rdi
  40ca2e:	e8 e4 ea ff ff       	callq  40b517 <luaK_exp2anyreg>
  40ca33:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40ca36:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40ca39:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40ca3c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40ca3f:	ba 40 00 00 00       	mov    $0x40,%edx
  40ca44:	be 0e 00 00 00       	mov    $0xe,%esi
  40ca49:	89 c7                	mov    %eax,%edi
  40ca4b:	e8 6c f8 ff ff       	callq  40c2bc <binopr2op>
  40ca50:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ca53:	eb 43                	jmp    40ca98 <codeorder+0x104>
  40ca55:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40ca59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ca5d:	48 89 d6             	mov    %rdx,%rsi
  40ca60:	48 89 c7             	mov    %rax,%rdi
  40ca63:	e8 af ea ff ff       	callq  40b517 <luaK_exp2anyreg>
  40ca68:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40ca6b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40ca6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ca73:	48 89 d6             	mov    %rdx,%rsi
  40ca76:	48 89 c7             	mov    %rax,%rdi
  40ca79:	e8 99 ea ff ff       	callq  40b517 <luaK_exp2anyreg>
  40ca7e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40ca81:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40ca84:	ba 3a 00 00 00       	mov    $0x3a,%edx
  40ca89:	be 0e 00 00 00       	mov    $0xe,%esi
  40ca8e:	89 c7                	mov    %eax,%edi
  40ca90:	e8 27 f8 ff ff       	callq  40c2bc <binopr2op>
  40ca95:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ca98:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40ca9c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40caa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40caa4:	48 89 ce             	mov    %rcx,%rsi
  40caa7:	48 89 c7             	mov    %rax,%rdi
  40caaa:	e8 32 db ff ff       	callq  40a5e1 <freeexps>
  40caaf:	8b 7d ec             	mov    -0x14(%rbp),%edi
  40cab2:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40cab5:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40cab8:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40cabb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cabf:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40cac5:	41 89 f8             	mov    %edi,%r8d
  40cac8:	48 89 c7             	mov    %rax,%rdi
  40cacb:	e8 94 d2 ff ff       	callq  409d64 <condjump>
  40cad0:	89 c2                	mov    %eax,%edx
  40cad2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cad6:	89 50 08             	mov    %edx,0x8(%rax)
  40cad9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cadd:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  40cae3:	90                   	nop
  40cae4:	c9                   	leaveq 
  40cae5:	c3                   	retq   

000000000040cae6 <codeeq>:
  40cae6:	55                   	push   %rbp
  40cae7:	48 89 e5             	mov    %rsp,%rbp
  40caea:	48 83 ec 40          	sub    $0x40,%rsp
  40caee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40caf2:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  40caf5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40caf9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  40cafd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40cb04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cb08:	8b 00                	mov    (%rax),%eax
  40cb0a:	83 f8 08             	cmp    $0x8,%eax
  40cb0d:	74 13                	je     40cb22 <codeeq+0x3c>
  40cb0f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40cb13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cb17:	48 89 d6             	mov    %rdx,%rsi
  40cb1a:	48 89 c7             	mov    %rax,%rdi
  40cb1d:	e8 aa fb ff ff       	callq  40c6cc <swapexps>
  40cb22:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40cb26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cb2a:	48 89 d6             	mov    %rdx,%rsi
  40cb2d:	48 89 c7             	mov    %rax,%rdi
  40cb30:	e8 e2 e9 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40cb35:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40cb38:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  40cb3c:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  40cb40:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cb44:	48 89 ce             	mov    %rcx,%rsi
  40cb47:	48 89 c7             	mov    %rax,%rdi
  40cb4a:	e8 8f f3 ff ff       	callq  40bede <isSCnumber>
  40cb4f:	85 c0                	test   %eax,%eax
  40cb51:	74 0f                	je     40cb62 <codeeq+0x7c>
  40cb53:	c7 45 f8 3d 00 00 00 	movl   $0x3d,-0x8(%rbp)
  40cb5a:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40cb5d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40cb60:	eb 47                	jmp    40cba9 <codeeq+0xc3>
  40cb62:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40cb66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cb6a:	48 89 d6             	mov    %rdx,%rsi
  40cb6d:	48 89 c7             	mov    %rax,%rdi
  40cb70:	e8 de eb ff ff       	callq  40b753 <luaK_exp2RK>
  40cb75:	85 c0                	test   %eax,%eax
  40cb77:	74 13                	je     40cb8c <codeeq+0xa6>
  40cb79:	c7 45 f8 3c 00 00 00 	movl   $0x3c,-0x8(%rbp)
  40cb80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cb84:	8b 40 08             	mov    0x8(%rax),%eax
  40cb87:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40cb8a:	eb 1d                	jmp    40cba9 <codeeq+0xc3>
  40cb8c:	c7 45 f8 39 00 00 00 	movl   $0x39,-0x8(%rbp)
  40cb93:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40cb97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cb9b:	48 89 d6             	mov    %rdx,%rsi
  40cb9e:	48 89 c7             	mov    %rax,%rdi
  40cba1:	e8 71 e9 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40cba6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40cba9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40cbad:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40cbb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cbb5:	48 89 ce             	mov    %rcx,%rsi
  40cbb8:	48 89 c7             	mov    %rax,%rdi
  40cbbb:	e8 21 da ff ff       	callq  40a5e1 <freeexps>
  40cbc0:	83 7d d4 0d          	cmpl   $0xd,-0x2c(%rbp)
  40cbc4:	0f 94 c0             	sete   %al
  40cbc7:	44 0f b6 c0          	movzbl %al,%r8d
  40cbcb:	8b 7d ec             	mov    -0x14(%rbp),%edi
  40cbce:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40cbd1:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40cbd4:	8b 75 f8             	mov    -0x8(%rbp),%esi
  40cbd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cbdb:	45 89 c1             	mov    %r8d,%r9d
  40cbde:	41 89 f8             	mov    %edi,%r8d
  40cbe1:	48 89 c7             	mov    %rax,%rdi
  40cbe4:	e8 7b d1 ff ff       	callq  409d64 <condjump>
  40cbe9:	89 c2                	mov    %eax,%edx
  40cbeb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cbef:	89 50 08             	mov    %edx,0x8(%rax)
  40cbf2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40cbf6:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  40cbfc:	90                   	nop
  40cbfd:	c9                   	leaveq 
  40cbfe:	c3                   	retq   

000000000040cbff <luaK_prefix>:
  40cbff:	55                   	push   %rbp
  40cc00:	48 89 e5             	mov    %rsp,%rbp
  40cc03:	48 83 ec 20          	sub    $0x20,%rsp
  40cc07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40cc0b:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40cc0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40cc12:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  40cc15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cc19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cc1d:	48 89 d6             	mov    %rdx,%rsi
  40cc20:	48 89 c7             	mov    %rax,%rdi
  40cc23:	e8 02 e2 ff ff       	callq  40ae2a <luaK_dischargevars>
  40cc28:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
  40cc2c:	74 50                	je     40cc7e <luaK_prefix+0x7f>
  40cc2e:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
  40cc32:	72 08                	jb     40cc3c <luaK_prefix+0x3d>
  40cc34:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  40cc38:	74 23                	je     40cc5d <luaK_prefix+0x5e>
  40cc3a:	eb 58                	jmp    40cc94 <luaK_prefix+0x95>
  40cc3c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40cc3f:	83 c0 0c             	add    $0xc,%eax
  40cc42:	89 c6                	mov    %eax,%esi
  40cc44:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cc48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cc4c:	b9 90 dc 43 00       	mov    $0x43dc90,%ecx
  40cc51:	48 89 c7             	mov    %rax,%rdi
  40cc54:	e8 57 f5 ff ff       	callq  40c1b0 <constfolding>
  40cc59:	85 c0                	test   %eax,%eax
  40cc5b:	75 36                	jne    40cc93 <luaK_prefix+0x94>
  40cc5d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40cc60:	89 c7                	mov    %eax,%edi
  40cc62:	e8 71 f6 ff ff       	callq  40c2d8 <unopr2op>
  40cc67:	89 c6                	mov    %eax,%esi
  40cc69:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40cc6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cc70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cc74:	48 89 c7             	mov    %rax,%rdi
  40cc77:	e8 7a f6 ff ff       	callq  40c2f6 <codeunexpval>
  40cc7c:	eb 16                	jmp    40cc94 <luaK_prefix+0x95>
  40cc7e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cc82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cc86:	48 89 d6             	mov    %rdx,%rsi
  40cc89:	48 89 c7             	mov    %rax,%rdi
  40cc8c:	e8 2b f0 ff ff       	callq  40bcbc <codenot>
  40cc91:	eb 01                	jmp    40cc94 <luaK_prefix+0x95>
  40cc93:	90                   	nop
  40cc94:	90                   	nop
  40cc95:	c9                   	leaveq 
  40cc96:	c3                   	retq   

000000000040cc97 <luaK_infix>:
  40cc97:	55                   	push   %rbp
  40cc98:	48 89 e5             	mov    %rsp,%rbp
  40cc9b:	48 83 ec 30          	sub    $0x30,%rsp
  40cc9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40cca3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40cca6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40ccaa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ccae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ccb2:	48 89 d6             	mov    %rdx,%rsi
  40ccb5:	48 89 c7             	mov    %rax,%rdi
  40ccb8:	e8 6d e1 ff ff       	callq  40ae2a <luaK_dischargevars>
  40ccbd:	83 7d e4 14          	cmpl   $0x14,-0x1c(%rbp)
  40ccc1:	0f 87 e1 00 00 00    	ja     40cda8 <luaK_infix+0x111>
  40ccc7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40ccca:	48 8b 04 c5 b0 da 43 	mov    0x43dab0(,%rax,8),%rax
  40ccd1:	00 
  40ccd2:	ff e0                	jmpq   *%rax
  40ccd4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ccd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ccdc:	48 89 d6             	mov    %rdx,%rsi
  40ccdf:	48 89 c7             	mov    %rax,%rdi
  40cce2:	e8 6d ee ff ff       	callq  40bb54 <luaK_goiftrue>
  40cce7:	e9 bc 00 00 00       	jmpq   40cda8 <luaK_infix+0x111>
  40ccec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ccf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ccf4:	48 89 d6             	mov    %rdx,%rsi
  40ccf7:	48 89 c7             	mov    %rax,%rdi
  40ccfa:	e8 15 ef ff ff       	callq  40bc14 <luaK_goiffalse>
  40ccff:	e9 a4 00 00 00       	jmpq   40cda8 <luaK_infix+0x111>
  40cd04:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40cd08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd0c:	48 89 d6             	mov    %rdx,%rsi
  40cd0f:	48 89 c7             	mov    %rax,%rdi
  40cd12:	e8 95 e7 ff ff       	callq  40b4ac <luaK_exp2nextreg>
  40cd17:	e9 8c 00 00 00       	jmpq   40cda8 <luaK_infix+0x111>
  40cd1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cd20:	be 00 00 00 00       	mov    $0x0,%esi
  40cd25:	48 89 c7             	mov    %rax,%rdi
  40cd28:	e8 32 cb ff ff       	callq  40985f <tonumeral>
  40cd2d:	85 c0                	test   %eax,%eax
  40cd2f:	75 70                	jne    40cda1 <luaK_infix+0x10a>
  40cd31:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40cd35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd39:	48 89 d6             	mov    %rdx,%rsi
  40cd3c:	48 89 c7             	mov    %rax,%rdi
  40cd3f:	e8 d3 e7 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40cd44:	eb 5b                	jmp    40cda1 <luaK_infix+0x10a>
  40cd46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cd4a:	be 00 00 00 00       	mov    $0x0,%esi
  40cd4f:	48 89 c7             	mov    %rax,%rdi
  40cd52:	e8 08 cb ff ff       	callq  40985f <tonumeral>
  40cd57:	85 c0                	test   %eax,%eax
  40cd59:	75 49                	jne    40cda4 <luaK_infix+0x10d>
  40cd5b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40cd5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd63:	48 89 d6             	mov    %rdx,%rsi
  40cd66:	48 89 c7             	mov    %rax,%rdi
  40cd69:	e8 e5 e9 ff ff       	callq  40b753 <luaK_exp2RK>
  40cd6e:	eb 34                	jmp    40cda4 <luaK_infix+0x10d>
  40cd70:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40cd74:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
  40cd78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40cd7c:	48 89 ce             	mov    %rcx,%rsi
  40cd7f:	48 89 c7             	mov    %rax,%rdi
  40cd82:	e8 57 f1 ff ff       	callq  40bede <isSCnumber>
  40cd87:	85 c0                	test   %eax,%eax
  40cd89:	75 1c                	jne    40cda7 <luaK_infix+0x110>
  40cd8b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40cd8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd93:	48 89 d6             	mov    %rdx,%rsi
  40cd96:	48 89 c7             	mov    %rax,%rdi
  40cd99:	e8 79 e7 ff ff       	callq  40b517 <luaK_exp2anyreg>
  40cd9e:	90                   	nop
  40cd9f:	eb 06                	jmp    40cda7 <luaK_infix+0x110>
  40cda1:	90                   	nop
  40cda2:	eb 04                	jmp    40cda8 <luaK_infix+0x111>
  40cda4:	90                   	nop
  40cda5:	eb 01                	jmp    40cda8 <luaK_infix+0x111>
  40cda7:	90                   	nop
  40cda8:	90                   	nop
  40cda9:	c9                   	leaveq 
  40cdaa:	c3                   	retq   

000000000040cdab <codeconcat>:
  40cdab:	55                   	push   %rbp
  40cdac:	48 89 e5             	mov    %rsp,%rbp
  40cdaf:	48 83 ec 30          	sub    $0x30,%rsp
  40cdb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40cdb7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40cdbb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40cdbf:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40cdc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cdc6:	48 89 c7             	mov    %rax,%rdi
  40cdc9:	e8 73 cc ff ff       	callq  409a41 <previousinstruction>
  40cdce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40cdd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cdd6:	8b 00                	mov    (%rax),%eax
  40cdd8:	83 e0 7f             	and    $0x7f,%eax
  40cddb:	83 f8 35             	cmp    $0x35,%eax
  40cdde:	75 6d                	jne    40ce4d <codeconcat+0xa2>
  40cde0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cde4:	8b 00                	mov    (%rax),%eax
  40cde6:	c1 e8 10             	shr    $0x10,%eax
  40cde9:	25 ff 00 00 00       	and    $0xff,%eax
  40cdee:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40cdf1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40cdf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cdf9:	48 89 d6             	mov    %rdx,%rsi
  40cdfc:	48 89 c7             	mov    %rax,%rdi
  40cdff:	e8 aa d7 ff ff       	callq  40a5ae <freeexp>
  40ce04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ce08:	8b 00                	mov    (%rax),%eax
  40ce0a:	25 7f 80 ff ff       	and    $0xffff807f,%eax
  40ce0f:	89 c2                	mov    %eax,%edx
  40ce11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ce15:	8b 40 08             	mov    0x8(%rax),%eax
  40ce18:	c1 e0 07             	shl    $0x7,%eax
  40ce1b:	25 80 7f 00 00       	and    $0x7f80,%eax
  40ce20:	09 c2                	or     %eax,%edx
  40ce22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ce26:	89 10                	mov    %edx,(%rax)
  40ce28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ce2c:	8b 00                	mov    (%rax),%eax
  40ce2e:	25 ff ff 00 ff       	and    $0xff00ffff,%eax
  40ce33:	89 c2                	mov    %eax,%edx
  40ce35:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40ce38:	83 c0 01             	add    $0x1,%eax
  40ce3b:	c1 e0 10             	shl    $0x10,%eax
  40ce3e:	25 00 00 ff 00       	and    $0xff0000,%eax
  40ce43:	09 c2                	or     %eax,%edx
  40ce45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ce49:	89 10                	mov    %edx,(%rax)
  40ce4b:	eb 4d                	jmp    40ce9a <codeconcat+0xef>
  40ce4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ce51:	8b 50 08             	mov    0x8(%rax),%edx
  40ce54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce58:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40ce5e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40ce64:	b9 02 00 00 00       	mov    $0x2,%ecx
  40ce69:	be 35 00 00 00       	mov    $0x35,%esi
  40ce6e:	48 89 c7             	mov    %rax,%rdi
  40ce71:	e8 70 d4 ff ff       	callq  40a2e6 <luaK_codeABCk>
  40ce76:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ce7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce7e:	48 89 d6             	mov    %rdx,%rsi
  40ce81:	48 89 c7             	mov    %rax,%rdi
  40ce84:	e8 25 d7 ff ff       	callq  40a5ae <freeexp>
  40ce89:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40ce8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce90:	89 d6                	mov    %edx,%esi
  40ce92:	48 89 c7             	mov    %rax,%rdi
  40ce95:	e8 10 03 00 00       	callq  40d1aa <luaK_fixline>
  40ce9a:	90                   	nop
  40ce9b:	c9                   	leaveq 
  40ce9c:	c3                   	retq   

000000000040ce9d <luaK_posfix>:
  40ce9d:	55                   	push   %rbp
  40ce9e:	48 89 e5             	mov    %rsp,%rbp
  40cea1:	48 83 ec 20          	sub    $0x20,%rsp
  40cea5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40cea9:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40ceac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40ceb0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40ceb4:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
  40ceb8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40cebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cec0:	48 89 d6             	mov    %rdx,%rsi
  40cec3:	48 89 c7             	mov    %rax,%rdi
  40cec6:	e8 5f df ff ff       	callq  40ae2a <luaK_dischargevars>
  40cecb:	83 7d f4 0b          	cmpl   $0xb,-0xc(%rbp)
  40cecf:	77 1f                	ja     40cef0 <luaK_posfix+0x53>
  40ced1:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40ced4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40ced8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cee0:	48 89 c7             	mov    %rax,%rdi
  40cee3:	e8 c8 f2 ff ff       	callq  40c1b0 <constfolding>
  40cee8:	85 c0                	test   %eax,%eax
  40ceea:	0f 85 b1 02 00 00    	jne    40d1a1 <luaK_posfix+0x304>
  40cef0:	83 7d f4 14          	cmpl   $0x14,-0xc(%rbp)
  40cef4:	0f 87 ae 02 00 00    	ja     40d1a8 <luaK_posfix+0x30b>
  40cefa:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40cefd:	48 8b 04 c5 58 db 43 	mov    0x43db58(,%rax,8),%rax
  40cf04:	00 
  40cf05:	ff e0                	jmpq   *%rax
  40cf07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cf0b:	8b 50 14             	mov    0x14(%rax),%edx
  40cf0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40cf12:	48 8d 48 14          	lea    0x14(%rax),%rcx
  40cf16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf1a:	48 89 ce             	mov    %rcx,%rsi
  40cf1d:	48 89 c7             	mov    %rax,%rdi
  40cf20:	e8 42 cd ff ff       	callq  409c67 <luaK_concat>
  40cf25:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40cf29:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40cf2d:	48 8b 06             	mov    (%rsi),%rax
  40cf30:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  40cf34:	48 89 01             	mov    %rax,(%rcx)
  40cf37:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  40cf3b:	48 8b 46 10          	mov    0x10(%rsi),%rax
  40cf3f:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40cf43:	e9 60 02 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40cf48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cf4c:	8b 50 10             	mov    0x10(%rax),%edx
  40cf4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40cf53:	48 8d 48 10          	lea    0x10(%rax),%rcx
  40cf57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf5b:	48 89 ce             	mov    %rcx,%rsi
  40cf5e:	48 89 c7             	mov    %rax,%rdi
  40cf61:	e8 01 cd ff ff       	callq  409c67 <luaK_concat>
  40cf66:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40cf6a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40cf6e:	48 8b 06             	mov    (%rsi),%rax
  40cf71:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  40cf75:	48 89 01             	mov    %rax,(%rcx)
  40cf78:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  40cf7c:	48 8b 46 10          	mov    0x10(%rsi),%rax
  40cf80:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40cf84:	e9 1f 02 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40cf89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40cf8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf91:	48 89 d6             	mov    %rdx,%rsi
  40cf94:	48 89 c7             	mov    %rax,%rdi
  40cf97:	e8 10 e5 ff ff       	callq  40b4ac <luaK_exp2nextreg>
  40cf9c:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40cf9f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40cfa3:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40cfa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cfab:	48 89 c7             	mov    %rax,%rdi
  40cfae:	e8 f8 fd ff ff       	callq  40cdab <codeconcat>
  40cfb3:	e9 f0 01 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40cfb8:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40cfbb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40cfbf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cfc3:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40cfc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cfca:	41 89 f8             	mov    %edi,%r8d
  40cfcd:	48 89 c7             	mov    %rax,%rdi
  40cfd0:	e8 4a f8 ff ff       	callq  40c81f <codecommutative>
  40cfd5:	e9 ce 01 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40cfda:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40cfdd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40cfe1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40cfe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cfe9:	41 b9 07 00 00 00    	mov    $0x7,%r9d
  40cfef:	41 89 c8             	mov    %ecx,%r8d
  40cff2:	b9 15 00 00 00       	mov    $0x15,%ecx
  40cff7:	48 89 c7             	mov    %rax,%rdi
  40cffa:	e8 b6 f5 ff ff       	callq  40c5b5 <finishbinexpneg>
  40cfff:	85 c0                	test   %eax,%eax
  40d001:	0f 85 9d 01 00 00    	jne    40d1a4 <luaK_posfix+0x307>
  40d007:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40d00a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d00e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d012:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d019:	41 89 f9             	mov    %edi,%r9d
  40d01c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d022:	48 89 c7             	mov    %rax,%rdi
  40d025:	e8 5d f7 ff ff       	callq  40c787 <codearith>
  40d02a:	e9 79 01 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40d02f:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40d032:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d036:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d03a:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d03d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d041:	41 89 f8             	mov    %edi,%r8d
  40d044:	48 89 c7             	mov    %rax,%rdi
  40d047:	e8 92 f8 ff ff       	callq  40c8de <codebitwise>
  40d04c:	e9 57 01 00 00       	jmpq   40d1a8 <luaK_posfix+0x30b>
  40d051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d055:	48 89 c7             	mov    %rax,%rdi
  40d058:	e8 43 ee ff ff       	callq  40bea0 <isSCint>
  40d05d:	85 c0                	test   %eax,%eax
  40d05f:	74 47                	je     40d0a8 <luaK_posfix+0x20b>
  40d061:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40d065:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d069:	48 89 d6             	mov    %rdx,%rsi
  40d06c:	48 89 c7             	mov    %rax,%rdi
  40d06f:	e8 58 f6 ff ff       	callq  40c6cc <swapexps>
  40d074:	8b 75 f0             	mov    -0x10(%rbp),%esi
  40d077:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d07b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d083:	48 83 ec 08          	sub    $0x8,%rsp
  40d087:	6a 10                	pushq  $0x10
  40d089:	41 89 f1             	mov    %esi,%r9d
  40d08c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40d092:	be 21 00 00 00       	mov    $0x21,%esi
  40d097:	48 89 c7             	mov    %rax,%rdi
  40d09a:	e8 34 f4 ff ff       	callq  40c4d3 <codebini>
  40d09f:	48 83 c4 10          	add    $0x10,%rsp
  40d0a3:	e9 ff 00 00 00       	jmpq   40d1a7 <luaK_posfix+0x30a>
  40d0a8:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40d0ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40d0af:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40d0b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0b7:	41 b9 10 00 00 00    	mov    $0x10,%r9d
  40d0bd:	41 89 c8             	mov    %ecx,%r8d
  40d0c0:	b9 20 00 00 00       	mov    $0x20,%ecx
  40d0c5:	48 89 c7             	mov    %rax,%rdi
  40d0c8:	e8 e8 f4 ff ff       	callq  40c5b5 <finishbinexpneg>
  40d0cd:	85 c0                	test   %eax,%eax
  40d0cf:	0f 85 d2 00 00 00    	jne    40d1a7 <luaK_posfix+0x30a>
  40d0d5:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40d0d8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d0dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d0e0:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d0e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0e7:	41 89 f8             	mov    %edi,%r8d
  40d0ea:	48 89 c7             	mov    %rax,%rdi
  40d0ed:	e8 5a f3 ff ff       	callq  40c44c <codebinexpval>
  40d0f2:	e9 b0 00 00 00       	jmpq   40d1a7 <luaK_posfix+0x30a>
  40d0f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d0fb:	48 89 c7             	mov    %rax,%rdi
  40d0fe:	e8 9d ed ff ff       	callq  40bea0 <isSCint>
  40d103:	85 c0                	test   %eax,%eax
  40d105:	74 31                	je     40d138 <luaK_posfix+0x29b>
  40d107:	8b 75 f0             	mov    -0x10(%rbp),%esi
  40d10a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d10e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d116:	48 83 ec 08          	sub    $0x8,%rsp
  40d11a:	6a 11                	pushq  $0x11
  40d11c:	41 89 f1             	mov    %esi,%r9d
  40d11f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d125:	be 20 00 00 00       	mov    $0x20,%esi
  40d12a:	48 89 c7             	mov    %rax,%rdi
  40d12d:	e8 a1 f3 ff ff       	callq  40c4d3 <codebini>
  40d132:	48 83 c4 10          	add    $0x10,%rsp
  40d136:	eb 70                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d138:	8b 7d f0             	mov    -0x10(%rbp),%edi
  40d13b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d13f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d143:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d14a:	41 89 f8             	mov    %edi,%r8d
  40d14d:	48 89 c7             	mov    %rax,%rdi
  40d150:	e8 f7 f2 ff ff       	callq  40c44c <codebinexpval>
  40d155:	eb 51                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d157:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d15b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d15f:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d166:	48 89 c7             	mov    %rax,%rdi
  40d169:	e8 78 f9 ff ff       	callq  40cae6 <codeeq>
  40d16e:	eb 38                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d170:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40d174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d178:	48 89 d6             	mov    %rdx,%rsi
  40d17b:	48 89 c7             	mov    %rax,%rdi
  40d17e:	e8 49 f5 ff ff       	callq  40c6cc <swapexps>
  40d183:	83 6d f4 03          	subl   $0x3,-0xc(%rbp)
  40d187:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d18b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40d18f:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40d192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d196:	48 89 c7             	mov    %rax,%rdi
  40d199:	e8 f6 f7 ff ff       	callq  40c994 <codeorder>
  40d19e:	90                   	nop
  40d19f:	eb 07                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d1a1:	90                   	nop
  40d1a2:	eb 04                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d1a4:	90                   	nop
  40d1a5:	eb 01                	jmp    40d1a8 <luaK_posfix+0x30b>
  40d1a7:	90                   	nop
  40d1a8:	c9                   	leaveq 
  40d1a9:	c3                   	retq   

000000000040d1aa <luaK_fixline>:
  40d1aa:	55                   	push   %rbp
  40d1ab:	48 89 e5             	mov    %rsp,%rbp
  40d1ae:	48 83 ec 10          	sub    $0x10,%rsp
  40d1b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d1b6:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40d1b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1bd:	48 89 c7             	mov    %rax,%rdi
  40d1c0:	e8 ad cf ff ff       	callq  40a172 <removelastlineinfo>
  40d1c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1c9:	48 8b 08             	mov    (%rax),%rcx
  40d1cc:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40d1cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1d3:	48 89 ce             	mov    %rcx,%rsi
  40d1d6:	48 89 c7             	mov    %rax,%rdi
  40d1d9:	e8 28 ce ff ff       	callq  40a006 <savelineinfo>
  40d1de:	90                   	nop
  40d1df:	c9                   	leaveq 
  40d1e0:	c3                   	retq   

000000000040d1e1 <luaK_settablesize>:
  40d1e1:	55                   	push   %rbp
  40d1e2:	48 89 e5             	mov    %rsp,%rbp
  40d1e5:	48 83 ec 40          	sub    $0x40,%rsp
  40d1e9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40d1ed:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  40d1f0:	89 55 d0             	mov    %edx,-0x30(%rbp)
  40d1f3:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  40d1f6:	44 89 45 c8          	mov    %r8d,-0x38(%rbp)
  40d1fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d1fe:	48 8b 00             	mov    (%rax),%rax
  40d201:	48 8b 40 40          	mov    0x40(%rax),%rax
  40d205:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40d208:	48 63 d2             	movslq %edx,%rdx
  40d20b:	48 c1 e2 02          	shl    $0x2,%rdx
  40d20f:	48 01 d0             	add    %rdx,%rax
  40d212:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d216:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  40d21a:	74 0f                	je     40d22b <luaK_settablesize+0x4a>
  40d21c:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40d21f:	89 c7                	mov    %eax,%edi
  40d221:	e8 60 16 01 00       	callq  41e886 <luaO_ceillog2>
  40d226:	83 c0 01             	add    $0x1,%eax
  40d229:	eb 05                	jmp    40d230 <luaK_settablesize+0x4f>
  40d22b:	b8 00 00 00 00       	mov    $0x0,%eax
  40d230:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40d233:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40d236:	8d 90 ff 00 00 00    	lea    0xff(%rax),%edx
  40d23c:	85 c0                	test   %eax,%eax
  40d23e:	0f 48 c2             	cmovs  %edx,%eax
  40d241:	c1 f8 08             	sar    $0x8,%eax
  40d244:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40d247:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40d24a:	99                   	cltd   
  40d24b:	c1 ea 18             	shr    $0x18,%edx
  40d24e:	01 d0                	add    %edx,%eax
  40d250:	0f b6 c0             	movzbl %al,%eax
  40d253:	29 d0                	sub    %edx,%eax
  40d255:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40d258:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  40d25c:	0f 9f c0             	setg   %al
  40d25f:	0f b6 c0             	movzbl %al,%eax
  40d262:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40d265:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40d268:	c1 e0 07             	shl    $0x7,%eax
  40d26b:	89 c2                	mov    %eax,%edx
  40d26d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40d270:	c1 e0 10             	shl    $0x10,%eax
  40d273:	09 c2                	or     %eax,%edx
  40d275:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40d278:	c1 e0 18             	shl    $0x18,%eax
  40d27b:	09 c2                	or     %eax,%edx
  40d27d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40d280:	c1 e0 0f             	shl    $0xf,%eax
  40d283:	09 d0                	or     %edx,%eax
  40d285:	83 c8 13             	or     $0x13,%eax
  40d288:	89 c2                	mov    %eax,%edx
  40d28a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d28e:	89 10                	mov    %edx,(%rax)
  40d290:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40d293:	c1 e0 07             	shl    $0x7,%eax
  40d296:	89 c2                	mov    %eax,%edx
  40d298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d29c:	48 83 c0 04          	add    $0x4,%rax
  40d2a0:	83 ca 52             	or     $0x52,%edx
  40d2a3:	89 10                	mov    %edx,(%rax)
  40d2a5:	90                   	nop
  40d2a6:	c9                   	leaveq 
  40d2a7:	c3                   	retq   

000000000040d2a8 <luaK_setlist>:
  40d2a8:	55                   	push   %rbp
  40d2a9:	48 89 e5             	mov    %rsp,%rbp
  40d2ac:	48 83 ec 30          	sub    $0x30,%rsp
  40d2b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d2b4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40d2b7:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40d2ba:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  40d2bd:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  40d2c1:	75 07                	jne    40d2ca <luaK_setlist+0x22>
  40d2c3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  40d2ca:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
  40d2d1:	7f 25                	jg     40d2f8 <luaK_setlist+0x50>
  40d2d3:	8b 75 e0             	mov    -0x20(%rbp),%esi
  40d2d6:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40d2d9:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40d2dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d2e0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40d2e6:	41 89 f0             	mov    %esi,%r8d
  40d2e9:	be 4e 00 00 00       	mov    $0x4e,%esi
  40d2ee:	48 89 c7             	mov    %rax,%rdi
  40d2f1:	e8 f0 cf ff ff       	callq  40a2e6 <luaK_codeABCk>
  40d2f6:	eb 59                	jmp    40d351 <luaK_setlist+0xa9>
  40d2f8:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40d2fb:	8d 90 ff 00 00 00    	lea    0xff(%rax),%edx
  40d301:	85 c0                	test   %eax,%eax
  40d303:	0f 48 c2             	cmovs  %edx,%eax
  40d306:	c1 f8 08             	sar    $0x8,%eax
  40d309:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40d30c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40d30f:	99                   	cltd   
  40d310:	c1 ea 18             	shr    $0x18,%edx
  40d313:	01 d0                	add    %edx,%eax
  40d315:	0f b6 c0             	movzbl %al,%eax
  40d318:	29 d0                	sub    %edx,%eax
  40d31a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40d31d:	8b 75 e0             	mov    -0x20(%rbp),%esi
  40d320:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40d323:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40d326:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d32a:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40d330:	41 89 f0             	mov    %esi,%r8d
  40d333:	be 4e 00 00 00       	mov    $0x4e,%esi
  40d338:	48 89 c7             	mov    %rax,%rdi
  40d33b:	e8 a6 cf ff ff       	callq  40a2e6 <luaK_codeABCk>
  40d340:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40d343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d347:	89 d6                	mov    %edx,%esi
  40d349:	48 89 c7             	mov    %rax,%rdi
  40d34c:	e8 9b d0 ff ff       	callq  40a3ec <codeextraarg>
  40d351:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40d354:	8d 50 01             	lea    0x1(%rax),%edx
  40d357:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d35b:	88 50 44             	mov    %dl,0x44(%rax)
  40d35e:	90                   	nop
  40d35f:	c9                   	leaveq 
  40d360:	c3                   	retq   

000000000040d361 <finaltarget>:
  40d361:	55                   	push   %rbp
  40d362:	48 89 e5             	mov    %rsp,%rbp
  40d365:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d369:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40d36c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40d373:	eb 36                	jmp    40d3ab <finaltarget+0x4a>
  40d375:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40d378:	48 98                	cltq   
  40d37a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40d381:	00 
  40d382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d386:	48 01 d0             	add    %rdx,%rax
  40d389:	8b 00                	mov    (%rax),%eax
  40d38b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40d38e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40d391:	83 e0 7f             	and    $0x7f,%eax
  40d394:	83 f8 38             	cmp    $0x38,%eax
  40d397:	75 1a                	jne    40d3b3 <finaltarget+0x52>
  40d399:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40d39c:	c1 e8 07             	shr    $0x7,%eax
  40d39f:	2d fe ff ff 00       	sub    $0xfffffe,%eax
  40d3a4:	01 45 e4             	add    %eax,-0x1c(%rbp)
  40d3a7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40d3ab:	83 7d fc 63          	cmpl   $0x63,-0x4(%rbp)
  40d3af:	7e c4                	jle    40d375 <finaltarget+0x14>
  40d3b1:	eb 01                	jmp    40d3b4 <finaltarget+0x53>
  40d3b3:	90                   	nop
  40d3b4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40d3b7:	5d                   	pop    %rbp
  40d3b8:	c3                   	retq   

000000000040d3b9 <luaK_finish>:
  40d3b9:	55                   	push   %rbp
  40d3ba:	48 89 e5             	mov    %rsp,%rbp
  40d3bd:	48 83 ec 30          	sub    $0x30,%rsp
  40d3c1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40d3c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d3c9:	48 8b 00             	mov    (%rax),%rax
  40d3cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40d3d0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40d3d7:	e9 f4 00 00 00       	jmpq   40d4d0 <luaK_finish+0x117>
  40d3dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d3e0:	48 8b 40 40          	mov    0x40(%rax),%rax
  40d3e4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40d3e7:	48 63 d2             	movslq %edx,%rdx
  40d3ea:	48 c1 e2 02          	shl    $0x2,%rdx
  40d3ee:	48 01 d0             	add    %rdx,%rax
  40d3f1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40d3f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d3f9:	8b 00                	mov    (%rax),%eax
  40d3fb:	83 e0 7f             	and    $0x7f,%eax
  40d3fe:	83 e8 38             	sub    $0x38,%eax
  40d401:	83 f8 10             	cmp    $0x10,%eax
  40d404:	0f 87 bb 00 00 00    	ja     40d4c5 <luaK_finish+0x10c>
  40d40a:	89 c0                	mov    %eax,%eax
  40d40c:	48 8b 04 c5 00 dc 43 	mov    0x43dc00(,%rax,8),%rax
  40d413:	00 
  40d414:	ff e0                	jmpq   *%rax
  40d416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d41a:	0f b6 40 46          	movzbl 0x46(%rax),%eax
  40d41e:	84 c0                	test   %al,%al
  40d420:	75 10                	jne    40d432 <luaK_finish+0x79>
  40d422:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d426:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40d42a:	84 c0                	test   %al,%al
  40d42c:	0f 84 96 00 00 00    	je     40d4c8 <luaK_finish+0x10f>
  40d432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d436:	8b 00                	mov    (%rax),%eax
  40d438:	83 e0 80             	and    $0xffffff80,%eax
  40d43b:	83 c8 46             	or     $0x46,%eax
  40d43e:	89 c2                	mov    %eax,%edx
  40d440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d444:	89 10                	mov    %edx,(%rax)
  40d446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d44a:	0f b6 40 46          	movzbl 0x46(%rax),%eax
  40d44e:	84 c0                	test   %al,%al
  40d450:	74 11                	je     40d463 <luaK_finish+0xaa>
  40d452:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d456:	8b 00                	mov    (%rax),%eax
  40d458:	80 cc 80             	or     $0x80,%ah
  40d45b:	89 c2                	mov    %eax,%edx
  40d45d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d461:	89 10                	mov    %edx,(%rax)
  40d463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d467:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40d46b:	84 c0                	test   %al,%al
  40d46d:	74 5c                	je     40d4cb <luaK_finish+0x112>
  40d46f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d473:	8b 00                	mov    (%rax),%eax
  40d475:	25 ff ff ff 00       	and    $0xffffff,%eax
  40d47a:	89 c2                	mov    %eax,%edx
  40d47c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d480:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40d484:	0f b6 c0             	movzbl %al,%eax
  40d487:	83 c0 01             	add    $0x1,%eax
  40d48a:	c1 e0 18             	shl    $0x18,%eax
  40d48d:	09 c2                	or     %eax,%edx
  40d48f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d493:	89 10                	mov    %edx,(%rax)
  40d495:	eb 34                	jmp    40d4cb <luaK_finish+0x112>
  40d497:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d49b:	48 8b 40 40          	mov    0x40(%rax),%rax
  40d49f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40d4a2:	89 d6                	mov    %edx,%esi
  40d4a4:	48 89 c7             	mov    %rax,%rdi
  40d4a7:	e8 b5 fe ff ff       	callq  40d361 <finaltarget>
  40d4ac:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40d4af:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40d4b2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40d4b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d4b9:	89 ce                	mov    %ecx,%esi
  40d4bb:	48 89 c7             	mov    %rax,%rdi
  40d4be:	e8 20 c7 ff ff       	callq  409be3 <fixjump>
  40d4c3:	eb 07                	jmp    40d4cc <luaK_finish+0x113>
  40d4c5:	90                   	nop
  40d4c6:	eb 04                	jmp    40d4cc <luaK_finish+0x113>
  40d4c8:	90                   	nop
  40d4c9:	eb 01                	jmp    40d4cc <luaK_finish+0x113>
  40d4cb:	90                   	nop
  40d4cc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40d4d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d4d4:	8b 40 20             	mov    0x20(%rax),%eax
  40d4d7:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  40d4da:	0f 8c fc fe ff ff    	jl     40d3dc <luaK_finish+0x23>
  40d4e0:	90                   	nop
  40d4e1:	c9                   	leaveq 
  40d4e2:	c3                   	retq   

000000000040d4e3 <getco>:
  40d4e3:	55                   	push   %rbp
  40d4e4:	48 89 e5             	mov    %rsp,%rbp
  40d4e7:	48 83 ec 20          	sub    $0x20,%rsp
  40d4eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d4ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d4f3:	be 01 00 00 00       	mov    $0x1,%esi
  40d4f8:	48 89 c7             	mov    %rax,%rdi
  40d4fb:	e8 e9 56 ff ff       	callq  402be9 <lua_tothread>
  40d500:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d504:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40d509:	0f 95 c0             	setne  %al
  40d50c:	0f b6 c0             	movzbl %al,%eax
  40d50f:	48 85 c0             	test   %rax,%rax
  40d512:	75 18                	jne    40d52c <getco+0x49>
  40d514:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d518:	ba c0 dc 43 00       	mov    $0x43dcc0,%edx
  40d51d:	be 01 00 00 00       	mov    $0x1,%esi
  40d522:	48 89 c7             	mov    %rax,%rdi
  40d525:	e8 1f 8b ff ff       	callq  406049 <luaL_typeerror>
  40d52a:	85 c0                	test   %eax,%eax
  40d52c:	90                   	nop
  40d52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d531:	c9                   	leaveq 
  40d532:	c3                   	retq   

000000000040d533 <auxresume>:
  40d533:	55                   	push   %rbp
  40d534:	48 89 e5             	mov    %rsp,%rbp
  40d537:	48 83 ec 30          	sub    $0x30,%rsp
  40d53b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d53f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40d543:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40d546:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40d549:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d54d:	89 d6                	mov    %edx,%esi
  40d54f:	48 89 c7             	mov    %rax,%rdi
  40d552:	e8 18 48 ff ff       	callq  401d6f <lua_checkstack>
  40d557:	85 c0                	test   %eax,%eax
  40d559:	0f 94 c0             	sete   %al
  40d55c:	0f b6 c0             	movzbl %al,%eax
  40d55f:	48 85 c0             	test   %rax,%rax
  40d562:	74 1b                	je     40d57f <auxresume+0x4c>
  40d564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d568:	be c7 dc 43 00       	mov    $0x43dcc7,%esi
  40d56d:	48 89 c7             	mov    %rax,%rdi
  40d570:	e8 99 58 ff ff       	callq  402e0e <lua_pushstring>
  40d575:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40d57a:	e9 db 00 00 00       	jmpq   40d65a <auxresume+0x127>
  40d57f:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40d582:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40d586:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d58a:	48 89 ce             	mov    %rcx,%rsi
  40d58d:	48 89 c7             	mov    %rax,%rdi
  40d590:	e8 88 48 ff ff       	callq  401e1d <lua_xmove>
  40d595:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  40d599:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40d59c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40d5a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d5a4:	48 89 c7             	mov    %rax,%rdi
  40d5a7:	e8 ec 57 00 00       	callq  412d98 <lua_resume>
  40d5ac:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40d5af:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40d5b3:	74 06                	je     40d5bb <auxresume+0x88>
  40d5b5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40d5b9:	75 07                	jne    40d5c2 <auxresume+0x8f>
  40d5bb:	b8 01 00 00 00       	mov    $0x1,%eax
  40d5c0:	eb 05                	jmp    40d5c7 <auxresume+0x94>
  40d5c2:	b8 00 00 00 00       	mov    $0x0,%eax
  40d5c7:	85 c0                	test   %eax,%eax
  40d5c9:	0f 95 c0             	setne  %al
  40d5cc:	0f b6 c0             	movzbl %al,%eax
  40d5cf:	48 85 c0             	test   %rax,%rax
  40d5d2:	74 69                	je     40d63d <auxresume+0x10a>
  40d5d4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40d5d7:	8d 50 01             	lea    0x1(%rax),%edx
  40d5da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d5de:	89 d6                	mov    %edx,%esi
  40d5e0:	48 89 c7             	mov    %rax,%rdi
  40d5e3:	e8 87 47 ff ff       	callq  401d6f <lua_checkstack>
  40d5e8:	85 c0                	test   %eax,%eax
  40d5ea:	0f 94 c0             	sete   %al
  40d5ed:	0f b6 c0             	movzbl %al,%eax
  40d5f0:	48 85 c0             	test   %rax,%rax
  40d5f3:	74 2d                	je     40d622 <auxresume+0xef>
  40d5f5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40d5f8:	f7 d0                	not    %eax
  40d5fa:	89 c2                	mov    %eax,%edx
  40d5fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d600:	89 d6                	mov    %edx,%esi
  40d602:	48 89 c7             	mov    %rax,%rdi
  40d605:	e8 7a 49 ff ff       	callq  401f84 <lua_settop>
  40d60a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d60e:	be e4 dc 43 00       	mov    $0x43dce4,%esi
  40d613:	48 89 c7             	mov    %rax,%rdi
  40d616:	e8 f3 57 ff ff       	callq  402e0e <lua_pushstring>
  40d61b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40d620:	eb 38                	jmp    40d65a <auxresume+0x127>
  40d622:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40d625:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40d629:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d62d:	48 89 ce             	mov    %rcx,%rsi
  40d630:	48 89 c7             	mov    %rax,%rdi
  40d633:	e8 e5 47 ff ff       	callq  401e1d <lua_xmove>
  40d638:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40d63b:	eb 1d                	jmp    40d65a <auxresume+0x127>
  40d63d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40d641:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d645:	ba 01 00 00 00       	mov    $0x1,%edx
  40d64a:	48 89 ce             	mov    %rcx,%rsi
  40d64d:	48 89 c7             	mov    %rax,%rdi
  40d650:	e8 c8 47 ff ff       	callq  401e1d <lua_xmove>
  40d655:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40d65a:	c9                   	leaveq 
  40d65b:	c3                   	retq   

000000000040d65c <luaB_coresume>:
  40d65c:	55                   	push   %rbp
  40d65d:	48 89 e5             	mov    %rsp,%rbp
  40d660:	48 83 ec 20          	sub    $0x20,%rsp
  40d664:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d66c:	48 89 c7             	mov    %rax,%rdi
  40d66f:	e8 6f fe ff ff       	callq  40d4e3 <getco>
  40d674:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d67c:	48 89 c7             	mov    %rax,%rdi
  40d67f:	e8 d5 48 ff ff       	callq  401f59 <lua_gettop>
  40d684:	8d 50 ff             	lea    -0x1(%rax),%edx
  40d687:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40d68b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d68f:	48 89 ce             	mov    %rcx,%rsi
  40d692:	48 89 c7             	mov    %rax,%rdi
  40d695:	e8 99 fe ff ff       	callq  40d533 <auxresume>
  40d69a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40d69d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40d6a0:	c1 e8 1f             	shr    $0x1f,%eax
  40d6a3:	48 98                	cltq   
  40d6a5:	48 85 c0             	test   %rax,%rax
  40d6a8:	74 2e                	je     40d6d8 <luaB_coresume+0x7c>
  40d6aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d6ae:	be 00 00 00 00       	mov    $0x0,%esi
  40d6b3:	48 89 c7             	mov    %rax,%rdi
  40d6b6:	e8 7d 5a ff ff       	callq  403138 <lua_pushboolean>
  40d6bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d6bf:	ba 01 00 00 00       	mov    $0x1,%edx
  40d6c4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40d6c9:	48 89 c7             	mov    %rax,%rdi
  40d6cc:	e8 9d 4a ff ff       	callq  40216e <lua_rotate>
  40d6d1:	b8 02 00 00 00       	mov    $0x2,%eax
  40d6d6:	eb 31                	jmp    40d709 <luaB_coresume+0xad>
  40d6d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d6dc:	be 01 00 00 00       	mov    $0x1,%esi
  40d6e1:	48 89 c7             	mov    %rax,%rdi
  40d6e4:	e8 4f 5a ff ff       	callq  403138 <lua_pushboolean>
  40d6e9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40d6ec:	f7 d0                	not    %eax
  40d6ee:	89 c1                	mov    %eax,%ecx
  40d6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d6f4:	ba 01 00 00 00       	mov    $0x1,%edx
  40d6f9:	89 ce                	mov    %ecx,%esi
  40d6fb:	48 89 c7             	mov    %rax,%rdi
  40d6fe:	e8 6b 4a ff ff       	callq  40216e <lua_rotate>
  40d703:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40d706:	83 c0 01             	add    $0x1,%eax
  40d709:	c9                   	leaveq 
  40d70a:	c3                   	retq   

000000000040d70b <luaB_auxwrap>:
  40d70b:	55                   	push   %rbp
  40d70c:	48 89 e5             	mov    %rsp,%rbp
  40d70f:	48 83 ec 30          	sub    $0x30,%rsp
  40d713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40d717:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d71b:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  40d720:	48 89 c7             	mov    %rax,%rdi
  40d723:	e8 c1 54 ff ff       	callq  402be9 <lua_tothread>
  40d728:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40d72c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d730:	48 89 c7             	mov    %rax,%rdi
  40d733:	e8 21 48 ff ff       	callq  401f59 <lua_gettop>
  40d738:	89 c2                	mov    %eax,%edx
  40d73a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40d73e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d742:	48 89 ce             	mov    %rcx,%rsi
  40d745:	48 89 c7             	mov    %rax,%rdi
  40d748:	e8 e6 fd ff ff       	callq  40d533 <auxresume>
  40d74d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40d750:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40d753:	c1 e8 1f             	shr    $0x1f,%eax
  40d756:	48 98                	cltq   
  40d758:	48 85 c0             	test   %rax,%rax
  40d75b:	0f 84 ab 00 00 00    	je     40d80c <luaB_auxwrap+0x101>
  40d761:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d765:	48 89 c7             	mov    %rax,%rdi
  40d768:	e8 e7 71 ff ff       	callq  404954 <lua_status>
  40d76d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40d770:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40d774:	74 34                	je     40d7aa <luaB_auxwrap+0x9f>
  40d776:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40d77a:	74 2e                	je     40d7aa <luaB_auxwrap+0x9f>
  40d77c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40d780:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d784:	48 89 d6             	mov    %rdx,%rsi
  40d787:	48 89 c7             	mov    %rax,%rdi
  40d78a:	e8 78 8b 01 00       	callq  426307 <lua_closethread>
  40d78f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40d792:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40d796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d79a:	ba 01 00 00 00       	mov    $0x1,%edx
  40d79f:	48 89 ce             	mov    %rcx,%rsi
  40d7a2:	48 89 c7             	mov    %rax,%rdi
  40d7a5:	e8 73 46 ff ff       	callq  401e1d <lua_xmove>
  40d7aa:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
  40d7ae:	74 4e                	je     40d7fe <luaB_auxwrap+0xf3>
  40d7b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d7b4:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40d7b9:	48 89 c7             	mov    %rax,%rdi
  40d7bc:	e8 b2 4b ff ff       	callq  402373 <lua_type>
  40d7c1:	83 f8 04             	cmp    $0x4,%eax
  40d7c4:	75 38                	jne    40d7fe <luaB_auxwrap+0xf3>
  40d7c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d7ca:	be 01 00 00 00       	mov    $0x1,%esi
  40d7cf:	48 89 c7             	mov    %rax,%rdi
  40d7d2:	e8 74 89 ff ff       	callq  40614b <luaL_where>
  40d7d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d7db:	ba 01 00 00 00       	mov    $0x1,%edx
  40d7e0:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40d7e5:	48 89 c7             	mov    %rax,%rdi
  40d7e8:	e8 81 49 ff ff       	callq  40216e <lua_rotate>
  40d7ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d7f1:	be 02 00 00 00       	mov    $0x2,%esi
  40d7f6:	48 89 c7             	mov    %rax,%rdi
  40d7f9:	e8 3f 79 ff ff       	callq  40513d <lua_concat>
  40d7fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d802:	48 89 c7             	mov    %rax,%rdi
  40d805:	e8 ef 77 ff ff       	callq  404ff9 <lua_error>
  40d80a:	eb 03                	jmp    40d80f <luaB_auxwrap+0x104>
  40d80c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40d80f:	c9                   	leaveq 
  40d810:	c3                   	retq   

000000000040d811 <luaB_cocreate>:
  40d811:	55                   	push   %rbp
  40d812:	48 89 e5             	mov    %rsp,%rbp
  40d815:	48 83 ec 20          	sub    $0x20,%rsp
  40d819:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d81d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d821:	ba 06 00 00 00       	mov    $0x6,%edx
  40d826:	be 01 00 00 00       	mov    $0x1,%esi
  40d82b:	48 89 c7             	mov    %rax,%rdi
  40d82e:	e8 0a 8f ff ff       	callq  40673d <luaL_checktype>
  40d833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d837:	48 89 c7             	mov    %rax,%rdi
  40d83a:	e8 3c 88 01 00       	callq  42607b <lua_newthread>
  40d83f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d847:	be 01 00 00 00       	mov    $0x1,%esi
  40d84c:	48 89 c7             	mov    %rax,%rdi
  40d84f:	e8 bb 4a ff ff       	callq  40230f <lua_pushvalue>
  40d854:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40d858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d85c:	ba 01 00 00 00       	mov    $0x1,%edx
  40d861:	48 89 ce             	mov    %rcx,%rsi
  40d864:	48 89 c7             	mov    %rax,%rdi
  40d867:	e8 b1 45 ff ff       	callq  401e1d <lua_xmove>
  40d86c:	b8 01 00 00 00       	mov    $0x1,%eax
  40d871:	c9                   	leaveq 
  40d872:	c3                   	retq   

000000000040d873 <luaB_cowrap>:
  40d873:	55                   	push   %rbp
  40d874:	48 89 e5             	mov    %rsp,%rbp
  40d877:	48 83 ec 10          	sub    $0x10,%rsp
  40d87b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d87f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d883:	48 89 c7             	mov    %rax,%rdi
  40d886:	e8 86 ff ff ff       	callq  40d811 <luaB_cocreate>
  40d88b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d88f:	ba 01 00 00 00       	mov    $0x1,%edx
  40d894:	be 0b d7 40 00       	mov    $0x40d70b,%esi
  40d899:	48 89 c7             	mov    %rax,%rdi
  40d89c:	e8 4a 57 ff ff       	callq  402feb <lua_pushcclosure>
  40d8a1:	b8 01 00 00 00       	mov    $0x1,%eax
  40d8a6:	c9                   	leaveq 
  40d8a7:	c3                   	retq   

000000000040d8a8 <luaB_yield>:
  40d8a8:	55                   	push   %rbp
  40d8a9:	48 89 e5             	mov    %rsp,%rbp
  40d8ac:	48 83 ec 10          	sub    $0x10,%rsp
  40d8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d8b8:	48 89 c7             	mov    %rax,%rdi
  40d8bb:	e8 99 46 ff ff       	callq  401f59 <lua_gettop>
  40d8c0:	89 c6                	mov    %eax,%esi
  40d8c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d8c6:	b9 00 00 00 00       	mov    $0x0,%ecx
  40d8cb:	ba 00 00 00 00       	mov    $0x0,%edx
  40d8d0:	48 89 c7             	mov    %rax,%rdi
  40d8d3:	e8 b9 56 00 00       	callq  412f91 <lua_yieldk>
  40d8d8:	c9                   	leaveq 
  40d8d9:	c3                   	retq   

000000000040d8da <auxstatus>:
  40d8da:	55                   	push   %rbp
  40d8db:	48 89 e5             	mov    %rsp,%rbp
  40d8de:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  40d8e5:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  40d8ec:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  40d8f3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40d8fa:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
  40d901:	75 07                	jne    40d90a <auxstatus+0x30>
  40d903:	b8 00 00 00 00       	mov    $0x0,%eax
  40d908:	eb 6b                	jmp    40d975 <auxstatus+0x9b>
  40d90a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40d911:	48 89 c7             	mov    %rax,%rdi
  40d914:	e8 3b 70 ff ff       	callq  404954 <lua_status>
  40d919:	85 c0                	test   %eax,%eax
  40d91b:	74 0c                	je     40d929 <auxstatus+0x4f>
  40d91d:	83 f8 01             	cmp    $0x1,%eax
  40d920:	75 4e                	jne    40d970 <auxstatus+0x96>
  40d922:	b8 02 00 00 00       	mov    $0x2,%eax
  40d927:	eb 4c                	jmp    40d975 <auxstatus+0x9b>
  40d929:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  40d930:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40d937:	be 00 00 00 00       	mov    $0x0,%esi
  40d93c:	48 89 c7             	mov    %rax,%rdi
  40d93f:	e8 08 1a 00 00       	callq  40f34c <lua_getstack>
  40d944:	85 c0                	test   %eax,%eax
  40d946:	74 07                	je     40d94f <auxstatus+0x75>
  40d948:	b8 03 00 00 00       	mov    $0x3,%eax
  40d94d:	eb 26                	jmp    40d975 <auxstatus+0x9b>
  40d94f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40d956:	48 89 c7             	mov    %rax,%rdi
  40d959:	e8 fb 45 ff ff       	callq  401f59 <lua_gettop>
  40d95e:	85 c0                	test   %eax,%eax
  40d960:	75 07                	jne    40d969 <auxstatus+0x8f>
  40d962:	b8 01 00 00 00       	mov    $0x1,%eax
  40d967:	eb 0c                	jmp    40d975 <auxstatus+0x9b>
  40d969:	b8 02 00 00 00       	mov    $0x2,%eax
  40d96e:	eb 05                	jmp    40d975 <auxstatus+0x9b>
  40d970:	b8 01 00 00 00       	mov    $0x1,%eax
  40d975:	c9                   	leaveq 
  40d976:	c3                   	retq   

000000000040d977 <luaB_costatus>:
  40d977:	55                   	push   %rbp
  40d978:	48 89 e5             	mov    %rsp,%rbp
  40d97b:	48 83 ec 20          	sub    $0x20,%rsp
  40d97f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d987:	48 89 c7             	mov    %rax,%rdi
  40d98a:	e8 54 fb ff ff       	callq  40d4e3 <getco>
  40d98f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d993:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40d997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d99b:	48 89 d6             	mov    %rdx,%rsi
  40d99e:	48 89 c7             	mov    %rax,%rdi
  40d9a1:	e8 34 ff ff ff       	callq  40d8da <auxstatus>
  40d9a6:	48 98                	cltq   
  40d9a8:	48 8b 14 c5 20 dd 43 	mov    0x43dd20(,%rax,8),%rdx
  40d9af:	00 
  40d9b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d9b4:	48 89 d6             	mov    %rdx,%rsi
  40d9b7:	48 89 c7             	mov    %rax,%rdi
  40d9ba:	e8 4f 54 ff ff       	callq  402e0e <lua_pushstring>
  40d9bf:	b8 01 00 00 00       	mov    $0x1,%eax
  40d9c4:	c9                   	leaveq 
  40d9c5:	c3                   	retq   

000000000040d9c6 <luaB_yieldable>:
  40d9c6:	55                   	push   %rbp
  40d9c7:	48 89 e5             	mov    %rsp,%rbp
  40d9ca:	48 83 ec 20          	sub    $0x20,%rsp
  40d9ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d9d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d9d6:	be 01 00 00 00       	mov    $0x1,%esi
  40d9db:	48 89 c7             	mov    %rax,%rdi
  40d9de:	e8 90 49 ff ff       	callq  402373 <lua_type>
  40d9e3:	83 f8 ff             	cmp    $0xffffffff,%eax
  40d9e6:	74 0e                	je     40d9f6 <luaB_yieldable+0x30>
  40d9e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d9ec:	48 89 c7             	mov    %rax,%rdi
  40d9ef:	e8 ef fa ff ff       	callq  40d4e3 <getco>
  40d9f4:	eb 04                	jmp    40d9fa <luaB_yieldable+0x34>
  40d9f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d9fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40da02:	48 89 c7             	mov    %rax,%rdi
  40da05:	e8 67 55 00 00       	callq  412f71 <lua_isyieldable>
  40da0a:	89 c2                	mov    %eax,%edx
  40da0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40da10:	89 d6                	mov    %edx,%esi
  40da12:	48 89 c7             	mov    %rax,%rdi
  40da15:	e8 1e 57 ff ff       	callq  403138 <lua_pushboolean>
  40da1a:	b8 01 00 00 00       	mov    $0x1,%eax
  40da1f:	c9                   	leaveq 
  40da20:	c3                   	retq   

000000000040da21 <luaB_corunning>:
  40da21:	55                   	push   %rbp
  40da22:	48 89 e5             	mov    %rsp,%rbp
  40da25:	48 83 ec 20          	sub    $0x20,%rsp
  40da29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40da2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40da31:	48 89 c7             	mov    %rax,%rdi
  40da34:	e8 83 57 ff ff       	callq  4031bc <lua_pushthread>
  40da39:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40da3c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40da3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40da43:	89 d6                	mov    %edx,%esi
  40da45:	48 89 c7             	mov    %rax,%rdi
  40da48:	e8 eb 56 ff ff       	callq  403138 <lua_pushboolean>
  40da4d:	b8 02 00 00 00       	mov    $0x2,%eax
  40da52:	c9                   	leaveq 
  40da53:	c3                   	retq   

000000000040da54 <luaB_close>:
  40da54:	55                   	push   %rbp
  40da55:	48 89 e5             	mov    %rsp,%rbp
  40da58:	48 83 ec 20          	sub    $0x20,%rsp
  40da5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40da60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40da64:	48 89 c7             	mov    %rax,%rdi
  40da67:	e8 77 fa ff ff       	callq  40d4e3 <getco>
  40da6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40da70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40da74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40da78:	48 89 d6             	mov    %rdx,%rsi
  40da7b:	48 89 c7             	mov    %rax,%rdi
  40da7e:	e8 57 fe ff ff       	callq  40d8da <auxstatus>
  40da83:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40da86:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40da89:	83 e8 01             	sub    $0x1,%eax
  40da8c:	83 f8 01             	cmp    $0x1,%eax
  40da8f:	77 64                	ja     40daf5 <luaB_close+0xa1>
  40da91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40da95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40da99:	48 89 d6             	mov    %rdx,%rsi
  40da9c:	48 89 c7             	mov    %rax,%rdi
  40da9f:	e8 63 88 01 00       	callq  426307 <lua_closethread>
  40daa4:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40daa7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40daab:	75 18                	jne    40dac5 <luaB_close+0x71>
  40daad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dab1:	be 01 00 00 00       	mov    $0x1,%esi
  40dab6:	48 89 c7             	mov    %rax,%rdi
  40dab9:	e8 7a 56 ff ff       	callq  403138 <lua_pushboolean>
  40dabe:	b8 01 00 00 00       	mov    $0x1,%eax
  40dac3:	eb 53                	jmp    40db18 <luaB_close+0xc4>
  40dac5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dac9:	be 00 00 00 00       	mov    $0x0,%esi
  40dace:	48 89 c7             	mov    %rax,%rdi
  40dad1:	e8 62 56 ff ff       	callq  403138 <lua_pushboolean>
  40dad6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40dada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dade:	ba 01 00 00 00       	mov    $0x1,%edx
  40dae3:	48 89 ce             	mov    %rcx,%rsi
  40dae6:	48 89 c7             	mov    %rax,%rdi
  40dae9:	e8 2f 43 ff ff       	callq  401e1d <lua_xmove>
  40daee:	b8 02 00 00 00       	mov    $0x2,%eax
  40daf3:	eb 23                	jmp    40db18 <luaB_close+0xc4>
  40daf5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40daf8:	48 98                	cltq   
  40dafa:	48 8b 14 c5 20 dd 43 	mov    0x43dd20(,%rax,8),%rdx
  40db01:	00 
  40db02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40db06:	be 40 dd 43 00       	mov    $0x43dd40,%esi
  40db0b:	48 89 c7             	mov    %rax,%rdi
  40db0e:	b8 00 00 00 00       	mov    $0x0,%eax
  40db13:	e8 d8 86 ff ff       	callq  4061f0 <luaL_error>
  40db18:	c9                   	leaveq 
  40db19:	c3                   	retq   

000000000040db1a <luaopen_coroutine>:
  40db1a:	55                   	push   %rbp
  40db1b:	48 89 e5             	mov    %rsp,%rbp
  40db1e:	48 83 ec 10          	sub    $0x10,%rsp
  40db22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40db26:	f2 0f 10 05 02 03 03 	movsd  0x30302(%rip),%xmm0        # 43de30 <co_funcs+0x90>
  40db2d:	00 
  40db2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40db32:	be 88 00 00 00       	mov    $0x88,%esi
  40db37:	48 89 c7             	mov    %rax,%rdi
  40db3a:	e8 92 a6 ff ff       	callq  4081d1 <luaL_checkversion_>
  40db3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40db43:	ba 08 00 00 00       	mov    $0x8,%edx
  40db48:	be 00 00 00 00       	mov    $0x0,%esi
  40db4d:	48 89 c7             	mov    %rax,%rdi
  40db50:	e8 c3 5c ff ff       	callq  403818 <lua_createtable>
  40db55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40db59:	ba 00 00 00 00       	mov    $0x0,%edx
  40db5e:	be a0 dd 43 00       	mov    $0x43dda0,%esi
  40db63:	48 89 c7             	mov    %rax,%rdi
  40db66:	e8 bf 9f ff ff       	callq  407b2a <luaL_setfuncs>
  40db6b:	b8 01 00 00 00       	mov    $0x1,%eax
  40db70:	c9                   	leaveq 
  40db71:	c3                   	retq   

000000000040db72 <checkstack>:
  40db72:	55                   	push   %rbp
  40db73:	48 89 e5             	mov    %rsp,%rbp
  40db76:	48 83 ec 20          	sub    $0x20,%rsp
  40db7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40db7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40db82:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40db85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40db89:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  40db8d:	74 1c                	je     40dbab <checkstack+0x39>
  40db8f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40db92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40db96:	89 d6                	mov    %edx,%esi
  40db98:	48 89 c7             	mov    %rax,%rdi
  40db9b:	e8 cf 41 ff ff       	callq  401d6f <lua_checkstack>
  40dba0:	85 c0                	test   %eax,%eax
  40dba2:	75 07                	jne    40dbab <checkstack+0x39>
  40dba4:	b8 01 00 00 00       	mov    $0x1,%eax
  40dba9:	eb 05                	jmp    40dbb0 <checkstack+0x3e>
  40dbab:	b8 00 00 00 00       	mov    $0x0,%eax
  40dbb0:	85 c0                	test   %eax,%eax
  40dbb2:	0f 95 c0             	setne  %al
  40dbb5:	0f b6 c0             	movzbl %al,%eax
  40dbb8:	48 85 c0             	test   %rax,%rax
  40dbbb:	74 16                	je     40dbd3 <checkstack+0x61>
  40dbbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dbc1:	be 78 df 43 00       	mov    $0x43df78,%esi
  40dbc6:	48 89 c7             	mov    %rax,%rdi
  40dbc9:	b8 00 00 00 00       	mov    $0x0,%eax
  40dbce:	e8 1d 86 ff ff       	callq  4061f0 <luaL_error>
  40dbd3:	90                   	nop
  40dbd4:	c9                   	leaveq 
  40dbd5:	c3                   	retq   

000000000040dbd6 <db_getregistry>:
  40dbd6:	55                   	push   %rbp
  40dbd7:	48 89 e5             	mov    %rsp,%rbp
  40dbda:	48 83 ec 10          	sub    $0x10,%rsp
  40dbde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40dbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dbe6:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  40dbeb:	48 89 c7             	mov    %rax,%rdi
  40dbee:	e8 1c 47 ff ff       	callq  40230f <lua_pushvalue>
  40dbf3:	b8 01 00 00 00       	mov    $0x1,%eax
  40dbf8:	c9                   	leaveq 
  40dbf9:	c3                   	retq   

000000000040dbfa <db_getmetatable>:
  40dbfa:	55                   	push   %rbp
  40dbfb:	48 89 e5             	mov    %rsp,%rbp
  40dbfe:	48 83 ec 10          	sub    $0x10,%rsp
  40dc02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40dc06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dc0a:	be 01 00 00 00       	mov    $0x1,%esi
  40dc0f:	48 89 c7             	mov    %rax,%rdi
  40dc12:	e8 6e 8b ff ff       	callq  406785 <luaL_checkany>
  40dc17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dc1b:	be 01 00 00 00       	mov    $0x1,%esi
  40dc20:	48 89 c7             	mov    %rax,%rdi
  40dc23:	e8 8f 5c ff ff       	callq  4038b7 <lua_getmetatable>
  40dc28:	85 c0                	test   %eax,%eax
  40dc2a:	75 0c                	jne    40dc38 <db_getmetatable+0x3e>
  40dc2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dc30:	48 89 c7             	mov    %rax,%rdi
  40dc33:	e8 6d 50 ff ff       	callq  402ca5 <lua_pushnil>
  40dc38:	b8 01 00 00 00       	mov    $0x1,%eax
  40dc3d:	c9                   	leaveq 
  40dc3e:	c3                   	retq   

000000000040dc3f <db_setmetatable>:
  40dc3f:	55                   	push   %rbp
  40dc40:	48 89 e5             	mov    %rsp,%rbp
  40dc43:	48 83 ec 20          	sub    $0x20,%rsp
  40dc47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40dc4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dc4f:	be 02 00 00 00       	mov    $0x2,%esi
  40dc54:	48 89 c7             	mov    %rax,%rdi
  40dc57:	e8 17 47 ff ff       	callq  402373 <lua_type>
  40dc5c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40dc5f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40dc63:	74 06                	je     40dc6b <db_setmetatable+0x2c>
  40dc65:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
  40dc69:	75 07                	jne    40dc72 <db_setmetatable+0x33>
  40dc6b:	b8 01 00 00 00       	mov    $0x1,%eax
  40dc70:	eb 05                	jmp    40dc77 <db_setmetatable+0x38>
  40dc72:	b8 00 00 00 00       	mov    $0x0,%eax
  40dc77:	85 c0                	test   %eax,%eax
  40dc79:	0f 95 c0             	setne  %al
  40dc7c:	0f b6 c0             	movzbl %al,%eax
  40dc7f:	48 85 c0             	test   %rax,%rax
  40dc82:	75 18                	jne    40dc9c <db_setmetatable+0x5d>
  40dc84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dc88:	ba 87 df 43 00       	mov    $0x43df87,%edx
  40dc8d:	be 02 00 00 00       	mov    $0x2,%esi
  40dc92:	48 89 c7             	mov    %rax,%rdi
  40dc95:	e8 af 83 ff ff       	callq  406049 <luaL_typeerror>
  40dc9a:	85 c0                	test   %eax,%eax
  40dc9c:	90                   	nop
  40dc9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dca1:	be 02 00 00 00       	mov    $0x2,%esi
  40dca6:	48 89 c7             	mov    %rax,%rdi
  40dca9:	e8 d6 42 ff ff       	callq  401f84 <lua_settop>
  40dcae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dcb2:	be 01 00 00 00       	mov    $0x1,%esi
  40dcb7:	48 89 c7             	mov    %rax,%rdi
  40dcba:	e8 19 65 ff ff       	callq  4041d8 <lua_setmetatable>
  40dcbf:	b8 01 00 00 00       	mov    $0x1,%eax
  40dcc4:	c9                   	leaveq 
  40dcc5:	c3                   	retq   

000000000040dcc6 <db_getuservalue>:
  40dcc6:	55                   	push   %rbp
  40dcc7:	48 89 e5             	mov    %rsp,%rbp
  40dcca:	48 83 ec 20          	sub    $0x20,%rsp
  40dcce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40dcd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dcd6:	ba 01 00 00 00       	mov    $0x1,%edx
  40dcdb:	be 02 00 00 00       	mov    $0x2,%esi
  40dce0:	48 89 c7             	mov    %rax,%rdi
  40dce3:	e8 fe 8c ff ff       	callq  4069e6 <luaL_optinteger>
  40dce8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40dceb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dcef:	be 01 00 00 00       	mov    $0x1,%esi
  40dcf4:	48 89 c7             	mov    %rax,%rdi
  40dcf7:	e8 77 46 ff ff       	callq  402373 <lua_type>
  40dcfc:	83 f8 07             	cmp    $0x7,%eax
  40dcff:	74 0e                	je     40dd0f <db_getuservalue+0x49>
  40dd01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd05:	48 89 c7             	mov    %rax,%rdi
  40dd08:	e8 98 4f ff ff       	callq  402ca5 <lua_pushnil>
  40dd0d:	eb 31                	jmp    40dd40 <db_getuservalue+0x7a>
  40dd0f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40dd12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd16:	be 01 00 00 00       	mov    $0x1,%esi
  40dd1b:	48 89 c7             	mov    %rax,%rdi
  40dd1e:	e8 6f 5c ff ff       	callq  403992 <lua_getiuservalue>
  40dd23:	83 f8 ff             	cmp    $0xffffffff,%eax
  40dd26:	74 18                	je     40dd40 <db_getuservalue+0x7a>
  40dd28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd2c:	be 01 00 00 00       	mov    $0x1,%esi
  40dd31:	48 89 c7             	mov    %rax,%rdi
  40dd34:	e8 ff 53 ff ff       	callq  403138 <lua_pushboolean>
  40dd39:	b8 02 00 00 00       	mov    $0x2,%eax
  40dd3e:	eb 05                	jmp    40dd45 <db_getuservalue+0x7f>
  40dd40:	b8 01 00 00 00       	mov    $0x1,%eax
  40dd45:	c9                   	leaveq 
  40dd46:	c3                   	retq   

000000000040dd47 <db_setuservalue>:
  40dd47:	55                   	push   %rbp
  40dd48:	48 89 e5             	mov    %rsp,%rbp
  40dd4b:	48 83 ec 20          	sub    $0x20,%rsp
  40dd4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40dd53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd57:	ba 01 00 00 00       	mov    $0x1,%edx
  40dd5c:	be 03 00 00 00       	mov    $0x3,%esi
  40dd61:	48 89 c7             	mov    %rax,%rdi
  40dd64:	e8 7d 8c ff ff       	callq  4069e6 <luaL_optinteger>
  40dd69:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40dd6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd70:	ba 07 00 00 00       	mov    $0x7,%edx
  40dd75:	be 01 00 00 00       	mov    $0x1,%esi
  40dd7a:	48 89 c7             	mov    %rax,%rdi
  40dd7d:	e8 bb 89 ff ff       	callq  40673d <luaL_checktype>
  40dd82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd86:	be 02 00 00 00       	mov    $0x2,%esi
  40dd8b:	48 89 c7             	mov    %rax,%rdi
  40dd8e:	e8 f2 89 ff ff       	callq  406785 <luaL_checkany>
  40dd93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dd97:	be 02 00 00 00       	mov    $0x2,%esi
  40dd9c:	48 89 c7             	mov    %rax,%rdi
  40dd9f:	e8 e0 41 ff ff       	callq  401f84 <lua_settop>
  40dda4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40dda7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ddab:	be 01 00 00 00       	mov    $0x1,%esi
  40ddb0:	48 89 c7             	mov    %rax,%rdi
  40ddb3:	e8 d9 65 ff ff       	callq  404391 <lua_setiuservalue>
  40ddb8:	85 c0                	test   %eax,%eax
  40ddba:	75 0c                	jne    40ddc8 <db_setuservalue+0x81>
  40ddbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ddc0:	48 89 c7             	mov    %rax,%rdi
  40ddc3:	e8 dd 4e ff ff       	callq  402ca5 <lua_pushnil>
  40ddc8:	b8 01 00 00 00       	mov    $0x1,%eax
  40ddcd:	c9                   	leaveq 
  40ddce:	c3                   	retq   

000000000040ddcf <getthread>:
  40ddcf:	55                   	push   %rbp
  40ddd0:	48 89 e5             	mov    %rsp,%rbp
  40ddd3:	48 83 ec 10          	sub    $0x10,%rsp
  40ddd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40dddb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40dddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dde3:	be 01 00 00 00       	mov    $0x1,%esi
  40dde8:	48 89 c7             	mov    %rax,%rdi
  40ddeb:	e8 83 45 ff ff       	callq  402373 <lua_type>
  40ddf0:	83 f8 08             	cmp    $0x8,%eax
  40ddf3:	75 1d                	jne    40de12 <getthread+0x43>
  40ddf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ddf9:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40ddff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de03:	be 01 00 00 00       	mov    $0x1,%esi
  40de08:	48 89 c7             	mov    %rax,%rdi
  40de0b:	e8 d9 4d ff ff       	callq  402be9 <lua_tothread>
  40de10:	eb 0e                	jmp    40de20 <getthread+0x51>
  40de12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40de16:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40de1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de20:	c9                   	leaveq 
  40de21:	c3                   	retq   

000000000040de22 <settabss>:
  40de22:	55                   	push   %rbp
  40de23:	48 89 e5             	mov    %rsp,%rbp
  40de26:	48 83 ec 20          	sub    $0x20,%rsp
  40de2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40de2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40de32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40de36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40de3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de3e:	48 89 d6             	mov    %rdx,%rsi
  40de41:	48 89 c7             	mov    %rax,%rdi
  40de44:	e8 c5 4f ff ff       	callq  402e0e <lua_pushstring>
  40de49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40de4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de51:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40de56:	48 89 c7             	mov    %rax,%rdi
  40de59:	e8 74 5f ff ff       	callq  403dd2 <lua_setfield>
  40de5e:	90                   	nop
  40de5f:	c9                   	leaveq 
  40de60:	c3                   	retq   

000000000040de61 <settabsi>:
  40de61:	55                   	push   %rbp
  40de62:	48 89 e5             	mov    %rsp,%rbp
  40de65:	48 83 ec 20          	sub    $0x20,%rsp
  40de69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40de6d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40de71:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40de74:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40de77:	48 63 d0             	movslq %eax,%rdx
  40de7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de7e:	48 89 d6             	mov    %rdx,%rsi
  40de81:	48 89 c7             	mov    %rax,%rdi
  40de84:	e8 8c 4e ff ff       	callq  402d15 <lua_pushinteger>
  40de89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40de8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de91:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40de96:	48 89 c7             	mov    %rax,%rdi
  40de99:	e8 34 5f ff ff       	callq  403dd2 <lua_setfield>
  40de9e:	90                   	nop
  40de9f:	c9                   	leaveq 
  40dea0:	c3                   	retq   

000000000040dea1 <settabsb>:
  40dea1:	55                   	push   %rbp
  40dea2:	48 89 e5             	mov    %rsp,%rbp
  40dea5:	48 83 ec 20          	sub    $0x20,%rsp
  40dea9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40dead:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40deb1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40deb4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40deb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40debb:	89 d6                	mov    %edx,%esi
  40debd:	48 89 c7             	mov    %rax,%rdi
  40dec0:	e8 73 52 ff ff       	callq  403138 <lua_pushboolean>
  40dec5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40dec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40decd:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40ded2:	48 89 c7             	mov    %rax,%rdi
  40ded5:	e8 f8 5e ff ff       	callq  403dd2 <lua_setfield>
  40deda:	90                   	nop
  40dedb:	c9                   	leaveq 
  40dedc:	c3                   	retq   

000000000040dedd <treatstackoption>:
  40dedd:	55                   	push   %rbp
  40dede:	48 89 e5             	mov    %rsp,%rbp
  40dee1:	48 83 ec 20          	sub    $0x20,%rsp
  40dee5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40dee9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40deed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40def1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40def5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  40def9:	75 18                	jne    40df13 <treatstackoption+0x36>
  40defb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40deff:	ba 01 00 00 00       	mov    $0x1,%edx
  40df04:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40df09:	48 89 c7             	mov    %rax,%rdi
  40df0c:	e8 5d 42 ff ff       	callq  40216e <lua_rotate>
  40df11:	eb 18                	jmp    40df2b <treatstackoption+0x4e>
  40df13:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40df17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40df1b:	ba 01 00 00 00       	mov    $0x1,%edx
  40df20:	48 89 ce             	mov    %rcx,%rsi
  40df23:	48 89 c7             	mov    %rax,%rdi
  40df26:	e8 f2 3e ff ff       	callq  401e1d <lua_xmove>
  40df2b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40df2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40df33:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40df38:	48 89 c7             	mov    %rax,%rdi
  40df3b:	e8 92 5e ff ff       	callq  403dd2 <lua_setfield>
  40df40:	90                   	nop
  40df41:	c9                   	leaveq 
  40df42:	c3                   	retq   

000000000040df43 <db_getinfo>:
  40df43:	55                   	push   %rbp
  40df44:	48 89 e5             	mov    %rsp,%rbp
  40df47:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40df4e:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  40df55:	48 8d 95 5c ff ff ff 	lea    -0xa4(%rbp),%rdx
  40df5c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40df63:	48 89 d6             	mov    %rdx,%rsi
  40df66:	48 89 c7             	mov    %rax,%rdi
  40df69:	e8 61 fe ff ff       	callq  40ddcf <getthread>
  40df6e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40df72:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40df78:	8d 70 02             	lea    0x2(%rax),%esi
  40df7b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40df82:	b9 00 00 00 00       	mov    $0x0,%ecx
  40df87:	ba 94 df 43 00       	mov    $0x43df94,%edx
  40df8c:	48 89 c7             	mov    %rax,%rdi
  40df8f:	e8 90 88 ff ff       	callq  406824 <luaL_optlstring>
  40df94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40df98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40df9c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40dfa3:	ba 03 00 00 00       	mov    $0x3,%edx
  40dfa8:	48 89 ce             	mov    %rcx,%rsi
  40dfab:	48 89 c7             	mov    %rax,%rdi
  40dfae:	e8 bf fb ff ff       	callq  40db72 <checkstack>
  40dfb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40dfb7:	0f b6 00             	movzbl (%rax),%eax
  40dfba:	3c 3e                	cmp    $0x3e,%al
  40dfbc:	0f 95 c0             	setne  %al
  40dfbf:	0f b6 c0             	movzbl %al,%eax
  40dfc2:	48 85 c0             	test   %rax,%rax
  40dfc5:	75 21                	jne    40dfe8 <db_getinfo+0xa5>
  40dfc7:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40dfcd:	8d 48 02             	lea    0x2(%rax),%ecx
  40dfd0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40dfd7:	ba 9c df 43 00       	mov    $0x43df9c,%edx
  40dfdc:	89 ce                	mov    %ecx,%esi
  40dfde:	48 89 c7             	mov    %rax,%rdi
  40dfe1:	e8 0c 7f ff ff       	callq  405ef2 <luaL_argerror>
  40dfe6:	85 c0                	test   %eax,%eax
  40dfe8:	90                   	nop
  40dfe9:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40dfef:	8d 50 01             	lea    0x1(%rax),%edx
  40dff2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40dff9:	89 d6                	mov    %edx,%esi
  40dffb:	48 89 c7             	mov    %rax,%rdi
  40dffe:	e8 70 43 ff ff       	callq  402373 <lua_type>
  40e003:	83 f8 06             	cmp    $0x6,%eax
  40e006:	75 58                	jne    40e060 <db_getinfo+0x11d>
  40e008:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40e00c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e013:	be af df 43 00       	mov    $0x43dfaf,%esi
  40e018:	48 89 c7             	mov    %rax,%rdi
  40e01b:	b8 00 00 00 00       	mov    $0x0,%eax
  40e020:	e8 ed 4e ff ff       	callq  402f12 <lua_pushfstring>
  40e025:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40e029:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40e02f:	8d 50 01             	lea    0x1(%rax),%edx
  40e032:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e039:	89 d6                	mov    %edx,%esi
  40e03b:	48 89 c7             	mov    %rax,%rdi
  40e03e:	e8 cc 42 ff ff       	callq  40230f <lua_pushvalue>
  40e043:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40e047:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e04e:	ba 01 00 00 00       	mov    $0x1,%edx
  40e053:	48 89 ce             	mov    %rcx,%rsi
  40e056:	48 89 c7             	mov    %rax,%rdi
  40e059:	e8 bf 3d ff ff       	callq  401e1d <lua_xmove>
  40e05e:	eb 4e                	jmp    40e0ae <db_getinfo+0x16b>
  40e060:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40e066:	8d 50 01             	lea    0x1(%rax),%edx
  40e069:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e070:	89 d6                	mov    %edx,%esi
  40e072:	48 89 c7             	mov    %rax,%rdi
  40e075:	e8 1d 89 ff ff       	callq  406997 <luaL_checkinteger>
  40e07a:	89 c1                	mov    %eax,%ecx
  40e07c:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  40e083:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e087:	89 ce                	mov    %ecx,%esi
  40e089:	48 89 c7             	mov    %rax,%rdi
  40e08c:	e8 bb 12 00 00       	callq  40f34c <lua_getstack>
  40e091:	85 c0                	test   %eax,%eax
  40e093:	75 19                	jne    40e0ae <db_getinfo+0x16b>
  40e095:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e09c:	48 89 c7             	mov    %rax,%rdi
  40e09f:	e8 01 4c ff ff       	callq  402ca5 <lua_pushnil>
  40e0a4:	b8 01 00 00 00       	mov    $0x1,%eax
  40e0a9:	e9 d4 02 00 00       	jmpq   40e382 <db_getinfo+0x43f>
  40e0ae:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  40e0b5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40e0b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e0bd:	48 89 ce             	mov    %rcx,%rsi
  40e0c0:	48 89 c7             	mov    %rax,%rdi
  40e0c3:	e8 75 1b 00 00       	callq  40fc3d <lua_getinfo>
  40e0c8:	85 c0                	test   %eax,%eax
  40e0ca:	75 24                	jne    40e0f0 <db_getinfo+0x1ad>
  40e0cc:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40e0d2:	8d 48 02             	lea    0x2(%rax),%ecx
  40e0d5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e0dc:	ba b3 df 43 00       	mov    $0x43dfb3,%edx
  40e0e1:	89 ce                	mov    %ecx,%esi
  40e0e3:	48 89 c7             	mov    %rax,%rdi
  40e0e6:	e8 07 7e ff ff       	callq  405ef2 <luaL_argerror>
  40e0eb:	e9 92 02 00 00       	jmpq   40e382 <db_getinfo+0x43f>
  40e0f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e0f7:	ba 00 00 00 00       	mov    $0x0,%edx
  40e0fc:	be 00 00 00 00       	mov    $0x0,%esi
  40e101:	48 89 c7             	mov    %rax,%rdi
  40e104:	e8 0f 57 ff ff       	callq  403818 <lua_createtable>
  40e109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e10d:	be 53 00 00 00       	mov    $0x53,%esi
  40e112:	48 89 c7             	mov    %rax,%rdi
  40e115:	e8 26 36 ff ff       	callq  401740 <strchr@plt>
  40e11a:	48 85 c0             	test   %rax,%rax
  40e11d:	0f 84 9b 00 00 00    	je     40e1be <db_getinfo+0x27b>
  40e123:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40e127:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  40e12b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e132:	48 89 ce             	mov    %rcx,%rsi
  40e135:	48 89 c7             	mov    %rax,%rdi
  40e138:	e8 1a 4c ff ff       	callq  402d57 <lua_pushlstring>
  40e13d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e144:	ba c2 df 43 00       	mov    $0x43dfc2,%edx
  40e149:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40e14e:	48 89 c7             	mov    %rax,%rdi
  40e151:	e8 7c 5c ff ff       	callq  403dd2 <lua_setfield>
  40e156:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  40e15d:	48 8d 50 44          	lea    0x44(%rax),%rdx
  40e161:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e168:	be c9 df 43 00       	mov    $0x43dfc9,%esi
  40e16d:	48 89 c7             	mov    %rax,%rdi
  40e170:	e8 ad fc ff ff       	callq  40de22 <settabss>
  40e175:	8b 55 94             	mov    -0x6c(%rbp),%edx
  40e178:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e17f:	be d3 df 43 00       	mov    $0x43dfd3,%esi
  40e184:	48 89 c7             	mov    %rax,%rdi
  40e187:	e8 d5 fc ff ff       	callq  40de61 <settabsi>
  40e18c:	8b 55 98             	mov    -0x68(%rbp),%edx
  40e18f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e196:	be df df 43 00       	mov    $0x43dfdf,%esi
  40e19b:	48 89 c7             	mov    %rax,%rdi
  40e19e:	e8 be fc ff ff       	callq  40de61 <settabsi>
  40e1a3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  40e1aa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e1b1:	be ef df 43 00       	mov    $0x43dfef,%esi
  40e1b6:	48 89 c7             	mov    %rax,%rdi
  40e1b9:	e8 64 fc ff ff       	callq  40de22 <settabss>
  40e1be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e1c2:	be 6c 00 00 00       	mov    $0x6c,%esi
  40e1c7:	48 89 c7             	mov    %rax,%rdi
  40e1ca:	e8 71 35 ff ff       	callq  401740 <strchr@plt>
  40e1cf:	48 85 c0             	test   %rax,%rax
  40e1d2:	74 17                	je     40e1eb <db_getinfo+0x2a8>
  40e1d4:	8b 55 90             	mov    -0x70(%rbp),%edx
  40e1d7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e1de:	be f4 df 43 00       	mov    $0x43dff4,%esi
  40e1e3:	48 89 c7             	mov    %rax,%rdi
  40e1e6:	e8 76 fc ff ff       	callq  40de61 <settabsi>
  40e1eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e1ef:	be 75 00 00 00       	mov    $0x75,%esi
  40e1f4:	48 89 c7             	mov    %rax,%rdi
  40e1f7:	e8 44 35 ff ff       	callq  401740 <strchr@plt>
  40e1fc:	48 85 c0             	test   %rax,%rax
  40e1ff:	74 51                	je     40e252 <db_getinfo+0x30f>
  40e201:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
  40e205:	0f b6 d0             	movzbl %al,%edx
  40e208:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e20f:	be 00 e0 43 00       	mov    $0x43e000,%esi
  40e214:	48 89 c7             	mov    %rax,%rdi
  40e217:	e8 45 fc ff ff       	callq  40de61 <settabsi>
  40e21c:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
  40e220:	0f b6 d0             	movzbl %al,%edx
  40e223:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e22a:	be 05 e0 43 00       	mov    $0x43e005,%esi
  40e22f:	48 89 c7             	mov    %rax,%rdi
  40e232:	e8 2a fc ff ff       	callq  40de61 <settabsi>
  40e237:	0f b6 45 9e          	movzbl -0x62(%rbp),%eax
  40e23b:	0f be d0             	movsbl %al,%edx
  40e23e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e245:	be 0d e0 43 00       	mov    $0x43e00d,%esi
  40e24a:	48 89 c7             	mov    %rax,%rdi
  40e24d:	e8 4f fc ff ff       	callq  40dea1 <settabsb>
  40e252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e256:	be 6e 00 00 00       	mov    $0x6e,%esi
  40e25b:	48 89 c7             	mov    %rax,%rdi
  40e25e:	e8 dd 34 ff ff       	callq  401740 <strchr@plt>
  40e263:	48 85 c0             	test   %rax,%rax
  40e266:	74 36                	je     40e29e <db_getinfo+0x35b>
  40e268:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  40e26f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e276:	be 16 e0 43 00       	mov    $0x43e016,%esi
  40e27b:	48 89 c7             	mov    %rax,%rdi
  40e27e:	e8 9f fb ff ff       	callq  40de22 <settabss>
  40e283:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e28a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e291:	be 1b e0 43 00       	mov    $0x43e01b,%esi
  40e296:	48 89 c7             	mov    %rax,%rdi
  40e299:	e8 84 fb ff ff       	callq  40de22 <settabss>
  40e29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e2a2:	be 72 00 00 00       	mov    $0x72,%esi
  40e2a7:	48 89 c7             	mov    %rax,%rdi
  40e2aa:	e8 91 34 ff ff       	callq  401740 <strchr@plt>
  40e2af:	48 85 c0             	test   %rax,%rax
  40e2b2:	74 36                	je     40e2ea <db_getinfo+0x3a7>
  40e2b4:	0f b7 45 a0          	movzwl -0x60(%rbp),%eax
  40e2b8:	0f b7 d0             	movzwl %ax,%edx
  40e2bb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e2c2:	be 24 e0 43 00       	mov    $0x43e024,%esi
  40e2c7:	48 89 c7             	mov    %rax,%rdi
  40e2ca:	e8 92 fb ff ff       	callq  40de61 <settabsi>
  40e2cf:	0f b7 45 a2          	movzwl -0x5e(%rbp),%eax
  40e2d3:	0f b7 d0             	movzwl %ax,%edx
  40e2d6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e2dd:	be 2e e0 43 00       	mov    $0x43e02e,%esi
  40e2e2:	48 89 c7             	mov    %rax,%rdi
  40e2e5:	e8 77 fb ff ff       	callq  40de61 <settabsi>
  40e2ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e2ee:	be 74 00 00 00       	mov    $0x74,%esi
  40e2f3:	48 89 c7             	mov    %rax,%rdi
  40e2f6:	e8 45 34 ff ff       	callq  401740 <strchr@plt>
  40e2fb:	48 85 c0             	test   %rax,%rax
  40e2fe:	74 1b                	je     40e31b <db_getinfo+0x3d8>
  40e300:	0f b6 45 9f          	movzbl -0x61(%rbp),%eax
  40e304:	0f be d0             	movsbl %al,%edx
  40e307:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e30e:	be 38 e0 43 00       	mov    $0x43e038,%esi
  40e313:	48 89 c7             	mov    %rax,%rdi
  40e316:	e8 86 fb ff ff       	callq  40dea1 <settabsb>
  40e31b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e31f:	be 4c 00 00 00       	mov    $0x4c,%esi
  40e324:	48 89 c7             	mov    %rax,%rdi
  40e327:	e8 14 34 ff ff       	callq  401740 <strchr@plt>
  40e32c:	48 85 c0             	test   %rax,%rax
  40e32f:	74 1b                	je     40e34c <db_getinfo+0x409>
  40e331:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40e335:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e33c:	ba 43 e0 43 00       	mov    $0x43e043,%edx
  40e341:	48 89 ce             	mov    %rcx,%rsi
  40e344:	48 89 c7             	mov    %rax,%rdi
  40e347:	e8 91 fb ff ff       	callq  40dedd <treatstackoption>
  40e34c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e350:	be 66 00 00 00       	mov    $0x66,%esi
  40e355:	48 89 c7             	mov    %rax,%rdi
  40e358:	e8 e3 33 ff ff       	callq  401740 <strchr@plt>
  40e35d:	48 85 c0             	test   %rax,%rax
  40e360:	74 1b                	je     40e37d <db_getinfo+0x43a>
  40e362:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40e366:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e36d:	ba 4f e0 43 00       	mov    $0x43e04f,%edx
  40e372:	48 89 ce             	mov    %rcx,%rsi
  40e375:	48 89 c7             	mov    %rax,%rdi
  40e378:	e8 60 fb ff ff       	callq  40dedd <treatstackoption>
  40e37d:	b8 01 00 00 00       	mov    $0x1,%eax
  40e382:	c9                   	leaveq 
  40e383:	c3                   	retq   

000000000040e384 <db_getlocal>:
  40e384:	55                   	push   %rbp
  40e385:	48 89 e5             	mov    %rsp,%rbp
  40e388:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40e38f:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  40e396:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  40e39a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e3a1:	48 89 d6             	mov    %rdx,%rsi
  40e3a4:	48 89 c7             	mov    %rax,%rdi
  40e3a7:	e8 23 fa ff ff       	callq  40ddcf <getthread>
  40e3ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40e3b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e3b3:	8d 50 02             	lea    0x2(%rax),%edx
  40e3b6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e3bd:	89 d6                	mov    %edx,%esi
  40e3bf:	48 89 c7             	mov    %rax,%rdi
  40e3c2:	e8 d0 85 ff ff       	callq  406997 <luaL_checkinteger>
  40e3c7:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40e3ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e3cd:	8d 50 01             	lea    0x1(%rax),%edx
  40e3d0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e3d7:	89 d6                	mov    %edx,%esi
  40e3d9:	48 89 c7             	mov    %rax,%rdi
  40e3dc:	e8 92 3f ff ff       	callq  402373 <lua_type>
  40e3e1:	83 f8 06             	cmp    $0x6,%eax
  40e3e4:	75 4d                	jne    40e433 <db_getlocal+0xaf>
  40e3e6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e3e9:	8d 50 01             	lea    0x1(%rax),%edx
  40e3ec:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e3f3:	89 d6                	mov    %edx,%esi
  40e3f5:	48 89 c7             	mov    %rax,%rdi
  40e3f8:	e8 12 3f ff ff       	callq  40230f <lua_pushvalue>
  40e3fd:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40e400:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e407:	be 00 00 00 00       	mov    $0x0,%esi
  40e40c:	48 89 c7             	mov    %rax,%rdi
  40e40f:	e8 a2 11 00 00       	callq  40f5b6 <lua_getlocal>
  40e414:	48 89 c2             	mov    %rax,%rdx
  40e417:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e41e:	48 89 d6             	mov    %rdx,%rsi
  40e421:	48 89 c7             	mov    %rax,%rdi
  40e424:	e8 e5 49 ff ff       	callq  402e0e <lua_pushstring>
  40e429:	b8 01 00 00 00       	mov    $0x1,%eax
  40e42e:	e9 04 01 00 00       	jmpq   40e537 <db_getlocal+0x1b3>
  40e433:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e436:	8d 50 01             	lea    0x1(%rax),%edx
  40e439:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e440:	89 d6                	mov    %edx,%esi
  40e442:	48 89 c7             	mov    %rax,%rdi
  40e445:	e8 4d 85 ff ff       	callq  406997 <luaL_checkinteger>
  40e44a:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40e44d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40e454:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40e457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e45b:	89 ce                	mov    %ecx,%esi
  40e45d:	48 89 c7             	mov    %rax,%rdi
  40e460:	e8 e7 0e 00 00       	callq  40f34c <lua_getstack>
  40e465:	85 c0                	test   %eax,%eax
  40e467:	0f 94 c0             	sete   %al
  40e46a:	0f b6 c0             	movzbl %al,%eax
  40e46d:	48 85 c0             	test   %rax,%rax
  40e470:	74 21                	je     40e493 <db_getlocal+0x10f>
  40e472:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e475:	8d 48 01             	lea    0x1(%rax),%ecx
  40e478:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e47f:	ba 54 e0 43 00       	mov    $0x43e054,%edx
  40e484:	89 ce                	mov    %ecx,%esi
  40e486:	48 89 c7             	mov    %rax,%rdi
  40e489:	e8 64 7a ff ff       	callq  405ef2 <luaL_argerror>
  40e48e:	e9 a4 00 00 00       	jmpq   40e537 <db_getlocal+0x1b3>
  40e493:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40e497:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e49e:	ba 01 00 00 00       	mov    $0x1,%edx
  40e4a3:	48 89 ce             	mov    %rcx,%rsi
  40e4a6:	48 89 c7             	mov    %rax,%rdi
  40e4a9:	e8 c4 f6 ff ff       	callq  40db72 <checkstack>
  40e4ae:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40e4b1:	48 8d 8d 50 ff ff ff 	lea    -0xb0(%rbp),%rcx
  40e4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e4bc:	48 89 ce             	mov    %rcx,%rsi
  40e4bf:	48 89 c7             	mov    %rax,%rdi
  40e4c2:	e8 ef 10 00 00       	callq  40f5b6 <lua_getlocal>
  40e4c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40e4cb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40e4d0:	74 51                	je     40e523 <db_getlocal+0x19f>
  40e4d2:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  40e4d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e4dd:	ba 01 00 00 00       	mov    $0x1,%edx
  40e4e2:	48 89 ce             	mov    %rcx,%rsi
  40e4e5:	48 89 c7             	mov    %rax,%rdi
  40e4e8:	e8 30 39 ff ff       	callq  401e1d <lua_xmove>
  40e4ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40e4f1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e4f8:	48 89 d6             	mov    %rdx,%rsi
  40e4fb:	48 89 c7             	mov    %rax,%rdi
  40e4fe:	e8 0b 49 ff ff       	callq  402e0e <lua_pushstring>
  40e503:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e50a:	ba 01 00 00 00       	mov    $0x1,%edx
  40e50f:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40e514:	48 89 c7             	mov    %rax,%rdi
  40e517:	e8 52 3c ff ff       	callq  40216e <lua_rotate>
  40e51c:	b8 02 00 00 00       	mov    $0x2,%eax
  40e521:	eb 14                	jmp    40e537 <db_getlocal+0x1b3>
  40e523:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e52a:	48 89 c7             	mov    %rax,%rdi
  40e52d:	e8 73 47 ff ff       	callq  402ca5 <lua_pushnil>
  40e532:	b8 01 00 00 00       	mov    $0x1,%eax
  40e537:	c9                   	leaveq 
  40e538:	c3                   	retq   

000000000040e539 <db_setlocal>:
  40e539:	55                   	push   %rbp
  40e53a:	48 89 e5             	mov    %rsp,%rbp
  40e53d:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40e544:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  40e54b:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  40e54f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e556:	48 89 d6             	mov    %rdx,%rsi
  40e559:	48 89 c7             	mov    %rax,%rdi
  40e55c:	e8 6e f8 ff ff       	callq  40ddcf <getthread>
  40e561:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40e565:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e568:	8d 50 01             	lea    0x1(%rax),%edx
  40e56b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e572:	89 d6                	mov    %edx,%esi
  40e574:	48 89 c7             	mov    %rax,%rdi
  40e577:	e8 1b 84 ff ff       	callq  406997 <luaL_checkinteger>
  40e57c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40e57f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e582:	8d 50 02             	lea    0x2(%rax),%edx
  40e585:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e58c:	89 d6                	mov    %edx,%esi
  40e58e:	48 89 c7             	mov    %rax,%rdi
  40e591:	e8 01 84 ff ff       	callq  406997 <luaL_checkinteger>
  40e596:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40e599:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40e5a0:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40e5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e5a7:	89 ce                	mov    %ecx,%esi
  40e5a9:	48 89 c7             	mov    %rax,%rdi
  40e5ac:	e8 9b 0d 00 00       	callq  40f34c <lua_getstack>
  40e5b1:	85 c0                	test   %eax,%eax
  40e5b3:	0f 94 c0             	sete   %al
  40e5b6:	0f b6 c0             	movzbl %al,%eax
  40e5b9:	48 85 c0             	test   %rax,%rax
  40e5bc:	74 21                	je     40e5df <db_setlocal+0xa6>
  40e5be:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e5c1:	8d 48 01             	lea    0x1(%rax),%ecx
  40e5c4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e5cb:	ba 54 e0 43 00       	mov    $0x43e054,%edx
  40e5d0:	89 ce                	mov    %ecx,%esi
  40e5d2:	48 89 c7             	mov    %rax,%rdi
  40e5d5:	e8 18 79 ff ff       	callq  405ef2 <luaL_argerror>
  40e5da:	e9 b4 00 00 00       	jmpq   40e693 <db_setlocal+0x15a>
  40e5df:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e5e2:	8d 50 03             	lea    0x3(%rax),%edx
  40e5e5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e5ec:	89 d6                	mov    %edx,%esi
  40e5ee:	48 89 c7             	mov    %rax,%rdi
  40e5f1:	e8 8f 81 ff ff       	callq  406785 <luaL_checkany>
  40e5f6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e5f9:	8d 50 03             	lea    0x3(%rax),%edx
  40e5fc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e603:	89 d6                	mov    %edx,%esi
  40e605:	48 89 c7             	mov    %rax,%rdi
  40e608:	e8 77 39 ff ff       	callq  401f84 <lua_settop>
  40e60d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40e611:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e618:	ba 01 00 00 00       	mov    $0x1,%edx
  40e61d:	48 89 ce             	mov    %rcx,%rsi
  40e620:	48 89 c7             	mov    %rax,%rdi
  40e623:	e8 4a f5 ff ff       	callq  40db72 <checkstack>
  40e628:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40e62c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e633:	ba 01 00 00 00       	mov    $0x1,%edx
  40e638:	48 89 ce             	mov    %rcx,%rsi
  40e63b:	48 89 c7             	mov    %rax,%rdi
  40e63e:	e8 da 37 ff ff       	callq  401e1d <lua_xmove>
  40e643:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40e646:	48 8d 8d 50 ff ff ff 	lea    -0xb0(%rbp),%rcx
  40e64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e651:	48 89 ce             	mov    %rcx,%rsi
  40e654:	48 89 c7             	mov    %rax,%rdi
  40e657:	e8 3c 10 00 00       	callq  40f698 <lua_setlocal>
  40e65c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40e660:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40e665:	75 11                	jne    40e678 <db_setlocal+0x13f>
  40e667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e66b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40e670:	48 89 c7             	mov    %rax,%rdi
  40e673:	e8 0c 39 ff ff       	callq  401f84 <lua_settop>
  40e678:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40e67c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40e683:	48 89 d6             	mov    %rdx,%rsi
  40e686:	48 89 c7             	mov    %rax,%rdi
  40e689:	e8 80 47 ff ff       	callq  402e0e <lua_pushstring>
  40e68e:	b8 01 00 00 00       	mov    $0x1,%eax
  40e693:	c9                   	leaveq 
  40e694:	c3                   	retq   

000000000040e695 <auxupvalue>:
  40e695:	55                   	push   %rbp
  40e696:	48 89 e5             	mov    %rsp,%rbp
  40e699:	48 83 ec 20          	sub    $0x20,%rsp
  40e69d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40e6a1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40e6a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e6a8:	be 02 00 00 00       	mov    $0x2,%esi
  40e6ad:	48 89 c7             	mov    %rax,%rdi
  40e6b0:	e8 e2 82 ff ff       	callq  406997 <luaL_checkinteger>
  40e6b5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e6b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e6bc:	ba 06 00 00 00       	mov    $0x6,%edx
  40e6c1:	be 01 00 00 00       	mov    $0x1,%esi
  40e6c6:	48 89 c7             	mov    %rax,%rdi
  40e6c9:	e8 6f 80 ff ff       	callq  40673d <luaL_checktype>
  40e6ce:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40e6d2:	74 16                	je     40e6ea <auxupvalue+0x55>
  40e6d4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40e6d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e6db:	be 01 00 00 00       	mov    $0x1,%esi
  40e6e0:	48 89 c7             	mov    %rax,%rdi
  40e6e3:	e8 20 6e ff ff       	callq  405508 <lua_getupvalue>
  40e6e8:	eb 14                	jmp    40e6fe <auxupvalue+0x69>
  40e6ea:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40e6ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e6f1:	be 01 00 00 00       	mov    $0x1,%esi
  40e6f6:	48 89 c7             	mov    %rax,%rdi
  40e6f9:	e8 a1 6e ff ff       	callq  40559f <lua_setupvalue>
  40e6fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40e702:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40e707:	75 07                	jne    40e710 <auxupvalue+0x7b>
  40e709:	b8 00 00 00 00       	mov    $0x0,%eax
  40e70e:	eb 33                	jmp    40e743 <auxupvalue+0xae>
  40e710:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40e714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e718:	48 89 d6             	mov    %rdx,%rsi
  40e71b:	48 89 c7             	mov    %rax,%rdi
  40e71e:	e8 eb 46 ff ff       	callq  402e0e <lua_pushstring>
  40e723:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e726:	f7 d0                	not    %eax
  40e728:	89 c1                	mov    %eax,%ecx
  40e72a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e72e:	ba 01 00 00 00       	mov    $0x1,%edx
  40e733:	89 ce                	mov    %ecx,%esi
  40e735:	48 89 c7             	mov    %rax,%rdi
  40e738:	e8 31 3a ff ff       	callq  40216e <lua_rotate>
  40e73d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40e740:	83 c0 01             	add    $0x1,%eax
  40e743:	c9                   	leaveq 
  40e744:	c3                   	retq   

000000000040e745 <db_getupvalue>:
  40e745:	55                   	push   %rbp
  40e746:	48 89 e5             	mov    %rsp,%rbp
  40e749:	48 83 ec 10          	sub    $0x10,%rsp
  40e74d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e755:	be 01 00 00 00       	mov    $0x1,%esi
  40e75a:	48 89 c7             	mov    %rax,%rdi
  40e75d:	e8 33 ff ff ff       	callq  40e695 <auxupvalue>
  40e762:	c9                   	leaveq 
  40e763:	c3                   	retq   

000000000040e764 <db_setupvalue>:
  40e764:	55                   	push   %rbp
  40e765:	48 89 e5             	mov    %rsp,%rbp
  40e768:	48 83 ec 10          	sub    $0x10,%rsp
  40e76c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e774:	be 03 00 00 00       	mov    $0x3,%esi
  40e779:	48 89 c7             	mov    %rax,%rdi
  40e77c:	e8 04 80 ff ff       	callq  406785 <luaL_checkany>
  40e781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e785:	be 00 00 00 00       	mov    $0x0,%esi
  40e78a:	48 89 c7             	mov    %rax,%rdi
  40e78d:	e8 03 ff ff ff       	callq  40e695 <auxupvalue>
  40e792:	c9                   	leaveq 
  40e793:	c3                   	retq   

000000000040e794 <checkupval>:
  40e794:	55                   	push   %rbp
  40e795:	48 89 e5             	mov    %rsp,%rbp
  40e798:	48 83 ec 30          	sub    $0x30,%rsp
  40e79c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40e7a0:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40e7a3:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40e7a6:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40e7aa:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40e7ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e7b1:	89 d6                	mov    %edx,%esi
  40e7b3:	48 89 c7             	mov    %rax,%rdi
  40e7b6:	e8 dc 81 ff ff       	callq  406997 <luaL_checkinteger>
  40e7bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e7be:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40e7c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e7c5:	ba 06 00 00 00       	mov    $0x6,%edx
  40e7ca:	89 ce                	mov    %ecx,%esi
  40e7cc:	48 89 c7             	mov    %rax,%rdi
  40e7cf:	e8 69 7f ff ff       	callq  40673d <luaL_checktype>
  40e7d4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40e7d7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40e7da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e7de:	89 ce                	mov    %ecx,%esi
  40e7e0:	48 89 c7             	mov    %rax,%rdi
  40e7e3:	e8 3a 6f ff ff       	callq  405722 <lua_upvalueid>
  40e7e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40e7ec:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40e7f1:	74 32                	je     40e825 <checkupval+0x91>
  40e7f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40e7f8:	0f 95 c0             	setne  %al
  40e7fb:	0f b6 c0             	movzbl %al,%eax
  40e7fe:	48 85 c0             	test   %rax,%rax
  40e801:	75 18                	jne    40e81b <checkupval+0x87>
  40e803:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40e806:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e80a:	ba 67 e0 43 00       	mov    $0x43e067,%edx
  40e80f:	89 ce                	mov    %ecx,%esi
  40e811:	48 89 c7             	mov    %rax,%rdi
  40e814:	e8 d9 76 ff ff       	callq  405ef2 <luaL_argerror>
  40e819:	85 c0                	test   %eax,%eax
  40e81b:	90                   	nop
  40e81c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40e820:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40e823:	89 10                	mov    %edx,(%rax)
  40e825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e829:	c9                   	leaveq 
  40e82a:	c3                   	retq   

000000000040e82b <db_upvalueid>:
  40e82b:	55                   	push   %rbp
  40e82c:	48 89 e5             	mov    %rsp,%rbp
  40e82f:	48 83 ec 20          	sub    $0x20,%rsp
  40e833:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40e837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e83b:	b9 00 00 00 00       	mov    $0x0,%ecx
  40e840:	ba 02 00 00 00       	mov    $0x2,%edx
  40e845:	be 01 00 00 00       	mov    $0x1,%esi
  40e84a:	48 89 c7             	mov    %rax,%rdi
  40e84d:	e8 42 ff ff ff       	callq  40e794 <checkupval>
  40e852:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40e856:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40e85b:	74 15                	je     40e872 <db_upvalueid+0x47>
  40e85d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40e861:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e865:	48 89 d6             	mov    %rdx,%rsi
  40e868:	48 89 c7             	mov    %rax,%rdi
  40e86b:	e8 0a 49 ff ff       	callq  40317a <lua_pushlightuserdata>
  40e870:	eb 0c                	jmp    40e87e <db_upvalueid+0x53>
  40e872:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e876:	48 89 c7             	mov    %rax,%rdi
  40e879:	e8 27 44 ff ff       	callq  402ca5 <lua_pushnil>
  40e87e:	b8 01 00 00 00       	mov    $0x1,%eax
  40e883:	c9                   	leaveq 
  40e884:	c3                   	retq   

000000000040e885 <db_upvaluejoin>:
  40e885:	55                   	push   %rbp
  40e886:	48 89 e5             	mov    %rsp,%rbp
  40e889:	48 83 ec 20          	sub    $0x20,%rsp
  40e88d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40e891:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx
  40e895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e899:	48 89 d1             	mov    %rdx,%rcx
  40e89c:	ba 02 00 00 00       	mov    $0x2,%edx
  40e8a1:	be 01 00 00 00       	mov    $0x1,%esi
  40e8a6:	48 89 c7             	mov    %rax,%rdi
  40e8a9:	e8 e6 fe ff ff       	callq  40e794 <checkupval>
  40e8ae:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40e8b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e8b6:	48 89 d1             	mov    %rdx,%rcx
  40e8b9:	ba 04 00 00 00       	mov    $0x4,%edx
  40e8be:	be 03 00 00 00       	mov    $0x3,%esi
  40e8c3:	48 89 c7             	mov    %rax,%rdi
  40e8c6:	e8 c9 fe ff ff       	callq  40e794 <checkupval>
  40e8cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e8cf:	be 01 00 00 00       	mov    $0x1,%esi
  40e8d4:	48 89 c7             	mov    %rax,%rdi
  40e8d7:	e8 13 3b ff ff       	callq  4023ef <lua_iscfunction>
  40e8dc:	85 c0                	test   %eax,%eax
  40e8de:	0f 94 c0             	sete   %al
  40e8e1:	0f b6 c0             	movzbl %al,%eax
  40e8e4:	48 85 c0             	test   %rax,%rax
  40e8e7:	75 18                	jne    40e901 <db_upvaluejoin+0x7c>
  40e8e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e8ed:	ba 7d e0 43 00       	mov    $0x43e07d,%edx
  40e8f2:	be 01 00 00 00       	mov    $0x1,%esi
  40e8f7:	48 89 c7             	mov    %rax,%rdi
  40e8fa:	e8 f3 75 ff ff       	callq  405ef2 <luaL_argerror>
  40e8ff:	85 c0                	test   %eax,%eax
  40e901:	90                   	nop
  40e902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e906:	be 03 00 00 00       	mov    $0x3,%esi
  40e90b:	48 89 c7             	mov    %rax,%rdi
  40e90e:	e8 dc 3a ff ff       	callq  4023ef <lua_iscfunction>
  40e913:	85 c0                	test   %eax,%eax
  40e915:	0f 94 c0             	sete   %al
  40e918:	0f b6 c0             	movzbl %al,%eax
  40e91b:	48 85 c0             	test   %rax,%rax
  40e91e:	75 18                	jne    40e938 <db_upvaluejoin+0xb3>
  40e920:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e924:	ba 7d e0 43 00       	mov    $0x43e07d,%edx
  40e929:	be 03 00 00 00       	mov    $0x3,%esi
  40e92e:	48 89 c7             	mov    %rax,%rdi
  40e931:	e8 bc 75 ff ff       	callq  405ef2 <luaL_argerror>
  40e936:	85 c0                	test   %eax,%eax
  40e938:	90                   	nop
  40e939:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40e93c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40e93f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e943:	41 89 c8             	mov    %ecx,%r8d
  40e946:	b9 03 00 00 00       	mov    $0x3,%ecx
  40e94b:	be 01 00 00 00       	mov    $0x1,%esi
  40e950:	48 89 c7             	mov    %rax,%rdi
  40e953:	e8 75 6e ff ff       	callq  4057cd <lua_upvaluejoin>
  40e958:	b8 00 00 00 00       	mov    $0x0,%eax
  40e95d:	c9                   	leaveq 
  40e95e:	c3                   	retq   

000000000040e95f <hookf>:
  40e95f:	55                   	push   %rbp
  40e960:	48 89 e5             	mov    %rsp,%rbp
  40e963:	48 83 ec 10          	sub    $0x10,%rsp
  40e967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e96b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40e96f:	ba 60 df 43 00       	mov    $0x43df60,%edx
  40e974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e978:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  40e97d:	48 89 c7             	mov    %rax,%rdi
  40e980:	e8 30 4b ff ff       	callq  4034b5 <lua_getfield>
  40e985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e989:	48 89 c7             	mov    %rax,%rdi
  40e98c:	e8 2b 48 ff ff       	callq  4031bc <lua_pushthread>
  40e991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e995:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40e99a:	48 89 c7             	mov    %rax,%rdi
  40e99d:	e8 4e 4d ff ff       	callq  4036f0 <lua_rawget>
  40e9a2:	83 f8 06             	cmp    $0x6,%eax
  40e9a5:	75 72                	jne    40ea19 <hookf+0xba>
  40e9a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9ab:	8b 00                	mov    (%rax),%eax
  40e9ad:	48 98                	cltq   
  40e9af:	48 8b 14 c5 00 e3 43 	mov    0x43e300(,%rax,8),%rdx
  40e9b6:	00 
  40e9b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9bb:	48 89 d6             	mov    %rdx,%rsi
  40e9be:	48 89 c7             	mov    %rax,%rdi
  40e9c1:	e8 48 44 ff ff       	callq  402e0e <lua_pushstring>
  40e9c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9ca:	8b 40 30             	mov    0x30(%rax),%eax
  40e9cd:	85 c0                	test   %eax,%eax
  40e9cf:	78 1b                	js     40e9ec <hookf+0x8d>
  40e9d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9d5:	8b 40 30             	mov    0x30(%rax),%eax
  40e9d8:	48 63 d0             	movslq %eax,%rdx
  40e9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9df:	48 89 d6             	mov    %rdx,%rsi
  40e9e2:	48 89 c7             	mov    %rax,%rdi
  40e9e5:	e8 2b 43 ff ff       	callq  402d15 <lua_pushinteger>
  40e9ea:	eb 0c                	jmp    40e9f8 <hookf+0x99>
  40e9ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9f0:	48 89 c7             	mov    %rax,%rdi
  40e9f3:	e8 ad 42 ff ff       	callq  402ca5 <lua_pushnil>
  40e9f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9fc:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40ea02:	b9 00 00 00 00       	mov    $0x0,%ecx
  40ea07:	ba 00 00 00 00       	mov    $0x0,%edx
  40ea0c:	be 02 00 00 00       	mov    $0x2,%esi
  40ea11:	48 89 c7             	mov    %rax,%rdi
  40ea14:	e8 95 5a ff ff       	callq  4044ae <lua_callk>
  40ea19:	90                   	nop
  40ea1a:	c9                   	leaveq 
  40ea1b:	c3                   	retq   

000000000040ea1c <makemask>:
  40ea1c:	55                   	push   %rbp
  40ea1d:	48 89 e5             	mov    %rsp,%rbp
  40ea20:	48 83 ec 20          	sub    $0x20,%rsp
  40ea24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ea28:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40ea2b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40ea32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ea36:	be 63 00 00 00       	mov    $0x63,%esi
  40ea3b:	48 89 c7             	mov    %rax,%rdi
  40ea3e:	e8 fd 2c ff ff       	callq  401740 <strchr@plt>
  40ea43:	48 85 c0             	test   %rax,%rax
  40ea46:	74 04                	je     40ea4c <makemask+0x30>
  40ea48:	83 4d fc 01          	orl    $0x1,-0x4(%rbp)
  40ea4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ea50:	be 72 00 00 00       	mov    $0x72,%esi
  40ea55:	48 89 c7             	mov    %rax,%rdi
  40ea58:	e8 e3 2c ff ff       	callq  401740 <strchr@plt>
  40ea5d:	48 85 c0             	test   %rax,%rax
  40ea60:	74 04                	je     40ea66 <makemask+0x4a>
  40ea62:	83 4d fc 02          	orl    $0x2,-0x4(%rbp)
  40ea66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ea6a:	be 6c 00 00 00       	mov    $0x6c,%esi
  40ea6f:	48 89 c7             	mov    %rax,%rdi
  40ea72:	e8 c9 2c ff ff       	callq  401740 <strchr@plt>
  40ea77:	48 85 c0             	test   %rax,%rax
  40ea7a:	74 04                	je     40ea80 <makemask+0x64>
  40ea7c:	83 4d fc 04          	orl    $0x4,-0x4(%rbp)
  40ea80:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40ea84:	7e 04                	jle    40ea8a <makemask+0x6e>
  40ea86:	83 4d fc 08          	orl    $0x8,-0x4(%rbp)
  40ea8a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40ea8d:	c9                   	leaveq 
  40ea8e:	c3                   	retq   

000000000040ea8f <unmakemask>:
  40ea8f:	55                   	push   %rbp
  40ea90:	48 89 e5             	mov    %rsp,%rbp
  40ea93:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40ea96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40ea9a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40eaa1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40eaa4:	83 e0 01             	and    $0x1,%eax
  40eaa7:	85 c0                	test   %eax,%eax
  40eaa9:	74 16                	je     40eac1 <unmakemask+0x32>
  40eaab:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40eaae:	8d 50 01             	lea    0x1(%rax),%edx
  40eab1:	89 55 fc             	mov    %edx,-0x4(%rbp)
  40eab4:	48 63 d0             	movslq %eax,%rdx
  40eab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eabb:	48 01 d0             	add    %rdx,%rax
  40eabe:	c6 00 63             	movb   $0x63,(%rax)
  40eac1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40eac4:	83 e0 02             	and    $0x2,%eax
  40eac7:	85 c0                	test   %eax,%eax
  40eac9:	74 16                	je     40eae1 <unmakemask+0x52>
  40eacb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40eace:	8d 50 01             	lea    0x1(%rax),%edx
  40ead1:	89 55 fc             	mov    %edx,-0x4(%rbp)
  40ead4:	48 63 d0             	movslq %eax,%rdx
  40ead7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eadb:	48 01 d0             	add    %rdx,%rax
  40eade:	c6 00 72             	movb   $0x72,(%rax)
  40eae1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40eae4:	83 e0 04             	and    $0x4,%eax
  40eae7:	85 c0                	test   %eax,%eax
  40eae9:	74 16                	je     40eb01 <unmakemask+0x72>
  40eaeb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40eaee:	8d 50 01             	lea    0x1(%rax),%edx
  40eaf1:	89 55 fc             	mov    %edx,-0x4(%rbp)
  40eaf4:	48 63 d0             	movslq %eax,%rdx
  40eaf7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eafb:	48 01 d0             	add    %rdx,%rax
  40eafe:	c6 00 6c             	movb   $0x6c,(%rax)
  40eb01:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40eb04:	48 63 d0             	movslq %eax,%rdx
  40eb07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eb0b:	48 01 d0             	add    %rdx,%rax
  40eb0e:	c6 00 00             	movb   $0x0,(%rax)
  40eb11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eb15:	5d                   	pop    %rbp
  40eb16:	c3                   	retq   

000000000040eb17 <db_sethook>:
  40eb17:	55                   	push   %rbp
  40eb18:	48 89 e5             	mov    %rsp,%rbp
  40eb1b:	48 83 ec 40          	sub    $0x40,%rsp
  40eb1f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40eb23:	48 8d 55 dc          	lea    -0x24(%rbp),%rdx
  40eb27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eb2b:	48 89 d6             	mov    %rdx,%rsi
  40eb2e:	48 89 c7             	mov    %rax,%rdi
  40eb31:	e8 99 f2 ff ff       	callq  40ddcf <getthread>
  40eb36:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40eb3a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40eb3d:	8d 50 01             	lea    0x1(%rax),%edx
  40eb40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eb44:	89 d6                	mov    %edx,%esi
  40eb46:	48 89 c7             	mov    %rax,%rdi
  40eb49:	e8 25 38 ff ff       	callq  402373 <lua_type>
  40eb4e:	85 c0                	test   %eax,%eax
  40eb50:	7f 2c                	jg     40eb7e <db_sethook+0x67>
  40eb52:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40eb55:	8d 50 01             	lea    0x1(%rax),%edx
  40eb58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eb5c:	89 d6                	mov    %edx,%esi
  40eb5e:	48 89 c7             	mov    %rax,%rdi
  40eb61:	e8 1e 34 ff ff       	callq  401f84 <lua_settop>
  40eb66:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40eb6d:	00 
  40eb6e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40eb75:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40eb7c:	eb 6e                	jmp    40ebec <db_sethook+0xd5>
  40eb7e:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40eb81:	8d 48 02             	lea    0x2(%rax),%ecx
  40eb84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eb88:	ba 00 00 00 00       	mov    $0x0,%edx
  40eb8d:	89 ce                	mov    %ecx,%esi
  40eb8f:	48 89 c7             	mov    %rax,%rdi
  40eb92:	e8 35 7c ff ff       	callq  4067cc <luaL_checklstring>
  40eb97:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40eb9b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40eb9e:	8d 48 01             	lea    0x1(%rax),%ecx
  40eba1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eba5:	ba 06 00 00 00       	mov    $0x6,%edx
  40ebaa:	89 ce                	mov    %ecx,%esi
  40ebac:	48 89 c7             	mov    %rax,%rdi
  40ebaf:	e8 89 7b ff ff       	callq  40673d <luaL_checktype>
  40ebb4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40ebb7:	8d 48 03             	lea    0x3(%rax),%ecx
  40ebba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ebbe:	ba 00 00 00 00       	mov    $0x0,%edx
  40ebc3:	89 ce                	mov    %ecx,%esi
  40ebc5:	48 89 c7             	mov    %rax,%rdi
  40ebc8:	e8 19 7e ff ff       	callq  4069e6 <luaL_optinteger>
  40ebcd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40ebd0:	48 c7 45 f0 5f e9 40 	movq   $0x40e95f,-0x10(%rbp)
  40ebd7:	00 
  40ebd8:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40ebdb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ebdf:	89 d6                	mov    %edx,%esi
  40ebe1:	48 89 c7             	mov    %rax,%rdi
  40ebe4:	e8 33 fe ff ff       	callq  40ea1c <makemask>
  40ebe9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40ebec:	ba 60 df 43 00       	mov    $0x43df60,%edx
  40ebf1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ebf5:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  40ebfa:	48 89 c7             	mov    %rax,%rdi
  40ebfd:	e8 06 90 ff ff       	callq  407c08 <luaL_getsubtable>
  40ec02:	85 c0                	test   %eax,%eax
  40ec04:	75 49                	jne    40ec4f <db_sethook+0x138>
  40ec06:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec0a:	be 93 e0 43 00       	mov    $0x43e093,%esi
  40ec0f:	48 89 c7             	mov    %rax,%rdi
  40ec12:	e8 f7 41 ff ff       	callq  402e0e <lua_pushstring>
  40ec17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec1b:	ba 95 e0 43 00       	mov    $0x43e095,%edx
  40ec20:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40ec25:	48 89 c7             	mov    %rax,%rdi
  40ec28:	e8 a5 51 ff ff       	callq  403dd2 <lua_setfield>
  40ec2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec31:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40ec36:	48 89 c7             	mov    %rax,%rdi
  40ec39:	e8 d1 36 ff ff       	callq  40230f <lua_pushvalue>
  40ec3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec42:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40ec47:	48 89 c7             	mov    %rax,%rdi
  40ec4a:	e8 89 55 ff ff       	callq  4041d8 <lua_setmetatable>
  40ec4f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40ec53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec57:	ba 01 00 00 00       	mov    $0x1,%edx
  40ec5c:	48 89 ce             	mov    %rcx,%rsi
  40ec5f:	48 89 c7             	mov    %rax,%rdi
  40ec62:	e8 0b ef ff ff       	callq  40db72 <checkstack>
  40ec67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ec6b:	48 89 c7             	mov    %rax,%rdi
  40ec6e:	e8 49 45 ff ff       	callq  4031bc <lua_pushthread>
  40ec73:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40ec77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ec7b:	ba 01 00 00 00       	mov    $0x1,%edx
  40ec80:	48 89 ce             	mov    %rcx,%rsi
  40ec83:	48 89 c7             	mov    %rax,%rdi
  40ec86:	e8 92 31 ff ff       	callq  401e1d <lua_xmove>
  40ec8b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40ec8e:	8d 50 01             	lea    0x1(%rax),%edx
  40ec91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ec95:	89 d6                	mov    %edx,%esi
  40ec97:	48 89 c7             	mov    %rax,%rdi
  40ec9a:	e8 70 36 ff ff       	callq  40230f <lua_pushvalue>
  40ec9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eca3:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  40eca8:	48 89 c7             	mov    %rax,%rdi
  40ecab:	e8 ec 53 ff ff       	callq  40409c <lua_rawset>
  40ecb0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40ecb3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40ecb6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40ecba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ecbe:	48 89 c7             	mov    %rax,%rdi
  40ecc1:	e8 be 05 00 00       	callq  40f284 <lua_sethook>
  40ecc6:	b8 00 00 00 00       	mov    $0x0,%eax
  40eccb:	c9                   	leaveq 
  40eccc:	c3                   	retq   

000000000040eccd <db_gethook>:
  40eccd:	55                   	push   %rbp
  40ecce:	48 89 e5             	mov    %rsp,%rbp
  40ecd1:	48 83 ec 40          	sub    $0x40,%rsp
  40ecd5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40ecd9:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  40ecdd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ece1:	48 89 d6             	mov    %rdx,%rsi
  40ece4:	48 89 c7             	mov    %rax,%rdi
  40ece7:	e8 e3 f0 ff ff       	callq  40ddcf <getthread>
  40ecec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40ecf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ecf4:	48 89 c7             	mov    %rax,%rdi
  40ecf7:	e8 28 06 00 00       	callq  40f324 <lua_gethookmask>
  40ecfc:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ecff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ed03:	48 89 c7             	mov    %rax,%rdi
  40ed06:	e8 04 06 00 00       	callq  40f30f <lua_gethook>
  40ed0b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40ed0f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ed14:	75 16                	jne    40ed2c <db_gethook+0x5f>
  40ed16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ed1a:	48 89 c7             	mov    %rax,%rdi
  40ed1d:	e8 83 3f ff ff       	callq  402ca5 <lua_pushnil>
  40ed22:	b8 01 00 00 00       	mov    $0x1,%eax
  40ed27:	e9 f0 00 00 00       	jmpq   40ee1c <db_gethook+0x14f>
  40ed2c:	48 81 7d e8 5f e9 40 	cmpq   $0x40e95f,-0x18(%rbp)
  40ed33:	00 
  40ed34:	74 16                	je     40ed4c <db_gethook+0x7f>
  40ed36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ed3a:	be 9c e0 43 00       	mov    $0x43e09c,%esi
  40ed3f:	48 89 c7             	mov    %rax,%rdi
  40ed42:	e8 c7 40 ff ff       	callq  402e0e <lua_pushstring>
  40ed47:	e9 8a 00 00 00       	jmpq   40edd6 <db_gethook+0x109>
  40ed4c:	ba 60 df 43 00       	mov    $0x43df60,%edx
  40ed51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ed55:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  40ed5a:	48 89 c7             	mov    %rax,%rdi
  40ed5d:	e8 53 47 ff ff       	callq  4034b5 <lua_getfield>
  40ed62:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40ed66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ed6a:	ba 01 00 00 00       	mov    $0x1,%edx
  40ed6f:	48 89 ce             	mov    %rcx,%rsi
  40ed72:	48 89 c7             	mov    %rax,%rdi
  40ed75:	e8 f8 ed ff ff       	callq  40db72 <checkstack>
  40ed7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ed7e:	48 89 c7             	mov    %rax,%rdi
  40ed81:	e8 36 44 ff ff       	callq  4031bc <lua_pushthread>
  40ed86:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40ed8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ed8e:	ba 01 00 00 00       	mov    $0x1,%edx
  40ed93:	48 89 ce             	mov    %rcx,%rsi
  40ed96:	48 89 c7             	mov    %rax,%rdi
  40ed99:	e8 7f 30 ff ff       	callq  401e1d <lua_xmove>
  40ed9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40eda2:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40eda7:	48 89 c7             	mov    %rax,%rdi
  40edaa:	e8 41 49 ff ff       	callq  4036f0 <lua_rawget>
  40edaf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40edb3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40edb8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40edbd:	48 89 c7             	mov    %rax,%rdi
  40edc0:	e8 a9 33 ff ff       	callq  40216e <lua_rotate>
  40edc5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40edc9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  40edce:	48 89 c7             	mov    %rax,%rdi
  40edd1:	e8 ae 31 ff ff       	callq  401f84 <lua_settop>
  40edd6:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
  40edda:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40eddd:	48 89 d6             	mov    %rdx,%rsi
  40ede0:	89 c7                	mov    %eax,%edi
  40ede2:	e8 a8 fc ff ff       	callq  40ea8f <unmakemask>
  40ede7:	48 89 c2             	mov    %rax,%rdx
  40edea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40edee:	48 89 d6             	mov    %rdx,%rsi
  40edf1:	48 89 c7             	mov    %rax,%rdi
  40edf4:	e8 15 40 ff ff       	callq  402e0e <lua_pushstring>
  40edf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40edfd:	48 89 c7             	mov    %rax,%rdi
  40ee00:	e8 33 05 00 00       	callq  40f338 <lua_gethookcount>
  40ee05:	48 63 d0             	movslq %eax,%rdx
  40ee08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ee0c:	48 89 d6             	mov    %rdx,%rsi
  40ee0f:	48 89 c7             	mov    %rax,%rdi
  40ee12:	e8 fe 3e ff ff       	callq  402d15 <lua_pushinteger>
  40ee17:	b8 03 00 00 00       	mov    $0x3,%eax
  40ee1c:	c9                   	leaveq 
  40ee1d:	c3                   	retq   

000000000040ee1e <db_debug>:
  40ee1e:	55                   	push   %rbp
  40ee1f:	48 89 e5             	mov    %rsp,%rbp
  40ee22:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  40ee29:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  40ee30:	48 8b 05 89 04 24 00 	mov    0x240489(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  40ee37:	48 89 c1             	mov    %rax,%rcx
  40ee3a:	ba 0b 00 00 00       	mov    $0xb,%edx
  40ee3f:	be 01 00 00 00       	mov    $0x1,%esi
  40ee44:	bf aa e0 43 00       	mov    $0x43e0aa,%edi
  40ee49:	e8 d2 2c ff ff       	callq  401b20 <fwrite@plt>
  40ee4e:	48 8b 05 6b 04 24 00 	mov    0x24046b(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  40ee55:	48 89 c7             	mov    %rax,%rdi
  40ee58:	e8 f3 2a ff ff       	callq  401950 <fflush@plt>
  40ee5d:	48 8b 15 4c 04 24 00 	mov    0x24044c(%rip),%rdx        # 64f2b0 <stdin@@GLIBC_2.2.5>
  40ee64:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  40ee6b:	be fa 00 00 00       	mov    $0xfa,%esi
  40ee70:	48 89 c7             	mov    %rax,%rdi
  40ee73:	e8 c8 2b ff ff       	callq  401a40 <fgets@plt>
  40ee78:	48 85 c0             	test   %rax,%rax
  40ee7b:	74 18                	je     40ee95 <db_debug+0x77>
  40ee7d:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  40ee84:	be b6 e0 43 00       	mov    $0x43e0b6,%esi
  40ee89:	48 89 c7             	mov    %rax,%rdi
  40ee8c:	e8 2f 2b ff ff       	callq  4019c0 <strcmp@plt>
  40ee91:	85 c0                	test   %eax,%eax
  40ee93:	75 0a                	jne    40ee9f <db_debug+0x81>
  40ee95:	b8 00 00 00 00       	mov    $0x0,%eax
  40ee9a:	e9 c2 00 00 00       	jmpq   40ef61 <db_debug+0x143>
  40ee9f:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  40eea6:	48 89 c7             	mov    %rax,%rdi
  40eea9:	e8 c2 28 ff ff       	callq  401770 <strlen@plt>
  40eeae:	48 89 c2             	mov    %rax,%rdx
  40eeb1:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
  40eeb8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40eebf:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40eec5:	b9 bc e0 43 00       	mov    $0x43e0bc,%ecx
  40eeca:	48 89 c7             	mov    %rax,%rdi
  40eecd:	e8 de 87 ff ff       	callq  4076b0 <luaL_loadbufferx>
  40eed2:	85 c0                	test   %eax,%eax
  40eed4:	75 2e                	jne    40ef04 <db_debug+0xe6>
  40eed6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40eedd:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40eee3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40eee9:	b9 00 00 00 00       	mov    $0x0,%ecx
  40eeee:	ba 00 00 00 00       	mov    $0x0,%edx
  40eef3:	be 00 00 00 00       	mov    $0x0,%esi
  40eef8:	48 89 c7             	mov    %rax,%rdi
  40eefb:	e8 c3 56 ff ff       	callq  4045c3 <lua_pcallk>
  40ef00:	85 c0                	test   %eax,%eax
  40ef02:	74 44                	je     40ef48 <db_debug+0x12a>
  40ef04:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40ef0b:	ba 00 00 00 00       	mov    $0x0,%edx
  40ef10:	be ff ff ff ff       	mov    $0xffffffff,%esi
  40ef15:	48 89 c7             	mov    %rax,%rdi
  40ef18:	e8 b3 89 ff ff       	callq  4078d0 <luaL_tolstring>
  40ef1d:	48 89 c2             	mov    %rax,%rdx
  40ef20:	48 8b 05 99 03 24 00 	mov    0x240399(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  40ef27:	be cd e0 43 00       	mov    $0x43e0cd,%esi
  40ef2c:	48 89 c7             	mov    %rax,%rdi
  40ef2f:	b8 00 00 00 00       	mov    $0x0,%eax
  40ef34:	e8 97 2a ff ff       	callq  4019d0 <fprintf@plt>
  40ef39:	48 8b 05 80 03 24 00 	mov    0x240380(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  40ef40:	48 89 c7             	mov    %rax,%rdi
  40ef43:	e8 08 2a ff ff       	callq  401950 <fflush@plt>
  40ef48:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40ef4f:	be 00 00 00 00       	mov    $0x0,%esi
  40ef54:	48 89 c7             	mov    %rax,%rdi
  40ef57:	e8 28 30 ff ff       	callq  401f84 <lua_settop>
  40ef5c:	e9 cf fe ff ff       	jmpq   40ee30 <db_debug+0x12>
  40ef61:	c9                   	leaveq 
  40ef62:	c3                   	retq   

000000000040ef63 <db_traceback>:
  40ef63:	55                   	push   %rbp
  40ef64:	48 89 e5             	mov    %rsp,%rbp
  40ef67:	48 83 ec 30          	sub    $0x30,%rsp
  40ef6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40ef6f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  40ef73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ef77:	48 89 d6             	mov    %rdx,%rsi
  40ef7a:	48 89 c7             	mov    %rax,%rdi
  40ef7d:	e8 4d ee ff ff       	callq  40ddcf <getthread>
  40ef82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40ef86:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40ef89:	8d 48 01             	lea    0x1(%rax),%ecx
  40ef8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ef90:	ba 00 00 00 00       	mov    $0x0,%edx
  40ef95:	89 ce                	mov    %ecx,%esi
  40ef97:	48 89 c7             	mov    %rax,%rdi
  40ef9a:	e8 ce 39 ff ff       	callq  40296d <lua_tolstring>
  40ef9f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40efa3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40efa8:	75 2e                	jne    40efd8 <db_traceback+0x75>
  40efaa:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40efad:	8d 50 01             	lea    0x1(%rax),%edx
  40efb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40efb4:	89 d6                	mov    %edx,%esi
  40efb6:	48 89 c7             	mov    %rax,%rdi
  40efb9:	e8 b5 33 ff ff       	callq  402373 <lua_type>
  40efbe:	85 c0                	test   %eax,%eax
  40efc0:	7e 16                	jle    40efd8 <db_traceback+0x75>
  40efc2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40efc5:	8d 50 01             	lea    0x1(%rax),%edx
  40efc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40efcc:	89 d6                	mov    %edx,%esi
  40efce:	48 89 c7             	mov    %rax,%rdi
  40efd1:	e8 39 33 ff ff       	callq  40230f <lua_pushvalue>
  40efd6:	eb 3c                	jmp    40f014 <db_traceback+0xb1>
  40efd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40efdc:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  40efe0:	0f 94 c0             	sete   %al
  40efe3:	0f b6 d0             	movzbl %al,%edx
  40efe6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40efe9:	8d 48 02             	lea    0x2(%rax),%ecx
  40efec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40eff0:	89 ce                	mov    %ecx,%esi
  40eff2:	48 89 c7             	mov    %rax,%rdi
  40eff5:	e8 ec 79 ff ff       	callq  4069e6 <luaL_optinteger>
  40effa:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40effd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  40f000:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40f004:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40f008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f00c:	48 89 c7             	mov    %rax,%rdi
  40f00f:	e8 84 6c ff ff       	callq  405c98 <luaL_traceback>
  40f014:	b8 01 00 00 00       	mov    $0x1,%eax
  40f019:	c9                   	leaveq 
  40f01a:	c3                   	retq   

000000000040f01b <db_setcstacklimit>:
  40f01b:	55                   	push   %rbp
  40f01c:	48 89 e5             	mov    %rsp,%rbp
  40f01f:	48 83 ec 20          	sub    $0x20,%rsp
  40f023:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f02b:	be 01 00 00 00       	mov    $0x1,%esi
  40f030:	48 89 c7             	mov    %rax,%rdi
  40f033:	e8 5f 79 ff ff       	callq  406997 <luaL_checkinteger>
  40f038:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40f03b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f03e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f042:	89 d6                	mov    %edx,%esi
  40f044:	48 89 c7             	mov    %rax,%rdi
  40f047:	e8 5b 69 01 00       	callq  4259a7 <lua_setcstacklimit>
  40f04c:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40f04f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40f052:	48 63 d0             	movslq %eax,%rdx
  40f055:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f059:	48 89 d6             	mov    %rdx,%rsi
  40f05c:	48 89 c7             	mov    %rax,%rdi
  40f05f:	e8 b1 3c ff ff       	callq  402d15 <lua_pushinteger>
  40f064:	b8 01 00 00 00       	mov    $0x1,%eax
  40f069:	c9                   	leaveq 
  40f06a:	c3                   	retq   

000000000040f06b <luaopen_debug>:
  40f06b:	55                   	push   %rbp
  40f06c:	48 89 e5             	mov    %rsp,%rbp
  40f06f:	48 83 ec 10          	sub    $0x10,%rsp
  40f073:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f077:	f2 0f 10 05 a9 f2 02 	movsd  0x2f2a9(%rip),%xmm0        # 43e328 <hooknames.3439+0x28>
  40f07e:	00 
  40f07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f083:	be 88 00 00 00       	mov    $0x88,%esi
  40f088:	48 89 c7             	mov    %rax,%rdi
  40f08b:	e8 41 91 ff ff       	callq  4081d1 <luaL_checkversion_>
  40f090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f094:	ba 11 00 00 00       	mov    $0x11,%edx
  40f099:	be 00 00 00 00       	mov    $0x0,%esi
  40f09e:	48 89 c7             	mov    %rax,%rdi
  40f0a1:	e8 72 47 ff ff       	callq  403818 <lua_createtable>
  40f0a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0aa:	ba 00 00 00 00       	mov    $0x0,%edx
  40f0af:	be a0 e1 43 00       	mov    $0x43e1a0,%esi
  40f0b4:	48 89 c7             	mov    %rax,%rdi
  40f0b7:	e8 6e 8a ff ff       	callq  407b2a <luaL_setfuncs>
  40f0bc:	b8 01 00 00 00       	mov    $0x1,%eax
  40f0c1:	c9                   	leaveq 
  40f0c2:	c3                   	retq   

000000000040f0c3 <currentpc>:
  40f0c3:	55                   	push   %rbp
  40f0c4:	48 89 e5             	mov    %rsp,%rbp
  40f0c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f0cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0cf:	48 8b 50 20          	mov    0x20(%rax),%rdx
  40f0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0d7:	48 8b 00             	mov    (%rax),%rax
  40f0da:	48 8b 00             	mov    (%rax),%rax
  40f0dd:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f0e1:	48 8b 40 40          	mov    0x40(%rax),%rax
  40f0e5:	48 29 c2             	sub    %rax,%rdx
  40f0e8:	48 89 d0             	mov    %rdx,%rax
  40f0eb:	48 c1 f8 02          	sar    $0x2,%rax
  40f0ef:	83 e8 01             	sub    $0x1,%eax
  40f0f2:	5d                   	pop    %rbp
  40f0f3:	c3                   	retq   

000000000040f0f4 <getbaseline>:
  40f0f4:	55                   	push   %rbp
  40f0f5:	48 89 e5             	mov    %rsp,%rbp
  40f0f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f0fc:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40f0ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40f103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f107:	8b 40 28             	mov    0x28(%rax),%eax
  40f10a:	85 c0                	test   %eax,%eax
  40f10c:	74 0f                	je     40f11d <getbaseline+0x29>
  40f10e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f112:	48 8b 40 60          	mov    0x60(%rax),%rax
  40f116:	8b 00                	mov    (%rax),%eax
  40f118:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  40f11b:	7d 13                	jge    40f130 <getbaseline+0x3c>
  40f11d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f121:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  40f127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f12b:	8b 40 2c             	mov    0x2c(%rax),%eax
  40f12e:	eb 78                	jmp    40f1a8 <getbaseline+0xb4>
  40f130:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40f133:	c1 e8 07             	shr    $0x7,%eax
  40f136:	83 e8 01             	sub    $0x1,%eax
  40f139:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40f13c:	eb 04                	jmp    40f142 <getbaseline+0x4e>
  40f13e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40f142:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40f145:	8d 50 01             	lea    0x1(%rax),%edx
  40f148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f14c:	8b 40 28             	mov    0x28(%rax),%eax
  40f14f:	39 c2                	cmp    %eax,%edx
  40f151:	7d 20                	jge    40f173 <getbaseline+0x7f>
  40f153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f157:	48 8b 40 60          	mov    0x60(%rax),%rax
  40f15b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f15e:	48 63 d2             	movslq %edx,%rdx
  40f161:	48 83 c2 01          	add    $0x1,%rdx
  40f165:	48 c1 e2 03          	shl    $0x3,%rdx
  40f169:	48 01 d0             	add    %rdx,%rax
  40f16c:	8b 00                	mov    (%rax),%eax
  40f16e:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  40f171:	7d cb                	jge    40f13e <getbaseline+0x4a>
  40f173:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f177:	48 8b 40 60          	mov    0x60(%rax),%rax
  40f17b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f17e:	48 63 d2             	movslq %edx,%rdx
  40f181:	48 c1 e2 03          	shl    $0x3,%rdx
  40f185:	48 01 d0             	add    %rdx,%rax
  40f188:	8b 10                	mov    (%rax),%edx
  40f18a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f18e:	89 10                	mov    %edx,(%rax)
  40f190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f194:	48 8b 40 60          	mov    0x60(%rax),%rax
  40f198:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f19b:	48 63 d2             	movslq %edx,%rdx
  40f19e:	48 c1 e2 03          	shl    $0x3,%rdx
  40f1a2:	48 01 d0             	add    %rdx,%rax
  40f1a5:	8b 40 04             	mov    0x4(%rax),%eax
  40f1a8:	5d                   	pop    %rbp
  40f1a9:	c3                   	retq   

000000000040f1aa <luaG_getfuncline>:
  40f1aa:	55                   	push   %rbp
  40f1ab:	48 89 e5             	mov    %rsp,%rbp
  40f1ae:	48 83 ec 20          	sub    $0x20,%rsp
  40f1b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f1b6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40f1b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f1bd:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f1c1:	48 85 c0             	test   %rax,%rax
  40f1c4:	75 07                	jne    40f1cd <luaG_getfuncline+0x23>
  40f1c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40f1cb:	eb 44                	jmp    40f211 <luaG_getfuncline+0x67>
  40f1cd:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40f1d1:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40f1d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f1d8:	89 ce                	mov    %ecx,%esi
  40f1da:	48 89 c7             	mov    %rax,%rdi
  40f1dd:	e8 12 ff ff ff       	callq  40f0f4 <getbaseline>
  40f1e2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40f1e5:	eb 19                	jmp    40f200 <luaG_getfuncline+0x56>
  40f1e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f1eb:	48 8b 50 58          	mov    0x58(%rax),%rdx
  40f1ef:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40f1f2:	48 98                	cltq   
  40f1f4:	48 01 d0             	add    %rdx,%rax
  40f1f7:	0f b6 00             	movzbl (%rax),%eax
  40f1fa:	0f be c0             	movsbl %al,%eax
  40f1fd:	01 45 fc             	add    %eax,-0x4(%rbp)
  40f200:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40f203:	8d 50 01             	lea    0x1(%rax),%edx
  40f206:	89 55 f8             	mov    %edx,-0x8(%rbp)
  40f209:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  40f20c:	7f d9                	jg     40f1e7 <luaG_getfuncline+0x3d>
  40f20e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40f211:	c9                   	leaveq 
  40f212:	c3                   	retq   

000000000040f213 <getcurrentline>:
  40f213:	55                   	push   %rbp
  40f214:	48 89 e5             	mov    %rsp,%rbp
  40f217:	48 83 ec 08          	sub    $0x8,%rsp
  40f21b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f223:	48 89 c7             	mov    %rax,%rdi
  40f226:	e8 98 fe ff ff       	callq  40f0c3 <currentpc>
  40f22b:	89 c2                	mov    %eax,%edx
  40f22d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f231:	48 8b 00             	mov    (%rax),%rax
  40f234:	48 8b 00             	mov    (%rax),%rax
  40f237:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f23b:	89 d6                	mov    %edx,%esi
  40f23d:	48 89 c7             	mov    %rax,%rdi
  40f240:	e8 65 ff ff ff       	callq  40f1aa <luaG_getfuncline>
  40f245:	c9                   	leaveq 
  40f246:	c3                   	retq   

000000000040f247 <settraps>:
  40f247:	55                   	push   %rbp
  40f248:	48 89 e5             	mov    %rsp,%rbp
  40f24b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f24f:	eb 29                	jmp    40f27a <settraps+0x33>
  40f251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f255:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40f259:	0f b7 c0             	movzwl %ax,%eax
  40f25c:	83 e0 02             	and    $0x2,%eax
  40f25f:	85 c0                	test   %eax,%eax
  40f261:	75 0b                	jne    40f26e <settraps+0x27>
  40f263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f267:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
  40f26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f272:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f276:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f27a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f27f:	75 d0                	jne    40f251 <settraps+0xa>
  40f281:	90                   	nop
  40f282:	5d                   	pop    %rbp
  40f283:	c3                   	retq   

000000000040f284 <lua_sethook>:
  40f284:	55                   	push   %rbp
  40f285:	48 89 e5             	mov    %rsp,%rbp
  40f288:	48 83 ec 18          	sub    $0x18,%rsp
  40f28c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f290:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40f294:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40f297:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  40f29a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40f29f:	74 06                	je     40f2a7 <lua_sethook+0x23>
  40f2a1:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40f2a5:	75 0f                	jne    40f2b6 <lua_sethook+0x32>
  40f2a7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40f2ae:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40f2b5:	00 
  40f2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40f2be:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
  40f2c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2c9:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40f2cc:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)
  40f2d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2d6:	8b 90 b8 00 00 00    	mov    0xb8(%rax),%edx
  40f2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2e0:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
  40f2e6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40f2e9:	0f b6 d0             	movzbl %al,%edx
  40f2ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2f0:	89 90 c0 00 00 00    	mov    %edx,0xc0(%rax)
  40f2f6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40f2fa:	74 10                	je     40f30c <lua_sethook+0x88>
  40f2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f300:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f304:	48 89 c7             	mov    %rax,%rdi
  40f307:	e8 3b ff ff ff       	callq  40f247 <settraps>
  40f30c:	90                   	nop
  40f30d:	c9                   	leaveq 
  40f30e:	c3                   	retq   

000000000040f30f <lua_gethook>:
  40f30f:	55                   	push   %rbp
  40f310:	48 89 e5             	mov    %rsp,%rbp
  40f313:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f31b:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
  40f322:	5d                   	pop    %rbp
  40f323:	c3                   	retq   

000000000040f324 <lua_gethookmask>:
  40f324:	55                   	push   %rbp
  40f325:	48 89 e5             	mov    %rsp,%rbp
  40f328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f32c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f330:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  40f336:	5d                   	pop    %rbp
  40f337:	c3                   	retq   

000000000040f338 <lua_gethookcount>:
  40f338:	55                   	push   %rbp
  40f339:	48 89 e5             	mov    %rsp,%rbp
  40f33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f344:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
  40f34a:	5d                   	pop    %rbp
  40f34b:	c3                   	retq   

000000000040f34c <lua_getstack>:
  40f34c:	55                   	push   %rbp
  40f34d:	48 89 e5             	mov    %rsp,%rbp
  40f350:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f354:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40f357:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40f35b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40f35f:	79 07                	jns    40f368 <lua_getstack+0x1c>
  40f361:	b8 00 00 00 00       	mov    $0x0,%eax
  40f366:	eb 68                	jmp    40f3d0 <lua_getstack+0x84>
  40f368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f36c:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f370:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f374:	eb 10                	jmp    40f386 <lua_getstack+0x3a>
  40f376:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  40f37a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f37e:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f382:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f386:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40f38a:	7e 0e                	jle    40f39a <lua_getstack+0x4e>
  40f38c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f390:	48 83 c0 60          	add    $0x60,%rax
  40f394:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  40f398:	75 dc                	jne    40f376 <lua_getstack+0x2a>
  40f39a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40f39e:	75 26                	jne    40f3c6 <lua_getstack+0x7a>
  40f3a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f3a4:	48 83 c0 60          	add    $0x60,%rax
  40f3a8:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  40f3ac:	74 18                	je     40f3c6 <lua_getstack+0x7a>
  40f3ae:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40f3b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f3b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40f3bd:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
  40f3c4:	eb 07                	jmp    40f3cd <lua_getstack+0x81>
  40f3c6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40f3cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40f3d0:	5d                   	pop    %rbp
  40f3d1:	c3                   	retq   

000000000040f3d2 <upvalname>:
  40f3d2:	55                   	push   %rbp
  40f3d3:	48 89 e5             	mov    %rsp,%rbp
  40f3d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f3da:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40f3dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f3e1:	48 8b 40 50          	mov    0x50(%rax),%rax
  40f3e5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40f3e8:	48 63 d2             	movslq %edx,%rdx
  40f3eb:	48 c1 e2 04          	shl    $0x4,%rdx
  40f3ef:	48 01 d0             	add    %rdx,%rax
  40f3f2:	48 8b 00             	mov    (%rax),%rax
  40f3f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f3f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f3fe:	75 07                	jne    40f407 <upvalname+0x35>
  40f400:	b8 30 e3 43 00       	mov    $0x43e330,%eax
  40f405:	eb 08                	jmp    40f40f <upvalname+0x3d>
  40f407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f40b:	48 83 c0 18          	add    $0x18,%rax
  40f40f:	5d                   	pop    %rbp
  40f410:	c3                   	retq   

000000000040f411 <findvararg>:
  40f411:	55                   	push   %rbp
  40f412:	48 89 e5             	mov    %rsp,%rbp
  40f415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f419:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40f41c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40f420:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f424:	48 8b 00             	mov    (%rax),%rax
  40f427:	48 8b 00             	mov    (%rax),%rax
  40f42a:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f42e:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40f432:	84 c0                	test   %al,%al
  40f434:	74 4c                	je     40f482 <findvararg+0x71>
  40f436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f43a:	8b 40 2c             	mov    0x2c(%rax),%eax
  40f43d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40f440:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40f443:	f7 d8                	neg    %eax
  40f445:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  40f448:	7c 38                	jl     40f482 <findvararg+0x71>
  40f44a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f44e:	48 8b 00             	mov    (%rax),%rax
  40f451:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f454:	48 63 ca             	movslq %edx,%rcx
  40f457:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40f45a:	48 63 d2             	movslq %edx,%rdx
  40f45d:	48 01 ca             	add    %rcx,%rdx
  40f460:	48 c1 e2 04          	shl    $0x4,%rdx
  40f464:	48 c7 c1 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rcx
  40f46b:	48 29 d1             	sub    %rdx,%rcx
  40f46e:	48 89 ca             	mov    %rcx,%rdx
  40f471:	48 01 c2             	add    %rax,%rdx
  40f474:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f478:	48 89 10             	mov    %rdx,(%rax)
  40f47b:	b8 32 e3 43 00       	mov    $0x43e332,%eax
  40f480:	eb 05                	jmp    40f487 <findvararg+0x76>
  40f482:	b8 00 00 00 00       	mov    $0x0,%eax
  40f487:	5d                   	pop    %rbp
  40f488:	c3                   	retq   

000000000040f489 <luaG_findlocal>:
  40f489:	55                   	push   %rbp
  40f48a:	48 89 e5             	mov    %rsp,%rbp
  40f48d:	48 83 ec 40          	sub    $0x40,%rsp
  40f491:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40f495:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40f499:	89 55 cc             	mov    %edx,-0x34(%rbp)
  40f49c:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  40f4a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f4a4:	48 8b 00             	mov    (%rax),%rax
  40f4a7:	48 83 c0 10          	add    $0x10,%rax
  40f4ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f4af:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40f4b6:	00 
  40f4b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f4bb:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40f4bf:	0f b7 c0             	movzwl %ax,%eax
  40f4c2:	83 e0 02             	and    $0x2,%eax
  40f4c5:	85 c0                	test   %eax,%eax
  40f4c7:	75 4d                	jne    40f516 <luaG_findlocal+0x8d>
  40f4c9:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  40f4cd:	79 1a                	jns    40f4e9 <luaG_findlocal+0x60>
  40f4cf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40f4d3:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40f4d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f4da:	89 ce                	mov    %ecx,%esi
  40f4dc:	48 89 c7             	mov    %rax,%rdi
  40f4df:	e8 2d ff ff ff       	callq  40f411 <findvararg>
  40f4e4:	e9 cb 00 00 00       	jmpq   40f5b4 <luaG_findlocal+0x12b>
  40f4e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f4ed:	48 89 c7             	mov    %rax,%rdi
  40f4f0:	e8 ce fb ff ff       	callq  40f0c3 <currentpc>
  40f4f5:	89 c2                	mov    %eax,%edx
  40f4f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f4fb:	48 8b 00             	mov    (%rax),%rax
  40f4fe:	48 8b 00             	mov    (%rax),%rax
  40f501:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f505:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40f508:	89 ce                	mov    %ecx,%esi
  40f50a:	48 89 c7             	mov    %rax,%rdi
  40f50d:	e8 69 53 00 00       	callq  41487b <luaF_getlocalname>
  40f512:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f516:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f51b:	75 71                	jne    40f58e <luaG_findlocal+0x105>
  40f51d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f521:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f525:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  40f529:	75 0a                	jne    40f535 <luaG_findlocal+0xac>
  40f52b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f52f:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f533:	eb 0b                	jmp    40f540 <luaG_findlocal+0xb7>
  40f535:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f539:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f53d:	48 8b 00             	mov    (%rax),%rax
  40f540:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f548:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
  40f54c:	48 c1 f8 04          	sar    $0x4,%rax
  40f550:	48 89 c2             	mov    %rax,%rdx
  40f553:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40f556:	48 98                	cltq   
  40f558:	48 39 c2             	cmp    %rax,%rdx
  40f55b:	7c 2a                	jl     40f587 <luaG_findlocal+0xfe>
  40f55d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  40f561:	7e 24                	jle    40f587 <luaG_findlocal+0xfe>
  40f563:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f567:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40f56b:	0f b7 c0             	movzwl %ax,%eax
  40f56e:	83 e0 02             	and    $0x2,%eax
  40f571:	85 c0                	test   %eax,%eax
  40f573:	75 07                	jne    40f57c <luaG_findlocal+0xf3>
  40f575:	b8 3b e3 43 00       	mov    $0x43e33b,%eax
  40f57a:	eb 05                	jmp    40f581 <luaG_findlocal+0xf8>
  40f57c:	b8 47 e3 43 00       	mov    $0x43e347,%eax
  40f581:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f585:	eb 07                	jmp    40f58e <luaG_findlocal+0x105>
  40f587:	b8 00 00 00 00       	mov    $0x0,%eax
  40f58c:	eb 26                	jmp    40f5b4 <luaG_findlocal+0x12b>
  40f58e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40f593:	74 1b                	je     40f5b0 <luaG_findlocal+0x127>
  40f595:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40f598:	48 98                	cltq   
  40f59a:	48 c1 e0 04          	shl    $0x4,%rax
  40f59e:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  40f5a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f5a6:	48 01 c2             	add    %rax,%rdx
  40f5a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40f5ad:	48 89 10             	mov    %rdx,(%rax)
  40f5b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f5b4:	c9                   	leaveq 
  40f5b5:	c3                   	retq   

000000000040f5b6 <lua_getlocal>:
  40f5b6:	55                   	push   %rbp
  40f5b7:	48 89 e5             	mov    %rsp,%rbp
  40f5ba:	48 83 ec 40          	sub    $0x40,%rsp
  40f5be:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40f5c2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40f5c6:	89 55 cc             	mov    %edx,-0x34(%rbp)
  40f5c9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40f5ce:	75 4c                	jne    40f61c <lua_getlocal+0x66>
  40f5d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f5d4:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f5d8:	48 83 e8 10          	sub    $0x10,%rax
  40f5dc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40f5e0:	3c 46                	cmp    $0x46,%al
  40f5e2:	74 0d                	je     40f5f1 <lua_getlocal+0x3b>
  40f5e4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40f5eb:	00 
  40f5ec:	e9 a1 00 00 00       	jmpq   40f692 <lua_getlocal+0xdc>
  40f5f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f5f5:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f5f9:	48 83 e8 10          	sub    $0x10,%rax
  40f5fd:	48 8b 00             	mov    (%rax),%rax
  40f600:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f604:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40f607:	ba 00 00 00 00       	mov    $0x0,%edx
  40f60c:	89 ce                	mov    %ecx,%esi
  40f60e:	48 89 c7             	mov    %rax,%rdi
  40f611:	e8 65 52 00 00       	callq  41487b <luaF_getlocalname>
  40f616:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f61a:	eb 76                	jmp    40f692 <lua_getlocal+0xdc>
  40f61c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40f623:	00 
  40f624:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f628:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
  40f62f:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40f633:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40f636:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f63a:	48 89 c7             	mov    %rax,%rdi
  40f63d:	e8 47 fe ff ff       	callq  40f489 <luaG_findlocal>
  40f642:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f646:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f64b:	74 45                	je     40f692 <lua_getlocal+0xdc>
  40f64d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f651:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f655:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f659:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f65d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f661:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f665:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f669:	48 8b 12             	mov    (%rdx),%rdx
  40f66c:	48 89 10             	mov    %rdx,(%rax)
  40f66f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f673:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40f677:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f67b:	88 50 08             	mov    %dl,0x8(%rax)
  40f67e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f682:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f686:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40f68a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f68e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40f692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f696:	c9                   	leaveq 
  40f697:	c3                   	retq   

000000000040f698 <lua_setlocal>:
  40f698:	55                   	push   %rbp
  40f699:	48 89 e5             	mov    %rsp,%rbp
  40f69c:	48 83 ec 40          	sub    $0x40,%rsp
  40f6a0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40f6a4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40f6a8:	89 55 cc             	mov    %edx,-0x34(%rbp)
  40f6ab:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40f6b2:	00 
  40f6b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f6b7:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
  40f6be:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40f6c2:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40f6c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f6c9:	48 89 c7             	mov    %rax,%rdi
  40f6cc:	e8 b8 fd ff ff       	callq  40f489 <luaG_findlocal>
  40f6d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f6d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f6da:	74 49                	je     40f725 <lua_setlocal+0x8d>
  40f6dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f6e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f6e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f6e8:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f6ec:	48 83 e8 10          	sub    $0x10,%rax
  40f6f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f6f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f6f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f6fc:	48 8b 12             	mov    (%rdx),%rdx
  40f6ff:	48 89 10             	mov    %rdx,(%rax)
  40f702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f706:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40f70a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f70e:	88 50 08             	mov    %dl,0x8(%rax)
  40f711:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f715:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f719:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  40f71d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f721:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40f725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f729:	c9                   	leaveq 
  40f72a:	c3                   	retq   

000000000040f72b <funcinfo>:
  40f72b:	55                   	push   %rbp
  40f72c:	48 89 e5             	mov    %rsp,%rbp
  40f72f:	48 83 ec 20          	sub    $0x20,%rsp
  40f733:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f737:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40f73b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40f740:	74 0c                	je     40f74e <funcinfo+0x23>
  40f742:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f746:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40f74a:	3c 26                	cmp    $0x26,%al
  40f74c:	75 3f                	jne    40f78d <funcinfo+0x62>
  40f74e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f752:	48 c7 40 20 55 e3 43 	movq   $0x43e355,0x20(%rax)
  40f759:	00 
  40f75a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f75e:	48 c7 40 28 04 00 00 	movq   $0x4,0x28(%rax)
  40f765:	00 
  40f766:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f76a:	c7 40 34 ff ff ff ff 	movl   $0xffffffff,0x34(%rax)
  40f771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f775:	c7 40 38 ff ff ff ff 	movl   $0xffffffff,0x38(%rax)
  40f77c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f780:	48 c7 40 18 5a e3 43 	movq   $0x43e35a,0x18(%rax)
  40f787:	00 
  40f788:	e9 b7 00 00 00       	jmpq   40f844 <funcinfo+0x119>
  40f78d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f791:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f795:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f79d:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f7a1:	48 85 c0             	test   %rax,%rax
  40f7a4:	74 4b                	je     40f7f1 <funcinfo+0xc6>
  40f7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7aa:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f7ae:	48 8d 50 18          	lea    0x18(%rax),%rdx
  40f7b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f7b6:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40f7ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7be:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f7c2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40f7c6:	3c 04                	cmp    $0x4,%al
  40f7c8:	75 11                	jne    40f7db <funcinfo+0xb0>
  40f7ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7ce:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f7d2:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40f7d6:	0f b6 c0             	movzbl %al,%eax
  40f7d9:	eb 0c                	jmp    40f7e7 <funcinfo+0xbc>
  40f7db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7df:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f7e3:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f7e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f7eb:	48 89 42 28          	mov    %rax,0x28(%rdx)
  40f7ef:	eb 18                	jmp    40f809 <funcinfo+0xde>
  40f7f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f7f5:	48 c7 40 20 5c e3 43 	movq   $0x43e35c,0x20(%rax)
  40f7fc:	00 
  40f7fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f801:	48 c7 40 28 02 00 00 	movq   $0x2,0x28(%rax)
  40f808:	00 
  40f809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f80d:	8b 50 2c             	mov    0x2c(%rax),%edx
  40f810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f814:	89 50 34             	mov    %edx,0x34(%rax)
  40f817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f81b:	8b 50 30             	mov    0x30(%rax),%edx
  40f81e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f822:	89 50 38             	mov    %edx,0x38(%rax)
  40f825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f829:	8b 40 34             	mov    0x34(%rax),%eax
  40f82c:	85 c0                	test   %eax,%eax
  40f82e:	75 07                	jne    40f837 <funcinfo+0x10c>
  40f830:	ba 5f e3 43 00       	mov    $0x43e35f,%edx
  40f835:	eb 05                	jmp    40f83c <funcinfo+0x111>
  40f837:	ba 64 e3 43 00       	mov    $0x43e364,%edx
  40f83c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f840:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40f844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f848:	48 8b 50 28          	mov    0x28(%rax),%rdx
  40f84c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f850:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f854:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40f858:	48 83 c1 44          	add    $0x44,%rcx
  40f85c:	48 89 c6             	mov    %rax,%rsi
  40f85f:	48 89 cf             	mov    %rcx,%rdi
  40f862:	e8 ae 04 01 00       	callq  41fd15 <luaO_chunkid>
  40f867:	90                   	nop
  40f868:	c9                   	leaveq 
  40f869:	c3                   	retq   

000000000040f86a <nextline>:
  40f86a:	55                   	push   %rbp
  40f86b:	48 89 e5             	mov    %rsp,%rbp
  40f86e:	48 83 ec 10          	sub    $0x10,%rsp
  40f872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f876:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40f879:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40f87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f880:	48 8b 50 58          	mov    0x58(%rax),%rdx
  40f884:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40f887:	48 98                	cltq   
  40f889:	48 01 d0             	add    %rdx,%rax
  40f88c:	0f b6 00             	movzbl (%rax),%eax
  40f88f:	3c 80                	cmp    $0x80,%al
  40f891:	74 1d                	je     40f8b0 <nextline+0x46>
  40f893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f897:	48 8b 50 58          	mov    0x58(%rax),%rdx
  40f89b:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40f89e:	48 98                	cltq   
  40f8a0:	48 01 d0             	add    %rdx,%rax
  40f8a3:	0f b6 00             	movzbl (%rax),%eax
  40f8a6:	0f be d0             	movsbl %al,%edx
  40f8a9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40f8ac:	01 d0                	add    %edx,%eax
  40f8ae:	eb 11                	jmp    40f8c1 <nextline+0x57>
  40f8b0:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40f8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f8b7:	89 d6                	mov    %edx,%esi
  40f8b9:	48 89 c7             	mov    %rax,%rdi
  40f8bc:	e8 e9 f8 ff ff       	callq  40f1aa <luaG_getfuncline>
  40f8c1:	c9                   	leaveq 
  40f8c2:	c3                   	retq   

000000000040f8c3 <collectvalidlines>:
  40f8c3:	55                   	push   %rbp
  40f8c4:	48 89 e5             	mov    %rsp,%rbp
  40f8c7:	48 83 ec 50          	sub    $0x50,%rsp
  40f8cb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  40f8cf:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  40f8d3:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  40f8d8:	74 0c                	je     40f8e6 <collectvalidlines+0x23>
  40f8da:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40f8de:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40f8e2:	3c 26                	cmp    $0x26,%al
  40f8e4:	75 25                	jne    40f90b <collectvalidlines+0x48>
  40f8e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f8ea:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f8ee:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  40f8f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f8f6:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f8fa:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40f8fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f902:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40f906:	e9 dd 00 00 00       	jmpq   40f9e8 <collectvalidlines+0x125>
  40f90b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40f90f:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f913:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f917:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f91b:	8b 40 2c             	mov    0x2c(%rax),%eax
  40f91e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40f921:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f925:	48 89 c7             	mov    %rax,%rdi
  40f928:	e8 4c d7 01 00       	callq  42d079 <luaH_new>
  40f92d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f931:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f935:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f939:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40f93d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f941:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40f945:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40f949:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f94d:	48 89 10             	mov    %rdx,(%rax)
  40f950:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f954:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  40f958:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f95c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40f960:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40f964:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f968:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40f96c:	c6 45 c8 11          	movb   $0x11,-0x38(%rbp)
  40f970:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f974:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40f978:	84 c0                	test   %al,%al
  40f97a:	75 09                	jne    40f985 <collectvalidlines+0xc2>
  40f97c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40f983:	eb 57                	jmp    40f9dc <collectvalidlines+0x119>
  40f985:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40f988:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f98c:	ba 00 00 00 00       	mov    $0x0,%edx
  40f991:	89 ce                	mov    %ecx,%esi
  40f993:	48 89 c7             	mov    %rax,%rdi
  40f996:	e8 cf fe ff ff       	callq  40f86a <nextline>
  40f99b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40f99e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40f9a5:	eb 35                	jmp    40f9dc <collectvalidlines+0x119>
  40f9a7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40f9aa:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40f9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f9b1:	89 ce                	mov    %ecx,%esi
  40f9b3:	48 89 c7             	mov    %rax,%rdi
  40f9b6:	e8 af fe ff ff       	callq  40f86a <nextline>
  40f9bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40f9be:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40f9c1:	48 63 d0             	movslq %eax,%rdx
  40f9c4:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40f9c8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40f9cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40f9d0:	48 89 c7             	mov    %rax,%rdi
  40f9d3:	e8 7a df 01 00       	callq  42d952 <luaH_setint>
  40f9d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40f9dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f9e0:	8b 40 1c             	mov    0x1c(%rax),%eax
  40f9e3:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  40f9e6:	7c bf                	jl     40f9a7 <collectvalidlines+0xe4>
  40f9e8:	90                   	nop
  40f9e9:	c9                   	leaveq 
  40f9ea:	c3                   	retq   

000000000040f9eb <getfuncname>:
  40f9eb:	55                   	push   %rbp
  40f9ec:	48 89 e5             	mov    %rsp,%rbp
  40f9ef:	48 83 ec 20          	sub    $0x20,%rsp
  40f9f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f9f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40f9fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40f9ff:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40fa04:	74 2f                	je     40fa35 <getfuncname+0x4a>
  40fa06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fa0a:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40fa0e:	0f b7 c0             	movzwl %ax,%eax
  40fa11:	83 e0 20             	and    $0x20,%eax
  40fa14:	85 c0                	test   %eax,%eax
  40fa16:	75 1d                	jne    40fa35 <getfuncname+0x4a>
  40fa18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fa1c:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40fa20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40fa24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fa28:	48 89 ce             	mov    %rcx,%rsi
  40fa2b:	48 89 c7             	mov    %rax,%rdi
  40fa2e:	e8 2d 0a 00 00       	callq  410460 <funcnamefromcall>
  40fa33:	eb 05                	jmp    40fa3a <getfuncname+0x4f>
  40fa35:	b8 00 00 00 00       	mov    $0x0,%eax
  40fa3a:	c9                   	leaveq 
  40fa3b:	c3                   	retq   

000000000040fa3c <auxgetinfo>:
  40fa3c:	55                   	push   %rbp
  40fa3d:	48 89 e5             	mov    %rsp,%rbp
  40fa40:	48 83 ec 40          	sub    $0x40,%rsp
  40fa44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fa48:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40fa4c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40fa50:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40fa54:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  40fa58:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40fa5f:	e9 c5 01 00 00       	jmpq   40fc29 <auxgetinfo+0x1ed>
  40fa64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fa68:	0f b6 00             	movzbl (%rax),%eax
  40fa6b:	0f be c0             	movsbl %al,%eax
  40fa6e:	83 e8 4c             	sub    $0x4c,%eax
  40fa71:	83 f8 29             	cmp    $0x29,%eax
  40fa74:	0f 87 9d 01 00 00    	ja     40fc17 <auxgetinfo+0x1db>
  40fa7a:	89 c0                	mov    %eax,%eax
  40fa7c:	48 8b 04 c5 70 e3 43 	mov    0x43e370(,%rax,8),%rax
  40fa83:	00 
  40fa84:	ff e0                	jmpq   *%rax
  40fa86:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40fa8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fa8e:	48 89 d6             	mov    %rdx,%rsi
  40fa91:	48 89 c7             	mov    %rax,%rdi
  40fa94:	e8 92 fc ff ff       	callq  40f72b <funcinfo>
  40fa99:	e9 86 01 00 00       	jmpq   40fc24 <auxgetinfo+0x1e8>
  40fa9e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40faa3:	74 22                	je     40fac7 <auxgetinfo+0x8b>
  40faa5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40faa9:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40faad:	0f b7 c0             	movzwl %ax,%eax
  40fab0:	83 e0 02             	and    $0x2,%eax
  40fab3:	85 c0                	test   %eax,%eax
  40fab5:	75 10                	jne    40fac7 <auxgetinfo+0x8b>
  40fab7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fabb:	48 89 c7             	mov    %rax,%rdi
  40fabe:	e8 50 f7 ff ff       	callq  40f213 <getcurrentline>
  40fac3:	89 c2                	mov    %eax,%edx
  40fac5:	eb 05                	jmp    40facc <auxgetinfo+0x90>
  40fac7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40facc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fad0:	89 50 30             	mov    %edx,0x30(%rax)
  40fad3:	e9 4c 01 00 00       	jmpq   40fc24 <auxgetinfo+0x1e8>
  40fad8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40fadd:	74 0a                	je     40fae9 <auxgetinfo+0xad>
  40fadf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fae3:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  40fae7:	eb 05                	jmp    40faee <auxgetinfo+0xb2>
  40fae9:	b8 00 00 00 00       	mov    $0x0,%eax
  40faee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40faf2:	88 42 3c             	mov    %al,0x3c(%rdx)
  40faf5:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40fafa:	74 0c                	je     40fb08 <auxgetinfo+0xcc>
  40fafc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fb00:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40fb04:	3c 26                	cmp    $0x26,%al
  40fb06:	75 15                	jne    40fb1d <auxgetinfo+0xe1>
  40fb08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb0c:	c6 40 3e 01          	movb   $0x1,0x3e(%rax)
  40fb10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb14:	c6 40 3d 00          	movb   $0x0,0x3d(%rax)
  40fb18:	e9 07 01 00 00       	jmpq   40fc24 <auxgetinfo+0x1e8>
  40fb1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fb21:	48 8b 40 18          	mov    0x18(%rax),%rax
  40fb25:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  40fb29:	89 c2                	mov    %eax,%edx
  40fb2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb2f:	88 50 3e             	mov    %dl,0x3e(%rax)
  40fb32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fb36:	48 8b 40 18          	mov    0x18(%rax),%rax
  40fb3a:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
  40fb3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb42:	88 50 3d             	mov    %dl,0x3d(%rax)
  40fb45:	e9 da 00 00 00       	jmpq   40fc24 <auxgetinfo+0x1e8>
  40fb4a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40fb4f:	74 0f                	je     40fb60 <auxgetinfo+0x124>
  40fb51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fb55:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40fb59:	83 e0 20             	and    $0x20,%eax
  40fb5c:	89 c2                	mov    %eax,%edx
  40fb5e:	eb 05                	jmp    40fb65 <auxgetinfo+0x129>
  40fb60:	ba 00 00 00 00       	mov    $0x0,%edx
  40fb65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb69:	88 50 3f             	mov    %dl,0x3f(%rax)
  40fb6c:	e9 b3 00 00 00       	jmpq   40fc24 <auxgetinfo+0x1e8>
  40fb71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb75:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40fb79:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40fb7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fb81:	48 89 ce             	mov    %rcx,%rsi
  40fb84:	48 89 c7             	mov    %rax,%rdi
  40fb87:	e8 5f fe ff ff       	callq  40f9eb <getfuncname>
  40fb8c:	48 89 c2             	mov    %rax,%rdx
  40fb8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb93:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40fb97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fb9b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40fb9f:	48 85 c0             	test   %rax,%rax
  40fba2:	75 7f                	jne    40fc23 <auxgetinfo+0x1e7>
  40fba4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fba8:	48 c7 40 10 68 e3 43 	movq   $0x43e368,0x10(%rax)
  40fbaf:	00 
  40fbb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fbb4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40fbbb:	00 
  40fbbc:	eb 65                	jmp    40fc23 <auxgetinfo+0x1e7>
  40fbbe:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40fbc3:	74 14                	je     40fbd9 <auxgetinfo+0x19d>
  40fbc5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fbc9:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  40fbcd:	0f b7 c0             	movzwl %ax,%eax
  40fbd0:	25 00 01 00 00       	and    $0x100,%eax
  40fbd5:	85 c0                	test   %eax,%eax
  40fbd7:	75 1c                	jne    40fbf5 <auxgetinfo+0x1b9>
  40fbd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fbdd:	66 c7 40 42 00 00    	movw   $0x0,0x42(%rax)
  40fbe3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fbe7:	0f b7 50 42          	movzwl 0x42(%rax),%edx
  40fbeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fbef:	66 89 50 40          	mov    %dx,0x40(%rax)
  40fbf3:	eb 2f                	jmp    40fc24 <auxgetinfo+0x1e8>
  40fbf5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fbf9:	0f b7 50 38          	movzwl 0x38(%rax),%edx
  40fbfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fc01:	66 89 50 40          	mov    %dx,0x40(%rax)
  40fc05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fc09:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  40fc0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fc11:	66 89 50 42          	mov    %dx,0x42(%rax)
  40fc15:	eb 0d                	jmp    40fc24 <auxgetinfo+0x1e8>
  40fc17:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40fc1e:	eb 04                	jmp    40fc24 <auxgetinfo+0x1e8>
  40fc20:	90                   	nop
  40fc21:	eb 01                	jmp    40fc24 <auxgetinfo+0x1e8>
  40fc23:	90                   	nop
  40fc24:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  40fc29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fc2d:	0f b6 00             	movzbl (%rax),%eax
  40fc30:	84 c0                	test   %al,%al
  40fc32:	0f 85 2c fe ff ff    	jne    40fa64 <auxgetinfo+0x28>
  40fc38:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fc3b:	c9                   	leaveq 
  40fc3c:	c3                   	retq   

000000000040fc3d <lua_getinfo>:
  40fc3d:	55                   	push   %rbp
  40fc3e:	48 89 e5             	mov    %rsp,%rbp
  40fc41:	48 83 ec 50          	sub    $0x50,%rsp
  40fc45:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40fc49:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40fc4d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  40fc51:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40fc55:	0f b6 00             	movzbl (%rax),%eax
  40fc58:	3c 3e                	cmp    $0x3e,%al
  40fc5a:	75 33                	jne    40fc8f <lua_getinfo+0x52>
  40fc5c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40fc63:	00 
  40fc64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fc68:	48 8b 40 10          	mov    0x10(%rax),%rax
  40fc6c:	48 83 e8 10          	sub    $0x10,%rax
  40fc70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40fc74:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
  40fc79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fc7d:	48 8b 40 10          	mov    0x10(%rax),%rax
  40fc81:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  40fc85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fc89:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40fc8d:	eb 1a                	jmp    40fca9 <lua_getinfo+0x6c>
  40fc8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40fc93:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
  40fc9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40fc9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fca2:	48 8b 00             	mov    (%rax),%rax
  40fca5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40fca9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fcad:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40fcb1:	3c 46                	cmp    $0x46,%al
  40fcb3:	74 0c                	je     40fcc1 <lua_getinfo+0x84>
  40fcb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fcb9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40fcbd:	3c 66                	cmp    $0x66,%al
  40fcbf:	75 09                	jne    40fcca <lua_getinfo+0x8d>
  40fcc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fcc5:	48 8b 00             	mov    (%rax),%rax
  40fcc8:	eb 05                	jmp    40fccf <lua_getinfo+0x92>
  40fcca:	b8 00 00 00 00       	mov    $0x0,%eax
  40fccf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40fcd3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40fcd7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40fcdb:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40fcdf:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  40fce3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fce7:	49 89 f8             	mov    %rdi,%r8
  40fcea:	48 89 c7             	mov    %rax,%rdi
  40fced:	e8 4a fd ff ff       	callq  40fa3c <auxgetinfo>
  40fcf2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40fcf5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40fcf9:	be 66 00 00 00       	mov    $0x66,%esi
  40fcfe:	48 89 c7             	mov    %rax,%rdi
  40fd01:	e8 3a 1a ff ff       	callq  401740 <strchr@plt>
  40fd06:	48 85 c0             	test   %rax,%rax
  40fd09:	74 45                	je     40fd50 <lua_getinfo+0x113>
  40fd0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fd0f:	48 8b 40 10          	mov    0x10(%rax),%rax
  40fd13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40fd17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fd1b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40fd1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fd23:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40fd27:	48 8b 12             	mov    (%rdx),%rdx
  40fd2a:	48 89 10             	mov    %rdx,(%rax)
  40fd2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fd31:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  40fd35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fd39:	88 50 08             	mov    %dl,0x8(%rax)
  40fd3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fd40:	48 8b 40 10          	mov    0x10(%rax),%rax
  40fd44:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40fd48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fd4c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40fd50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40fd54:	be 4c 00 00 00       	mov    $0x4c,%esi
  40fd59:	48 89 c7             	mov    %rax,%rdi
  40fd5c:	e8 df 19 ff ff       	callq  401740 <strchr@plt>
  40fd61:	48 85 c0             	test   %rax,%rax
  40fd64:	74 13                	je     40fd79 <lua_getinfo+0x13c>
  40fd66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40fd6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fd6e:	48 89 d6             	mov    %rdx,%rsi
  40fd71:	48 89 c7             	mov    %rax,%rdi
  40fd74:	e8 4a fb ff ff       	callq  40f8c3 <collectvalidlines>
  40fd79:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40fd7c:	c9                   	leaveq 
  40fd7d:	c3                   	retq   

000000000040fd7e <kname>:
  40fd7e:	55                   	push   %rbp
  40fd7f:	48 89 e5             	mov    %rsp,%rbp
  40fd82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fd86:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40fd89:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40fd8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fd91:	48 8b 40 38          	mov    0x38(%rax),%rax
  40fd95:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40fd98:	48 63 d2             	movslq %edx,%rdx
  40fd9b:	48 c1 e2 04          	shl    $0x4,%rdx
  40fd9f:	48 01 d0             	add    %rdx,%rax
  40fda2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40fda6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fdaa:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  40fdae:	0f b6 c0             	movzbl %al,%eax
  40fdb1:	83 e0 0f             	and    $0xf,%eax
  40fdb4:	83 f8 04             	cmp    $0x4,%eax
  40fdb7:	75 0d                	jne    40fdc6 <kname+0x48>
  40fdb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fdbd:	48 8b 00             	mov    (%rax),%rax
  40fdc0:	48 8d 50 18          	lea    0x18(%rax),%rdx
  40fdc4:	eb 05                	jmp    40fdcb <kname+0x4d>
  40fdc6:	ba 30 e3 43 00       	mov    $0x43e330,%edx
  40fdcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fdcf:	48 89 10             	mov    %rdx,(%rax)
  40fdd2:	90                   	nop
  40fdd3:	5d                   	pop    %rbp
  40fdd4:	c3                   	retq   

000000000040fdd5 <rname>:
  40fdd5:	55                   	push   %rbp
  40fdd6:	48 89 e5             	mov    %rsp,%rbp
  40fdd9:	48 83 ec 30          	sub    $0x30,%rsp
  40fddd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fde1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40fde4:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40fde7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40fdeb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40fdef:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40fdf2:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40fdf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fdf9:	48 89 c7             	mov    %rax,%rdi
  40fdfc:	e8 c0 02 00 00       	callq  4100c1 <getobjname>
  40fe01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40fe05:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40fe0a:	74 0b                	je     40fe17 <rname+0x42>
  40fe0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fe10:	0f b6 00             	movzbl (%rax),%eax
  40fe13:	3c 63                	cmp    $0x63,%al
  40fe15:	74 0b                	je     40fe22 <rname+0x4d>
  40fe17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fe1b:	48 c7 00 30 e3 43 00 	movq   $0x43e330,(%rax)
  40fe22:	90                   	nop
  40fe23:	c9                   	leaveq 
  40fe24:	c3                   	retq   

000000000040fe25 <rkname>:
  40fe25:	55                   	push   %rbp
  40fe26:	48 89 e5             	mov    %rsp,%rbp
  40fe29:	48 83 ec 30          	sub    $0x30,%rsp
  40fe2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fe31:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40fe34:	89 55 e0             	mov    %edx,-0x20(%rbp)
  40fe37:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40fe3b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40fe3e:	c1 e8 18             	shr    $0x18,%eax
  40fe41:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40fe44:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40fe47:	c1 e8 0f             	shr    $0xf,%eax
  40fe4a:	83 e0 01             	and    $0x1,%eax
  40fe4d:	85 c0                	test   %eax,%eax
  40fe4f:	74 17                	je     40fe68 <rkname+0x43>
  40fe51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40fe55:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40fe58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fe5c:	89 ce                	mov    %ecx,%esi
  40fe5e:	48 89 c7             	mov    %rax,%rdi
  40fe61:	e8 18 ff ff ff       	callq  40fd7e <kname>
  40fe66:	eb 16                	jmp    40fe7e <rkname+0x59>
  40fe68:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40fe6c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40fe6f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  40fe72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fe76:	48 89 c7             	mov    %rax,%rdi
  40fe79:	e8 57 ff ff ff       	callq  40fdd5 <rname>
  40fe7e:	90                   	nop
  40fe7f:	c9                   	leaveq 
  40fe80:	c3                   	retq   

000000000040fe81 <filterpc>:
  40fe81:	55                   	push   %rbp
  40fe82:	48 89 e5             	mov    %rsp,%rbp
  40fe85:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40fe88:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40fe8b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fe8e:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  40fe91:	7d 07                	jge    40fe9a <filterpc+0x19>
  40fe93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40fe98:	eb 03                	jmp    40fe9d <filterpc+0x1c>
  40fe9a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fe9d:	5d                   	pop    %rbp
  40fe9e:	c3                   	retq   

000000000040fe9f <findsetreg>:
  40fe9f:	55                   	push   %rbp
  40fea0:	48 89 e5             	mov    %rsp,%rbp
  40fea3:	48 83 ec 40          	sub    $0x40,%rsp
  40fea7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40feab:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  40feae:	89 55 c0             	mov    %edx,-0x40(%rbp)
  40feb1:	c7 45 f8 ff ff ff ff 	movl   $0xffffffff,-0x8(%rbp)
  40feb8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40febf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fec3:	48 8b 40 40          	mov    0x40(%rax),%rax
  40fec7:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  40feca:	48 63 d2             	movslq %edx,%rdx
  40fecd:	48 c1 e2 02          	shl    $0x2,%rdx
  40fed1:	48 01 d0             	add    %rdx,%rax
  40fed4:	8b 00                	mov    (%rax),%eax
  40fed6:	83 e0 7f             	and    $0x7f,%eax
  40fed9:	89 c0                	mov    %eax,%eax
  40fedb:	0f b6 80 00 0c 44 00 	movzbl 0x440c00(%rax),%eax
  40fee2:	84 c0                	test   %al,%al
  40fee4:	79 04                	jns    40feea <findsetreg+0x4b>
  40fee6:	83 6d c4 01          	subl   $0x1,-0x3c(%rbp)
  40feea:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40fef1:	e9 38 01 00 00       	jmpq   41002e <findsetreg+0x18f>
  40fef6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40fefa:	48 8b 40 40          	mov    0x40(%rax),%rax
  40fefe:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40ff01:	48 63 d2             	movslq %edx,%rdx
  40ff04:	48 c1 e2 02          	shl    $0x2,%rdx
  40ff08:	48 01 d0             	add    %rdx,%rax
  40ff0b:	8b 00                	mov    (%rax),%eax
  40ff0d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40ff10:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40ff13:	83 e0 7f             	and    $0x7f,%eax
  40ff16:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40ff19:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40ff1c:	c1 e8 07             	shr    $0x7,%eax
  40ff1f:	25 ff 00 00 00       	and    $0xff,%eax
  40ff24:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40ff27:	83 7d e8 45          	cmpl   $0x45,-0x18(%rbp)
  40ff2b:	77 17                	ja     40ff44 <findsetreg+0xa5>
  40ff2d:	83 7d e8 44          	cmpl   $0x44,-0x18(%rbp)
  40ff31:	73 67                	jae    40ff9a <findsetreg+0xfb>
  40ff33:	83 7d e8 08          	cmpl   $0x8,-0x18(%rbp)
  40ff37:	74 16                	je     40ff4f <findsetreg+0xb0>
  40ff39:	83 7d e8 38          	cmpl   $0x38,-0x18(%rbp)
  40ff3d:	74 6c                	je     40ffab <findsetreg+0x10c>
  40ff3f:	e9 a2 00 00 00       	jmpq   40ffe6 <findsetreg+0x147>
  40ff44:	83 7d e8 4c          	cmpl   $0x4c,-0x18(%rbp)
  40ff48:	74 3c                	je     40ff86 <findsetreg+0xe7>
  40ff4a:	e9 97 00 00 00       	jmpq   40ffe6 <findsetreg+0x147>
  40ff4f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40ff52:	c1 e8 10             	shr    $0x10,%eax
  40ff55:	25 ff 00 00 00       	and    $0xff,%eax
  40ff5a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40ff5d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40ff60:	3b 45 c0             	cmp    -0x40(%rbp),%eax
  40ff63:	7f 14                	jg     40ff79 <findsetreg+0xda>
  40ff65:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40ff68:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40ff6b:	01 d0                	add    %edx,%eax
  40ff6d:	39 45 c0             	cmp    %eax,-0x40(%rbp)
  40ff70:	7f 07                	jg     40ff79 <findsetreg+0xda>
  40ff72:	b8 01 00 00 00       	mov    $0x1,%eax
  40ff77:	eb 05                	jmp    40ff7e <findsetreg+0xdf>
  40ff79:	b8 00 00 00 00       	mov    $0x0,%eax
  40ff7e:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40ff81:	e9 8c 00 00 00       	jmpq   410012 <findsetreg+0x173>
  40ff86:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40ff89:	83 c0 01             	add    $0x1,%eax
  40ff8c:	39 45 c0             	cmp    %eax,-0x40(%rbp)
  40ff8f:	0f 9f c0             	setg   %al
  40ff92:	0f b6 c0             	movzbl %al,%eax
  40ff95:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40ff98:	eb 78                	jmp    410012 <findsetreg+0x173>
  40ff9a:	8b 45 c0             	mov    -0x40(%rbp),%eax
  40ff9d:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  40ffa0:	0f 9d c0             	setge  %al
  40ffa3:	0f b6 c0             	movzbl %al,%eax
  40ffa6:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40ffa9:	eb 67                	jmp    410012 <findsetreg+0x173>
  40ffab:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40ffae:	c1 e8 07             	shr    $0x7,%eax
  40ffb1:	2d ff ff ff 00       	sub    $0xffffff,%eax
  40ffb6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40ffb9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40ffbc:	8d 50 01             	lea    0x1(%rax),%edx
  40ffbf:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40ffc2:	01 d0                	add    %edx,%eax
  40ffc4:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40ffc7:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40ffca:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  40ffcd:	7f 0e                	jg     40ffdd <findsetreg+0x13e>
  40ffcf:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40ffd2:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  40ffd5:	7e 06                	jle    40ffdd <findsetreg+0x13e>
  40ffd7:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40ffda:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ffdd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  40ffe4:	eb 2c                	jmp    410012 <findsetreg+0x173>
  40ffe6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40ffe9:	0f b6 80 00 0c 44 00 	movzbl 0x440c00(%rax),%eax
  40fff0:	0f b6 c0             	movzbl %al,%eax
  40fff3:	83 e0 08             	and    $0x8,%eax
  40fff6:	85 c0                	test   %eax,%eax
  40fff8:	74 0f                	je     410009 <findsetreg+0x16a>
  40fffa:	8b 45 c0             	mov    -0x40(%rbp),%eax
  40fffd:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  410000:	75 07                	jne    410009 <findsetreg+0x16a>
  410002:	b8 01 00 00 00       	mov    $0x1,%eax
  410007:	eb 05                	jmp    41000e <findsetreg+0x16f>
  410009:	b8 00 00 00 00       	mov    $0x0,%eax
  41000e:	89 45 f0             	mov    %eax,-0x10(%rbp)
  410011:	90                   	nop
  410012:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  410016:	74 12                	je     41002a <findsetreg+0x18b>
  410018:	8b 55 f4             	mov    -0xc(%rbp),%edx
  41001b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41001e:	89 d6                	mov    %edx,%esi
  410020:	89 c7                	mov    %eax,%edi
  410022:	e8 5a fe ff ff       	callq  40fe81 <filterpc>
  410027:	89 45 f8             	mov    %eax,-0x8(%rbp)
  41002a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41002e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410031:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  410034:	0f 8c bc fe ff ff    	jl     40fef6 <findsetreg+0x57>
  41003a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41003d:	c9                   	leaveq 
  41003e:	c3                   	retq   

000000000041003f <gxf>:
  41003f:	55                   	push   %rbp
  410040:	48 89 e5             	mov    %rsp,%rbp
  410043:	48 83 ec 30          	sub    $0x30,%rsp
  410047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41004b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41004e:	89 55 e0             	mov    %edx,-0x20(%rbp)
  410051:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  410054:	8b 45 e0             	mov    -0x20(%rbp),%eax
  410057:	c1 e8 10             	shr    $0x10,%eax
  41005a:	25 ff 00 00 00       	and    $0xff,%eax
  41005f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  410062:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  410066:	74 17                	je     41007f <gxf+0x40>
  410068:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41006b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41006f:	89 d6                	mov    %edx,%esi
  410071:	48 89 c7             	mov    %rax,%rdi
  410074:	e8 59 f3 ff ff       	callq  40f3d2 <upvalname>
  410079:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41007d:	eb 16                	jmp    410095 <gxf+0x56>
  41007f:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  410083:	8b 55 fc             	mov    -0x4(%rbp),%edx
  410086:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  410089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41008d:	48 89 c7             	mov    %rax,%rdi
  410090:	e8 2c 00 00 00       	callq  4100c1 <getobjname>
  410095:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410099:	48 85 c0             	test   %rax,%rax
  41009c:	74 1c                	je     4100ba <gxf+0x7b>
  41009e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4100a2:	be c0 e4 43 00       	mov    $0x43e4c0,%esi
  4100a7:	48 89 c7             	mov    %rax,%rdi
  4100aa:	e8 11 19 ff ff       	callq  4019c0 <strcmp@plt>
  4100af:	85 c0                	test   %eax,%eax
  4100b1:	75 07                	jne    4100ba <gxf+0x7b>
  4100b3:	b8 c5 e4 43 00       	mov    $0x43e4c5,%eax
  4100b8:	eb 05                	jmp    4100bf <gxf+0x80>
  4100ba:	b8 cc e4 43 00       	mov    $0x43e4cc,%eax
  4100bf:	c9                   	leaveq 
  4100c0:	c3                   	retq   

00000000004100c1 <getobjname>:
  4100c1:	55                   	push   %rbp
  4100c2:	48 89 e5             	mov    %rsp,%rbp
  4100c5:	48 83 ec 40          	sub    $0x40,%rsp
  4100c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4100cd:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4100d0:	89 55 d0             	mov    %edx,-0x30(%rbp)
  4100d3:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  4100d7:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4100da:	8d 48 01             	lea    0x1(%rax),%ecx
  4100dd:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4100e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4100e4:	89 ce                	mov    %ecx,%esi
  4100e6:	48 89 c7             	mov    %rax,%rdi
  4100e9:	e8 8d 47 00 00       	callq  41487b <luaF_getlocalname>
  4100ee:	48 89 c2             	mov    %rax,%rdx
  4100f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4100f5:	48 89 10             	mov    %rdx,(%rax)
  4100f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4100fc:	48 8b 00             	mov    (%rax),%rax
  4100ff:	48 85 c0             	test   %rax,%rax
  410102:	74 0a                	je     41010e <getobjname+0x4d>
  410104:	b8 d2 e4 43 00       	mov    $0x43e4d2,%eax
  410109:	e9 2e 02 00 00       	jmpq   41033c <getobjname+0x27b>
  41010e:	8b 55 d0             	mov    -0x30(%rbp),%edx
  410111:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  410114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410118:	89 ce                	mov    %ecx,%esi
  41011a:	48 89 c7             	mov    %rax,%rdi
  41011d:	e8 7d fd ff ff       	callq  40fe9f <findsetreg>
  410122:	89 45 fc             	mov    %eax,-0x4(%rbp)
  410125:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  410129:	0f 84 fe 01 00 00    	je     41032d <getobjname+0x26c>
  41012f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410133:	48 8b 40 40          	mov    0x40(%rax),%rax
  410137:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41013a:	48 63 d2             	movslq %edx,%rdx
  41013d:	48 c1 e2 02          	shl    $0x2,%rdx
  410141:	48 01 d0             	add    %rdx,%rax
  410144:	8b 00                	mov    (%rax),%eax
  410146:	89 45 f8             	mov    %eax,-0x8(%rbp)
  410149:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41014c:	83 e0 7f             	and    $0x7f,%eax
  41014f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  410152:	83 7d f4 14          	cmpl   $0x14,-0xc(%rbp)
  410156:	0f 87 d4 01 00 00    	ja     410330 <getobjname+0x26f>
  41015c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41015f:	48 8b 04 c5 00 e5 43 	mov    0x43e500(,%rax,8),%rax
  410166:	00 
  410167:	ff e0                	jmpq   *%rax
  410169:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41016c:	c1 e8 10             	shr    $0x10,%eax
  41016f:	25 ff 00 00 00       	and    $0xff,%eax
  410174:	89 45 f0             	mov    %eax,-0x10(%rbp)
  410177:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41017a:	c1 e8 07             	shr    $0x7,%eax
  41017d:	0f b6 c0             	movzbl %al,%eax
  410180:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  410183:	0f 8d aa 01 00 00    	jge    410333 <getobjname+0x272>
  410189:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41018d:	8b 55 f0             	mov    -0x10(%rbp),%edx
  410190:	8b 75 fc             	mov    -0x4(%rbp),%esi
  410193:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410197:	48 89 c7             	mov    %rax,%rdi
  41019a:	e8 22 ff ff ff       	callq  4100c1 <getobjname>
  41019f:	e9 98 01 00 00       	jmpq   41033c <getobjname+0x27b>
  4101a4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4101a7:	c1 e8 18             	shr    $0x18,%eax
  4101aa:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4101ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4101b1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4101b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4101b8:	89 ce                	mov    %ecx,%esi
  4101ba:	48 89 c7             	mov    %rax,%rdi
  4101bd:	e8 bc fb ff ff       	callq  40fd7e <kname>
  4101c2:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4101c5:	8b 75 fc             	mov    -0x4(%rbp),%esi
  4101c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4101cc:	b9 01 00 00 00       	mov    $0x1,%ecx
  4101d1:	48 89 c7             	mov    %rax,%rdi
  4101d4:	e8 66 fe ff ff       	callq  41003f <gxf>
  4101d9:	e9 5e 01 00 00       	jmpq   41033c <getobjname+0x27b>
  4101de:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4101e1:	c1 e8 18             	shr    $0x18,%eax
  4101e4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4101e7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4101eb:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4101ee:	8b 75 fc             	mov    -0x4(%rbp),%esi
  4101f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4101f5:	48 89 c7             	mov    %rax,%rdi
  4101f8:	e8 d8 fb ff ff       	callq  40fdd5 <rname>
  4101fd:	8b 55 f8             	mov    -0x8(%rbp),%edx
  410200:	8b 75 fc             	mov    -0x4(%rbp),%esi
  410203:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410207:	b9 00 00 00 00       	mov    $0x0,%ecx
  41020c:	48 89 c7             	mov    %rax,%rdi
  41020f:	e8 2b fe ff ff       	callq  41003f <gxf>
  410214:	e9 23 01 00 00       	jmpq   41033c <getobjname+0x27b>
  410219:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41021d:	48 c7 00 d8 e4 43 00 	movq   $0x43e4d8,(%rax)
  410224:	b8 cc e4 43 00       	mov    $0x43e4cc,%eax
  410229:	e9 0e 01 00 00       	jmpq   41033c <getobjname+0x27b>
  41022e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  410231:	c1 e8 18             	shr    $0x18,%eax
  410234:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  410237:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41023b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  41023e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410242:	89 ce                	mov    %ecx,%esi
  410244:	48 89 c7             	mov    %rax,%rdi
  410247:	e8 32 fb ff ff       	callq  40fd7e <kname>
  41024c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  41024f:	8b 75 fc             	mov    -0x4(%rbp),%esi
  410252:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410256:	b9 00 00 00 00       	mov    $0x0,%ecx
  41025b:	48 89 c7             	mov    %rax,%rdi
  41025e:	e8 dc fd ff ff       	callq  41003f <gxf>
  410263:	e9 d4 00 00 00       	jmpq   41033c <getobjname+0x27b>
  410268:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41026b:	c1 e8 10             	shr    $0x10,%eax
  41026e:	0f b6 d0             	movzbl %al,%edx
  410271:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410275:	89 d6                	mov    %edx,%esi
  410277:	48 89 c7             	mov    %rax,%rdi
  41027a:	e8 53 f1 ff ff       	callq  40f3d2 <upvalname>
  41027f:	48 89 c2             	mov    %rax,%rdx
  410282:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410286:	48 89 10             	mov    %rdx,(%rax)
  410289:	b8 e6 e4 43 00       	mov    $0x43e4e6,%eax
  41028e:	e9 a9 00 00 00       	jmpq   41033c <getobjname+0x27b>
  410293:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  410297:	75 08                	jne    4102a1 <getobjname+0x1e0>
  410299:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41029c:	c1 e8 0f             	shr    $0xf,%eax
  41029f:	eb 1e                	jmp    4102bf <getobjname+0x1fe>
  4102a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4102a5:	48 8b 40 40          	mov    0x40(%rax),%rax
  4102a9:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4102ac:	48 63 d2             	movslq %edx,%rdx
  4102af:	48 83 c2 01          	add    $0x1,%rdx
  4102b3:	48 c1 e2 02          	shl    $0x2,%rdx
  4102b7:	48 01 d0             	add    %rdx,%rax
  4102ba:	8b 00                	mov    (%rax),%eax
  4102bc:	c1 e8 07             	shr    $0x7,%eax
  4102bf:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4102c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4102c6:	48 8b 40 38          	mov    0x38(%rax),%rax
  4102ca:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4102cd:	48 63 d2             	movslq %edx,%rdx
  4102d0:	48 c1 e2 04          	shl    $0x4,%rdx
  4102d4:	48 01 d0             	add    %rdx,%rax
  4102d7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4102db:	0f b6 c0             	movzbl %al,%eax
  4102de:	83 e0 0f             	and    $0xf,%eax
  4102e1:	83 f8 04             	cmp    $0x4,%eax
  4102e4:	75 50                	jne    410336 <getobjname+0x275>
  4102e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4102ea:	48 8b 40 38          	mov    0x38(%rax),%rax
  4102ee:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4102f1:	48 63 d2             	movslq %edx,%rdx
  4102f4:	48 c1 e2 04          	shl    $0x4,%rdx
  4102f8:	48 01 d0             	add    %rdx,%rax
  4102fb:	48 8b 00             	mov    (%rax),%rax
  4102fe:	48 8d 50 18          	lea    0x18(%rax),%rdx
  410302:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410306:	48 89 10             	mov    %rdx,(%rax)
  410309:	b8 ee e4 43 00       	mov    $0x43e4ee,%eax
  41030e:	eb 2c                	jmp    41033c <getobjname+0x27b>
  410310:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  410314:	8b 55 f8             	mov    -0x8(%rbp),%edx
  410317:	8b 75 fc             	mov    -0x4(%rbp),%esi
  41031a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41031e:	48 89 c7             	mov    %rax,%rdi
  410321:	e8 ff fa ff ff       	callq  40fe25 <rkname>
  410326:	b8 f7 e4 43 00       	mov    $0x43e4f7,%eax
  41032b:	eb 0f                	jmp    41033c <getobjname+0x27b>
  41032d:	90                   	nop
  41032e:	eb 07                	jmp    410337 <getobjname+0x276>
  410330:	90                   	nop
  410331:	eb 04                	jmp    410337 <getobjname+0x276>
  410333:	90                   	nop
  410334:	eb 01                	jmp    410337 <getobjname+0x276>
  410336:	90                   	nop
  410337:	b8 00 00 00 00       	mov    $0x0,%eax
  41033c:	c9                   	leaveq 
  41033d:	c3                   	retq   

000000000041033e <funcnamefromcode>:
  41033e:	55                   	push   %rbp
  41033f:	48 89 e5             	mov    %rsp,%rbp
  410342:	48 83 ec 30          	sub    $0x30,%rsp
  410346:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41034a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41034e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  410351:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  410355:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41035c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410360:	48 8b 40 40          	mov    0x40(%rax),%rax
  410364:	8b 55 dc             	mov    -0x24(%rbp),%edx
  410367:	48 63 d2             	movslq %edx,%rdx
  41036a:	48 c1 e2 02          	shl    $0x2,%rdx
  41036e:	48 01 d0             	add    %rdx,%rax
  410371:	8b 00                	mov    (%rax),%eax
  410373:	89 45 f8             	mov    %eax,-0x8(%rbp)
  410376:	8b 45 f8             	mov    -0x8(%rbp),%eax
  410379:	83 e0 7f             	and    $0x7f,%eax
  41037c:	83 e8 0b             	sub    $0xb,%eax
  41037f:	83 f8 41             	cmp    $0x41,%eax
  410382:	0f 87 a7 00 00 00    	ja     41042f <funcnamefromcode+0xf1>
  410388:	89 c0                	mov    %eax,%eax
  41038a:	48 8b 04 c5 c0 e5 43 	mov    0x43e5c0(,%rax,8),%rax
  410391:	00 
  410392:	ff e0                	jmpq   *%rax
  410394:	8b 45 f8             	mov    -0x8(%rbp),%eax
  410397:	c1 e8 07             	shr    $0x7,%eax
  41039a:	0f b6 d0             	movzbl %al,%edx
  41039d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4103a1:	8b 75 dc             	mov    -0x24(%rbp),%esi
  4103a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4103a8:	48 89 c7             	mov    %rax,%rdi
  4103ab:	e8 11 fd ff ff       	callq  4100c1 <getobjname>
  4103b0:	e9 a9 00 00 00       	jmpq   41045e <funcnamefromcode+0x120>
  4103b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4103b9:	48 c7 00 a8 e5 43 00 	movq   $0x43e5a8,(%rax)
  4103c0:	b8 a8 e5 43 00       	mov    $0x43e5a8,%eax
  4103c5:	e9 94 00 00 00       	jmpq   41045e <funcnamefromcode+0x120>
  4103ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4103d1:	eb 63                	jmp    410436 <funcnamefromcode+0xf8>
  4103d3:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4103da:	eb 5a                	jmp    410436 <funcnamefromcode+0xf8>
  4103dc:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4103df:	c1 e8 18             	shr    $0x18,%eax
  4103e2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4103e5:	eb 4f                	jmp    410436 <funcnamefromcode+0xf8>
  4103e7:	c7 45 fc 12 00 00 00 	movl   $0x12,-0x4(%rbp)
  4103ee:	eb 46                	jmp    410436 <funcnamefromcode+0xf8>
  4103f0:	c7 45 fc 13 00 00 00 	movl   $0x13,-0x4(%rbp)
  4103f7:	eb 3d                	jmp    410436 <funcnamefromcode+0xf8>
  4103f9:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
  410400:	eb 34                	jmp    410436 <funcnamefromcode+0xf8>
  410402:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
  410409:	eb 2b                	jmp    410436 <funcnamefromcode+0xf8>
  41040b:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
  410412:	eb 22                	jmp    410436 <funcnamefromcode+0xf8>
  410414:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
  41041b:	eb 19                	jmp    410436 <funcnamefromcode+0xf8>
  41041d:	c7 45 fc 15 00 00 00 	movl   $0x15,-0x4(%rbp)
  410424:	eb 10                	jmp    410436 <funcnamefromcode+0xf8>
  410426:	c7 45 fc 18 00 00 00 	movl   $0x18,-0x4(%rbp)
  41042d:	eb 07                	jmp    410436 <funcnamefromcode+0xf8>
  41042f:	b8 00 00 00 00       	mov    $0x0,%eax
  410434:	eb 28                	jmp    41045e <funcnamefromcode+0x120>
  410436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41043a:	48 8b 40 18          	mov    0x18(%rax),%rax
  41043e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  410441:	48 83 c2 22          	add    $0x22,%rdx
  410445:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
  41044a:	48 83 c0 18          	add    $0x18,%rax
  41044e:	48 8d 50 02          	lea    0x2(%rax),%rdx
  410452:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410456:	48 89 10             	mov    %rdx,(%rax)
  410459:	b8 b5 e5 43 00       	mov    $0x43e5b5,%eax
  41045e:	c9                   	leaveq 
  41045f:	c3                   	retq   

0000000000410460 <funcnamefromcall>:
  410460:	55                   	push   %rbp
  410461:	48 89 e5             	mov    %rsp,%rbp
  410464:	48 83 ec 20          	sub    $0x20,%rsp
  410468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41046c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  410470:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  410474:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410478:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  41047c:	0f b7 c0             	movzwl %ax,%eax
  41047f:	83 e0 08             	and    $0x8,%eax
  410482:	85 c0                	test   %eax,%eax
  410484:	74 12                	je     410498 <funcnamefromcall+0x38>
  410486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41048a:	48 c7 00 30 e3 43 00 	movq   $0x43e330,(%rax)
  410491:	b8 d0 e7 43 00       	mov    $0x43e7d0,%eax
  410496:	eb 70                	jmp    410508 <funcnamefromcall+0xa8>
  410498:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41049c:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4104a0:	0f b7 c0             	movzwl %ax,%eax
  4104a3:	25 80 00 00 00       	and    $0x80,%eax
  4104a8:	85 c0                	test   %eax,%eax
  4104aa:	74 12                	je     4104be <funcnamefromcall+0x5e>
  4104ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4104b0:	48 c7 00 d5 e7 43 00 	movq   $0x43e7d5,(%rax)
  4104b7:	b8 b5 e5 43 00       	mov    $0x43e5b5,%eax
  4104bc:	eb 4a                	jmp    410508 <funcnamefromcall+0xa8>
  4104be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4104c2:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4104c6:	0f b7 c0             	movzwl %ax,%eax
  4104c9:	83 e0 02             	and    $0x2,%eax
  4104cc:	85 c0                	test   %eax,%eax
  4104ce:	75 33                	jne    410503 <funcnamefromcall+0xa3>
  4104d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4104d4:	48 89 c7             	mov    %rax,%rdi
  4104d7:	e8 e7 eb ff ff       	callq  40f0c3 <currentpc>
  4104dc:	89 c7                	mov    %eax,%edi
  4104de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4104e2:	48 8b 00             	mov    (%rax),%rax
  4104e5:	48 8b 00             	mov    (%rax),%rax
  4104e8:	48 8b 70 18          	mov    0x18(%rax),%rsi
  4104ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4104f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4104f4:	48 89 d1             	mov    %rdx,%rcx
  4104f7:	89 fa                	mov    %edi,%edx
  4104f9:	48 89 c7             	mov    %rax,%rdi
  4104fc:	e8 3d fe ff ff       	callq  41033e <funcnamefromcode>
  410501:	eb 05                	jmp    410508 <funcnamefromcall+0xa8>
  410503:	b8 00 00 00 00       	mov    $0x0,%eax
  410508:	c9                   	leaveq 
  410509:	c3                   	retq   

000000000041050a <instack>:
  41050a:	55                   	push   %rbp
  41050b:	48 89 e5             	mov    %rsp,%rbp
  41050e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410512:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410516:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41051a:	48 8b 00             	mov    (%rax),%rax
  41051d:	48 83 c0 10          	add    $0x10,%rax
  410521:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  410525:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41052c:	eb 22                	jmp    410550 <instack+0x46>
  41052e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410531:	48 98                	cltq   
  410533:	48 c1 e0 04          	shl    $0x4,%rax
  410537:	48 89 c2             	mov    %rax,%rdx
  41053a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41053e:	48 01 d0             	add    %rdx,%rax
  410541:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  410545:	75 05                	jne    41054c <instack+0x42>
  410547:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41054a:	eb 29                	jmp    410575 <instack+0x6b>
  41054c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  410550:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410553:	48 98                	cltq   
  410555:	48 c1 e0 04          	shl    $0x4,%rax
  410559:	48 89 c2             	mov    %rax,%rdx
  41055c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410560:	48 01 c2             	add    %rax,%rdx
  410563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410567:	48 8b 40 08          	mov    0x8(%rax),%rax
  41056b:	48 39 c2             	cmp    %rax,%rdx
  41056e:	72 be                	jb     41052e <instack+0x24>
  410570:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  410575:	5d                   	pop    %rbp
  410576:	c3                   	retq   

0000000000410577 <getupvalname>:
  410577:	55                   	push   %rbp
  410578:	48 89 e5             	mov    %rsp,%rbp
  41057b:	48 83 ec 28          	sub    $0x28,%rsp
  41057f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410583:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410587:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41058b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41058f:	48 8b 00             	mov    (%rax),%rax
  410592:	48 8b 00             	mov    (%rax),%rax
  410595:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  410599:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4105a0:	eb 46                	jmp    4105e8 <getupvalname+0x71>
  4105a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105a6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4105a9:	48 63 d2             	movslq %edx,%rdx
  4105ac:	48 83 c2 04          	add    $0x4,%rdx
  4105b0:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4105b4:	48 8b 40 10          	mov    0x10(%rax),%rax
  4105b8:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4105bc:	75 26                	jne    4105e4 <getupvalname+0x6d>
  4105be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105c2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4105c6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4105c9:	89 d6                	mov    %edx,%esi
  4105cb:	48 89 c7             	mov    %rax,%rdi
  4105ce:	e8 ff ed ff ff       	callq  40f3d2 <upvalname>
  4105d3:	48 89 c2             	mov    %rax,%rdx
  4105d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4105da:	48 89 10             	mov    %rdx,(%rax)
  4105dd:	b8 e6 e4 43 00       	mov    $0x43e4e6,%eax
  4105e2:	eb 19                	jmp    4105fd <getupvalname+0x86>
  4105e4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4105e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105ec:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  4105f0:	0f b6 c0             	movzbl %al,%eax
  4105f3:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4105f6:	7c aa                	jl     4105a2 <getupvalname+0x2b>
  4105f8:	b8 00 00 00 00       	mov    $0x0,%eax
  4105fd:	c9                   	leaveq 
  4105fe:	c3                   	retq   

00000000004105ff <formatvarinfo>:
  4105ff:	55                   	push   %rbp
  410600:	48 89 e5             	mov    %rsp,%rbp
  410603:	48 83 ec 20          	sub    $0x20,%rsp
  410607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41060b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41060f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  410613:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  410618:	75 07                	jne    410621 <formatvarinfo+0x22>
  41061a:	b8 68 e3 43 00       	mov    $0x43e368,%eax
  41061f:	eb 1e                	jmp    41063f <formatvarinfo+0x40>
  410621:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  410625:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  410629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41062d:	be da e7 43 00       	mov    $0x43e7da,%esi
  410632:	48 89 c7             	mov    %rax,%rdi
  410635:	b8 00 00 00 00       	mov    $0x0,%eax
  41063a:	e8 20 f6 00 00       	callq  41fc5f <luaO_pushfstring>
  41063f:	c9                   	leaveq 
  410640:	c3                   	retq   

0000000000410641 <varinfo>:
  410641:	55                   	push   %rbp
  410642:	48 89 e5             	mov    %rsp,%rbp
  410645:	48 83 ec 30          	sub    $0x30,%rsp
  410649:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41064d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  410651:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410655:	48 8b 40 20          	mov    0x20(%rax),%rax
  410659:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41065d:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  410664:	00 
  410665:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  41066c:	00 
  41066d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410671:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  410675:	0f b7 c0             	movzwl %ax,%eax
  410678:	83 e0 02             	and    $0x2,%eax
  41067b:	85 c0                	test   %eax,%eax
  41067d:	75 6d                	jne    4106ec <varinfo+0xab>
  41067f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  410683:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  410687:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41068b:	48 89 ce             	mov    %rcx,%rsi
  41068e:	48 89 c7             	mov    %rax,%rdi
  410691:	e8 e1 fe ff ff       	callq  410577 <getupvalname>
  410696:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41069a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41069f:	75 4b                	jne    4106ec <varinfo+0xab>
  4106a1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4106a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4106a9:	48 89 d6             	mov    %rdx,%rsi
  4106ac:	48 89 c7             	mov    %rax,%rdi
  4106af:	e8 56 fe ff ff       	callq  41050a <instack>
  4106b4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4106b7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4106bb:	78 2f                	js     4106ec <varinfo+0xab>
  4106bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4106c1:	48 89 c7             	mov    %rax,%rdi
  4106c4:	e8 fa e9 ff ff       	callq  40f0c3 <currentpc>
  4106c9:	89 c6                	mov    %eax,%esi
  4106cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4106cf:	48 8b 00             	mov    (%rax),%rax
  4106d2:	48 8b 00             	mov    (%rax),%rax
  4106d5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4106d9:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  4106dd:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4106e0:	48 89 c7             	mov    %rax,%rdi
  4106e3:	e8 d9 f9 ff ff       	callq  4100c1 <getobjname>
  4106e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4106ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4106f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4106f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4106f8:	48 89 ce             	mov    %rcx,%rsi
  4106fb:	48 89 c7             	mov    %rax,%rdi
  4106fe:	e8 fc fe ff ff       	callq  4105ff <formatvarinfo>
  410703:	c9                   	leaveq 
  410704:	c3                   	retq   

0000000000410705 <typeerror>:
  410705:	55                   	push   %rbp
  410706:	48 89 e5             	mov    %rsp,%rbp
  410709:	48 83 ec 30          	sub    $0x30,%rsp
  41070d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410711:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410715:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  410719:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41071d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  410721:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410725:	48 89 d6             	mov    %rdx,%rsi
  410728:	48 89 c7             	mov    %rax,%rdi
  41072b:	e8 bd e7 01 00       	callq  42eeed <luaT_objtypename>
  410730:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  410734:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  410738:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41073c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410744:	49 89 f0             	mov    %rsi,%r8
  410747:	be e5 e7 43 00       	mov    $0x43e7e5,%esi
  41074c:	48 89 c7             	mov    %rax,%rdi
  41074f:	b8 00 00 00 00       	mov    $0x0,%eax
  410754:	e8 20 04 00 00       	callq  410b79 <luaG_runerror>

0000000000410759 <luaG_typeerror>:
  410759:	55                   	push   %rbp
  41075a:	48 89 e5             	mov    %rsp,%rbp
  41075d:	48 83 ec 20          	sub    $0x20,%rsp
  410761:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  410765:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  410769:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41076d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  410771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410775:	48 89 d6             	mov    %rdx,%rsi
  410778:	48 89 c7             	mov    %rax,%rdi
  41077b:	e8 c1 fe ff ff       	callq  410641 <varinfo>
  410780:	48 89 c1             	mov    %rax,%rcx
  410783:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410787:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41078b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41078f:	48 89 c7             	mov    %rax,%rdi
  410792:	e8 6e ff ff ff       	callq  410705 <typeerror>

0000000000410797 <luaG_callerror>:
  410797:	55                   	push   %rbp
  410798:	48 89 e5             	mov    %rsp,%rbp
  41079b:	48 83 ec 30          	sub    $0x30,%rsp
  41079f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4107a3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4107a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4107ab:	48 8b 40 20          	mov    0x20(%rax),%rax
  4107af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4107b3:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  4107ba:	00 
  4107bb:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4107bf:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4107c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4107c7:	48 89 ce             	mov    %rcx,%rsi
  4107ca:	48 89 c7             	mov    %rax,%rdi
  4107cd:	e8 8e fc ff ff       	callq  410460 <funcnamefromcall>
  4107d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4107d6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4107db:	74 19                	je     4107f6 <luaG_callerror+0x5f>
  4107dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4107e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4107e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4107e9:	48 89 ce             	mov    %rcx,%rsi
  4107ec:	48 89 c7             	mov    %rax,%rdi
  4107ef:	e8 0b fe ff ff       	callq  4105ff <formatvarinfo>
  4107f4:	eb 13                	jmp    410809 <luaG_callerror+0x72>
  4107f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4107fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4107fe:	48 89 d6             	mov    %rdx,%rsi
  410801:	48 89 c7             	mov    %rax,%rdi
  410804:	e8 38 fe ff ff       	callq  410641 <varinfo>
  410809:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41080d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410811:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  410815:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410819:	48 89 d1             	mov    %rdx,%rcx
  41081c:	ba 00 e8 43 00       	mov    $0x43e800,%edx
  410821:	48 89 c7             	mov    %rax,%rdi
  410824:	e8 dc fe ff ff       	callq  410705 <typeerror>

0000000000410829 <luaG_forerror>:
  410829:	55                   	push   %rbp
  41082a:	48 89 e5             	mov    %rsp,%rbp
  41082d:	48 83 ec 20          	sub    $0x20,%rsp
  410831:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  410835:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  410839:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41083d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  410841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410845:	48 89 d6             	mov    %rdx,%rsi
  410848:	48 89 c7             	mov    %rax,%rdi
  41084b:	e8 9d e6 01 00       	callq  42eeed <luaT_objtypename>
  410850:	48 89 c1             	mov    %rax,%rcx
  410853:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41085b:	be 08 e8 43 00       	mov    $0x43e808,%esi
  410860:	48 89 c7             	mov    %rax,%rdi
  410863:	b8 00 00 00 00       	mov    $0x0,%eax
  410868:	e8 0c 03 00 00       	callq  410b79 <luaG_runerror>

000000000041086d <luaG_concaterror>:
  41086d:	55                   	push   %rbp
  41086e:	48 89 e5             	mov    %rsp,%rbp
  410871:	48 83 ec 20          	sub    $0x20,%rsp
  410875:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  410879:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41087d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  410881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410885:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  410889:	0f b6 c0             	movzbl %al,%eax
  41088c:	83 e0 0f             	and    $0xf,%eax
  41088f:	83 f8 04             	cmp    $0x4,%eax
  410892:	74 13                	je     4108a7 <luaG_concaterror+0x3a>
  410894:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410898:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41089c:	0f b6 c0             	movzbl %al,%eax
  41089f:	83 e0 0f             	and    $0xf,%eax
  4108a2:	83 f8 03             	cmp    $0x3,%eax
  4108a5:	75 08                	jne    4108af <luaG_concaterror+0x42>
  4108a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4108ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4108af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4108b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4108b7:	ba 2f e8 43 00       	mov    $0x43e82f,%edx
  4108bc:	48 89 ce             	mov    %rcx,%rsi
  4108bf:	48 89 c7             	mov    %rax,%rdi
  4108c2:	e8 92 fe ff ff       	callq  410759 <luaG_typeerror>

00000000004108c7 <luaG_opinterror>:
  4108c7:	55                   	push   %rbp
  4108c8:	48 89 e5             	mov    %rsp,%rbp
  4108cb:	48 83 ec 20          	sub    $0x20,%rsp
  4108cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4108d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4108d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4108db:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4108df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4108e3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4108e7:	0f b6 c0             	movzbl %al,%eax
  4108ea:	83 e0 0f             	and    $0xf,%eax
  4108ed:	83 f8 03             	cmp    $0x3,%eax
  4108f0:	74 08                	je     4108fa <luaG_opinterror+0x33>
  4108f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4108f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4108fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4108fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  410902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410906:	48 89 ce             	mov    %rcx,%rsi
  410909:	48 89 c7             	mov    %rax,%rdi
  41090c:	e8 48 fe ff ff       	callq  410759 <luaG_typeerror>

0000000000410911 <luaG_tointerror>:
  410911:	55                   	push   %rbp
  410912:	48 89 e5             	mov    %rsp,%rbp
  410915:	48 83 ec 30          	sub    $0x30,%rsp
  410919:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41091d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410921:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  410925:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  410929:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41092d:	ba 00 00 00 00       	mov    $0x0,%edx
  410932:	48 89 ce             	mov    %rcx,%rsi
  410935:	48 89 c7             	mov    %rax,%rdi
  410938:	e8 27 20 02 00       	callq  432964 <luaV_tointegerns>
  41093d:	85 c0                	test   %eax,%eax
  41093f:	75 08                	jne    410949 <luaG_tointerror+0x38>
  410941:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410945:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  410949:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41094d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410951:	48 89 d6             	mov    %rdx,%rsi
  410954:	48 89 c7             	mov    %rax,%rdi
  410957:	e8 e5 fc ff ff       	callq  410641 <varinfo>
  41095c:	48 89 c2             	mov    %rax,%rdx
  41095f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410963:	be 40 e8 43 00       	mov    $0x43e840,%esi
  410968:	48 89 c7             	mov    %rax,%rdi
  41096b:	b8 00 00 00 00       	mov    $0x0,%eax
  410970:	e8 04 02 00 00       	callq  410b79 <luaG_runerror>

0000000000410975 <luaG_ordererror>:
  410975:	55                   	push   %rbp
  410976:	48 89 e5             	mov    %rsp,%rbp
  410979:	48 83 ec 30          	sub    $0x30,%rsp
  41097d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410981:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410985:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  410989:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41098d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410991:	48 89 d6             	mov    %rdx,%rsi
  410994:	48 89 c7             	mov    %rax,%rdi
  410997:	e8 51 e5 01 00       	callq  42eeed <luaT_objtypename>
  41099c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4109a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4109a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4109a8:	48 89 d6             	mov    %rdx,%rsi
  4109ab:	48 89 c7             	mov    %rax,%rdi
  4109ae:	e8 3a e5 01 00       	callq  42eeed <luaT_objtypename>
  4109b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4109b7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4109bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4109bf:	48 89 d6             	mov    %rdx,%rsi
  4109c2:	48 89 c7             	mov    %rax,%rdi
  4109c5:	e8 f6 0f ff ff       	callq  4019c0 <strcmp@plt>
  4109ca:	85 c0                	test   %eax,%eax
  4109cc:	75 1a                	jne    4109e8 <luaG_ordererror+0x73>
  4109ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4109d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4109d6:	be 68 e8 43 00       	mov    $0x43e868,%esi
  4109db:	48 89 c7             	mov    %rax,%rdi
  4109de:	b8 00 00 00 00       	mov    $0x0,%eax
  4109e3:	e8 91 01 00 00       	callq  410b79 <luaG_runerror>
  4109e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4109ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4109f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4109f4:	be 89 e8 43 00       	mov    $0x43e889,%esi
  4109f9:	48 89 c7             	mov    %rax,%rdi
  4109fc:	b8 00 00 00 00       	mov    $0x0,%eax
  410a01:	e8 73 01 00 00       	callq  410b79 <luaG_runerror>

0000000000410a06 <luaG_addinfo>:
  410a06:	55                   	push   %rbp
  410a07:	48 89 e5             	mov    %rsp,%rbp
  410a0a:	48 83 ec 60          	sub    $0x60,%rsp
  410a0e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  410a12:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  410a16:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  410a1a:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  410a1d:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  410a22:	74 3a                	je     410a5e <luaG_addinfo+0x58>
  410a24:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  410a28:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  410a2c:	3c 04                	cmp    $0x4,%al
  410a2e:	75 0d                	jne    410a3d <luaG_addinfo+0x37>
  410a30:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  410a34:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  410a38:	0f b6 c0             	movzbl %al,%eax
  410a3b:	eb 08                	jmp    410a45 <luaG_addinfo+0x3f>
  410a3d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  410a41:	48 8b 40 10          	mov    0x10(%rax),%rax
  410a45:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  410a49:	48 8d 72 18          	lea    0x18(%rdx),%rsi
  410a4d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  410a51:	48 89 c2             	mov    %rax,%rdx
  410a54:	48 89 cf             	mov    %rcx,%rdi
  410a57:	e8 b9 f2 00 00       	callq  41fd15 <luaO_chunkid>
  410a5c:	eb 08                	jmp    410a66 <luaG_addinfo+0x60>
  410a5e:	c6 45 c0 3f          	movb   $0x3f,-0x40(%rbp)
  410a62:	c6 45 c1 00          	movb   $0x0,-0x3f(%rbp)
  410a66:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  410a6a:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  410a6d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  410a71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  410a75:	49 89 f0             	mov    %rsi,%r8
  410a78:	be a7 e8 43 00       	mov    $0x43e8a7,%esi
  410a7d:	48 89 c7             	mov    %rax,%rdi
  410a80:	b8 00 00 00 00       	mov    $0x0,%eax
  410a85:	e8 d5 f1 00 00       	callq  41fc5f <luaO_pushfstring>
  410a8a:	c9                   	leaveq 
  410a8b:	c3                   	retq   

0000000000410a8c <luaG_errormsg>:
  410a8c:	55                   	push   %rbp
  410a8d:	48 89 e5             	mov    %rsp,%rbp
  410a90:	48 83 ec 40          	sub    $0x40,%rsp
  410a94:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  410a98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410a9c:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  410aa3:	48 85 c0             	test   %rax,%rax
  410aa6:	0f 84 bc 00 00 00    	je     410b68 <luaG_errormsg+0xdc>
  410aac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410ab0:	48 8b 50 30          	mov    0x30(%rax),%rdx
  410ab4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410ab8:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  410abf:	48 01 d0             	add    %rdx,%rax
  410ac2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  410ac6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410aca:	48 8b 40 10          	mov    0x10(%rax),%rax
  410ace:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  410ad2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410ad6:	48 8b 40 10          	mov    0x10(%rax),%rax
  410ada:	48 83 e8 10          	sub    $0x10,%rax
  410ade:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  410ae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410ae6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410aea:	48 8b 12             	mov    (%rdx),%rdx
  410aed:	48 89 10             	mov    %rdx,(%rax)
  410af0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410af4:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  410af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410afc:	88 50 08             	mov    %dl,0x8(%rax)
  410aff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b03:	48 8b 40 10          	mov    0x10(%rax),%rax
  410b07:	48 83 e8 10          	sub    $0x10,%rax
  410b0b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  410b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410b13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  410b17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410b1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410b1f:	48 8b 12             	mov    (%rdx),%rdx
  410b22:	48 89 10             	mov    %rdx,(%rax)
  410b25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410b29:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  410b2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410b31:	88 50 08             	mov    %dl,0x8(%rax)
  410b34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b38:	48 8b 40 10          	mov    0x10(%rax),%rax
  410b3c:	48 8d 50 10          	lea    0x10(%rax),%rdx
  410b40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b44:	48 89 50 10          	mov    %rdx,0x10(%rax)
  410b48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b4c:	48 8b 40 10          	mov    0x10(%rax),%rax
  410b50:	48 8d 48 e0          	lea    -0x20(%rax),%rcx
  410b54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b58:	ba 01 00 00 00       	mov    $0x1,%edx
  410b5d:	48 89 ce             	mov    %rcx,%rsi
  410b60:	48 89 c7             	mov    %rax,%rdi
  410b63:	e8 8f 1d 00 00       	callq  4128f7 <luaD_callnoyield>
  410b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410b6c:	be 02 00 00 00       	mov    $0x2,%esi
  410b71:	48 89 c7             	mov    %rax,%rdi
  410b74:	e8 00 06 00 00       	callq  411179 <luaD_throw>

0000000000410b79 <luaG_runerror>:
  410b79:	55                   	push   %rbp
  410b7a:	48 89 e5             	mov    %rsp,%rbp
  410b7d:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
  410b84:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  410b8b:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
  410b92:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  410b99:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  410ba0:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  410ba7:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  410bae:	84 c0                	test   %al,%al
  410bb0:	74 20                	je     410bd2 <luaG_runerror+0x59>
  410bb2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  410bb6:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  410bba:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  410bbe:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  410bc2:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  410bc6:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  410bca:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  410bce:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  410bd2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410bd9:	48 8b 40 20          	mov    0x20(%rax),%rax
  410bdd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  410be4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410beb:	48 8b 40 18          	mov    0x18(%rax),%rax
  410bef:	48 8b 40 18          	mov    0x18(%rax),%rax
  410bf3:	48 85 c0             	test   %rax,%rax
  410bf6:	7e 0f                	jle    410c07 <luaG_runerror+0x8e>
  410bf8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410bff:	48 89 c7             	mov    %rax,%rdi
  410c02:	e8 51 77 00 00       	callq  418358 <luaC_step>
  410c07:	c7 85 18 ff ff ff 10 	movl   $0x10,-0xe8(%rbp)
  410c0e:	00 00 00 
  410c11:	c7 85 1c ff ff ff 30 	movl   $0x30,-0xe4(%rbp)
  410c18:	00 00 00 
  410c1b:	48 8d 45 10          	lea    0x10(%rbp),%rax
  410c1f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  410c26:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  410c2d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  410c34:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
  410c3b:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410c42:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410c49:	48 89 ce             	mov    %rcx,%rsi
  410c4c:	48 89 c7             	mov    %rax,%rdi
  410c4f:	e8 6e ea 00 00       	callq  41f6c2 <luaO_pushvfstring>
  410c54:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  410c5b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  410c62:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  410c66:	0f b7 c0             	movzwl %ax,%eax
  410c69:	83 e0 02             	and    $0x2,%eax
  410c6c:	85 c0                	test   %eax,%eax
  410c6e:	0f 85 ab 00 00 00    	jne    410d1f <luaG_runerror+0x1a6>
  410c74:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  410c7b:	48 89 c7             	mov    %rax,%rdi
  410c7e:	e8 90 e5 ff ff       	callq  40f213 <getcurrentline>
  410c83:	89 c1                	mov    %eax,%ecx
  410c85:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  410c8c:	48 8b 00             	mov    (%rax),%rax
  410c8f:	48 8b 00             	mov    (%rax),%rax
  410c92:	48 8b 40 18          	mov    0x18(%rax),%rax
  410c96:	48 8b 50 70          	mov    0x70(%rax),%rdx
  410c9a:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  410ca1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410ca8:	48 89 c7             	mov    %rax,%rdi
  410cab:	e8 56 fd ff ff       	callq  410a06 <luaG_addinfo>
  410cb0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410cb7:	48 8b 40 10          	mov    0x10(%rax),%rax
  410cbb:	48 83 e8 20          	sub    $0x20,%rax
  410cbf:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  410cc6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410ccd:	48 8b 40 10          	mov    0x10(%rax),%rax
  410cd1:	48 83 e8 10          	sub    $0x10,%rax
  410cd5:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  410cdc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  410ce3:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  410cea:	48 8b 12             	mov    (%rdx),%rdx
  410ced:	48 89 10             	mov    %rdx,(%rax)
  410cf0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  410cf7:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  410cfb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  410d02:	88 50 08             	mov    %dl,0x8(%rax)
  410d05:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410d0c:	48 8b 40 10          	mov    0x10(%rax),%rax
  410d10:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  410d14:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410d1b:	48 89 50 10          	mov    %rdx,0x10(%rax)
  410d1f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  410d26:	48 89 c7             	mov    %rax,%rdi
  410d29:	e8 5e fd ff ff       	callq  410a8c <luaG_errormsg>

0000000000410d2e <changedline>:
  410d2e:	55                   	push   %rbp
  410d2f:	48 89 e5             	mov    %rsp,%rbp
  410d32:	53                   	push   %rbx
  410d33:	48 83 ec 20          	sub    $0x20,%rsp
  410d37:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  410d3b:	89 75 dc             	mov    %esi,-0x24(%rbp)
  410d3e:	89 55 d8             	mov    %edx,-0x28(%rbp)
  410d41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410d45:	48 8b 40 58          	mov    0x58(%rax),%rax
  410d49:	48 85 c0             	test   %rax,%rax
  410d4c:	75 0a                	jne    410d58 <changedline+0x2a>
  410d4e:	b8 00 00 00 00       	mov    $0x0,%eax
  410d53:	e9 82 00 00 00       	jmpq   410dda <changedline+0xac>
  410d58:	8b 45 d8             	mov    -0x28(%rbp),%eax
  410d5b:	2b 45 dc             	sub    -0x24(%rbp),%eax
  410d5e:	83 f8 3f             	cmp    $0x3f,%eax
  410d61:	7f 4b                	jg     410dae <changedline+0x80>
  410d63:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  410d6a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  410d6d:	89 45 f0             	mov    %eax,-0x10(%rbp)
  410d70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410d74:	48 8b 50 58          	mov    0x58(%rax),%rdx
  410d78:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  410d7c:	8b 45 f0             	mov    -0x10(%rbp),%eax
  410d7f:	48 98                	cltq   
  410d81:	48 01 d0             	add    %rdx,%rax
  410d84:	0f b6 00             	movzbl (%rax),%eax
  410d87:	0f be c0             	movsbl %al,%eax
  410d8a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  410d8d:	83 7d ec 80          	cmpl   $0xffffff80,-0x14(%rbp)
  410d91:	74 1a                	je     410dad <changedline+0x7f>
  410d93:	8b 45 ec             	mov    -0x14(%rbp),%eax
  410d96:	01 45 f4             	add    %eax,-0xc(%rbp)
  410d99:	8b 45 f0             	mov    -0x10(%rbp),%eax
  410d9c:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  410d9f:	75 cf                	jne    410d70 <changedline+0x42>
  410da1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  410da5:	0f 95 c0             	setne  %al
  410da8:	0f b6 c0             	movzbl %al,%eax
  410dab:	eb 2d                	jmp    410dda <changedline+0xac>
  410dad:	90                   	nop
  410dae:	8b 55 dc             	mov    -0x24(%rbp),%edx
  410db1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410db5:	89 d6                	mov    %edx,%esi
  410db7:	48 89 c7             	mov    %rax,%rdi
  410dba:	e8 eb e3 ff ff       	callq  40f1aa <luaG_getfuncline>
  410dbf:	89 c3                	mov    %eax,%ebx
  410dc1:	8b 55 d8             	mov    -0x28(%rbp),%edx
  410dc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410dc8:	89 d6                	mov    %edx,%esi
  410dca:	48 89 c7             	mov    %rax,%rdi
  410dcd:	e8 d8 e3 ff ff       	callq  40f1aa <luaG_getfuncline>
  410dd2:	39 c3                	cmp    %eax,%ebx
  410dd4:	0f 95 c0             	setne  %al
  410dd7:	0f b6 c0             	movzbl %al,%eax
  410dda:	48 83 c4 20          	add    $0x20,%rsp
  410dde:	5b                   	pop    %rbx
  410ddf:	5d                   	pop    %rbp
  410de0:	c3                   	retq   

0000000000410de1 <luaG_traceexec>:
  410de1:	55                   	push   %rbp
  410de2:	48 89 e5             	mov    %rsp,%rbp
  410de5:	48 83 ec 40          	sub    $0x40,%rsp
  410de9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  410ded:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  410df1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410df5:	48 8b 40 20          	mov    0x20(%rax),%rax
  410df9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  410dfd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410e01:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  410e07:	88 45 f7             	mov    %al,-0x9(%rbp)
  410e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410e0e:	48 8b 00             	mov    (%rax),%rax
  410e11:	48 8b 00             	mov    (%rax),%rax
  410e14:	48 8b 40 18          	mov    0x18(%rax),%rax
  410e18:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  410e1c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  410e20:	83 e0 0c             	and    $0xc,%eax
  410e23:	85 c0                	test   %eax,%eax
  410e25:	75 15                	jne    410e3c <luaG_traceexec+0x5b>
  410e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410e2b:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  410e32:	b8 00 00 00 00       	mov    $0x0,%eax
  410e37:	e9 38 02 00 00       	jmpq   411074 <luaG_traceexec+0x293>
  410e3c:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
  410e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410e45:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  410e49:	48 89 50 20          	mov    %rdx,0x20(%rax)
  410e4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410e51:	8b 80 bc 00 00 00    	mov    0xbc(%rax),%eax
  410e57:	8d 50 ff             	lea    -0x1(%rax),%edx
  410e5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410e5e:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
  410e64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410e68:	8b 80 bc 00 00 00    	mov    0xbc(%rax),%eax
  410e6e:	85 c0                	test   %eax,%eax
  410e70:	75 12                	jne    410e84 <luaG_traceexec+0xa3>
  410e72:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  410e76:	83 e0 08             	and    $0x8,%eax
  410e79:	85 c0                	test   %eax,%eax
  410e7b:	74 07                	je     410e84 <luaG_traceexec+0xa3>
  410e7d:	b8 01 00 00 00       	mov    $0x1,%eax
  410e82:	eb 05                	jmp    410e89 <luaG_traceexec+0xa8>
  410e84:	b8 00 00 00 00       	mov    $0x0,%eax
  410e89:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  410e8c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  410e90:	74 16                	je     410ea8 <luaG_traceexec+0xc7>
  410e92:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410e96:	8b 90 b8 00 00 00    	mov    0xb8(%rax),%edx
  410e9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410ea0:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
  410ea6:	eb 15                	jmp    410ebd <luaG_traceexec+0xdc>
  410ea8:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  410eac:	83 e0 04             	and    $0x4,%eax
  410eaf:	85 c0                	test   %eax,%eax
  410eb1:	75 0a                	jne    410ebd <luaG_traceexec+0xdc>
  410eb3:	b8 01 00 00 00       	mov    $0x1,%eax
  410eb8:	e9 b7 01 00 00       	jmpq   411074 <luaG_traceexec+0x293>
  410ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410ec1:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  410ec5:	0f b7 c0             	movzwl %ax,%eax
  410ec8:	83 e0 40             	and    $0x40,%eax
  410ecb:	85 c0                	test   %eax,%eax
  410ecd:	74 1f                	je     410eee <luaG_traceexec+0x10d>
  410ecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410ed3:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  410ed7:	83 e0 bf             	and    $0xffffffbf,%eax
  410eda:	89 c2                	mov    %eax,%edx
  410edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410ee0:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  410ee4:	b8 01 00 00 00       	mov    $0x1,%eax
  410ee9:	e9 86 01 00 00       	jmpq   411074 <luaG_traceexec+0x293>
  410eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410ef2:	48 8b 40 20          	mov    0x20(%rax),%rax
  410ef6:	48 83 e8 04          	sub    $0x4,%rax
  410efa:	8b 00                	mov    (%rax),%eax
  410efc:	83 e0 7f             	and    $0x7f,%eax
  410eff:	89 c0                	mov    %eax,%eax
  410f01:	0f b6 80 00 0c 44 00 	movzbl 0x440c00(%rax),%eax
  410f08:	0f b6 c0             	movzbl %al,%eax
  410f0b:	83 e0 20             	and    $0x20,%eax
  410f0e:	85 c0                	test   %eax,%eax
  410f10:	74 18                	je     410f2a <luaG_traceexec+0x149>
  410f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f16:	48 8b 40 20          	mov    0x20(%rax),%rax
  410f1a:	48 83 e8 04          	sub    $0x4,%rax
  410f1e:	8b 00                	mov    (%rax),%eax
  410f20:	c1 e8 10             	shr    $0x10,%eax
  410f23:	0f b6 c0             	movzbl %al,%eax
  410f26:	85 c0                	test   %eax,%eax
  410f28:	74 10                	je     410f3a <luaG_traceexec+0x159>
  410f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f2e:	48 8b 50 08          	mov    0x8(%rax),%rdx
  410f32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410f36:	48 89 50 10          	mov    %rdx,0x10(%rax)
  410f3a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  410f3e:	74 21                	je     410f61 <luaG_traceexec+0x180>
  410f40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410f44:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410f4a:	b9 00 00 00 00       	mov    $0x0,%ecx
  410f4f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  410f54:	be 03 00 00 00       	mov    $0x3,%esi
  410f59:	48 89 c7             	mov    %rax,%rdi
  410f5c:	e8 64 09 00 00       	callq  4118c5 <luaD_hook>
  410f61:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  410f65:	83 e0 04             	and    $0x4,%eax
  410f68:	85 c0                	test   %eax,%eax
  410f6a:	0f 84 a5 00 00 00    	je     411015 <luaG_traceexec+0x234>
  410f70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410f74:	8b 90 b4 00 00 00    	mov    0xb4(%rax),%edx
  410f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410f7e:	8b 40 18             	mov    0x18(%rax),%eax
  410f81:	39 c2                	cmp    %eax,%edx
  410f83:	7d 0c                	jge    410f91 <luaG_traceexec+0x1b0>
  410f85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410f89:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
  410f8f:	eb 05                	jmp    410f96 <luaG_traceexec+0x1b5>
  410f91:	b8 00 00 00 00       	mov    $0x0,%eax
  410f96:	89 45 e0             	mov    %eax,-0x20(%rbp)
  410f99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410f9d:	48 8b 40 40          	mov    0x40(%rax),%rax
  410fa1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  410fa5:	48 29 c2             	sub    %rax,%rdx
  410fa8:	48 89 d0             	mov    %rdx,%rax
  410fab:	48 c1 f8 02          	sar    $0x2,%rax
  410faf:	83 e8 01             	sub    $0x1,%eax
  410fb2:	89 45 dc             	mov    %eax,-0x24(%rbp)
  410fb5:	8b 45 dc             	mov    -0x24(%rbp),%eax
  410fb8:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  410fbb:	7e 18                	jle    410fd5 <luaG_traceexec+0x1f4>
  410fbd:	8b 55 dc             	mov    -0x24(%rbp),%edx
  410fc0:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  410fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410fc7:	89 ce                	mov    %ecx,%esi
  410fc9:	48 89 c7             	mov    %rax,%rdi
  410fcc:	e8 5d fd ff ff       	callq  410d2e <changedline>
  410fd1:	85 c0                	test   %eax,%eax
  410fd3:	74 33                	je     411008 <luaG_traceexec+0x227>
  410fd5:	8b 55 dc             	mov    -0x24(%rbp),%edx
  410fd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410fdc:	89 d6                	mov    %edx,%esi
  410fde:	48 89 c7             	mov    %rax,%rdi
  410fe1:	e8 c4 e1 ff ff       	callq  40f1aa <luaG_getfuncline>
  410fe6:	89 45 d8             	mov    %eax,-0x28(%rbp)
  410fe9:	8b 55 d8             	mov    -0x28(%rbp),%edx
  410fec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410ff0:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410ff6:	b9 00 00 00 00       	mov    $0x0,%ecx
  410ffb:	be 02 00 00 00       	mov    $0x2,%esi
  411000:	48 89 c7             	mov    %rax,%rdi
  411003:	e8 bd 08 00 00       	callq  4118c5 <luaD_hook>
  411008:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41100c:	8b 55 dc             	mov    -0x24(%rbp),%edx
  41100f:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
  411015:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  411019:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  41101d:	3c 01                	cmp    $0x1,%al
  41101f:	75 4e                	jne    41106f <luaG_traceexec+0x28e>
  411021:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  411025:	74 0e                	je     411035 <luaG_traceexec+0x254>
  411027:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41102b:	c7 80 bc 00 00 00 01 	movl   $0x1,0xbc(%rax)
  411032:	00 00 00 
  411035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411039:	48 8b 40 20          	mov    0x20(%rax),%rax
  41103d:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
  411041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411045:	48 89 50 20          	mov    %rdx,0x20(%rax)
  411049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41104d:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411051:	83 c8 40             	or     $0x40,%eax
  411054:	89 c2                	mov    %eax,%edx
  411056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41105a:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  41105e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  411062:	be 01 00 00 00       	mov    $0x1,%esi
  411067:	48 89 c7             	mov    %rax,%rdi
  41106a:	e8 0a 01 00 00       	callq  411179 <luaD_throw>
  41106f:	b8 01 00 00 00       	mov    $0x1,%eax
  411074:	c9                   	leaveq 
  411075:	c3                   	retq   

0000000000411076 <luaD_seterrorobj>:
  411076:	55                   	push   %rbp
  411077:	48 89 e5             	mov    %rsp,%rbp
  41107a:	48 83 ec 50          	sub    $0x50,%rsp
  41107e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  411082:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  411085:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  411089:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
  41108d:	74 15                	je     4110a4 <luaD_seterrorobj+0x2e>
  41108f:	83 7d c4 05          	cmpl   $0x5,-0x3c(%rbp)
  411093:	74 4e                	je     4110e3 <luaD_seterrorobj+0x6d>
  411095:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  411099:	0f 84 87 00 00 00    	je     411126 <luaD_seterrorobj+0xb0>
  41109f:	e9 8c 00 00 00       	jmpq   411130 <luaD_seterrorobj+0xba>
  4110a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4110a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4110ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4110b0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4110b4:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  4110bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4110bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4110c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4110c7:	48 89 10             	mov    %rdx,(%rax)
  4110ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4110ce:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4110d2:	83 c8 40             	or     $0x40,%eax
  4110d5:	89 c2                	mov    %eax,%edx
  4110d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4110db:	88 50 08             	mov    %dl,0x8(%rax)
  4110de:	e9 83 00 00 00       	jmpq   411166 <luaD_seterrorobj+0xf0>
  4110e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4110e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4110eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4110ef:	ba 17 00 00 00       	mov    $0x17,%edx
  4110f4:	be b8 e8 43 00       	mov    $0x43e8b8,%esi
  4110f9:	48 89 c7             	mov    %rax,%rdi
  4110fc:	e8 1a 5f 01 00       	callq  42701b <luaS_newlstr>
  411101:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  411105:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411109:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41110d:	48 89 10             	mov    %rdx,(%rax)
  411110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411114:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  411118:	83 c8 40             	or     $0x40,%eax
  41111b:	89 c2                	mov    %eax,%edx
  41111d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411121:	88 50 08             	mov    %dl,0x8(%rax)
  411124:	eb 40                	jmp    411166 <luaD_seterrorobj+0xf0>
  411126:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41112a:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  41112e:	eb 36                	jmp    411166 <luaD_seterrorobj+0xf0>
  411130:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411134:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  411138:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41113c:	48 8b 40 10          	mov    0x10(%rax),%rax
  411140:	48 83 e8 10          	sub    $0x10,%rax
  411144:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  411148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41114c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  411150:	48 8b 12             	mov    (%rdx),%rdx
  411153:	48 89 10             	mov    %rdx,(%rax)
  411156:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41115a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  41115e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411162:	88 50 08             	mov    %dl,0x8(%rax)
  411165:	90                   	nop
  411166:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41116a:	48 8d 50 10          	lea    0x10(%rax),%rdx
  41116e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  411172:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411176:	90                   	nop
  411177:	c9                   	leaveq 
  411178:	c3                   	retq   

0000000000411179 <luaD_throw>:
  411179:	55                   	push   %rbp
  41117a:	48 89 e5             	mov    %rsp,%rbp
  41117d:	48 83 ec 30          	sub    $0x30,%rsp
  411181:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411185:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  411188:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41118c:	48 8b 40 58          	mov    0x58(%rax),%rax
  411190:	48 85 c0             	test   %rax,%rax
  411193:	74 2a                	je     4111bf <luaD_throw+0x46>
  411195:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411199:	48 8b 40 58          	mov    0x58(%rax),%rax
  41119d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4111a0:	89 90 d0 00 00 00    	mov    %edx,0xd0(%rax)
  4111a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4111aa:	48 8b 40 58          	mov    0x58(%rax),%rax
  4111ae:	48 83 c0 08          	add    $0x8,%rax
  4111b2:	be 01 00 00 00       	mov    $0x1,%esi
  4111b7:	48 89 c7             	mov    %rax,%rdi
  4111ba:	e8 91 05 ff ff       	callq  401750 <longjmp@plt>
  4111bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4111c3:	48 8b 40 18          	mov    0x18(%rax),%rax
  4111c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4111cb:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4111ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4111d2:	89 d6                	mov    %edx,%esi
  4111d4:	48 89 c7             	mov    %rax,%rdi
  4111d7:	e8 2b 50 01 00       	callq  426207 <luaE_resetthread>
  4111dc:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4111df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111e3:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  4111ea:	48 8b 40 58          	mov    0x58(%rax),%rax
  4111ee:	48 85 c0             	test   %rax,%rax
  4111f1:	74 60                	je     411253 <luaD_throw+0xda>
  4111f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111f7:	48 8b 90 08 01 00 00 	mov    0x108(%rax),%rdx
  4111fe:	48 8b 42 10          	mov    0x10(%rdx),%rax
  411202:	48 8d 48 10          	lea    0x10(%rax),%rcx
  411206:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  41120a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41120e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411212:	48 8b 40 10          	mov    0x10(%rax),%rax
  411216:	48 83 e8 10          	sub    $0x10,%rax
  41121a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41121e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411222:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  411226:	48 8b 12             	mov    (%rdx),%rdx
  411229:	48 89 10             	mov    %rdx,(%rax)
  41122c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411230:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  411234:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411238:	88 50 08             	mov    %dl,0x8(%rax)
  41123b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41123f:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  411246:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  411249:	89 d6                	mov    %edx,%esi
  41124b:	48 89 c7             	mov    %rax,%rdi
  41124e:	e8 26 ff ff ff       	callq  411179 <luaD_throw>
  411253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411257:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
  41125e:	48 85 c0             	test   %rax,%rax
  411261:	74 14                	je     411277 <luaD_throw+0xfe>
  411263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411267:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
  41126e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411272:	48 89 d7             	mov    %rdx,%rdi
  411275:	ff d0                	callq  *%rax
  411277:	e8 44 05 ff ff       	callq  4017c0 <abort@plt>

000000000041127c <luaD_rawrunprotected>:
  41127c:	55                   	push   %rbp
  41127d:	48 89 e5             	mov    %rsp,%rbp
  411280:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
  411287:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  41128e:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  411295:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  41129c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4112a3:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  4112a9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4112ac:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  4112b3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4112ba:	48 8b 40 58          	mov    0x58(%rax),%rax
  4112be:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  4112c5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4112cc:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
  4112d3:	48 89 50 58          	mov    %rdx,0x58(%rax)
  4112d7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  4112de:	48 83 c0 08          	add    $0x8,%rax
  4112e2:	48 89 c7             	mov    %rax,%rdi
  4112e5:	e8 f6 06 ff ff       	callq  4019e0 <_setjmp@plt>
  4112ea:	85 c0                	test   %eax,%eax
  4112ec:	75 1d                	jne    41130b <luaD_rawrunprotected+0x8f>
  4112ee:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  4112f5:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  4112fc:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  411303:	48 89 ce             	mov    %rcx,%rsi
  411306:	48 89 d7             	mov    %rdx,%rdi
  411309:	ff d0                	callq  *%rax
  41130b:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  411312:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  411319:	48 89 50 58          	mov    %rdx,0x58(%rax)
  41131d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  411324:	8b 55 fc             	mov    -0x4(%rbp),%edx
  411327:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  41132d:	8b 45 f0             	mov    -0x10(%rbp),%eax
  411330:	c9                   	leaveq 
  411331:	c3                   	retq   

0000000000411332 <relstack>:
  411332:	55                   	push   %rbp
  411333:	48 89 e5             	mov    %rsp,%rbp
  411336:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41133a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41133e:	48 8b 50 10          	mov    0x10(%rax),%rdx
  411342:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411346:	48 8b 40 30          	mov    0x30(%rax),%rax
  41134a:	48 29 c2             	sub    %rax,%rdx
  41134d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411351:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411359:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41135d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411361:	48 8b 40 30          	mov    0x30(%rax),%rax
  411365:	48 29 c2             	sub    %rax,%rdx
  411368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41136c:	48 89 50 40          	mov    %rdx,0x40(%rax)
  411370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411374:	48 8b 40 38          	mov    0x38(%rax),%rax
  411378:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41137c:	eb 27                	jmp    4113a5 <relstack+0x73>
  41137e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411382:	48 8b 50 10          	mov    0x10(%rax),%rdx
  411386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41138a:	48 8b 40 30          	mov    0x30(%rax),%rax
  41138e:	48 29 c2             	sub    %rax,%rdx
  411391:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411395:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411399:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41139d:	48 8b 40 18          	mov    0x18(%rax),%rax
  4113a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4113a5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4113aa:	75 d2                	jne    41137e <relstack+0x4c>
  4113ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4113b0:	48 8b 40 20          	mov    0x20(%rax),%rax
  4113b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4113b8:	eb 40                	jmp    4113fa <relstack+0xc8>
  4113ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113be:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4113c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4113c6:	48 8b 40 30          	mov    0x30(%rax),%rax
  4113ca:	48 29 c2             	sub    %rax,%rdx
  4113cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113d1:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4113d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113d9:	48 8b 10             	mov    (%rax),%rdx
  4113dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4113e0:	48 8b 40 30          	mov    0x30(%rax),%rax
  4113e4:	48 29 c2             	sub    %rax,%rdx
  4113e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113eb:	48 89 10             	mov    %rdx,(%rax)
  4113ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113f2:	48 8b 40 10          	mov    0x10(%rax),%rax
  4113f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4113fa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4113ff:	75 b9                	jne    4113ba <relstack+0x88>
  411401:	90                   	nop
  411402:	5d                   	pop    %rbp
  411403:	c3                   	retq   

0000000000411404 <correctstack>:
  411404:	55                   	push   %rbp
  411405:	48 89 e5             	mov    %rsp,%rbp
  411408:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41140c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411410:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411418:	48 8b 40 10          	mov    0x10(%rax),%rax
  41141c:	48 01 c2             	add    %rax,%rdx
  41141f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411423:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41142b:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41142f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411433:	48 8b 40 40          	mov    0x40(%rax),%rax
  411437:	48 01 c2             	add    %rax,%rdx
  41143a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41143e:	48 89 50 40          	mov    %rdx,0x40(%rax)
  411442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411446:	48 8b 40 38          	mov    0x38(%rax),%rax
  41144a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41144e:	eb 2a                	jmp    41147a <correctstack+0x76>
  411450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411454:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411458:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41145c:	48 8b 40 10          	mov    0x10(%rax),%rax
  411460:	48 01 d0             	add    %rdx,%rax
  411463:	48 89 c2             	mov    %rax,%rdx
  411466:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41146a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  41146e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411472:	48 8b 40 18          	mov    0x18(%rax),%rax
  411476:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41147a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41147f:	75 cf                	jne    411450 <correctstack+0x4c>
  411481:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411485:	48 8b 40 20          	mov    0x20(%rax),%rax
  411489:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41148d:	eb 5d                	jmp    4114ec <correctstack+0xe8>
  41148f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411493:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41149b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41149f:	48 01 c2             	add    %rax,%rdx
  4114a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114a6:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4114aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4114ae:	48 8b 50 30          	mov    0x30(%rax),%rdx
  4114b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114b6:	48 8b 00             	mov    (%rax),%rax
  4114b9:	48 01 c2             	add    %rax,%rdx
  4114bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114c0:	48 89 10             	mov    %rdx,(%rax)
  4114c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114c7:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4114cb:	0f b7 c0             	movzwl %ax,%eax
  4114ce:	83 e0 02             	and    $0x2,%eax
  4114d1:	85 c0                	test   %eax,%eax
  4114d3:	75 0b                	jne    4114e0 <correctstack+0xdc>
  4114d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114d9:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
  4114e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4114e4:	48 8b 40 10          	mov    0x10(%rax),%rax
  4114e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4114ec:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4114f1:	75 9c                	jne    41148f <correctstack+0x8b>
  4114f3:	90                   	nop
  4114f4:	5d                   	pop    %rbp
  4114f5:	c3                   	retq   

00000000004114f6 <luaD_reallocstack>:
  4114f6:	55                   	push   %rbp
  4114f7:	48 89 e5             	mov    %rsp,%rbp
  4114fa:	48 83 ec 30          	sub    $0x30,%rsp
  4114fe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411502:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  411505:	89 55 d0             	mov    %edx,-0x30(%rbp)
  411508:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41150c:	48 8b 50 28          	mov    0x28(%rax),%rdx
  411510:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411514:	48 8b 40 30          	mov    0x30(%rax),%rax
  411518:	48 29 c2             	sub    %rax,%rdx
  41151b:	48 89 d0             	mov    %rdx,%rax
  41151e:	48 c1 f8 04          	sar    $0x4,%rax
  411522:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411525:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411529:	48 8b 40 18          	mov    0x18(%rax),%rax
  41152d:	0f b6 40 67          	movzbl 0x67(%rax),%eax
  411531:	0f b6 c0             	movzbl %al,%eax
  411534:	89 45 f4             	mov    %eax,-0xc(%rbp)
  411537:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41153b:	48 89 c7             	mov    %rax,%rdi
  41153e:	e8 ef fd ff ff       	callq  411332 <relstack>
  411543:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411547:	48 8b 40 18          	mov    0x18(%rax),%rax
  41154b:	c6 40 67 01          	movb   $0x1,0x67(%rax)
  41154f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  411552:	83 c0 05             	add    $0x5,%eax
  411555:	48 98                	cltq   
  411557:	48 c1 e0 04          	shl    $0x4,%rax
  41155b:	48 89 c1             	mov    %rax,%rcx
  41155e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411561:	83 c0 05             	add    $0x5,%eax
  411564:	48 98                	cltq   
  411566:	48 c1 e0 04          	shl    $0x4,%rax
  41156a:	48 89 c2             	mov    %rax,%rdx
  41156d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411571:	48 8b 70 30          	mov    0x30(%rax),%rsi
  411575:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411579:	48 89 c7             	mov    %rax,%rdi
  41157c:	e8 cf bb 00 00       	callq  41d150 <luaM_realloc_>
  411581:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411585:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411589:	48 8b 40 18          	mov    0x18(%rax),%rax
  41158d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  411590:	88 50 67             	mov    %dl,0x67(%rax)
  411593:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  411598:	0f 94 c0             	sete   %al
  41159b:	0f b6 c0             	movzbl %al,%eax
  41159e:	48 85 c0             	test   %rax,%rax
  4115a1:	74 2a                	je     4115cd <luaD_reallocstack+0xd7>
  4115a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115a7:	48 89 c7             	mov    %rax,%rdi
  4115aa:	e8 55 fe ff ff       	callq  411404 <correctstack>
  4115af:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
  4115b3:	74 11                	je     4115c6 <luaD_reallocstack+0xd0>
  4115b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115b9:	be 04 00 00 00       	mov    $0x4,%esi
  4115be:	48 89 c7             	mov    %rax,%rdi
  4115c1:	e8 b3 fb ff ff       	callq  411179 <luaD_throw>
  4115c6:	b8 00 00 00 00       	mov    $0x0,%eax
  4115cb:	eb 6b                	jmp    411638 <luaD_reallocstack+0x142>
  4115cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4115d5:	48 89 50 30          	mov    %rdx,0x30(%rax)
  4115d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115dd:	48 89 c7             	mov    %rax,%rdi
  4115e0:	e8 1f fe ff ff       	callq  411404 <correctstack>
  4115e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115e9:	48 8b 40 30          	mov    0x30(%rax),%rax
  4115ed:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4115f0:	48 63 d2             	movslq %edx,%rdx
  4115f3:	48 c1 e2 04          	shl    $0x4,%rdx
  4115f7:	48 01 c2             	add    %rax,%rdx
  4115fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115fe:	48 89 50 28          	mov    %rdx,0x28(%rax)
  411602:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411605:	83 c0 05             	add    $0x5,%eax
  411608:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41160b:	eb 1b                	jmp    411628 <luaD_reallocstack+0x132>
  41160d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411610:	48 98                	cltq   
  411612:	48 c1 e0 04          	shl    $0x4,%rax
  411616:	48 89 c2             	mov    %rax,%rdx
  411619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41161d:	48 01 d0             	add    %rdx,%rax
  411620:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  411624:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  411628:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  41162b:	83 c0 04             	add    $0x4,%eax
  41162e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  411631:	7e da                	jle    41160d <luaD_reallocstack+0x117>
  411633:	b8 01 00 00 00       	mov    $0x1,%eax
  411638:	c9                   	leaveq 
  411639:	c3                   	retq   

000000000041163a <luaD_growstack>:
  41163a:	55                   	push   %rbp
  41163b:	48 89 e5             	mov    %rsp,%rbp
  41163e:	48 83 ec 20          	sub    $0x20,%rsp
  411642:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411646:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  411649:	89 55 e0             	mov    %edx,-0x20(%rbp)
  41164c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411650:	48 8b 50 28          	mov    0x28(%rax),%rdx
  411654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411658:	48 8b 40 30          	mov    0x30(%rax),%rax
  41165c:	48 29 c2             	sub    %rax,%rdx
  41165f:	48 89 d0             	mov    %rdx,%rax
  411662:	48 c1 f8 04          	sar    $0x4,%rax
  411666:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411669:	81 7d f8 40 42 0f 00 	cmpl   $0xf4240,-0x8(%rbp)
  411670:	0f 9f c0             	setg   %al
  411673:	0f b6 c0             	movzbl %al,%eax
  411676:	48 85 c0             	test   %rax,%rax
  411679:	74 21                	je     41169c <luaD_growstack+0x62>
  41167b:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  41167f:	74 11                	je     411692 <luaD_growstack+0x58>
  411681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411685:	be 05 00 00 00       	mov    $0x5,%esi
  41168a:	48 89 c7             	mov    %rax,%rdi
  41168d:	e8 e7 fa ff ff       	callq  411179 <luaD_throw>
  411692:	b8 00 00 00 00       	mov    $0x0,%eax
  411697:	e9 b0 00 00 00       	jmpq   41174c <luaD_growstack+0x112>
  41169c:	81 7d e4 3f 42 0f 00 	cmpl   $0xf423f,-0x1c(%rbp)
  4116a3:	7f 72                	jg     411717 <luaD_growstack+0xdd>
  4116a5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4116a8:	01 c0                	add    %eax,%eax
  4116aa:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4116ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4116b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4116b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4116b9:	48 8b 40 30          	mov    0x30(%rax),%rax
  4116bd:	48 29 c2             	sub    %rax,%rdx
  4116c0:	48 89 d0             	mov    %rdx,%rax
  4116c3:	48 c1 f8 04          	sar    $0x4,%rax
  4116c7:	89 c2                	mov    %eax,%edx
  4116c9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4116cc:	01 d0                	add    %edx,%eax
  4116ce:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4116d1:	81 7d fc 40 42 0f 00 	cmpl   $0xf4240,-0x4(%rbp)
  4116d8:	7e 07                	jle    4116e1 <luaD_growstack+0xa7>
  4116da:	c7 45 fc 40 42 0f 00 	movl   $0xf4240,-0x4(%rbp)
  4116e1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4116e4:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  4116e7:	7d 06                	jge    4116ef <luaD_growstack+0xb5>
  4116e9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4116ec:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4116ef:	81 7d fc 40 42 0f 00 	cmpl   $0xf4240,-0x4(%rbp)
  4116f6:	0f 9e c0             	setle  %al
  4116f9:	0f b6 c0             	movzbl %al,%eax
  4116fc:	48 85 c0             	test   %rax,%rax
  4116ff:	74 16                	je     411717 <luaD_growstack+0xdd>
  411701:	8b 55 e0             	mov    -0x20(%rbp),%edx
  411704:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  411707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41170b:	89 ce                	mov    %ecx,%esi
  41170d:	48 89 c7             	mov    %rax,%rdi
  411710:	e8 e1 fd ff ff       	callq  4114f6 <luaD_reallocstack>
  411715:	eb 35                	jmp    41174c <luaD_growstack+0x112>
  411717:	8b 55 e0             	mov    -0x20(%rbp),%edx
  41171a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41171e:	be 08 43 0f 00       	mov    $0xf4308,%esi
  411723:	48 89 c7             	mov    %rax,%rdi
  411726:	e8 cb fd ff ff       	callq  4114f6 <luaD_reallocstack>
  41172b:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  41172f:	74 16                	je     411747 <luaD_growstack+0x10d>
  411731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411735:	be d0 e8 43 00       	mov    $0x43e8d0,%esi
  41173a:	48 89 c7             	mov    %rax,%rdi
  41173d:	b8 00 00 00 00       	mov    $0x0,%eax
  411742:	e8 32 f4 ff ff       	callq  410b79 <luaG_runerror>
  411747:	b8 00 00 00 00       	mov    $0x0,%eax
  41174c:	c9                   	leaveq 
  41174d:	c3                   	retq   

000000000041174e <stackinuse>:
  41174e:	55                   	push   %rbp
  41174f:	48 89 e5             	mov    %rsp,%rbp
  411752:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411756:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41175a:	48 8b 40 10          	mov    0x10(%rax),%rax
  41175e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411762:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411766:	48 8b 40 20          	mov    0x20(%rax),%rax
  41176a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41176e:	eb 26                	jmp    411796 <stackinuse+0x48>
  411770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411774:	48 8b 40 08          	mov    0x8(%rax),%rax
  411778:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  41177c:	73 0c                	jae    41178a <stackinuse+0x3c>
  41177e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411782:	48 8b 40 08          	mov    0x8(%rax),%rax
  411786:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41178a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41178e:	48 8b 40 10          	mov    0x10(%rax),%rax
  411792:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411796:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41179b:	75 d3                	jne    411770 <stackinuse+0x22>
  41179d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4117a1:	48 8b 40 30          	mov    0x30(%rax),%rax
  4117a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4117a9:	48 29 c2             	sub    %rax,%rdx
  4117ac:	48 89 d0             	mov    %rdx,%rax
  4117af:	48 c1 f8 04          	sar    $0x4,%rax
  4117b3:	83 c0 01             	add    $0x1,%eax
  4117b6:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4117b9:	83 7d f4 13          	cmpl   $0x13,-0xc(%rbp)
  4117bd:	7f 07                	jg     4117c6 <stackinuse+0x78>
  4117bf:	c7 45 f4 14 00 00 00 	movl   $0x14,-0xc(%rbp)
  4117c6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4117c9:	5d                   	pop    %rbp
  4117ca:	c3                   	retq   

00000000004117cb <luaD_shrinkstack>:
  4117cb:	55                   	push   %rbp
  4117cc:	48 89 e5             	mov    %rsp,%rbp
  4117cf:	48 83 ec 20          	sub    $0x20,%rsp
  4117d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4117d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4117db:	48 89 c7             	mov    %rax,%rdi
  4117de:	e8 6b ff ff ff       	callq  41174e <stackinuse>
  4117e3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4117e6:	81 7d fc 15 16 05 00 	cmpl   $0x51615,-0x4(%rbp)
  4117ed:	7f 0b                	jg     4117fa <luaD_shrinkstack+0x2f>
  4117ef:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4117f2:	89 d0                	mov    %edx,%eax
  4117f4:	01 c0                	add    %eax,%eax
  4117f6:	01 d0                	add    %edx,%eax
  4117f8:	eb 05                	jmp    4117ff <luaD_shrinkstack+0x34>
  4117fa:	b8 40 42 0f 00       	mov    $0xf4240,%eax
  4117ff:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411802:	81 7d fc 40 42 0f 00 	cmpl   $0xf4240,-0x4(%rbp)
  411809:	7f 4d                	jg     411858 <luaD_shrinkstack+0x8d>
  41180b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41180f:	48 8b 50 28          	mov    0x28(%rax),%rdx
  411813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411817:	48 8b 40 30          	mov    0x30(%rax),%rax
  41181b:	48 29 c2             	sub    %rax,%rdx
  41181e:	48 89 d0             	mov    %rdx,%rax
  411821:	48 c1 f8 04          	sar    $0x4,%rax
  411825:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  411828:	7d 2e                	jge    411858 <luaD_shrinkstack+0x8d>
  41182a:	81 7d fc 20 a1 07 00 	cmpl   $0x7a120,-0x4(%rbp)
  411831:	7f 07                	jg     41183a <luaD_shrinkstack+0x6f>
  411833:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411836:	01 c0                	add    %eax,%eax
  411838:	eb 05                	jmp    41183f <luaD_shrinkstack+0x74>
  41183a:	b8 40 42 0f 00       	mov    $0xf4240,%eax
  41183f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  411842:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  411845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411849:	ba 00 00 00 00       	mov    $0x0,%edx
  41184e:	89 ce                	mov    %ecx,%esi
  411850:	48 89 c7             	mov    %rax,%rdi
  411853:	e8 9e fc ff ff       	callq  4114f6 <luaD_reallocstack>
  411858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41185c:	48 89 c7             	mov    %rax,%rdi
  41185f:	e8 46 42 01 00       	callq  425aaa <luaE_shrinkCI>
  411864:	90                   	nop
  411865:	c9                   	leaveq 
  411866:	c3                   	retq   

0000000000411867 <luaD_inctop>:
  411867:	55                   	push   %rbp
  411868:	48 89 e5             	mov    %rsp,%rbp
  41186b:	48 83 ec 10          	sub    $0x10,%rsp
  41186f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411877:	48 8b 50 28          	mov    0x28(%rax),%rdx
  41187b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41187f:	48 8b 40 10          	mov    0x10(%rax),%rax
  411883:	48 29 c2             	sub    %rax,%rdx
  411886:	48 89 d0             	mov    %rdx,%rax
  411889:	48 83 f8 10          	cmp    $0x10,%rax
  41188d:	0f 9e c0             	setle  %al
  411890:	0f b6 c0             	movzbl %al,%eax
  411893:	48 85 c0             	test   %rax,%rax
  411896:	74 16                	je     4118ae <luaD_inctop+0x47>
  411898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41189c:	ba 01 00 00 00       	mov    $0x1,%edx
  4118a1:	be 01 00 00 00       	mov    $0x1,%esi
  4118a6:	48 89 c7             	mov    %rax,%rdi
  4118a9:	e8 8c fd ff ff       	callq  41163a <luaD_growstack>
  4118ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4118b2:	48 8b 40 10          	mov    0x10(%rax),%rax
  4118b6:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4118ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4118be:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4118c2:	90                   	nop
  4118c3:	c9                   	leaveq 
  4118c4:	c3                   	retq   

00000000004118c5 <luaD_hook>:
  4118c5:	55                   	push   %rbp
  4118c6:	48 89 e5             	mov    %rsp,%rbp
  4118c9:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
  4118d0:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  4118d7:	89 b5 44 ff ff ff    	mov    %esi,-0xbc(%rbp)
  4118dd:	89 95 40 ff ff ff    	mov    %edx,-0xc0(%rbp)
  4118e3:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  4118e9:	44 89 85 38 ff ff ff 	mov    %r8d,-0xc8(%rbp)
  4118f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4118f7:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
  4118fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411902:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  411907:	0f 84 09 02 00 00    	je     411b16 <luaD_hook+0x251>
  41190d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411914:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  411918:	84 c0                	test   %al,%al
  41191a:	0f 84 f6 01 00 00    	je     411b16 <luaD_hook+0x251>
  411920:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%rbp)
  411927:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  41192e:	48 8b 40 20          	mov    0x20(%rax),%rax
  411932:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411936:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  41193d:	48 8b 50 10          	mov    0x10(%rax),%rdx
  411941:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411948:	48 8b 40 30          	mov    0x30(%rax),%rax
  41194c:	48 29 c2             	sub    %rax,%rdx
  41194f:	48 89 d0             	mov    %rdx,%rax
  411952:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  411956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41195a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41195e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411965:	48 8b 40 30          	mov    0x30(%rax),%rax
  411969:	48 29 c2             	sub    %rax,%rdx
  41196c:	48 89 d0             	mov    %rdx,%rax
  41196f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  411973:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  411979:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  41197f:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
  411985:	89 45 80             	mov    %eax,-0x80(%rbp)
  411988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41198c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  411990:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)
  411997:	74 27                	je     4119c0 <luaD_hook+0xfb>
  411999:	81 4d fc 00 01 00 00 	orl    $0x100,-0x4(%rbp)
  4119a0:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  4119a6:	89 c2                	mov    %eax,%edx
  4119a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119ac:	66 89 50 38          	mov    %dx,0x38(%rax)
  4119b0:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
  4119b6:	89 c2                	mov    %eax,%edx
  4119b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119bc:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  4119c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119c4:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4119c8:	0f b7 c0             	movzwl %ax,%eax
  4119cb:	83 e0 02             	and    $0x2,%eax
  4119ce:	85 c0                	test   %eax,%eax
  4119d0:	75 2b                	jne    4119fd <luaD_hook+0x138>
  4119d2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4119d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4119dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119e1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4119e5:	48 39 c2             	cmp    %rax,%rdx
  4119e8:	73 13                	jae    4119fd <luaD_hook+0x138>
  4119ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119ee:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4119f2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4119f9:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4119fd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a04:	48 8b 50 28          	mov    0x28(%rax),%rdx
  411a08:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a0f:	48 8b 40 10          	mov    0x10(%rax),%rax
  411a13:	48 29 c2             	sub    %rax,%rdx
  411a16:	48 89 d0             	mov    %rdx,%rax
  411a19:	48 3d 40 01 00 00    	cmp    $0x140,%rax
  411a1f:	0f 9e c0             	setle  %al
  411a22:	0f b6 c0             	movzbl %al,%eax
  411a25:	48 85 c0             	test   %rax,%rax
  411a28:	74 19                	je     411a43 <luaD_hook+0x17e>
  411a2a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a31:	ba 01 00 00 00       	mov    $0x1,%edx
  411a36:	be 14 00 00 00       	mov    $0x14,%esi
  411a3b:	48 89 c7             	mov    %rax,%rdi
  411a3e:	e8 f7 fb ff ff       	callq  41163a <luaD_growstack>
  411a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a47:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411a4b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a52:	48 8b 40 10          	mov    0x10(%rax),%rax
  411a56:	48 05 40 01 00 00    	add    $0x140,%rax
  411a5c:	48 39 c2             	cmp    %rax,%rdx
  411a5f:	73 1a                	jae    411a7b <luaD_hook+0x1b6>
  411a61:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a68:	48 8b 40 10          	mov    0x10(%rax),%rax
  411a6c:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
  411a73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a77:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411a7b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411a82:	c6 40 0b 00          	movb   $0x0,0xb(%rax)
  411a86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a8a:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411a8e:	89 c2                	mov    %eax,%edx
  411a90:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411a93:	09 d0                	or     %edx,%eax
  411a95:	89 c2                	mov    %eax,%edx
  411a97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a9b:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  411a9f:	48 8d 8d 50 ff ff ff 	lea    -0xb0(%rbp),%rcx
  411aa6:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  411aad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411ab1:	48 89 ce             	mov    %rcx,%rsi
  411ab4:	48 89 d7             	mov    %rdx,%rdi
  411ab7:	ff d0                	callq  *%rax
  411ab9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411ac0:	c6 40 0b 01          	movb   $0x1,0xb(%rax)
  411ac4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411acb:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411acf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411ad3:	48 01 c2             	add    %rax,%rdx
  411ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ada:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411ade:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411ae5:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411ae9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411aed:	48 01 c2             	add    %rax,%rdx
  411af0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411af7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411afb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411aff:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411b03:	89 c2                	mov    %eax,%edx
  411b05:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411b08:	f7 d0                	not    %eax
  411b0a:	21 d0                	and    %edx,%eax
  411b0c:	89 c2                	mov    %eax,%edx
  411b0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411b12:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  411b16:	90                   	nop
  411b17:	c9                   	leaveq 
  411b18:	c3                   	retq   

0000000000411b19 <luaD_hookcall>:
  411b19:	55                   	push   %rbp
  411b1a:	48 89 e5             	mov    %rsp,%rbp
  411b1d:	48 83 ec 20          	sub    $0x20,%rsp
  411b21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411b25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  411b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411b2d:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%rax)
  411b34:	00 00 00 
  411b37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411b3b:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  411b41:	83 e0 01             	and    $0x1,%eax
  411b44:	85 c0                	test   %eax,%eax
  411b46:	74 75                	je     411bbd <luaD_hookcall+0xa4>
  411b48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411b4c:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411b50:	0f b7 c0             	movzwl %ax,%eax
  411b53:	c1 f8 03             	sar    $0x3,%eax
  411b56:	83 e0 04             	and    $0x4,%eax
  411b59:	89 45 fc             	mov    %eax,-0x4(%rbp)
  411b5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411b60:	48 8b 00             	mov    (%rax),%rax
  411b63:	48 8b 00             	mov    (%rax),%rax
  411b66:	48 8b 40 18          	mov    0x18(%rax),%rax
  411b6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411b6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411b72:	48 8b 40 20          	mov    0x20(%rax),%rax
  411b76:	48 8d 50 04          	lea    0x4(%rax),%rdx
  411b7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411b7e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  411b82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b86:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  411b8a:	0f b6 d0             	movzbl %al,%edx
  411b8d:	8b 75 fc             	mov    -0x4(%rbp),%esi
  411b90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411b94:	41 89 d0             	mov    %edx,%r8d
  411b97:	b9 01 00 00 00       	mov    $0x1,%ecx
  411b9c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  411ba1:	48 89 c7             	mov    %rax,%rdi
  411ba4:	e8 1c fd ff ff       	callq  4118c5 <luaD_hook>
  411ba9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411bad:	48 8b 40 20          	mov    0x20(%rax),%rax
  411bb1:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
  411bb5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411bb9:	48 89 50 20          	mov    %rdx,0x20(%rax)
  411bbd:	90                   	nop
  411bbe:	c9                   	leaveq 
  411bbf:	c3                   	retq   

0000000000411bc0 <rethook>:
  411bc0:	55                   	push   %rbp
  411bc1:	48 89 e5             	mov    %rsp,%rbp
  411bc4:	48 83 ec 40          	sub    $0x40,%rsp
  411bc8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411bcc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  411bd0:	89 55 cc             	mov    %edx,-0x34(%rbp)
  411bd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411bd7:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  411bdd:	83 e0 02             	and    $0x2,%eax
  411be0:	85 c0                	test   %eax,%eax
  411be2:	0f 84 e2 00 00 00    	je     411cca <rethook+0x10a>
  411be8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411bec:	48 8b 40 10          	mov    0x10(%rax),%rax
  411bf0:	8b 55 cc             	mov    -0x34(%rbp),%edx
  411bf3:	48 63 d2             	movslq %edx,%rdx
  411bf6:	48 c1 e2 04          	shl    $0x4,%rdx
  411bfa:	48 f7 da             	neg    %rdx
  411bfd:	48 01 d0             	add    %rdx,%rax
  411c00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411c04:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  411c0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c0f:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411c13:	0f b7 c0             	movzwl %ax,%eax
  411c16:	83 e0 02             	and    $0x2,%eax
  411c19:	85 c0                	test   %eax,%eax
  411c1b:	75 38                	jne    411c55 <rethook+0x95>
  411c1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c21:	48 8b 00             	mov    (%rax),%rax
  411c24:	48 8b 00             	mov    (%rax),%rax
  411c27:	48 8b 40 18          	mov    0x18(%rax),%rax
  411c2b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411c2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411c33:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  411c37:	84 c0                	test   %al,%al
  411c39:	74 1a                	je     411c55 <rethook+0x95>
  411c3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c3f:	8b 50 2c             	mov    0x2c(%rax),%edx
  411c42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411c46:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  411c4a:	0f b6 c0             	movzbl %al,%eax
  411c4d:	01 d0                	add    %edx,%eax
  411c4f:	83 c0 01             	add    $0x1,%eax
  411c52:	89 45 fc             	mov    %eax,-0x4(%rbp)
  411c55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c59:	48 8b 00             	mov    (%rax),%rax
  411c5c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  411c5f:	48 63 d2             	movslq %edx,%rdx
  411c62:	48 c1 e2 04          	shl    $0x4,%rdx
  411c66:	48 01 c2             	add    %rax,%rdx
  411c69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c6d:	48 89 10             	mov    %rdx,(%rax)
  411c70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411c74:	48 8b 00             	mov    (%rax),%rax
  411c77:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  411c7b:	48 29 c2             	sub    %rax,%rdx
  411c7e:	48 89 d0             	mov    %rdx,%rax
  411c81:	48 c1 f8 04          	sar    $0x4,%rax
  411c85:	0f b7 c0             	movzwl %ax,%eax
  411c88:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  411c8b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  411c8e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  411c91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411c95:	41 89 c8             	mov    %ecx,%r8d
  411c98:	89 d1                	mov    %edx,%ecx
  411c9a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  411c9f:	be 01 00 00 00       	mov    $0x1,%esi
  411ca4:	48 89 c7             	mov    %rax,%rdi
  411ca7:	e8 19 fc ff ff       	callq  4118c5 <luaD_hook>
  411cac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cb0:	48 8b 00             	mov    (%rax),%rax
  411cb3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  411cb6:	48 63 d2             	movslq %edx,%rdx
  411cb9:	48 c1 e2 04          	shl    $0x4,%rdx
  411cbd:	48 f7 da             	neg    %rdx
  411cc0:	48 01 c2             	add    %rax,%rdx
  411cc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cc7:	48 89 10             	mov    %rdx,(%rax)
  411cca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cce:	48 8b 40 10          	mov    0x10(%rax),%rax
  411cd2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  411cd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cda:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  411cde:	0f b7 c0             	movzwl %ax,%eax
  411ce1:	83 e0 02             	and    $0x2,%eax
  411ce4:	85 c0                	test   %eax,%eax
  411ce6:	75 31                	jne    411d19 <rethook+0x159>
  411ce8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cec:	48 8b 50 20          	mov    0x20(%rax),%rdx
  411cf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411cf4:	48 8b 00             	mov    (%rax),%rax
  411cf7:	48 8b 00             	mov    (%rax),%rax
  411cfa:	48 8b 40 18          	mov    0x18(%rax),%rax
  411cfe:	48 8b 40 40          	mov    0x40(%rax),%rax
  411d02:	48 29 c2             	sub    %rax,%rdx
  411d05:	48 89 d0             	mov    %rdx,%rax
  411d08:	48 c1 f8 02          	sar    $0x2,%rax
  411d0c:	8d 50 ff             	lea    -0x1(%rax),%edx
  411d0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411d13:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
  411d19:	90                   	nop
  411d1a:	c9                   	leaveq 
  411d1b:	c3                   	retq   

0000000000411d1c <luaD_tryfuncTM>:
  411d1c:	55                   	push   %rbp
  411d1d:	48 89 e5             	mov    %rsp,%rbp
  411d20:	48 83 ec 50          	sub    $0x50,%rsp
  411d24:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  411d28:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  411d2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d30:	48 8b 50 28          	mov    0x28(%rax),%rdx
  411d34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d38:	48 8b 40 10          	mov    0x10(%rax),%rax
  411d3c:	48 29 c2             	sub    %rax,%rdx
  411d3f:	48 89 d0             	mov    %rdx,%rax
  411d42:	48 83 f8 10          	cmp    $0x10,%rax
  411d46:	0f 9e c0             	setle  %al
  411d49:	0f b6 c0             	movzbl %al,%eax
  411d4c:	48 85 c0             	test   %rax,%rax
  411d4f:	74 5c                	je     411dad <luaD_tryfuncTM+0x91>
  411d51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d55:	48 8b 40 30          	mov    0x30(%rax),%rax
  411d59:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  411d5d:	48 29 c2             	sub    %rax,%rdx
  411d60:	48 89 d0             	mov    %rdx,%rax
  411d63:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411d67:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d6b:	48 8b 40 18          	mov    0x18(%rax),%rax
  411d6f:	48 8b 40 18          	mov    0x18(%rax),%rax
  411d73:	48 85 c0             	test   %rax,%rax
  411d76:	7e 0c                	jle    411d84 <luaD_tryfuncTM+0x68>
  411d78:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d7c:	48 89 c7             	mov    %rax,%rdi
  411d7f:	e8 d4 65 00 00       	callq  418358 <luaC_step>
  411d84:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d88:	ba 01 00 00 00       	mov    $0x1,%edx
  411d8d:	be 01 00 00 00       	mov    $0x1,%esi
  411d92:	48 89 c7             	mov    %rax,%rdi
  411d95:	e8 a0 f8 ff ff       	callq  41163a <luaD_growstack>
  411d9a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411d9e:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411da2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411da6:	48 01 d0             	add    %rdx,%rax
  411da9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  411dad:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  411db1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411db5:	ba 17 00 00 00       	mov    $0x17,%edx
  411dba:	48 89 ce             	mov    %rcx,%rsi
  411dbd:	48 89 c7             	mov    %rax,%rdi
  411dc0:	e8 7a d0 01 00       	callq  42ee3f <luaT_gettmbyobj>
  411dc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411dc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411dcd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  411dd1:	0f b6 c0             	movzbl %al,%eax
  411dd4:	83 e0 0f             	and    $0xf,%eax
  411dd7:	85 c0                	test   %eax,%eax
  411dd9:	0f 94 c0             	sete   %al
  411ddc:	0f b6 c0             	movzbl %al,%eax
  411ddf:	48 85 c0             	test   %rax,%rax
  411de2:	74 13                	je     411df7 <luaD_tryfuncTM+0xdb>
  411de4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  411de8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411dec:	48 89 d6             	mov    %rdx,%rsi
  411def:	48 89 c7             	mov    %rax,%rdi
  411df2:	e8 a0 e9 ff ff       	callq  410797 <luaG_callerror>
  411df7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411dfb:	48 8b 40 10          	mov    0x10(%rax),%rax
  411dff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411e03:	eb 36                	jmp    411e3b <luaD_tryfuncTM+0x11f>
  411e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411e09:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  411e0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411e11:	48 83 e8 10          	sub    $0x10,%rax
  411e15:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  411e19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411e1d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411e21:	48 8b 12             	mov    (%rdx),%rdx
  411e24:	48 89 10             	mov    %rdx,(%rax)
  411e27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411e2b:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  411e2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411e33:	88 50 08             	mov    %dl,0x8(%rax)
  411e36:	48 83 6d f8 10       	subq   $0x10,-0x8(%rbp)
  411e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411e3f:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
  411e43:	77 c0                	ja     411e05 <luaD_tryfuncTM+0xe9>
  411e45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411e49:	48 8b 40 10          	mov    0x10(%rax),%rax
  411e4d:	48 8d 50 10          	lea    0x10(%rax),%rdx
  411e51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411e55:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411e59:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  411e5d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  411e61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e65:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  411e69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411e6d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  411e71:	48 8b 12             	mov    (%rdx),%rdx
  411e74:	48 89 10             	mov    %rdx,(%rax)
  411e77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  411e7b:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  411e7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  411e83:	88 50 08             	mov    %dl,0x8(%rax)
  411e86:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  411e8a:	c9                   	leaveq 
  411e8b:	c3                   	retq   

0000000000411e8c <moveresults>:
  411e8c:	55                   	push   %rbp
  411e8d:	48 89 e5             	mov    %rsp,%rbp
  411e90:	48 83 ec 60          	sub    $0x60,%rsp
  411e94:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  411e98:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  411e9c:	89 55 ac             	mov    %edx,-0x54(%rbp)
  411e9f:	89 4d a8             	mov    %ecx,-0x58(%rbp)
  411ea2:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
  411ea6:	74 11                	je     411eb9 <moveresults+0x2d>
  411ea8:	83 7d a8 01          	cmpl   $0x1,-0x58(%rbp)
  411eac:	74 1c                	je     411eca <moveresults+0x3e>
  411eae:	83 7d a8 ff          	cmpl   $0xffffffff,-0x58(%rbp)
  411eb2:	74 7c                	je     411f30 <moveresults+0xa4>
  411eb4:	e9 82 00 00 00       	jmpq   411f3b <moveresults+0xaf>
  411eb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411ebd:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  411ec1:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411ec5:	e9 10 02 00 00       	jmpq   4120da <moveresults+0x24e>
  411eca:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  411ece:	75 0a                	jne    411eda <moveresults+0x4e>
  411ed0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  411ed4:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  411ed8:	eb 41                	jmp    411f1b <moveresults+0x8f>
  411eda:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  411ede:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411ee2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411ee6:	48 8b 40 10          	mov    0x10(%rax),%rax
  411eea:	8b 55 ac             	mov    -0x54(%rbp),%edx
  411eed:	48 63 d2             	movslq %edx,%rdx
  411ef0:	48 c1 e2 04          	shl    $0x4,%rdx
  411ef4:	48 f7 da             	neg    %rdx
  411ef7:	48 01 d0             	add    %rdx,%rax
  411efa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411efe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411f02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  411f06:	48 8b 12             	mov    (%rdx),%rdx
  411f09:	48 89 10             	mov    %rdx,(%rax)
  411f0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f10:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  411f14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411f18:	88 50 08             	mov    %dl,0x8(%rax)
  411f1b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  411f1f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  411f23:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f27:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411f2b:	e9 aa 01 00 00       	jmpq   4120da <moveresults+0x24e>
  411f30:	8b 45 ac             	mov    -0x54(%rbp),%eax
  411f33:	89 45 a8             	mov    %eax,-0x58(%rbp)
  411f36:	e9 d5 00 00 00       	jmpq   412010 <moveresults+0x184>
  411f3b:	83 7d a8 ff          	cmpl   $0xffffffff,-0x58(%rbp)
  411f3f:	0f 8d ca 00 00 00    	jge    41200f <moveresults+0x183>
  411f45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f49:	48 8b 40 20          	mov    0x20(%rax),%rax
  411f4d:	0f b7 50 3e          	movzwl 0x3e(%rax),%edx
  411f51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f55:	48 8b 40 20          	mov    0x20(%rax),%rax
  411f59:	80 ce 02             	or     $0x2,%dh
  411f5c:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  411f60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f64:	48 8b 40 20          	mov    0x20(%rax),%rax
  411f68:	8b 55 ac             	mov    -0x54(%rbp),%edx
  411f6b:	89 50 38             	mov    %edx,0x38(%rax)
  411f6e:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  411f72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f76:	b9 01 00 00 00       	mov    $0x1,%ecx
  411f7b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  411f80:	48 89 c7             	mov    %rax,%rdi
  411f83:	e8 15 26 00 00       	callq  41459d <luaF_close>
  411f88:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  411f8c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f90:	48 8b 40 20          	mov    0x20(%rax),%rax
  411f94:	0f b7 50 3e          	movzwl 0x3e(%rax),%edx
  411f98:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411f9c:	48 8b 40 20          	mov    0x20(%rax),%rax
  411fa0:	80 e6 fd             	and    $0xfd,%dh
  411fa3:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  411fa7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411fab:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  411fb1:	85 c0                	test   %eax,%eax
  411fb3:	74 43                	je     411ff8 <moveresults+0x16c>
  411fb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411fb9:	48 8b 40 30          	mov    0x30(%rax),%rax
  411fbd:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  411fc1:	48 29 c2             	sub    %rax,%rdx
  411fc4:	48 89 d0             	mov    %rdx,%rax
  411fc7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  411fcb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411fcf:	48 8b 48 20          	mov    0x20(%rax),%rcx
  411fd3:	8b 55 ac             	mov    -0x54(%rbp),%edx
  411fd6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411fda:	48 89 ce             	mov    %rcx,%rsi
  411fdd:	48 89 c7             	mov    %rax,%rdi
  411fe0:	e8 db fb ff ff       	callq  411bc0 <rethook>
  411fe5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  411fe9:	48 8b 50 30          	mov    0x30(%rax),%rdx
  411fed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411ff1:	48 01 d0             	add    %rdx,%rax
  411ff4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  411ff8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
  411ffd:	2b 45 a8             	sub    -0x58(%rbp),%eax
  412000:	89 45 a8             	mov    %eax,-0x58(%rbp)
  412003:	83 7d a8 ff          	cmpl   $0xffffffff,-0x58(%rbp)
  412007:	75 06                	jne    41200f <moveresults+0x183>
  412009:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41200c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  41200f:	90                   	nop
  412010:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  412014:	48 8b 40 10          	mov    0x10(%rax),%rax
  412018:	8b 55 ac             	mov    -0x54(%rbp),%edx
  41201b:	48 63 d2             	movslq %edx,%rdx
  41201e:	48 c1 e2 04          	shl    $0x4,%rdx
  412022:	48 f7 da             	neg    %rdx
  412025:	48 01 d0             	add    %rdx,%rax
  412028:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41202c:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41202f:	3b 45 a8             	cmp    -0x58(%rbp),%eax
  412032:	7e 06                	jle    41203a <moveresults+0x1ae>
  412034:	8b 45 a8             	mov    -0x58(%rbp),%eax
  412037:	89 45 ac             	mov    %eax,-0x54(%rbp)
  41203a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  412041:	eb 4f                	jmp    412092 <moveresults+0x206>
  412043:	8b 45 fc             	mov    -0x4(%rbp),%eax
  412046:	48 98                	cltq   
  412048:	48 c1 e0 04          	shl    $0x4,%rax
  41204c:	48 89 c2             	mov    %rax,%rdx
  41204f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412053:	48 01 d0             	add    %rdx,%rax
  412056:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41205a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41205d:	48 98                	cltq   
  41205f:	48 c1 e0 04          	shl    $0x4,%rax
  412063:	48 89 c2             	mov    %rax,%rdx
  412066:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41206a:	48 01 d0             	add    %rdx,%rax
  41206d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  412071:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412075:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  412079:	48 8b 12             	mov    (%rdx),%rdx
  41207c:	48 89 10             	mov    %rdx,(%rax)
  41207f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412083:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  412087:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41208b:	88 50 08             	mov    %dl,0x8(%rax)
  41208e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  412092:	8b 45 fc             	mov    -0x4(%rbp),%eax
  412095:	3b 45 ac             	cmp    -0x54(%rbp),%eax
  412098:	7c a9                	jl     412043 <moveresults+0x1b7>
  41209a:	eb 1b                	jmp    4120b7 <moveresults+0x22b>
  41209c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41209f:	48 98                	cltq   
  4120a1:	48 c1 e0 04          	shl    $0x4,%rax
  4120a5:	48 89 c2             	mov    %rax,%rdx
  4120a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4120ac:	48 01 d0             	add    %rdx,%rax
  4120af:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4120b3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4120b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4120ba:	3b 45 a8             	cmp    -0x58(%rbp),%eax
  4120bd:	7c dd                	jl     41209c <moveresults+0x210>
  4120bf:	8b 45 a8             	mov    -0x58(%rbp),%eax
  4120c2:	48 98                	cltq   
  4120c4:	48 c1 e0 04          	shl    $0x4,%rax
  4120c8:	48 89 c2             	mov    %rax,%rdx
  4120cb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4120cf:	48 01 c2             	add    %rax,%rdx
  4120d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4120d6:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4120da:	c9                   	leaveq 
  4120db:	c3                   	retq   

00000000004120dc <luaD_poscall>:
  4120dc:	55                   	push   %rbp
  4120dd:	48 89 e5             	mov    %rsp,%rbp
  4120e0:	48 83 ec 30          	sub    $0x30,%rsp
  4120e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4120e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4120ec:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4120ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4120f3:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
  4120f7:	98                   	cwtl   
  4120f8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4120fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4120ff:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  412105:	85 c0                	test   %eax,%eax
  412107:	74 0d                	je     412116 <luaD_poscall+0x3a>
  412109:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  41210d:	7c 07                	jl     412116 <luaD_poscall+0x3a>
  41210f:	b8 01 00 00 00       	mov    $0x1,%eax
  412114:	eb 05                	jmp    41211b <luaD_poscall+0x3f>
  412116:	b8 00 00 00 00       	mov    $0x0,%eax
  41211b:	85 c0                	test   %eax,%eax
  41211d:	0f 95 c0             	setne  %al
  412120:	0f b6 c0             	movzbl %al,%eax
  412123:	48 85 c0             	test   %rax,%rax
  412126:	74 16                	je     41213e <luaD_poscall+0x62>
  412128:	8b 55 dc             	mov    -0x24(%rbp),%edx
  41212b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41212f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412133:	48 89 ce             	mov    %rcx,%rsi
  412136:	48 89 c7             	mov    %rax,%rdi
  412139:	e8 82 fa ff ff       	callq  411bc0 <rethook>
  41213e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412142:	48 8b 30             	mov    (%rax),%rsi
  412145:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  412148:	8b 55 dc             	mov    -0x24(%rbp),%edx
  41214b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41214f:	48 89 c7             	mov    %rax,%rdi
  412152:	e8 35 fd ff ff       	callq  411e8c <moveresults>
  412157:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41215b:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41215f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412163:	48 89 50 20          	mov    %rdx,0x20(%rax)
  412167:	90                   	nop
  412168:	c9                   	leaveq 
  412169:	c3                   	retq   

000000000041216a <prepCallInfo>:
  41216a:	55                   	push   %rbp
  41216b:	48 89 e5             	mov    %rsp,%rbp
  41216e:	48 83 ec 30          	sub    $0x30,%rsp
  412172:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412176:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41217a:	89 55 dc             	mov    %edx,-0x24(%rbp)
  41217d:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  412180:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  412184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412188:	48 8b 40 20          	mov    0x20(%rax),%rax
  41218c:	48 8b 40 18          	mov    0x18(%rax),%rax
  412190:	48 85 c0             	test   %rax,%rax
  412193:	74 0e                	je     4121a3 <prepCallInfo+0x39>
  412195:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412199:	48 8b 40 20          	mov    0x20(%rax),%rax
  41219d:	48 8b 40 18          	mov    0x18(%rax),%rax
  4121a1:	eb 0c                	jmp    4121af <prepCallInfo+0x45>
  4121a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4121a7:	48 89 c7             	mov    %rax,%rdi
  4121aa:	e8 0a 38 01 00       	callq  4259b9 <luaE_extendCI>
  4121af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4121b3:	48 89 42 20          	mov    %rax,0x20(%rdx)
  4121b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4121bb:	48 8b 40 20          	mov    0x20(%rax),%rax
  4121bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4121c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4121c7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4121cb:	48 89 10             	mov    %rdx,(%rax)
  4121ce:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4121d1:	89 c2                	mov    %eax,%edx
  4121d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4121d7:	66 89 50 3c          	mov    %dx,0x3c(%rax)
  4121db:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4121de:	89 c2                	mov    %eax,%edx
  4121e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4121e4:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  4121e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4121ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4121f0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4121f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4121f8:	c9                   	leaveq 
  4121f9:	c3                   	retq   

00000000004121fa <precallC>:
  4121fa:	55                   	push   %rbp
  4121fb:	48 89 e5             	mov    %rsp,%rbp
  4121fe:	48 83 ec 40          	sub    $0x40,%rsp
  412202:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  412206:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41220a:	89 55 cc             	mov    %edx,-0x34(%rbp)
  41220d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  412211:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412215:	48 8b 50 28          	mov    0x28(%rax),%rdx
  412219:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41221d:	48 8b 40 10          	mov    0x10(%rax),%rax
  412221:	48 29 c2             	sub    %rax,%rdx
  412224:	48 89 d0             	mov    %rdx,%rax
  412227:	48 3d 40 01 00 00    	cmp    $0x140,%rax
  41222d:	0f 9e c0             	setle  %al
  412230:	0f b6 c0             	movzbl %al,%eax
  412233:	48 85 c0             	test   %rax,%rax
  412236:	74 5c                	je     412294 <precallC+0x9a>
  412238:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41223c:	48 8b 40 30          	mov    0x30(%rax),%rax
  412240:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  412244:	48 29 c2             	sub    %rax,%rdx
  412247:	48 89 d0             	mov    %rdx,%rax
  41224a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41224e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412252:	48 8b 40 18          	mov    0x18(%rax),%rax
  412256:	48 8b 40 18          	mov    0x18(%rax),%rax
  41225a:	48 85 c0             	test   %rax,%rax
  41225d:	7e 0c                	jle    41226b <precallC+0x71>
  41225f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412263:	48 89 c7             	mov    %rax,%rdi
  412266:	e8 ed 60 00 00       	callq  418358 <luaC_step>
  41226b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41226f:	ba 01 00 00 00       	mov    $0x1,%edx
  412274:	be 14 00 00 00       	mov    $0x14,%esi
  412279:	48 89 c7             	mov    %rax,%rdi
  41227c:	e8 b9 f3 ff ff       	callq  41163a <luaD_growstack>
  412281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412285:	48 8b 50 30          	mov    0x30(%rax),%rdx
  412289:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41228d:	48 01 d0             	add    %rdx,%rax
  412290:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  412294:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412298:	48 8b 40 10          	mov    0x10(%rax),%rax
  41229c:	48 8d 88 40 01 00 00 	lea    0x140(%rax),%rcx
  4122a3:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4122a6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4122aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122ae:	49 89 c8             	mov    %rcx,%r8
  4122b1:	b9 02 00 00 00       	mov    $0x2,%ecx
  4122b6:	48 89 c7             	mov    %rax,%rdi
  4122b9:	e8 ac fe ff ff       	callq  41216a <prepCallInfo>
  4122be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4122c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4122ca:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4122ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122d2:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  4122d8:	83 e0 01             	and    $0x1,%eax
  4122db:	85 c0                	test   %eax,%eax
  4122dd:	0f 95 c0             	setne  %al
  4122e0:	0f b6 c0             	movzbl %al,%eax
  4122e3:	48 85 c0             	test   %rax,%rax
  4122e6:	74 37                	je     41231f <precallC+0x125>
  4122e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122ec:	48 8b 40 10          	mov    0x10(%rax),%rax
  4122f0:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
  4122f4:	48 c1 f8 04          	sar    $0x4,%rax
  4122f8:	83 e8 01             	sub    $0x1,%eax
  4122fb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4122fe:	8b 55 ec             	mov    -0x14(%rbp),%edx
  412301:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412305:	41 89 d0             	mov    %edx,%r8d
  412308:	b9 01 00 00 00       	mov    $0x1,%ecx
  41230d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  412312:	be 00 00 00 00       	mov    $0x0,%esi
  412317:	48 89 c7             	mov    %rax,%rdi
  41231a:	e8 a6 f5 ff ff       	callq  4118c5 <luaD_hook>
  41231f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412323:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412327:	48 89 d7             	mov    %rdx,%rdi
  41232a:	ff d0                	callq  *%rax
  41232c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  41232f:	8b 55 e8             	mov    -0x18(%rbp),%edx
  412332:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  412336:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41233a:	48 89 ce             	mov    %rcx,%rsi
  41233d:	48 89 c7             	mov    %rax,%rdi
  412340:	e8 97 fd ff ff       	callq  4120dc <luaD_poscall>
  412345:	8b 45 e8             	mov    -0x18(%rbp),%eax
  412348:	c9                   	leaveq 
  412349:	c3                   	retq   

000000000041234a <luaD_pretailcall>:
  41234a:	55                   	push   %rbp
  41234b:	48 89 e5             	mov    %rsp,%rbp
  41234e:	48 83 ec 50          	sub    $0x50,%rsp
  412352:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  412356:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  41235a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  41235e:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  412361:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
  412365:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  412369:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41236d:	0f b6 c0             	movzbl %al,%eax
  412370:	83 e0 3f             	and    $0x3f,%eax
  412373:	83 f8 16             	cmp    $0x16,%eax
  412376:	74 37                	je     4123af <luaD_pretailcall+0x65>
  412378:	83 f8 26             	cmp    $0x26,%eax
  41237b:	74 0a                	je     412387 <luaD_pretailcall+0x3d>
  41237d:	83 f8 06             	cmp    $0x6,%eax
  412380:	74 51                	je     4123d3 <luaD_pretailcall+0x89>
  412382:	e9 20 02 00 00       	jmpq   4125a7 <luaD_pretailcall+0x25d>
  412387:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41238b:	48 8b 00             	mov    (%rax),%rax
  41238e:	48 8b 50 18          	mov    0x18(%rax),%rdx
  412392:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  412396:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41239a:	48 89 d1             	mov    %rdx,%rcx
  41239d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4123a2:	48 89 c7             	mov    %rax,%rdi
  4123a5:	e8 50 fe ff ff       	callq  4121fa <precallC>
  4123aa:	e9 18 02 00 00       	jmpq   4125c7 <luaD_pretailcall+0x27d>
  4123af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4123b3:	48 8b 10             	mov    (%rax),%rdx
  4123b6:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4123ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4123be:	48 89 d1             	mov    %rdx,%rcx
  4123c1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4123c6:	48 89 c7             	mov    %rax,%rdi
  4123c9:	e8 2c fe ff ff       	callq  4121fa <precallC>
  4123ce:	e9 f4 01 00 00       	jmpq   4125c7 <luaD_pretailcall+0x27d>
  4123d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4123d7:	48 8b 00             	mov    (%rax),%rax
  4123da:	48 8b 40 18          	mov    0x18(%rax),%rax
  4123de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4123e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4123e6:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  4123ea:	0f b6 c0             	movzbl %al,%eax
  4123ed:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4123f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4123f4:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  4123f8:	0f b6 c0             	movzbl %al,%eax
  4123fb:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4123fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412402:	48 8b 50 28          	mov    0x28(%rax),%rdx
  412406:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41240a:	48 8b 40 10          	mov    0x10(%rax),%rax
  41240e:	48 29 c2             	sub    %rax,%rdx
  412411:	48 89 d0             	mov    %rdx,%rax
  412414:	48 c1 f8 04          	sar    $0x4,%rax
  412418:	48 89 c2             	mov    %rax,%rdx
  41241b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41241e:	2b 45 b0             	sub    -0x50(%rbp),%eax
  412421:	48 98                	cltq   
  412423:	48 39 c2             	cmp    %rax,%rdx
  412426:	0f 9e c0             	setle  %al
  412429:	0f b6 c0             	movzbl %al,%eax
  41242c:	48 85 c0             	test   %rax,%rax
  41242f:	74 61                	je     412492 <luaD_pretailcall+0x148>
  412431:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412435:	48 8b 40 30          	mov    0x30(%rax),%rax
  412439:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  41243d:	48 29 c2             	sub    %rax,%rdx
  412440:	48 89 d0             	mov    %rdx,%rax
  412443:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  412447:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41244b:	48 8b 40 18          	mov    0x18(%rax),%rax
  41244f:	48 8b 40 18          	mov    0x18(%rax),%rax
  412453:	48 85 c0             	test   %rax,%rax
  412456:	7e 0c                	jle    412464 <luaD_pretailcall+0x11a>
  412458:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41245c:	48 89 c7             	mov    %rax,%rdi
  41245f:	e8 f4 5e 00 00       	callq  418358 <luaC_step>
  412464:	8b 45 ec             	mov    -0x14(%rbp),%eax
  412467:	2b 45 b0             	sub    -0x50(%rbp),%eax
  41246a:	89 c1                	mov    %eax,%ecx
  41246c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412470:	ba 01 00 00 00       	mov    $0x1,%edx
  412475:	89 ce                	mov    %ecx,%esi
  412477:	48 89 c7             	mov    %rax,%rdi
  41247a:	e8 bb f1 ff ff       	callq  41163a <luaD_growstack>
  41247f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412483:	48 8b 50 30          	mov    0x30(%rax),%rdx
  412487:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41248b:	48 01 d0             	add    %rdx,%rax
  41248e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  412492:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412496:	48 8b 00             	mov    (%rax),%rax
  412499:	8b 55 b0             	mov    -0x50(%rbp),%edx
  41249c:	48 63 d2             	movslq %edx,%rdx
  41249f:	48 c1 e2 04          	shl    $0x4,%rdx
  4124a3:	48 f7 da             	neg    %rdx
  4124a6:	48 01 c2             	add    %rax,%rdx
  4124a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4124ad:	48 89 10             	mov    %rdx,(%rax)
  4124b0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4124b7:	eb 50                	jmp    412509 <luaD_pretailcall+0x1bf>
  4124b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4124bd:	48 8b 00             	mov    (%rax),%rax
  4124c0:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4124c3:	48 63 d2             	movslq %edx,%rdx
  4124c6:	48 c1 e2 04          	shl    $0x4,%rdx
  4124ca:	48 01 d0             	add    %rdx,%rax
  4124cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4124d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4124d4:	48 98                	cltq   
  4124d6:	48 c1 e0 04          	shl    $0x4,%rax
  4124da:	48 89 c2             	mov    %rax,%rdx
  4124dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4124e1:	48 01 d0             	add    %rdx,%rax
  4124e4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4124e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4124ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4124f0:	48 8b 12             	mov    (%rdx),%rdx
  4124f3:	48 89 10             	mov    %rdx,(%rax)
  4124f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4124fa:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4124fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412502:	88 50 08             	mov    %dl,0x8(%rax)
  412505:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  412509:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41250c:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
  41250f:	7c a8                	jl     4124b9 <luaD_pretailcall+0x16f>
  412511:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412515:	48 8b 00             	mov    (%rax),%rax
  412518:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41251c:	eb 1b                	jmp    412539 <luaD_pretailcall+0x1ef>
  41251e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  412521:	48 98                	cltq   
  412523:	48 c1 e0 04          	shl    $0x4,%rax
  412527:	48 89 c2             	mov    %rax,%rdx
  41252a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41252e:	48 01 d0             	add    %rdx,%rax
  412531:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  412535:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
  412539:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  41253c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  41253f:	7e dd                	jle    41251e <luaD_pretailcall+0x1d4>
  412541:	8b 45 ec             	mov    -0x14(%rbp),%eax
  412544:	48 98                	cltq   
  412546:	48 83 c0 01          	add    $0x1,%rax
  41254a:	48 c1 e0 04          	shl    $0x4,%rax
  41254e:	48 89 c2             	mov    %rax,%rdx
  412551:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  412555:	48 01 c2             	add    %rax,%rdx
  412558:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41255c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  412560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412564:	48 8b 50 40          	mov    0x40(%rax),%rdx
  412568:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41256c:	48 89 50 20          	mov    %rdx,0x20(%rax)
  412570:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412574:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412578:	83 c8 20             	or     $0x20,%eax
  41257b:	89 c2                	mov    %eax,%edx
  41257d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412581:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  412585:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  412588:	48 98                	cltq   
  41258a:	48 c1 e0 04          	shl    $0x4,%rax
  41258e:	48 89 c2             	mov    %rax,%rdx
  412591:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  412595:	48 01 c2             	add    %rax,%rdx
  412598:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41259c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4125a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4125a5:	eb 20                	jmp    4125c7 <luaD_pretailcall+0x27d>
  4125a7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4125ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4125af:	48 89 d6             	mov    %rdx,%rsi
  4125b2:	48 89 c7             	mov    %rax,%rdi
  4125b5:	e8 62 f7 ff ff       	callq  411d1c <luaD_tryfuncTM>
  4125ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4125be:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
  4125c2:	e9 9e fd ff ff       	jmpq   412365 <luaD_pretailcall+0x1b>
  4125c7:	c9                   	leaveq 
  4125c8:	c3                   	retq   

00000000004125c9 <luaD_precall>:
  4125c9:	55                   	push   %rbp
  4125ca:	48 89 e5             	mov    %rsp,%rbp
  4125cd:	48 83 ec 50          	sub    $0x50,%rsp
  4125d1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4125d5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4125d9:	89 55 bc             	mov    %edx,-0x44(%rbp)
  4125dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4125e0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4125e4:	0f b6 c0             	movzbl %al,%eax
  4125e7:	83 e0 3f             	and    $0x3f,%eax
  4125ea:	83 f8 16             	cmp    $0x16,%eax
  4125ed:	74 37                	je     412626 <luaD_precall+0x5d>
  4125ef:	83 f8 26             	cmp    $0x26,%eax
  4125f2:	74 0a                	je     4125fe <luaD_precall+0x35>
  4125f4:	83 f8 06             	cmp    $0x6,%eax
  4125f7:	74 51                	je     41264a <luaD_precall+0x81>
  4125f9:	e9 98 01 00 00       	jmpq   412796 <luaD_precall+0x1cd>
  4125fe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  412602:	48 8b 00             	mov    (%rax),%rax
  412605:	48 8b 48 18          	mov    0x18(%rax),%rcx
  412609:	8b 55 bc             	mov    -0x44(%rbp),%edx
  41260c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  412610:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412614:	48 89 c7             	mov    %rax,%rdi
  412617:	e8 de fb ff ff       	callq  4121fa <precallC>
  41261c:	b8 00 00 00 00       	mov    $0x0,%eax
  412621:	e9 8c 01 00 00       	jmpq   4127b2 <luaD_precall+0x1e9>
  412626:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41262a:	48 8b 08             	mov    (%rax),%rcx
  41262d:	8b 55 bc             	mov    -0x44(%rbp),%edx
  412630:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  412634:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412638:	48 89 c7             	mov    %rax,%rdi
  41263b:	e8 ba fb ff ff       	callq  4121fa <precallC>
  412640:	b8 00 00 00 00       	mov    $0x0,%eax
  412645:	e9 68 01 00 00       	jmpq   4127b2 <luaD_precall+0x1e9>
  41264a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41264e:	48 8b 00             	mov    (%rax),%rax
  412651:	48 8b 40 18          	mov    0x18(%rax),%rax
  412655:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  412659:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41265d:	48 8b 40 10          	mov    0x10(%rax),%rax
  412661:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
  412665:	48 c1 f8 04          	sar    $0x4,%rax
  412669:	83 e8 01             	sub    $0x1,%eax
  41266c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41266f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412673:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  412677:	0f b6 c0             	movzbl %al,%eax
  41267a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41267d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412681:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  412685:	0f b6 c0             	movzbl %al,%eax
  412688:	89 45 e8             	mov    %eax,-0x18(%rbp)
  41268b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41268f:	48 8b 50 28          	mov    0x28(%rax),%rdx
  412693:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412697:	48 8b 40 10          	mov    0x10(%rax),%rax
  41269b:	48 29 c2             	sub    %rax,%rdx
  41269e:	48 89 d0             	mov    %rdx,%rax
  4126a1:	48 c1 f8 04          	sar    $0x4,%rax
  4126a5:	48 89 c2             	mov    %rax,%rdx
  4126a8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4126ab:	48 98                	cltq   
  4126ad:	48 39 c2             	cmp    %rax,%rdx
  4126b0:	0f 9e c0             	setle  %al
  4126b3:	0f b6 c0             	movzbl %al,%eax
  4126b6:	48 85 c0             	test   %rax,%rax
  4126b9:	74 5c                	je     412717 <luaD_precall+0x14e>
  4126bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4126bf:	48 8b 40 30          	mov    0x30(%rax),%rax
  4126c3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4126c7:	48 29 c2             	sub    %rax,%rdx
  4126ca:	48 89 d0             	mov    %rdx,%rax
  4126cd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4126d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4126d5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4126d9:	48 8b 40 18          	mov    0x18(%rax),%rax
  4126dd:	48 85 c0             	test   %rax,%rax
  4126e0:	7e 0c                	jle    4126ee <luaD_precall+0x125>
  4126e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4126e6:	48 89 c7             	mov    %rax,%rdi
  4126e9:	e8 6a 5c 00 00       	callq  418358 <luaC_step>
  4126ee:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  4126f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4126f5:	ba 01 00 00 00       	mov    $0x1,%edx
  4126fa:	89 ce                	mov    %ecx,%esi
  4126fc:	48 89 c7             	mov    %rax,%rdi
  4126ff:	e8 36 ef ff ff       	callq  41163a <luaD_growstack>
  412704:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412708:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41270c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412710:	48 01 d0             	add    %rdx,%rax
  412713:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  412717:	8b 45 e8             	mov    -0x18(%rbp),%eax
  41271a:	48 98                	cltq   
  41271c:	48 83 c0 01          	add    $0x1,%rax
  412720:	48 c1 e0 04          	shl    $0x4,%rax
  412724:	48 89 c2             	mov    %rax,%rdx
  412727:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41272b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  41272f:	8b 55 bc             	mov    -0x44(%rbp),%edx
  412732:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  412736:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41273a:	49 89 c8             	mov    %rcx,%r8
  41273d:	b9 00 00 00 00       	mov    $0x0,%ecx
  412742:	48 89 c7             	mov    %rax,%rdi
  412745:	e8 20 fa ff ff       	callq  41216a <prepCallInfo>
  41274a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41274e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412752:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412756:	48 89 50 20          	mov    %rdx,0x20(%rax)
  41275a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41275e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  412762:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412766:	48 89 50 20          	mov    %rdx,0x20(%rax)
  41276a:	eb 1c                	jmp    412788 <luaD_precall+0x1bf>
  41276c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412770:	48 8b 40 10          	mov    0x10(%rax),%rax
  412774:	48 8d 48 10          	lea    0x10(%rax),%rcx
  412778:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41277c:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  412780:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  412784:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  412788:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41278b:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  41278e:	7c dc                	jl     41276c <luaD_precall+0x1a3>
  412790:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412794:	eb 1c                	jmp    4127b2 <luaD_precall+0x1e9>
  412796:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41279a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41279e:	48 89 d6             	mov    %rdx,%rsi
  4127a1:	48 89 c7             	mov    %rax,%rdi
  4127a4:	e8 73 f5 ff ff       	callq  411d1c <luaD_tryfuncTM>
  4127a9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4127ad:	e9 2a fe ff ff       	jmpq   4125dc <luaD_precall+0x13>
  4127b2:	c9                   	leaveq 
  4127b3:	c3                   	retq   

00000000004127b4 <ccall>:
  4127b4:	55                   	push   %rbp
  4127b5:	48 89 e5             	mov    %rsp,%rbp
  4127b8:	48 83 ec 30          	sub    $0x30,%rsp
  4127bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4127c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4127c4:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4127c7:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  4127ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4127ce:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
  4127d4:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4127d7:	01 c2                	add    %eax,%edx
  4127d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4127dd:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  4127e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4127e7:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  4127ed:	0f b7 c0             	movzwl %ax,%eax
  4127f0:	3d c7 00 00 00       	cmp    $0xc7,%eax
  4127f5:	0f 97 c0             	seta   %al
  4127f8:	0f b6 c0             	movzbl %al,%eax
  4127fb:	48 85 c0             	test   %rax,%rax
  4127fe:	74 6f                	je     41286f <ccall+0xbb>
  412800:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412804:	48 8b 50 28          	mov    0x28(%rax),%rdx
  412808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41280c:	48 8b 40 10          	mov    0x10(%rax),%rax
  412810:	48 29 c2             	sub    %rax,%rdx
  412813:	48 89 d0             	mov    %rdx,%rax
  412816:	48 85 c0             	test   %rax,%rax
  412819:	0f 9e c0             	setle  %al
  41281c:	0f b6 c0             	movzbl %al,%eax
  41281f:	48 85 c0             	test   %rax,%rax
  412822:	74 3f                	je     412863 <ccall+0xaf>
  412824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412828:	48 8b 40 30          	mov    0x30(%rax),%rax
  41282c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412830:	48 29 c2             	sub    %rax,%rdx
  412833:	48 89 d0             	mov    %rdx,%rax
  412836:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41283a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41283e:	ba 01 00 00 00       	mov    $0x1,%edx
  412843:	be 00 00 00 00       	mov    $0x0,%esi
  412848:	48 89 c7             	mov    %rax,%rdi
  41284b:	e8 ea ed ff ff       	callq  41163a <luaD_growstack>
  412850:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412854:	48 8b 50 30          	mov    0x30(%rax),%rdx
  412858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41285c:	48 01 d0             	add    %rdx,%rax
  41285f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  412863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412867:	48 89 c7             	mov    %rax,%rdi
  41286a:	e8 d9 32 01 00       	callq  425b48 <luaE_checkcstack>
  41286f:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412872:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41287a:	48 89 ce             	mov    %rcx,%rsi
  41287d:	48 89 c7             	mov    %rax,%rdi
  412880:	e8 44 fd ff ff       	callq  4125c9 <luaD_precall>
  412885:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  412889:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41288e:	74 1d                	je     4128ad <ccall+0xf9>
  412890:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412894:	66 c7 40 3e 04 00    	movw   $0x4,0x3e(%rax)
  41289a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41289e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4128a2:	48 89 d6             	mov    %rdx,%rsi
  4128a5:	48 89 c7             	mov    %rax,%rdi
  4128a8:	e8 3c 22 02 00       	callq  434ae9 <luaV_execute>
  4128ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4128b1:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  4128b7:	2b 45 d8             	sub    -0x28(%rbp),%eax
  4128ba:	89 c2                	mov    %eax,%edx
  4128bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4128c0:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  4128c6:	90                   	nop
  4128c7:	c9                   	leaveq 
  4128c8:	c3                   	retq   

00000000004128c9 <luaD_call>:
  4128c9:	55                   	push   %rbp
  4128ca:	48 89 e5             	mov    %rsp,%rbp
  4128cd:	48 83 ec 20          	sub    $0x20,%rsp
  4128d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4128d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4128d9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  4128dc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4128df:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4128e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4128e7:	b9 01 00 00 00       	mov    $0x1,%ecx
  4128ec:	48 89 c7             	mov    %rax,%rdi
  4128ef:	e8 c0 fe ff ff       	callq  4127b4 <ccall>
  4128f4:	90                   	nop
  4128f5:	c9                   	leaveq 
  4128f6:	c3                   	retq   

00000000004128f7 <luaD_callnoyield>:
  4128f7:	55                   	push   %rbp
  4128f8:	48 89 e5             	mov    %rsp,%rbp
  4128fb:	48 83 ec 20          	sub    $0x20,%rsp
  4128ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412907:	89 55 ec             	mov    %edx,-0x14(%rbp)
  41290a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  41290d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  412911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412915:	b9 01 00 01 00       	mov    $0x10001,%ecx
  41291a:	48 89 c7             	mov    %rax,%rdi
  41291d:	e8 92 fe ff ff       	callq  4127b4 <ccall>
  412922:	90                   	nop
  412923:	c9                   	leaveq 
  412924:	c3                   	retq   

0000000000412925 <finishpcallk>:
  412925:	55                   	push   %rbp
  412926:	48 89 e5             	mov    %rsp,%rbp
  412929:	48 83 ec 20          	sub    $0x20,%rsp
  41292d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412931:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412935:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412939:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  41293d:	66 c1 e8 0a          	shr    $0xa,%ax
  412941:	0f b7 c0             	movzwl %ax,%eax
  412944:	83 e0 07             	and    $0x7,%eax
  412947:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41294a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  41294e:	0f 94 c0             	sete   %al
  412951:	0f b6 c0             	movzbl %al,%eax
  412954:	48 85 c0             	test   %rax,%rax
  412957:	74 09                	je     412962 <finishpcallk+0x3d>
  412959:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  412960:	eb 7e                	jmp    4129e0 <finishpcallk+0xbb>
  412962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412966:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41296a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41296e:	8b 40 38             	mov    0x38(%rax),%eax
  412971:	48 98                	cltq   
  412973:	48 01 d0             	add    %rdx,%rax
  412976:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41297a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41297e:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412982:	83 e0 01             	and    $0x1,%eax
  412985:	89 c2                	mov    %eax,%edx
  412987:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41298b:	88 50 0b             	mov    %dl,0xb(%rax)
  41298e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  412991:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  412995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412999:	b9 01 00 00 00       	mov    $0x1,%ecx
  41299e:	48 89 c7             	mov    %rax,%rdi
  4129a1:	e8 f7 1b 00 00       	callq  41459d <luaF_close>
  4129a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4129aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4129ae:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4129b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4129b5:	89 ce                	mov    %ecx,%esi
  4129b7:	48 89 c7             	mov    %rax,%rdi
  4129ba:	e8 b7 e6 ff ff       	callq  411076 <luaD_seterrorobj>
  4129bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4129c3:	48 89 c7             	mov    %rax,%rdi
  4129c6:	e8 00 ee ff ff       	callq  4117cb <luaD_shrinkstack>
  4129cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4129cf:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4129d3:	80 e4 e3             	and    $0xe3,%ah
  4129d6:	89 c2                	mov    %eax,%edx
  4129d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4129dc:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  4129e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4129e4:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  4129e8:	83 e0 ef             	and    $0xffffffef,%eax
  4129eb:	89 c2                	mov    %eax,%edx
  4129ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4129f1:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  4129f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4129f9:	48 8b 50 28          	mov    0x28(%rax),%rdx
  4129fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a01:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  412a08:	8b 45 fc             	mov    -0x4(%rbp),%eax
  412a0b:	c9                   	leaveq 
  412a0c:	c3                   	retq   

0000000000412a0d <finishCcall>:
  412a0d:	55                   	push   %rbp
  412a0e:	48 89 e5             	mov    %rsp,%rbp
  412a11:	48 83 ec 20          	sub    $0x20,%rsp
  412a15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412a19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412a1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412a21:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412a25:	0f b7 c0             	movzwl %ax,%eax
  412a28:	25 00 02 00 00       	and    $0x200,%eax
  412a2d:	85 c0                	test   %eax,%eax
  412a2f:	74 0c                	je     412a3d <finishCcall+0x30>
  412a31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412a35:	8b 40 38             	mov    0x38(%rax),%eax
  412a38:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412a3b:	eb 7b                	jmp    412ab8 <finishCcall+0xab>
  412a3d:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  412a44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412a48:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412a4c:	0f b7 c0             	movzwl %ax,%eax
  412a4f:	83 e0 10             	and    $0x10,%eax
  412a52:	85 c0                	test   %eax,%eax
  412a54:	74 16                	je     412a6c <finishCcall+0x5f>
  412a56:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412a5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a5e:	48 89 d6             	mov    %rdx,%rsi
  412a61:	48 89 c7             	mov    %rax,%rdi
  412a64:	e8 bc fe ff ff       	callq  412925 <finishpcallk>
  412a69:	89 45 f8             	mov    %eax,-0x8(%rbp)
  412a6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a70:	48 8b 40 20          	mov    0x20(%rax),%rax
  412a74:	48 8b 50 08          	mov    0x8(%rax),%rdx
  412a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a7c:	48 8b 40 10          	mov    0x10(%rax),%rax
  412a80:	48 39 c2             	cmp    %rax,%rdx
  412a83:	73 14                	jae    412a99 <finishCcall+0x8c>
  412a85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a89:	48 8b 40 20          	mov    0x20(%rax),%rax
  412a8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412a91:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  412a95:	48 89 50 08          	mov    %rdx,0x8(%rax)
  412a99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412a9d:	48 8b 40 20          	mov    0x20(%rax),%rax
  412aa1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412aa5:	48 8b 52 30          	mov    0x30(%rdx),%rdx
  412aa9:	8b 75 f8             	mov    -0x8(%rbp),%esi
  412aac:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  412ab0:	48 89 cf             	mov    %rcx,%rdi
  412ab3:	ff d0                	callq  *%rax
  412ab5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412ab8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  412abb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412abf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ac3:	48 89 ce             	mov    %rcx,%rsi
  412ac6:	48 89 c7             	mov    %rax,%rdi
  412ac9:	e8 0e f6 ff ff       	callq  4120dc <luaD_poscall>
  412ace:	90                   	nop
  412acf:	c9                   	leaveq 
  412ad0:	c3                   	retq   

0000000000412ad1 <unroll>:
  412ad1:	55                   	push   %rbp
  412ad2:	48 89 e5             	mov    %rsp,%rbp
  412ad5:	48 83 ec 20          	sub    $0x20,%rsp
  412ad9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412add:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412ae1:	eb 46                	jmp    412b29 <unroll+0x58>
  412ae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412ae7:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412aeb:	0f b7 c0             	movzwl %ax,%eax
  412aee:	83 e0 02             	and    $0x2,%eax
  412af1:	85 c0                	test   %eax,%eax
  412af3:	74 15                	je     412b0a <unroll+0x39>
  412af5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  412af9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412afd:	48 89 d6             	mov    %rdx,%rsi
  412b00:	48 89 c7             	mov    %rax,%rdi
  412b03:	e8 05 ff ff ff       	callq  412a0d <finishCcall>
  412b08:	eb 1f                	jmp    412b29 <unroll+0x58>
  412b0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412b0e:	48 89 c7             	mov    %rax,%rdi
  412b11:	e8 2c 1d 02 00       	callq  434842 <luaV_finishOp>
  412b16:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  412b1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412b1e:	48 89 d6             	mov    %rdx,%rsi
  412b21:	48 89 c7             	mov    %rax,%rdi
  412b24:	e8 c0 1f 02 00       	callq  434ae9 <luaV_execute>
  412b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412b2d:	48 8b 40 20          	mov    0x20(%rax),%rax
  412b31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412b35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412b39:	48 83 c0 60          	add    $0x60,%rax
  412b3d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  412b41:	75 a0                	jne    412ae3 <unroll+0x12>
  412b43:	90                   	nop
  412b44:	c9                   	leaveq 
  412b45:	c3                   	retq   

0000000000412b46 <findpcall>:
  412b46:	55                   	push   %rbp
  412b47:	48 89 e5             	mov    %rsp,%rbp
  412b4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412b4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412b52:	48 8b 40 20          	mov    0x20(%rax),%rax
  412b56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412b5a:	eb 24                	jmp    412b80 <findpcall+0x3a>
  412b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412b60:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412b64:	0f b7 c0             	movzwl %ax,%eax
  412b67:	83 e0 10             	and    $0x10,%eax
  412b6a:	85 c0                	test   %eax,%eax
  412b6c:	74 06                	je     412b74 <findpcall+0x2e>
  412b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412b72:	eb 18                	jmp    412b8c <findpcall+0x46>
  412b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412b78:	48 8b 40 10          	mov    0x10(%rax),%rax
  412b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412b80:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  412b85:	75 d5                	jne    412b5c <findpcall+0x16>
  412b87:	b8 00 00 00 00       	mov    $0x0,%eax
  412b8c:	5d                   	pop    %rbp
  412b8d:	c3                   	retq   

0000000000412b8e <resume_error>:
  412b8e:	55                   	push   %rbp
  412b8f:	48 89 e5             	mov    %rsp,%rbp
  412b92:	48 83 ec 30          	sub    $0x30,%rsp
  412b96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412b9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412b9e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  412ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ba5:	48 8b 40 10          	mov    0x10(%rax),%rax
  412ba9:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412bac:	48 63 d2             	movslq %edx,%rdx
  412baf:	48 c1 e2 04          	shl    $0x4,%rdx
  412bb3:	48 f7 da             	neg    %rdx
  412bb6:	48 01 c2             	add    %rax,%rdx
  412bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412bbd:	48 89 50 10          	mov    %rdx,0x10(%rax)
  412bc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412bc5:	48 8b 40 10          	mov    0x10(%rax),%rax
  412bc9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412bcd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412bd5:	48 89 d6             	mov    %rdx,%rsi
  412bd8:	48 89 c7             	mov    %rax,%rdi
  412bdb:	e8 cc 44 01 00       	callq  4270ac <luaS_new>
  412be0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  412be4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  412be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412bec:	48 89 10             	mov    %rdx,(%rax)
  412bef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412bf3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  412bf7:	83 c8 40             	or     $0x40,%eax
  412bfa:	89 c2                	mov    %eax,%edx
  412bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412c00:	88 50 08             	mov    %dl,0x8(%rax)
  412c03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412c07:	48 8b 40 10          	mov    0x10(%rax),%rax
  412c0b:	48 8d 50 10          	lea    0x10(%rax),%rdx
  412c0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412c13:	48 89 50 10          	mov    %rdx,0x10(%rax)
  412c17:	b8 02 00 00 00       	mov    $0x2,%eax
  412c1c:	c9                   	leaveq 
  412c1d:	c3                   	retq   

0000000000412c1e <resume>:
  412c1e:	55                   	push   %rbp
  412c1f:	48 89 e5             	mov    %rsp,%rbp
  412c22:	48 83 ec 30          	sub    $0x30,%rsp
  412c26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  412c2a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  412c2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412c32:	8b 00                	mov    (%rax),%eax
  412c34:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c3b:	48 8b 40 10          	mov    0x10(%rax),%rax
  412c3f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  412c42:	48 63 d2             	movslq %edx,%rdx
  412c45:	48 c1 e2 04          	shl    $0x4,%rdx
  412c49:	48 f7 da             	neg    %rdx
  412c4c:	48 01 d0             	add    %rdx,%rax
  412c4f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  412c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c57:	48 8b 40 20          	mov    0x20(%rax),%rax
  412c5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  412c5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c63:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  412c67:	84 c0                	test   %al,%al
  412c69:	75 23                	jne    412c8e <resume+0x70>
  412c6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412c6f:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
  412c73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c77:	b9 00 00 00 00       	mov    $0x0,%ecx
  412c7c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  412c81:	48 89 c7             	mov    %rax,%rdi
  412c84:	e8 2b fb ff ff       	callq  4127b4 <ccall>
  412c89:	e9 90 00 00 00       	jmpq   412d1e <resume+0x100>
  412c8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c92:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  412c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412c9a:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412c9e:	0f b7 c0             	movzwl %ax,%eax
  412ca1:	83 e0 02             	and    $0x2,%eax
  412ca4:	85 c0                	test   %eax,%eax
  412ca6:	75 21                	jne    412cc9 <resume+0xab>
  412ca8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412cac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  412cb0:	48 89 50 10          	mov    %rdx,0x10(%rax)
  412cb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412cb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412cbc:	48 89 d6             	mov    %rdx,%rsi
  412cbf:	48 89 c7             	mov    %rax,%rdi
  412cc2:	e8 22 1e 02 00       	callq  434ae9 <luaV_execute>
  412cc7:	eb 44                	jmp    412d0d <resume+0xef>
  412cc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ccd:	48 8b 40 20          	mov    0x20(%rax),%rax
  412cd1:	48 85 c0             	test   %rax,%rax
  412cd4:	74 21                	je     412cf7 <resume+0xd9>
  412cd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412cda:	48 8b 40 20          	mov    0x20(%rax),%rax
  412cde:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412ce2:	48 8b 52 30          	mov    0x30(%rdx),%rdx
  412ce6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  412cea:	be 01 00 00 00       	mov    $0x1,%esi
  412cef:	48 89 cf             	mov    %rcx,%rdi
  412cf2:	ff d0                	callq  *%rax
  412cf4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412cf7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  412cfa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  412cfe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d02:	48 89 ce             	mov    %rcx,%rsi
  412d05:	48 89 c7             	mov    %rax,%rdi
  412d08:	e8 cf f3 ff ff       	callq  4120dc <luaD_poscall>
  412d0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d11:	be 00 00 00 00       	mov    $0x0,%esi
  412d16:	48 89 c7             	mov    %rax,%rdi
  412d19:	e8 b3 fd ff ff       	callq  412ad1 <unroll>
  412d1e:	90                   	nop
  412d1f:	c9                   	leaveq 
  412d20:	c3                   	retq   

0000000000412d21 <precover>:
  412d21:	55                   	push   %rbp
  412d22:	48 89 e5             	mov    %rsp,%rbp
  412d25:	48 83 ec 20          	sub    $0x20,%rsp
  412d29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412d2d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  412d30:	eb 44                	jmp    412d76 <precover+0x55>
  412d32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412d36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  412d3a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  412d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412d42:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  412d46:	80 e4 e3             	and    $0xe3,%ah
  412d49:	89 c2                	mov    %eax,%edx
  412d4b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  412d4e:	c1 e0 0a             	shl    $0xa,%eax
  412d51:	09 d0                	or     %edx,%eax
  412d53:	89 c2                	mov    %eax,%edx
  412d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412d59:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  412d5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412d61:	ba 00 00 00 00       	mov    $0x0,%edx
  412d66:	be d1 2a 41 00       	mov    $0x412ad1,%esi
  412d6b:	48 89 c7             	mov    %rax,%rdi
  412d6e:	e8 09 e5 ff ff       	callq  41127c <luaD_rawrunprotected>
  412d73:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  412d76:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  412d7a:	7e 17                	jle    412d93 <precover+0x72>
  412d7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412d80:	48 89 c7             	mov    %rax,%rdi
  412d83:	e8 be fd ff ff       	callq  412b46 <findpcall>
  412d88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412d8c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  412d91:	75 9f                	jne    412d32 <precover+0x11>
  412d93:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  412d96:	c9                   	leaveq 
  412d97:	c3                   	retq   

0000000000412d98 <lua_resume>:
  412d98:	55                   	push   %rbp
  412d99:	48 89 e5             	mov    %rsp,%rbp
  412d9c:	48 83 ec 30          	sub    $0x30,%rsp
  412da0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412da4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412da8:	89 55 dc             	mov    %edx,-0x24(%rbp)
  412dab:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  412daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412db3:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  412db7:	84 c0                	test   %al,%al
  412db9:	75 75                	jne    412e30 <lua_resume+0x98>
  412dbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412dbf:	48 8b 40 20          	mov    0x20(%rax),%rax
  412dc3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412dc7:	48 83 c2 60          	add    $0x60,%rdx
  412dcb:	48 39 d0             	cmp    %rdx,%rax
  412dce:	74 19                	je     412de9 <lua_resume+0x51>
  412dd0:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412dd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412dd7:	be e0 e8 43 00       	mov    $0x43e8e0,%esi
  412ddc:	48 89 c7             	mov    %rax,%rdi
  412ddf:	e8 aa fd ff ff       	callq  412b8e <resume_error>
  412de4:	e9 86 01 00 00       	jmpq   412f6f <lua_resume+0x1d7>
  412de9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ded:	48 8b 50 10          	mov    0x10(%rax),%rdx
  412df1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412df5:	48 8b 40 20          	mov    0x20(%rax),%rax
  412df9:	48 8b 00             	mov    (%rax),%rax
  412dfc:	48 83 c0 10          	add    $0x10,%rax
  412e00:	48 29 c2             	sub    %rax,%rdx
  412e03:	48 89 d0             	mov    %rdx,%rax
  412e06:	48 c1 f8 04          	sar    $0x4,%rax
  412e0a:	48 89 c2             	mov    %rax,%rdx
  412e0d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  412e10:	48 98                	cltq   
  412e12:	48 39 c2             	cmp    %rax,%rdx
  412e15:	75 3e                	jne    412e55 <lua_resume+0xbd>
  412e17:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412e1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e1e:	be 06 e9 43 00       	mov    $0x43e906,%esi
  412e23:	48 89 c7             	mov    %rax,%rdi
  412e26:	e8 63 fd ff ff       	callq  412b8e <resume_error>
  412e2b:	e9 3f 01 00 00       	jmpq   412f6f <lua_resume+0x1d7>
  412e30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e34:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  412e38:	3c 01                	cmp    $0x1,%al
  412e3a:	74 19                	je     412e55 <lua_resume+0xbd>
  412e3c:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412e3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e43:	be 06 e9 43 00       	mov    $0x43e906,%esi
  412e48:	48 89 c7             	mov    %rax,%rdi
  412e4b:	e8 3e fd ff ff       	callq  412b8e <resume_error>
  412e50:	e9 1a 01 00 00       	jmpq   412f6f <lua_resume+0x1d7>
  412e55:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  412e5a:	74 0f                	je     412e6b <lua_resume+0xd3>
  412e5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412e60:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  412e66:	0f b7 c0             	movzwl %ax,%eax
  412e69:	eb 05                	jmp    412e70 <lua_resume+0xd8>
  412e6b:	b8 00 00 00 00       	mov    $0x0,%eax
  412e70:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412e74:	89 82 b0 00 00 00    	mov    %eax,0xb0(%rdx)
  412e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e7e:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  412e84:	0f b7 c0             	movzwl %ax,%eax
  412e87:	3d c7 00 00 00       	cmp    $0xc7,%eax
  412e8c:	76 19                	jbe    412ea7 <lua_resume+0x10f>
  412e8e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  412e91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e95:	be 23 e9 43 00       	mov    $0x43e923,%esi
  412e9a:	48 89 c7             	mov    %rax,%rdi
  412e9d:	e8 ec fc ff ff       	callq  412b8e <resume_error>
  412ea2:	e9 c8 00 00 00       	jmpq   412f6f <lua_resume+0x1d7>
  412ea7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412eab:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  412eb1:	8d 50 01             	lea    0x1(%rax),%edx
  412eb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412eb8:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  412ebe:	48 8d 55 dc          	lea    -0x24(%rbp),%rdx
  412ec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ec6:	be 1e 2c 41 00       	mov    $0x412c1e,%esi
  412ecb:	48 89 c7             	mov    %rax,%rdi
  412ece:	e8 a9 e3 ff ff       	callq  41127c <luaD_rawrunprotected>
  412ed3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412ed6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  412ed9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412edd:	89 d6                	mov    %edx,%esi
  412edf:	48 89 c7             	mov    %rax,%rdi
  412ee2:	e8 3a fe ff ff       	callq  412d21 <precover>
  412ee7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  412eea:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  412eee:	0f 9e c0             	setle  %al
  412ef1:	0f b6 c0             	movzbl %al,%eax
  412ef4:	48 85 c0             	test   %rax,%rax
  412ef7:	75 39                	jne    412f32 <lua_resume+0x19a>
  412ef9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  412efc:	89 c2                	mov    %eax,%edx
  412efe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f02:	88 50 0a             	mov    %dl,0xa(%rax)
  412f05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f09:	48 8b 50 10          	mov    0x10(%rax),%rdx
  412f0d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  412f10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f14:	89 ce                	mov    %ecx,%esi
  412f16:	48 89 c7             	mov    %rax,%rdi
  412f19:	e8 58 e1 ff ff       	callq  411076 <luaD_seterrorobj>
  412f1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f22:	48 8b 40 20          	mov    0x20(%rax),%rax
  412f26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  412f2a:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  412f2e:	48 89 50 08          	mov    %rdx,0x8(%rax)
  412f32:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  412f36:	75 0d                	jne    412f45 <lua_resume+0x1ad>
  412f38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f3c:	48 8b 40 20          	mov    0x20(%rax),%rax
  412f40:	8b 40 38             	mov    0x38(%rax),%eax
  412f43:	eb 21                	jmp    412f66 <lua_resume+0x1ce>
  412f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f49:	48 8b 50 10          	mov    0x10(%rax),%rdx
  412f4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412f51:	48 8b 40 20          	mov    0x20(%rax),%rax
  412f55:	48 8b 00             	mov    (%rax),%rax
  412f58:	48 83 c0 10          	add    $0x10,%rax
  412f5c:	48 29 c2             	sub    %rax,%rdx
  412f5f:	48 89 d0             	mov    %rdx,%rax
  412f62:	48 c1 f8 04          	sar    $0x4,%rax
  412f66:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  412f6a:	89 02                	mov    %eax,(%rdx)
  412f6c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  412f6f:	c9                   	leaveq 
  412f70:	c3                   	retq   

0000000000412f71 <lua_isyieldable>:
  412f71:	55                   	push   %rbp
  412f72:	48 89 e5             	mov    %rsp,%rbp
  412f75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412f7d:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  412f83:	66 b8 00 00          	mov    $0x0,%ax
  412f87:	85 c0                	test   %eax,%eax
  412f89:	0f 94 c0             	sete   %al
  412f8c:	0f b6 c0             	movzbl %al,%eax
  412f8f:	5d                   	pop    %rbp
  412f90:	c3                   	retq   

0000000000412f91 <lua_yieldk>:
  412f91:	55                   	push   %rbp
  412f92:	48 89 e5             	mov    %rsp,%rbp
  412f95:	48 83 ec 30          	sub    $0x30,%rsp
  412f99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412f9d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  412fa0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412fa4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  412fa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412fac:	48 8b 40 20          	mov    0x20(%rax),%rax
  412fb0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  412fb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412fb8:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  412fbe:	66 b8 00 00          	mov    $0x0,%ax
  412fc2:	85 c0                	test   %eax,%eax
  412fc4:	0f 95 c0             	setne  %al
  412fc7:	0f b6 c0             	movzbl %al,%eax
  412fca:	48 85 c0             	test   %rax,%rax
  412fcd:	74 41                	je     413010 <lua_yieldk+0x7f>
  412fcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412fd3:	48 8b 40 18          	mov    0x18(%rax),%rax
  412fd7:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  412fde:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  412fe2:	74 16                	je     412ffa <lua_yieldk+0x69>
  412fe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412fe8:	be 38 e9 43 00       	mov    $0x43e938,%esi
  412fed:	48 89 c7             	mov    %rax,%rdi
  412ff0:	b8 00 00 00 00       	mov    $0x0,%eax
  412ff5:	e8 7f db ff ff       	callq  410b79 <luaG_runerror>
  412ffa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ffe:	be 68 e9 43 00       	mov    $0x43e968,%esi
  413003:	48 89 c7             	mov    %rax,%rdi
  413006:	b8 00 00 00 00       	mov    $0x0,%eax
  41300b:	e8 69 db ff ff       	callq  410b79 <luaG_runerror>
  413010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413014:	c6 40 0a 01          	movb   $0x1,0xa(%rax)
  413018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41301c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41301f:	89 50 38             	mov    %edx,0x38(%rax)
  413022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413026:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  41302a:	0f b7 c0             	movzwl %ax,%eax
  41302d:	83 e0 02             	and    $0x2,%eax
  413030:	85 c0                	test   %eax,%eax
  413032:	74 36                	je     41306a <lua_yieldk+0xd9>
  413034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413038:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41303c:	48 89 50 20          	mov    %rdx,0x20(%rax)
  413040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413044:	48 8b 40 20          	mov    0x20(%rax),%rax
  413048:	48 85 c0             	test   %rax,%rax
  41304b:	74 0c                	je     413059 <lua_yieldk+0xc8>
  41304d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413051:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413055:	48 89 50 30          	mov    %rdx,0x30(%rax)
  413059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41305d:	be 01 00 00 00       	mov    $0x1,%esi
  413062:	48 89 c7             	mov    %rax,%rdi
  413065:	e8 0f e1 ff ff       	callq  411179 <luaD_throw>
  41306a:	b8 00 00 00 00       	mov    $0x0,%eax
  41306f:	c9                   	leaveq 
  413070:	c3                   	retq   

0000000000413071 <closepaux>:
  413071:	55                   	push   %rbp
  413072:	48 89 e5             	mov    %rsp,%rbp
  413075:	48 83 ec 20          	sub    $0x20,%rsp
  413079:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41307d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413081:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413085:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41308d:	8b 50 08             	mov    0x8(%rax),%edx
  413090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413094:	48 8b 30             	mov    (%rax),%rsi
  413097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41309b:	b9 00 00 00 00       	mov    $0x0,%ecx
  4130a0:	48 89 c7             	mov    %rax,%rdi
  4130a3:	e8 f5 14 00 00       	callq  41459d <luaF_close>
  4130a8:	90                   	nop
  4130a9:	c9                   	leaveq 
  4130aa:	c3                   	retq   

00000000004130ab <luaD_closeprotected>:
  4130ab:	55                   	push   %rbp
  4130ac:	48 89 e5             	mov    %rsp,%rbp
  4130af:	48 83 ec 40          	sub    $0x40,%rsp
  4130b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4130b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4130bb:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4130be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130c2:	48 8b 40 20          	mov    0x20(%rax),%rax
  4130c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4130ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130ce:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  4130d2:	88 45 f7             	mov    %al,-0x9(%rbp)
  4130d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130d9:	48 8b 50 30          	mov    0x30(%rax),%rdx
  4130dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4130e1:	48 01 d0             	add    %rdx,%rax
  4130e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4130e8:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4130eb:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4130ee:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4130f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130f6:	be 71 30 41 00       	mov    $0x413071,%esi
  4130fb:	48 89 c7             	mov    %rax,%rdi
  4130fe:	e8 79 e1 ff ff       	callq  41127c <luaD_rawrunprotected>
  413103:	89 45 cc             	mov    %eax,-0x34(%rbp)
  413106:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  41310a:	0f 94 c0             	sete   %al
  41310d:	0f b6 c0             	movzbl %al,%eax
  413110:	48 85 c0             	test   %rax,%rax
  413113:	74 05                	je     41311a <luaD_closeprotected+0x6f>
  413115:	8b 45 e8             	mov    -0x18(%rbp),%eax
  413118:	eb 19                	jmp    413133 <luaD_closeprotected+0x88>
  41311a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41311e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  413122:	48 89 50 20          	mov    %rdx,0x20(%rax)
  413126:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41312a:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  41312e:	88 50 0b             	mov    %dl,0xb(%rax)
  413131:	eb a2                	jmp    4130d5 <luaD_closeprotected+0x2a>
  413133:	c9                   	leaveq 
  413134:	c3                   	retq   

0000000000413135 <luaD_pcall>:
  413135:	55                   	push   %rbp
  413136:	48 89 e5             	mov    %rsp,%rbp
  413139:	48 83 ec 50          	sub    $0x50,%rsp
  41313d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413141:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413145:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413149:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  41314d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  413151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413155:	48 8b 40 20          	mov    0x20(%rax),%rax
  413159:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41315d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413161:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  413165:	88 45 ef             	mov    %al,-0x11(%rbp)
  413168:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41316c:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  413173:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  413177:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41317b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  41317f:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  413186:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41318a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41318e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413192:	48 89 ce             	mov    %rcx,%rsi
  413195:	48 89 c7             	mov    %rax,%rdi
  413198:	e8 df e0 ff ff       	callq  41127c <luaD_rawrunprotected>
  41319d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4131a0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4131a4:	0f 95 c0             	setne  %al
  4131a7:	0f b6 c0             	movzbl %al,%eax
  4131aa:	48 85 c0             	test   %rax,%rax
  4131ad:	74 5c                	je     41320b <luaD_pcall+0xd6>
  4131af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4131b7:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4131bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131bf:	0f b6 55 ef          	movzbl -0x11(%rbp),%edx
  4131c3:	88 50 0b             	mov    %dl,0xb(%rax)
  4131c6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4131c9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4131cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131d1:	48 89 ce             	mov    %rcx,%rsi
  4131d4:	48 89 c7             	mov    %rax,%rdi
  4131d7:	e8 cf fe ff ff       	callq  4130ab <luaD_closeprotected>
  4131dc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4131df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131e3:	48 8b 50 30          	mov    0x30(%rax),%rdx
  4131e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4131eb:	48 01 c2             	add    %rax,%rdx
  4131ee:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4131f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131f5:	89 ce                	mov    %ecx,%esi
  4131f7:	48 89 c7             	mov    %rax,%rdi
  4131fa:	e8 77 de ff ff       	callq  411076 <luaD_seterrorobj>
  4131ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413203:	48 89 c7             	mov    %rax,%rdi
  413206:	e8 c0 e5 ff ff       	callq  4117cb <luaD_shrinkstack>
  41320b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41320f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  413213:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  41321a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41321d:	c9                   	leaveq 
  41321e:	c3                   	retq   

000000000041321f <checkmode>:
  41321f:	55                   	push   %rbp
  413220:	48 89 e5             	mov    %rsp,%rbp
  413223:	48 83 ec 20          	sub    $0x20,%rsp
  413227:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41322b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41322f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  413233:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  413238:	74 4c                	je     413286 <checkmode+0x67>
  41323a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41323e:	0f b6 00             	movzbl (%rax),%eax
  413241:	0f be d0             	movsbl %al,%edx
  413244:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413248:	89 d6                	mov    %edx,%esi
  41324a:	48 89 c7             	mov    %rax,%rdi
  41324d:	e8 ee e4 fe ff       	callq  401740 <strchr@plt>
  413252:	48 85 c0             	test   %rax,%rax
  413255:	75 2f                	jne    413286 <checkmode+0x67>
  413257:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41325b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41325f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413263:	be 98 e9 43 00       	mov    $0x43e998,%esi
  413268:	48 89 c7             	mov    %rax,%rdi
  41326b:	b8 00 00 00 00       	mov    $0x0,%eax
  413270:	e8 ea c9 00 00       	callq  41fc5f <luaO_pushfstring>
  413275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413279:	be 03 00 00 00       	mov    $0x3,%esi
  41327e:	48 89 c7             	mov    %rax,%rdi
  413281:	e8 f3 de ff ff       	callq  411179 <luaD_throw>
  413286:	90                   	nop
  413287:	c9                   	leaveq 
  413288:	c3                   	retq   

0000000000413289 <f_parser>:
  413289:	55                   	push   %rbp
  41328a:	48 89 e5             	mov    %rsp,%rbp
  41328d:	48 83 ec 30          	sub    $0x30,%rsp
  413291:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413295:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413299:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41329d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4132a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4132a5:	48 8b 10             	mov    (%rax),%rdx
  4132a8:	48 8b 02             	mov    (%rdx),%rax
  4132ab:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  4132af:	48 89 0a             	mov    %rcx,(%rdx)
  4132b2:	48 85 c0             	test   %rax,%rax
  4132b5:	74 1b                	je     4132d2 <f_parser+0x49>
  4132b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4132bb:	48 8b 10             	mov    (%rax),%rdx
  4132be:	48 8b 42 08          	mov    0x8(%rdx),%rax
  4132c2:	48 8d 48 01          	lea    0x1(%rax),%rcx
  4132c6:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  4132ca:	0f b6 00             	movzbl (%rax),%eax
  4132cd:	0f b6 c0             	movzbl %al,%eax
  4132d0:	eb 0f                	jmp    4132e1 <f_parser+0x58>
  4132d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4132d6:	48 8b 00             	mov    (%rax),%rax
  4132d9:	48 89 c7             	mov    %rax,%rdi
  4132dc:	e8 a1 97 02 00       	callq  43ca82 <luaZ_fill>
  4132e1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4132e4:	b8 1b 00 00 00       	mov    $0x1b,%eax
  4132e9:	0f be c0             	movsbl %al,%eax
  4132ec:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  4132ef:	75 40                	jne    413331 <f_parser+0xa8>
  4132f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4132f5:	48 8b 48 50          	mov    0x50(%rax),%rcx
  4132f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132fd:	ba c2 e9 43 00       	mov    $0x43e9c2,%edx
  413302:	48 89 ce             	mov    %rcx,%rsi
  413305:	48 89 c7             	mov    %rax,%rdi
  413308:	e8 12 ff ff ff       	callq  41321f <checkmode>
  41330d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413311:	48 8b 50 58          	mov    0x58(%rax),%rdx
  413315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413319:	48 8b 08             	mov    (%rax),%rcx
  41331c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413320:	48 89 ce             	mov    %rcx,%rsi
  413323:	48 89 c7             	mov    %rax,%rdi
  413326:	e8 d8 e8 01 00       	callq  431c03 <luaU_undump>
  41332b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41332f:	eb 55                	jmp    413386 <f_parser+0xfd>
  413331:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413335:	48 8b 48 50          	mov    0x50(%rax),%rcx
  413339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41333d:	ba c9 e9 43 00       	mov    $0x43e9c9,%edx
  413342:	48 89 ce             	mov    %rcx,%rsi
  413345:	48 89 c7             	mov    %rax,%rdi
  413348:	e8 d2 fe ff ff       	callq  41321f <checkmode>
  41334d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413351:	48 8b 78 58          	mov    0x58(%rax),%rdi
  413355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413359:	48 8d 48 20          	lea    0x20(%rax),%rcx
  41335d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413361:	48 8d 50 08          	lea    0x8(%rax),%rdx
  413365:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413369:	48 8b 30             	mov    (%rax),%rsi
  41336c:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  413370:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413374:	45 89 c1             	mov    %r8d,%r9d
  413377:	49 89 f8             	mov    %rdi,%r8
  41337a:	48 89 c7             	mov    %rax,%rdi
  41337d:	e8 8e 22 01 00       	callq  425610 <luaY_parser>
  413382:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413386:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41338a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41338e:	48 89 d6             	mov    %rdx,%rsi
  413391:	48 89 c7             	mov    %rax,%rdi
  413394:	e8 5d 0b 00 00       	callq  413ef6 <luaF_initupvals>
  413399:	90                   	nop
  41339a:	c9                   	leaveq 
  41339b:	c3                   	retq   

000000000041339c <luaD_protectedparser>:
  41339c:	55                   	push   %rbp
  41339d:	48 89 e5             	mov    %rsp,%rbp
  4133a0:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  4133a7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  4133ab:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  4133af:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  4133b6:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
  4133bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4133c1:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  4133c7:	8d 90 00 00 01 00    	lea    0x10000(%rax),%edx
  4133cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4133d1:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  4133d7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4133db:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4133df:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4133e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4133ea:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4133f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4133f5:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  4133fc:	00 
  4133fd:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  413404:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  41340b:	00 
  41340c:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  413413:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  41341a:	00 
  41341b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  413422:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
  413429:	00 
  41342a:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  413431:	00 
  413432:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413436:	48 8b b0 a8 00 00 00 	mov    0xa8(%rax),%rsi
  41343d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413441:	48 8b 50 10          	mov    0x10(%rax),%rdx
  413445:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413449:	48 8b 40 30          	mov    0x30(%rax),%rax
  41344d:	48 89 d1             	mov    %rdx,%rcx
  413450:	48 29 c1             	sub    %rax,%rcx
  413453:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  413457:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41345b:	49 89 f0             	mov    %rsi,%r8
  41345e:	be 89 32 41 00       	mov    $0x413289,%esi
  413463:	48 89 c7             	mov    %rax,%rdi
  413466:	e8 ca fc ff ff       	callq  413135 <luaD_pcall>
  41346b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41346e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  413472:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  413476:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41347a:	b9 00 00 00 00       	mov    $0x0,%ecx
  41347f:	48 89 c7             	mov    %rax,%rdi
  413482:	e8 86 9d 00 00       	callq  41d20d <luaM_saferealloc_>
  413487:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41348b:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  413492:	00 
  413493:	8b 45 bc             	mov    -0x44(%rbp),%eax
  413496:	48 63 d0             	movslq %eax,%rdx
  413499:	48 89 d0             	mov    %rdx,%rax
  41349c:	48 01 c0             	add    %rax,%rax
  41349f:	48 01 d0             	add    %rdx,%rax
  4134a2:	48 c1 e0 03          	shl    $0x3,%rax
  4134a6:	48 89 c2             	mov    %rax,%rdx
  4134a9:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4134ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4134b1:	48 89 ce             	mov    %rcx,%rsi
  4134b4:	48 89 c7             	mov    %rax,%rdi
  4134b7:	e8 c3 9b 00 00       	callq  41d07f <luaM_free_>
  4134bc:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4134bf:	48 63 d0             	movslq %eax,%rdx
  4134c2:	48 89 d0             	mov    %rdx,%rax
  4134c5:	48 01 c0             	add    %rax,%rax
  4134c8:	48 01 d0             	add    %rdx,%rax
  4134cb:	48 c1 e0 03          	shl    $0x3,%rax
  4134cf:	48 89 c2             	mov    %rax,%rdx
  4134d2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4134d6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4134da:	48 89 ce             	mov    %rcx,%rsi
  4134dd:	48 89 c7             	mov    %rax,%rdi
  4134e0:	e8 9a 9b 00 00       	callq  41d07f <luaM_free_>
  4134e5:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4134e8:	48 63 d0             	movslq %eax,%rdx
  4134eb:	48 89 d0             	mov    %rdx,%rax
  4134ee:	48 01 c0             	add    %rax,%rax
  4134f1:	48 01 d0             	add    %rdx,%rax
  4134f4:	48 c1 e0 03          	shl    $0x3,%rax
  4134f8:	48 89 c2             	mov    %rax,%rdx
  4134fb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4134ff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413503:	48 89 ce             	mov    %rcx,%rsi
  413506:	48 89 c7             	mov    %rax,%rdi
  413509:	e8 71 9b 00 00       	callq  41d07f <luaM_free_>
  41350e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413512:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  413518:	8d 90 00 00 ff ff    	lea    -0x10000(%rax),%edx
  41351e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  413522:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  413528:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41352b:	c9                   	leaveq 
  41352c:	c3                   	retq   

000000000041352d <dumpBlock>:
  41352d:	55                   	push   %rbp
  41352e:	48 89 e5             	mov    %rsp,%rbp
  413531:	48 83 ec 20          	sub    $0x20,%rsp
  413535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413539:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41353d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  413541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413545:	8b 40 1c             	mov    0x1c(%rax),%eax
  413548:	85 c0                	test   %eax,%eax
  41354a:	75 31                	jne    41357d <dumpBlock+0x50>
  41354c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  413551:	74 2a                	je     41357d <dumpBlock+0x50>
  413553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413557:	48 8b 40 08          	mov    0x8(%rax),%rax
  41355b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41355f:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
  413563:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  413567:	48 8b 3a             	mov    (%rdx),%rdi
  41356a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41356e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  413572:	ff d0                	callq  *%rax
  413574:	89 c2                	mov    %eax,%edx
  413576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41357a:	89 50 1c             	mov    %edx,0x1c(%rax)
  41357d:	90                   	nop
  41357e:	c9                   	leaveq 
  41357f:	c3                   	retq   

0000000000413580 <dumpByte>:
  413580:	55                   	push   %rbp
  413581:	48 89 e5             	mov    %rsp,%rbp
  413584:	48 83 ec 20          	sub    $0x20,%rsp
  413588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41358c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41358f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413592:	88 45 ff             	mov    %al,-0x1(%rbp)
  413595:	48 8d 4d ff          	lea    -0x1(%rbp),%rcx
  413599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41359d:	ba 01 00 00 00       	mov    $0x1,%edx
  4135a2:	48 89 ce             	mov    %rcx,%rsi
  4135a5:	48 89 c7             	mov    %rax,%rdi
  4135a8:	e8 80 ff ff ff       	callq  41352d <dumpBlock>
  4135ad:	90                   	nop
  4135ae:	c9                   	leaveq 
  4135af:	c3                   	retq   

00000000004135b0 <dumpSize>:
  4135b0:	55                   	push   %rbp
  4135b1:	48 89 e5             	mov    %rsp,%rbp
  4135b4:	48 83 ec 20          	sub    $0x20,%rsp
  4135b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4135bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4135c0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4135c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4135cb:	89 c2                	mov    %eax,%edx
  4135cd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4135d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4135d4:	48 98                	cltq   
  4135d6:	b9 0a 00 00 00       	mov    $0xa,%ecx
  4135db:	48 29 c1             	sub    %rax,%rcx
  4135de:	48 89 c8             	mov    %rcx,%rax
  4135e1:	83 e2 7f             	and    $0x7f,%edx
  4135e4:	88 54 05 f2          	mov    %dl,-0xe(%rbp,%rax,1)
  4135e8:	48 c1 6d e0 07       	shrq   $0x7,-0x20(%rbp)
  4135ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4135f2:	75 d3                	jne    4135c7 <dumpSize+0x17>
  4135f4:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  4135f8:	83 c8 80             	or     $0xffffff80,%eax
  4135fb:	88 45 fb             	mov    %al,-0x5(%rbp)
  4135fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413601:	48 63 d0             	movslq %eax,%rdx
  413604:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413607:	48 98                	cltq   
  413609:	b9 0a 00 00 00       	mov    $0xa,%ecx
  41360e:	48 29 c1             	sub    %rax,%rcx
  413611:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
  413615:	48 01 c1             	add    %rax,%rcx
  413618:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41361c:	48 89 ce             	mov    %rcx,%rsi
  41361f:	48 89 c7             	mov    %rax,%rdi
  413622:	e8 06 ff ff ff       	callq  41352d <dumpBlock>
  413627:	90                   	nop
  413628:	c9                   	leaveq 
  413629:	c3                   	retq   

000000000041362a <dumpInt>:
  41362a:	55                   	push   %rbp
  41362b:	48 89 e5             	mov    %rsp,%rbp
  41362e:	48 83 ec 10          	sub    $0x10,%rsp
  413632:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413636:	89 75 f4             	mov    %esi,-0xc(%rbp)
  413639:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41363c:	48 63 d0             	movslq %eax,%rdx
  41363f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413643:	48 89 d6             	mov    %rdx,%rsi
  413646:	48 89 c7             	mov    %rax,%rdi
  413649:	e8 62 ff ff ff       	callq  4135b0 <dumpSize>
  41364e:	90                   	nop
  41364f:	c9                   	leaveq 
  413650:	c3                   	retq   

0000000000413651 <dumpNumber>:
  413651:	55                   	push   %rbp
  413652:	48 89 e5             	mov    %rsp,%rbp
  413655:	48 83 ec 10          	sub    $0x10,%rsp
  413659:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41365d:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  413662:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  413666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41366a:	ba 08 00 00 00       	mov    $0x8,%edx
  41366f:	48 89 ce             	mov    %rcx,%rsi
  413672:	48 89 c7             	mov    %rax,%rdi
  413675:	e8 b3 fe ff ff       	callq  41352d <dumpBlock>
  41367a:	90                   	nop
  41367b:	c9                   	leaveq 
  41367c:	c3                   	retq   

000000000041367d <dumpInteger>:
  41367d:	55                   	push   %rbp
  41367e:	48 89 e5             	mov    %rsp,%rbp
  413681:	48 83 ec 10          	sub    $0x10,%rsp
  413685:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413689:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41368d:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  413691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413695:	ba 08 00 00 00       	mov    $0x8,%edx
  41369a:	48 89 ce             	mov    %rcx,%rsi
  41369d:	48 89 c7             	mov    %rax,%rdi
  4136a0:	e8 88 fe ff ff       	callq  41352d <dumpBlock>
  4136a5:	90                   	nop
  4136a6:	c9                   	leaveq 
  4136a7:	c3                   	retq   

00000000004136a8 <dumpString>:
  4136a8:	55                   	push   %rbp
  4136a9:	48 89 e5             	mov    %rsp,%rbp
  4136ac:	48 83 ec 20          	sub    $0x20,%rsp
  4136b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4136b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4136b8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4136bd:	75 13                	jne    4136d2 <dumpString+0x2a>
  4136bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4136c3:	be 00 00 00 00       	mov    $0x0,%esi
  4136c8:	48 89 c7             	mov    %rax,%rdi
  4136cb:	e8 e0 fe ff ff       	callq  4135b0 <dumpSize>
  4136d0:	eb 5f                	jmp    413731 <dumpString+0x89>
  4136d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4136d6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4136da:	3c 04                	cmp    $0x4,%al
  4136dc:	75 0d                	jne    4136eb <dumpString+0x43>
  4136de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4136e2:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  4136e6:	0f b6 c0             	movzbl %al,%eax
  4136e9:	eb 08                	jmp    4136f3 <dumpString+0x4b>
  4136eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4136ef:	48 8b 40 10          	mov    0x10(%rax),%rax
  4136f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4136f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4136fb:	48 83 c0 18          	add    $0x18,%rax
  4136ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413707:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41370b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41370f:	48 89 d6             	mov    %rdx,%rsi
  413712:	48 89 c7             	mov    %rax,%rdi
  413715:	e8 96 fe ff ff       	callq  4135b0 <dumpSize>
  41371a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41371e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  413722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413726:	48 89 ce             	mov    %rcx,%rsi
  413729:	48 89 c7             	mov    %rax,%rdi
  41372c:	e8 fc fd ff ff       	callq  41352d <dumpBlock>
  413731:	90                   	nop
  413732:	c9                   	leaveq 
  413733:	c3                   	retq   

0000000000413734 <dumpCode>:
  413734:	55                   	push   %rbp
  413735:	48 89 e5             	mov    %rsp,%rbp
  413738:	48 83 ec 10          	sub    $0x10,%rsp
  41373c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413740:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413744:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413748:	8b 50 18             	mov    0x18(%rax),%edx
  41374b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41374f:	89 d6                	mov    %edx,%esi
  413751:	48 89 c7             	mov    %rax,%rdi
  413754:	e8 d1 fe ff ff       	callq  41362a <dumpInt>
  413759:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41375d:	8b 40 18             	mov    0x18(%rax),%eax
  413760:	48 98                	cltq   
  413762:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  413769:	00 
  41376a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41376e:	48 8b 48 40          	mov    0x40(%rax),%rcx
  413772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413776:	48 89 ce             	mov    %rcx,%rsi
  413779:	48 89 c7             	mov    %rax,%rdi
  41377c:	e8 ac fd ff ff       	callq  41352d <dumpBlock>
  413781:	90                   	nop
  413782:	c9                   	leaveq 
  413783:	c3                   	retq   

0000000000413784 <dumpConstants>:
  413784:	55                   	push   %rbp
  413785:	48 89 e5             	mov    %rsp,%rbp
  413788:	48 83 ec 30          	sub    $0x30,%rsp
  41378c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413790:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413794:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413798:	8b 40 14             	mov    0x14(%rax),%eax
  41379b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  41379e:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4137a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137a5:	89 d6                	mov    %edx,%esi
  4137a7:	48 89 c7             	mov    %rax,%rdi
  4137aa:	e8 7b fe ff ff       	callq  41362a <dumpInt>
  4137af:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4137b6:	e9 a9 00 00 00       	jmpq   413864 <dumpConstants+0xe0>
  4137bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4137bf:	48 8b 40 38          	mov    0x38(%rax),%rax
  4137c3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4137c6:	48 63 d2             	movslq %edx,%rdx
  4137c9:	48 c1 e2 04          	shl    $0x4,%rdx
  4137cd:	48 01 d0             	add    %rdx,%rax
  4137d0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4137d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4137d8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4137dc:	0f b6 c0             	movzbl %al,%eax
  4137df:	83 e0 3f             	and    $0x3f,%eax
  4137e2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4137e5:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4137e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137ec:	89 d6                	mov    %edx,%esi
  4137ee:	48 89 c7             	mov    %rax,%rdi
  4137f1:	e8 8a fd ff ff       	callq  413580 <dumpByte>
  4137f6:	83 7d ec 04          	cmpl   $0x4,-0x14(%rbp)
  4137fa:	74 4a                	je     413846 <dumpConstants+0xc2>
  4137fc:	83 7d ec 04          	cmpl   $0x4,-0x14(%rbp)
  413800:	7f 08                	jg     41380a <dumpConstants+0x86>
  413802:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
  413806:	74 26                	je     41382e <dumpConstants+0xaa>
  413808:	eb 56                	jmp    413860 <dumpConstants+0xdc>
  41380a:	83 7d ec 13          	cmpl   $0x13,-0x14(%rbp)
  41380e:	74 08                	je     413818 <dumpConstants+0x94>
  413810:	83 7d ec 14          	cmpl   $0x14,-0x14(%rbp)
  413814:	74 30                	je     413846 <dumpConstants+0xc2>
  413816:	eb 48                	jmp    413860 <dumpConstants+0xdc>
  413818:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41381c:	f2 0f 10 00          	movsd  (%rax),%xmm0
  413820:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413824:	48 89 c7             	mov    %rax,%rdi
  413827:	e8 25 fe ff ff       	callq  413651 <dumpNumber>
  41382c:	eb 32                	jmp    413860 <dumpConstants+0xdc>
  41382e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413832:	48 8b 10             	mov    (%rax),%rdx
  413835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413839:	48 89 d6             	mov    %rdx,%rsi
  41383c:	48 89 c7             	mov    %rax,%rdi
  41383f:	e8 39 fe ff ff       	callq  41367d <dumpInteger>
  413844:	eb 1a                	jmp    413860 <dumpConstants+0xdc>
  413846:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41384a:	48 8b 00             	mov    (%rax),%rax
  41384d:	48 89 c2             	mov    %rax,%rdx
  413850:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413854:	48 89 d6             	mov    %rdx,%rsi
  413857:	48 89 c7             	mov    %rax,%rdi
  41385a:	e8 49 fe ff ff       	callq  4136a8 <dumpString>
  41385f:	90                   	nop
  413860:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  413864:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413867:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  41386a:	0f 8c 4b ff ff ff    	jl     4137bb <dumpConstants+0x37>
  413870:	90                   	nop
  413871:	c9                   	leaveq 
  413872:	c3                   	retq   

0000000000413873 <dumpProtos>:
  413873:	55                   	push   %rbp
  413874:	48 89 e5             	mov    %rsp,%rbp
  413877:	48 83 ec 20          	sub    $0x20,%rsp
  41387b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41387f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413883:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413887:	8b 40 20             	mov    0x20(%rax),%eax
  41388a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  41388d:	8b 55 f8             	mov    -0x8(%rbp),%edx
  413890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413894:	89 d6                	mov    %edx,%esi
  413896:	48 89 c7             	mov    %rax,%rdi
  413899:	e8 8c fd ff ff       	callq  41362a <dumpInt>
  41389e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4138a5:	eb 33                	jmp    4138da <dumpProtos+0x67>
  4138a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4138ab:	48 8b 50 70          	mov    0x70(%rax),%rdx
  4138af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4138b3:	48 8b 40 48          	mov    0x48(%rax),%rax
  4138b7:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4138ba:	48 63 c9             	movslq %ecx,%rcx
  4138bd:	48 c1 e1 03          	shl    $0x3,%rcx
  4138c1:	48 01 c8             	add    %rcx,%rax
  4138c4:	48 8b 08             	mov    (%rax),%rcx
  4138c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4138cb:	48 89 ce             	mov    %rcx,%rsi
  4138ce:	48 89 c7             	mov    %rax,%rdi
  4138d1:	e8 df 02 00 00       	callq  413bb5 <dumpFunction>
  4138d6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4138da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4138dd:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4138e0:	7c c5                	jl     4138a7 <dumpProtos+0x34>
  4138e2:	90                   	nop
  4138e3:	c9                   	leaveq 
  4138e4:	c3                   	retq   

00000000004138e5 <dumpUpvalues>:
  4138e5:	55                   	push   %rbp
  4138e6:	48 89 e5             	mov    %rsp,%rbp
  4138e9:	48 83 ec 20          	sub    $0x20,%rsp
  4138ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4138f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4138f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4138f9:	8b 40 10             	mov    0x10(%rax),%eax
  4138fc:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4138ff:	8b 55 f8             	mov    -0x8(%rbp),%edx
  413902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413906:	89 d6                	mov    %edx,%esi
  413908:	48 89 c7             	mov    %rax,%rdi
  41390b:	e8 1a fd ff ff       	callq  41362a <dumpInt>
  413910:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413917:	e9 82 00 00 00       	jmpq   41399e <dumpUpvalues+0xb9>
  41391c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413920:	48 8b 40 50          	mov    0x50(%rax),%rax
  413924:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413927:	48 63 d2             	movslq %edx,%rdx
  41392a:	48 c1 e2 04          	shl    $0x4,%rdx
  41392e:	48 01 d0             	add    %rdx,%rax
  413931:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  413935:	0f b6 d0             	movzbl %al,%edx
  413938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41393c:	89 d6                	mov    %edx,%esi
  41393e:	48 89 c7             	mov    %rax,%rdi
  413941:	e8 3a fc ff ff       	callq  413580 <dumpByte>
  413946:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41394a:	48 8b 40 50          	mov    0x50(%rax),%rax
  41394e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413951:	48 63 d2             	movslq %edx,%rdx
  413954:	48 c1 e2 04          	shl    $0x4,%rdx
  413958:	48 01 d0             	add    %rdx,%rax
  41395b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41395f:	0f b6 d0             	movzbl %al,%edx
  413962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413966:	89 d6                	mov    %edx,%esi
  413968:	48 89 c7             	mov    %rax,%rdi
  41396b:	e8 10 fc ff ff       	callq  413580 <dumpByte>
  413970:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413974:	48 8b 40 50          	mov    0x50(%rax),%rax
  413978:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41397b:	48 63 d2             	movslq %edx,%rdx
  41397e:	48 c1 e2 04          	shl    $0x4,%rdx
  413982:	48 01 d0             	add    %rdx,%rax
  413985:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  413989:	0f b6 d0             	movzbl %al,%edx
  41398c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413990:	89 d6                	mov    %edx,%esi
  413992:	48 89 c7             	mov    %rax,%rdi
  413995:	e8 e6 fb ff ff       	callq  413580 <dumpByte>
  41399a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41399e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4139a1:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4139a4:	0f 8c 72 ff ff ff    	jl     41391c <dumpUpvalues+0x37>
  4139aa:	90                   	nop
  4139ab:	c9                   	leaveq 
  4139ac:	c3                   	retq   

00000000004139ad <dumpDebug>:
  4139ad:	55                   	push   %rbp
  4139ae:	48 89 e5             	mov    %rsp,%rbp
  4139b1:	48 83 ec 20          	sub    $0x20,%rsp
  4139b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4139b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4139bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139c1:	8b 40 18             	mov    0x18(%rax),%eax
  4139c4:	85 c0                	test   %eax,%eax
  4139c6:	75 09                	jne    4139d1 <dumpDebug+0x24>
  4139c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4139cc:	8b 40 1c             	mov    0x1c(%rax),%eax
  4139cf:	eb 05                	jmp    4139d6 <dumpDebug+0x29>
  4139d1:	b8 00 00 00 00       	mov    $0x0,%eax
  4139d6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4139d9:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4139dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139e0:	89 d6                	mov    %edx,%esi
  4139e2:	48 89 c7             	mov    %rax,%rdi
  4139e5:	e8 40 fc ff ff       	callq  41362a <dumpInt>
  4139ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4139ed:	48 63 d0             	movslq %eax,%rdx
  4139f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4139f4:	48 8b 48 58          	mov    0x58(%rax),%rcx
  4139f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139fc:	48 89 ce             	mov    %rcx,%rsi
  4139ff:	48 89 c7             	mov    %rax,%rdi
  413a02:	e8 26 fb ff ff       	callq  41352d <dumpBlock>
  413a07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a0b:	8b 40 18             	mov    0x18(%rax),%eax
  413a0e:	85 c0                	test   %eax,%eax
  413a10:	75 09                	jne    413a1b <dumpDebug+0x6e>
  413a12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413a16:	8b 40 28             	mov    0x28(%rax),%eax
  413a19:	eb 05                	jmp    413a20 <dumpDebug+0x73>
  413a1b:	b8 00 00 00 00       	mov    $0x0,%eax
  413a20:	89 45 f8             	mov    %eax,-0x8(%rbp)
  413a23:	8b 55 f8             	mov    -0x8(%rbp),%edx
  413a26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a2a:	89 d6                	mov    %edx,%esi
  413a2c:	48 89 c7             	mov    %rax,%rdi
  413a2f:	e8 f6 fb ff ff       	callq  41362a <dumpInt>
  413a34:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413a3b:	eb 4f                	jmp    413a8c <dumpDebug+0xdf>
  413a3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413a41:	48 8b 40 60          	mov    0x60(%rax),%rax
  413a45:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413a48:	48 63 d2             	movslq %edx,%rdx
  413a4b:	48 c1 e2 03          	shl    $0x3,%rdx
  413a4f:	48 01 d0             	add    %rdx,%rax
  413a52:	8b 10                	mov    (%rax),%edx
  413a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a58:	89 d6                	mov    %edx,%esi
  413a5a:	48 89 c7             	mov    %rax,%rdi
  413a5d:	e8 c8 fb ff ff       	callq  41362a <dumpInt>
  413a62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413a66:	48 8b 40 60          	mov    0x60(%rax),%rax
  413a6a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413a6d:	48 63 d2             	movslq %edx,%rdx
  413a70:	48 c1 e2 03          	shl    $0x3,%rdx
  413a74:	48 01 d0             	add    %rdx,%rax
  413a77:	8b 50 04             	mov    0x4(%rax),%edx
  413a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a7e:	89 d6                	mov    %edx,%esi
  413a80:	48 89 c7             	mov    %rax,%rdi
  413a83:	e8 a2 fb ff ff       	callq  41362a <dumpInt>
  413a88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  413a8c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413a8f:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  413a92:	7c a9                	jl     413a3d <dumpDebug+0x90>
  413a94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a98:	8b 40 18             	mov    0x18(%rax),%eax
  413a9b:	85 c0                	test   %eax,%eax
  413a9d:	75 09                	jne    413aa8 <dumpDebug+0xfb>
  413a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413aa3:	8b 40 24             	mov    0x24(%rax),%eax
  413aa6:	eb 05                	jmp    413aad <dumpDebug+0x100>
  413aa8:	b8 00 00 00 00       	mov    $0x0,%eax
  413aad:	89 45 f8             	mov    %eax,-0x8(%rbp)
  413ab0:	8b 55 f8             	mov    -0x8(%rbp),%edx
  413ab3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413ab7:	89 d6                	mov    %edx,%esi
  413ab9:	48 89 c7             	mov    %rax,%rdi
  413abc:	e8 69 fb ff ff       	callq  41362a <dumpInt>
  413ac1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413ac8:	eb 77                	jmp    413b41 <dumpDebug+0x194>
  413aca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413ace:	48 8b 40 68          	mov    0x68(%rax),%rax
  413ad2:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413ad5:	48 63 d2             	movslq %edx,%rdx
  413ad8:	48 c1 e2 04          	shl    $0x4,%rdx
  413adc:	48 01 d0             	add    %rdx,%rax
  413adf:	48 8b 10             	mov    (%rax),%rdx
  413ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413ae6:	48 89 d6             	mov    %rdx,%rsi
  413ae9:	48 89 c7             	mov    %rax,%rdi
  413aec:	e8 b7 fb ff ff       	callq  4136a8 <dumpString>
  413af1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413af5:	48 8b 40 68          	mov    0x68(%rax),%rax
  413af9:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413afc:	48 63 d2             	movslq %edx,%rdx
  413aff:	48 c1 e2 04          	shl    $0x4,%rdx
  413b03:	48 01 d0             	add    %rdx,%rax
  413b06:	8b 50 08             	mov    0x8(%rax),%edx
  413b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413b0d:	89 d6                	mov    %edx,%esi
  413b0f:	48 89 c7             	mov    %rax,%rdi
  413b12:	e8 13 fb ff ff       	callq  41362a <dumpInt>
  413b17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413b1b:	48 8b 40 68          	mov    0x68(%rax),%rax
  413b1f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413b22:	48 63 d2             	movslq %edx,%rdx
  413b25:	48 c1 e2 04          	shl    $0x4,%rdx
  413b29:	48 01 d0             	add    %rdx,%rax
  413b2c:	8b 50 0c             	mov    0xc(%rax),%edx
  413b2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413b33:	89 d6                	mov    %edx,%esi
  413b35:	48 89 c7             	mov    %rax,%rdi
  413b38:	e8 ed fa ff ff       	callq  41362a <dumpInt>
  413b3d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  413b41:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413b44:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  413b47:	7c 81                	jl     413aca <dumpDebug+0x11d>
  413b49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413b4d:	8b 40 18             	mov    0x18(%rax),%eax
  413b50:	85 c0                	test   %eax,%eax
  413b52:	75 09                	jne    413b5d <dumpDebug+0x1b0>
  413b54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413b58:	8b 40 10             	mov    0x10(%rax),%eax
  413b5b:	eb 05                	jmp    413b62 <dumpDebug+0x1b5>
  413b5d:	b8 00 00 00 00       	mov    $0x0,%eax
  413b62:	89 45 f8             	mov    %eax,-0x8(%rbp)
  413b65:	8b 55 f8             	mov    -0x8(%rbp),%edx
  413b68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413b6c:	89 d6                	mov    %edx,%esi
  413b6e:	48 89 c7             	mov    %rax,%rdi
  413b71:	e8 b4 fa ff ff       	callq  41362a <dumpInt>
  413b76:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413b7d:	eb 2b                	jmp    413baa <dumpDebug+0x1fd>
  413b7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413b83:	48 8b 40 50          	mov    0x50(%rax),%rax
  413b87:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413b8a:	48 63 d2             	movslq %edx,%rdx
  413b8d:	48 c1 e2 04          	shl    $0x4,%rdx
  413b91:	48 01 d0             	add    %rdx,%rax
  413b94:	48 8b 10             	mov    (%rax),%rdx
  413b97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413b9b:	48 89 d6             	mov    %rdx,%rsi
  413b9e:	48 89 c7             	mov    %rax,%rdi
  413ba1:	e8 02 fb ff ff       	callq  4136a8 <dumpString>
  413ba6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  413baa:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413bad:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  413bb0:	7c cd                	jl     413b7f <dumpDebug+0x1d2>
  413bb2:	90                   	nop
  413bb3:	c9                   	leaveq 
  413bb4:	c3                   	retq   

0000000000413bb5 <dumpFunction>:
  413bb5:	55                   	push   %rbp
  413bb6:	48 89 e5             	mov    %rsp,%rbp
  413bb9:	48 83 ec 20          	sub    $0x20,%rsp
  413bbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413bc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413bc5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  413bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413bcd:	8b 40 18             	mov    0x18(%rax),%eax
  413bd0:	85 c0                	test   %eax,%eax
  413bd2:	75 0e                	jne    413be2 <dumpFunction+0x2d>
  413bd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413bd8:	48 8b 40 70          	mov    0x70(%rax),%rax
  413bdc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  413be0:	75 13                	jne    413bf5 <dumpFunction+0x40>
  413be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413be6:	be 00 00 00 00       	mov    $0x0,%esi
  413beb:	48 89 c7             	mov    %rax,%rdi
  413bee:	e8 b5 fa ff ff       	callq  4136a8 <dumpString>
  413bf3:	eb 17                	jmp    413c0c <dumpFunction+0x57>
  413bf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413bf9:	48 8b 50 70          	mov    0x70(%rax),%rdx
  413bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c01:	48 89 d6             	mov    %rdx,%rsi
  413c04:	48 89 c7             	mov    %rax,%rdi
  413c07:	e8 9c fa ff ff       	callq  4136a8 <dumpString>
  413c0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413c10:	8b 50 2c             	mov    0x2c(%rax),%edx
  413c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c17:	89 d6                	mov    %edx,%esi
  413c19:	48 89 c7             	mov    %rax,%rdi
  413c1c:	e8 09 fa ff ff       	callq  41362a <dumpInt>
  413c21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413c25:	8b 50 30             	mov    0x30(%rax),%edx
  413c28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c2c:	89 d6                	mov    %edx,%esi
  413c2e:	48 89 c7             	mov    %rax,%rdi
  413c31:	e8 f4 f9 ff ff       	callq  41362a <dumpInt>
  413c36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413c3a:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  413c3e:	0f b6 d0             	movzbl %al,%edx
  413c41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c45:	89 d6                	mov    %edx,%esi
  413c47:	48 89 c7             	mov    %rax,%rdi
  413c4a:	e8 31 f9 ff ff       	callq  413580 <dumpByte>
  413c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413c53:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  413c57:	0f b6 d0             	movzbl %al,%edx
  413c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c5e:	89 d6                	mov    %edx,%esi
  413c60:	48 89 c7             	mov    %rax,%rdi
  413c63:	e8 18 f9 ff ff       	callq  413580 <dumpByte>
  413c68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413c6c:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  413c70:	0f b6 d0             	movzbl %al,%edx
  413c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c77:	89 d6                	mov    %edx,%esi
  413c79:	48 89 c7             	mov    %rax,%rdi
  413c7c:	e8 ff f8 ff ff       	callq  413580 <dumpByte>
  413c81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c89:	48 89 d6             	mov    %rdx,%rsi
  413c8c:	48 89 c7             	mov    %rax,%rdi
  413c8f:	e8 a0 fa ff ff       	callq  413734 <dumpCode>
  413c94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413c9c:	48 89 d6             	mov    %rdx,%rsi
  413c9f:	48 89 c7             	mov    %rax,%rdi
  413ca2:	e8 dd fa ff ff       	callq  413784 <dumpConstants>
  413ca7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413caf:	48 89 d6             	mov    %rdx,%rsi
  413cb2:	48 89 c7             	mov    %rax,%rdi
  413cb5:	e8 2b fc ff ff       	callq  4138e5 <dumpUpvalues>
  413cba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413cc2:	48 89 d6             	mov    %rdx,%rsi
  413cc5:	48 89 c7             	mov    %rax,%rdi
  413cc8:	e8 a6 fb ff ff       	callq  413873 <dumpProtos>
  413ccd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413cd5:	48 89 d6             	mov    %rdx,%rsi
  413cd8:	48 89 c7             	mov    %rax,%rdi
  413cdb:	e8 cd fc ff ff       	callq  4139ad <dumpDebug>
  413ce0:	90                   	nop
  413ce1:	c9                   	leaveq 
  413ce2:	c3                   	retq   

0000000000413ce3 <dumpHeader>:
  413ce3:	55                   	push   %rbp
  413ce4:	48 89 e5             	mov    %rsp,%rbp
  413ce7:	48 83 ec 10          	sub    $0x10,%rsp
  413ceb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413cf3:	ba 04 00 00 00       	mov    $0x4,%edx
  413cf8:	be d0 e9 43 00       	mov    $0x43e9d0,%esi
  413cfd:	48 89 c7             	mov    %rax,%rdi
  413d00:	e8 28 f8 ff ff       	callq  41352d <dumpBlock>
  413d05:	b8 35 00 00 00       	mov    $0x35,%eax
  413d0a:	0f be c0             	movsbl %al,%eax
  413d0d:	83 e8 30             	sub    $0x30,%eax
  413d10:	c1 e0 04             	shl    $0x4,%eax
  413d13:	89 c2                	mov    %eax,%edx
  413d15:	b8 34 00 00 00       	mov    $0x34,%eax
  413d1a:	0f be c0             	movsbl %al,%eax
  413d1d:	83 e8 30             	sub    $0x30,%eax
  413d20:	01 c2                	add    %eax,%edx
  413d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d26:	89 d6                	mov    %edx,%esi
  413d28:	48 89 c7             	mov    %rax,%rdi
  413d2b:	e8 50 f8 ff ff       	callq  413580 <dumpByte>
  413d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d34:	be 00 00 00 00       	mov    $0x0,%esi
  413d39:	48 89 c7             	mov    %rax,%rdi
  413d3c:	e8 3f f8 ff ff       	callq  413580 <dumpByte>
  413d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d45:	ba 06 00 00 00       	mov    $0x6,%edx
  413d4a:	be d5 e9 43 00       	mov    $0x43e9d5,%esi
  413d4f:	48 89 c7             	mov    %rax,%rdi
  413d52:	e8 d6 f7 ff ff       	callq  41352d <dumpBlock>
  413d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d5b:	be 04 00 00 00       	mov    $0x4,%esi
  413d60:	48 89 c7             	mov    %rax,%rdi
  413d63:	e8 18 f8 ff ff       	callq  413580 <dumpByte>
  413d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d6c:	be 08 00 00 00       	mov    $0x8,%esi
  413d71:	48 89 c7             	mov    %rax,%rdi
  413d74:	e8 07 f8 ff ff       	callq  413580 <dumpByte>
  413d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d7d:	be 08 00 00 00       	mov    $0x8,%esi
  413d82:	48 89 c7             	mov    %rax,%rdi
  413d85:	e8 f6 f7 ff ff       	callq  413580 <dumpByte>
  413d8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413d8e:	be 78 56 00 00       	mov    $0x5678,%esi
  413d93:	48 89 c7             	mov    %rax,%rdi
  413d96:	e8 e2 f8 ff ff       	callq  41367d <dumpInteger>
  413d9b:	f2 0f 10 05 3d ac 02 	movsd  0x2ac3d(%rip),%xmm0        # 43e9e0 <hooknames.3439+0x6e0>
  413da2:	00 
  413da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413da7:	48 89 c7             	mov    %rax,%rdi
  413daa:	e8 a2 f8 ff ff       	callq  413651 <dumpNumber>
  413daf:	90                   	nop
  413db0:	c9                   	leaveq 
  413db1:	c3                   	retq   

0000000000413db2 <luaU_dump>:
  413db2:	55                   	push   %rbp
  413db3:	48 89 e5             	mov    %rsp,%rbp
  413db6:	48 83 ec 50          	sub    $0x50,%rsp
  413dba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413dbe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413dc2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413dc6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  413dca:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)
  413dce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413dd2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  413dd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413dda:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  413dde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  413de2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413de6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  413de9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  413dec:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413df3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  413df7:	48 89 c7             	mov    %rax,%rdi
  413dfa:	e8 e4 fe ff ff       	callq  413ce3 <dumpHeader>
  413dff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413e03:	8b 50 10             	mov    0x10(%rax),%edx
  413e06:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  413e0a:	89 d6                	mov    %edx,%esi
  413e0c:	48 89 c7             	mov    %rax,%rdi
  413e0f:	e8 6c f7 ff ff       	callq  413580 <dumpByte>
  413e14:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  413e18:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  413e1c:	ba 00 00 00 00       	mov    $0x0,%edx
  413e21:	48 89 ce             	mov    %rcx,%rsi
  413e24:	48 89 c7             	mov    %rax,%rdi
  413e27:	e8 89 fd ff ff       	callq  413bb5 <dumpFunction>
  413e2c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  413e2f:	c9                   	leaveq 
  413e30:	c3                   	retq   

0000000000413e31 <luaF_newCclosure>:
  413e31:	55                   	push   %rbp
  413e32:	48 89 e5             	mov    %rsp,%rbp
  413e35:	48 83 ec 20          	sub    $0x20,%rsp
  413e39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413e3d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  413e40:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413e43:	83 c0 02             	add    $0x2,%eax
  413e46:	c1 e0 04             	shl    $0x4,%eax
  413e49:	48 63 d0             	movslq %eax,%rdx
  413e4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413e50:	be 26 00 00 00       	mov    $0x26,%esi
  413e55:	48 89 c7             	mov    %rax,%rdi
  413e58:	e8 39 0e 00 00       	callq  414c96 <luaC_newobj>
  413e5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413e65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413e69:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413e6c:	89 c2                	mov    %eax,%edx
  413e6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413e72:	88 50 0a             	mov    %dl,0xa(%rax)
  413e75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413e79:	c9                   	leaveq 
  413e7a:	c3                   	retq   

0000000000413e7b <luaF_newLclosure>:
  413e7b:	55                   	push   %rbp
  413e7c:	48 89 e5             	mov    %rsp,%rbp
  413e7f:	48 83 ec 20          	sub    $0x20,%rsp
  413e83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413e87:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  413e8a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413e8d:	83 c0 04             	add    $0x4,%eax
  413e90:	c1 e0 03             	shl    $0x3,%eax
  413e93:	48 63 d0             	movslq %eax,%rdx
  413e96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413e9a:	be 06 00 00 00       	mov    $0x6,%esi
  413e9f:	48 89 c7             	mov    %rax,%rdi
  413ea2:	e8 ef 0d 00 00       	callq  414c96 <luaC_newobj>
  413ea7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413eaf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413eb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413eb7:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  413ebe:	00 
  413ebf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413ec2:	89 c2                	mov    %eax,%edx
  413ec4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413ec8:	88 50 0a             	mov    %dl,0xa(%rax)
  413ecb:	eb 16                	jmp    413ee3 <luaF_newLclosure+0x68>
  413ecd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413ed1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  413ed4:	48 63 d2             	movslq %edx,%rdx
  413ed7:	48 83 c2 04          	add    $0x4,%rdx
  413edb:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
  413ee2:	00 
  413ee3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  413ee6:	8d 50 ff             	lea    -0x1(%rax),%edx
  413ee9:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  413eec:	85 c0                	test   %eax,%eax
  413eee:	75 dd                	jne    413ecd <luaF_newLclosure+0x52>
  413ef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413ef4:	c9                   	leaveq 
  413ef5:	c3                   	retq   

0000000000413ef6 <luaF_initupvals>:
  413ef6:	55                   	push   %rbp
  413ef7:	48 89 e5             	mov    %rsp,%rbp
  413efa:	48 83 ec 30          	sub    $0x30,%rsp
  413efe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413f02:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413f06:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413f0d:	e9 93 00 00 00       	jmpq   413fa5 <luaF_initupvals+0xaf>
  413f12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f16:	ba 28 00 00 00       	mov    $0x28,%edx
  413f1b:	be 09 00 00 00       	mov    $0x9,%esi
  413f20:	48 89 c7             	mov    %rax,%rdi
  413f23:	e8 6e 0d 00 00       	callq  414c96 <luaC_newobj>
  413f28:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413f2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413f30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  413f34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413f38:	48 8d 50 18          	lea    0x18(%rax),%rdx
  413f3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413f40:	48 89 50 10          	mov    %rdx,0x10(%rax)
  413f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413f48:	48 8b 40 10          	mov    0x10(%rax),%rax
  413f4c:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  413f50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413f54:	8b 55 fc             	mov    -0x4(%rbp),%edx
  413f57:	48 63 d2             	movslq %edx,%rdx
  413f5a:	48 8d 4a 04          	lea    0x4(%rdx),%rcx
  413f5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  413f62:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
  413f66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413f6a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  413f6e:	0f b6 c0             	movzbl %al,%eax
  413f71:	83 e0 20             	and    $0x20,%eax
  413f74:	85 c0                	test   %eax,%eax
  413f76:	74 29                	je     413fa1 <luaF_initupvals+0xab>
  413f78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413f7c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  413f80:	0f b6 c0             	movzbl %al,%eax
  413f83:	83 e0 18             	and    $0x18,%eax
  413f86:	85 c0                	test   %eax,%eax
  413f88:	74 17                	je     413fa1 <luaF_initupvals+0xab>
  413f8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  413f8e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  413f92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f96:	48 89 ce             	mov    %rcx,%rsi
  413f99:	48 89 c7             	mov    %rax,%rdi
  413f9c:	e8 ae 0a 00 00       	callq  414a4f <luaC_barrier_>
  413fa1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  413fa5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413fa9:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  413fad:	0f b6 c0             	movzbl %al,%eax
  413fb0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  413fb3:	0f 8c 59 ff ff ff    	jl     413f12 <luaF_initupvals+0x1c>
  413fb9:	90                   	nop
  413fba:	c9                   	leaveq 
  413fbb:	c3                   	retq   

0000000000413fbc <newupval>:
  413fbc:	55                   	push   %rbp
  413fbd:	48 89 e5             	mov    %rsp,%rbp
  413fc0:	48 83 ec 40          	sub    $0x40,%rsp
  413fc4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413fc8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413fcc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413fd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413fd4:	ba 28 00 00 00       	mov    $0x28,%edx
  413fd9:	be 09 00 00 00       	mov    $0x9,%esi
  413fde:	48 89 c7             	mov    %rax,%rdi
  413fe1:	e8 b0 0c 00 00       	callq  414c96 <luaC_newobj>
  413fe6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413fee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413ff2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413ff6:	48 8b 00             	mov    (%rax),%rax
  413ff9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  413ffd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  414001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414005:	48 89 50 10          	mov    %rdx,0x10(%rax)
  414009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41400d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  414011:	48 89 50 18          	mov    %rdx,0x18(%rax)
  414015:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414019:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41401d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  414021:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  414026:	74 10                	je     414038 <newupval+0x7c>
  414028:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41402c:	48 8d 50 18          	lea    0x18(%rax),%rdx
  414030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414034:	48 89 50 20          	mov    %rdx,0x20(%rax)
  414038:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41403c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414040:	48 89 10             	mov    %rdx,(%rax)
  414043:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414047:	48 8b 40 50          	mov    0x50(%rax),%rax
  41404b:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  41404f:	75 2a                	jne    41407b <newupval+0xbf>
  414051:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414055:	48 8b 40 18          	mov    0x18(%rax),%rax
  414059:	48 8b 90 f8 00 00 00 	mov    0xf8(%rax),%rdx
  414060:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414064:	48 89 50 50          	mov    %rdx,0x50(%rax)
  414068:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41406c:	48 8b 40 18          	mov    0x18(%rax),%rax
  414070:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414074:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
  41407b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41407f:	c9                   	leaveq 
  414080:	c3                   	retq   

0000000000414081 <luaF_findupval>:
  414081:	55                   	push   %rbp
  414082:	48 89 e5             	mov    %rsp,%rbp
  414085:	48 83 ec 20          	sub    $0x20,%rsp
  414089:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41408d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414095:	48 83 c0 38          	add    $0x38,%rax
  414099:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41409d:	eb 20                	jmp    4140bf <luaF_findupval+0x3e>
  41409f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4140a3:	48 8b 40 10          	mov    0x10(%rax),%rax
  4140a7:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4140ab:	75 06                	jne    4140b3 <luaF_findupval+0x32>
  4140ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4140b1:	eb 43                	jmp    4140f6 <luaF_findupval+0x75>
  4140b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4140b7:	48 83 c0 18          	add    $0x18,%rax
  4140bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4140bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4140c3:	48 8b 00             	mov    (%rax),%rax
  4140c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4140ca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4140cf:	74 0e                	je     4140df <luaF_findupval+0x5e>
  4140d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4140d5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4140d9:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4140dd:	76 c0                	jbe    41409f <luaF_findupval+0x1e>
  4140df:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4140e3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4140e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4140eb:	48 89 ce             	mov    %rcx,%rsi
  4140ee:	48 89 c7             	mov    %rax,%rdi
  4140f1:	e8 c6 fe ff ff       	callq  413fbc <newupval>
  4140f6:	c9                   	leaveq 
  4140f7:	c3                   	retq   

00000000004140f8 <callclosemethod>:
  4140f8:	55                   	push   %rbp
  4140f9:	48 89 e5             	mov    %rsp,%rbp
  4140fc:	48 83 ec 60          	sub    $0x60,%rsp
  414100:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  414104:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  414108:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41410c:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  41410f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  414113:	48 8b 40 10          	mov    0x10(%rax),%rax
  414117:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41411b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41411f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  414123:	ba 18 00 00 00       	mov    $0x18,%edx
  414128:	48 89 ce             	mov    %rcx,%rsi
  41412b:	48 89 c7             	mov    %rax,%rdi
  41412e:	e8 0c ad 01 00       	callq  42ee3f <luaT_gettmbyobj>
  414133:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  414137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41413b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41413f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414143:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  414147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41414b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41414f:	48 8b 12             	mov    (%rdx),%rdx
  414152:	48 89 10             	mov    %rdx,(%rax)
  414155:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414159:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  41415d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414161:	88 50 08             	mov    %dl,0x8(%rax)
  414164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414168:	48 83 c0 10          	add    $0x10,%rax
  41416c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  414170:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  414174:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  414178:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41417c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  414180:	48 8b 12             	mov    (%rdx),%rdx
  414183:	48 89 10             	mov    %rdx,(%rax)
  414186:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41418a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  41418e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414192:	88 50 08             	mov    %dl,0x8(%rax)
  414195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414199:	48 83 c0 20          	add    $0x20,%rax
  41419d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4141a1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4141a5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4141a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4141ad:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4141b1:	48 8b 12             	mov    (%rdx),%rdx
  4141b4:	48 89 10             	mov    %rdx,(%rax)
  4141b7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4141bb:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4141bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4141c3:	88 50 08             	mov    %dl,0x8(%rax)
  4141c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4141ca:	48 8d 50 30          	lea    0x30(%rax),%rdx
  4141ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4141d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4141d6:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
  4141da:	74 1a                	je     4141f6 <callclosemethod+0xfe>
  4141dc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4141e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4141e4:	ba 00 00 00 00       	mov    $0x0,%edx
  4141e9:	48 89 ce             	mov    %rcx,%rsi
  4141ec:	48 89 c7             	mov    %rax,%rdi
  4141ef:	e8 d5 e6 ff ff       	callq  4128c9 <luaD_call>
  4141f4:	eb 18                	jmp    41420e <callclosemethod+0x116>
  4141f6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4141fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4141fe:	ba 00 00 00 00       	mov    $0x0,%edx
  414203:	48 89 ce             	mov    %rcx,%rsi
  414206:	48 89 c7             	mov    %rax,%rdi
  414209:	e8 e9 e6 ff ff       	callq  4128f7 <luaD_callnoyield>
  41420e:	90                   	nop
  41420f:	c9                   	leaveq 
  414210:	c3                   	retq   

0000000000414211 <checkclosemth>:
  414211:	55                   	push   %rbp
  414212:	48 89 e5             	mov    %rsp,%rbp
  414215:	48 83 ec 30          	sub    $0x30,%rsp
  414219:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41421d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  414221:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  414225:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414229:	ba 18 00 00 00       	mov    $0x18,%edx
  41422e:	48 89 ce             	mov    %rcx,%rsi
  414231:	48 89 c7             	mov    %rax,%rdi
  414234:	e8 06 ac 01 00       	callq  42ee3f <luaT_gettmbyobj>
  414239:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41423d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414241:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414245:	0f b6 c0             	movzbl %al,%eax
  414248:	83 e0 0f             	and    $0xf,%eax
  41424b:	85 c0                	test   %eax,%eax
  41424d:	75 65                	jne    4142b4 <checkclosemth+0xa3>
  41424f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414253:	48 8b 40 20          	mov    0x20(%rax),%rax
  414257:	48 8b 00             	mov    (%rax),%rax
  41425a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41425e:	48 29 c2             	sub    %rax,%rdx
  414261:	48 89 d0             	mov    %rdx,%rax
  414264:	48 c1 f8 04          	sar    $0x4,%rax
  414268:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41426b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41426f:	48 8b 70 20          	mov    0x20(%rax),%rsi
  414273:	8b 55 ec             	mov    -0x14(%rbp),%edx
  414276:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41427a:	b9 00 00 00 00       	mov    $0x0,%ecx
  41427f:	48 89 c7             	mov    %rax,%rdi
  414282:	e8 02 b2 ff ff       	callq  40f489 <luaG_findlocal>
  414287:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41428b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  414290:	75 08                	jne    41429a <checkclosemth+0x89>
  414292:	48 c7 45 f8 e8 e9 43 	movq   $0x43e9e8,-0x8(%rbp)
  414299:	00 
  41429a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41429e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142a2:	be f0 e9 43 00       	mov    $0x43e9f0,%esi
  4142a7:	48 89 c7             	mov    %rax,%rdi
  4142aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4142af:	e8 c5 c8 ff ff       	callq  410b79 <luaG_runerror>
  4142b4:	90                   	nop
  4142b5:	c9                   	leaveq 
  4142b6:	c3                   	retq   

00000000004142b7 <prepcallclosemth>:
  4142b7:	55                   	push   %rbp
  4142b8:	48 89 e5             	mov    %rsp,%rbp
  4142bb:	48 83 ec 30          	sub    $0x30,%rsp
  4142bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4142c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4142c7:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4142ca:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  4142cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4142d1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4142d5:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  4142d9:	75 12                	jne    4142ed <prepcallclosemth+0x36>
  4142db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4142df:	48 8b 40 18          	mov    0x18(%rax),%rax
  4142e3:	48 83 c0 50          	add    $0x50,%rax
  4142e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4142eb:	eb 25                	jmp    414312 <prepcallclosemth+0x5b>
  4142ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4142f1:	48 83 c0 10          	add    $0x10,%rax
  4142f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4142f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4142fd:	48 8d 50 10          	lea    0x10(%rax),%rdx
  414301:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  414304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414308:	89 ce                	mov    %ecx,%esi
  41430a:	48 89 c7             	mov    %rax,%rdi
  41430d:	e8 64 cd ff ff       	callq  411076 <luaD_seterrorobj>
  414312:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  414315:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  414319:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41431d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414321:	48 89 c7             	mov    %rax,%rdi
  414324:	e8 cf fd ff ff       	callq  4140f8 <callclosemethod>
  414329:	90                   	nop
  41432a:	c9                   	leaveq 
  41432b:	c3                   	retq   

000000000041432c <luaF_newtbcupval>:
  41432c:	55                   	push   %rbp
  41432d:	48 89 e5             	mov    %rsp,%rbp
  414330:	48 83 ec 10          	sub    $0x10,%rsp
  414334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414338:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41433c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414340:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414344:	3c 01                	cmp    $0x1,%al
  414346:	0f 84 9b 00 00 00    	je     4143e7 <luaF_newtbcupval+0xbb>
  41434c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414350:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414354:	0f b6 c0             	movzbl %al,%eax
  414357:	83 e0 0f             	and    $0xf,%eax
  41435a:	85 c0                	test   %eax,%eax
  41435c:	0f 84 85 00 00 00    	je     4143e7 <luaF_newtbcupval+0xbb>
  414362:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41436a:	48 89 d6             	mov    %rdx,%rsi
  41436d:	48 89 c7             	mov    %rax,%rdi
  414370:	e8 9c fe ff ff       	callq  414211 <checkclosemth>
  414375:	eb 25                	jmp    41439c <luaF_newtbcupval+0x70>
  414377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41437b:	48 8b 40 40          	mov    0x40(%rax),%rax
  41437f:	48 8d 90 f0 ff 0f 00 	lea    0xffff0(%rax),%rdx
  414386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41438a:	48 89 50 40          	mov    %rdx,0x40(%rax)
  41438e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414392:	48 8b 40 40          	mov    0x40(%rax),%rax
  414396:	66 c7 40 0a 00 00    	movw   $0x0,0xa(%rax)
  41439c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4143a0:	48 8b 40 40          	mov    0x40(%rax),%rax
  4143a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4143a8:	48 29 c2             	sub    %rax,%rdx
  4143ab:	48 89 d0             	mov    %rdx,%rax
  4143ae:	48 c1 f8 04          	sar    $0x4,%rax
  4143b2:	3d ff ff 00 00       	cmp    $0xffff,%eax
  4143b7:	77 be                	ja     414377 <luaF_newtbcupval+0x4b>
  4143b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4143bd:	48 8b 40 40          	mov    0x40(%rax),%rax
  4143c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4143c5:	48 29 c2             	sub    %rax,%rdx
  4143c8:	48 89 d0             	mov    %rdx,%rax
  4143cb:	48 c1 f8 04          	sar    $0x4,%rax
  4143cf:	89 c2                	mov    %eax,%edx
  4143d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4143d5:	66 89 50 0a          	mov    %dx,0xa(%rax)
  4143d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4143dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4143e1:	48 89 50 40          	mov    %rdx,0x40(%rax)
  4143e5:	eb 01                	jmp    4143e8 <luaF_newtbcupval+0xbc>
  4143e7:	90                   	nop
  4143e8:	c9                   	leaveq 
  4143e9:	c3                   	retq   

00000000004143ea <luaF_unlinkupval>:
  4143ea:	55                   	push   %rbp
  4143eb:	48 89 e5             	mov    %rsp,%rbp
  4143ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4143f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4143f6:	48 8b 40 20          	mov    0x20(%rax),%rax
  4143fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4143fe:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  414402:	48 89 10             	mov    %rdx,(%rax)
  414405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414409:	48 8b 40 18          	mov    0x18(%rax),%rax
  41440d:	48 85 c0             	test   %rax,%rax
  414410:	74 14                	je     414426 <luaF_unlinkupval+0x3c>
  414412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414416:	48 8b 40 18          	mov    0x18(%rax),%rax
  41441a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41441e:	48 8b 52 20          	mov    0x20(%rdx),%rdx
  414422:	48 89 50 20          	mov    %rdx,0x20(%rax)
  414426:	90                   	nop
  414427:	5d                   	pop    %rbp
  414428:	c3                   	retq   

0000000000414429 <luaF_closeupval>:
  414429:	55                   	push   %rbp
  41442a:	48 89 e5             	mov    %rsp,%rbp
  41442d:	48 83 ec 40          	sub    $0x40,%rsp
  414431:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  414435:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  414439:	e9 d1 00 00 00       	jmpq   41450f <luaF_closeupval+0xe6>
  41443e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414442:	48 83 c0 18          	add    $0x18,%rax
  414446:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41444a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41444e:	48 89 c7             	mov    %rax,%rdi
  414451:	e8 94 ff ff ff       	callq  4143ea <luaF_unlinkupval>
  414456:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41445a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41445e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414462:	48 8b 40 10          	mov    0x10(%rax),%rax
  414466:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41446a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41446e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414472:	48 8b 12             	mov    (%rdx),%rdx
  414475:	48 89 10             	mov    %rdx,(%rax)
  414478:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41447c:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  414480:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414484:	88 50 08             	mov    %dl,0x8(%rax)
  414487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41448b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41448f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  414493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414497:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41449b:	0f b6 c0             	movzbl %al,%eax
  41449e:	83 e0 18             	and    $0x18,%eax
  4144a1:	85 c0                	test   %eax,%eax
  4144a3:	75 6a                	jne    41450f <luaF_closeupval+0xe6>
  4144a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4144a9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4144ad:	83 c8 20             	or     $0x20,%eax
  4144b0:	89 c2                	mov    %eax,%edx
  4144b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4144b6:	88 50 09             	mov    %dl,0x9(%rax)
  4144b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4144bd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4144c1:	0f b6 c0             	movzbl %al,%eax
  4144c4:	83 e0 40             	and    $0x40,%eax
  4144c7:	85 c0                	test   %eax,%eax
  4144c9:	74 44                	je     41450f <luaF_closeupval+0xe6>
  4144cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4144cf:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4144d3:	0f b6 c0             	movzbl %al,%eax
  4144d6:	83 e0 20             	and    $0x20,%eax
  4144d9:	85 c0                	test   %eax,%eax
  4144db:	74 32                	je     41450f <luaF_closeupval+0xe6>
  4144dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4144e1:	48 8b 00             	mov    (%rax),%rax
  4144e4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4144e8:	0f b6 c0             	movzbl %al,%eax
  4144eb:	83 e0 18             	and    $0x18,%eax
  4144ee:	85 c0                	test   %eax,%eax
  4144f0:	74 1d                	je     41450f <luaF_closeupval+0xe6>
  4144f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4144f6:	48 8b 00             	mov    (%rax),%rax
  4144f9:	48 89 c2             	mov    %rax,%rdx
  4144fc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  414500:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  414504:	48 89 ce             	mov    %rcx,%rsi
  414507:	48 89 c7             	mov    %rax,%rdi
  41450a:	e8 40 05 00 00       	callq  414a4f <luaC_barrier_>
  41450f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  414513:	48 8b 40 38          	mov    0x38(%rax),%rax
  414517:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41451b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  414520:	74 1a                	je     41453c <luaF_closeupval+0x113>
  414522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414526:	48 8b 40 10          	mov    0x10(%rax),%rax
  41452a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41452e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414532:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  414536:	0f 83 02 ff ff ff    	jae    41443e <luaF_closeupval+0x15>
  41453c:	90                   	nop
  41453d:	c9                   	leaveq 
  41453e:	c3                   	retq   

000000000041453f <poptbclist>:
  41453f:	55                   	push   %rbp
  414540:	48 89 e5             	mov    %rsp,%rbp
  414543:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414547:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41454b:	48 8b 40 40          	mov    0x40(%rax),%rax
  41454f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414557:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  41455b:	0f b7 c0             	movzwl %ax,%eax
  41455e:	48 c1 e0 04          	shl    $0x4,%rax
  414562:	48 f7 d8             	neg    %rax
  414565:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  414569:	eb 08                	jmp    414573 <poptbclist+0x34>
  41456b:	48 81 6d f8 f0 ff 0f 	subq   $0xffff0,-0x8(%rbp)
  414572:	00 
  414573:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414577:	48 8b 40 30          	mov    0x30(%rax),%rax
  41457b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  41457f:	76 0d                	jbe    41458e <poptbclist+0x4f>
  414581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414585:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  414589:	66 85 c0             	test   %ax,%ax
  41458c:	74 dd                	je     41456b <poptbclist+0x2c>
  41458e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414592:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  414596:	48 89 50 40          	mov    %rdx,0x40(%rax)
  41459a:	90                   	nop
  41459b:	5d                   	pop    %rbp
  41459c:	c3                   	retq   

000000000041459d <luaF_close>:
  41459d:	55                   	push   %rbp
  41459e:	48 89 e5             	mov    %rsp,%rbp
  4145a1:	48 83 ec 30          	sub    $0x30,%rsp
  4145a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4145a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4145ad:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4145b0:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  4145b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4145b7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4145bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4145bf:	48 29 c2             	sub    %rax,%rdx
  4145c2:	48 89 d0             	mov    %rdx,%rax
  4145c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4145c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4145cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4145d1:	48 89 d6             	mov    %rdx,%rsi
  4145d4:	48 89 c7             	mov    %rax,%rdi
  4145d7:	e8 4d fe ff ff       	callq  414429 <luaF_closeupval>
  4145dc:	eb 41                	jmp    41461f <luaF_close+0x82>
  4145de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4145e2:	48 8b 40 40          	mov    0x40(%rax),%rax
  4145e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4145ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4145ee:	48 89 c7             	mov    %rax,%rdi
  4145f1:	e8 49 ff ff ff       	callq  41453f <poptbclist>
  4145f6:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  4145f9:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4145fc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  414600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414604:	48 89 c7             	mov    %rax,%rdi
  414607:	e8 ab fc ff ff       	callq  4142b7 <prepcallclosemth>
  41460c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414610:	48 8b 50 30          	mov    0x30(%rax),%rdx
  414614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414618:	48 01 d0             	add    %rdx,%rax
  41461b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41461f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414623:	48 8b 40 40          	mov    0x40(%rax),%rax
  414627:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  41462b:	76 b1                	jbe    4145de <luaF_close+0x41>
  41462d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414631:	c9                   	leaveq 
  414632:	c3                   	retq   

0000000000414633 <luaF_newproto>:
  414633:	55                   	push   %rbp
  414634:	48 89 e5             	mov    %rsp,%rbp
  414637:	48 83 ec 20          	sub    $0x20,%rsp
  41463b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41463f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414643:	ba 80 00 00 00       	mov    $0x80,%edx
  414648:	be 0a 00 00 00       	mov    $0xa,%esi
  41464d:	48 89 c7             	mov    %rax,%rdi
  414650:	e8 41 06 00 00       	callq  414c96 <luaC_newobj>
  414655:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41465d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  414661:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414665:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
  41466c:	00 
  41466d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414671:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
  414678:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41467c:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
  414683:	00 
  414684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414688:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  41468f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414693:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
  41469a:	00 
  41469b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41469f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
  4146a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146aa:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
  4146b1:	00 
  4146b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146b6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  4146bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146c1:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
  4146c8:	00 
  4146c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146cd:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  4146d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146d8:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
  4146df:	00 
  4146e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146e4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  4146eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146ef:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  4146f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146f7:	c6 40 0b 00          	movb   $0x0,0xb(%rax)
  4146fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4146ff:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
  414703:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414707:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
  41470e:	00 
  41470f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414713:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
  41471a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41471e:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%rax)
  414725:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414729:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
  414730:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414734:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
  41473b:	00 
  41473c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414740:	c9                   	leaveq 
  414741:	c3                   	retq   

0000000000414742 <luaF_freeproto>:
  414742:	55                   	push   %rbp
  414743:	48 89 e5             	mov    %rsp,%rbp
  414746:	48 83 ec 10          	sub    $0x10,%rsp
  41474a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41474e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414752:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414756:	8b 40 18             	mov    0x18(%rax),%eax
  414759:	48 98                	cltq   
  41475b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  414762:	00 
  414763:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414767:	48 8b 48 40          	mov    0x40(%rax),%rcx
  41476b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41476f:	48 89 ce             	mov    %rcx,%rsi
  414772:	48 89 c7             	mov    %rax,%rdi
  414775:	e8 05 89 00 00       	callq  41d07f <luaM_free_>
  41477a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41477e:	8b 40 20             	mov    0x20(%rax),%eax
  414781:	48 98                	cltq   
  414783:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  41478a:	00 
  41478b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41478f:	48 8b 48 48          	mov    0x48(%rax),%rcx
  414793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414797:	48 89 ce             	mov    %rcx,%rsi
  41479a:	48 89 c7             	mov    %rax,%rdi
  41479d:	e8 dd 88 00 00       	callq  41d07f <luaM_free_>
  4147a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147a6:	8b 40 14             	mov    0x14(%rax),%eax
  4147a9:	48 98                	cltq   
  4147ab:	48 c1 e0 04          	shl    $0x4,%rax
  4147af:	48 89 c2             	mov    %rax,%rdx
  4147b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147b6:	48 8b 48 38          	mov    0x38(%rax),%rcx
  4147ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4147be:	48 89 ce             	mov    %rcx,%rsi
  4147c1:	48 89 c7             	mov    %rax,%rdi
  4147c4:	e8 b6 88 00 00       	callq  41d07f <luaM_free_>
  4147c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147cd:	8b 40 1c             	mov    0x1c(%rax),%eax
  4147d0:	48 63 d0             	movslq %eax,%rdx
  4147d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147d7:	48 8b 48 58          	mov    0x58(%rax),%rcx
  4147db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4147df:	48 89 ce             	mov    %rcx,%rsi
  4147e2:	48 89 c7             	mov    %rax,%rdi
  4147e5:	e8 95 88 00 00       	callq  41d07f <luaM_free_>
  4147ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147ee:	8b 40 28             	mov    0x28(%rax),%eax
  4147f1:	48 98                	cltq   
  4147f3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4147fa:	00 
  4147fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4147ff:	48 8b 48 60          	mov    0x60(%rax),%rcx
  414803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414807:	48 89 ce             	mov    %rcx,%rsi
  41480a:	48 89 c7             	mov    %rax,%rdi
  41480d:	e8 6d 88 00 00       	callq  41d07f <luaM_free_>
  414812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414816:	8b 40 24             	mov    0x24(%rax),%eax
  414819:	48 98                	cltq   
  41481b:	48 c1 e0 04          	shl    $0x4,%rax
  41481f:	48 89 c2             	mov    %rax,%rdx
  414822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414826:	48 8b 48 68          	mov    0x68(%rax),%rcx
  41482a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41482e:	48 89 ce             	mov    %rcx,%rsi
  414831:	48 89 c7             	mov    %rax,%rdi
  414834:	e8 46 88 00 00       	callq  41d07f <luaM_free_>
  414839:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41483d:	8b 40 10             	mov    0x10(%rax),%eax
  414840:	48 98                	cltq   
  414842:	48 c1 e0 04          	shl    $0x4,%rax
  414846:	48 89 c2             	mov    %rax,%rdx
  414849:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41484d:	48 8b 48 50          	mov    0x50(%rax),%rcx
  414851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414855:	48 89 ce             	mov    %rcx,%rsi
  414858:	48 89 c7             	mov    %rax,%rdi
  41485b:	e8 1f 88 00 00       	callq  41d07f <luaM_free_>
  414860:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  414864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414868:	ba 80 00 00 00       	mov    $0x80,%edx
  41486d:	48 89 ce             	mov    %rcx,%rsi
  414870:	48 89 c7             	mov    %rax,%rdi
  414873:	e8 07 88 00 00       	callq  41d07f <luaM_free_>
  414878:	90                   	nop
  414879:	c9                   	leaveq 
  41487a:	c3                   	retq   

000000000041487b <luaF_getlocalname>:
  41487b:	55                   	push   %rbp
  41487c:	48 89 e5             	mov    %rsp,%rbp
  41487f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414883:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  414886:	89 55 e0             	mov    %edx,-0x20(%rbp)
  414889:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  414890:	eb 49                	jmp    4148db <luaF_getlocalname+0x60>
  414892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414896:	48 8b 40 68          	mov    0x68(%rax),%rax
  41489a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41489d:	48 63 d2             	movslq %edx,%rdx
  4148a0:	48 c1 e2 04          	shl    $0x4,%rdx
  4148a4:	48 01 d0             	add    %rdx,%rax
  4148a7:	8b 40 0c             	mov    0xc(%rax),%eax
  4148aa:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  4148ad:	7d 28                	jge    4148d7 <luaF_getlocalname+0x5c>
  4148af:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  4148b3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4148b7:	75 1e                	jne    4148d7 <luaF_getlocalname+0x5c>
  4148b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4148bd:	48 8b 40 68          	mov    0x68(%rax),%rax
  4148c1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4148c4:	48 63 d2             	movslq %edx,%rdx
  4148c7:	48 c1 e2 04          	shl    $0x4,%rdx
  4148cb:	48 01 d0             	add    %rdx,%rax
  4148ce:	48 8b 00             	mov    (%rax),%rax
  4148d1:	48 83 c0 18          	add    $0x18,%rax
  4148d5:	eb 32                	jmp    414909 <luaF_getlocalname+0x8e>
  4148d7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4148db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4148df:	8b 40 24             	mov    0x24(%rax),%eax
  4148e2:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4148e5:	7d 1d                	jge    414904 <luaF_getlocalname+0x89>
  4148e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4148eb:	48 8b 40 68          	mov    0x68(%rax),%rax
  4148ef:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4148f2:	48 63 d2             	movslq %edx,%rdx
  4148f5:	48 c1 e2 04          	shl    $0x4,%rdx
  4148f9:	48 01 d0             	add    %rdx,%rax
  4148fc:	8b 40 08             	mov    0x8(%rax),%eax
  4148ff:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  414902:	7d 8e                	jge    414892 <luaF_getlocalname+0x17>
  414904:	b8 00 00 00 00       	mov    $0x0,%eax
  414909:	5d                   	pop    %rbp
  41490a:	c3                   	retq   

000000000041490b <getgclist>:
  41490b:	55                   	push   %rbp
  41490c:	48 89 e5             	mov    %rsp,%rbp
  41490f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414917:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41491b:	0f b6 c0             	movzbl %al,%eax
  41491e:	83 e8 05             	sub    $0x5,%eax
  414921:	83 f8 21             	cmp    $0x21,%eax
  414924:	77 50                	ja     414976 <getgclist+0x6b>
  414926:	89 c0                	mov    %eax,%eax
  414928:	48 8b 04 c5 18 ea 43 	mov    0x43ea18(,%rax,8),%rax
  41492f:	00 
  414930:	ff e0                	jmpq   *%rax
  414932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414936:	48 83 c0 30          	add    $0x30,%rax
  41493a:	eb 3f                	jmp    41497b <getgclist+0x70>
  41493c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414940:	48 83 c0 10          	add    $0x10,%rax
  414944:	eb 35                	jmp    41497b <getgclist+0x70>
  414946:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41494a:	48 83 c0 10          	add    $0x10,%rax
  41494e:	eb 2b                	jmp    41497b <getgclist+0x70>
  414950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414954:	48 83 c0 48          	add    $0x48,%rax
  414958:	eb 21                	jmp    41497b <getgclist+0x70>
  41495a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41495e:	48 83 c0 78          	add    $0x78,%rax
  414962:	eb 17                	jmp    41497b <getgclist+0x70>
  414964:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414968:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41496c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414970:	48 83 c0 20          	add    $0x20,%rax
  414974:	eb 05                	jmp    41497b <getgclist+0x70>
  414976:	b8 00 00 00 00       	mov    $0x0,%eax
  41497b:	5d                   	pop    %rbp
  41497c:	c3                   	retq   

000000000041497d <linkgclist_>:
  41497d:	55                   	push   %rbp
  41497e:	48 89 e5             	mov    %rsp,%rbp
  414981:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414985:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414989:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41498d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414991:	48 8b 10             	mov    (%rax),%rdx
  414994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414998:	48 89 10             	mov    %rdx,(%rax)
  41499b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41499f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4149a3:	48 89 10             	mov    %rdx,(%rax)
  4149a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4149aa:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4149ae:	83 e0 c7             	and    $0xffffffc7,%eax
  4149b1:	89 c2                	mov    %eax,%edx
  4149b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4149b7:	88 50 09             	mov    %dl,0x9(%rax)
  4149ba:	90                   	nop
  4149bb:	5d                   	pop    %rbp
  4149bc:	c3                   	retq   

00000000004149bd <clearkey>:
  4149bd:	55                   	push   %rbp
  4149be:	48 89 e5             	mov    %rsp,%rbp
  4149c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4149c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4149c9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4149cd:	0f b6 c0             	movzbl %al,%eax
  4149d0:	83 e0 40             	and    $0x40,%eax
  4149d3:	85 c0                	test   %eax,%eax
  4149d5:	74 08                	je     4149df <clearkey+0x22>
  4149d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4149db:	c6 40 09 0b          	movb   $0xb,0x9(%rax)
  4149df:	90                   	nop
  4149e0:	5d                   	pop    %rbp
  4149e1:	c3                   	retq   

00000000004149e2 <iscleared>:
  4149e2:	55                   	push   %rbp
  4149e3:	48 89 e5             	mov    %rsp,%rbp
  4149e6:	48 83 ec 10          	sub    $0x10,%rsp
  4149ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4149ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4149f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4149f7:	75 07                	jne    414a00 <iscleared+0x1e>
  4149f9:	b8 00 00 00 00       	mov    $0x0,%eax
  4149fe:	eb 4d                	jmp    414a4d <iscleared+0x6b>
  414a00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414a04:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414a08:	0f b6 c0             	movzbl %al,%eax
  414a0b:	83 e0 0f             	and    $0xf,%eax
  414a0e:	83 f8 04             	cmp    $0x4,%eax
  414a11:	75 2c                	jne    414a3f <iscleared+0x5d>
  414a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414a17:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414a1b:	0f b6 c0             	movzbl %al,%eax
  414a1e:	83 e0 18             	and    $0x18,%eax
  414a21:	85 c0                	test   %eax,%eax
  414a23:	74 13                	je     414a38 <iscleared+0x56>
  414a25:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414a2d:	48 89 d6             	mov    %rdx,%rsi
  414a30:	48 89 c7             	mov    %rax,%rdi
  414a33:	e8 8b 02 00 00       	callq  414cc3 <reallymarkobject>
  414a38:	b8 00 00 00 00       	mov    $0x0,%eax
  414a3d:	eb 0e                	jmp    414a4d <iscleared+0x6b>
  414a3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414a43:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414a47:	0f b6 c0             	movzbl %al,%eax
  414a4a:	83 e0 18             	and    $0x18,%eax
  414a4d:	c9                   	leaveq 
  414a4e:	c3                   	retq   

0000000000414a4f <luaC_barrier_>:
  414a4f:	55                   	push   %rbp
  414a50:	48 89 e5             	mov    %rsp,%rbp
  414a53:	48 83 ec 30          	sub    $0x30,%rsp
  414a57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414a5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414a5f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414a63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414a67:	48 8b 40 18          	mov    0x18(%rax),%rax
  414a6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414a73:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  414a77:	3c 02                	cmp    $0x2,%al
  414a79:	77 3e                	ja     414ab9 <luaC_barrier_+0x6a>
  414a7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414a7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414a83:	48 89 d6             	mov    %rdx,%rsi
  414a86:	48 89 c7             	mov    %rax,%rdi
  414a89:	e8 35 02 00 00       	callq  414cc3 <reallymarkobject>
  414a8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414a92:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414a96:	0f b6 c0             	movzbl %al,%eax
  414a99:	83 e0 06             	and    $0x6,%eax
  414a9c:	85 c0                	test   %eax,%eax
  414a9e:	74 48                	je     414ae8 <luaC_barrier_+0x99>
  414aa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414aa4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414aa8:	83 e0 f8             	and    $0xfffffff8,%eax
  414aab:	83 c8 02             	or     $0x2,%eax
  414aae:	89 c2                	mov    %eax,%edx
  414ab0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ab4:	88 50 09             	mov    %dl,0x9(%rax)
  414ab7:	eb 2f                	jmp    414ae8 <luaC_barrier_+0x99>
  414ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414abd:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  414ac1:	84 c0                	test   %al,%al
  414ac3:	75 23                	jne    414ae8 <luaC_barrier_+0x99>
  414ac5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414ac9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414acd:	83 e0 c7             	and    $0xffffffc7,%eax
  414ad0:	89 c2                	mov    %eax,%edx
  414ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ad6:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  414ada:	83 e0 18             	and    $0x18,%eax
  414add:	09 d0                	or     %edx,%eax
  414adf:	89 c2                	mov    %eax,%edx
  414ae1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414ae5:	88 50 09             	mov    %dl,0x9(%rax)
  414ae8:	90                   	nop
  414ae9:	c9                   	leaveq 
  414aea:	c3                   	retq   

0000000000414aeb <luaC_barrierback_>:
  414aeb:	55                   	push   %rbp
  414aec:	48 89 e5             	mov    %rsp,%rbp
  414aef:	53                   	push   %rbx
  414af0:	48 83 ec 20          	sub    $0x20,%rsp
  414af4:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  414af8:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  414afc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414b00:	48 8b 40 18          	mov    0x18(%rax),%rax
  414b04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  414b08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b0c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414b10:	0f b6 c0             	movzbl %al,%eax
  414b13:	83 e0 07             	and    $0x7,%eax
  414b16:	83 f8 06             	cmp    $0x6,%eax
  414b19:	75 16                	jne    414b31 <luaC_barrierback_+0x46>
  414b1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b1f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414b23:	83 e0 c7             	and    $0xffffffc7,%eax
  414b26:	89 c2                	mov    %eax,%edx
  414b28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b2c:	88 50 09             	mov    %dl,0x9(%rax)
  414b2f:	eb 2c                	jmp    414b5d <luaC_barrierback_+0x72>
  414b31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414b35:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
  414b3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b40:	48 89 c7             	mov    %rax,%rdi
  414b43:	e8 c3 fd ff ff       	callq  41490b <getgclist>
  414b48:	48 89 c1             	mov    %rax,%rcx
  414b4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b4f:	48 89 da             	mov    %rbx,%rdx
  414b52:	48 89 ce             	mov    %rcx,%rsi
  414b55:	48 89 c7             	mov    %rax,%rdi
  414b58:	e8 20 fe ff ff       	callq  41497d <linkgclist_>
  414b5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b61:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414b65:	0f b6 c0             	movzbl %al,%eax
  414b68:	83 e0 06             	and    $0x6,%eax
  414b6b:	85 c0                	test   %eax,%eax
  414b6d:	74 17                	je     414b86 <luaC_barrierback_+0x9b>
  414b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b73:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414b77:	83 e0 f8             	and    $0xfffffff8,%eax
  414b7a:	83 c8 05             	or     $0x5,%eax
  414b7d:	89 c2                	mov    %eax,%edx
  414b7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b83:	88 50 09             	mov    %dl,0x9(%rax)
  414b86:	90                   	nop
  414b87:	48 83 c4 20          	add    $0x20,%rsp
  414b8b:	5b                   	pop    %rbx
  414b8c:	5d                   	pop    %rbp
  414b8d:	c3                   	retq   

0000000000414b8e <luaC_fix>:
  414b8e:	55                   	push   %rbp
  414b8f:	48 89 e5             	mov    %rsp,%rbp
  414b92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414b96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414b9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414b9e:	48 8b 40 18          	mov    0x18(%rax),%rax
  414ba2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414ba6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414baa:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414bae:	83 e0 c7             	and    $0xffffffc7,%eax
  414bb1:	89 c2                	mov    %eax,%edx
  414bb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414bb7:	88 50 09             	mov    %dl,0x9(%rax)
  414bba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414bbe:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414bc2:	83 e0 f8             	and    $0xfffffff8,%eax
  414bc5:	83 c8 04             	or     $0x4,%eax
  414bc8:	89 c2                	mov    %eax,%edx
  414bca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414bce:	88 50 09             	mov    %dl,0x9(%rax)
  414bd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414bd5:	48 8b 10             	mov    (%rax),%rdx
  414bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414bdc:	48 89 50 70          	mov    %rdx,0x70(%rax)
  414be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414be4:	48 8b 90 b8 00 00 00 	mov    0xb8(%rax),%rdx
  414beb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414bef:	48 89 10             	mov    %rdx,(%rax)
  414bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414bf6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  414bfa:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
  414c01:	90                   	nop
  414c02:	5d                   	pop    %rbp
  414c03:	c3                   	retq   

0000000000414c04 <luaC_newobjdt>:
  414c04:	55                   	push   %rbp
  414c05:	48 89 e5             	mov    %rsp,%rbp
  414c08:	48 83 ec 40          	sub    $0x40,%rsp
  414c0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  414c10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  414c13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  414c17:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  414c1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c1f:	48 8b 40 18          	mov    0x18(%rax),%rax
  414c23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414c27:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  414c2a:	83 e0 0f             	and    $0xf,%eax
  414c2d:	89 c2                	mov    %eax,%edx
  414c2f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  414c33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c37:	48 89 ce             	mov    %rcx,%rsi
  414c3a:	48 89 c7             	mov    %rax,%rdi
  414c3d:	e8 3d 86 00 00       	callq  41d27f <luaM_malloc_>
  414c42:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  414c46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414c4a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  414c4e:	48 01 d0             	add    %rdx,%rax
  414c51:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  414c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c59:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  414c5d:	83 e0 18             	and    $0x18,%eax
  414c60:	89 c2                	mov    %eax,%edx
  414c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414c66:	88 50 09             	mov    %dl,0x9(%rax)
  414c69:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  414c6c:	89 c2                	mov    %eax,%edx
  414c6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414c72:	88 50 08             	mov    %dl,0x8(%rax)
  414c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c79:	48 8b 50 70          	mov    0x70(%rax),%rdx
  414c7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414c81:	48 89 10             	mov    %rdx,(%rax)
  414c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  414c8c:	48 89 50 70          	mov    %rdx,0x70(%rax)
  414c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414c94:	c9                   	leaveq 
  414c95:	c3                   	retq   

0000000000414c96 <luaC_newobj>:
  414c96:	55                   	push   %rbp
  414c97:	48 89 e5             	mov    %rsp,%rbp
  414c9a:	48 83 ec 20          	sub    $0x20,%rsp
  414c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414ca2:	89 75 f4             	mov    %esi,-0xc(%rbp)
  414ca5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414ca9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  414cad:	8b 75 f4             	mov    -0xc(%rbp),%esi
  414cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414cb4:	b9 00 00 00 00       	mov    $0x0,%ecx
  414cb9:	48 89 c7             	mov    %rax,%rdi
  414cbc:	e8 43 ff ff ff       	callq  414c04 <luaC_newobjdt>
  414cc1:	c9                   	leaveq 
  414cc2:	c3                   	retq   

0000000000414cc3 <reallymarkobject>:
  414cc3:	55                   	push   %rbp
  414cc4:	48 89 e5             	mov    %rsp,%rbp
  414cc7:	53                   	push   %rbx
  414cc8:	48 83 ec 28          	sub    $0x28,%rsp
  414ccc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  414cd0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  414cd4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414cd8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414cdc:	0f b6 c0             	movzbl %al,%eax
  414cdf:	83 e8 04             	sub    $0x4,%eax
  414ce2:	83 f8 22             	cmp    $0x22,%eax
  414ce5:	0f 87 61 01 00 00    	ja     414e4c <reallymarkobject+0x189>
  414ceb:	89 c0                	mov    %eax,%eax
  414ced:	48 8b 04 c5 28 eb 43 	mov    0x43eb28(,%rax,8),%rax
  414cf4:	00 
  414cf5:	ff e0                	jmpq   *%rax
  414cf7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414cfb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414cff:	83 e0 c7             	and    $0xffffffc7,%eax
  414d02:	83 c8 20             	or     $0x20,%eax
  414d05:	89 c2                	mov    %eax,%edx
  414d07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414d0b:	88 50 09             	mov    %dl,0x9(%rax)
  414d0e:	e9 3d 01 00 00       	jmpq   414e50 <reallymarkobject+0x18d>
  414d13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414d17:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  414d1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d1f:	48 8b 40 10          	mov    0x10(%rax),%rax
  414d23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  414d27:	48 83 c2 18          	add    $0x18,%rdx
  414d2b:	48 39 d0             	cmp    %rdx,%rax
  414d2e:	74 16                	je     414d46 <reallymarkobject+0x83>
  414d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d34:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414d38:	83 e0 c7             	and    $0xffffffc7,%eax
  414d3b:	89 c2                	mov    %eax,%edx
  414d3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d41:	88 50 09             	mov    %dl,0x9(%rax)
  414d44:	eb 17                	jmp    414d5d <reallymarkobject+0x9a>
  414d46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d4a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414d4e:	83 e0 c7             	and    $0xffffffc7,%eax
  414d51:	83 c8 20             	or     $0x20,%eax
  414d54:	89 c2                	mov    %eax,%edx
  414d56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d5a:	88 50 09             	mov    %dl,0x9(%rax)
  414d5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d61:	48 8b 40 10          	mov    0x10(%rax),%rax
  414d65:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414d69:	0f b6 c0             	movzbl %al,%eax
  414d6c:	83 e0 40             	and    $0x40,%eax
  414d6f:	85 c0                	test   %eax,%eax
  414d71:	0f 84 d8 00 00 00    	je     414e4f <reallymarkobject+0x18c>
  414d77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d7b:	48 8b 40 10          	mov    0x10(%rax),%rax
  414d7f:	48 8b 00             	mov    (%rax),%rax
  414d82:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414d86:	0f b6 c0             	movzbl %al,%eax
  414d89:	83 e0 18             	and    $0x18,%eax
  414d8c:	85 c0                	test   %eax,%eax
  414d8e:	0f 84 bb 00 00 00    	je     414e4f <reallymarkobject+0x18c>
  414d94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414d98:	48 8b 40 10          	mov    0x10(%rax),%rax
  414d9c:	48 8b 10             	mov    (%rax),%rdx
  414d9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414da3:	48 89 d6             	mov    %rdx,%rsi
  414da6:	48 89 c7             	mov    %rax,%rdi
  414da9:	e8 15 ff ff ff       	callq  414cc3 <reallymarkobject>
  414dae:	e9 9c 00 00 00       	jmpq   414e4f <reallymarkobject+0x18c>
  414db3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414db7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  414dbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414dbf:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  414dc3:	66 85 c0             	test   %ax,%ax
  414dc6:	75 56                	jne    414e1e <reallymarkobject+0x15b>
  414dc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414dcc:	48 8b 40 18          	mov    0x18(%rax),%rax
  414dd0:	48 85 c0             	test   %rax,%rax
  414dd3:	74 30                	je     414e05 <reallymarkobject+0x142>
  414dd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414dd9:	48 8b 40 18          	mov    0x18(%rax),%rax
  414ddd:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414de1:	0f b6 c0             	movzbl %al,%eax
  414de4:	83 e0 18             	and    $0x18,%eax
  414de7:	85 c0                	test   %eax,%eax
  414de9:	74 1a                	je     414e05 <reallymarkobject+0x142>
  414deb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414def:	48 8b 40 18          	mov    0x18(%rax),%rax
  414df3:	48 89 c2             	mov    %rax,%rdx
  414df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414dfa:	48 89 d6             	mov    %rdx,%rsi
  414dfd:	48 89 c7             	mov    %rax,%rdi
  414e00:	e8 be fe ff ff       	callq  414cc3 <reallymarkobject>
  414e05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414e09:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414e0d:	83 e0 c7             	and    $0xffffffc7,%eax
  414e10:	83 c8 20             	or     $0x20,%eax
  414e13:	89 c2                	mov    %eax,%edx
  414e15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414e19:	88 50 09             	mov    %dl,0x9(%rax)
  414e1c:	eb 32                	jmp    414e50 <reallymarkobject+0x18d>
  414e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e22:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
  414e29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414e2d:	48 89 c7             	mov    %rax,%rdi
  414e30:	e8 d6 fa ff ff       	callq  41490b <getgclist>
  414e35:	48 89 c1             	mov    %rax,%rcx
  414e38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  414e3c:	48 89 da             	mov    %rbx,%rdx
  414e3f:	48 89 ce             	mov    %rcx,%rsi
  414e42:	48 89 c7             	mov    %rax,%rdi
  414e45:	e8 33 fb ff ff       	callq  41497d <linkgclist_>
  414e4a:	eb 04                	jmp    414e50 <reallymarkobject+0x18d>
  414e4c:	90                   	nop
  414e4d:	eb 01                	jmp    414e50 <reallymarkobject+0x18d>
  414e4f:	90                   	nop
  414e50:	90                   	nop
  414e51:	48 83 c4 28          	add    $0x28,%rsp
  414e55:	5b                   	pop    %rbx
  414e56:	5d                   	pop    %rbp
  414e57:	c3                   	retq   

0000000000414e58 <markmt>:
  414e58:	55                   	push   %rbp
  414e59:	48 89 e5             	mov    %rsp,%rbp
  414e5c:	48 83 ec 20          	sub    $0x20,%rsp
  414e60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414e64:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  414e6b:	eb 5f                	jmp    414ecc <markmt+0x74>
  414e6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414e71:	8b 55 fc             	mov    -0x4(%rbp),%edx
  414e74:	48 63 d2             	movslq %edx,%rdx
  414e77:	48 83 c2 3c          	add    $0x3c,%rdx
  414e7b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  414e7f:	48 85 c0             	test   %rax,%rax
  414e82:	74 44                	je     414ec8 <markmt+0x70>
  414e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414e88:	8b 55 fc             	mov    -0x4(%rbp),%edx
  414e8b:	48 63 d2             	movslq %edx,%rdx
  414e8e:	48 83 c2 3c          	add    $0x3c,%rdx
  414e92:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  414e96:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414e9a:	0f b6 c0             	movzbl %al,%eax
  414e9d:	83 e0 18             	and    $0x18,%eax
  414ea0:	85 c0                	test   %eax,%eax
  414ea2:	74 24                	je     414ec8 <markmt+0x70>
  414ea4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414ea8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  414eab:	48 63 d2             	movslq %edx,%rdx
  414eae:	48 83 c2 3c          	add    $0x3c,%rdx
  414eb2:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  414eb6:	48 89 c2             	mov    %rax,%rdx
  414eb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414ebd:	48 89 d6             	mov    %rdx,%rsi
  414ec0:	48 89 c7             	mov    %rax,%rdi
  414ec3:	e8 fb fd ff ff       	callq  414cc3 <reallymarkobject>
  414ec8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  414ecc:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
  414ed0:	7e 9b                	jle    414e6d <markmt+0x15>
  414ed2:	90                   	nop
  414ed3:	c9                   	leaveq 
  414ed4:	c3                   	retq   

0000000000414ed5 <markbeingfnz>:
  414ed5:	55                   	push   %rbp
  414ed6:	48 89 e5             	mov    %rsp,%rbp
  414ed9:	48 83 ec 20          	sub    $0x20,%rsp
  414edd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414ee1:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  414ee8:	00 
  414ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414eed:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  414ef4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414ef8:	eb 35                	jmp    414f2f <markbeingfnz+0x5a>
  414efa:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  414eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f03:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414f07:	0f b6 c0             	movzbl %al,%eax
  414f0a:	83 e0 18             	and    $0x18,%eax
  414f0d:	85 c0                	test   %eax,%eax
  414f0f:	74 13                	je     414f24 <markbeingfnz+0x4f>
  414f11:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  414f15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414f19:	48 89 d6             	mov    %rdx,%rsi
  414f1c:	48 89 c7             	mov    %rax,%rdi
  414f1f:	e8 9f fd ff ff       	callq  414cc3 <reallymarkobject>
  414f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f28:	48 8b 00             	mov    (%rax),%rax
  414f2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414f2f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  414f34:	75 c4                	jne    414efa <markbeingfnz+0x25>
  414f36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414f3a:	c9                   	leaveq 
  414f3b:	c3                   	retq   

0000000000414f3c <remarkupvals>:
  414f3c:	55                   	push   %rbp
  414f3d:	48 89 e5             	mov    %rsp,%rbp
  414f40:	48 83 ec 30          	sub    $0x30,%rsp
  414f44:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  414f48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414f4c:	48 05 f8 00 00 00    	add    $0xf8,%rax
  414f52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414f56:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  414f5d:	e9 cf 00 00 00       	jmpq   415031 <remarkupvals+0xf5>
  414f62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  414f66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414f6a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414f6e:	0f b6 c0             	movzbl %al,%eax
  414f71:	83 e0 18             	and    $0x18,%eax
  414f74:	85 c0                	test   %eax,%eax
  414f76:	75 1e                	jne    414f96 <remarkupvals+0x5a>
  414f78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414f7c:	48 8b 40 38          	mov    0x38(%rax),%rax
  414f80:	48 85 c0             	test   %rax,%rax
  414f83:	74 11                	je     414f96 <remarkupvals+0x5a>
  414f85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414f89:	48 83 c0 50          	add    $0x50,%rax
  414f8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  414f91:	e9 9b 00 00 00       	jmpq   415031 <remarkupvals+0xf5>
  414f96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414f9a:	48 8b 50 50          	mov    0x50(%rax),%rdx
  414f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414fa2:	48 89 10             	mov    %rdx,(%rax)
  414fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414fa9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  414fad:	48 89 50 50          	mov    %rdx,0x50(%rax)
  414fb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  414fb5:	48 8b 40 38          	mov    0x38(%rax),%rax
  414fb9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  414fbd:	eb 6b                	jmp    41502a <remarkupvals+0xee>
  414fbf:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  414fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414fc7:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414fcb:	0f b6 c0             	movzbl %al,%eax
  414fce:	83 e0 18             	and    $0x18,%eax
  414fd1:	85 c0                	test   %eax,%eax
  414fd3:	75 49                	jne    41501e <remarkupvals+0xe2>
  414fd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414fd9:	48 8b 40 10          	mov    0x10(%rax),%rax
  414fdd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  414fe1:	0f b6 c0             	movzbl %al,%eax
  414fe4:	83 e0 40             	and    $0x40,%eax
  414fe7:	85 c0                	test   %eax,%eax
  414fe9:	74 33                	je     41501e <remarkupvals+0xe2>
  414feb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414fef:	48 8b 40 10          	mov    0x10(%rax),%rax
  414ff3:	48 8b 00             	mov    (%rax),%rax
  414ff6:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  414ffa:	0f b6 c0             	movzbl %al,%eax
  414ffd:	83 e0 18             	and    $0x18,%eax
  415000:	85 c0                	test   %eax,%eax
  415002:	74 1a                	je     41501e <remarkupvals+0xe2>
  415004:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415008:	48 8b 40 10          	mov    0x10(%rax),%rax
  41500c:	48 8b 10             	mov    (%rax),%rdx
  41500f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415013:	48 89 d6             	mov    %rdx,%rsi
  415016:	48 89 c7             	mov    %rax,%rdi
  415019:	e8 a5 fc ff ff       	callq  414cc3 <reallymarkobject>
  41501e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415022:	48 8b 40 18          	mov    0x18(%rax),%rax
  415026:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41502a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41502f:	75 8e                	jne    414fbf <remarkupvals+0x83>
  415031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415035:	48 8b 00             	mov    (%rax),%rax
  415038:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41503c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  415041:	0f 85 1b ff ff ff    	jne    414f62 <remarkupvals+0x26>
  415047:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41504a:	c9                   	leaveq 
  41504b:	c3                   	retq   

000000000041504c <cleargraylists>:
  41504c:	55                   	push   %rbp
  41504d:	48 89 e5             	mov    %rsp,%rbp
  415050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415058:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
  41505f:	00 00 00 00 
  415063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415067:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
  41506e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415072:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
  415079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41507d:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
  415084:	00 00 00 00 
  415088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41508c:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
  415093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415097:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
  41509e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150a2:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
  4150a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150ad:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
  4150b4:	90                   	nop
  4150b5:	5d                   	pop    %rbp
  4150b6:	c3                   	retq   

00000000004150b7 <restartcollection>:
  4150b7:	55                   	push   %rbp
  4150b8:	48 89 e5             	mov    %rsp,%rbp
  4150bb:	48 83 ec 10          	sub    $0x10,%rsp
  4150bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4150c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150c7:	48 89 c7             	mov    %rax,%rdi
  4150ca:	e8 7d ff ff ff       	callq  41504c <cleargraylists>
  4150cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150d3:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  4150da:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4150de:	0f b6 c0             	movzbl %al,%eax
  4150e1:	83 e0 18             	and    $0x18,%eax
  4150e4:	85 c0                	test   %eax,%eax
  4150e6:	74 1d                	je     415105 <restartcollection+0x4e>
  4150e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150ec:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  4150f3:	48 89 c2             	mov    %rax,%rdx
  4150f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150fa:	48 89 d6             	mov    %rdx,%rsi
  4150fd:	48 89 c7             	mov    %rax,%rdi
  415100:	e8 be fb ff ff       	callq  414cc3 <reallymarkobject>
  415105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415109:	0f b6 40 48          	movzbl 0x48(%rax),%eax
  41510d:	0f b6 c0             	movzbl %al,%eax
  415110:	83 e0 40             	and    $0x40,%eax
  415113:	85 c0                	test   %eax,%eax
  415115:	74 2d                	je     415144 <restartcollection+0x8d>
  415117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41511b:	48 8b 40 40          	mov    0x40(%rax),%rax
  41511f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415123:	0f b6 c0             	movzbl %al,%eax
  415126:	83 e0 18             	and    $0x18,%eax
  415129:	85 c0                	test   %eax,%eax
  41512b:	74 17                	je     415144 <restartcollection+0x8d>
  41512d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415131:	48 8b 50 40          	mov    0x40(%rax),%rdx
  415135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415139:	48 89 d6             	mov    %rdx,%rsi
  41513c:	48 89 c7             	mov    %rax,%rdi
  41513f:	e8 7f fb ff ff       	callq  414cc3 <reallymarkobject>
  415144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415148:	48 89 c7             	mov    %rax,%rdi
  41514b:	e8 08 fd ff ff       	callq  414e58 <markmt>
  415150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415154:	48 89 c7             	mov    %rax,%rdi
  415157:	e8 79 fd ff ff       	callq  414ed5 <markbeingfnz>
  41515c:	90                   	nop
  41515d:	c9                   	leaveq 
  41515e:	c3                   	retq   

000000000041515f <genlink>:
  41515f:	55                   	push   %rbp
  415160:	48 89 e5             	mov    %rsp,%rbp
  415163:	53                   	push   %rbx
  415164:	48 83 ec 10          	sub    $0x10,%rsp
  415168:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41516c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  415170:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415174:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415178:	0f b6 c0             	movzbl %al,%eax
  41517b:	83 e0 07             	and    $0x7,%eax
  41517e:	83 f8 05             	cmp    $0x5,%eax
  415181:	75 2e                	jne    4151b1 <genlink+0x52>
  415183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415187:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
  41518e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415192:	48 89 c7             	mov    %rax,%rdi
  415195:	e8 71 f7 ff ff       	callq  41490b <getgclist>
  41519a:	48 89 c1             	mov    %rax,%rcx
  41519d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4151a1:	48 89 da             	mov    %rbx,%rdx
  4151a4:	48 89 ce             	mov    %rcx,%rsi
  4151a7:	48 89 c7             	mov    %rax,%rdi
  4151aa:	e8 ce f7 ff ff       	callq  41497d <linkgclist_>
  4151af:	eb 27                	jmp    4151d8 <genlink+0x79>
  4151b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4151b5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4151b9:	0f b6 c0             	movzbl %al,%eax
  4151bc:	83 e0 07             	and    $0x7,%eax
  4151bf:	83 f8 06             	cmp    $0x6,%eax
  4151c2:	75 14                	jne    4151d8 <genlink+0x79>
  4151c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4151c8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4151cc:	83 f0 02             	xor    $0x2,%eax
  4151cf:	89 c2                	mov    %eax,%edx
  4151d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4151d5:	88 50 09             	mov    %dl,0x9(%rax)
  4151d8:	90                   	nop
  4151d9:	48 83 c4 10          	add    $0x10,%rsp
  4151dd:	5b                   	pop    %rbx
  4151de:	5d                   	pop    %rbp
  4151df:	c3                   	retq   

00000000004151e0 <traverseweakvalue>:
  4151e0:	55                   	push   %rbp
  4151e1:	48 89 e5             	mov    %rsp,%rbp
  4151e4:	48 83 ec 30          	sub    $0x30,%rsp
  4151e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4151ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4151f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4151f4:	48 8b 70 18          	mov    0x18(%rax),%rsi
  4151f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4151fc:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  415200:	0f b6 c0             	movzbl %al,%eax
  415203:	ba 01 00 00 00       	mov    $0x1,%edx
  415208:	89 c1                	mov    %eax,%ecx
  41520a:	d3 e2                	shl    %cl,%edx
  41520c:	89 d0                	mov    %edx,%eax
  41520e:	48 63 d0             	movslq %eax,%rdx
  415211:	48 89 d0             	mov    %rdx,%rax
  415214:	48 01 c0             	add    %rax,%rax
  415217:	48 01 d0             	add    %rdx,%rax
  41521a:	48 c1 e0 03          	shl    $0x3,%rax
  41521e:	48 01 f0             	add    %rsi,%rax
  415221:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  415225:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415229:	8b 40 0c             	mov    0xc(%rax),%eax
  41522c:	85 c0                	test   %eax,%eax
  41522e:	0f 95 c0             	setne  %al
  415231:	0f b6 c0             	movzbl %al,%eax
  415234:	89 45 f4             	mov    %eax,-0xc(%rbp)
  415237:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41523b:	48 8b 40 18          	mov    0x18(%rax),%rax
  41523f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  415243:	e9 a4 00 00 00       	jmpq   4152ec <traverseweakvalue+0x10c>
  415248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41524c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415250:	0f b6 c0             	movzbl %al,%eax
  415253:	83 e0 0f             	and    $0xf,%eax
  415256:	85 c0                	test   %eax,%eax
  415258:	75 0e                	jne    415268 <traverseweakvalue+0x88>
  41525a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41525e:	48 89 c7             	mov    %rax,%rdi
  415261:	e8 57 f7 ff ff       	callq  4149bd <clearkey>
  415266:	eb 7f                	jmp    4152e7 <traverseweakvalue+0x107>
  415268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41526c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415270:	0f b6 c0             	movzbl %al,%eax
  415273:	83 e0 40             	and    $0x40,%eax
  415276:	85 c0                	test   %eax,%eax
  415278:	74 2d                	je     4152a7 <traverseweakvalue+0xc7>
  41527a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41527e:	48 8b 40 10          	mov    0x10(%rax),%rax
  415282:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415286:	0f b6 c0             	movzbl %al,%eax
  415289:	83 e0 18             	and    $0x18,%eax
  41528c:	85 c0                	test   %eax,%eax
  41528e:	74 17                	je     4152a7 <traverseweakvalue+0xc7>
  415290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415294:	48 8b 50 10          	mov    0x10(%rax),%rdx
  415298:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41529c:	48 89 d6             	mov    %rdx,%rsi
  41529f:	48 89 c7             	mov    %rax,%rdi
  4152a2:	e8 1c fa ff ff       	callq  414cc3 <reallymarkobject>
  4152a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4152ab:	75 3a                	jne    4152e7 <traverseweakvalue+0x107>
  4152ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152b1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4152b5:	0f b6 c0             	movzbl %al,%eax
  4152b8:	83 e0 40             	and    $0x40,%eax
  4152bb:	85 c0                	test   %eax,%eax
  4152bd:	74 09                	je     4152c8 <traverseweakvalue+0xe8>
  4152bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152c3:	48 8b 00             	mov    (%rax),%rax
  4152c6:	eb 05                	jmp    4152cd <traverseweakvalue+0xed>
  4152c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4152cd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4152d1:	48 89 c6             	mov    %rax,%rsi
  4152d4:	48 89 d7             	mov    %rdx,%rdi
  4152d7:	e8 06 f7 ff ff       	callq  4149e2 <iscleared>
  4152dc:	85 c0                	test   %eax,%eax
  4152de:	74 07                	je     4152e7 <traverseweakvalue+0x107>
  4152e0:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  4152e7:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
  4152ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152f0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  4152f4:	0f 82 4e ff ff ff    	jb     415248 <traverseweakvalue+0x68>
  4152fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4152fe:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  415302:	3c 02                	cmp    $0x2,%al
  415304:	75 2a                	jne    415330 <traverseweakvalue+0x150>
  415306:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  41530a:	74 24                	je     415330 <traverseweakvalue+0x150>
  41530c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415310:	48 8d 90 98 00 00 00 	lea    0x98(%rax),%rdx
  415317:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41531b:	48 8d 48 30          	lea    0x30(%rax),%rcx
  41531f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415323:	48 89 ce             	mov    %rcx,%rsi
  415326:	48 89 c7             	mov    %rax,%rdi
  415329:	e8 4f f6 ff ff       	callq  41497d <linkgclist_>
  41532e:	eb 22                	jmp    415352 <traverseweakvalue+0x172>
  415330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415334:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
  41533b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41533f:	48 8d 48 30          	lea    0x30(%rax),%rcx
  415343:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415347:	48 89 ce             	mov    %rcx,%rsi
  41534a:	48 89 c7             	mov    %rax,%rdi
  41534d:	e8 2b f6 ff ff       	callq  41497d <linkgclist_>
  415352:	90                   	nop
  415353:	c9                   	leaveq 
  415354:	c3                   	retq   

0000000000415355 <traverseephemeron>:
  415355:	55                   	push   %rbp
  415356:	48 89 e5             	mov    %rsp,%rbp
  415359:	48 83 ec 40          	sub    $0x40,%rsp
  41535d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  415361:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  415365:	89 55 cc             	mov    %edx,-0x34(%rbp)
  415368:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41536f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  415376:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  41537d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415381:	48 89 c7             	mov    %rax,%rdi
  415384:	e8 11 70 01 00       	callq  42c39a <luaH_realasize>
  415389:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41538c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415390:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  415394:	0f b6 c0             	movzbl %al,%eax
  415397:	ba 01 00 00 00       	mov    $0x1,%edx
  41539c:	89 c1                	mov    %eax,%ecx
  41539e:	d3 e2                	shl    %cl,%edx
  4153a0:	89 d0                	mov    %edx,%eax
  4153a2:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4153a5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  4153ac:	eb 72                	jmp    415420 <traverseephemeron+0xcb>
  4153ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4153b2:	48 8b 40 10          	mov    0x10(%rax),%rax
  4153b6:	8b 55 f0             	mov    -0x10(%rbp),%edx
  4153b9:	48 c1 e2 04          	shl    $0x4,%rdx
  4153bd:	48 01 d0             	add    %rdx,%rax
  4153c0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4153c4:	0f b6 c0             	movzbl %al,%eax
  4153c7:	83 e0 40             	and    $0x40,%eax
  4153ca:	85 c0                	test   %eax,%eax
  4153cc:	74 4e                	je     41541c <traverseephemeron+0xc7>
  4153ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4153d2:	48 8b 40 10          	mov    0x10(%rax),%rax
  4153d6:	8b 55 f0             	mov    -0x10(%rbp),%edx
  4153d9:	48 c1 e2 04          	shl    $0x4,%rdx
  4153dd:	48 01 d0             	add    %rdx,%rax
  4153e0:	48 8b 00             	mov    (%rax),%rax
  4153e3:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4153e7:	0f b6 c0             	movzbl %al,%eax
  4153ea:	83 e0 18             	and    $0x18,%eax
  4153ed:	85 c0                	test   %eax,%eax
  4153ef:	74 2b                	je     41541c <traverseephemeron+0xc7>
  4153f1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4153f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4153fc:	48 8b 40 10          	mov    0x10(%rax),%rax
  415400:	8b 55 f0             	mov    -0x10(%rbp),%edx
  415403:	48 c1 e2 04          	shl    $0x4,%rdx
  415407:	48 01 d0             	add    %rdx,%rax
  41540a:	48 8b 10             	mov    (%rax),%rdx
  41540d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415411:	48 89 d6             	mov    %rdx,%rsi
  415414:	48 89 c7             	mov    %rax,%rdi
  415417:	e8 a7 f8 ff ff       	callq  414cc3 <reallymarkobject>
  41541c:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  415420:	8b 45 f0             	mov    -0x10(%rbp),%eax
  415423:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  415426:	72 86                	jb     4153ae <traverseephemeron+0x59>
  415428:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  41542f:	e9 20 01 00 00       	jmpq   415554 <traverseephemeron+0x1ff>
  415434:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  415438:	74 25                	je     41545f <traverseephemeron+0x10a>
  41543a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41543e:	48 8b 50 18          	mov    0x18(%rax),%rdx
  415442:	8b 45 e8             	mov    -0x18(%rbp),%eax
  415445:	2b 45 f0             	sub    -0x10(%rbp),%eax
  415448:	83 e8 01             	sub    $0x1,%eax
  41544b:	89 c1                	mov    %eax,%ecx
  41544d:	48 89 c8             	mov    %rcx,%rax
  415450:	48 01 c0             	add    %rax,%rax
  415453:	48 01 c8             	add    %rcx,%rax
  415456:	48 c1 e0 03          	shl    $0x3,%rax
  41545a:	48 01 d0             	add    %rdx,%rax
  41545d:	eb 1b                	jmp    41547a <traverseephemeron+0x125>
  41545f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415463:	48 8b 48 18          	mov    0x18(%rax),%rcx
  415467:	8b 55 f0             	mov    -0x10(%rbp),%edx
  41546a:	48 89 d0             	mov    %rdx,%rax
  41546d:	48 01 c0             	add    %rax,%rax
  415470:	48 01 d0             	add    %rdx,%rax
  415473:	48 c1 e0 03          	shl    $0x3,%rax
  415477:	48 01 c8             	add    %rcx,%rax
  41547a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41547e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415482:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415486:	0f b6 c0             	movzbl %al,%eax
  415489:	83 e0 0f             	and    $0xf,%eax
  41548c:	85 c0                	test   %eax,%eax
  41548e:	75 11                	jne    4154a1 <traverseephemeron+0x14c>
  415490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415494:	48 89 c7             	mov    %rax,%rdi
  415497:	e8 21 f5 ff ff       	callq  4149bd <clearkey>
  41549c:	e9 af 00 00 00       	jmpq   415550 <traverseephemeron+0x1fb>
  4154a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4154a5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4154a9:	0f b6 c0             	movzbl %al,%eax
  4154ac:	83 e0 40             	and    $0x40,%eax
  4154af:	85 c0                	test   %eax,%eax
  4154b1:	74 0a                	je     4154bd <traverseephemeron+0x168>
  4154b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4154b7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4154bb:	eb 05                	jmp    4154c2 <traverseephemeron+0x16d>
  4154bd:	b8 00 00 00 00       	mov    $0x0,%eax
  4154c2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4154c6:	48 89 c6             	mov    %rax,%rsi
  4154c9:	48 89 d7             	mov    %rdx,%rdi
  4154cc:	e8 11 f5 ff ff       	callq  4149e2 <iscleared>
  4154d1:	85 c0                	test   %eax,%eax
  4154d3:	74 37                	je     41550c <traverseephemeron+0x1b7>
  4154d5:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  4154dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4154e0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4154e4:	0f b6 c0             	movzbl %al,%eax
  4154e7:	83 e0 40             	and    $0x40,%eax
  4154ea:	85 c0                	test   %eax,%eax
  4154ec:	74 62                	je     415550 <traverseephemeron+0x1fb>
  4154ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4154f2:	48 8b 00             	mov    (%rax),%rax
  4154f5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4154f9:	0f b6 c0             	movzbl %al,%eax
  4154fc:	83 e0 18             	and    $0x18,%eax
  4154ff:	85 c0                	test   %eax,%eax
  415501:	74 4d                	je     415550 <traverseephemeron+0x1fb>
  415503:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  41550a:	eb 44                	jmp    415550 <traverseephemeron+0x1fb>
  41550c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415510:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415514:	0f b6 c0             	movzbl %al,%eax
  415517:	83 e0 40             	and    $0x40,%eax
  41551a:	85 c0                	test   %eax,%eax
  41551c:	74 32                	je     415550 <traverseephemeron+0x1fb>
  41551e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415522:	48 8b 00             	mov    (%rax),%rax
  415525:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415529:	0f b6 c0             	movzbl %al,%eax
  41552c:	83 e0 18             	and    $0x18,%eax
  41552f:	85 c0                	test   %eax,%eax
  415531:	74 1d                	je     415550 <traverseephemeron+0x1fb>
  415533:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41553a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41553e:	48 8b 10             	mov    (%rax),%rdx
  415541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415545:	48 89 d6             	mov    %rdx,%rsi
  415548:	48 89 c7             	mov    %rax,%rdi
  41554b:	e8 73 f7 ff ff       	callq  414cc3 <reallymarkobject>
  415550:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  415554:	8b 45 f0             	mov    -0x10(%rbp),%eax
  415557:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  41555a:	0f 82 d4 fe ff ff    	jb     415434 <traverseephemeron+0xdf>
  415560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415564:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  415568:	84 c0                	test   %al,%al
  41556a:	75 24                	jne    415590 <traverseephemeron+0x23b>
  41556c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415570:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
  415577:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41557b:	48 8d 48 30          	lea    0x30(%rax),%rcx
  41557f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415583:	48 89 ce             	mov    %rcx,%rsi
  415586:	48 89 c7             	mov    %rax,%rdi
  415589:	e8 ef f3 ff ff       	callq  41497d <linkgclist_>
  41558e:	eb 67                	jmp    4155f7 <traverseephemeron+0x2a2>
  415590:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  415594:	74 24                	je     4155ba <traverseephemeron+0x265>
  415596:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41559a:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  4155a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4155a5:	48 8d 48 30          	lea    0x30(%rax),%rcx
  4155a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4155ad:	48 89 ce             	mov    %rcx,%rsi
  4155b0:	48 89 c7             	mov    %rax,%rdi
  4155b3:	e8 c5 f3 ff ff       	callq  41497d <linkgclist_>
  4155b8:	eb 3d                	jmp    4155f7 <traverseephemeron+0x2a2>
  4155ba:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4155be:	74 24                	je     4155e4 <traverseephemeron+0x28f>
  4155c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4155c4:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
  4155cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4155cf:	48 8d 48 30          	lea    0x30(%rax),%rcx
  4155d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4155d7:	48 89 ce             	mov    %rcx,%rsi
  4155da:	48 89 c7             	mov    %rax,%rdi
  4155dd:	e8 9b f3 ff ff       	callq  41497d <linkgclist_>
  4155e2:	eb 13                	jmp    4155f7 <traverseephemeron+0x2a2>
  4155e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4155e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4155ec:	48 89 d6             	mov    %rdx,%rsi
  4155ef:	48 89 c7             	mov    %rax,%rdi
  4155f2:	e8 68 fb ff ff       	callq  41515f <genlink>
  4155f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4155fa:	c9                   	leaveq 
  4155fb:	c3                   	retq   

00000000004155fc <traversestrongtable>:
  4155fc:	55                   	push   %rbp
  4155fd:	48 89 e5             	mov    %rsp,%rbp
  415600:	48 83 ec 30          	sub    $0x30,%rsp
  415604:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  415608:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41560c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415610:	48 8b 70 18          	mov    0x18(%rax),%rsi
  415614:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415618:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  41561c:	0f b6 c0             	movzbl %al,%eax
  41561f:	ba 01 00 00 00       	mov    $0x1,%edx
  415624:	89 c1                	mov    %eax,%ecx
  415626:	d3 e2                	shl    %cl,%edx
  415628:	89 d0                	mov    %edx,%eax
  41562a:	48 63 d0             	movslq %eax,%rdx
  41562d:	48 89 d0             	mov    %rdx,%rax
  415630:	48 01 c0             	add    %rax,%rax
  415633:	48 01 d0             	add    %rdx,%rax
  415636:	48 c1 e0 03          	shl    $0x3,%rax
  41563a:	48 01 f0             	add    %rsi,%rax
  41563d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  415641:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415645:	48 89 c7             	mov    %rax,%rdi
  415648:	e8 4d 6d 01 00       	callq  42c39a <luaH_realasize>
  41564d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  415650:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  415657:	eb 6b                	jmp    4156c4 <traversestrongtable+0xc8>
  415659:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41565d:	48 8b 40 10          	mov    0x10(%rax),%rax
  415661:	8b 55 f4             	mov    -0xc(%rbp),%edx
  415664:	48 c1 e2 04          	shl    $0x4,%rdx
  415668:	48 01 d0             	add    %rdx,%rax
  41566b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41566f:	0f b6 c0             	movzbl %al,%eax
  415672:	83 e0 40             	and    $0x40,%eax
  415675:	85 c0                	test   %eax,%eax
  415677:	74 47                	je     4156c0 <traversestrongtable+0xc4>
  415679:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41567d:	48 8b 40 10          	mov    0x10(%rax),%rax
  415681:	8b 55 f4             	mov    -0xc(%rbp),%edx
  415684:	48 c1 e2 04          	shl    $0x4,%rdx
  415688:	48 01 d0             	add    %rdx,%rax
  41568b:	48 8b 00             	mov    (%rax),%rax
  41568e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415692:	0f b6 c0             	movzbl %al,%eax
  415695:	83 e0 18             	and    $0x18,%eax
  415698:	85 c0                	test   %eax,%eax
  41569a:	74 24                	je     4156c0 <traversestrongtable+0xc4>
  41569c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4156a0:	48 8b 40 10          	mov    0x10(%rax),%rax
  4156a4:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4156a7:	48 c1 e2 04          	shl    $0x4,%rdx
  4156ab:	48 01 d0             	add    %rdx,%rax
  4156ae:	48 8b 10             	mov    (%rax),%rdx
  4156b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4156b5:	48 89 d6             	mov    %rdx,%rsi
  4156b8:	48 89 c7             	mov    %rax,%rdi
  4156bb:	e8 03 f6 ff ff       	callq  414cc3 <reallymarkobject>
  4156c0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4156c4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4156c7:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4156ca:	72 8d                	jb     415659 <traversestrongtable+0x5d>
  4156cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4156d0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4156d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4156d8:	e9 a1 00 00 00       	jmpq   41577e <traversestrongtable+0x182>
  4156dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156e1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4156e5:	0f b6 c0             	movzbl %al,%eax
  4156e8:	83 e0 0f             	and    $0xf,%eax
  4156eb:	85 c0                	test   %eax,%eax
  4156ed:	75 0e                	jne    4156fd <traversestrongtable+0x101>
  4156ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156f3:	48 89 c7             	mov    %rax,%rdi
  4156f6:	e8 c2 f2 ff ff       	callq  4149bd <clearkey>
  4156fb:	eb 7c                	jmp    415779 <traversestrongtable+0x17d>
  4156fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415701:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415705:	0f b6 c0             	movzbl %al,%eax
  415708:	83 e0 40             	and    $0x40,%eax
  41570b:	85 c0                	test   %eax,%eax
  41570d:	74 2d                	je     41573c <traversestrongtable+0x140>
  41570f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415713:	48 8b 40 10          	mov    0x10(%rax),%rax
  415717:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41571b:	0f b6 c0             	movzbl %al,%eax
  41571e:	83 e0 18             	and    $0x18,%eax
  415721:	85 c0                	test   %eax,%eax
  415723:	74 17                	je     41573c <traversestrongtable+0x140>
  415725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415729:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41572d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415731:	48 89 d6             	mov    %rdx,%rsi
  415734:	48 89 c7             	mov    %rax,%rdi
  415737:	e8 87 f5 ff ff       	callq  414cc3 <reallymarkobject>
  41573c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415740:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415744:	0f b6 c0             	movzbl %al,%eax
  415747:	83 e0 40             	and    $0x40,%eax
  41574a:	85 c0                	test   %eax,%eax
  41574c:	74 2b                	je     415779 <traversestrongtable+0x17d>
  41574e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415752:	48 8b 00             	mov    (%rax),%rax
  415755:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415759:	0f b6 c0             	movzbl %al,%eax
  41575c:	83 e0 18             	and    $0x18,%eax
  41575f:	85 c0                	test   %eax,%eax
  415761:	74 16                	je     415779 <traversestrongtable+0x17d>
  415763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415767:	48 8b 10             	mov    (%rax),%rdx
  41576a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41576e:	48 89 d6             	mov    %rdx,%rsi
  415771:	48 89 c7             	mov    %rax,%rdi
  415774:	e8 4a f5 ff ff       	callq  414cc3 <reallymarkobject>
  415779:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
  41577e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415782:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  415786:	0f 82 51 ff ff ff    	jb     4156dd <traversestrongtable+0xe1>
  41578c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  415790:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415794:	48 89 d6             	mov    %rdx,%rsi
  415797:	48 89 c7             	mov    %rax,%rdi
  41579a:	e8 c0 f9 ff ff       	callq  41515f <genlink>
  41579f:	90                   	nop
  4157a0:	c9                   	leaveq 
  4157a1:	c3                   	retq   

00000000004157a2 <traversetable>:
  4157a2:	55                   	push   %rbp
  4157a3:	48 89 e5             	mov    %rsp,%rbp
  4157a6:	48 83 ec 30          	sub    $0x30,%rsp
  4157aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4157ae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4157b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4157b6:	48 8b 40 28          	mov    0x28(%rax),%rax
  4157ba:	48 85 c0             	test   %rax,%rax
  4157bd:	74 3f                	je     4157fe <traversetable+0x5c>
  4157bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4157c3:	48 8b 40 28          	mov    0x28(%rax),%rax
  4157c7:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  4157cb:	0f b6 c0             	movzbl %al,%eax
  4157ce:	83 e0 08             	and    $0x8,%eax
  4157d1:	85 c0                	test   %eax,%eax
  4157d3:	75 22                	jne    4157f7 <traversetable+0x55>
  4157d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4157d9:	48 8b 90 30 01 00 00 	mov    0x130(%rax),%rdx
  4157e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4157e4:	48 8b 40 28          	mov    0x28(%rax),%rax
  4157e8:	be 03 00 00 00       	mov    $0x3,%esi
  4157ed:	48 89 c7             	mov    %rax,%rdi
  4157f0:	e8 e2 95 01 00       	callq  42edd7 <luaT_gettm>
  4157f5:	eb 0c                	jmp    415803 <traversetable+0x61>
  4157f7:	b8 00 00 00 00       	mov    $0x0,%eax
  4157fc:	eb 05                	jmp    415803 <traversetable+0x61>
  4157fe:	b8 00 00 00 00       	mov    $0x0,%eax
  415803:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  415807:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41580b:	48 8b 40 28          	mov    0x28(%rax),%rax
  41580f:	48 85 c0             	test   %rax,%rax
  415812:	74 30                	je     415844 <traversetable+0xa2>
  415814:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415818:	48 8b 40 28          	mov    0x28(%rax),%rax
  41581c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415820:	0f b6 c0             	movzbl %al,%eax
  415823:	83 e0 18             	and    $0x18,%eax
  415826:	85 c0                	test   %eax,%eax
  415828:	74 1a                	je     415844 <traversetable+0xa2>
  41582a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41582e:	48 8b 40 28          	mov    0x28(%rax),%rax
  415832:	48 89 c2             	mov    %rax,%rdx
  415835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415839:	48 89 d6             	mov    %rdx,%rsi
  41583c:	48 89 c7             	mov    %rax,%rdi
  41583f:	e8 7f f4 ff ff       	callq  414cc3 <reallymarkobject>
  415844:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  415849:	0f 84 ce 00 00 00    	je     41591d <traversetable+0x17b>
  41584f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415853:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415857:	0f b6 c0             	movzbl %al,%eax
  41585a:	83 e0 0f             	and    $0xf,%eax
  41585d:	83 f8 04             	cmp    $0x4,%eax
  415860:	0f 85 b7 00 00 00    	jne    41591d <traversetable+0x17b>
  415866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41586a:	48 8b 00             	mov    (%rax),%rax
  41586d:	48 83 c0 18          	add    $0x18,%rax
  415871:	be 6b 00 00 00       	mov    $0x6b,%esi
  415876:	48 89 c7             	mov    %rax,%rdi
  415879:	e8 c2 be fe ff       	callq  401740 <strchr@plt>
  41587e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  415882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415886:	48 8b 00             	mov    (%rax),%rax
  415889:	48 83 c0 18          	add    $0x18,%rax
  41588d:	be 76 00 00 00       	mov    $0x76,%esi
  415892:	48 89 c7             	mov    %rax,%rdi
  415895:	e8 a6 be fe ff       	callq  401740 <strchr@plt>
  41589a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41589e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4158a3:	75 07                	jne    4158ac <traversetable+0x10a>
  4158a5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4158aa:	74 07                	je     4158b3 <traversetable+0x111>
  4158ac:	b8 01 00 00 00       	mov    $0x1,%eax
  4158b1:	eb 05                	jmp    4158b8 <traversetable+0x116>
  4158b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4158b8:	85 c0                	test   %eax,%eax
  4158ba:	74 61                	je     41591d <traversetable+0x17b>
  4158bc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4158c1:	75 15                	jne    4158d8 <traversetable+0x136>
  4158c3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4158c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4158cb:	48 89 d6             	mov    %rdx,%rsi
  4158ce:	48 89 c7             	mov    %rax,%rdi
  4158d1:	e8 0a f9 ff ff       	callq  4151e0 <traverseweakvalue>
  4158d6:	eb 58                	jmp    415930 <traversetable+0x18e>
  4158d8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4158dd:	75 1a                	jne    4158f9 <traversetable+0x157>
  4158df:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4158e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4158e7:	ba 00 00 00 00       	mov    $0x0,%edx
  4158ec:	48 89 ce             	mov    %rcx,%rsi
  4158ef:	48 89 c7             	mov    %rax,%rdi
  4158f2:	e8 5e fa ff ff       	callq  415355 <traverseephemeron>
  4158f7:	eb 37                	jmp    415930 <traversetable+0x18e>
  4158f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4158fd:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
  415904:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415908:	48 8d 48 30          	lea    0x30(%rax),%rcx
  41590c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415910:	48 89 ce             	mov    %rcx,%rsi
  415913:	48 89 c7             	mov    %rax,%rdi
  415916:	e8 62 f0 ff ff       	callq  41497d <linkgclist_>
  41591b:	eb 13                	jmp    415930 <traversetable+0x18e>
  41591d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  415921:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415925:	48 89 d6             	mov    %rdx,%rsi
  415928:	48 89 c7             	mov    %rax,%rdi
  41592b:	e8 cc fc ff ff       	callq  4155fc <traversestrongtable>
  415930:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415934:	8b 50 0c             	mov    0xc(%rax),%edx
  415937:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41593b:	48 8b 40 20          	mov    0x20(%rax),%rax
  41593f:	48 85 c0             	test   %rax,%rax
  415942:	74 18                	je     41595c <traversetable+0x1ba>
  415944:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415948:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  41594c:	0f b6 c0             	movzbl %al,%eax
  41594f:	be 02 00 00 00       	mov    $0x2,%esi
  415954:	89 c1                	mov    %eax,%ecx
  415956:	d3 e6                	shl    %cl,%esi
  415958:	89 f0                	mov    %esi,%eax
  41595a:	eb 05                	jmp    415961 <traversetable+0x1bf>
  41595c:	b8 00 00 00 00       	mov    $0x0,%eax
  415961:	01 d0                	add    %edx,%eax
  415963:	83 c0 01             	add    $0x1,%eax
  415966:	89 c0                	mov    %eax,%eax
  415968:	c9                   	leaveq 
  415969:	c3                   	retq   

000000000041596a <traverseudata>:
  41596a:	55                   	push   %rbp
  41596b:	48 89 e5             	mov    %rsp,%rbp
  41596e:	48 83 ec 20          	sub    $0x20,%rsp
  415972:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415976:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41597a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41597e:	48 8b 40 18          	mov    0x18(%rax),%rax
  415982:	48 85 c0             	test   %rax,%rax
  415985:	74 30                	je     4159b7 <traverseudata+0x4d>
  415987:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41598b:	48 8b 40 18          	mov    0x18(%rax),%rax
  41598f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415993:	0f b6 c0             	movzbl %al,%eax
  415996:	83 e0 18             	and    $0x18,%eax
  415999:	85 c0                	test   %eax,%eax
  41599b:	74 1a                	je     4159b7 <traverseudata+0x4d>
  41599d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4159a1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4159a5:	48 89 c2             	mov    %rax,%rdx
  4159a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4159ac:	48 89 d6             	mov    %rdx,%rsi
  4159af:	48 89 c7             	mov    %rax,%rdi
  4159b2:	e8 0c f3 ff ff       	callq  414cc3 <reallymarkobject>
  4159b7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4159be:	eb 7f                	jmp    415a3f <traverseudata+0xd5>
  4159c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4159c4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4159c7:	48 63 d2             	movslq %edx,%rdx
  4159ca:	48 83 c2 02          	add    $0x2,%rdx
  4159ce:	48 c1 e2 04          	shl    $0x4,%rdx
  4159d2:	48 01 d0             	add    %rdx,%rax
  4159d5:	48 83 c0 10          	add    $0x10,%rax
  4159d9:	0f b6 00             	movzbl (%rax),%eax
  4159dc:	0f b6 c0             	movzbl %al,%eax
  4159df:	83 e0 40             	and    $0x40,%eax
  4159e2:	85 c0                	test   %eax,%eax
  4159e4:	74 55                	je     415a3b <traverseudata+0xd1>
  4159e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4159ea:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4159ed:	48 63 d2             	movslq %edx,%rdx
  4159f0:	48 83 c2 02          	add    $0x2,%rdx
  4159f4:	48 c1 e2 04          	shl    $0x4,%rdx
  4159f8:	48 01 d0             	add    %rdx,%rax
  4159fb:	48 83 c0 08          	add    $0x8,%rax
  4159ff:	48 8b 00             	mov    (%rax),%rax
  415a02:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415a06:	0f b6 c0             	movzbl %al,%eax
  415a09:	83 e0 18             	and    $0x18,%eax
  415a0c:	85 c0                	test   %eax,%eax
  415a0e:	74 2b                	je     415a3b <traverseudata+0xd1>
  415a10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415a14:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415a17:	48 63 d2             	movslq %edx,%rdx
  415a1a:	48 83 c2 02          	add    $0x2,%rdx
  415a1e:	48 c1 e2 04          	shl    $0x4,%rdx
  415a22:	48 01 d0             	add    %rdx,%rax
  415a25:	48 83 c0 08          	add    $0x8,%rax
  415a29:	48 8b 10             	mov    (%rax),%rdx
  415a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415a30:	48 89 d6             	mov    %rdx,%rsi
  415a33:	48 89 c7             	mov    %rax,%rdi
  415a36:	e8 88 f2 ff ff       	callq  414cc3 <reallymarkobject>
  415a3b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415a3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415a43:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  415a47:	0f b7 c0             	movzwl %ax,%eax
  415a4a:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415a4d:	0f 8c 6d ff ff ff    	jl     4159c0 <traverseudata+0x56>
  415a53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  415a57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415a5b:	48 89 d6             	mov    %rdx,%rsi
  415a5e:	48 89 c7             	mov    %rax,%rdi
  415a61:	e8 f9 f6 ff ff       	callq  41515f <genlink>
  415a66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415a6a:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  415a6e:	0f b7 c0             	movzwl %ax,%eax
  415a71:	83 c0 01             	add    $0x1,%eax
  415a74:	c9                   	leaveq 
  415a75:	c3                   	retq   

0000000000415a76 <traverseproto>:
  415a76:	55                   	push   %rbp
  415a77:	48 89 e5             	mov    %rsp,%rbp
  415a7a:	48 83 ec 20          	sub    $0x20,%rsp
  415a7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415a82:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415a86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415a8a:	48 8b 40 70          	mov    0x70(%rax),%rax
  415a8e:	48 85 c0             	test   %rax,%rax
  415a91:	74 30                	je     415ac3 <traverseproto+0x4d>
  415a93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415a97:	48 8b 40 70          	mov    0x70(%rax),%rax
  415a9b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415a9f:	0f b6 c0             	movzbl %al,%eax
  415aa2:	83 e0 18             	and    $0x18,%eax
  415aa5:	85 c0                	test   %eax,%eax
  415aa7:	74 1a                	je     415ac3 <traverseproto+0x4d>
  415aa9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415aad:	48 8b 40 70          	mov    0x70(%rax),%rax
  415ab1:	48 89 c2             	mov    %rax,%rdx
  415ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415ab8:	48 89 d6             	mov    %rdx,%rsi
  415abb:	48 89 c7             	mov    %rax,%rdi
  415abe:	e8 00 f2 ff ff       	callq  414cc3 <reallymarkobject>
  415ac3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415aca:	eb 74                	jmp    415b40 <traverseproto+0xca>
  415acc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ad0:	48 8b 40 38          	mov    0x38(%rax),%rax
  415ad4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415ad7:	48 63 d2             	movslq %edx,%rdx
  415ada:	48 c1 e2 04          	shl    $0x4,%rdx
  415ade:	48 01 d0             	add    %rdx,%rax
  415ae1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415ae5:	0f b6 c0             	movzbl %al,%eax
  415ae8:	83 e0 40             	and    $0x40,%eax
  415aeb:	85 c0                	test   %eax,%eax
  415aed:	74 4d                	je     415b3c <traverseproto+0xc6>
  415aef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415af3:	48 8b 40 38          	mov    0x38(%rax),%rax
  415af7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415afa:	48 63 d2             	movslq %edx,%rdx
  415afd:	48 c1 e2 04          	shl    $0x4,%rdx
  415b01:	48 01 d0             	add    %rdx,%rax
  415b04:	48 8b 00             	mov    (%rax),%rax
  415b07:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415b0b:	0f b6 c0             	movzbl %al,%eax
  415b0e:	83 e0 18             	and    $0x18,%eax
  415b11:	85 c0                	test   %eax,%eax
  415b13:	74 27                	je     415b3c <traverseproto+0xc6>
  415b15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415b19:	48 8b 40 38          	mov    0x38(%rax),%rax
  415b1d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415b20:	48 63 d2             	movslq %edx,%rdx
  415b23:	48 c1 e2 04          	shl    $0x4,%rdx
  415b27:	48 01 d0             	add    %rdx,%rax
  415b2a:	48 8b 10             	mov    (%rax),%rdx
  415b2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415b31:	48 89 d6             	mov    %rdx,%rsi
  415b34:	48 89 c7             	mov    %rax,%rdi
  415b37:	e8 87 f1 ff ff       	callq  414cc3 <reallymarkobject>
  415b3c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415b40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415b44:	8b 40 14             	mov    0x14(%rax),%eax
  415b47:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415b4a:	7c 80                	jl     415acc <traverseproto+0x56>
  415b4c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415b53:	eb 71                	jmp    415bc6 <traverseproto+0x150>
  415b55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415b59:	48 8b 40 50          	mov    0x50(%rax),%rax
  415b5d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415b60:	48 63 d2             	movslq %edx,%rdx
  415b63:	48 c1 e2 04          	shl    $0x4,%rdx
  415b67:	48 01 d0             	add    %rdx,%rax
  415b6a:	48 8b 00             	mov    (%rax),%rax
  415b6d:	48 85 c0             	test   %rax,%rax
  415b70:	74 50                	je     415bc2 <traverseproto+0x14c>
  415b72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415b76:	48 8b 40 50          	mov    0x50(%rax),%rax
  415b7a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415b7d:	48 63 d2             	movslq %edx,%rdx
  415b80:	48 c1 e2 04          	shl    $0x4,%rdx
  415b84:	48 01 d0             	add    %rdx,%rax
  415b87:	48 8b 00             	mov    (%rax),%rax
  415b8a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415b8e:	0f b6 c0             	movzbl %al,%eax
  415b91:	83 e0 18             	and    $0x18,%eax
  415b94:	85 c0                	test   %eax,%eax
  415b96:	74 2a                	je     415bc2 <traverseproto+0x14c>
  415b98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415b9c:	48 8b 40 50          	mov    0x50(%rax),%rax
  415ba0:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415ba3:	48 63 d2             	movslq %edx,%rdx
  415ba6:	48 c1 e2 04          	shl    $0x4,%rdx
  415baa:	48 01 d0             	add    %rdx,%rax
  415bad:	48 8b 00             	mov    (%rax),%rax
  415bb0:	48 89 c2             	mov    %rax,%rdx
  415bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415bb7:	48 89 d6             	mov    %rdx,%rsi
  415bba:	48 89 c7             	mov    %rax,%rdi
  415bbd:	e8 01 f1 ff ff       	callq  414cc3 <reallymarkobject>
  415bc2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415bc6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415bca:	8b 40 10             	mov    0x10(%rax),%eax
  415bcd:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415bd0:	7c 83                	jl     415b55 <traverseproto+0xdf>
  415bd2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415bd9:	eb 71                	jmp    415c4c <traverseproto+0x1d6>
  415bdb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415bdf:	48 8b 40 48          	mov    0x48(%rax),%rax
  415be3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415be6:	48 63 d2             	movslq %edx,%rdx
  415be9:	48 c1 e2 03          	shl    $0x3,%rdx
  415bed:	48 01 d0             	add    %rdx,%rax
  415bf0:	48 8b 00             	mov    (%rax),%rax
  415bf3:	48 85 c0             	test   %rax,%rax
  415bf6:	74 50                	je     415c48 <traverseproto+0x1d2>
  415bf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415bfc:	48 8b 40 48          	mov    0x48(%rax),%rax
  415c00:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415c03:	48 63 d2             	movslq %edx,%rdx
  415c06:	48 c1 e2 03          	shl    $0x3,%rdx
  415c0a:	48 01 d0             	add    %rdx,%rax
  415c0d:	48 8b 00             	mov    (%rax),%rax
  415c10:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415c14:	0f b6 c0             	movzbl %al,%eax
  415c17:	83 e0 18             	and    $0x18,%eax
  415c1a:	85 c0                	test   %eax,%eax
  415c1c:	74 2a                	je     415c48 <traverseproto+0x1d2>
  415c1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415c22:	48 8b 40 48          	mov    0x48(%rax),%rax
  415c26:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415c29:	48 63 d2             	movslq %edx,%rdx
  415c2c:	48 c1 e2 03          	shl    $0x3,%rdx
  415c30:	48 01 d0             	add    %rdx,%rax
  415c33:	48 8b 00             	mov    (%rax),%rax
  415c36:	48 89 c2             	mov    %rax,%rdx
  415c39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415c3d:	48 89 d6             	mov    %rdx,%rsi
  415c40:	48 89 c7             	mov    %rax,%rdi
  415c43:	e8 7b f0 ff ff       	callq  414cc3 <reallymarkobject>
  415c48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415c4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415c50:	8b 40 20             	mov    0x20(%rax),%eax
  415c53:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415c56:	7c 83                	jl     415bdb <traverseproto+0x165>
  415c58:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415c5f:	eb 71                	jmp    415cd2 <traverseproto+0x25c>
  415c61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415c65:	48 8b 40 68          	mov    0x68(%rax),%rax
  415c69:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415c6c:	48 63 d2             	movslq %edx,%rdx
  415c6f:	48 c1 e2 04          	shl    $0x4,%rdx
  415c73:	48 01 d0             	add    %rdx,%rax
  415c76:	48 8b 00             	mov    (%rax),%rax
  415c79:	48 85 c0             	test   %rax,%rax
  415c7c:	74 50                	je     415cce <traverseproto+0x258>
  415c7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415c82:	48 8b 40 68          	mov    0x68(%rax),%rax
  415c86:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415c89:	48 63 d2             	movslq %edx,%rdx
  415c8c:	48 c1 e2 04          	shl    $0x4,%rdx
  415c90:	48 01 d0             	add    %rdx,%rax
  415c93:	48 8b 00             	mov    (%rax),%rax
  415c96:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415c9a:	0f b6 c0             	movzbl %al,%eax
  415c9d:	83 e0 18             	and    $0x18,%eax
  415ca0:	85 c0                	test   %eax,%eax
  415ca2:	74 2a                	je     415cce <traverseproto+0x258>
  415ca4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ca8:	48 8b 40 68          	mov    0x68(%rax),%rax
  415cac:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415caf:	48 63 d2             	movslq %edx,%rdx
  415cb2:	48 c1 e2 04          	shl    $0x4,%rdx
  415cb6:	48 01 d0             	add    %rdx,%rax
  415cb9:	48 8b 00             	mov    (%rax),%rax
  415cbc:	48 89 c2             	mov    %rax,%rdx
  415cbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415cc3:	48 89 d6             	mov    %rdx,%rsi
  415cc6:	48 89 c7             	mov    %rax,%rdi
  415cc9:	e8 f5 ef ff ff       	callq  414cc3 <reallymarkobject>
  415cce:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415cd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415cd6:	8b 40 24             	mov    0x24(%rax),%eax
  415cd9:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415cdc:	7c 83                	jl     415c61 <traverseproto+0x1eb>
  415cde:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ce2:	8b 40 14             	mov    0x14(%rax),%eax
  415ce5:	8d 50 01             	lea    0x1(%rax),%edx
  415ce8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415cec:	8b 40 10             	mov    0x10(%rax),%eax
  415cef:	01 c2                	add    %eax,%edx
  415cf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415cf5:	8b 40 20             	mov    0x20(%rax),%eax
  415cf8:	01 c2                	add    %eax,%edx
  415cfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415cfe:	8b 40 24             	mov    0x24(%rax),%eax
  415d01:	01 d0                	add    %edx,%eax
  415d03:	c9                   	leaveq 
  415d04:	c3                   	retq   

0000000000415d05 <traverseCclosure>:
  415d05:	55                   	push   %rbp
  415d06:	48 89 e5             	mov    %rsp,%rbp
  415d09:	48 83 ec 20          	sub    $0x20,%rsp
  415d0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415d11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415d15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415d1c:	eb 77                	jmp    415d95 <traverseCclosure+0x90>
  415d1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415d22:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415d25:	48 63 d2             	movslq %edx,%rdx
  415d28:	48 83 c2 02          	add    $0x2,%rdx
  415d2c:	48 c1 e2 04          	shl    $0x4,%rdx
  415d30:	48 01 d0             	add    %rdx,%rax
  415d33:	48 83 c0 08          	add    $0x8,%rax
  415d37:	0f b6 00             	movzbl (%rax),%eax
  415d3a:	0f b6 c0             	movzbl %al,%eax
  415d3d:	83 e0 40             	and    $0x40,%eax
  415d40:	85 c0                	test   %eax,%eax
  415d42:	74 4d                	je     415d91 <traverseCclosure+0x8c>
  415d44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415d48:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415d4b:	48 63 d2             	movslq %edx,%rdx
  415d4e:	48 83 c2 02          	add    $0x2,%rdx
  415d52:	48 c1 e2 04          	shl    $0x4,%rdx
  415d56:	48 01 d0             	add    %rdx,%rax
  415d59:	48 8b 00             	mov    (%rax),%rax
  415d5c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415d60:	0f b6 c0             	movzbl %al,%eax
  415d63:	83 e0 18             	and    $0x18,%eax
  415d66:	85 c0                	test   %eax,%eax
  415d68:	74 27                	je     415d91 <traverseCclosure+0x8c>
  415d6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415d6e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415d71:	48 63 d2             	movslq %edx,%rdx
  415d74:	48 83 c2 02          	add    $0x2,%rdx
  415d78:	48 c1 e2 04          	shl    $0x4,%rdx
  415d7c:	48 01 d0             	add    %rdx,%rax
  415d7f:	48 8b 10             	mov    (%rax),%rdx
  415d82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415d86:	48 89 d6             	mov    %rdx,%rsi
  415d89:	48 89 c7             	mov    %rax,%rdi
  415d8c:	e8 32 ef ff ff       	callq  414cc3 <reallymarkobject>
  415d91:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415d95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415d99:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  415d9d:	0f b6 c0             	movzbl %al,%eax
  415da0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415da3:	0f 8c 75 ff ff ff    	jl     415d1e <traverseCclosure+0x19>
  415da9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415dad:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  415db1:	0f b6 c0             	movzbl %al,%eax
  415db4:	83 c0 01             	add    $0x1,%eax
  415db7:	c9                   	leaveq 
  415db8:	c3                   	retq   

0000000000415db9 <traverseLclosure>:
  415db9:	55                   	push   %rbp
  415dba:	48 89 e5             	mov    %rsp,%rbp
  415dbd:	48 83 ec 20          	sub    $0x20,%rsp
  415dc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415dc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415dc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415dcd:	48 8b 40 18          	mov    0x18(%rax),%rax
  415dd1:	48 85 c0             	test   %rax,%rax
  415dd4:	74 30                	je     415e06 <traverseLclosure+0x4d>
  415dd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415dda:	48 8b 40 18          	mov    0x18(%rax),%rax
  415dde:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415de2:	0f b6 c0             	movzbl %al,%eax
  415de5:	83 e0 18             	and    $0x18,%eax
  415de8:	85 c0                	test   %eax,%eax
  415dea:	74 1a                	je     415e06 <traverseLclosure+0x4d>
  415dec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415df0:	48 8b 40 18          	mov    0x18(%rax),%rax
  415df4:	48 89 c2             	mov    %rax,%rdx
  415df7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415dfb:	48 89 d6             	mov    %rdx,%rsi
  415dfe:	48 89 c7             	mov    %rax,%rdi
  415e01:	e8 bd ee ff ff       	callq  414cc3 <reallymarkobject>
  415e06:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  415e0d:	eb 46                	jmp    415e55 <traverseLclosure+0x9c>
  415e0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415e13:	8b 55 fc             	mov    -0x4(%rbp),%edx
  415e16:	48 63 d2             	movslq %edx,%rdx
  415e19:	48 83 c2 04          	add    $0x4,%rdx
  415e1d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  415e21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  415e25:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  415e2a:	74 25                	je     415e51 <traverseLclosure+0x98>
  415e2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415e30:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415e34:	0f b6 c0             	movzbl %al,%eax
  415e37:	83 e0 18             	and    $0x18,%eax
  415e3a:	85 c0                	test   %eax,%eax
  415e3c:	74 13                	je     415e51 <traverseLclosure+0x98>
  415e3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  415e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415e46:	48 89 d6             	mov    %rdx,%rsi
  415e49:	48 89 c7             	mov    %rax,%rdi
  415e4c:	e8 72 ee ff ff       	callq  414cc3 <reallymarkobject>
  415e51:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  415e55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415e59:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  415e5d:	0f b6 c0             	movzbl %al,%eax
  415e60:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  415e63:	7c aa                	jl     415e0f <traverseLclosure+0x56>
  415e65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415e69:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  415e6d:	0f b6 c0             	movzbl %al,%eax
  415e70:	83 c0 01             	add    $0x1,%eax
  415e73:	c9                   	leaveq 
  415e74:	c3                   	retq   

0000000000415e75 <traversethread>:
  415e75:	55                   	push   %rbp
  415e76:	48 89 e5             	mov    %rsp,%rbp
  415e79:	48 83 ec 20          	sub    $0x20,%rsp
  415e7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415e81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415e85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415e89:	48 8b 40 30          	mov    0x30(%rax),%rax
  415e8d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  415e91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415e95:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415e99:	0f b6 c0             	movzbl %al,%eax
  415e9c:	83 e0 06             	and    $0x6,%eax
  415e9f:	85 c0                	test   %eax,%eax
  415ea1:	75 0c                	jne    415eaf <traversethread+0x3a>
  415ea3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415ea7:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  415eab:	84 c0                	test   %al,%al
  415ead:	75 22                	jne    415ed1 <traversethread+0x5c>
  415eaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415eb3:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
  415eba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ebe:	48 8d 48 48          	lea    0x48(%rax),%rcx
  415ec2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ec6:	48 89 ce             	mov    %rcx,%rsi
  415ec9:	48 89 c7             	mov    %rax,%rdi
  415ecc:	e8 ac ea ff ff       	callq  41497d <linkgclist_>
  415ed1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  415ed6:	75 4c                	jne    415f24 <traversethread+0xaf>
  415ed8:	b8 01 00 00 00       	mov    $0x1,%eax
  415edd:	e9 37 01 00 00       	jmpq   416019 <traversethread+0x1a4>
  415ee2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415ee6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  415eea:	0f b6 c0             	movzbl %al,%eax
  415eed:	83 e0 40             	and    $0x40,%eax
  415ef0:	85 c0                	test   %eax,%eax
  415ef2:	74 2b                	je     415f1f <traversethread+0xaa>
  415ef4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415ef8:	48 8b 00             	mov    (%rax),%rax
  415efb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415eff:	0f b6 c0             	movzbl %al,%eax
  415f02:	83 e0 18             	and    $0x18,%eax
  415f05:	85 c0                	test   %eax,%eax
  415f07:	74 16                	je     415f1f <traversethread+0xaa>
  415f09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415f0d:	48 8b 10             	mov    (%rax),%rdx
  415f10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415f14:	48 89 d6             	mov    %rdx,%rsi
  415f17:	48 89 c7             	mov    %rax,%rdi
  415f1a:	e8 a4 ed ff ff       	callq  414cc3 <reallymarkobject>
  415f1f:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
  415f24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415f28:	48 8b 40 10          	mov    0x10(%rax),%rax
  415f2c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  415f30:	72 b0                	jb     415ee2 <traversethread+0x6d>
  415f32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415f36:	48 8b 40 38          	mov    0x38(%rax),%rax
  415f3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  415f3e:	eb 31                	jmp    415f71 <traversethread+0xfc>
  415f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415f44:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  415f48:	0f b6 c0             	movzbl %al,%eax
  415f4b:	83 e0 18             	and    $0x18,%eax
  415f4e:	85 c0                	test   %eax,%eax
  415f50:	74 13                	je     415f65 <traversethread+0xf0>
  415f52:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  415f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415f5a:	48 89 d6             	mov    %rdx,%rsi
  415f5d:	48 89 c7             	mov    %rax,%rdi
  415f60:	e8 5e ed ff ff       	callq  414cc3 <reallymarkobject>
  415f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415f69:	48 8b 40 18          	mov    0x18(%rax),%rax
  415f6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  415f71:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  415f76:	75 c8                	jne    415f40 <traversethread+0xcb>
  415f78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415f7c:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  415f80:	3c 02                	cmp    $0x2,%al
  415f82:	75 60                	jne    415fe4 <traversethread+0x16f>
  415f84:	eb 0d                	jmp    415f93 <traversethread+0x11e>
  415f86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415f8a:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  415f8e:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
  415f93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415f97:	48 8b 40 28          	mov    0x28(%rax),%rax
  415f9b:	48 83 c0 50          	add    $0x50,%rax
  415f9f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  415fa3:	72 e1                	jb     415f86 <traversethread+0x111>
  415fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415fa9:	48 8b 40 50          	mov    0x50(%rax),%rax
  415fad:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  415fb1:	75 49                	jne    415ffc <traversethread+0x187>
  415fb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415fb7:	48 8b 40 38          	mov    0x38(%rax),%rax
  415fbb:	48 85 c0             	test   %rax,%rax
  415fbe:	74 3c                	je     415ffc <traversethread+0x187>
  415fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415fc4:	48 8b 90 f8 00 00 00 	mov    0xf8(%rax),%rdx
  415fcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415fcf:	48 89 50 50          	mov    %rdx,0x50(%rax)
  415fd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415fd7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  415fdb:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
  415fe2:	eb 18                	jmp    415ffc <traversethread+0x187>
  415fe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415fe8:	0f b6 40 6b          	movzbl 0x6b(%rax),%eax
  415fec:	84 c0                	test   %al,%al
  415fee:	75 0c                	jne    415ffc <traversethread+0x187>
  415ff0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415ff4:	48 89 c7             	mov    %rax,%rdi
  415ff7:	e8 cf b7 ff ff       	callq  4117cb <luaD_shrinkstack>
  415ffc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416000:	48 8b 50 28          	mov    0x28(%rax),%rdx
  416004:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416008:	48 8b 40 30          	mov    0x30(%rax),%rax
  41600c:	48 29 c2             	sub    %rax,%rdx
  41600f:	48 89 d0             	mov    %rdx,%rax
  416012:	48 c1 f8 04          	sar    $0x4,%rax
  416016:	83 c0 01             	add    $0x1,%eax
  416019:	c9                   	leaveq 
  41601a:	c3                   	retq   

000000000041601b <propagatemark>:
  41601b:	55                   	push   %rbp
  41601c:	48 89 e5             	mov    %rsp,%rbp
  41601f:	48 83 ec 20          	sub    $0x20,%rsp
  416023:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41602b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  416032:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41603a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41603e:	83 c8 20             	or     $0x20,%eax
  416041:	89 c2                	mov    %eax,%edx
  416043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416047:	88 50 09             	mov    %dl,0x9(%rax)
  41604a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41604e:	48 89 c7             	mov    %rax,%rdi
  416051:	e8 b5 e8 ff ff       	callq  41490b <getgclist>
  416056:	48 8b 10             	mov    (%rax),%rdx
  416059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41605d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
  416064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416068:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41606c:	0f b6 c0             	movzbl %al,%eax
  41606f:	83 e8 05             	sub    $0x5,%eax
  416072:	83 f8 21             	cmp    $0x21,%eax
  416075:	0f 87 94 00 00 00    	ja     41610f <propagatemark+0xf4>
  41607b:	89 c0                	mov    %eax,%eax
  41607d:	48 8b 04 c5 40 ec 43 	mov    0x43ec40(,%rax,8),%rax
  416084:	00 
  416085:	ff e0                	jmpq   *%rax
  416087:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41608b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41608f:	48 89 d6             	mov    %rdx,%rsi
  416092:	48 89 c7             	mov    %rax,%rdi
  416095:	e8 08 f7 ff ff       	callq  4157a2 <traversetable>
  41609a:	eb 78                	jmp    416114 <propagatemark+0xf9>
  41609c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4160a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4160a4:	48 89 d6             	mov    %rdx,%rsi
  4160a7:	48 89 c7             	mov    %rax,%rdi
  4160aa:	e8 bb f8 ff ff       	callq  41596a <traverseudata>
  4160af:	48 98                	cltq   
  4160b1:	eb 61                	jmp    416114 <propagatemark+0xf9>
  4160b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4160b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4160bb:	48 89 d6             	mov    %rdx,%rsi
  4160be:	48 89 c7             	mov    %rax,%rdi
  4160c1:	e8 f3 fc ff ff       	callq  415db9 <traverseLclosure>
  4160c6:	48 98                	cltq   
  4160c8:	eb 4a                	jmp    416114 <propagatemark+0xf9>
  4160ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4160ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4160d2:	48 89 d6             	mov    %rdx,%rsi
  4160d5:	48 89 c7             	mov    %rax,%rdi
  4160d8:	e8 28 fc ff ff       	callq  415d05 <traverseCclosure>
  4160dd:	48 98                	cltq   
  4160df:	eb 33                	jmp    416114 <propagatemark+0xf9>
  4160e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4160e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4160e9:	48 89 d6             	mov    %rdx,%rsi
  4160ec:	48 89 c7             	mov    %rax,%rdi
  4160ef:	e8 82 f9 ff ff       	callq  415a76 <traverseproto>
  4160f4:	48 98                	cltq   
  4160f6:	eb 1c                	jmp    416114 <propagatemark+0xf9>
  4160f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4160fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416100:	48 89 d6             	mov    %rdx,%rsi
  416103:	48 89 c7             	mov    %rax,%rdi
  416106:	e8 6a fd ff ff       	callq  415e75 <traversethread>
  41610b:	48 98                	cltq   
  41610d:	eb 05                	jmp    416114 <propagatemark+0xf9>
  41610f:	b8 00 00 00 00       	mov    $0x0,%eax
  416114:	c9                   	leaveq 
  416115:	c3                   	retq   

0000000000416116 <propagateall>:
  416116:	55                   	push   %rbp
  416117:	48 89 e5             	mov    %rsp,%rbp
  41611a:	48 83 ec 20          	sub    $0x20,%rsp
  41611e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416122:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  416129:	00 
  41612a:	eb 10                	jmp    41613c <propagateall+0x26>
  41612c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416130:	48 89 c7             	mov    %rax,%rdi
  416133:	e8 e3 fe ff ff       	callq  41601b <propagatemark>
  416138:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  41613c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416140:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  416147:	48 85 c0             	test   %rax,%rax
  41614a:	75 e0                	jne    41612c <propagateall+0x16>
  41614c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416150:	c9                   	leaveq 
  416151:	c3                   	retq   

0000000000416152 <convergeephemerons>:
  416152:	55                   	push   %rbp
  416153:	48 89 e5             	mov    %rsp,%rbp
  416156:	48 83 ec 30          	sub    $0x30,%rsp
  41615a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41615e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  416165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416169:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
  416170:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416174:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416178:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
  41617f:	00 00 00 00 
  416183:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41618a:	eb 55                	jmp    4161e1 <convergeephemerons+0x8f>
  41618c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416190:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  416194:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416198:	48 8b 40 30          	mov    0x30(%rax),%rax
  41619c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4161a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4161a4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4161a8:	83 c8 20             	or     $0x20,%eax
  4161ab:	89 c2                	mov    %eax,%edx
  4161ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4161b1:	88 50 09             	mov    %dl,0x9(%rax)
  4161b4:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4161b7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4161bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4161bf:	48 89 ce             	mov    %rcx,%rsi
  4161c2:	48 89 c7             	mov    %rax,%rdi
  4161c5:	e8 8b f1 ff ff       	callq  415355 <traverseephemeron>
  4161ca:	85 c0                	test   %eax,%eax
  4161cc:	74 13                	je     4161e1 <convergeephemerons+0x8f>
  4161ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4161d2:	48 89 c7             	mov    %rax,%rdi
  4161d5:	e8 3c ff ff ff       	callq  416116 <propagateall>
  4161da:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4161e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4161e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4161e9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4161ee:	75 9c                	jne    41618c <convergeephemerons+0x3a>
  4161f0:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4161f4:	0f 94 c0             	sete   %al
  4161f7:	0f b6 c0             	movzbl %al,%eax
  4161fa:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4161fd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  416201:	0f 85 5e ff ff ff    	jne    416165 <convergeephemerons+0x13>
  416207:	90                   	nop
  416208:	c9                   	leaveq 
  416209:	c3                   	retq   

000000000041620a <clearbykeys>:
  41620a:	55                   	push   %rbp
  41620b:	48 89 e5             	mov    %rsp,%rbp
  41620e:	48 83 ec 30          	sub    $0x30,%rsp
  416212:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  416216:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41621a:	e9 c0 00 00 00       	jmpq   4162df <clearbykeys+0xd5>
  41621f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416223:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416227:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41622b:	48 8b 70 18          	mov    0x18(%rax),%rsi
  41622f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416233:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  416237:	0f b6 c0             	movzbl %al,%eax
  41623a:	ba 01 00 00 00       	mov    $0x1,%edx
  41623f:	89 c1                	mov    %eax,%ecx
  416241:	d3 e2                	shl    %cl,%edx
  416243:	89 d0                	mov    %edx,%eax
  416245:	48 63 d0             	movslq %eax,%rdx
  416248:	48 89 d0             	mov    %rdx,%rax
  41624b:	48 01 c0             	add    %rax,%rax
  41624e:	48 01 d0             	add    %rdx,%rax
  416251:	48 c1 e0 03          	shl    $0x3,%rax
  416255:	48 01 f0             	add    %rsi,%rax
  416258:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41625c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416260:	48 8b 40 18          	mov    0x18(%rax),%rax
  416264:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416268:	eb 5f                	jmp    4162c9 <clearbykeys+0xbf>
  41626a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41626e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416272:	0f b6 c0             	movzbl %al,%eax
  416275:	83 e0 40             	and    $0x40,%eax
  416278:	85 c0                	test   %eax,%eax
  41627a:	74 0a                	je     416286 <clearbykeys+0x7c>
  41627c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416280:	48 8b 40 10          	mov    0x10(%rax),%rax
  416284:	eb 05                	jmp    41628b <clearbykeys+0x81>
  416286:	b8 00 00 00 00       	mov    $0x0,%eax
  41628b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41628f:	48 89 c6             	mov    %rax,%rsi
  416292:	48 89 d7             	mov    %rdx,%rdi
  416295:	e8 48 e7 ff ff       	callq  4149e2 <iscleared>
  41629a:	85 c0                	test   %eax,%eax
  41629c:	74 08                	je     4162a6 <clearbykeys+0x9c>
  41629e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4162a2:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  4162a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4162aa:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4162ae:	0f b6 c0             	movzbl %al,%eax
  4162b1:	83 e0 0f             	and    $0xf,%eax
  4162b4:	85 c0                	test   %eax,%eax
  4162b6:	75 0c                	jne    4162c4 <clearbykeys+0xba>
  4162b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4162bc:	48 89 c7             	mov    %rax,%rdi
  4162bf:	e8 f9 e6 ff ff       	callq  4149bd <clearkey>
  4162c4:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
  4162c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4162cd:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  4162d1:	72 97                	jb     41626a <clearbykeys+0x60>
  4162d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4162d7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4162db:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4162df:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  4162e4:	0f 85 35 ff ff ff    	jne    41621f <clearbykeys+0x15>
  4162ea:	90                   	nop
  4162eb:	c9                   	leaveq 
  4162ec:	c3                   	retq   

00000000004162ed <clearbyvalues>:
  4162ed:	55                   	push   %rbp
  4162ee:	48 89 e5             	mov    %rsp,%rbp
  4162f1:	48 83 ec 50          	sub    $0x50,%rsp
  4162f5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4162f9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4162fd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  416301:	e9 34 01 00 00       	jmpq   41643a <clearbyvalues+0x14d>
  416306:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41630a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41630e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416312:	48 8b 70 18          	mov    0x18(%rax),%rsi
  416316:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41631a:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  41631e:	0f b6 c0             	movzbl %al,%eax
  416321:	ba 01 00 00 00       	mov    $0x1,%edx
  416326:	89 c1                	mov    %eax,%ecx
  416328:	d3 e2                	shl    %cl,%edx
  41632a:	89 d0                	mov    %edx,%eax
  41632c:	48 63 d0             	movslq %eax,%rdx
  41632f:	48 89 d0             	mov    %rdx,%rax
  416332:	48 01 c0             	add    %rax,%rax
  416335:	48 01 d0             	add    %rdx,%rax
  416338:	48 c1 e0 03          	shl    $0x3,%rax
  41633c:	48 01 f0             	add    %rsi,%rax
  41633f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  416343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416347:	48 89 c7             	mov    %rax,%rdi
  41634a:	e8 4b 60 01 00       	callq  42c39a <luaH_realasize>
  41634f:	89 45 dc             	mov    %eax,-0x24(%rbp)
  416352:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  416359:	eb 55                	jmp    4163b0 <clearbyvalues+0xc3>
  41635b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41635f:	48 8b 40 10          	mov    0x10(%rax),%rax
  416363:	8b 55 f4             	mov    -0xc(%rbp),%edx
  416366:	48 c1 e2 04          	shl    $0x4,%rdx
  41636a:	48 01 d0             	add    %rdx,%rax
  41636d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416371:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416375:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416379:	0f b6 c0             	movzbl %al,%eax
  41637c:	83 e0 40             	and    $0x40,%eax
  41637f:	85 c0                	test   %eax,%eax
  416381:	74 09                	je     41638c <clearbyvalues+0x9f>
  416383:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416387:	48 8b 00             	mov    (%rax),%rax
  41638a:	eb 05                	jmp    416391 <clearbyvalues+0xa4>
  41638c:	b8 00 00 00 00       	mov    $0x0,%eax
  416391:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  416395:	48 89 c6             	mov    %rax,%rsi
  416398:	48 89 d7             	mov    %rdx,%rdi
  41639b:	e8 42 e6 ff ff       	callq  4149e2 <iscleared>
  4163a0:	85 c0                	test   %eax,%eax
  4163a2:	74 08                	je     4163ac <clearbyvalues+0xbf>
  4163a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4163a8:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  4163ac:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4163b0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4163b3:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  4163b6:	72 a3                	jb     41635b <clearbyvalues+0x6e>
  4163b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4163bc:	48 8b 40 18          	mov    0x18(%rax),%rax
  4163c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4163c4:	eb 5e                	jmp    416424 <clearbyvalues+0x137>
  4163c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4163ca:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4163ce:	0f b6 c0             	movzbl %al,%eax
  4163d1:	83 e0 40             	and    $0x40,%eax
  4163d4:	85 c0                	test   %eax,%eax
  4163d6:	74 09                	je     4163e1 <clearbyvalues+0xf4>
  4163d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4163dc:	48 8b 00             	mov    (%rax),%rax
  4163df:	eb 05                	jmp    4163e6 <clearbyvalues+0xf9>
  4163e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4163e6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4163ea:	48 89 c6             	mov    %rax,%rsi
  4163ed:	48 89 d7             	mov    %rdx,%rdi
  4163f0:	e8 ed e5 ff ff       	callq  4149e2 <iscleared>
  4163f5:	85 c0                	test   %eax,%eax
  4163f7:	74 08                	je     416401 <clearbyvalues+0x114>
  4163f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4163fd:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  416401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416405:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416409:	0f b6 c0             	movzbl %al,%eax
  41640c:	83 e0 0f             	and    $0xf,%eax
  41640f:	85 c0                	test   %eax,%eax
  416411:	75 0c                	jne    41641f <clearbyvalues+0x132>
  416413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416417:	48 89 c7             	mov    %rax,%rdi
  41641a:	e8 9e e5 ff ff       	callq  4149bd <clearkey>
  41641f:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
  416424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416428:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  41642c:	72 98                	jb     4163c6 <clearbyvalues+0xd9>
  41642e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416432:	48 8b 40 30          	mov    0x30(%rax),%rax
  416436:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41643a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41643e:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  416442:	0f 85 be fe ff ff    	jne    416306 <clearbyvalues+0x19>
  416448:	90                   	nop
  416449:	c9                   	leaveq 
  41644a:	c3                   	retq   

000000000041644b <freeupval>:
  41644b:	55                   	push   %rbp
  41644c:	48 89 e5             	mov    %rsp,%rbp
  41644f:	48 83 ec 10          	sub    $0x10,%rsp
  416453:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416457:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41645b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41645f:	48 8b 40 10          	mov    0x10(%rax),%rax
  416463:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416467:	48 83 c2 18          	add    $0x18,%rdx
  41646b:	48 39 d0             	cmp    %rdx,%rax
  41646e:	74 0c                	je     41647c <freeupval+0x31>
  416470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416474:	48 89 c7             	mov    %rax,%rdi
  416477:	e8 6e df ff ff       	callq  4143ea <luaF_unlinkupval>
  41647c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  416480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416484:	ba 28 00 00 00       	mov    $0x28,%edx
  416489:	48 89 ce             	mov    %rcx,%rsi
  41648c:	48 89 c7             	mov    %rax,%rdi
  41648f:	e8 eb 6b 00 00       	callq  41d07f <luaM_free_>
  416494:	90                   	nop
  416495:	c9                   	leaveq 
  416496:	c3                   	retq   

0000000000416497 <freeobj>:
  416497:	55                   	push   %rbp
  416498:	48 89 e5             	mov    %rsp,%rbp
  41649b:	48 83 ec 40          	sub    $0x40,%rsp
  41649f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4164a3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4164a7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4164ab:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4164af:	0f b6 c0             	movzbl %al,%eax
  4164b2:	83 e8 04             	sub    $0x4,%eax
  4164b5:	83 f8 22             	cmp    $0x22,%eax
  4164b8:	0f 87 8f 01 00 00    	ja     41664d <freeobj+0x1b6>
  4164be:	89 c0                	mov    %eax,%eax
  4164c0:	48 8b 04 c5 50 ed 43 	mov    0x43ed50(,%rax,8),%rax
  4164c7:	00 
  4164c8:	ff e0                	jmpq   *%rax
  4164ca:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4164ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4164d2:	48 89 d6             	mov    %rdx,%rsi
  4164d5:	48 89 c7             	mov    %rax,%rdi
  4164d8:	e8 65 e2 ff ff       	callq  414742 <luaF_freeproto>
  4164dd:	e9 6b 01 00 00       	jmpq   41664d <freeobj+0x1b6>
  4164e2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4164e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4164ea:	48 89 d6             	mov    %rdx,%rsi
  4164ed:	48 89 c7             	mov    %rax,%rdi
  4164f0:	e8 56 ff ff ff       	callq  41644b <freeupval>
  4164f5:	e9 53 01 00 00       	jmpq   41664d <freeobj+0x1b6>
  4164fa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4164fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416506:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  41650a:	0f b6 c0             	movzbl %al,%eax
  41650d:	83 c0 04             	add    $0x4,%eax
  416510:	c1 e0 03             	shl    $0x3,%eax
  416513:	48 63 d0             	movslq %eax,%rdx
  416516:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41651a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41651e:	48 89 ce             	mov    %rcx,%rsi
  416521:	48 89 c7             	mov    %rax,%rdi
  416524:	e8 56 6b 00 00       	callq  41d07f <luaM_free_>
  416529:	e9 1f 01 00 00       	jmpq   41664d <freeobj+0x1b6>
  41652e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416532:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416536:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41653a:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  41653e:	0f b6 c0             	movzbl %al,%eax
  416541:	83 c0 02             	add    $0x2,%eax
  416544:	c1 e0 04             	shl    $0x4,%eax
  416547:	48 63 d0             	movslq %eax,%rdx
  41654a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41654e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416552:	48 89 ce             	mov    %rcx,%rsi
  416555:	48 89 c7             	mov    %rax,%rdi
  416558:	e8 22 6b 00 00       	callq  41d07f <luaM_free_>
  41655d:	e9 eb 00 00 00       	jmpq   41664d <freeobj+0x1b6>
  416562:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  416566:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41656a:	48 89 d6             	mov    %rdx,%rsi
  41656d:	48 89 c7             	mov    %rax,%rdi
  416570:	e8 7b 6b 01 00       	callq  42d0f0 <luaH_free>
  416575:	e9 d3 00 00 00       	jmpq   41664d <freeobj+0x1b6>
  41657a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41657e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416582:	48 89 d6             	mov    %rdx,%rsi
  416585:	48 89 c7             	mov    %rax,%rdi
  416588:	e8 20 fc 00 00       	callq  4261ad <luaE_freethread>
  41658d:	e9 bb 00 00 00       	jmpq   41664d <freeobj+0x1b6>
  416592:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416596:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41659a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41659e:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4165a2:	66 85 c0             	test   %ax,%ax
  4165a5:	74 15                	je     4165bc <freeobj+0x125>
  4165a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4165ab:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4165af:	0f b7 c0             	movzwl %ax,%eax
  4165b2:	48 c1 e0 04          	shl    $0x4,%rax
  4165b6:	48 8d 50 28          	lea    0x28(%rax),%rdx
  4165ba:	eb 05                	jmp    4165c1 <freeobj+0x12a>
  4165bc:	ba 20 00 00 00       	mov    $0x20,%edx
  4165c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4165c5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4165c9:	48 01 c2             	add    %rax,%rdx
  4165cc:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4165d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4165d4:	48 89 ce             	mov    %rcx,%rsi
  4165d7:	48 89 c7             	mov    %rax,%rdi
  4165da:	e8 a0 6a 00 00       	callq  41d07f <luaM_free_>
  4165df:	eb 6c                	jmp    41664d <freeobj+0x1b6>
  4165e1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4165e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4165e9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4165ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4165f1:	48 89 d6             	mov    %rdx,%rsi
  4165f4:	48 89 c7             	mov    %rax,%rdi
  4165f7:	e8 6b 07 01 00       	callq  426d67 <luaS_remove>
  4165fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416600:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  416604:	0f b6 c0             	movzbl %al,%eax
  416607:	83 c0 01             	add    $0x1,%eax
  41660a:	48 98                	cltq   
  41660c:	48 8d 50 18          	lea    0x18(%rax),%rdx
  416610:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416614:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416618:	48 89 ce             	mov    %rcx,%rsi
  41661b:	48 89 c7             	mov    %rax,%rdi
  41661e:	e8 5c 6a 00 00       	callq  41d07f <luaM_free_>
  416623:	eb 28                	jmp    41664d <freeobj+0x1b6>
  416625:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416629:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41662d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416631:	48 8b 40 10          	mov    0x10(%rax),%rax
  416635:	48 8d 50 19          	lea    0x19(%rax),%rdx
  416639:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41663d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416641:	48 89 ce             	mov    %rcx,%rsi
  416644:	48 89 c7             	mov    %rax,%rdi
  416647:	e8 33 6a 00 00       	callq  41d07f <luaM_free_>
  41664c:	90                   	nop
  41664d:	90                   	nop
  41664e:	c9                   	leaveq 
  41664f:	c3                   	retq   

0000000000416650 <sweeplist>:
  416650:	55                   	push   %rbp
  416651:	48 89 e5             	mov    %rsp,%rbp
  416654:	48 83 ec 50          	sub    $0x50,%rsp
  416658:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41665c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  416660:	89 55 bc             	mov    %edx,-0x44(%rbp)
  416663:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  416667:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41666b:	48 8b 40 18          	mov    0x18(%rax),%rax
  41666f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416673:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416677:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  41667b:	83 f0 18             	xor    $0x18,%eax
  41667e:	0f b6 c0             	movzbl %al,%eax
  416681:	89 45 ec             	mov    %eax,-0x14(%rbp)
  416684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416688:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  41668c:	0f b6 c0             	movzbl %al,%eax
  41668f:	83 e0 18             	and    $0x18,%eax
  416692:	89 45 e8             	mov    %eax,-0x18(%rbp)
  416695:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41669c:	eb 68                	jmp    416706 <sweeplist+0xb6>
  41669e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4166a2:	48 8b 00             	mov    (%rax),%rax
  4166a5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4166a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4166ad:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4166b1:	0f b6 c0             	movzbl %al,%eax
  4166b4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4166b7:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4166ba:	23 45 ec             	and    -0x14(%rbp),%eax
  4166bd:	85 c0                	test   %eax,%eax
  4166bf:	74 23                	je     4166e4 <sweeplist+0x94>
  4166c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4166c5:	48 8b 10             	mov    (%rax),%rdx
  4166c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4166cc:	48 89 10             	mov    %rdx,(%rax)
  4166cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4166d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4166d7:	48 89 d6             	mov    %rdx,%rsi
  4166da:	48 89 c7             	mov    %rax,%rdi
  4166dd:	e8 b5 fd ff ff       	callq  416497 <freeobj>
  4166e2:	eb 1e                	jmp    416702 <sweeplist+0xb2>
  4166e4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4166e7:	83 e0 c0             	and    $0xffffffc0,%eax
  4166ea:	89 c2                	mov    %eax,%edx
  4166ec:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4166ef:	09 d0                	or     %edx,%eax
  4166f1:	89 c2                	mov    %eax,%edx
  4166f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4166f7:	88 50 09             	mov    %dl,0x9(%rax)
  4166fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4166fe:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  416702:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  416706:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41670a:	48 8b 00             	mov    (%rax),%rax
  41670d:	48 85 c0             	test   %rax,%rax
  416710:	74 08                	je     41671a <sweeplist+0xca>
  416712:	8b 45 fc             	mov    -0x4(%rbp),%eax
  416715:	3b 45 bc             	cmp    -0x44(%rbp),%eax
  416718:	7c 84                	jl     41669e <sweeplist+0x4e>
  41671a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  41671f:	74 09                	je     41672a <sweeplist+0xda>
  416721:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  416725:	8b 55 fc             	mov    -0x4(%rbp),%edx
  416728:	89 10                	mov    %edx,(%rax)
  41672a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41672e:	48 8b 00             	mov    (%rax),%rax
  416731:	48 85 c0             	test   %rax,%rax
  416734:	74 06                	je     41673c <sweeplist+0xec>
  416736:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41673a:	eb 05                	jmp    416741 <sweeplist+0xf1>
  41673c:	b8 00 00 00 00       	mov    $0x0,%eax
  416741:	c9                   	leaveq 
  416742:	c3                   	retq   

0000000000416743 <sweeptolive>:
  416743:	55                   	push   %rbp
  416744:	48 89 e5             	mov    %rsp,%rbp
  416747:	48 83 ec 20          	sub    $0x20,%rsp
  41674b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41674f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416753:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416757:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41675b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41675f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416763:	b9 00 00 00 00       	mov    $0x0,%ecx
  416768:	ba 01 00 00 00       	mov    $0x1,%edx
  41676d:	48 89 c7             	mov    %rax,%rdi
  416770:	e8 db fe ff ff       	callq  416650 <sweeplist>
  416775:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  416779:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41677d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  416781:	74 d8                	je     41675b <sweeptolive+0x18>
  416783:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416787:	c9                   	leaveq 
  416788:	c3                   	retq   

0000000000416789 <checkSizes>:
  416789:	55                   	push   %rbp
  41678a:	48 89 e5             	mov    %rsp,%rbp
  41678d:	48 83 ec 20          	sub    $0x20,%rsp
  416791:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416795:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416799:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41679d:	0f b6 40 6b          	movzbl 0x6b(%rax),%eax
  4167a1:	84 c0                	test   %al,%al
  4167a3:	75 68                	jne    41680d <checkSizes+0x84>
  4167a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167a9:	8b 50 38             	mov    0x38(%rax),%edx
  4167ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167b0:	8b 40 3c             	mov    0x3c(%rax),%eax
  4167b3:	8d 48 03             	lea    0x3(%rax),%ecx
  4167b6:	85 c0                	test   %eax,%eax
  4167b8:	0f 48 c1             	cmovs  %ecx,%eax
  4167bb:	c1 f8 02             	sar    $0x2,%eax
  4167be:	39 c2                	cmp    %eax,%edx
  4167c0:	7d 4b                	jge    41680d <checkSizes+0x84>
  4167c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167c6:	48 8b 40 18          	mov    0x18(%rax),%rax
  4167ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4167ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167d2:	8b 40 3c             	mov    0x3c(%rax),%eax
  4167d5:	89 c2                	mov    %eax,%edx
  4167d7:	c1 ea 1f             	shr    $0x1f,%edx
  4167da:	01 d0                	add    %edx,%eax
  4167dc:	d1 f8                	sar    %eax
  4167de:	89 c2                	mov    %eax,%edx
  4167e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4167e4:	89 d6                	mov    %edx,%esi
  4167e6:	48 89 c7             	mov    %rax,%rdi
  4167e9:	e8 5e 02 01 00       	callq  426a4c <luaS_resize>
  4167ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167f2:	48 8b 50 20          	mov    0x20(%rax),%rdx
  4167f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167fa:	48 8b 40 18          	mov    0x18(%rax),%rax
  4167fe:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  416802:	48 01 c2             	add    %rax,%rdx
  416805:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416809:	48 89 50 20          	mov    %rdx,0x20(%rax)
  41680d:	90                   	nop
  41680e:	c9                   	leaveq 
  41680f:	c3                   	retq   

0000000000416810 <udata2finalize>:
  416810:	55                   	push   %rbp
  416811:	48 89 e5             	mov    %rsp,%rbp
  416814:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41681c:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  416823:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41682b:	48 8b 10             	mov    (%rax),%rdx
  41682e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416832:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
  416839:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41683d:	48 8b 50 70          	mov    0x70(%rax),%rdx
  416841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416845:	48 89 10             	mov    %rdx,(%rax)
  416848:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41684c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  416850:	48 89 50 70          	mov    %rdx,0x70(%rax)
  416854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416858:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41685c:	83 e0 bf             	and    $0xffffffbf,%eax
  41685f:	89 c2                	mov    %eax,%edx
  416861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416865:	88 50 09             	mov    %dl,0x9(%rax)
  416868:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41686c:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  416870:	3c 02                	cmp    $0x2,%al
  416872:	76 31                	jbe    4168a5 <udata2finalize+0x95>
  416874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416878:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  41687c:	3c 06                	cmp    $0x6,%al
  41687e:	77 25                	ja     4168a5 <udata2finalize+0x95>
  416880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416884:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416888:	83 e0 c7             	and    $0xffffffc7,%eax
  41688b:	89 c2                	mov    %eax,%edx
  41688d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416891:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  416895:	83 e0 18             	and    $0x18,%eax
  416898:	09 d0                	or     %edx,%eax
  41689a:	89 c2                	mov    %eax,%edx
  41689c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4168a0:	88 50 09             	mov    %dl,0x9(%rax)
  4168a3:	eb 22                	jmp    4168c7 <udata2finalize+0xb7>
  4168a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4168a9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4168ad:	0f b6 c0             	movzbl %al,%eax
  4168b0:	83 e0 07             	and    $0x7,%eax
  4168b3:	83 f8 03             	cmp    $0x3,%eax
  4168b6:	75 0f                	jne    4168c7 <udata2finalize+0xb7>
  4168b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4168bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4168c0:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
  4168c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4168cb:	5d                   	pop    %rbp
  4168cc:	c3                   	retq   

00000000004168cd <dothecall>:
  4168cd:	55                   	push   %rbp
  4168ce:	48 89 e5             	mov    %rsp,%rbp
  4168d1:	48 83 ec 10          	sub    $0x10,%rsp
  4168d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4168d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4168dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4168e1:	48 8b 40 10          	mov    0x10(%rax),%rax
  4168e5:	48 8d 48 e0          	lea    -0x20(%rax),%rcx
  4168e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4168ed:	ba 00 00 00 00       	mov    $0x0,%edx
  4168f2:	48 89 ce             	mov    %rcx,%rsi
  4168f5:	48 89 c7             	mov    %rax,%rdi
  4168f8:	e8 fa bf ff ff       	callq  4128f7 <luaD_callnoyield>
  4168fd:	90                   	nop
  4168fe:	c9                   	leaveq 
  4168ff:	c3                   	retq   

0000000000416900 <GCTM>:
  416900:	55                   	push   %rbp
  416901:	48 89 e5             	mov    %rsp,%rbp
  416904:	48 83 ec 70          	sub    $0x70,%rsp
  416908:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  41690c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416910:	48 8b 40 18          	mov    0x18(%rax),%rax
  416914:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416918:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  41691c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416924:	48 89 c7             	mov    %rax,%rdi
  416927:	e8 e4 fe ff ff       	callq  416810 <udata2finalize>
  41692c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416930:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  416938:	48 89 10             	mov    %rdx,(%rax)
  41693b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41693f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416943:	83 c8 40             	or     $0x40,%eax
  416946:	89 c2                	mov    %eax,%edx
  416948:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41694c:	88 50 08             	mov    %dl,0x8(%rax)
  41694f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  416953:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416957:	ba 02 00 00 00       	mov    $0x2,%edx
  41695c:	48 89 ce             	mov    %rcx,%rsi
  41695f:	48 89 c7             	mov    %rax,%rdi
  416962:	e8 d8 84 01 00       	callq  42ee3f <luaT_gettmbyobj>
  416967:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41696b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41696f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416973:	0f b6 c0             	movzbl %al,%eax
  416976:	83 e0 0f             	and    $0xf,%eax
  416979:	85 c0                	test   %eax,%eax
  41697b:	0f 84 69 01 00 00    	je     416aea <GCTM+0x1ea>
  416981:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416985:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  416989:	88 45 df             	mov    %al,-0x21(%rbp)
  41698c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416990:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  416994:	0f b6 c0             	movzbl %al,%eax
  416997:	89 45 d8             	mov    %eax,-0x28(%rbp)
  41699a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41699e:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  4169a2:	83 c8 02             	or     $0x2,%eax
  4169a5:	89 c2                	mov    %eax,%edx
  4169a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4169ab:	88 50 6a             	mov    %dl,0x6a(%rax)
  4169ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4169b2:	c6 40 0b 00          	movb   $0x0,0xb(%rax)
  4169b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4169ba:	48 8b 40 10          	mov    0x10(%rax),%rax
  4169be:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4169c2:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4169c6:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  4169ca:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4169ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4169d2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4169d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4169da:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4169de:	48 8b 12             	mov    (%rdx),%rdx
  4169e1:	48 89 10             	mov    %rdx,(%rax)
  4169e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4169e8:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4169ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4169f0:	88 50 08             	mov    %dl,0x8(%rax)
  4169f3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4169f7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4169fb:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4169ff:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  416a03:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  416a07:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  416a0b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  416a0f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  416a13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416a17:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  416a1b:	48 8b 12             	mov    (%rdx),%rdx
  416a1e:	48 89 10             	mov    %rdx,(%rax)
  416a21:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  416a25:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  416a29:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416a2d:	88 50 08             	mov    %dl,0x8(%rax)
  416a30:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a34:	48 8b 40 20          	mov    0x20(%rax),%rax
  416a38:	0f b7 50 3e          	movzwl 0x3e(%rax),%edx
  416a3c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a40:	48 8b 40 20          	mov    0x20(%rax),%rax
  416a44:	80 ca 80             	or     $0x80,%dl
  416a47:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  416a4b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a4f:	48 8b 40 10          	mov    0x10(%rax),%rax
  416a53:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
  416a57:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a5b:	48 8b 40 30          	mov    0x30(%rax),%rax
  416a5f:	48 29 c2             	sub    %rax,%rdx
  416a62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a66:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  416a6c:	48 89 d1             	mov    %rdx,%rcx
  416a6f:	ba 00 00 00 00       	mov    $0x0,%edx
  416a74:	be cd 68 41 00       	mov    $0x4168cd,%esi
  416a79:	48 89 c7             	mov    %rax,%rdi
  416a7c:	e8 b4 c6 ff ff       	callq  413135 <luaD_pcall>
  416a81:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  416a84:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a88:	48 8b 40 20          	mov    0x20(%rax),%rax
  416a8c:	0f b7 50 3e          	movzwl 0x3e(%rax),%edx
  416a90:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416a94:	48 8b 40 20          	mov    0x20(%rax),%rax
  416a98:	80 e2 7f             	and    $0x7f,%dl
  416a9b:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  416a9f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416aa3:	0f b6 55 df          	movzbl -0x21(%rbp),%edx
  416aa7:	88 50 0b             	mov    %dl,0xb(%rax)
  416aaa:	8b 45 d8             	mov    -0x28(%rbp),%eax
  416aad:	89 c2                	mov    %eax,%edx
  416aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416ab3:	88 50 6a             	mov    %dl,0x6a(%rax)
  416ab6:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  416aba:	0f 95 c0             	setne  %al
  416abd:	0f b6 c0             	movzbl %al,%eax
  416ac0:	48 85 c0             	test   %rax,%rax
  416ac3:	74 25                	je     416aea <GCTM+0x1ea>
  416ac5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416ac9:	be 68 ee 43 00       	mov    $0x43ee68,%esi
  416ace:	48 89 c7             	mov    %rax,%rdi
  416ad1:	e8 aa fc 00 00       	callq  426780 <luaE_warnerror>
  416ad6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416ada:	48 8b 40 10          	mov    0x10(%rax),%rax
  416ade:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  416ae2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416ae6:	48 89 50 10          	mov    %rdx,0x10(%rax)
  416aea:	90                   	nop
  416aeb:	c9                   	leaveq 
  416aec:	c3                   	retq   

0000000000416aed <runafewfinalizers>:
  416aed:	55                   	push   %rbp
  416aee:	48 89 e5             	mov    %rsp,%rbp
  416af1:	48 83 ec 20          	sub    $0x20,%rsp
  416af5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416af9:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  416afc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b00:	48 8b 40 18          	mov    0x18(%rax),%rax
  416b04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416b08:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  416b0f:	eb 10                	jmp    416b21 <runafewfinalizers+0x34>
  416b11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b15:	48 89 c7             	mov    %rax,%rdi
  416b18:	e8 e3 fd ff ff       	callq  416900 <GCTM>
  416b1d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  416b21:	8b 45 fc             	mov    -0x4(%rbp),%eax
  416b24:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  416b27:	7d 10                	jge    416b39 <runafewfinalizers+0x4c>
  416b29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416b2d:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  416b34:	48 85 c0             	test   %rax,%rax
  416b37:	75 d8                	jne    416b11 <runafewfinalizers+0x24>
  416b39:	8b 45 fc             	mov    -0x4(%rbp),%eax
  416b3c:	c9                   	leaveq 
  416b3d:	c3                   	retq   

0000000000416b3e <callallpendingfinalizers>:
  416b3e:	55                   	push   %rbp
  416b3f:	48 89 e5             	mov    %rsp,%rbp
  416b42:	48 83 ec 20          	sub    $0x20,%rsp
  416b46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416b4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b4e:	48 8b 40 18          	mov    0x18(%rax),%rax
  416b52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416b56:	eb 0c                	jmp    416b64 <callallpendingfinalizers+0x26>
  416b58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b5c:	48 89 c7             	mov    %rax,%rdi
  416b5f:	e8 9c fd ff ff       	callq  416900 <GCTM>
  416b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416b68:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  416b6f:	48 85 c0             	test   %rax,%rax
  416b72:	75 e4                	jne    416b58 <callallpendingfinalizers+0x1a>
  416b74:	90                   	nop
  416b75:	c9                   	leaveq 
  416b76:	c3                   	retq   

0000000000416b77 <findlast>:
  416b77:	55                   	push   %rbp
  416b78:	48 89 e5             	mov    %rsp,%rbp
  416b7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416b7f:	eb 0b                	jmp    416b8c <findlast+0x15>
  416b81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416b85:	48 8b 00             	mov    (%rax),%rax
  416b88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416b90:	48 8b 00             	mov    (%rax),%rax
  416b93:	48 85 c0             	test   %rax,%rax
  416b96:	75 e9                	jne    416b81 <findlast+0xa>
  416b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416b9c:	5d                   	pop    %rbp
  416b9d:	c3                   	retq   

0000000000416b9e <separatetobefnz>:
  416b9e:	55                   	push   %rbp
  416b9f:	48 89 e5             	mov    %rsp,%rbp
  416ba2:	48 83 ec 30          	sub    $0x30,%rsp
  416ba6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  416baa:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  416bad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416bb1:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
  416bb5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416bb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416bbd:	48 05 b0 00 00 00    	add    $0xb0,%rax
  416bc3:	48 89 c7             	mov    %rax,%rdi
  416bc6:	e8 ac ff ff ff       	callq  416b77 <findlast>
  416bcb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416bcf:	eb 74                	jmp    416c45 <separatetobefnz+0xa7>
  416bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416bd5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416bd9:	0f b6 c0             	movzbl %al,%eax
  416bdc:	83 e0 18             	and    $0x18,%eax
  416bdf:	85 c0                	test   %eax,%eax
  416be1:	75 10                	jne    416bf3 <separatetobefnz+0x55>
  416be3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  416be7:	75 0a                	jne    416bf3 <separatetobefnz+0x55>
  416be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416bed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416bf1:	eb 52                	jmp    416c45 <separatetobefnz+0xa7>
  416bf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416bf7:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
  416bfe:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  416c02:	75 12                	jne    416c16 <separatetobefnz+0x78>
  416c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c08:	48 8b 10             	mov    (%rax),%rdx
  416c0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416c0f:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  416c16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c1a:	48 8b 10             	mov    (%rax),%rdx
  416c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416c21:	48 89 10             	mov    %rdx,(%rax)
  416c24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416c28:	48 8b 10             	mov    (%rax),%rdx
  416c2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c2f:	48 89 10             	mov    %rdx,(%rax)
  416c32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416c36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  416c3a:	48 89 10             	mov    %rdx,(%rax)
  416c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c41:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416c49:	48 8b 00             	mov    (%rax),%rax
  416c4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416c50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416c54:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  416c5b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  416c5f:	0f 85 6c ff ff ff    	jne    416bd1 <separatetobefnz+0x33>
  416c65:	90                   	nop
  416c66:	c9                   	leaveq 
  416c67:	c3                   	retq   

0000000000416c68 <checkpointer>:
  416c68:	55                   	push   %rbp
  416c69:	48 89 e5             	mov    %rsp,%rbp
  416c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416c70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416c78:	48 8b 00             	mov    (%rax),%rax
  416c7b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  416c7f:	75 0e                	jne    416c8f <checkpointer+0x27>
  416c81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416c85:	48 8b 10             	mov    (%rax),%rdx
  416c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416c8c:	48 89 10             	mov    %rdx,(%rax)
  416c8f:	90                   	nop
  416c90:	5d                   	pop    %rbp
  416c91:	c3                   	retq   

0000000000416c92 <correctpointers>:
  416c92:	55                   	push   %rbp
  416c93:	48 89 e5             	mov    %rsp,%rbp
  416c96:	48 83 ec 10          	sub    $0x10,%rsp
  416c9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416c9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416ca6:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
  416cad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416cb1:	48 89 c6             	mov    %rax,%rsi
  416cb4:	48 89 d7             	mov    %rdx,%rdi
  416cb7:	e8 ac ff ff ff       	callq  416c68 <checkpointer>
  416cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416cc0:	48 8d 90 c8 00 00 00 	lea    0xc8(%rax),%rdx
  416cc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416ccb:	48 89 c6             	mov    %rax,%rsi
  416cce:	48 89 d7             	mov    %rdx,%rdi
  416cd1:	e8 92 ff ff ff       	callq  416c68 <checkpointer>
  416cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416cda:	48 8d 90 d0 00 00 00 	lea    0xd0(%rax),%rdx
  416ce1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416ce5:	48 89 c6             	mov    %rax,%rsi
  416ce8:	48 89 d7             	mov    %rdx,%rdi
  416ceb:	e8 78 ff ff ff       	callq  416c68 <checkpointer>
  416cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416cf4:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
  416cfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416cff:	48 89 c6             	mov    %rax,%rsi
  416d02:	48 89 d7             	mov    %rdx,%rdi
  416d05:	e8 5e ff ff ff       	callq  416c68 <checkpointer>
  416d0a:	90                   	nop
  416d0b:	c9                   	leaveq 
  416d0c:	c3                   	retq   

0000000000416d0d <luaC_checkfinalizer>:
  416d0d:	55                   	push   %rbp
  416d0e:	48 89 e5             	mov    %rsp,%rbp
  416d11:	48 83 ec 30          	sub    $0x30,%rsp
  416d15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416d19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416d1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416d21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416d25:	48 8b 40 18          	mov    0x18(%rax),%rax
  416d29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  416d2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416d31:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416d35:	0f b6 c0             	movzbl %al,%eax
  416d38:	83 e0 40             	and    $0x40,%eax
  416d3b:	85 c0                	test   %eax,%eax
  416d3d:	0f 85 4a 01 00 00    	jne    416e8d <luaC_checkfinalizer+0x180>
  416d43:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  416d48:	0f 84 3f 01 00 00    	je     416e8d <luaC_checkfinalizer+0x180>
  416d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416d52:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  416d56:	0f b6 c0             	movzbl %al,%eax
  416d59:	83 e0 04             	and    $0x4,%eax
  416d5c:	85 c0                	test   %eax,%eax
  416d5e:	0f 85 29 01 00 00    	jne    416e8d <luaC_checkfinalizer+0x180>
  416d64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416d68:	48 8b 90 28 01 00 00 	mov    0x128(%rax),%rdx
  416d6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416d73:	be 02 00 00 00       	mov    $0x2,%esi
  416d78:	48 89 c7             	mov    %rax,%rdi
  416d7b:	e8 57 80 01 00       	callq  42edd7 <luaT_gettm>
  416d80:	48 85 c0             	test   %rax,%rax
  416d83:	0f 84 04 01 00 00    	je     416e8d <luaC_checkfinalizer+0x180>
  416d89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416d8d:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  416d91:	0f b6 c0             	movzbl %al,%eax
  416d94:	83 e0 04             	and    $0x4,%eax
  416d97:	85 c0                	test   %eax,%eax
  416d99:	0f 85 ee 00 00 00    	jne    416e8d <luaC_checkfinalizer+0x180>
  416d9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416da3:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  416da7:	3c 02                	cmp    $0x2,%al
  416da9:	76 64                	jbe    416e0f <luaC_checkfinalizer+0x102>
  416dab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416daf:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  416db3:	3c 06                	cmp    $0x6,%al
  416db5:	77 58                	ja     416e0f <luaC_checkfinalizer+0x102>
  416db7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416dbb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416dbf:	83 e0 c7             	and    $0xffffffc7,%eax
  416dc2:	89 c2                	mov    %eax,%edx
  416dc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416dc8:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  416dcc:	83 e0 18             	and    $0x18,%eax
  416dcf:	09 d0                	or     %edx,%eax
  416dd1:	89 c2                	mov    %eax,%edx
  416dd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416dd7:	88 50 09             	mov    %dl,0x9(%rax)
  416dda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416dde:	48 8b 50 78          	mov    0x78(%rax),%rdx
  416de2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416de6:	48 39 c2             	cmp    %rax,%rdx
  416de9:	75 37                	jne    416e22 <luaC_checkfinalizer+0x115>
  416deb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416def:	48 8b 50 78          	mov    0x78(%rax),%rdx
  416df3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416df7:	48 89 d6             	mov    %rdx,%rsi
  416dfa:	48 89 c7             	mov    %rax,%rdi
  416dfd:	e8 41 f9 ff ff       	callq  416743 <sweeptolive>
  416e02:	48 89 c2             	mov    %rax,%rdx
  416e05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416e09:	48 89 50 78          	mov    %rdx,0x78(%rax)
  416e0d:	eb 13                	jmp    416e22 <luaC_checkfinalizer+0x115>
  416e0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416e13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416e17:	48 89 d6             	mov    %rdx,%rsi
  416e1a:	48 89 c7             	mov    %rax,%rdi
  416e1d:	e8 70 fe ff ff       	callq  416c92 <correctpointers>
  416e22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416e26:	48 83 c0 70          	add    $0x70,%rax
  416e2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416e2e:	eb 0b                	jmp    416e3b <luaC_checkfinalizer+0x12e>
  416e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416e34:	48 8b 00             	mov    (%rax),%rax
  416e37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416e3f:	48 8b 00             	mov    (%rax),%rax
  416e42:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  416e46:	75 e8                	jne    416e30 <luaC_checkfinalizer+0x123>
  416e48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e4c:	48 8b 10             	mov    (%rax),%rdx
  416e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416e53:	48 89 10             	mov    %rdx,(%rax)
  416e56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416e5a:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
  416e61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e65:	48 89 10             	mov    %rdx,(%rax)
  416e68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416e6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416e70:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
  416e77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e7b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416e7f:	83 c8 40             	or     $0x40,%eax
  416e82:	89 c2                	mov    %eax,%edx
  416e84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e88:	88 50 09             	mov    %dl,0x9(%rax)
  416e8b:	eb 01                	jmp    416e8e <luaC_checkfinalizer+0x181>
  416e8d:	90                   	nop
  416e8e:	c9                   	leaveq 
  416e8f:	c3                   	retq   

0000000000416e90 <setpause>:
  416e90:	55                   	push   %rbp
  416e91:	48 89 e5             	mov    %rsp,%rbp
  416e94:	48 83 ec 30          	sub    $0x30,%rsp
  416e98:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  416e9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416ea0:	0f b6 40 6c          	movzbl 0x6c(%rax),%eax
  416ea4:	0f b6 c0             	movzbl %al,%eax
  416ea7:	c1 e0 02             	shl    $0x2,%eax
  416eaa:	89 45 f4             	mov    %eax,-0xc(%rbp)
  416ead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416eb1:	48 8b 40 20          	mov    0x20(%rax),%rax
  416eb5:	48 c1 e8 02          	shr    $0x2,%rax
  416eb9:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  416ec0:	c2 f5 28 
  416ec3:	48 f7 e2             	mul    %rdx
  416ec6:	48 89 d0             	mov    %rdx,%rax
  416ec9:	48 c1 e8 02          	shr    $0x2,%rax
  416ecd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416ed1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  416ed4:	48 63 c8             	movslq %eax,%rcx
  416ed7:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  416ede:	ff ff 7f 
  416ee1:	48 99                	cqto   
  416ee3:	48 f7 7d e8          	idivq  -0x18(%rbp)
  416ee7:	48 39 c1             	cmp    %rax,%rcx
  416eea:	7d 0c                	jge    416ef8 <setpause+0x68>
  416eec:	8b 45 f4             	mov    -0xc(%rbp),%eax
  416eef:	48 98                	cltq   
  416ef1:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
  416ef6:	eb 0a                	jmp    416f02 <setpause+0x72>
  416ef8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  416eff:	ff ff 7f 
  416f02:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  416f06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f0a:	48 8b 50 10          	mov    0x10(%rax),%rdx
  416f0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f12:	48 8b 40 18          	mov    0x18(%rax),%rax
  416f16:	48 01 d0             	add    %rdx,%rax
  416f19:	48 89 c2             	mov    %rax,%rdx
  416f1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416f20:	48 29 c2             	sub    %rax,%rdx
  416f23:	48 89 d0             	mov    %rdx,%rax
  416f26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416f2a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  416f2f:	7e 08                	jle    416f39 <setpause+0xa9>
  416f31:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  416f38:	00 
  416f39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  416f3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f41:	48 89 d6             	mov    %rdx,%rsi
  416f44:	48 89 c7             	mov    %rax,%rdi
  416f47:	e8 ea e9 00 00       	callq  425936 <luaE_setdebt>
  416f4c:	90                   	nop
  416f4d:	c9                   	leaveq 
  416f4e:	c3                   	retq   

0000000000416f4f <sweep2old>:
  416f4f:	55                   	push   %rbp
  416f50:	48 89 e5             	mov    %rsp,%rbp
  416f53:	48 83 ec 30          	sub    $0x30,%rsp
  416f57:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  416f5b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  416f5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f63:	48 8b 40 18          	mov    0x18(%rax),%rax
  416f67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416f6b:	e9 da 00 00 00       	jmpq   41704a <sweep2old+0xfb>
  416f70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416f74:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416f78:	0f b6 c0             	movzbl %al,%eax
  416f7b:	83 e0 18             	and    $0x18,%eax
  416f7e:	85 c0                	test   %eax,%eax
  416f80:	74 26                	je     416fa8 <sweep2old+0x59>
  416f82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416f86:	48 8b 10             	mov    (%rax),%rdx
  416f89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416f8d:	48 89 10             	mov    %rdx,(%rax)
  416f90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416f94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f98:	48 89 d6             	mov    %rdx,%rsi
  416f9b:	48 89 c7             	mov    %rax,%rdi
  416f9e:	e8 f4 f4 ff ff       	callq  416497 <freeobj>
  416fa3:	e9 a2 00 00 00       	jmpq   41704a <sweep2old+0xfb>
  416fa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416fac:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  416fb0:	83 e0 f8             	and    $0xfffffff8,%eax
  416fb3:	83 c8 04             	or     $0x4,%eax
  416fb6:	89 c2                	mov    %eax,%edx
  416fb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416fbc:	88 50 09             	mov    %dl,0x9(%rax)
  416fbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416fc3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416fc7:	3c 08                	cmp    $0x8,%al
  416fc9:	75 2c                	jne    416ff7 <sweep2old+0xa8>
  416fcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416fcf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416fd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416fd7:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
  416fde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416fe2:	48 8d 48 48          	lea    0x48(%rax),%rcx
  416fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416fea:	48 89 ce             	mov    %rcx,%rsi
  416fed:	48 89 c7             	mov    %rax,%rdi
  416ff0:	e8 88 d9 ff ff       	callq  41497d <linkgclist_>
  416ff5:	eb 4b                	jmp    417042 <sweep2old+0xf3>
  416ff7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416ffb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  416fff:	3c 09                	cmp    $0x9,%al
  417001:	75 2b                	jne    41702e <sweep2old+0xdf>
  417003:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417007:	48 8b 40 10          	mov    0x10(%rax),%rax
  41700b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41700f:	48 83 c2 18          	add    $0x18,%rdx
  417013:	48 39 d0             	cmp    %rdx,%rax
  417016:	74 16                	je     41702e <sweep2old+0xdf>
  417018:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41701c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417020:	83 e0 c7             	and    $0xffffffc7,%eax
  417023:	89 c2                	mov    %eax,%edx
  417025:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417029:	88 50 09             	mov    %dl,0x9(%rax)
  41702c:	eb 14                	jmp    417042 <sweep2old+0xf3>
  41702e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417032:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417036:	83 c8 20             	or     $0x20,%eax
  417039:	89 c2                	mov    %eax,%edx
  41703b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41703f:	88 50 09             	mov    %dl,0x9(%rax)
  417042:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417046:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41704a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41704e:	48 8b 00             	mov    (%rax),%rax
  417051:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  417055:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41705a:	0f 85 10 ff ff ff    	jne    416f70 <sweep2old+0x21>
  417060:	90                   	nop
  417061:	c9                   	leaveq 
  417062:	c3                   	retq   

0000000000417063 <sweepgen>:
  417063:	55                   	push   %rbp
  417064:	48 89 e5             	mov    %rsp,%rbp
  417067:	48 83 ec 50          	sub    $0x50,%rsp
  41706b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41706f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  417073:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  417077:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  41707b:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  41707f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417083:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  417087:	0f b6 c0             	movzbl %al,%eax
  41708a:	83 e0 18             	and    $0x18,%eax
  41708d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  417090:	e9 d4 00 00 00       	jmpq   417169 <sweepgen+0x106>
  417095:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417099:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41709d:	0f b6 c0             	movzbl %al,%eax
  4170a0:	83 e0 18             	and    $0x18,%eax
  4170a3:	85 c0                	test   %eax,%eax
  4170a5:	74 26                	je     4170cd <sweepgen+0x6a>
  4170a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4170ab:	48 8b 10             	mov    (%rax),%rdx
  4170ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4170b2:	48 89 10             	mov    %rdx,(%rax)
  4170b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4170b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4170bd:	48 89 d6             	mov    %rdx,%rsi
  4170c0:	48 89 c7             	mov    %rax,%rdi
  4170c3:	e8 cf f3 ff ff       	callq  416497 <freeobj>
  4170c8:	e9 9c 00 00 00       	jmpq   417169 <sweepgen+0x106>
  4170cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4170d1:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4170d5:	0f b6 c0             	movzbl %al,%eax
  4170d8:	83 e0 07             	and    $0x7,%eax
  4170db:	85 c0                	test   %eax,%eax
  4170dd:	75 29                	jne    417108 <sweepgen+0xa5>
  4170df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4170e3:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4170e7:	0f b6 c0             	movzbl %al,%eax
  4170ea:	83 e0 c0             	and    $0xffffffc0,%eax
  4170ed:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4170f0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4170f3:	83 c8 01             	or     $0x1,%eax
  4170f6:	89 c2                	mov    %eax,%edx
  4170f8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4170fb:	09 d0                	or     %edx,%eax
  4170fd:	89 c2                	mov    %eax,%edx
  4170ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417103:	88 50 09             	mov    %dl,0x9(%rax)
  417106:	eb 59                	jmp    417161 <sweepgen+0xfe>
  417108:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41710c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417110:	83 e0 f8             	and    $0xfffffff8,%eax
  417113:	89 c2                	mov    %eax,%edx
  417115:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417119:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41711d:	0f b6 c0             	movzbl %al,%eax
  417120:	83 e0 07             	and    $0x7,%eax
  417123:	48 98                	cltq   
  417125:	0f b6 80 b8 ee 43 00 	movzbl 0x43eeb8(%rax),%eax
  41712c:	09 d0                	or     %edx,%eax
  41712e:	89 c2                	mov    %eax,%edx
  417130:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417134:	88 50 09             	mov    %dl,0x9(%rax)
  417137:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41713b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41713f:	0f b6 c0             	movzbl %al,%eax
  417142:	83 e0 07             	and    $0x7,%eax
  417145:	83 f8 03             	cmp    $0x3,%eax
  417148:	75 17                	jne    417161 <sweepgen+0xfe>
  41714a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41714e:	48 8b 00             	mov    (%rax),%rax
  417151:	48 85 c0             	test   %rax,%rax
  417154:	75 0b                	jne    417161 <sweepgen+0xfe>
  417156:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41715a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41715e:	48 89 10             	mov    %rdx,(%rax)
  417161:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417165:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  417169:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41716d:	48 8b 00             	mov    (%rax),%rax
  417170:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  417174:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417178:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  41717c:	0f 85 13 ff ff ff    	jne    417095 <sweepgen+0x32>
  417182:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  417186:	c9                   	leaveq 
  417187:	c3                   	retq   

0000000000417188 <whitelist>:
  417188:	55                   	push   %rbp
  417189:	48 89 e5             	mov    %rsp,%rbp
  41718c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417190:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417194:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417198:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  41719c:	0f b6 c0             	movzbl %al,%eax
  41719f:	83 e0 18             	and    $0x18,%eax
  4171a2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4171a5:	eb 26                	jmp    4171cd <whitelist+0x45>
  4171a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4171ab:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4171af:	83 e0 c0             	and    $0xffffffc0,%eax
  4171b2:	89 c2                	mov    %eax,%edx
  4171b4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4171b7:	09 d0                	or     %edx,%eax
  4171b9:	89 c2                	mov    %eax,%edx
  4171bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4171bf:	88 50 09             	mov    %dl,0x9(%rax)
  4171c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4171c6:	48 8b 00             	mov    (%rax),%rax
  4171c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4171cd:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4171d2:	75 d3                	jne    4171a7 <whitelist+0x1f>
  4171d4:	90                   	nop
  4171d5:	5d                   	pop    %rbp
  4171d6:	c3                   	retq   

00000000004171d7 <correctgraylist>:
  4171d7:	55                   	push   %rbp
  4171d8:	48 89 e5             	mov    %rsp,%rbp
  4171db:	48 83 ec 18          	sub    $0x18,%rsp
  4171df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4171e3:	e9 c7 00 00 00       	jmpq   4172af <correctgraylist+0xd8>
  4171e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4171ec:	48 89 c7             	mov    %rax,%rdi
  4171ef:	e8 17 d7 ff ff       	callq  41490b <getgclist>
  4171f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4171f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4171fc:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417200:	0f b6 c0             	movzbl %al,%eax
  417203:	83 e0 18             	and    $0x18,%eax
  417206:	85 c0                	test   %eax,%eax
  417208:	0f 85 86 00 00 00    	jne    417294 <correctgraylist+0xbd>
  41720e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417212:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417216:	0f b6 c0             	movzbl %al,%eax
  417219:	83 e0 07             	and    $0x7,%eax
  41721c:	83 f8 05             	cmp    $0x5,%eax
  41721f:	75 2a                	jne    41724b <correctgraylist+0x74>
  417221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417225:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417229:	83 c8 20             	or     $0x20,%eax
  41722c:	89 c2                	mov    %eax,%edx
  41722e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417232:	88 50 09             	mov    %dl,0x9(%rax)
  417235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417239:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41723d:	83 f0 03             	xor    $0x3,%eax
  417240:	89 c2                	mov    %eax,%edx
  417242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417246:	88 50 09             	mov    %dl,0x9(%rax)
  417249:	eb 5b                	jmp    4172a6 <correctgraylist+0xcf>
  41724b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41724f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  417253:	3c 08                	cmp    $0x8,%al
  417255:	74 4e                	je     4172a5 <correctgraylist+0xce>
  417257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41725b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  41725f:	0f b6 c0             	movzbl %al,%eax
  417262:	83 e0 07             	and    $0x7,%eax
  417265:	83 f8 06             	cmp    $0x6,%eax
  417268:	75 14                	jne    41727e <correctgraylist+0xa7>
  41726a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41726e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417272:	83 f0 02             	xor    $0x2,%eax
  417275:	89 c2                	mov    %eax,%edx
  417277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41727b:	88 50 09             	mov    %dl,0x9(%rax)
  41727e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417282:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417286:	83 c8 20             	or     $0x20,%eax
  417289:	89 c2                	mov    %eax,%edx
  41728b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41728f:	88 50 09             	mov    %dl,0x9(%rax)
  417292:	eb 01                	jmp    417295 <correctgraylist+0xbe>
  417294:	90                   	nop
  417295:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417299:	48 8b 10             	mov    (%rax),%rdx
  41729c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4172a0:	48 89 10             	mov    %rdx,(%rax)
  4172a3:	eb 0a                	jmp    4172af <correctgraylist+0xd8>
  4172a5:	90                   	nop
  4172a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4172aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4172ae:	90                   	nop
  4172af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4172b3:	48 8b 00             	mov    (%rax),%rax
  4172b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4172ba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4172bf:	0f 85 23 ff ff ff    	jne    4171e8 <correctgraylist+0x11>
  4172c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4172c9:	c9                   	leaveq 
  4172ca:	c3                   	retq   

00000000004172cb <correctgraylists>:
  4172cb:	55                   	push   %rbp
  4172cc:	48 89 e5             	mov    %rsp,%rbp
  4172cf:	48 83 ec 18          	sub    $0x18,%rsp
  4172d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4172d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4172db:	48 05 90 00 00 00    	add    $0x90,%rax
  4172e1:	48 89 c7             	mov    %rax,%rdi
  4172e4:	e8 ee fe ff ff       	callq  4171d7 <correctgraylist>
  4172e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4172ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4172f1:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
  4172f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172fc:	48 89 10             	mov    %rdx,(%rax)
  4172ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417303:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
  41730a:	00 00 00 00 
  41730e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417312:	48 89 c7             	mov    %rax,%rdi
  417315:	e8 bd fe ff ff       	callq  4171d7 <correctgraylist>
  41731a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41731e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417322:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
  417329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41732d:	48 89 10             	mov    %rdx,(%rax)
  417330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417334:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
  41733b:	00 00 00 00 
  41733f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417343:	48 89 c7             	mov    %rax,%rdi
  417346:	e8 8c fe ff ff       	callq  4171d7 <correctgraylist>
  41734b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41734f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417353:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
  41735a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41735e:	48 89 10             	mov    %rdx,(%rax)
  417361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417365:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
  41736c:	00 00 00 00 
  417370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417374:	48 89 c7             	mov    %rax,%rdi
  417377:	e8 5b fe ff ff       	callq  4171d7 <correctgraylist>
  41737c:	90                   	nop
  41737d:	c9                   	leaveq 
  41737e:	c3                   	retq   

000000000041737f <markold>:
  41737f:	55                   	push   %rbp
  417380:	48 89 e5             	mov    %rsp,%rbp
  417383:	48 83 ec 30          	sub    $0x30,%rsp
  417387:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41738b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41738f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  417393:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417397:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41739b:	eb 57                	jmp    4173f4 <markold+0x75>
  41739d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173a1:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4173a5:	0f b6 c0             	movzbl %al,%eax
  4173a8:	83 e0 07             	and    $0x7,%eax
  4173ab:	83 f8 03             	cmp    $0x3,%eax
  4173ae:	75 39                	jne    4173e9 <markold+0x6a>
  4173b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173b4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4173b8:	83 f0 07             	xor    $0x7,%eax
  4173bb:	89 c2                	mov    %eax,%edx
  4173bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173c1:	88 50 09             	mov    %dl,0x9(%rax)
  4173c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173c8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4173cc:	0f b6 c0             	movzbl %al,%eax
  4173cf:	83 e0 20             	and    $0x20,%eax
  4173d2:	85 c0                	test   %eax,%eax
  4173d4:	74 13                	je     4173e9 <markold+0x6a>
  4173d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4173da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4173de:	48 89 d6             	mov    %rdx,%rsi
  4173e1:	48 89 c7             	mov    %rax,%rdi
  4173e4:	e8 da d8 ff ff       	callq  414cc3 <reallymarkobject>
  4173e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173ed:	48 8b 00             	mov    (%rax),%rax
  4173f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4173f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173f8:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4173fc:	75 9f                	jne    41739d <markold+0x1e>
  4173fe:	90                   	nop
  4173ff:	c9                   	leaveq 
  417400:	c3                   	retq   

0000000000417401 <finishgencycle>:
  417401:	55                   	push   %rbp
  417402:	48 89 e5             	mov    %rsp,%rbp
  417405:	48 83 ec 10          	sub    $0x10,%rsp
  417409:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41740d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417411:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417415:	48 89 c7             	mov    %rax,%rdi
  417418:	e8 ae fe ff ff       	callq  4172cb <correctgraylists>
  41741d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  417421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417425:	48 89 d6             	mov    %rdx,%rsi
  417428:	48 89 c7             	mov    %rax,%rdi
  41742b:	e8 59 f3 ff ff       	callq  416789 <checkSizes>
  417430:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417434:	c6 40 65 00          	movb   $0x0,0x65(%rax)
  417438:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41743c:	0f b6 40 6b          	movzbl 0x6b(%rax),%eax
  417440:	84 c0                	test   %al,%al
  417442:	75 0c                	jne    417450 <finishgencycle+0x4f>
  417444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417448:	48 89 c7             	mov    %rax,%rdi
  41744b:	e8 ee f6 ff ff       	callq  416b3e <callallpendingfinalizers>
  417450:	90                   	nop
  417451:	c9                   	leaveq 
  417452:	c3                   	retq   

0000000000417453 <youngcollection>:
  417453:	55                   	push   %rbp
  417454:	48 89 e5             	mov    %rsp,%rbp
  417457:	48 83 ec 20          	sub    $0x20,%rsp
  41745b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41745f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417463:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417467:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  41746e:	48 85 c0             	test   %rax,%rax
  417471:	74 34                	je     4174a7 <youngcollection+0x54>
  417473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417477:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
  41747e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417482:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
  417489:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41748d:	48 89 ce             	mov    %rcx,%rsi
  417490:	48 89 c7             	mov    %rax,%rdi
  417493:	e8 e7 fe ff ff       	callq  41737f <markold>
  417498:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41749c:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
  4174a3:	00 00 00 00 
  4174a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174ab:	48 8b 90 f0 00 00 00 	mov    0xf0(%rax),%rdx
  4174b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174b6:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
  4174bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174c1:	48 89 ce             	mov    %rcx,%rsi
  4174c4:	48 89 c7             	mov    %rax,%rdi
  4174c7:	e8 b3 fe ff ff       	callq  41737f <markold>
  4174cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174d0:	48 8b 88 b0 00 00 00 	mov    0xb0(%rax),%rcx
  4174d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174db:	ba 00 00 00 00       	mov    $0x0,%edx
  4174e0:	48 89 ce             	mov    %rcx,%rsi
  4174e3:	48 89 c7             	mov    %rax,%rdi
  4174e6:	e8 94 fe ff ff       	callq  41737f <markold>
  4174eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4174ef:	48 89 c7             	mov    %rax,%rdi
  4174f2:	e8 56 08 00 00       	callq  417d4d <atomic>
  4174f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4174fb:	c6 40 65 03          	movb   $0x3,0x65(%rax)
  4174ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417503:	48 8d 88 d8 00 00 00 	lea    0xd8(%rax),%rcx
  41750a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41750e:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx
  417515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417519:	48 8d 78 70          	lea    0x70(%rax),%rdi
  41751d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  417521:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417525:	49 89 c8             	mov    %rcx,%r8
  417528:	48 89 d1             	mov    %rdx,%rcx
  41752b:	48 89 fa             	mov    %rdi,%rdx
  41752e:	48 89 c7             	mov    %rax,%rdi
  417531:	e8 2d fb ff ff       	callq  417063 <sweepgen>
  417536:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41753a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41753e:	48 8d b8 d8 00 00 00 	lea    0xd8(%rax),%rdi
  417545:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417549:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
  417550:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  417554:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  417558:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41755c:	49 89 f8             	mov    %rdi,%r8
  41755f:	48 89 c7             	mov    %rax,%rdi
  417562:	e8 fc fa ff ff       	callq  417063 <sweepgen>
  417567:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41756b:	48 8b 90 c8 00 00 00 	mov    0xc8(%rax),%rdx
  417572:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417576:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  41757d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417581:	48 8b 10             	mov    (%rax),%rdx
  417584:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417588:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
  41758f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417593:	48 8b 50 70          	mov    0x70(%rax),%rdx
  417597:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41759b:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
  4175a2:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4175a9:	00 
  4175aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4175ae:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
  4175b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4175b9:	48 8d b8 80 00 00 00 	lea    0x80(%rax),%rdi
  4175c0:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  4175c4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4175c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4175cc:	49 89 c8             	mov    %rcx,%r8
  4175cf:	48 89 d1             	mov    %rdx,%rcx
  4175d2:	48 89 fa             	mov    %rdi,%rdx
  4175d5:	48 89 c7             	mov    %rax,%rdi
  4175d8:	e8 86 fa ff ff       	callq  417063 <sweepgen>
  4175dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4175e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4175e5:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
  4175ec:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  4175f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4175f4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4175f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4175fc:	49 89 f8             	mov    %rdi,%r8
  4175ff:	48 89 c7             	mov    %rax,%rdi
  417602:	e8 5c fa ff ff       	callq  417063 <sweepgen>
  417607:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41760b:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
  417612:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417616:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
  41761d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417621:	48 8b 10             	mov    (%rax),%rdx
  417624:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417628:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  41762f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417633:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
  41763a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41763e:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  417645:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417649:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
  417650:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  417654:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  417658:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41765c:	49 89 c8             	mov    %rcx,%r8
  41765f:	b9 00 00 00 00       	mov    $0x0,%ecx
  417664:	48 89 c7             	mov    %rax,%rdi
  417667:	e8 f7 f9 ff ff       	callq  417063 <sweepgen>
  41766c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  417670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417674:	48 89 d6             	mov    %rdx,%rsi
  417677:	48 89 c7             	mov    %rax,%rdi
  41767a:	e8 82 fd ff ff       	callq  417401 <finishgencycle>
  41767f:	90                   	nop
  417680:	c9                   	leaveq 
  417681:	c3                   	retq   

0000000000417682 <atomic2gen>:
  417682:	55                   	push   %rbp
  417683:	48 89 e5             	mov    %rsp,%rbp
  417686:	48 83 ec 10          	sub    $0x10,%rsp
  41768a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41768e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417692:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417696:	48 89 c7             	mov    %rax,%rdi
  417699:	e8 ae d9 ff ff       	callq  41504c <cleargraylists>
  41769e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176a2:	c6 40 65 03          	movb   $0x3,0x65(%rax)
  4176a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176aa:	48 8d 50 70          	lea    0x70(%rax),%rdx
  4176ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4176b2:	48 89 d6             	mov    %rdx,%rsi
  4176b5:	48 89 c7             	mov    %rax,%rdi
  4176b8:	e8 92 f8 ff ff       	callq  416f4f <sweep2old>
  4176bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176c1:	48 8b 50 70          	mov    0x70(%rax),%rdx
  4176c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176c9:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
  4176d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176d4:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx
  4176db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176df:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
  4176e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176ea:	48 8b 90 c8 00 00 00 	mov    0xc8(%rax),%rdx
  4176f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4176f5:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  4176fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417700:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
  417707:	00 00 00 00 
  41770b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41770f:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
  417716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41771a:	48 89 d6             	mov    %rdx,%rsi
  41771d:	48 89 c7             	mov    %rax,%rdi
  417720:	e8 2a f8 ff ff       	callq  416f4f <sweep2old>
  417725:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417729:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
  417730:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417734:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  41773b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41773f:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
  417746:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41774a:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  417751:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417755:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
  41775c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417760:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
  417767:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41776b:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
  417772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417776:	48 89 d6             	mov    %rdx,%rsi
  417779:	48 89 c7             	mov    %rax,%rdi
  41777c:	e8 ce f7 ff ff       	callq  416f4f <sweep2old>
  417781:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417785:	c6 40 66 01          	movb   $0x1,0x66(%rax)
  417789:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41778d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  417794:	00 
  417795:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417799:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41779d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4177a1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4177a5:	48 01 d0             	add    %rdx,%rax
  4177a8:	48 89 c2             	mov    %rax,%rdx
  4177ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4177af:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4177b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4177b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4177bb:	48 89 d6             	mov    %rdx,%rsi
  4177be:	48 89 c7             	mov    %rax,%rdi
  4177c1:	e8 3b fc ff ff       	callq  417401 <finishgencycle>
  4177c6:	90                   	nop
  4177c7:	c9                   	leaveq 
  4177c8:	c3                   	retq   

00000000004177c9 <setminordebt>:
  4177c9:	55                   	push   %rbp
  4177ca:	48 89 e5             	mov    %rsp,%rbp
  4177cd:	48 83 ec 10          	sub    $0x10,%rsp
  4177d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4177d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4177d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4177dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4177e1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4177e5:	48 01 d0             	add    %rdx,%rax
  4177e8:	48 c1 e8 02          	shr    $0x2,%rax
  4177ec:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  4177f3:	c2 f5 28 
  4177f6:	48 f7 e2             	mul    %rdx
  4177f9:	48 89 d0             	mov    %rdx,%rax
  4177fc:	48 c1 e8 02          	shr    $0x2,%rax
  417800:	48 89 c2             	mov    %rax,%rdx
  417803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417807:	0f b6 40 68          	movzbl 0x68(%rax),%eax
  41780b:	0f b6 c0             	movzbl %al,%eax
  41780e:	48 0f af c2          	imul   %rdx,%rax
  417812:	48 f7 d8             	neg    %rax
  417815:	48 89 c2             	mov    %rax,%rdx
  417818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41781c:	48 89 d6             	mov    %rdx,%rsi
  41781f:	48 89 c7             	mov    %rax,%rdi
  417822:	e8 0f e1 00 00       	callq  425936 <luaE_setdebt>
  417827:	90                   	nop
  417828:	c9                   	leaveq 
  417829:	c3                   	retq   

000000000041782a <entergen>:
  41782a:	55                   	push   %rbp
  41782b:	48 89 e5             	mov    %rsp,%rbp
  41782e:	48 83 ec 20          	sub    $0x20,%rsp
  417832:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417836:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41783a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41783e:	be 00 01 00 00       	mov    $0x100,%esi
  417843:	48 89 c7             	mov    %rax,%rdi
  417846:	e8 c6 09 00 00       	callq  418211 <luaC_runtilstate>
  41784b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41784f:	be 01 00 00 00       	mov    $0x1,%esi
  417854:	48 89 c7             	mov    %rax,%rdi
  417857:	e8 b5 09 00 00       	callq  418211 <luaC_runtilstate>
  41785c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417860:	48 89 c7             	mov    %rax,%rdi
  417863:	e8 e5 04 00 00       	callq  417d4d <atomic>
  417868:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41786c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  417870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417874:	48 89 d6             	mov    %rdx,%rsi
  417877:	48 89 c7             	mov    %rax,%rdi
  41787a:	e8 03 fe ff ff       	callq  417682 <atomic2gen>
  41787f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417883:	48 89 c7             	mov    %rax,%rdi
  417886:	e8 3e ff ff ff       	callq  4177c9 <setminordebt>
  41788b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41788f:	c9                   	leaveq 
  417890:	c3                   	retq   

0000000000417891 <enterinc>:
  417891:	55                   	push   %rbp
  417892:	48 89 e5             	mov    %rsp,%rbp
  417895:	48 83 ec 08          	sub    $0x8,%rsp
  417899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41789d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178a1:	48 8b 50 70          	mov    0x70(%rax),%rdx
  4178a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178a9:	48 89 d6             	mov    %rdx,%rsi
  4178ac:	48 89 c7             	mov    %rax,%rdi
  4178af:	e8 d4 f8 ff ff       	callq  417188 <whitelist>
  4178b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178b8:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
  4178bf:	00 00 00 00 
  4178c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178c7:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx
  4178ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178d2:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
  4178d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178dd:	48 8b 90 c8 00 00 00 	mov    0xc8(%rax),%rdx
  4178e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178e8:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  4178ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178f3:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
  4178fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4178fe:	48 89 d6             	mov    %rdx,%rsi
  417901:	48 89 c7             	mov    %rax,%rdi
  417904:	e8 7f f8 ff ff       	callq  417188 <whitelist>
  417909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41790d:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  417914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417918:	48 89 d6             	mov    %rdx,%rsi
  41791b:	48 89 c7             	mov    %rax,%rdi
  41791e:	e8 65 f8 ff ff       	callq  417188 <whitelist>
  417923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417927:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
  41792e:	00 00 00 00 
  417932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417936:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
  41793d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417941:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  417948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41794c:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
  417953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417957:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
  41795e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417962:	c6 40 65 08          	movb   $0x8,0x65(%rax)
  417966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41796a:	c6 40 66 00          	movb   $0x0,0x66(%rax)
  41796e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417972:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  417979:	00 
  41797a:	90                   	nop
  41797b:	c9                   	leaveq 
  41797c:	c3                   	retq   

000000000041797d <luaC_changemode>:
  41797d:	55                   	push   %rbp
  41797e:	48 89 e5             	mov    %rsp,%rbp
  417981:	48 83 ec 20          	sub    $0x20,%rsp
  417985:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417989:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41798c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417990:	48 8b 40 18          	mov    0x18(%rax),%rax
  417994:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41799c:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  4179a0:	0f b6 c0             	movzbl %al,%eax
  4179a3:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  4179a6:	74 27                	je     4179cf <luaC_changemode+0x52>
  4179a8:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  4179ac:	75 15                	jne    4179c3 <luaC_changemode+0x46>
  4179ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4179b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4179b6:	48 89 d6             	mov    %rdx,%rsi
  4179b9:	48 89 c7             	mov    %rax,%rdi
  4179bc:	e8 69 fe ff ff       	callq  41782a <entergen>
  4179c1:	eb 0c                	jmp    4179cf <luaC_changemode+0x52>
  4179c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4179c7:	48 89 c7             	mov    %rax,%rdi
  4179ca:	e8 c2 fe ff ff       	callq  417891 <enterinc>
  4179cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4179d3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  4179da:	00 
  4179db:	90                   	nop
  4179dc:	c9                   	leaveq 
  4179dd:	c3                   	retq   

00000000004179de <fullgen>:
  4179de:	55                   	push   %rbp
  4179df:	48 89 e5             	mov    %rsp,%rbp
  4179e2:	48 83 ec 10          	sub    $0x10,%rsp
  4179e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4179ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4179ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4179f2:	48 89 c7             	mov    %rax,%rdi
  4179f5:	e8 97 fe ff ff       	callq  417891 <enterinc>
  4179fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4179fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417a02:	48 89 d6             	mov    %rdx,%rsi
  417a05:	48 89 c7             	mov    %rax,%rdi
  417a08:	e8 1d fe ff ff       	callq  41782a <entergen>
  417a0d:	c9                   	leaveq 
  417a0e:	c3                   	retq   

0000000000417a0f <stepgenfull>:
  417a0f:	55                   	push   %rbp
  417a10:	48 89 e5             	mov    %rsp,%rbp
  417a13:	48 83 ec 20          	sub    $0x20,%rsp
  417a17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417a1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417a1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417a23:	48 8b 40 28          	mov    0x28(%rax),%rax
  417a27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417a2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417a2f:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  417a33:	3c 01                	cmp    $0x1,%al
  417a35:	75 0c                	jne    417a43 <stepgenfull+0x34>
  417a37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417a3b:	48 89 c7             	mov    %rax,%rdi
  417a3e:	e8 4e fe ff ff       	callq  417891 <enterinc>
  417a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417a47:	be 01 00 00 00       	mov    $0x1,%esi
  417a4c:	48 89 c7             	mov    %rax,%rdi
  417a4f:	e8 bd 07 00 00       	callq  418211 <luaC_runtilstate>
  417a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417a58:	48 89 c7             	mov    %rax,%rdi
  417a5b:	e8 ed 02 00 00       	callq  417d4d <atomic>
  417a60:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  417a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417a68:	48 c1 e8 03          	shr    $0x3,%rax
  417a6c:	48 89 c2             	mov    %rax,%rdx
  417a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417a73:	48 01 d0             	add    %rdx,%rax
  417a76:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  417a7a:	73 21                	jae    417a9d <stepgenfull+0x8e>
  417a7c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  417a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417a84:	48 89 d6             	mov    %rdx,%rsi
  417a87:	48 89 c7             	mov    %rax,%rdi
  417a8a:	e8 f3 fb ff ff       	callq  417682 <atomic2gen>
  417a8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417a93:	48 89 c7             	mov    %rax,%rdi
  417a96:	e8 2e fd ff ff       	callq  4177c9 <setminordebt>
  417a9b:	eb 53                	jmp    417af0 <stepgenfull+0xe1>
  417a9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417aa1:	48 8b 50 10          	mov    0x10(%rax),%rdx
  417aa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417aa9:	48 8b 40 18          	mov    0x18(%rax),%rax
  417aad:	48 01 d0             	add    %rdx,%rax
  417ab0:	48 89 c2             	mov    %rax,%rdx
  417ab3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417ab7:	48 89 50 20          	mov    %rdx,0x20(%rax)
  417abb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417abf:	48 89 c7             	mov    %rax,%rdi
  417ac2:	e8 63 01 00 00       	callq  417c2a <entersweep>
  417ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417acb:	be 00 01 00 00       	mov    $0x100,%esi
  417ad0:	48 89 c7             	mov    %rax,%rdi
  417ad3:	e8 39 07 00 00       	callq  418211 <luaC_runtilstate>
  417ad8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417adc:	48 89 c7             	mov    %rax,%rdi
  417adf:	e8 ac f3 ff ff       	callq  416e90 <setpause>
  417ae4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417ae8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  417aec:	48 89 50 28          	mov    %rdx,0x28(%rax)
  417af0:	90                   	nop
  417af1:	c9                   	leaveq 
  417af2:	c3                   	retq   

0000000000417af3 <genstep>:
  417af3:	55                   	push   %rbp
  417af4:	48 89 e5             	mov    %rsp,%rbp
  417af7:	48 83 ec 30          	sub    $0x30,%rsp
  417afb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  417aff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  417b03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b07:	48 8b 40 28          	mov    0x28(%rax),%rax
  417b0b:	48 85 c0             	test   %rax,%rax
  417b0e:	74 18                	je     417b28 <genstep+0x35>
  417b10:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  417b14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417b18:	48 89 d6             	mov    %rdx,%rsi
  417b1b:	48 89 c7             	mov    %rax,%rdi
  417b1e:	e8 ec fe ff ff       	callq  417a0f <stepgenfull>
  417b23:	e9 ff 00 00 00       	jmpq   417c27 <genstep+0x134>
  417b28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b2c:	48 8b 40 20          	mov    0x20(%rax),%rax
  417b30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417b38:	48 c1 e8 02          	shr    $0x2,%rax
  417b3c:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  417b43:	c2 f5 28 
  417b46:	48 f7 e2             	mul    %rdx
  417b49:	48 c1 ea 02          	shr    $0x2,%rdx
  417b4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b51:	0f b6 40 69          	movzbl 0x69(%rax),%eax
  417b55:	0f b6 c0             	movzbl %al,%eax
  417b58:	c1 e0 02             	shl    $0x2,%eax
  417b5b:	48 98                	cltq   
  417b5d:	48 0f af c2          	imul   %rdx,%rax
  417b61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  417b65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b69:	48 8b 40 18          	mov    0x18(%rax),%rax
  417b6d:	48 85 c0             	test   %rax,%rax
  417b70:	0f 8e 83 00 00 00    	jle    417bf9 <genstep+0x106>
  417b76:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b7a:	48 8b 50 10          	mov    0x10(%rax),%rdx
  417b7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b82:	48 8b 40 18          	mov    0x18(%rax),%rax
  417b86:	48 01 d0             	add    %rdx,%rax
  417b89:	48 89 c1             	mov    %rax,%rcx
  417b8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  417b90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417b94:	48 01 d0             	add    %rdx,%rax
  417b97:	48 39 c1             	cmp    %rax,%rcx
  417b9a:	76 5d                	jbe    417bf9 <genstep+0x106>
  417b9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  417ba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417ba4:	48 89 d6             	mov    %rdx,%rsi
  417ba7:	48 89 c7             	mov    %rax,%rdi
  417baa:	e8 2f fe ff ff       	callq  4179de <fullgen>
  417baf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  417bb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417bb7:	48 8b 50 10          	mov    0x10(%rax),%rdx
  417bbb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417bbf:	48 8b 40 18          	mov    0x18(%rax),%rax
  417bc3:	48 01 d0             	add    %rdx,%rax
  417bc6:	48 89 c1             	mov    %rax,%rcx
  417bc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417bcd:	48 d1 e8             	shr    %rax
  417bd0:	48 89 c2             	mov    %rax,%rdx
  417bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417bd7:	48 01 d0             	add    %rdx,%rax
  417bda:	48 39 c1             	cmp    %rax,%rcx
  417bdd:	72 47                	jb     417c26 <genstep+0x133>
  417bdf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417be3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  417be7:	48 89 50 28          	mov    %rdx,0x28(%rax)
  417beb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417bef:	48 89 c7             	mov    %rax,%rdi
  417bf2:	e8 99 f2 ff ff       	callq  416e90 <setpause>
  417bf7:	eb 2d                	jmp    417c26 <genstep+0x133>
  417bf9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  417bfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417c01:	48 89 d6             	mov    %rdx,%rsi
  417c04:	48 89 c7             	mov    %rax,%rdi
  417c07:	e8 47 f8 ff ff       	callq  417453 <youngcollection>
  417c0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417c10:	48 89 c7             	mov    %rax,%rdi
  417c13:	e8 b1 fb ff ff       	callq  4177c9 <setminordebt>
  417c18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417c1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  417c20:	48 89 50 20          	mov    %rdx,0x20(%rax)
  417c24:	eb 01                	jmp    417c27 <genstep+0x134>
  417c26:	90                   	nop
  417c27:	90                   	nop
  417c28:	c9                   	leaveq 
  417c29:	c3                   	retq   

0000000000417c2a <entersweep>:
  417c2a:	55                   	push   %rbp
  417c2b:	48 89 e5             	mov    %rsp,%rbp
  417c2e:	48 83 ec 20          	sub    $0x20,%rsp
  417c32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417c3a:	48 8b 40 18          	mov    0x18(%rax),%rax
  417c3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417c46:	c6 40 65 03          	movb   $0x3,0x65(%rax)
  417c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417c4e:	48 8d 50 70          	lea    0x70(%rax),%rdx
  417c52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417c56:	48 89 d6             	mov    %rdx,%rsi
  417c59:	48 89 c7             	mov    %rax,%rdi
  417c5c:	e8 e2 ea ff ff       	callq  416743 <sweeptolive>
  417c61:	48 89 c2             	mov    %rax,%rdx
  417c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417c68:	48 89 50 78          	mov    %rdx,0x78(%rax)
  417c6c:	90                   	nop
  417c6d:	c9                   	leaveq 
  417c6e:	c3                   	retq   

0000000000417c6f <deletelist>:
  417c6f:	55                   	push   %rbp
  417c70:	48 89 e5             	mov    %rsp,%rbp
  417c73:	48 83 ec 30          	sub    $0x30,%rsp
  417c77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417c7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417c7f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  417c83:	eb 26                	jmp    417cab <deletelist+0x3c>
  417c85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417c89:	48 8b 00             	mov    (%rax),%rax
  417c8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417c90:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  417c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417c98:	48 89 d6             	mov    %rdx,%rsi
  417c9b:	48 89 c7             	mov    %rax,%rdi
  417c9e:	e8 f4 e7 ff ff       	callq  416497 <freeobj>
  417ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ca7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  417cab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417caf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417cb3:	75 d0                	jne    417c85 <deletelist+0x16>
  417cb5:	90                   	nop
  417cb6:	c9                   	leaveq 
  417cb7:	c3                   	retq   

0000000000417cb8 <luaC_freeallobjects>:
  417cb8:	55                   	push   %rbp
  417cb9:	48 89 e5             	mov    %rsp,%rbp
  417cbc:	48 83 ec 20          	sub    $0x20,%rsp
  417cc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417cc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417cc8:	48 8b 40 18          	mov    0x18(%rax),%rax
  417ccc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417cd4:	c6 40 6a 04          	movb   $0x4,0x6a(%rax)
  417cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417cdc:	be 00 00 00 00       	mov    $0x0,%esi
  417ce1:	48 89 c7             	mov    %rax,%rdi
  417ce4:	e8 94 fc ff ff       	callq  41797d <luaC_changemode>
  417ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ced:	be 01 00 00 00       	mov    $0x1,%esi
  417cf2:	48 89 c7             	mov    %rax,%rdi
  417cf5:	e8 a4 ee ff ff       	callq  416b9e <separatetobefnz>
  417cfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417cfe:	48 89 c7             	mov    %rax,%rdi
  417d01:	e8 38 ee ff ff       	callq  416b3e <callallpendingfinalizers>
  417d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d0a:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  417d11:	48 89 c2             	mov    %rax,%rdx
  417d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d18:	48 8b 48 70          	mov    0x70(%rax),%rcx
  417d1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417d20:	48 89 ce             	mov    %rcx,%rsi
  417d23:	48 89 c7             	mov    %rax,%rdi
  417d26:	e8 44 ff ff ff       	callq  417c6f <deletelist>
  417d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d2f:	48 8b 88 b8 00 00 00 	mov    0xb8(%rax),%rcx
  417d36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417d3a:	ba 00 00 00 00       	mov    $0x0,%edx
  417d3f:	48 89 ce             	mov    %rcx,%rsi
  417d42:	48 89 c7             	mov    %rax,%rdi
  417d45:	e8 25 ff ff ff       	callq  417c6f <deletelist>
  417d4a:	90                   	nop
  417d4b:	c9                   	leaveq 
  417d4c:	c3                   	retq   

0000000000417d4d <atomic>:
  417d4d:	55                   	push   %rbp
  417d4e:	48 89 e5             	mov    %rsp,%rbp
  417d51:	48 83 ec 40          	sub    $0x40,%rsp
  417d55:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  417d59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  417d5d:	48 8b 40 18          	mov    0x18(%rax),%rax
  417d61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417d65:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  417d6c:	00 
  417d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d71:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
  417d78:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  417d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d80:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
  417d87:	00 00 00 00 
  417d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417d8f:	c6 40 65 02          	movb   $0x2,0x65(%rax)
  417d93:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  417d97:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417d9b:	0f b6 c0             	movzbl %al,%eax
  417d9e:	83 e0 18             	and    $0x18,%eax
  417da1:	85 c0                	test   %eax,%eax
  417da3:	74 13                	je     417db8 <atomic+0x6b>
  417da5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  417da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417dad:	48 89 d6             	mov    %rdx,%rsi
  417db0:	48 89 c7             	mov    %rax,%rdi
  417db3:	e8 0b cf ff ff       	callq  414cc3 <reallymarkobject>
  417db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417dbc:	0f b6 40 48          	movzbl 0x48(%rax),%eax
  417dc0:	0f b6 c0             	movzbl %al,%eax
  417dc3:	83 e0 40             	and    $0x40,%eax
  417dc6:	85 c0                	test   %eax,%eax
  417dc8:	74 2d                	je     417df7 <atomic+0xaa>
  417dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417dce:	48 8b 40 40          	mov    0x40(%rax),%rax
  417dd2:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  417dd6:	0f b6 c0             	movzbl %al,%eax
  417dd9:	83 e0 18             	and    $0x18,%eax
  417ddc:	85 c0                	test   %eax,%eax
  417dde:	74 17                	je     417df7 <atomic+0xaa>
  417de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417de4:	48 8b 50 40          	mov    0x40(%rax),%rdx
  417de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417dec:	48 89 d6             	mov    %rdx,%rsi
  417def:	48 89 c7             	mov    %rax,%rdi
  417df2:	e8 cc ce ff ff       	callq  414cc3 <reallymarkobject>
  417df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417dfb:	48 89 c7             	mov    %rax,%rdi
  417dfe:	e8 55 d0 ff ff       	callq  414e58 <markmt>
  417e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e07:	48 89 c7             	mov    %rax,%rdi
  417e0a:	e8 07 e3 ff ff       	callq  416116 <propagateall>
  417e0f:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e17:	48 89 c7             	mov    %rax,%rdi
  417e1a:	e8 1d d1 ff ff       	callq  414f3c <remarkupvals>
  417e1f:	48 98                	cltq   
  417e21:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e29:	48 89 c7             	mov    %rax,%rdi
  417e2c:	e8 e5 e2 ff ff       	callq  416116 <propagateall>
  417e31:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e39:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  417e3d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
  417e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e48:	48 89 c7             	mov    %rax,%rdi
  417e4b:	e8 c6 e2 ff ff       	callq  416116 <propagateall>
  417e50:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e58:	48 89 c7             	mov    %rax,%rdi
  417e5b:	e8 f2 e2 ff ff       	callq  416152 <convergeephemerons>
  417e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e64:	48 8b 88 98 00 00 00 	mov    0x98(%rax),%rcx
  417e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e6f:	ba 00 00 00 00       	mov    $0x0,%edx
  417e74:	48 89 ce             	mov    %rcx,%rsi
  417e77:	48 89 c7             	mov    %rax,%rdi
  417e7a:	e8 6e e4 ff ff       	callq  4162ed <clearbyvalues>
  417e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e83:	48 8b 88 a8 00 00 00 	mov    0xa8(%rax),%rcx
  417e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417e8e:	ba 00 00 00 00       	mov    $0x0,%edx
  417e93:	48 89 ce             	mov    %rcx,%rsi
  417e96:	48 89 c7             	mov    %rax,%rdi
  417e99:	e8 4f e4 ff ff       	callq  4162ed <clearbyvalues>
  417e9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ea2:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
  417ea9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  417ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417eb1:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  417eb8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  417ebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ec0:	be 00 00 00 00       	mov    $0x0,%esi
  417ec5:	48 89 c7             	mov    %rax,%rdi
  417ec8:	e8 d1 ec ff ff       	callq  416b9e <separatetobefnz>
  417ecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ed1:	48 89 c7             	mov    %rax,%rdi
  417ed4:	e8 fc cf ff ff       	callq  414ed5 <markbeingfnz>
  417ed9:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ee1:	48 89 c7             	mov    %rax,%rdi
  417ee4:	e8 2d e2 ff ff       	callq  416116 <propagateall>
  417ee9:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  417eed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417ef1:	48 89 c7             	mov    %rax,%rdi
  417ef4:	e8 59 e2 ff ff       	callq  416152 <convergeephemerons>
  417ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417efd:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
  417f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f08:	48 89 d6             	mov    %rdx,%rsi
  417f0b:	48 89 c7             	mov    %rax,%rdi
  417f0e:	e8 f7 e2 ff ff       	callq  41620a <clearbykeys>
  417f13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f17:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
  417f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f22:	48 89 d6             	mov    %rdx,%rsi
  417f25:	48 89 c7             	mov    %rax,%rdi
  417f28:	e8 dd e2 ff ff       	callq  41620a <clearbykeys>
  417f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f31:	48 8b 88 98 00 00 00 	mov    0x98(%rax),%rcx
  417f38:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  417f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f40:	48 89 ce             	mov    %rcx,%rsi
  417f43:	48 89 c7             	mov    %rax,%rdi
  417f46:	e8 a2 e3 ff ff       	callq  4162ed <clearbyvalues>
  417f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f4f:	48 8b 88 a8 00 00 00 	mov    0xa8(%rax),%rcx
  417f56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  417f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f5e:	48 89 ce             	mov    %rcx,%rsi
  417f61:	48 89 c7             	mov    %rax,%rdi
  417f64:	e8 84 e3 ff ff       	callq  4162ed <clearbyvalues>
  417f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f6d:	48 89 c7             	mov    %rax,%rdi
  417f70:	e8 b5 eb 00 00       	callq  426b2a <luaS_clearcache>
  417f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f79:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  417f7d:	83 f0 18             	xor    $0x18,%eax
  417f80:	89 c2                	mov    %eax,%edx
  417f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417f86:	88 50 64             	mov    %dl,0x64(%rax)
  417f89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417f8d:	c9                   	leaveq 
  417f8e:	c3                   	retq   

0000000000417f8f <sweepstep>:
  417f8f:	55                   	push   %rbp
  417f90:	48 89 e5             	mov    %rsp,%rbp
  417f93:	48 83 ec 30          	sub    $0x30,%rsp
  417f97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417f9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417f9f:	89 55 dc             	mov    %edx,-0x24(%rbp)
  417fa2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  417fa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417faa:	48 8b 40 78          	mov    0x78(%rax),%rax
  417fae:	48 85 c0             	test   %rax,%rax
  417fb1:	74 5b                	je     41800e <sweepstep+0x7f>
  417fb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417fb7:	48 8b 40 18          	mov    0x18(%rax),%rax
  417fbb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  417fbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417fc3:	48 8b 70 78          	mov    0x78(%rax),%rsi
  417fc7:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  417fcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417fcf:	48 89 d1             	mov    %rdx,%rcx
  417fd2:	ba 64 00 00 00       	mov    $0x64,%edx
  417fd7:	48 89 c7             	mov    %rax,%rdi
  417fda:	e8 71 e6 ff ff       	callq  416650 <sweeplist>
  417fdf:	48 89 c2             	mov    %rax,%rdx
  417fe2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417fe6:	48 89 50 78          	mov    %rdx,0x78(%rax)
  417fea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417fee:	48 8b 50 20          	mov    0x20(%rax),%rdx
  417ff2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417ff6:	48 8b 40 18          	mov    0x18(%rax),%rax
  417ffa:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  417ffe:	48 01 c2             	add    %rax,%rdx
  418001:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418005:	48 89 50 20          	mov    %rdx,0x20(%rax)
  418009:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41800c:	eb 1d                	jmp    41802b <sweepstep+0x9c>
  41800e:	8b 45 dc             	mov    -0x24(%rbp),%eax
  418011:	89 c2                	mov    %eax,%edx
  418013:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418017:	88 50 65             	mov    %dl,0x65(%rax)
  41801a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41801e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  418022:	48 89 50 78          	mov    %rdx,0x78(%rax)
  418026:	b8 00 00 00 00       	mov    $0x0,%eax
  41802b:	c9                   	leaveq 
  41802c:	c3                   	retq   

000000000041802d <singlestep>:
  41802d:	55                   	push   %rbp
  41802e:	48 89 e5             	mov    %rsp,%rbp
  418031:	48 83 ec 20          	sub    $0x20,%rsp
  418035:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418039:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41803d:	48 8b 40 18          	mov    0x18(%rax),%rax
  418041:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418045:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418049:	c6 40 67 01          	movb   $0x1,0x67(%rax)
  41804d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418051:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  418055:	0f b6 c0             	movzbl %al,%eax
  418058:	83 f8 08             	cmp    $0x8,%eax
  41805b:	0f 87 9b 01 00 00    	ja     4181fc <singlestep+0x1cf>
  418061:	89 c0                	mov    %eax,%eax
  418063:	48 8b 04 c5 70 ee 43 	mov    0x43ee70(,%rax,8),%rax
  41806a:	00 
  41806b:	ff e0                	jmpq   *%rax
  41806d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418071:	48 89 c7             	mov    %rax,%rdi
  418074:	e8 3e d0 ff ff       	callq  4150b7 <restartcollection>
  418079:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41807d:	c6 40 65 00          	movb   $0x0,0x65(%rax)
  418081:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
  418088:	00 
  418089:	e9 75 01 00 00       	jmpq   418203 <singlestep+0x1d6>
  41808e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418092:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  418099:	48 85 c0             	test   %rax,%rax
  41809c:	75 15                	jne    4180b3 <singlestep+0x86>
  41809e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4180a2:	c6 40 65 01          	movb   $0x1,0x65(%rax)
  4180a6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4180ad:	00 
  4180ae:	e9 50 01 00 00       	jmpq   418203 <singlestep+0x1d6>
  4180b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4180b7:	48 89 c7             	mov    %rax,%rdi
  4180ba:	e8 5c df ff ff       	callq  41601b <propagatemark>
  4180bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4180c3:	e9 3b 01 00 00       	jmpq   418203 <singlestep+0x1d6>
  4180c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4180cc:	48 89 c7             	mov    %rax,%rdi
  4180cf:	e8 79 fc ff ff       	callq  417d4d <atomic>
  4180d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4180d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4180dc:	48 89 c7             	mov    %rax,%rdi
  4180df:	e8 46 fb ff ff       	callq  417c2a <entersweep>
  4180e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4180e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4180ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4180f0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4180f4:	48 01 d0             	add    %rdx,%rax
  4180f7:	48 89 c2             	mov    %rax,%rdx
  4180fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4180fe:	48 89 50 20          	mov    %rdx,0x20(%rax)
  418102:	e9 fc 00 00 00       	jmpq   418203 <singlestep+0x1d6>
  418107:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41810b:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
  418112:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  418116:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41811a:	48 89 d1             	mov    %rdx,%rcx
  41811d:	ba 04 00 00 00       	mov    $0x4,%edx
  418122:	48 89 c7             	mov    %rax,%rdi
  418125:	e8 65 fe ff ff       	callq  417f8f <sweepstep>
  41812a:	48 98                	cltq   
  41812c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418130:	e9 ce 00 00 00       	jmpq   418203 <singlestep+0x1d6>
  418135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418139:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
  418140:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  418144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418148:	48 89 d1             	mov    %rdx,%rcx
  41814b:	ba 05 00 00 00       	mov    $0x5,%edx
  418150:	48 89 c7             	mov    %rax,%rdi
  418153:	e8 37 fe ff ff       	callq  417f8f <sweepstep>
  418158:	48 98                	cltq   
  41815a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41815e:	e9 a0 00 00 00       	jmpq   418203 <singlestep+0x1d6>
  418163:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  418167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41816b:	b9 00 00 00 00       	mov    $0x0,%ecx
  418170:	ba 06 00 00 00       	mov    $0x6,%edx
  418175:	48 89 c7             	mov    %rax,%rdi
  418178:	e8 12 fe ff ff       	callq  417f8f <sweepstep>
  41817d:	48 98                	cltq   
  41817f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418183:	eb 7e                	jmp    418203 <singlestep+0x1d6>
  418185:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  418189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41818d:	48 89 d6             	mov    %rdx,%rsi
  418190:	48 89 c7             	mov    %rax,%rdi
  418193:	e8 f1 e5 ff ff       	callq  416789 <checkSizes>
  418198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41819c:	c6 40 65 07          	movb   $0x7,0x65(%rax)
  4181a0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4181a7:	00 
  4181a8:	eb 59                	jmp    418203 <singlestep+0x1d6>
  4181aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4181ae:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  4181b5:	48 85 c0             	test   %rax,%rax
  4181b8:	74 30                	je     4181ea <singlestep+0x1bd>
  4181ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4181be:	0f b6 40 6b          	movzbl 0x6b(%rax),%eax
  4181c2:	84 c0                	test   %al,%al
  4181c4:	75 24                	jne    4181ea <singlestep+0x1bd>
  4181c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4181ca:	c6 40 67 00          	movb   $0x0,0x67(%rax)
  4181ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4181d2:	be 0a 00 00 00       	mov    $0xa,%esi
  4181d7:	48 89 c7             	mov    %rax,%rdi
  4181da:	e8 0e e9 ff ff       	callq  416aed <runafewfinalizers>
  4181df:	6b c0 32             	imul   $0x32,%eax,%eax
  4181e2:	48 98                	cltq   
  4181e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4181e8:	eb 19                	jmp    418203 <singlestep+0x1d6>
  4181ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4181ee:	c6 40 65 08          	movb   $0x8,0x65(%rax)
  4181f2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4181f9:	00 
  4181fa:	eb 07                	jmp    418203 <singlestep+0x1d6>
  4181fc:	b8 00 00 00 00       	mov    $0x0,%eax
  418201:	eb 0c                	jmp    41820f <singlestep+0x1e2>
  418203:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418207:	c6 40 67 00          	movb   $0x0,0x67(%rax)
  41820b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41820f:	c9                   	leaveq 
  418210:	c3                   	retq   

0000000000418211 <luaC_runtilstate>:
  418211:	55                   	push   %rbp
  418212:	48 89 e5             	mov    %rsp,%rbp
  418215:	48 83 ec 20          	sub    $0x20,%rsp
  418219:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41821d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  418220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418224:	48 8b 40 18          	mov    0x18(%rax),%rax
  418228:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41822c:	eb 0c                	jmp    41823a <luaC_runtilstate+0x29>
  41822e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418232:	48 89 c7             	mov    %rax,%rdi
  418235:	e8 f3 fd ff ff       	callq  41802d <singlestep>
  41823a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41823e:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  418242:	0f b6 c0             	movzbl %al,%eax
  418245:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  418248:	89 c1                	mov    %eax,%ecx
  41824a:	d3 fa                	sar    %cl,%edx
  41824c:	89 d0                	mov    %edx,%eax
  41824e:	83 e0 01             	and    $0x1,%eax
  418251:	85 c0                	test   %eax,%eax
  418253:	74 d9                	je     41822e <luaC_runtilstate+0x1d>
  418255:	90                   	nop
  418256:	c9                   	leaveq 
  418257:	c3                   	retq   

0000000000418258 <incstep>:
  418258:	55                   	push   %rbp
  418259:	48 89 e5             	mov    %rsp,%rbp
  41825c:	48 83 ec 30          	sub    $0x30,%rsp
  418260:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  418264:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  418268:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41826c:	0f b6 40 6d          	movzbl 0x6d(%rax),%eax
  418270:	0f b6 c0             	movzbl %al,%eax
  418273:	c1 e0 02             	shl    $0x2,%eax
  418276:	83 c8 01             	or     $0x1,%eax
  418279:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41827c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418280:	48 8b 40 18          	mov    0x18(%rax),%rax
  418284:	48 c1 e8 04          	shr    $0x4,%rax
  418288:	48 89 c2             	mov    %rax,%rdx
  41828b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41828e:	48 98                	cltq   
  418290:	48 0f af c2          	imul   %rdx,%rax
  418294:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418298:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41829c:	0f b6 40 6e          	movzbl 0x6e(%rax),%eax
  4182a0:	3c 3e                	cmp    $0x3e,%al
  4182a2:	77 2a                	ja     4182ce <incstep+0x76>
  4182a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4182a8:	0f b6 40 6e          	movzbl 0x6e(%rax),%eax
  4182ac:	0f b6 c0             	movzbl %al,%eax
  4182af:	ba 01 00 00 00       	mov    $0x1,%edx
  4182b4:	89 c1                	mov    %eax,%ecx
  4182b6:	48 d3 e2             	shl    %cl,%rdx
  4182b9:	48 89 d0             	mov    %rdx,%rax
  4182bc:	48 c1 e8 04          	shr    $0x4,%rax
  4182c0:	48 89 c2             	mov    %rax,%rdx
  4182c3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4182c6:	48 98                	cltq   
  4182c8:	48 0f af c2          	imul   %rdx,%rax
  4182cc:	eb 0a                	jmp    4182d8 <incstep+0x80>
  4182ce:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  4182d5:	ff ff 7f 
  4182d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4182dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4182e0:	48 89 c7             	mov    %rax,%rdi
  4182e3:	e8 45 fd ff ff       	callq  41802d <singlestep>
  4182e8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4182ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4182f0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  4182f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4182f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4182fc:	48 f7 d8             	neg    %rax
  4182ff:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  418303:	7e 0c                	jle    418311 <incstep+0xb9>
  418305:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418309:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  41830d:	3c 08                	cmp    $0x8,%al
  41830f:	75 cb                	jne    4182dc <incstep+0x84>
  418311:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418315:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  418319:	3c 08                	cmp    $0x8,%al
  41831b:	75 0e                	jne    41832b <incstep+0xd3>
  41831d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418321:	48 89 c7             	mov    %rax,%rdi
  418324:	e8 67 eb ff ff       	callq  416e90 <setpause>
  418329:	eb 2a                	jmp    418355 <incstep+0xfd>
  41832b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41832e:	48 63 c8             	movslq %eax,%rcx
  418331:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418335:	48 99                	cqto   
  418337:	48 f7 f9             	idiv   %rcx
  41833a:	48 c1 e0 04          	shl    $0x4,%rax
  41833e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418342:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418346:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41834a:	48 89 d6             	mov    %rdx,%rsi
  41834d:	48 89 c7             	mov    %rax,%rdi
  418350:	e8 e1 d5 00 00       	callq  425936 <luaE_setdebt>
  418355:	90                   	nop
  418356:	c9                   	leaveq 
  418357:	c3                   	retq   

0000000000418358 <luaC_step>:
  418358:	55                   	push   %rbp
  418359:	48 89 e5             	mov    %rsp,%rbp
  41835c:	48 83 ec 20          	sub    $0x20,%rsp
  418360:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418368:	48 8b 40 18          	mov    0x18(%rax),%rax
  41836c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418374:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
  418378:	84 c0                	test   %al,%al
  41837a:	74 15                	je     418391 <luaC_step+0x39>
  41837c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418380:	48 c7 c6 30 f8 ff ff 	mov    $0xfffffffffffff830,%rsi
  418387:	48 89 c7             	mov    %rax,%rdi
  41838a:	e8 a7 d5 00 00       	callq  425936 <luaE_setdebt>
  41838f:	eb 41                	jmp    4183d2 <luaC_step+0x7a>
  418391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418395:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  418399:	3c 01                	cmp    $0x1,%al
  41839b:	74 0d                	je     4183aa <luaC_step+0x52>
  41839d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4183a1:	48 8b 40 28          	mov    0x28(%rax),%rax
  4183a5:	48 85 c0             	test   %rax,%rax
  4183a8:	74 15                	je     4183bf <luaC_step+0x67>
  4183aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4183ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4183b2:	48 89 d6             	mov    %rdx,%rsi
  4183b5:	48 89 c7             	mov    %rax,%rdi
  4183b8:	e8 36 f7 ff ff       	callq  417af3 <genstep>
  4183bd:	eb 13                	jmp    4183d2 <luaC_step+0x7a>
  4183bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4183c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4183c7:	48 89 d6             	mov    %rdx,%rsi
  4183ca:	48 89 c7             	mov    %rax,%rdi
  4183cd:	e8 86 fe ff ff       	callq  418258 <incstep>
  4183d2:	90                   	nop
  4183d3:	c9                   	leaveq 
  4183d4:	c3                   	retq   

00000000004183d5 <fullinc>:
  4183d5:	55                   	push   %rbp
  4183d6:	48 89 e5             	mov    %rsp,%rbp
  4183d9:	48 83 ec 10          	sub    $0x10,%rsp
  4183dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4183e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4183e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4183e9:	0f b6 40 65          	movzbl 0x65(%rax),%eax
  4183ed:	3c 02                	cmp    $0x2,%al
  4183ef:	77 0c                	ja     4183fd <fullinc+0x28>
  4183f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4183f5:	48 89 c7             	mov    %rax,%rdi
  4183f8:	e8 2d f8 ff ff       	callq  417c2a <entersweep>
  4183fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418401:	be 00 01 00 00       	mov    $0x100,%esi
  418406:	48 89 c7             	mov    %rax,%rdi
  418409:	e8 03 fe ff ff       	callq  418211 <luaC_runtilstate>
  41840e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418412:	be 80 00 00 00       	mov    $0x80,%esi
  418417:	48 89 c7             	mov    %rax,%rdi
  41841a:	e8 f2 fd ff ff       	callq  418211 <luaC_runtilstate>
  41841f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418423:	be 00 01 00 00       	mov    $0x100,%esi
  418428:	48 89 c7             	mov    %rax,%rdi
  41842b:	e8 e1 fd ff ff       	callq  418211 <luaC_runtilstate>
  418430:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418434:	48 89 c7             	mov    %rax,%rdi
  418437:	e8 54 ea ff ff       	callq  416e90 <setpause>
  41843c:	90                   	nop
  41843d:	c9                   	leaveq 
  41843e:	c3                   	retq   

000000000041843f <luaC_fullgc>:
  41843f:	55                   	push   %rbp
  418440:	48 89 e5             	mov    %rsp,%rbp
  418443:	48 83 ec 20          	sub    $0x20,%rsp
  418447:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41844b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41844e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418452:	48 8b 40 18          	mov    0x18(%rax),%rax
  418456:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41845a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41845d:	89 c2                	mov    %eax,%edx
  41845f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418463:	88 50 6b             	mov    %dl,0x6b(%rax)
  418466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41846a:	0f b6 40 66          	movzbl 0x66(%rax),%eax
  41846e:	84 c0                	test   %al,%al
  418470:	75 15                	jne    418487 <luaC_fullgc+0x48>
  418472:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41847a:	48 89 d6             	mov    %rdx,%rsi
  41847d:	48 89 c7             	mov    %rax,%rdi
  418480:	e8 50 ff ff ff       	callq  4183d5 <fullinc>
  418485:	eb 13                	jmp    41849a <luaC_fullgc+0x5b>
  418487:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41848b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41848f:	48 89 d6             	mov    %rdx,%rsi
  418492:	48 89 c7             	mov    %rax,%rdi
  418495:	e8 44 f5 ff ff       	callq  4179de <fullgen>
  41849a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41849e:	c6 40 6b 00          	movb   $0x0,0x6b(%rax)
  4184a2:	90                   	nop
  4184a3:	c9                   	leaveq 
  4184a4:	c3                   	retq   

00000000004184a5 <luaL_openlibs>:
  4184a5:	55                   	push   %rbp
  4184a6:	48 89 e5             	mov    %rsp,%rbp
  4184a9:	48 83 ec 20          	sub    $0x20,%rsp
  4184ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4184b1:	48 c7 45 f8 00 ef 43 	movq   $0x43ef00,-0x8(%rbp)
  4184b8:	00 
  4184b9:	eb 36                	jmp    4184f1 <luaL_openlibs+0x4c>
  4184bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4184bf:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4184c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4184c7:	48 8b 30             	mov    (%rax),%rsi
  4184ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4184ce:	b9 01 00 00 00       	mov    $0x1,%ecx
  4184d3:	48 89 c7             	mov    %rax,%rdi
  4184d6:	e8 c9 f7 fe ff       	callq  407ca4 <luaL_requiref>
  4184db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4184df:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4184e4:	48 89 c7             	mov    %rax,%rdi
  4184e7:	e8 98 9a fe ff       	callq  401f84 <lua_settop>
  4184ec:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)
  4184f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4184f5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4184f9:	48 85 c0             	test   %rax,%rax
  4184fc:	75 bd                	jne    4184bb <luaL_openlibs+0x16>
  4184fe:	90                   	nop
  4184ff:	c9                   	leaveq 
  418500:	c3                   	retq   

0000000000418501 <l_checkmode>:
  418501:	55                   	push   %rbp
  418502:	48 89 e5             	mov    %rsp,%rbp
  418505:	53                   	push   %rbx
  418506:	48 83 ec 18          	sub    $0x18,%rsp
  41850a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41850e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418512:	0f b6 00             	movzbl (%rax),%eax
  418515:	84 c0                	test   %al,%al
  418517:	74 5f                	je     418578 <l_checkmode+0x77>
  418519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41851d:	48 8d 50 01          	lea    0x1(%rax),%rdx
  418521:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  418525:	0f b6 00             	movzbl (%rax),%eax
  418528:	0f be c0             	movsbl %al,%eax
  41852b:	89 c6                	mov    %eax,%esi
  41852d:	bf c0 ef 43 00       	mov    $0x43efc0,%edi
  418532:	e8 09 92 fe ff       	callq  401740 <strchr@plt>
  418537:	48 85 c0             	test   %rax,%rax
  41853a:	74 3c                	je     418578 <l_checkmode+0x77>
  41853c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418540:	0f b6 00             	movzbl (%rax),%eax
  418543:	3c 2b                	cmp    $0x2b,%al
  418545:	75 05                	jne    41854c <l_checkmode+0x4b>
  418547:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  41854c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418550:	be c4 ef 43 00       	mov    $0x43efc4,%esi
  418555:	48 89 c7             	mov    %rax,%rdi
  418558:	e8 03 92 fe ff       	callq  401760 <strspn@plt>
  41855d:	48 89 c3             	mov    %rax,%rbx
  418560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418564:	48 89 c7             	mov    %rax,%rdi
  418567:	e8 04 92 fe ff       	callq  401770 <strlen@plt>
  41856c:	48 39 c3             	cmp    %rax,%rbx
  41856f:	75 07                	jne    418578 <l_checkmode+0x77>
  418571:	b8 01 00 00 00       	mov    $0x1,%eax
  418576:	eb 05                	jmp    41857d <l_checkmode+0x7c>
  418578:	b8 00 00 00 00       	mov    $0x0,%eax
  41857d:	48 83 c4 18          	add    $0x18,%rsp
  418581:	5b                   	pop    %rbx
  418582:	5d                   	pop    %rbp
  418583:	c3                   	retq   

0000000000418584 <io_type>:
  418584:	55                   	push   %rbp
  418585:	48 89 e5             	mov    %rsp,%rbp
  418588:	48 83 ec 20          	sub    $0x20,%rsp
  41858c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418594:	be 01 00 00 00       	mov    $0x1,%esi
  418599:	48 89 c7             	mov    %rax,%rdi
  41859c:	e8 e4 e1 fe ff       	callq  406785 <luaL_checkany>
  4185a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4185a5:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  4185aa:	be 01 00 00 00       	mov    $0x1,%esi
  4185af:	48 89 c7             	mov    %rax,%rdi
  4185b2:	e8 4c df fe ff       	callq  406503 <luaL_testudata>
  4185b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4185bb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4185c0:	75 0e                	jne    4185d0 <io_type+0x4c>
  4185c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4185c6:	48 89 c7             	mov    %rax,%rdi
  4185c9:	e8 d7 a6 fe ff       	callq  402ca5 <lua_pushnil>
  4185ce:	eb 31                	jmp    418601 <io_type+0x7d>
  4185d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4185d4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4185d8:	48 85 c0             	test   %rax,%rax
  4185db:	75 13                	jne    4185f0 <io_type+0x6c>
  4185dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4185e1:	be cc ef 43 00       	mov    $0x43efcc,%esi
  4185e6:	48 89 c7             	mov    %rax,%rdi
  4185e9:	e8 20 a8 fe ff       	callq  402e0e <lua_pushstring>
  4185ee:	eb 11                	jmp    418601 <io_type+0x7d>
  4185f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4185f4:	be d8 ef 43 00       	mov    $0x43efd8,%esi
  4185f9:	48 89 c7             	mov    %rax,%rdi
  4185fc:	e8 0d a8 fe ff       	callq  402e0e <lua_pushstring>
  418601:	b8 01 00 00 00       	mov    $0x1,%eax
  418606:	c9                   	leaveq 
  418607:	c3                   	retq   

0000000000418608 <f_tostring>:
  418608:	55                   	push   %rbp
  418609:	48 89 e5             	mov    %rsp,%rbp
  41860c:	48 83 ec 20          	sub    $0x20,%rsp
  418610:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418618:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  41861d:	be 01 00 00 00       	mov    $0x1,%esi
  418622:	48 89 c7             	mov    %rax,%rdi
  418625:	e8 72 df fe ff       	callq  40659c <luaL_checkudata>
  41862a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41862e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418632:	48 8b 40 08          	mov    0x8(%rax),%rax
  418636:	48 85 c0             	test   %rax,%rax
  418639:	75 13                	jne    41864e <f_tostring+0x46>
  41863b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41863f:	be dd ef 43 00       	mov    $0x43efdd,%esi
  418644:	48 89 c7             	mov    %rax,%rdi
  418647:	e8 c2 a7 fe ff       	callq  402e0e <lua_pushstring>
  41864c:	eb 1d                	jmp    41866b <f_tostring+0x63>
  41864e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418652:	48 8b 10             	mov    (%rax),%rdx
  418655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418659:	be eb ef 43 00       	mov    $0x43efeb,%esi
  41865e:	48 89 c7             	mov    %rax,%rdi
  418661:	b8 00 00 00 00       	mov    $0x0,%eax
  418666:	e8 a7 a8 fe ff       	callq  402f12 <lua_pushfstring>
  41866b:	b8 01 00 00 00       	mov    $0x1,%eax
  418670:	c9                   	leaveq 
  418671:	c3                   	retq   

0000000000418672 <tofile>:
  418672:	55                   	push   %rbp
  418673:	48 89 e5             	mov    %rsp,%rbp
  418676:	48 83 ec 20          	sub    $0x20,%rsp
  41867a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41867e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418682:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  418687:	be 01 00 00 00       	mov    $0x1,%esi
  41868c:	48 89 c7             	mov    %rax,%rdi
  41868f:	e8 08 df fe ff       	callq  40659c <luaL_checkudata>
  418694:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41869c:	48 8b 40 08          	mov    0x8(%rax),%rax
  4186a0:	48 85 c0             	test   %rax,%rax
  4186a3:	0f 94 c0             	sete   %al
  4186a6:	0f b6 c0             	movzbl %al,%eax
  4186a9:	48 85 c0             	test   %rax,%rax
  4186ac:	74 16                	je     4186c4 <tofile+0x52>
  4186ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4186b2:	be f5 ef 43 00       	mov    $0x43eff5,%esi
  4186b7:	48 89 c7             	mov    %rax,%rdi
  4186ba:	b8 00 00 00 00       	mov    $0x0,%eax
  4186bf:	e8 2c db fe ff       	callq  4061f0 <luaL_error>
  4186c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4186c8:	48 8b 00             	mov    (%rax),%rax
  4186cb:	c9                   	leaveq 
  4186cc:	c3                   	retq   

00000000004186cd <newprefile>:
  4186cd:	55                   	push   %rbp
  4186ce:	48 89 e5             	mov    %rsp,%rbp
  4186d1:	48 83 ec 20          	sub    $0x20,%rsp
  4186d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4186d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4186dd:	ba 00 00 00 00       	mov    $0x0,%edx
  4186e2:	be 10 00 00 00       	mov    $0x10,%esi
  4186e7:	48 89 c7             	mov    %rax,%rdi
  4186ea:	e8 17 cc fe ff       	callq  405306 <lua_newuserdatauv>
  4186ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4186f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4186f7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4186fe:	00 
  4186ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418703:	be c6 ef 43 00       	mov    $0x43efc6,%esi
  418708:	48 89 c7             	mov    %rax,%rdi
  41870b:	e8 ba dd fe ff       	callq  4064ca <luaL_setmetatable>
  418710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418714:	c9                   	leaveq 
  418715:	c3                   	retq   

0000000000418716 <aux_close>:
  418716:	55                   	push   %rbp
  418717:	48 89 e5             	mov    %rsp,%rbp
  41871a:	48 83 ec 20          	sub    $0x20,%rsp
  41871e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418726:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  41872b:	be 01 00 00 00       	mov    $0x1,%esi
  418730:	48 89 c7             	mov    %rax,%rdi
  418733:	e8 64 de fe ff       	callq  40659c <luaL_checkudata>
  418738:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41873c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418740:	48 8b 40 08          	mov    0x8(%rax),%rax
  418744:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41874c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  418753:	00 
  418754:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418758:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41875c:	48 89 d7             	mov    %rdx,%rdi
  41875f:	ff d0                	callq  *%rax
  418761:	c9                   	leaveq 
  418762:	c3                   	retq   

0000000000418763 <f_close>:
  418763:	55                   	push   %rbp
  418764:	48 89 e5             	mov    %rsp,%rbp
  418767:	48 83 ec 10          	sub    $0x10,%rsp
  41876b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41876f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418773:	48 89 c7             	mov    %rax,%rdi
  418776:	e8 f7 fe ff ff       	callq  418672 <tofile>
  41877b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41877f:	48 89 c7             	mov    %rax,%rdi
  418782:	e8 8f ff ff ff       	callq  418716 <aux_close>
  418787:	c9                   	leaveq 
  418788:	c3                   	retq   

0000000000418789 <io_close>:
  418789:	55                   	push   %rbp
  41878a:	48 89 e5             	mov    %rsp,%rbp
  41878d:	48 83 ec 10          	sub    $0x10,%rsp
  418791:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418799:	be 01 00 00 00       	mov    $0x1,%esi
  41879e:	48 89 c7             	mov    %rax,%rdi
  4187a1:	e8 cd 9b fe ff       	callq  402373 <lua_type>
  4187a6:	83 f8 ff             	cmp    $0xffffffff,%eax
  4187a9:	75 16                	jne    4187c1 <io_close+0x38>
  4187ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4187af:	ba 12 f0 43 00       	mov    $0x43f012,%edx
  4187b4:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  4187b9:	48 89 c7             	mov    %rax,%rdi
  4187bc:	e8 f4 ac fe ff       	callq  4034b5 <lua_getfield>
  4187c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4187c5:	48 89 c7             	mov    %rax,%rdi
  4187c8:	e8 96 ff ff ff       	callq  418763 <f_close>
  4187cd:	c9                   	leaveq 
  4187ce:	c3                   	retq   

00000000004187cf <f_gc>:
  4187cf:	55                   	push   %rbp
  4187d0:	48 89 e5             	mov    %rsp,%rbp
  4187d3:	48 83 ec 20          	sub    $0x20,%rsp
  4187d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4187db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4187df:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  4187e4:	be 01 00 00 00       	mov    $0x1,%esi
  4187e9:	48 89 c7             	mov    %rax,%rdi
  4187ec:	e8 ab dd fe ff       	callq  40659c <luaL_checkudata>
  4187f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4187f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4187f9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4187fd:	48 85 c0             	test   %rax,%rax
  418800:	74 18                	je     41881a <f_gc+0x4b>
  418802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418806:	48 8b 00             	mov    (%rax),%rax
  418809:	48 85 c0             	test   %rax,%rax
  41880c:	74 0c                	je     41881a <f_gc+0x4b>
  41880e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418812:	48 89 c7             	mov    %rax,%rdi
  418815:	e8 fc fe ff ff       	callq  418716 <aux_close>
  41881a:	b8 00 00 00 00       	mov    $0x0,%eax
  41881f:	c9                   	leaveq 
  418820:	c3                   	retq   

0000000000418821 <io_fclose>:
  418821:	55                   	push   %rbp
  418822:	48 89 e5             	mov    %rsp,%rbp
  418825:	48 83 ec 20          	sub    $0x20,%rsp
  418829:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41882d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418831:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  418836:	be 01 00 00 00       	mov    $0x1,%esi
  41883b:	48 89 c7             	mov    %rax,%rdi
  41883e:	e8 59 dd fe ff       	callq  40659c <luaL_checkudata>
  418843:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41884b:	48 8b 00             	mov    (%rax),%rax
  41884e:	48 89 c7             	mov    %rax,%rdi
  418851:	e8 9a 90 fe ff       	callq  4018f0 <fclose@plt>
  418856:	89 45 f4             	mov    %eax,-0xc(%rbp)
  418859:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  41885d:	0f 94 c0             	sete   %al
  418860:	0f b6 c8             	movzbl %al,%ecx
  418863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418867:	ba 00 00 00 00       	mov    $0x0,%edx
  41886c:	89 ce                	mov    %ecx,%esi
  41886e:	48 89 c7             	mov    %rax,%rdi
  418871:	e8 59 da fe ff       	callq  4062cf <luaL_fileresult>
  418876:	c9                   	leaveq 
  418877:	c3                   	retq   

0000000000418878 <newfile>:
  418878:	55                   	push   %rbp
  418879:	48 89 e5             	mov    %rsp,%rbp
  41887c:	48 83 ec 20          	sub    $0x20,%rsp
  418880:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418888:	48 89 c7             	mov    %rax,%rdi
  41888b:	e8 3d fe ff ff       	callq  4186cd <newprefile>
  418890:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418898:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41889f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4188a3:	48 c7 40 08 21 88 41 	movq   $0x418821,0x8(%rax)
  4188aa:	00 
  4188ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4188af:	c9                   	leaveq 
  4188b0:	c3                   	retq   

00000000004188b1 <opencheck>:
  4188b1:	55                   	push   %rbp
  4188b2:	48 89 e5             	mov    %rsp,%rbp
  4188b5:	48 83 ec 30          	sub    $0x30,%rsp
  4188b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4188bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4188c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4188c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4188c9:	48 89 c7             	mov    %rax,%rdi
  4188cc:	e8 a7 ff ff ff       	callq  418878 <newfile>
  4188d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4188d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4188d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4188dd:	48 89 d6             	mov    %rdx,%rsi
  4188e0:	48 89 c7             	mov    %rax,%rdi
  4188e3:	e8 48 90 fe ff       	callq  401930 <fopen64@plt>
  4188e8:	48 89 c2             	mov    %rax,%rdx
  4188eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4188ef:	48 89 10             	mov    %rdx,(%rax)
  4188f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4188f6:	48 8b 00             	mov    (%rax),%rax
  4188f9:	48 85 c0             	test   %rax,%rax
  4188fc:	0f 94 c0             	sete   %al
  4188ff:	0f b6 c0             	movzbl %al,%eax
  418902:	48 85 c0             	test   %rax,%rax
  418905:	74 2b                	je     418932 <opencheck+0x81>
  418907:	e8 84 8d fe ff       	callq  401690 <__errno_location@plt>
  41890c:	8b 00                	mov    (%rax),%eax
  41890e:	89 c7                	mov    %eax,%edi
  418910:	e8 1b 8e fe ff       	callq  401730 <strerror@plt>
  418915:	48 89 c1             	mov    %rax,%rcx
  418918:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41891c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418920:	be 1d f0 43 00       	mov    $0x43f01d,%esi
  418925:	48 89 c7             	mov    %rax,%rdi
  418928:	b8 00 00 00 00       	mov    $0x0,%eax
  41892d:	e8 be d8 fe ff       	callq  4061f0 <luaL_error>
  418932:	90                   	nop
  418933:	c9                   	leaveq 
  418934:	c3                   	retq   

0000000000418935 <io_open>:
  418935:	55                   	push   %rbp
  418936:	48 89 e5             	mov    %rsp,%rbp
  418939:	48 83 ec 30          	sub    $0x30,%rsp
  41893d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  418941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418945:	ba 00 00 00 00       	mov    $0x0,%edx
  41894a:	be 01 00 00 00       	mov    $0x1,%esi
  41894f:	48 89 c7             	mov    %rax,%rdi
  418952:	e8 75 de fe ff       	callq  4067cc <luaL_checklstring>
  418957:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41895b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41895f:	b9 00 00 00 00       	mov    $0x0,%ecx
  418964:	ba 38 f0 43 00       	mov    $0x43f038,%edx
  418969:	be 02 00 00 00       	mov    $0x2,%esi
  41896e:	48 89 c7             	mov    %rax,%rdi
  418971:	e8 ae de fe ff       	callq  406824 <luaL_optlstring>
  418976:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41897a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41897e:	48 89 c7             	mov    %rax,%rdi
  418981:	e8 f2 fe ff ff       	callq  418878 <newfile>
  418986:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41898a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41898e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  418992:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418996:	48 89 c7             	mov    %rax,%rdi
  418999:	e8 63 fb ff ff       	callq  418501 <l_checkmode>
  41899e:	85 c0                	test   %eax,%eax
  4189a0:	0f 95 c0             	setne  %al
  4189a3:	0f b6 c0             	movzbl %al,%eax
  4189a6:	48 85 c0             	test   %rax,%rax
  4189a9:	75 18                	jne    4189c3 <io_open+0x8e>
  4189ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4189af:	ba 3a f0 43 00       	mov    $0x43f03a,%edx
  4189b4:	be 02 00 00 00       	mov    $0x2,%esi
  4189b9:	48 89 c7             	mov    %rax,%rdi
  4189bc:	e8 31 d5 fe ff       	callq  405ef2 <luaL_argerror>
  4189c1:	85 c0                	test   %eax,%eax
  4189c3:	90                   	nop
  4189c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4189c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4189cc:	48 89 d6             	mov    %rdx,%rsi
  4189cf:	48 89 c7             	mov    %rax,%rdi
  4189d2:	e8 59 8f fe ff       	callq  401930 <fopen64@plt>
  4189d7:	48 89 c2             	mov    %rax,%rdx
  4189da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4189de:	48 89 10             	mov    %rdx,(%rax)
  4189e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4189e5:	48 8b 00             	mov    (%rax),%rax
  4189e8:	48 85 c0             	test   %rax,%rax
  4189eb:	75 17                	jne    418a04 <io_open+0xcf>
  4189ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4189f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4189f5:	be 00 00 00 00       	mov    $0x0,%esi
  4189fa:	48 89 c7             	mov    %rax,%rdi
  4189fd:	e8 cd d8 fe ff       	callq  4062cf <luaL_fileresult>
  418a02:	eb 05                	jmp    418a09 <io_open+0xd4>
  418a04:	b8 01 00 00 00       	mov    $0x1,%eax
  418a09:	c9                   	leaveq 
  418a0a:	c3                   	retq   

0000000000418a0b <io_pclose>:
  418a0b:	55                   	push   %rbp
  418a0c:	48 89 e5             	mov    %rsp,%rbp
  418a0f:	48 83 ec 20          	sub    $0x20,%rsp
  418a13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418a1b:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  418a20:	be 01 00 00 00       	mov    $0x1,%esi
  418a25:	48 89 c7             	mov    %rax,%rdi
  418a28:	e8 6f db fe ff       	callq  40659c <luaL_checkudata>
  418a2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418a31:	e8 5a 8c fe ff       	callq  401690 <__errno_location@plt>
  418a36:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  418a3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418a40:	be ff ff ff ff       	mov    $0xffffffff,%esi
  418a45:	48 89 c7             	mov    %rax,%rdi
  418a48:	e8 31 d9 fe ff       	callq  40637e <luaL_execresult>
  418a4d:	c9                   	leaveq 
  418a4e:	c3                   	retq   

0000000000418a4f <io_popen>:
  418a4f:	55                   	push   %rbp
  418a50:	48 89 e5             	mov    %rsp,%rbp
  418a53:	48 83 ec 30          	sub    $0x30,%rsp
  418a57:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  418a5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418a5f:	ba 00 00 00 00       	mov    $0x0,%edx
  418a64:	be 01 00 00 00       	mov    $0x1,%esi
  418a69:	48 89 c7             	mov    %rax,%rdi
  418a6c:	e8 5b dd fe ff       	callq  4067cc <luaL_checklstring>
  418a71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418a75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418a79:	b9 00 00 00 00       	mov    $0x0,%ecx
  418a7e:	ba 38 f0 43 00       	mov    $0x43f038,%edx
  418a83:	be 02 00 00 00       	mov    $0x2,%esi
  418a88:	48 89 c7             	mov    %rax,%rdi
  418a8b:	e8 94 dd fe ff       	callq  406824 <luaL_optlstring>
  418a90:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418a94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418a98:	48 89 c7             	mov    %rax,%rdi
  418a9b:	e8 2d fc ff ff       	callq  4186cd <newprefile>
  418aa0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  418aa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418aa8:	0f b6 00             	movzbl (%rax),%eax
  418aab:	3c 72                	cmp    $0x72,%al
  418aad:	74 0b                	je     418aba <io_popen+0x6b>
  418aaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418ab3:	0f b6 00             	movzbl (%rax),%eax
  418ab6:	3c 77                	cmp    $0x77,%al
  418ab8:	75 16                	jne    418ad0 <io_popen+0x81>
  418aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418abe:	48 83 c0 01          	add    $0x1,%rax
  418ac2:	0f b6 00             	movzbl (%rax),%eax
  418ac5:	84 c0                	test   %al,%al
  418ac7:	75 07                	jne    418ad0 <io_popen+0x81>
  418ac9:	b8 01 00 00 00       	mov    $0x1,%eax
  418ace:	eb 05                	jmp    418ad5 <io_popen+0x86>
  418ad0:	b8 00 00 00 00       	mov    $0x0,%eax
  418ad5:	85 c0                	test   %eax,%eax
  418ad7:	0f 95 c0             	setne  %al
  418ada:	0f b6 c0             	movzbl %al,%eax
  418add:	48 85 c0             	test   %rax,%rax
  418ae0:	75 18                	jne    418afa <io_popen+0xab>
  418ae2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418ae6:	ba 3a f0 43 00       	mov    $0x43f03a,%edx
  418aeb:	be 02 00 00 00       	mov    $0x2,%esi
  418af0:	48 89 c7             	mov    %rax,%rdi
  418af3:	e8 fa d3 fe ff       	callq  405ef2 <luaL_argerror>
  418af8:	85 c0                	test   %eax,%eax
  418afa:	90                   	nop
  418afb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418aff:	be 47 f0 43 00       	mov    $0x43f047,%esi
  418b04:	48 89 c7             	mov    %rax,%rdi
  418b07:	b8 00 00 00 00       	mov    $0x0,%eax
  418b0c:	e8 df d6 fe ff       	callq  4061f0 <luaL_error>
  418b11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b15:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  418b1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b20:	48 c7 40 08 0b 8a 41 	movq   $0x418a0b,0x8(%rax)
  418b27:	00 
  418b28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b2c:	48 8b 00             	mov    (%rax),%rax
  418b2f:	48 85 c0             	test   %rax,%rax
  418b32:	75 17                	jne    418b4b <io_popen+0xfc>
  418b34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418b38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418b3c:	be 00 00 00 00       	mov    $0x0,%esi
  418b41:	48 89 c7             	mov    %rax,%rdi
  418b44:	e8 86 d7 fe ff       	callq  4062cf <luaL_fileresult>
  418b49:	eb 05                	jmp    418b50 <io_popen+0x101>
  418b4b:	b8 01 00 00 00       	mov    $0x1,%eax
  418b50:	c9                   	leaveq 
  418b51:	c3                   	retq   

0000000000418b52 <io_tmpfile>:
  418b52:	55                   	push   %rbp
  418b53:	48 89 e5             	mov    %rsp,%rbp
  418b56:	48 83 ec 20          	sub    $0x20,%rsp
  418b5a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b62:	48 89 c7             	mov    %rax,%rdi
  418b65:	e8 0e fd ff ff       	callq  418878 <newfile>
  418b6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418b6e:	e8 2d 8f fe ff       	callq  401aa0 <tmpfile64@plt>
  418b73:	48 89 c2             	mov    %rax,%rdx
  418b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418b7a:	48 89 10             	mov    %rdx,(%rax)
  418b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418b81:	48 8b 00             	mov    (%rax),%rax
  418b84:	48 85 c0             	test   %rax,%rax
  418b87:	75 18                	jne    418ba1 <io_tmpfile+0x4f>
  418b89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b8d:	ba 00 00 00 00       	mov    $0x0,%edx
  418b92:	be 00 00 00 00       	mov    $0x0,%esi
  418b97:	48 89 c7             	mov    %rax,%rdi
  418b9a:	e8 30 d7 fe ff       	callq  4062cf <luaL_fileresult>
  418b9f:	eb 05                	jmp    418ba6 <io_tmpfile+0x54>
  418ba1:	b8 01 00 00 00       	mov    $0x1,%eax
  418ba6:	c9                   	leaveq 
  418ba7:	c3                   	retq   

0000000000418ba8 <getiofile>:
  418ba8:	55                   	push   %rbp
  418ba9:	48 89 e5             	mov    %rsp,%rbp
  418bac:	48 83 ec 20          	sub    $0x20,%rsp
  418bb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418bb4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  418bb8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  418bbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418bc0:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  418bc5:	48 89 c7             	mov    %rax,%rdi
  418bc8:	e8 e8 a8 fe ff       	callq  4034b5 <lua_getfield>
  418bcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418bd1:	be ff ff ff ff       	mov    $0xffffffff,%esi
  418bd6:	48 89 c7             	mov    %rax,%rdi
  418bd9:	e8 d9 9f fe ff       	callq  402bb7 <lua_touserdata>
  418bde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418be6:	48 8b 40 08          	mov    0x8(%rax),%rax
  418bea:	48 85 c0             	test   %rax,%rax
  418bed:	0f 94 c0             	sete   %al
  418bf0:	0f b6 c0             	movzbl %al,%eax
  418bf3:	48 85 c0             	test   %rax,%rax
  418bf6:	74 1e                	je     418c16 <getiofile+0x6e>
  418bf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418bfc:	48 8d 50 04          	lea    0x4(%rax),%rdx
  418c00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c04:	be 5d f0 43 00       	mov    $0x43f05d,%esi
  418c09:	48 89 c7             	mov    %rax,%rdi
  418c0c:	b8 00 00 00 00       	mov    $0x0,%eax
  418c11:	e8 da d5 fe ff       	callq  4061f0 <luaL_error>
  418c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418c1a:	48 8b 00             	mov    (%rax),%rax
  418c1d:	c9                   	leaveq 
  418c1e:	c3                   	retq   

0000000000418c1f <g_iofile>:
  418c1f:	55                   	push   %rbp
  418c20:	48 89 e5             	mov    %rsp,%rbp
  418c23:	48 83 ec 30          	sub    $0x30,%rsp
  418c27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418c2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  418c2f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  418c33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c37:	be 01 00 00 00       	mov    $0x1,%esi
  418c3c:	48 89 c7             	mov    %rax,%rdi
  418c3f:	e8 2f 97 fe ff       	callq  402373 <lua_type>
  418c44:	85 c0                	test   %eax,%eax
  418c46:	7e 6c                	jle    418cb4 <g_iofile+0x95>
  418c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c4c:	ba 00 00 00 00       	mov    $0x0,%edx
  418c51:	be 01 00 00 00       	mov    $0x1,%esi
  418c56:	48 89 c7             	mov    %rax,%rdi
  418c59:	e8 0f 9d fe ff       	callq  40296d <lua_tolstring>
  418c5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  418c62:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  418c67:	74 19                	je     418c82 <g_iofile+0x63>
  418c69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  418c6d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  418c71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c75:	48 89 ce             	mov    %rcx,%rsi
  418c78:	48 89 c7             	mov    %rax,%rdi
  418c7b:	e8 31 fc ff ff       	callq  4188b1 <opencheck>
  418c80:	eb 1d                	jmp    418c9f <g_iofile+0x80>
  418c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c86:	48 89 c7             	mov    %rax,%rdi
  418c89:	e8 e4 f9 ff ff       	callq  418672 <tofile>
  418c8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418c92:	be 01 00 00 00       	mov    $0x1,%esi
  418c97:	48 89 c7             	mov    %rax,%rdi
  418c9a:	e8 70 96 fe ff       	callq  40230f <lua_pushvalue>
  418c9f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  418ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418ca7:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  418cac:	48 89 c7             	mov    %rax,%rdi
  418caf:	e8 1e b1 fe ff       	callq  403dd2 <lua_setfield>
  418cb4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  418cb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418cbc:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  418cc1:	48 89 c7             	mov    %rax,%rdi
  418cc4:	e8 ec a7 fe ff       	callq  4034b5 <lua_getfield>
  418cc9:	b8 01 00 00 00       	mov    $0x1,%eax
  418cce:	c9                   	leaveq 
  418ccf:	c3                   	retq   

0000000000418cd0 <io_input>:
  418cd0:	55                   	push   %rbp
  418cd1:	48 89 e5             	mov    %rsp,%rbp
  418cd4:	48 83 ec 10          	sub    $0x10,%rsp
  418cd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418ce0:	ba 38 f0 43 00       	mov    $0x43f038,%edx
  418ce5:	be 77 f0 43 00       	mov    $0x43f077,%esi
  418cea:	48 89 c7             	mov    %rax,%rdi
  418ced:	e8 2d ff ff ff       	callq  418c1f <g_iofile>
  418cf2:	c9                   	leaveq 
  418cf3:	c3                   	retq   

0000000000418cf4 <io_output>:
  418cf4:	55                   	push   %rbp
  418cf5:	48 89 e5             	mov    %rsp,%rbp
  418cf8:	48 83 ec 10          	sub    $0x10,%rsp
  418cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418d04:	ba 81 f0 43 00       	mov    $0x43f081,%edx
  418d09:	be 12 f0 43 00       	mov    $0x43f012,%esi
  418d0e:	48 89 c7             	mov    %rax,%rdi
  418d11:	e8 09 ff ff ff       	callq  418c1f <g_iofile>
  418d16:	c9                   	leaveq 
  418d17:	c3                   	retq   

0000000000418d18 <aux_lines>:
  418d18:	55                   	push   %rbp
  418d19:	48 89 e5             	mov    %rsp,%rbp
  418d1c:	48 83 ec 20          	sub    $0x20,%rsp
  418d20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418d24:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  418d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d2b:	48 89 c7             	mov    %rax,%rdi
  418d2e:	e8 26 92 fe ff       	callq  401f59 <lua_gettop>
  418d33:	83 e8 01             	sub    $0x1,%eax
  418d36:	89 45 fc             	mov    %eax,-0x4(%rbp)
  418d39:	81 7d fc fa 00 00 00 	cmpl   $0xfa,-0x4(%rbp)
  418d40:	0f 9e c0             	setle  %al
  418d43:	0f b6 c0             	movzbl %al,%eax
  418d46:	48 85 c0             	test   %rax,%rax
  418d49:	75 18                	jne    418d63 <aux_lines+0x4b>
  418d4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d4f:	ba 83 f0 43 00       	mov    $0x43f083,%edx
  418d54:	be fc 00 00 00       	mov    $0xfc,%esi
  418d59:	48 89 c7             	mov    %rax,%rdi
  418d5c:	e8 91 d1 fe ff       	callq  405ef2 <luaL_argerror>
  418d61:	85 c0                	test   %eax,%eax
  418d63:	90                   	nop
  418d64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d68:	be 01 00 00 00       	mov    $0x1,%esi
  418d6d:	48 89 c7             	mov    %rax,%rdi
  418d70:	e8 9a 95 fe ff       	callq  40230f <lua_pushvalue>
  418d75:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418d78:	48 63 d0             	movslq %eax,%rdx
  418d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d7f:	48 89 d6             	mov    %rdx,%rsi
  418d82:	48 89 c7             	mov    %rax,%rdi
  418d85:	e8 8b 9f fe ff       	callq  402d15 <lua_pushinteger>
  418d8a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  418d8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d91:	89 d6                	mov    %edx,%esi
  418d93:	48 89 c7             	mov    %rax,%rdi
  418d96:	e8 9d a3 fe ff       	callq  403138 <lua_pushboolean>
  418d9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418d9f:	ba 03 00 00 00       	mov    $0x3,%edx
  418da4:	be 02 00 00 00       	mov    $0x2,%esi
  418da9:	48 89 c7             	mov    %rax,%rdi
  418dac:	e8 bd 93 fe ff       	callq  40216e <lua_rotate>
  418db1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418db4:	8d 50 03             	lea    0x3(%rax),%edx
  418db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418dbb:	be 07 98 41 00       	mov    $0x419807,%esi
  418dc0:	48 89 c7             	mov    %rax,%rdi
  418dc3:	e8 23 a2 fe ff       	callq  402feb <lua_pushcclosure>
  418dc8:	90                   	nop
  418dc9:	c9                   	leaveq 
  418dca:	c3                   	retq   

0000000000418dcb <f_lines>:
  418dcb:	55                   	push   %rbp
  418dcc:	48 89 e5             	mov    %rsp,%rbp
  418dcf:	48 83 ec 10          	sub    $0x10,%rsp
  418dd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418ddb:	48 89 c7             	mov    %rax,%rdi
  418dde:	e8 8f f8 ff ff       	callq  418672 <tofile>
  418de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418de7:	be 00 00 00 00       	mov    $0x0,%esi
  418dec:	48 89 c7             	mov    %rax,%rdi
  418def:	e8 24 ff ff ff       	callq  418d18 <aux_lines>
  418df4:	b8 01 00 00 00       	mov    $0x1,%eax
  418df9:	c9                   	leaveq 
  418dfa:	c3                   	retq   

0000000000418dfb <io_lines>:
  418dfb:	55                   	push   %rbp
  418dfc:	48 89 e5             	mov    %rsp,%rbp
  418dff:	48 83 ec 20          	sub    $0x20,%rsp
  418e03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  418e07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e0b:	be 01 00 00 00       	mov    $0x1,%esi
  418e10:	48 89 c7             	mov    %rax,%rdi
  418e13:	e8 5b 95 fe ff       	callq  402373 <lua_type>
  418e18:	83 f8 ff             	cmp    $0xffffffff,%eax
  418e1b:	75 0c                	jne    418e29 <io_lines+0x2e>
  418e1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e21:	48 89 c7             	mov    %rax,%rdi
  418e24:	e8 7c 9e fe ff       	callq  402ca5 <lua_pushnil>
  418e29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e2d:	be 01 00 00 00       	mov    $0x1,%esi
  418e32:	48 89 c7             	mov    %rax,%rdi
  418e35:	e8 39 95 fe ff       	callq  402373 <lua_type>
  418e3a:	85 c0                	test   %eax,%eax
  418e3c:	75 52                	jne    418e90 <io_lines+0x95>
  418e3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e42:	ba 77 f0 43 00       	mov    $0x43f077,%edx
  418e47:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  418e4c:	48 89 c7             	mov    %rax,%rdi
  418e4f:	e8 61 a6 fe ff       	callq  4034b5 <lua_getfield>
  418e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e58:	ba 01 00 00 00       	mov    $0x1,%edx
  418e5d:	be ff ff ff ff       	mov    $0xffffffff,%esi
  418e62:	48 89 c7             	mov    %rax,%rdi
  418e65:	e8 c3 93 fe ff       	callq  40222d <lua_copy>
  418e6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e6e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  418e73:	48 89 c7             	mov    %rax,%rdi
  418e76:	e8 09 91 fe ff       	callq  401f84 <lua_settop>
  418e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e7f:	48 89 c7             	mov    %rax,%rdi
  418e82:	e8 eb f7 ff ff       	callq  418672 <tofile>
  418e87:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  418e8e:	eb 60                	jmp    418ef0 <io_lines+0xf5>
  418e90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e94:	ba 00 00 00 00       	mov    $0x0,%edx
  418e99:	be 01 00 00 00       	mov    $0x1,%esi
  418e9e:	48 89 c7             	mov    %rax,%rdi
  418ea1:	e8 26 d9 fe ff       	callq  4067cc <luaL_checklstring>
  418ea6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418eaa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  418eae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418eb2:	ba 38 f0 43 00       	mov    $0x43f038,%edx
  418eb7:	48 89 ce             	mov    %rcx,%rsi
  418eba:	48 89 c7             	mov    %rax,%rdi
  418ebd:	e8 ef f9 ff ff       	callq  4188b1 <opencheck>
  418ec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418ec6:	ba 01 00 00 00       	mov    $0x1,%edx
  418ecb:	be ff ff ff ff       	mov    $0xffffffff,%esi
  418ed0:	48 89 c7             	mov    %rax,%rdi
  418ed3:	e8 55 93 fe ff       	callq  40222d <lua_copy>
  418ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418edc:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  418ee1:	48 89 c7             	mov    %rax,%rdi
  418ee4:	e8 9b 90 fe ff       	callq  401f84 <lua_settop>
  418ee9:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  418ef0:	8b 55 fc             	mov    -0x4(%rbp),%edx
  418ef3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418ef7:	89 d6                	mov    %edx,%esi
  418ef9:	48 89 c7             	mov    %rax,%rdi
  418efc:	e8 17 fe ff ff       	callq  418d18 <aux_lines>
  418f01:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  418f05:	74 30                	je     418f37 <io_lines+0x13c>
  418f07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418f0b:	48 89 c7             	mov    %rax,%rdi
  418f0e:	e8 92 9d fe ff       	callq  402ca5 <lua_pushnil>
  418f13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418f17:	48 89 c7             	mov    %rax,%rdi
  418f1a:	e8 86 9d fe ff       	callq  402ca5 <lua_pushnil>
  418f1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418f23:	be 01 00 00 00       	mov    $0x1,%esi
  418f28:	48 89 c7             	mov    %rax,%rdi
  418f2b:	e8 df 93 fe ff       	callq  40230f <lua_pushvalue>
  418f30:	b8 04 00 00 00       	mov    $0x4,%eax
  418f35:	eb 05                	jmp    418f3c <io_lines+0x141>
  418f37:	b8 01 00 00 00       	mov    $0x1,%eax
  418f3c:	c9                   	leaveq 
  418f3d:	c3                   	retq   

0000000000418f3e <nextc>:
  418f3e:	55                   	push   %rbp
  418f3f:	48 89 e5             	mov    %rsp,%rbp
  418f42:	48 83 ec 10          	sub    $0x10,%rsp
  418f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418f4e:	8b 40 0c             	mov    0xc(%rax),%eax
  418f51:	3d c7 00 00 00       	cmp    $0xc7,%eax
  418f56:	0f 9f c0             	setg   %al
  418f59:	0f b6 c0             	movzbl %al,%eax
  418f5c:	48 85 c0             	test   %rax,%rax
  418f5f:	74 0f                	je     418f70 <nextc+0x32>
  418f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418f65:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  418f69:	b8 00 00 00 00       	mov    $0x0,%eax
  418f6e:	eb 41                	jmp    418fb1 <nextc+0x73>
  418f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418f74:	8b 70 08             	mov    0x8(%rax),%esi
  418f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418f7b:	8b 40 0c             	mov    0xc(%rax),%eax
  418f7e:	8d 48 01             	lea    0x1(%rax),%ecx
  418f81:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418f85:	89 4a 0c             	mov    %ecx,0xc(%rdx)
  418f88:	89 f1                	mov    %esi,%ecx
  418f8a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418f8e:	48 98                	cltq   
  418f90:	88 4c 02 10          	mov    %cl,0x10(%rdx,%rax,1)
  418f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418f98:	48 8b 00             	mov    (%rax),%rax
  418f9b:	48 89 c7             	mov    %rax,%rdi
  418f9e:	e8 6d 87 fe ff       	callq  401710 <getc@plt>
  418fa3:	89 c2                	mov    %eax,%edx
  418fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418fa9:	89 50 08             	mov    %edx,0x8(%rax)
  418fac:	b8 01 00 00 00       	mov    $0x1,%eax
  418fb1:	c9                   	leaveq 
  418fb2:	c3                   	retq   

0000000000418fb3 <test2>:
  418fb3:	55                   	push   %rbp
  418fb4:	48 89 e5             	mov    %rsp,%rbp
  418fb7:	48 83 ec 10          	sub    $0x10,%rsp
  418fbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  418fbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  418fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418fc7:	8b 50 08             	mov    0x8(%rax),%edx
  418fca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418fce:	0f b6 00             	movzbl (%rax),%eax
  418fd1:	0f be c0             	movsbl %al,%eax
  418fd4:	39 c2                	cmp    %eax,%edx
  418fd6:	74 19                	je     418ff1 <test2+0x3e>
  418fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418fdc:	8b 50 08             	mov    0x8(%rax),%edx
  418fdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418fe3:	48 83 c0 01          	add    $0x1,%rax
  418fe7:	0f b6 00             	movzbl (%rax),%eax
  418fea:	0f be c0             	movsbl %al,%eax
  418fed:	39 c2                	cmp    %eax,%edx
  418fef:	75 0e                	jne    418fff <test2+0x4c>
  418ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  418ff5:	48 89 c7             	mov    %rax,%rdi
  418ff8:	e8 41 ff ff ff       	callq  418f3e <nextc>
  418ffd:	eb 05                	jmp    419004 <test2+0x51>
  418fff:	b8 00 00 00 00       	mov    $0x0,%eax
  419004:	c9                   	leaveq 
  419005:	c3                   	retq   

0000000000419006 <readdigits>:
  419006:	55                   	push   %rbp
  419007:	48 89 e5             	mov    %rsp,%rbp
  41900a:	48 83 ec 20          	sub    $0x20,%rsp
  41900e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  419012:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  419015:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41901c:	eb 04                	jmp    419022 <readdigits+0x1c>
  41901e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  419022:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  419026:	74 28                	je     419050 <readdigits+0x4a>
  419028:	e8 d3 88 fe ff       	callq  401900 <__ctype_b_loc@plt>
  41902d:	48 8b 10             	mov    (%rax),%rdx
  419030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419034:	8b 40 08             	mov    0x8(%rax),%eax
  419037:	48 98                	cltq   
  419039:	48 01 c0             	add    %rax,%rax
  41903c:	48 01 d0             	add    %rdx,%rax
  41903f:	0f b7 00             	movzwl (%rax),%eax
  419042:	0f b7 c0             	movzwl %ax,%eax
  419045:	25 00 10 00 00       	and    $0x1000,%eax
  41904a:	85 c0                	test   %eax,%eax
  41904c:	75 28                	jne    419076 <readdigits+0x70>
  41904e:	eb 36                	jmp    419086 <readdigits+0x80>
  419050:	e8 ab 88 fe ff       	callq  401900 <__ctype_b_loc@plt>
  419055:	48 8b 10             	mov    (%rax),%rdx
  419058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41905c:	8b 40 08             	mov    0x8(%rax),%eax
  41905f:	48 98                	cltq   
  419061:	48 01 c0             	add    %rax,%rax
  419064:	48 01 d0             	add    %rdx,%rax
  419067:	0f b7 00             	movzwl (%rax),%eax
  41906a:	0f b7 c0             	movzwl %ax,%eax
  41906d:	25 00 08 00 00       	and    $0x800,%eax
  419072:	85 c0                	test   %eax,%eax
  419074:	74 10                	je     419086 <readdigits+0x80>
  419076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41907a:	48 89 c7             	mov    %rax,%rdi
  41907d:	e8 bc fe ff ff       	callq  418f3e <nextc>
  419082:	85 c0                	test   %eax,%eax
  419084:	75 98                	jne    41901e <readdigits+0x18>
  419086:	8b 45 fc             	mov    -0x4(%rbp),%eax
  419089:	c9                   	leaveq 
  41908a:	c3                   	retq   

000000000041908b <read_number>:
  41908b:	55                   	push   %rbp
  41908c:	48 89 e5             	mov    %rsp,%rbp
  41908f:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  419096:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  41909d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
  4190a4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4190ab:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4190b2:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4190b9:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4190c0:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%rbp)
  4190c7:	00 00 00 
  4190ca:	e8 41 8a fe ff       	callq  401b10 <localeconv@plt>
  4190cf:	48 8b 00             	mov    (%rax),%rax
  4190d2:	0f b6 00             	movzbl (%rax),%eax
  4190d5:	88 85 0e ff ff ff    	mov    %al,-0xf2(%rbp)
  4190db:	c6 85 0f ff ff ff 2e 	movb   $0x2e,-0xf1(%rbp)
  4190e2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4190e9:	48 89 c7             	mov    %rax,%rdi
  4190ec:	e8 1f 86 fe ff       	callq  401710 <getc@plt>
  4190f1:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
  4190f7:	e8 04 88 fe ff       	callq  401900 <__ctype_b_loc@plt>
  4190fc:	48 8b 00             	mov    (%rax),%rax
  4190ff:	8b 95 18 ff ff ff    	mov    -0xe8(%rbp),%edx
  419105:	48 63 d2             	movslq %edx,%rdx
  419108:	48 01 d2             	add    %rdx,%rdx
  41910b:	48 01 d0             	add    %rdx,%rax
  41910e:	0f b7 00             	movzwl (%rax),%eax
  419111:	0f b7 c0             	movzwl %ax,%eax
  419114:	25 00 20 00 00       	and    $0x2000,%eax
  419119:	85 c0                	test   %eax,%eax
  41911b:	75 c5                	jne    4190e2 <read_number+0x57>
  41911d:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419124:	be 96 f0 43 00       	mov    $0x43f096,%esi
  419129:	48 89 c7             	mov    %rax,%rdi
  41912c:	e8 82 fe ff ff       	callq  418fb3 <test2>
  419131:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419138:	be 99 f0 43 00       	mov    $0x43f099,%esi
  41913d:	48 89 c7             	mov    %rax,%rdi
  419140:	e8 6e fe ff ff       	callq  418fb3 <test2>
  419145:	85 c0                	test   %eax,%eax
  419147:	74 28                	je     419171 <read_number+0xe6>
  419149:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419150:	be 9c f0 43 00       	mov    $0x43f09c,%esi
  419155:	48 89 c7             	mov    %rax,%rdi
  419158:	e8 56 fe ff ff       	callq  418fb3 <test2>
  41915d:	85 c0                	test   %eax,%eax
  41915f:	74 09                	je     41916a <read_number+0xdf>
  419161:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  419168:	eb 07                	jmp    419171 <read_number+0xe6>
  41916a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  419171:	8b 55 f8             	mov    -0x8(%rbp),%edx
  419174:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  41917b:	89 d6                	mov    %edx,%esi
  41917d:	48 89 c7             	mov    %rax,%rdi
  419180:	e8 81 fe ff ff       	callq  419006 <readdigits>
  419185:	01 45 fc             	add    %eax,-0x4(%rbp)
  419188:	48 8d 95 0e ff ff ff 	lea    -0xf2(%rbp),%rdx
  41918f:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419196:	48 89 d6             	mov    %rdx,%rsi
  419199:	48 89 c7             	mov    %rax,%rdi
  41919c:	e8 12 fe ff ff       	callq  418fb3 <test2>
  4191a1:	85 c0                	test   %eax,%eax
  4191a3:	74 17                	je     4191bc <read_number+0x131>
  4191a5:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4191a8:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  4191af:	89 d6                	mov    %edx,%esi
  4191b1:	48 89 c7             	mov    %rax,%rdi
  4191b4:	e8 4d fe ff ff       	callq  419006 <readdigits>
  4191b9:	01 45 fc             	add    %eax,-0x4(%rbp)
  4191bc:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4191c0:	7e 50                	jle    419212 <read_number+0x187>
  4191c2:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4191c6:	74 07                	je     4191cf <read_number+0x144>
  4191c8:	ba 9f f0 43 00       	mov    $0x43f09f,%edx
  4191cd:	eb 05                	jmp    4191d4 <read_number+0x149>
  4191cf:	ba a2 f0 43 00       	mov    $0x43f0a2,%edx
  4191d4:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  4191db:	48 89 d6             	mov    %rdx,%rsi
  4191de:	48 89 c7             	mov    %rax,%rdi
  4191e1:	e8 cd fd ff ff       	callq  418fb3 <test2>
  4191e6:	85 c0                	test   %eax,%eax
  4191e8:	74 28                	je     419212 <read_number+0x187>
  4191ea:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  4191f1:	be 96 f0 43 00       	mov    $0x43f096,%esi
  4191f6:	48 89 c7             	mov    %rax,%rdi
  4191f9:	e8 b5 fd ff ff       	callq  418fb3 <test2>
  4191fe:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419205:	be 00 00 00 00       	mov    $0x0,%esi
  41920a:	48 89 c7             	mov    %rax,%rdi
  41920d:	e8 f4 fd ff ff       	callq  419006 <readdigits>
  419212:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  419219:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
  41921f:	48 89 d6             	mov    %rdx,%rsi
  419222:	89 c7                	mov    %eax,%edi
  419224:	e8 87 84 fe ff       	callq  4016b0 <ungetc@plt>
  419229:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  41922f:	48 98                	cltq   
  419231:	c6 84 05 20 ff ff ff 	movb   $0x0,-0xe0(%rbp,%rax,1)
  419238:	00 
  419239:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  419240:	48 8d 50 10          	lea    0x10(%rax),%rdx
  419244:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  41924b:	48 89 d6             	mov    %rdx,%rsi
  41924e:	48 89 c7             	mov    %rax,%rdi
  419251:	e8 72 95 fe ff       	callq  4027c8 <lua_stringtonumber>
  419256:	48 85 c0             	test   %rax,%rax
  419259:	0f 95 c0             	setne  %al
  41925c:	0f b6 c0             	movzbl %al,%eax
  41925f:	48 85 c0             	test   %rax,%rax
  419262:	74 07                	je     41926b <read_number+0x1e0>
  419264:	b8 01 00 00 00       	mov    $0x1,%eax
  419269:	eb 14                	jmp    41927f <read_number+0x1f4>
  41926b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  419272:	48 89 c7             	mov    %rax,%rdi
  419275:	e8 2b 9a fe ff       	callq  402ca5 <lua_pushnil>
  41927a:	b8 00 00 00 00       	mov    $0x0,%eax
  41927f:	c9                   	leaveq 
  419280:	c3                   	retq   

0000000000419281 <test_eof>:
  419281:	55                   	push   %rbp
  419282:	48 89 e5             	mov    %rsp,%rbp
  419285:	48 83 ec 20          	sub    $0x20,%rsp
  419289:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41928d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  419291:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419295:	48 89 c7             	mov    %rax,%rdi
  419298:	e8 73 84 fe ff       	callq  401710 <getc@plt>
  41929d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4192a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4192a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4192a7:	48 89 d6             	mov    %rdx,%rsi
  4192aa:	89 c7                	mov    %eax,%edi
  4192ac:	e8 ff 83 fe ff       	callq  4016b0 <ungetc@plt>
  4192b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4192b5:	be a5 f0 43 00       	mov    $0x43f0a5,%esi
  4192ba:	48 89 c7             	mov    %rax,%rdi
  4192bd:	e8 4c 9b fe ff       	callq  402e0e <lua_pushstring>
  4192c2:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  4192c6:	0f 95 c0             	setne  %al
  4192c9:	0f b6 c0             	movzbl %al,%eax
  4192cc:	c9                   	leaveq 
  4192cd:	c3                   	retq   

00000000004192ce <read_line>:
  4192ce:	55                   	push   %rbp
  4192cf:	48 89 e5             	mov    %rsp,%rbp
  4192d2:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  4192d9:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  4192e0:	48 89 b5 c0 fb ff ff 	mov    %rsi,-0x440(%rbp)
  4192e7:	89 95 bc fb ff ff    	mov    %edx,-0x444(%rbp)
  4192ed:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  4192f4:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4192fb:	48 89 d6             	mov    %rdx,%rsi
  4192fe:	48 89 c7             	mov    %rax,%rdi
  419301:	e8 83 dc fe ff       	callq  406f89 <luaL_buffinit>
  419306:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41930d:	be 00 04 00 00       	mov    $0x400,%esi
  419312:	48 89 c7             	mov    %rax,%rdi
  419315:	e8 5e da fe ff       	callq  406d78 <luaL_prepbuffsize>
  41931a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41931e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  419325:	eb 18                	jmp    41933f <read_line+0x71>
  419327:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41932a:	8d 50 01             	lea    0x1(%rax),%edx
  41932d:	89 55 f8             	mov    %edx,-0x8(%rbp)
  419330:	48 63 d0             	movslq %eax,%rdx
  419333:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  419337:	48 01 d0             	add    %rdx,%rax
  41933a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41933d:	88 10                	mov    %dl,(%rax)
  41933f:	81 7d f8 ff 03 00 00 	cmpl   $0x3ff,-0x8(%rbp)
  419346:	7f 1e                	jg     419366 <read_line+0x98>
  419348:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  41934f:	48 89 c7             	mov    %rax,%rdi
  419352:	e8 b9 83 fe ff       	callq  401710 <getc@plt>
  419357:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41935a:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  41935e:	74 06                	je     419366 <read_line+0x98>
  419360:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  419364:	75 c1                	jne    419327 <read_line+0x59>
  419366:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  41936d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  419370:	48 98                	cltq   
  419372:	48 01 d0             	add    %rdx,%rax
  419375:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  41937c:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  419380:	74 0a                	je     41938c <read_line+0xbe>
  419382:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  419386:	0f 85 7a ff ff ff    	jne    419306 <read_line+0x38>
  41938c:	83 bd bc fb ff ff 00 	cmpl   $0x0,-0x444(%rbp)
  419393:	75 52                	jne    4193e7 <read_line+0x119>
  419395:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  419399:	75 4c                	jne    4193e7 <read_line+0x119>
  41939b:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  4193a2:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  4193a9:	48 39 c2             	cmp    %rax,%rdx
  4193ac:	72 17                	jb     4193c5 <read_line+0xf7>
  4193ae:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  4193b5:	be 01 00 00 00       	mov    $0x1,%esi
  4193ba:	48 89 c7             	mov    %rax,%rdi
  4193bd:	e8 b6 d9 fe ff       	callq  406d78 <luaL_prepbuffsize>
  4193c2:	48 85 c0             	test   %rax,%rax
  4193c5:	90                   	nop
  4193c6:	48 8b 8d d0 fb ff ff 	mov    -0x430(%rbp),%rcx
  4193cd:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  4193d4:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4193d8:	48 89 95 e0 fb ff ff 	mov    %rdx,-0x420(%rbp)
  4193df:	48 01 c8             	add    %rcx,%rax
  4193e2:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4193e5:	88 10                	mov    %dl,(%rax)
  4193e7:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  4193ee:	48 89 c7             	mov    %rax,%rdi
  4193f1:	e8 49 da fe ff       	callq  406e3f <luaL_pushresult>
  4193f6:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  4193fa:	74 19                	je     419415 <read_line+0x147>
  4193fc:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  419403:	be ff ff ff ff       	mov    $0xffffffff,%esi
  419408:	48 89 c7             	mov    %rax,%rdi
  41940b:	e8 51 96 fe ff       	callq  402a61 <lua_rawlen>
  419410:	48 85 c0             	test   %rax,%rax
  419413:	74 07                	je     41941c <read_line+0x14e>
  419415:	b8 01 00 00 00       	mov    $0x1,%eax
  41941a:	eb 05                	jmp    419421 <read_line+0x153>
  41941c:	b8 00 00 00 00       	mov    $0x0,%eax
  419421:	c9                   	leaveq 
  419422:	c3                   	retq   

0000000000419423 <read_all>:
  419423:	55                   	push   %rbp
  419424:	48 89 e5             	mov    %rsp,%rbp
  419427:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  41942e:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  419435:	48 89 b5 c0 fb ff ff 	mov    %rsi,-0x440(%rbp)
  41943c:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  419443:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41944a:	48 89 d6             	mov    %rdx,%rsi
  41944d:	48 89 c7             	mov    %rax,%rdi
  419450:	e8 34 db fe ff       	callq  406f89 <luaL_buffinit>
  419455:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41945c:	be 00 04 00 00       	mov    $0x400,%esi
  419461:	48 89 c7             	mov    %rax,%rdi
  419464:	e8 0f d9 fe ff       	callq  406d78 <luaL_prepbuffsize>
  419469:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41946d:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
  419474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419478:	48 89 d1             	mov    %rdx,%rcx
  41947b:	ba 00 04 00 00       	mov    $0x400,%edx
  419480:	be 01 00 00 00       	mov    $0x1,%esi
  419485:	48 89 c7             	mov    %rax,%rdi
  419488:	e8 73 85 fe ff       	callq  401a00 <fread@plt>
  41948d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  419491:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  419498:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41949c:	48 01 d0             	add    %rdx,%rax
  41949f:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  4194a6:	48 81 7d f0 00 04 00 	cmpq   $0x400,-0x10(%rbp)
  4194ad:	00 
  4194ae:	74 a5                	je     419455 <read_all+0x32>
  4194b0:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  4194b7:	48 89 c7             	mov    %rax,%rdi
  4194ba:	e8 80 d9 fe ff       	callq  406e3f <luaL_pushresult>
  4194bf:	90                   	nop
  4194c0:	c9                   	leaveq 
  4194c1:	c3                   	retq   

00000000004194c2 <read_chars>:
  4194c2:	55                   	push   %rbp
  4194c3:	48 89 e5             	mov    %rsp,%rbp
  4194c6:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  4194cd:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  4194d4:	48 89 b5 c0 fb ff ff 	mov    %rsi,-0x440(%rbp)
  4194db:	48 89 95 b8 fb ff ff 	mov    %rdx,-0x448(%rbp)
  4194e2:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  4194e9:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4194f0:	48 89 d6             	mov    %rdx,%rsi
  4194f3:	48 89 c7             	mov    %rax,%rdi
  4194f6:	e8 8e da fe ff       	callq  406f89 <luaL_buffinit>
  4194fb:	48 8b 95 b8 fb ff ff 	mov    -0x448(%rbp),%rdx
  419502:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  419509:	48 89 d6             	mov    %rdx,%rsi
  41950c:	48 89 c7             	mov    %rax,%rdi
  41950f:	e8 64 d8 fe ff       	callq  406d78 <luaL_prepbuffsize>
  419514:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419518:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  41951f:	48 8b 95 b8 fb ff ff 	mov    -0x448(%rbp),%rdx
  419526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41952a:	be 01 00 00 00       	mov    $0x1,%esi
  41952f:	48 89 c7             	mov    %rax,%rdi
  419532:	e8 c9 84 fe ff       	callq  401a00 <fread@plt>
  419537:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41953b:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  419542:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  419546:	48 01 d0             	add    %rdx,%rax
  419549:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  419550:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  419557:	48 89 c7             	mov    %rax,%rdi
  41955a:	e8 e0 d8 fe ff       	callq  406e3f <luaL_pushresult>
  41955f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  419564:	0f 95 c0             	setne  %al
  419567:	0f b6 c0             	movzbl %al,%eax
  41956a:	c9                   	leaveq 
  41956b:	c3                   	retq   

000000000041956c <g_read>:
  41956c:	55                   	push   %rbp
  41956d:	48 89 e5             	mov    %rsp,%rbp
  419570:	48 83 ec 40          	sub    $0x40,%rsp
  419574:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  419578:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41957c:	89 55 cc             	mov    %edx,-0x34(%rbp)
  41957f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419583:	48 89 c7             	mov    %rax,%rdi
  419586:	e8 ce 89 fe ff       	callq  401f59 <lua_gettop>
  41958b:	83 e8 01             	sub    $0x1,%eax
  41958e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  419591:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419595:	48 89 c7             	mov    %rax,%rdi
  419598:	e8 33 81 fe ff       	callq  4016d0 <clearerr@plt>
  41959d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4195a1:	75 29                	jne    4195cc <g_read+0x60>
  4195a3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4195a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4195ab:	ba 01 00 00 00       	mov    $0x1,%edx
  4195b0:	48 89 ce             	mov    %rcx,%rsi
  4195b3:	48 89 c7             	mov    %rax,%rdi
  4195b6:	e8 13 fd ff ff       	callq  4192ce <read_line>
  4195bb:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4195be:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4195c1:	83 c0 01             	add    $0x1,%eax
  4195c4:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4195c7:	e9 81 01 00 00       	jmpq   41974d <g_read+0x1e1>
  4195cc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4195cf:	8d 48 14             	lea    0x14(%rax),%ecx
  4195d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4195d6:	ba 83 f0 43 00       	mov    $0x43f083,%edx
  4195db:	89 ce                	mov    %ecx,%esi
  4195dd:	48 89 c7             	mov    %rax,%rdi
  4195e0:	e8 eb d0 fe ff       	callq  4066d0 <luaL_checkstack>
  4195e5:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  4195ec:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4195ef:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4195f2:	e9 3f 01 00 00       	jmpq   419736 <g_read+0x1ca>
  4195f7:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4195fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4195fe:	89 d6                	mov    %edx,%esi
  419600:	48 89 c7             	mov    %rax,%rdi
  419603:	e8 6b 8d fe ff       	callq  402373 <lua_type>
  419608:	83 f8 03             	cmp    $0x3,%eax
  41960b:	75 50                	jne    41965d <g_read+0xf1>
  41960d:	8b 55 f8             	mov    -0x8(%rbp),%edx
  419610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419614:	89 d6                	mov    %edx,%esi
  419616:	48 89 c7             	mov    %rax,%rdi
  419619:	e8 79 d3 fe ff       	callq  406997 <luaL_checkinteger>
  41961e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  419622:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  419627:	75 15                	jne    41963e <g_read+0xd2>
  419629:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41962d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419631:	48 89 d6             	mov    %rdx,%rsi
  419634:	48 89 c7             	mov    %rax,%rdi
  419637:	e8 45 fc ff ff       	callq  419281 <test_eof>
  41963c:	eb 17                	jmp    419655 <g_read+0xe9>
  41963e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  419642:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  419646:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41964a:	48 89 ce             	mov    %rcx,%rsi
  41964d:	48 89 c7             	mov    %rax,%rdi
  419650:	e8 6d fe ff ff       	callq  4194c2 <read_chars>
  419655:	89 45 f4             	mov    %eax,-0xc(%rbp)
  419658:	e9 d5 00 00 00       	jmpq   419732 <g_read+0x1c6>
  41965d:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  419660:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419664:	ba 00 00 00 00       	mov    $0x0,%edx
  419669:	89 ce                	mov    %ecx,%esi
  41966b:	48 89 c7             	mov    %rax,%rdi
  41966e:	e8 59 d1 fe ff       	callq  4067cc <luaL_checklstring>
  419673:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  419677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41967b:	0f b6 00             	movzbl (%rax),%eax
  41967e:	3c 2a                	cmp    $0x2a,%al
  419680:	75 05                	jne    419687 <g_read+0x11b>
  419682:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  419687:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41968b:	0f b6 00             	movzbl (%rax),%eax
  41968e:	0f be c0             	movsbl %al,%eax
  419691:	83 f8 61             	cmp    $0x61,%eax
  419694:	74 68                	je     4196fe <g_read+0x192>
  419696:	83 f8 61             	cmp    $0x61,%eax
  419699:	7f 07                	jg     4196a2 <g_read+0x136>
  41969b:	83 f8 4c             	cmp    $0x4c,%eax
  41969e:	74 41                	je     4196e1 <g_read+0x175>
  4196a0:	eb 78                	jmp    41971a <g_read+0x1ae>
  4196a2:	83 f8 6c             	cmp    $0x6c,%eax
  4196a5:	74 1d                	je     4196c4 <g_read+0x158>
  4196a7:	83 f8 6e             	cmp    $0x6e,%eax
  4196aa:	75 6e                	jne    41971a <g_read+0x1ae>
  4196ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4196b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4196b4:	48 89 d6             	mov    %rdx,%rsi
  4196b7:	48 89 c7             	mov    %rax,%rdi
  4196ba:	e8 cc f9 ff ff       	callq  41908b <read_number>
  4196bf:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4196c2:	eb 6e                	jmp    419732 <g_read+0x1c6>
  4196c4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4196c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4196cc:	ba 01 00 00 00       	mov    $0x1,%edx
  4196d1:	48 89 ce             	mov    %rcx,%rsi
  4196d4:	48 89 c7             	mov    %rax,%rdi
  4196d7:	e8 f2 fb ff ff       	callq  4192ce <read_line>
  4196dc:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4196df:	eb 51                	jmp    419732 <g_read+0x1c6>
  4196e1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4196e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4196e9:	ba 00 00 00 00       	mov    $0x0,%edx
  4196ee:	48 89 ce             	mov    %rcx,%rsi
  4196f1:	48 89 c7             	mov    %rax,%rdi
  4196f4:	e8 d5 fb ff ff       	callq  4192ce <read_line>
  4196f9:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4196fc:	eb 34                	jmp    419732 <g_read+0x1c6>
  4196fe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  419702:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419706:	48 89 d6             	mov    %rdx,%rsi
  419709:	48 89 c7             	mov    %rax,%rdi
  41970c:	e8 12 fd ff ff       	callq  419423 <read_all>
  419711:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  419718:	eb 18                	jmp    419732 <g_read+0x1c6>
  41971a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  41971d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419721:	ba a6 f0 43 00       	mov    $0x43f0a6,%edx
  419726:	89 ce                	mov    %ecx,%esi
  419728:	48 89 c7             	mov    %rax,%rdi
  41972b:	e8 c2 c7 fe ff       	callq  405ef2 <luaL_argerror>
  419730:	eb 6c                	jmp    41979e <g_read+0x232>
  419732:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  419736:	8b 45 fc             	mov    -0x4(%rbp),%eax
  419739:	8d 50 ff             	lea    -0x1(%rax),%edx
  41973c:	89 55 fc             	mov    %edx,-0x4(%rbp)
  41973f:	85 c0                	test   %eax,%eax
  419741:	74 0a                	je     41974d <g_read+0x1e1>
  419743:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  419747:	0f 85 aa fe ff ff    	jne    4195f7 <g_read+0x8b>
  41974d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419751:	48 89 c7             	mov    %rax,%rdi
  419754:	e8 a7 83 fe ff       	callq  401b00 <ferror@plt>
  419759:	85 c0                	test   %eax,%eax
  41975b:	74 18                	je     419775 <g_read+0x209>
  41975d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419761:	ba 00 00 00 00       	mov    $0x0,%edx
  419766:	be 00 00 00 00       	mov    $0x0,%esi
  41976b:	48 89 c7             	mov    %rax,%rdi
  41976e:	e8 5c cb fe ff       	callq  4062cf <luaL_fileresult>
  419773:	eb 29                	jmp    41979e <g_read+0x232>
  419775:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  419779:	75 1d                	jne    419798 <g_read+0x22c>
  41977b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41977f:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  419784:	48 89 c7             	mov    %rax,%rdi
  419787:	e8 f8 87 fe ff       	callq  401f84 <lua_settop>
  41978c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419790:	48 89 c7             	mov    %rax,%rdi
  419793:	e8 0d 95 fe ff       	callq  402ca5 <lua_pushnil>
  419798:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41979b:	2b 45 cc             	sub    -0x34(%rbp),%eax
  41979e:	c9                   	leaveq 
  41979f:	c3                   	retq   

00000000004197a0 <io_read>:
  4197a0:	55                   	push   %rbp
  4197a1:	48 89 e5             	mov    %rsp,%rbp
  4197a4:	48 83 ec 10          	sub    $0x10,%rsp
  4197a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4197ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4197b0:	be 77 f0 43 00       	mov    $0x43f077,%esi
  4197b5:	48 89 c7             	mov    %rax,%rdi
  4197b8:	e8 eb f3 ff ff       	callq  418ba8 <getiofile>
  4197bd:	48 89 c1             	mov    %rax,%rcx
  4197c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4197c4:	ba 01 00 00 00       	mov    $0x1,%edx
  4197c9:	48 89 ce             	mov    %rcx,%rsi
  4197cc:	48 89 c7             	mov    %rax,%rdi
  4197cf:	e8 98 fd ff ff       	callq  41956c <g_read>
  4197d4:	c9                   	leaveq 
  4197d5:	c3                   	retq   

00000000004197d6 <f_read>:
  4197d6:	55                   	push   %rbp
  4197d7:	48 89 e5             	mov    %rsp,%rbp
  4197da:	48 83 ec 10          	sub    $0x10,%rsp
  4197de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4197e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4197e6:	48 89 c7             	mov    %rax,%rdi
  4197e9:	e8 84 ee ff ff       	callq  418672 <tofile>
  4197ee:	48 89 c1             	mov    %rax,%rcx
  4197f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4197f5:	ba 02 00 00 00       	mov    $0x2,%edx
  4197fa:	48 89 ce             	mov    %rcx,%rsi
  4197fd:	48 89 c7             	mov    %rax,%rdi
  419800:	e8 67 fd ff ff       	callq  41956c <g_read>
  419805:	c9                   	leaveq 
  419806:	c3                   	retq   

0000000000419807 <io_readline>:
  419807:	55                   	push   %rbp
  419808:	48 89 e5             	mov    %rsp,%rbp
  41980b:	48 83 ec 30          	sub    $0x30,%rsp
  41980f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  419813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419817:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  41981c:	48 89 c7             	mov    %rax,%rdi
  41981f:	e8 93 93 fe ff       	callq  402bb7 <lua_touserdata>
  419824:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  419828:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41982c:	ba 00 00 00 00       	mov    $0x0,%edx
  419831:	be d6 b9 f0 ff       	mov    $0xfff0b9d6,%esi
  419836:	48 89 c7             	mov    %rax,%rdi
  419839:	e8 57 90 fe ff       	callq  402895 <lua_tointegerx>
  41983e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  419841:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  419845:	48 8b 40 08          	mov    0x8(%rax),%rax
  419849:	48 85 c0             	test   %rax,%rax
  41984c:	75 1b                	jne    419869 <io_readline+0x62>
  41984e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419852:	be b5 f0 43 00       	mov    $0x43f0b5,%esi
  419857:	48 89 c7             	mov    %rax,%rdi
  41985a:	b8 00 00 00 00       	mov    $0x0,%eax
  41985f:	e8 8c c9 fe ff       	callq  4061f0 <luaL_error>
  419864:	e9 19 01 00 00       	jmpq   419982 <io_readline+0x17b>
  419869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41986d:	be 01 00 00 00       	mov    $0x1,%esi
  419872:	48 89 c7             	mov    %rax,%rdi
  419875:	e8 0a 87 fe ff       	callq  401f84 <lua_settop>
  41987a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  41987d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419881:	ba 83 f0 43 00       	mov    $0x43f083,%edx
  419886:	89 ce                	mov    %ecx,%esi
  419888:	48 89 c7             	mov    %rax,%rdi
  41988b:	e8 40 ce fe ff       	callq  4066d0 <luaL_checkstack>
  419890:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  419897:	eb 1c                	jmp    4198b5 <io_readline+0xae>
  419899:	b8 d5 b9 f0 ff       	mov    $0xfff0b9d5,%eax
  41989e:	2b 45 fc             	sub    -0x4(%rbp),%eax
  4198a1:	89 c2                	mov    %eax,%edx
  4198a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4198a7:	89 d6                	mov    %edx,%esi
  4198a9:	48 89 c7             	mov    %rax,%rdi
  4198ac:	e8 5e 8a fe ff       	callq  40230f <lua_pushvalue>
  4198b1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4198b5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4198b8:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  4198bb:	7e dc                	jle    419899 <io_readline+0x92>
  4198bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4198c1:	48 8b 08             	mov    (%rax),%rcx
  4198c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4198c8:	ba 02 00 00 00       	mov    $0x2,%edx
  4198cd:	48 89 ce             	mov    %rcx,%rsi
  4198d0:	48 89 c7             	mov    %rax,%rdi
  4198d3:	e8 94 fc ff ff       	callq  41956c <g_read>
  4198d8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4198db:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4198de:	f7 d8                	neg    %eax
  4198e0:	89 c2                	mov    %eax,%edx
  4198e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4198e6:	89 d6                	mov    %edx,%esi
  4198e8:	48 89 c7             	mov    %rax,%rdi
  4198eb:	e8 2d 90 fe ff       	callq  40291d <lua_toboolean>
  4198f0:	85 c0                	test   %eax,%eax
  4198f2:	74 08                	je     4198fc <io_readline+0xf5>
  4198f4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4198f7:	e9 86 00 00 00       	jmpq   419982 <io_readline+0x17b>
  4198fc:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  419900:	7e 38                	jle    41993a <io_readline+0x133>
  419902:	b8 01 00 00 00       	mov    $0x1,%eax
  419907:	2b 45 ec             	sub    -0x14(%rbp),%eax
  41990a:	89 c1                	mov    %eax,%ecx
  41990c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419910:	ba 00 00 00 00       	mov    $0x0,%edx
  419915:	89 ce                	mov    %ecx,%esi
  419917:	48 89 c7             	mov    %rax,%rdi
  41991a:	e8 4e 90 fe ff       	callq  40296d <lua_tolstring>
  41991f:	48 89 c2             	mov    %rax,%rdx
  419922:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419926:	be cc f0 43 00       	mov    $0x43f0cc,%esi
  41992b:	48 89 c7             	mov    %rax,%rdi
  41992e:	b8 00 00 00 00       	mov    $0x0,%eax
  419933:	e8 b8 c8 fe ff       	callq  4061f0 <luaL_error>
  419938:	eb 48                	jmp    419982 <io_readline+0x17b>
  41993a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41993e:	be d5 b9 f0 ff       	mov    $0xfff0b9d5,%esi
  419943:	48 89 c7             	mov    %rax,%rdi
  419946:	e8 d2 8f fe ff       	callq  40291d <lua_toboolean>
  41994b:	85 c0                	test   %eax,%eax
  41994d:	74 2e                	je     41997d <io_readline+0x176>
  41994f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419953:	be 00 00 00 00       	mov    $0x0,%esi
  419958:	48 89 c7             	mov    %rax,%rdi
  41995b:	e8 24 86 fe ff       	callq  401f84 <lua_settop>
  419960:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419964:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  419969:	48 89 c7             	mov    %rax,%rdi
  41996c:	e8 9e 89 fe ff       	callq  40230f <lua_pushvalue>
  419971:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419975:	48 89 c7             	mov    %rax,%rdi
  419978:	e8 99 ed ff ff       	callq  418716 <aux_close>
  41997d:	b8 00 00 00 00       	mov    $0x0,%eax
  419982:	c9                   	leaveq 
  419983:	c3                   	retq   

0000000000419984 <g_write>:
  419984:	55                   	push   %rbp
  419985:	48 89 e5             	mov    %rsp,%rbp
  419988:	48 83 ec 40          	sub    $0x40,%rsp
  41998c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  419990:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  419994:	89 55 cc             	mov    %edx,-0x34(%rbp)
  419997:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41999b:	48 89 c7             	mov    %rax,%rdi
  41999e:	e8 b6 85 fe ff       	callq  401f59 <lua_gettop>
  4199a3:	2b 45 cc             	sub    -0x34(%rbp),%eax
  4199a6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4199a9:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  4199b0:	e9 03 01 00 00       	jmpq   419ab8 <g_write+0x134>
  4199b5:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4199b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4199bc:	89 d6                	mov    %edx,%esi
  4199be:	48 89 c7             	mov    %rax,%rdi
  4199c1:	e8 ad 89 fe ff       	callq  402373 <lua_type>
  4199c6:	83 f8 03             	cmp    $0x3,%eax
  4199c9:	0f 85 92 00 00 00    	jne    419a61 <g_write+0xdd>
  4199cf:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4199d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4199d6:	89 d6                	mov    %edx,%esi
  4199d8:	48 89 c7             	mov    %rax,%rdi
  4199db:	e8 59 8a fe ff       	callq  402439 <lua_isinteger>
  4199e0:	85 c0                	test   %eax,%eax
  4199e2:	74 31                	je     419a15 <g_write+0x91>
  4199e4:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4199e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4199eb:	ba 00 00 00 00       	mov    $0x0,%edx
  4199f0:	89 ce                	mov    %ecx,%esi
  4199f2:	48 89 c7             	mov    %rax,%rdi
  4199f5:	e8 9b 8e fe ff       	callq  402895 <lua_tointegerx>
  4199fa:	48 89 c2             	mov    %rax,%rdx
  4199fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419a01:	be cf f0 43 00       	mov    $0x43f0cf,%esi
  419a06:	48 89 c7             	mov    %rax,%rdi
  419a09:	b8 00 00 00 00       	mov    $0x0,%eax
  419a0e:	e8 bd 7f fe ff       	callq  4019d0 <fprintf@plt>
  419a13:	eb 2c                	jmp    419a41 <g_write+0xbd>
  419a15:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  419a18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419a1c:	ba 00 00 00 00       	mov    $0x0,%edx
  419a21:	89 ce                	mov    %ecx,%esi
  419a23:	48 89 c7             	mov    %rax,%rdi
  419a26:	e8 ec 8d fe ff       	callq  402817 <lua_tonumberx>
  419a2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419a2f:	be d4 f0 43 00       	mov    $0x43f0d4,%esi
  419a34:	48 89 c7             	mov    %rax,%rdi
  419a37:	b8 01 00 00 00       	mov    $0x1,%eax
  419a3c:	e8 8f 7f fe ff       	callq  4019d0 <fprintf@plt>
  419a41:	89 45 f4             	mov    %eax,-0xc(%rbp)
  419a44:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  419a48:	74 0d                	je     419a57 <g_write+0xd3>
  419a4a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  419a4e:	7e 07                	jle    419a57 <g_write+0xd3>
  419a50:	b8 01 00 00 00       	mov    $0x1,%eax
  419a55:	eb 05                	jmp    419a5c <g_write+0xd8>
  419a57:	b8 00 00 00 00       	mov    $0x0,%eax
  419a5c:	89 45 f8             	mov    %eax,-0x8(%rbp)
  419a5f:	eb 53                	jmp    419ab4 <g_write+0x130>
  419a61:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  419a65:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  419a68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419a6c:	89 ce                	mov    %ecx,%esi
  419a6e:	48 89 c7             	mov    %rax,%rdi
  419a71:	e8 56 cd fe ff       	callq  4067cc <luaL_checklstring>
  419a76:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  419a7a:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  419a7e:	74 2c                	je     419aac <g_write+0x128>
  419a80:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  419a84:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  419a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419a8c:	be 01 00 00 00       	mov    $0x1,%esi
  419a91:	48 89 c7             	mov    %rax,%rdi
  419a94:	e8 87 80 fe ff       	callq  401b20 <fwrite@plt>
  419a99:	48 89 c2             	mov    %rax,%rdx
  419a9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419aa0:	48 39 c2             	cmp    %rax,%rdx
  419aa3:	75 07                	jne    419aac <g_write+0x128>
  419aa5:	b8 01 00 00 00       	mov    $0x1,%eax
  419aaa:	eb 05                	jmp    419ab1 <g_write+0x12d>
  419aac:	b8 00 00 00 00       	mov    $0x0,%eax
  419ab1:	89 45 f8             	mov    %eax,-0x8(%rbp)
  419ab4:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
  419ab8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  419abb:	8d 50 ff             	lea    -0x1(%rax),%edx
  419abe:	89 55 fc             	mov    %edx,-0x4(%rbp)
  419ac1:	85 c0                	test   %eax,%eax
  419ac3:	0f 85 ec fe ff ff    	jne    4199b5 <g_write+0x31>
  419ac9:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  419acd:	0f 95 c0             	setne  %al
  419ad0:	0f b6 c0             	movzbl %al,%eax
  419ad3:	48 85 c0             	test   %rax,%rax
  419ad6:	74 07                	je     419adf <g_write+0x15b>
  419ad8:	b8 01 00 00 00       	mov    $0x1,%eax
  419add:	eb 16                	jmp    419af5 <g_write+0x171>
  419adf:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  419ae2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419ae6:	ba 00 00 00 00       	mov    $0x0,%edx
  419aeb:	89 ce                	mov    %ecx,%esi
  419aed:	48 89 c7             	mov    %rax,%rdi
  419af0:	e8 da c7 fe ff       	callq  4062cf <luaL_fileresult>
  419af5:	c9                   	leaveq 
  419af6:	c3                   	retq   

0000000000419af7 <io_write>:
  419af7:	55                   	push   %rbp
  419af8:	48 89 e5             	mov    %rsp,%rbp
  419afb:	48 83 ec 10          	sub    $0x10,%rsp
  419aff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  419b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419b07:	be 12 f0 43 00       	mov    $0x43f012,%esi
  419b0c:	48 89 c7             	mov    %rax,%rdi
  419b0f:	e8 94 f0 ff ff       	callq  418ba8 <getiofile>
  419b14:	48 89 c1             	mov    %rax,%rcx
  419b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419b1b:	ba 01 00 00 00       	mov    $0x1,%edx
  419b20:	48 89 ce             	mov    %rcx,%rsi
  419b23:	48 89 c7             	mov    %rax,%rdi
  419b26:	e8 59 fe ff ff       	callq  419984 <g_write>
  419b2b:	c9                   	leaveq 
  419b2c:	c3                   	retq   

0000000000419b2d <f_write>:
  419b2d:	55                   	push   %rbp
  419b2e:	48 89 e5             	mov    %rsp,%rbp
  419b31:	48 83 ec 20          	sub    $0x20,%rsp
  419b35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  419b39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419b3d:	48 89 c7             	mov    %rax,%rdi
  419b40:	e8 2d eb ff ff       	callq  418672 <tofile>
  419b45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419b49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419b4d:	be 01 00 00 00       	mov    $0x1,%esi
  419b52:	48 89 c7             	mov    %rax,%rdi
  419b55:	e8 b5 87 fe ff       	callq  40230f <lua_pushvalue>
  419b5a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  419b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419b62:	ba 02 00 00 00       	mov    $0x2,%edx
  419b67:	48 89 ce             	mov    %rcx,%rsi
  419b6a:	48 89 c7             	mov    %rax,%rdi
  419b6d:	e8 12 fe ff ff       	callq  419984 <g_write>
  419b72:	c9                   	leaveq 
  419b73:	c3                   	retq   

0000000000419b74 <f_seek>:
  419b74:	55                   	push   %rbp
  419b75:	48 89 e5             	mov    %rsp,%rbp
  419b78:	48 83 ec 30          	sub    $0x30,%rsp
  419b7c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  419b80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419b84:	48 89 c7             	mov    %rax,%rdi
  419b87:	e8 e6 ea ff ff       	callq  418672 <tofile>
  419b8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419b90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419b94:	b9 80 f3 43 00       	mov    $0x43f380,%ecx
  419b99:	ba da f0 43 00       	mov    $0x43f0da,%edx
  419b9e:	be 02 00 00 00       	mov    $0x2,%esi
  419ba3:	48 89 c7             	mov    %rax,%rdi
  419ba6:	e8 4b ca fe ff       	callq  4065f6 <luaL_checkoption>
  419bab:	89 45 f4             	mov    %eax,-0xc(%rbp)
  419bae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419bb2:	ba 00 00 00 00       	mov    $0x0,%edx
  419bb7:	be 03 00 00 00       	mov    $0x3,%esi
  419bbc:	48 89 c7             	mov    %rax,%rdi
  419bbf:	e8 22 ce fe ff       	callq  4069e6 <luaL_optinteger>
  419bc4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  419bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419bcc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  419bd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419bd4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  419bd8:	0f 94 c0             	sete   %al
  419bdb:	0f b6 c0             	movzbl %al,%eax
  419bde:	48 85 c0             	test   %rax,%rax
  419be1:	75 18                	jne    419bfb <f_seek+0x87>
  419be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419be7:	ba e0 f0 43 00       	mov    $0x43f0e0,%edx
  419bec:	be 03 00 00 00       	mov    $0x3,%esi
  419bf1:	48 89 c7             	mov    %rax,%rdi
  419bf4:	e8 f9 c2 fe ff       	callq  405ef2 <luaL_argerror>
  419bf9:	85 c0                	test   %eax,%eax
  419bfb:	90                   	nop
  419bfc:	8b 45 f4             	mov    -0xc(%rbp),%eax
  419bff:	48 98                	cltq   
  419c01:	8b 14 85 a0 f3 43 00 	mov    0x43f3a0(,%rax,4),%edx
  419c08:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  419c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419c10:	48 89 ce             	mov    %rcx,%rsi
  419c13:	48 89 c7             	mov    %rax,%rdi
  419c16:	e8 f5 7c fe ff       	callq  401910 <fseek@plt>
  419c1b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  419c1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  419c22:	0f 95 c0             	setne  %al
  419c25:	0f b6 c0             	movzbl %al,%eax
  419c28:	48 85 c0             	test   %rax,%rax
  419c2b:	74 18                	je     419c45 <f_seek+0xd1>
  419c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419c31:	ba 00 00 00 00       	mov    $0x0,%edx
  419c36:	be 00 00 00 00       	mov    $0x0,%esi
  419c3b:	48 89 c7             	mov    %rax,%rdi
  419c3e:	e8 8c c6 fe ff       	callq  4062cf <luaL_fileresult>
  419c43:	eb 23                	jmp    419c68 <f_seek+0xf4>
  419c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419c49:	48 89 c7             	mov    %rax,%rdi
  419c4c:	e8 1f 7a fe ff       	callq  401670 <ftell@plt>
  419c51:	48 89 c2             	mov    %rax,%rdx
  419c54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419c58:	48 89 d6             	mov    %rdx,%rsi
  419c5b:	48 89 c7             	mov    %rax,%rdi
  419c5e:	e8 b2 90 fe ff       	callq  402d15 <lua_pushinteger>
  419c63:	b8 01 00 00 00       	mov    $0x1,%eax
  419c68:	c9                   	leaveq 
  419c69:	c3                   	retq   

0000000000419c6a <f_setvbuf>:
  419c6a:	55                   	push   %rbp
  419c6b:	48 89 e5             	mov    %rsp,%rbp
  419c6e:	48 83 ec 30          	sub    $0x30,%rsp
  419c72:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  419c76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419c7a:	48 89 c7             	mov    %rax,%rdi
  419c7d:	e8 f0 e9 ff ff       	callq  418672 <tofile>
  419c82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419c86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419c8a:	b9 c0 f3 43 00       	mov    $0x43f3c0,%ecx
  419c8f:	ba 00 00 00 00       	mov    $0x0,%edx
  419c94:	be 02 00 00 00       	mov    $0x2,%esi
  419c99:	48 89 c7             	mov    %rax,%rdi
  419c9c:	e8 55 c9 fe ff       	callq  4065f6 <luaL_checkoption>
  419ca1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  419ca4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419ca8:	ba 00 04 00 00       	mov    $0x400,%edx
  419cad:	be 03 00 00 00       	mov    $0x3,%esi
  419cb2:	48 89 c7             	mov    %rax,%rdi
  419cb5:	e8 2c cd fe ff       	callq  4069e6 <luaL_optinteger>
  419cba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  419cbe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  419cc2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  419cc5:	48 98                	cltq   
  419cc7:	8b 14 85 e0 f3 43 00 	mov    0x43f3e0(,%rax,4),%edx
  419cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419cd2:	be 00 00 00 00       	mov    $0x0,%esi
  419cd7:	48 89 c7             	mov    %rax,%rdi
  419cda:	e8 a1 79 fe ff       	callq  401680 <setvbuf@plt>
  419cdf:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  419ce2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  419ce6:	0f 94 c0             	sete   %al
  419ce9:	0f b6 c8             	movzbl %al,%ecx
  419cec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  419cf0:	ba 00 00 00 00       	mov    $0x0,%edx
  419cf5:	89 ce                	mov    %ecx,%esi
  419cf7:	48 89 c7             	mov    %rax,%rdi
  419cfa:	e8 d0 c5 fe ff       	callq  4062cf <luaL_fileresult>
  419cff:	c9                   	leaveq 
  419d00:	c3                   	retq   

0000000000419d01 <io_flush>:
  419d01:	55                   	push   %rbp
  419d02:	48 89 e5             	mov    %rsp,%rbp
  419d05:	48 83 ec 10          	sub    $0x10,%rsp
  419d09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  419d0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419d11:	be 12 f0 43 00       	mov    $0x43f012,%esi
  419d16:	48 89 c7             	mov    %rax,%rdi
  419d19:	e8 8a ee ff ff       	callq  418ba8 <getiofile>
  419d1e:	48 89 c7             	mov    %rax,%rdi
  419d21:	e8 2a 7c fe ff       	callq  401950 <fflush@plt>
  419d26:	85 c0                	test   %eax,%eax
  419d28:	0f 94 c0             	sete   %al
  419d2b:	0f b6 c8             	movzbl %al,%ecx
  419d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419d32:	ba 00 00 00 00       	mov    $0x0,%edx
  419d37:	89 ce                	mov    %ecx,%esi
  419d39:	48 89 c7             	mov    %rax,%rdi
  419d3c:	e8 8e c5 fe ff       	callq  4062cf <luaL_fileresult>
  419d41:	c9                   	leaveq 
  419d42:	c3                   	retq   

0000000000419d43 <f_flush>:
  419d43:	55                   	push   %rbp
  419d44:	48 89 e5             	mov    %rsp,%rbp
  419d47:	48 83 ec 10          	sub    $0x10,%rsp
  419d4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  419d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419d53:	48 89 c7             	mov    %rax,%rdi
  419d56:	e8 17 e9 ff ff       	callq  418672 <tofile>
  419d5b:	48 89 c7             	mov    %rax,%rdi
  419d5e:	e8 ed 7b fe ff       	callq  401950 <fflush@plt>
  419d63:	85 c0                	test   %eax,%eax
  419d65:	0f 94 c0             	sete   %al
  419d68:	0f b6 c8             	movzbl %al,%ecx
  419d6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419d6f:	ba 00 00 00 00       	mov    $0x0,%edx
  419d74:	89 ce                	mov    %ecx,%esi
  419d76:	48 89 c7             	mov    %rax,%rdi
  419d79:	e8 51 c5 fe ff       	callq  4062cf <luaL_fileresult>
  419d7e:	c9                   	leaveq 
  419d7f:	c3                   	retq   

0000000000419d80 <createmeta>:
  419d80:	55                   	push   %rbp
  419d81:	48 89 e5             	mov    %rsp,%rbp
  419d84:	48 83 ec 10          	sub    $0x10,%rsp
  419d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  419d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419d90:	be c6 ef 43 00       	mov    $0x43efc6,%esi
  419d95:	48 89 c7             	mov    %rax,%rdi
  419d98:	e8 80 c6 fe ff       	callq  40641d <luaL_newmetatable>
  419d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419da1:	ba 00 00 00 00       	mov    $0x0,%edx
  419da6:	be e0 f2 43 00       	mov    $0x43f2e0,%esi
  419dab:	48 89 c7             	mov    %rax,%rdi
  419dae:	e8 77 dd fe ff       	callq  407b2a <luaL_setfuncs>
  419db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419db7:	ba 07 00 00 00       	mov    $0x7,%edx
  419dbc:	be 00 00 00 00       	mov    $0x0,%esi
  419dc1:	48 89 c7             	mov    %rax,%rdi
  419dc4:	e8 4f 9a fe ff       	callq  403818 <lua_createtable>
  419dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419dcd:	ba 00 00 00 00       	mov    $0x0,%edx
  419dd2:	be 40 f2 43 00       	mov    $0x43f240,%esi
  419dd7:	48 89 c7             	mov    %rax,%rdi
  419dda:	e8 4b dd fe ff       	callq  407b2a <luaL_setfuncs>
  419ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419de3:	ba c0 f2 43 00       	mov    $0x43f2c0,%edx
  419de8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  419ded:	48 89 c7             	mov    %rax,%rdi
  419df0:	e8 dd 9f fe ff       	callq  403dd2 <lua_setfield>
  419df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419df9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  419dfe:	48 89 c7             	mov    %rax,%rdi
  419e01:	e8 7e 81 fe ff       	callq  401f84 <lua_settop>
  419e06:	90                   	nop
  419e07:	c9                   	leaveq 
  419e08:	c3                   	retq   

0000000000419e09 <io_noclose>:
  419e09:	55                   	push   %rbp
  419e0a:	48 89 e5             	mov    %rsp,%rbp
  419e0d:	48 83 ec 20          	sub    $0x20,%rsp
  419e11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  419e15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419e19:	ba c6 ef 43 00       	mov    $0x43efc6,%edx
  419e1e:	be 01 00 00 00       	mov    $0x1,%esi
  419e23:	48 89 c7             	mov    %rax,%rdi
  419e26:	e8 71 c7 fe ff       	callq  40659c <luaL_checkudata>
  419e2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419e33:	48 c7 40 08 09 9e 41 	movq   $0x419e09,0x8(%rax)
  419e3a:	00 
  419e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419e3f:	48 89 c7             	mov    %rax,%rdi
  419e42:	e8 5e 8e fe ff       	callq  402ca5 <lua_pushnil>
  419e47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419e4b:	be 30 f3 43 00       	mov    $0x43f330,%esi
  419e50:	48 89 c7             	mov    %rax,%rdi
  419e53:	e8 b6 8f fe ff       	callq  402e0e <lua_pushstring>
  419e58:	b8 02 00 00 00       	mov    $0x2,%eax
  419e5d:	c9                   	leaveq 
  419e5e:	c3                   	retq   

0000000000419e5f <createstdfile>:
  419e5f:	55                   	push   %rbp
  419e60:	48 89 e5             	mov    %rsp,%rbp
  419e63:	48 83 ec 30          	sub    $0x30,%rsp
  419e67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  419e6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  419e6f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  419e73:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  419e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419e7b:	48 89 c7             	mov    %rax,%rdi
  419e7e:	e8 4a e8 ff ff       	callq  4186cd <newprefile>
  419e83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419e8b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  419e8f:	48 89 10             	mov    %rdx,(%rax)
  419e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419e96:	48 c7 40 08 09 9e 41 	movq   $0x419e09,0x8(%rax)
  419e9d:	00 
  419e9e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  419ea3:	74 26                	je     419ecb <createstdfile+0x6c>
  419ea5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419ea9:	be ff ff ff ff       	mov    $0xffffffff,%esi
  419eae:	48 89 c7             	mov    %rax,%rdi
  419eb1:	e8 59 84 fe ff       	callq  40230f <lua_pushvalue>
  419eb6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  419eba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419ebe:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  419ec3:	48 89 c7             	mov    %rax,%rdi
  419ec6:	e8 07 9f fe ff       	callq  403dd2 <lua_setfield>
  419ecb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  419ecf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419ed3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  419ed8:	48 89 c7             	mov    %rax,%rdi
  419edb:	e8 f2 9e fe ff       	callq  403dd2 <lua_setfield>
  419ee0:	90                   	nop
  419ee1:	c9                   	leaveq 
  419ee2:	c3                   	retq   

0000000000419ee3 <luaopen_io>:
  419ee3:	55                   	push   %rbp
  419ee4:	48 89 e5             	mov    %rsp,%rbp
  419ee7:	48 83 ec 10          	sub    $0x10,%rsp
  419eeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  419eef:	f2 0f 10 05 f9 54 02 	movsd  0x254f9(%rip),%xmm0        # 43f3f0 <mode.3656+0x10>
  419ef6:	00 
  419ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419efb:	be 88 00 00 00       	mov    $0x88,%esi
  419f00:	48 89 c7             	mov    %rax,%rdi
  419f03:	e8 c9 e2 fe ff       	callq  4081d1 <luaL_checkversion_>
  419f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f0c:	ba 0b 00 00 00       	mov    $0xb,%edx
  419f11:	be 00 00 00 00       	mov    $0x0,%esi
  419f16:	48 89 c7             	mov    %rax,%rdi
  419f19:	e8 fa 98 fe ff       	callq  403818 <lua_createtable>
  419f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f22:	ba 00 00 00 00       	mov    $0x0,%edx
  419f27:	be 60 f1 43 00       	mov    $0x43f160,%esi
  419f2c:	48 89 c7             	mov    %rax,%rdi
  419f2f:	e8 f6 db fe ff       	callq  407b2a <luaL_setfuncs>
  419f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f38:	48 89 c7             	mov    %rax,%rdi
  419f3b:	e8 40 fe ff ff       	callq  419d80 <createmeta>
  419f40:	48 8b 35 69 53 23 00 	mov    0x235369(%rip),%rsi        # 64f2b0 <stdin@@GLIBC_2.2.5>
  419f47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f4b:	b9 4b f3 43 00       	mov    $0x43f34b,%ecx
  419f50:	ba 77 f0 43 00       	mov    $0x43f077,%edx
  419f55:	48 89 c7             	mov    %rax,%rdi
  419f58:	e8 02 ff ff ff       	callq  419e5f <createstdfile>
  419f5d:	48 8b 35 3c 53 23 00 	mov    0x23533c(%rip),%rsi        # 64f2a0 <stdout@@GLIBC_2.2.5>
  419f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f68:	b9 51 f3 43 00       	mov    $0x43f351,%ecx
  419f6d:	ba 12 f0 43 00       	mov    $0x43f012,%edx
  419f72:	48 89 c7             	mov    %rax,%rdi
  419f75:	e8 e5 fe ff ff       	callq  419e5f <createstdfile>
  419f7a:	48 8b 35 3f 53 23 00 	mov    0x23533f(%rip),%rsi        # 64f2c0 <stderr@@GLIBC_2.2.5>
  419f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419f85:	b9 58 f3 43 00       	mov    $0x43f358,%ecx
  419f8a:	ba 00 00 00 00       	mov    $0x0,%edx
  419f8f:	48 89 c7             	mov    %rax,%rdi
  419f92:	e8 c8 fe ff ff       	callq  419e5f <createstdfile>
  419f97:	b8 01 00 00 00       	mov    $0x1,%eax
  419f9c:	c9                   	leaveq 
  419f9d:	c3                   	retq   

0000000000419f9e <save>:
  419f9e:	55                   	push   %rbp
  419f9f:	48 89 e5             	mov    %rsp,%rbp
  419fa2:	48 83 ec 20          	sub    $0x20,%rsp
  419fa6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  419faa:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  419fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419fb1:	48 8b 40 48          	mov    0x48(%rax),%rax
  419fb5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  419fb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419fbd:	48 8b 40 08          	mov    0x8(%rax),%rax
  419fc1:	48 8d 50 01          	lea    0x1(%rax),%rdx
  419fc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419fc9:	48 8b 40 10          	mov    0x10(%rax),%rax
  419fcd:	48 39 c2             	cmp    %rax,%rdx
  419fd0:	76 75                	jbe    41a047 <save+0xa9>
  419fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  419fd6:	48 8b 40 10          	mov    0x10(%rax),%rax
  419fda:	48 ba fe ff ff ff ff 	movabs $0x3ffffffffffffffe,%rdx
  419fe1:	ff ff 3f 
  419fe4:	48 39 d0             	cmp    %rdx,%rax
  419fe7:	76 16                	jbe    419fff <save+0x61>
  419fe9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419fed:	ba 00 00 00 00       	mov    $0x0,%edx
  419ff2:	be e8 f5 43 00       	mov    $0x43f5e8,%esi
  419ff7:	48 89 c7             	mov    %rax,%rdi
  419ffa:	e8 18 02 00 00       	callq  41a217 <lexerror>
  419fff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a003:	48 8b 40 10          	mov    0x10(%rax),%rax
  41a007:	48 01 c0             	add    %rax,%rax
  41a00a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41a00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a012:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41a016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a01a:	48 8b 30             	mov    (%rax),%rsi
  41a01d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a021:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a025:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a029:	48 89 c7             	mov    %rax,%rdi
  41a02c:	e8 dc 31 00 00       	callq  41d20d <luaM_saferealloc_>
  41a031:	48 89 c2             	mov    %rax,%rdx
  41a034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a038:	48 89 10             	mov    %rdx,(%rax)
  41a03b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a03f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a043:	48 89 50 10          	mov    %rdx,0x10(%rax)
  41a047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a04b:	48 8b 30             	mov    (%rax),%rsi
  41a04e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a052:	48 8b 40 08          	mov    0x8(%rax),%rax
  41a056:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a05a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a05e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a062:	48 01 f0             	add    %rsi,%rax
  41a065:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41a068:	88 10                	mov    %dl,(%rax)
  41a06a:	90                   	nop
  41a06b:	c9                   	leaveq 
  41a06c:	c3                   	retq   

000000000041a06d <luaX_init>:
  41a06d:	55                   	push   %rbp
  41a06e:	48 89 e5             	mov    %rsp,%rbp
  41a071:	48 83 ec 30          	sub    $0x30,%rsp
  41a075:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41a079:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a07d:	ba 04 00 00 00       	mov    $0x4,%edx
  41a082:	be 01 f6 43 00       	mov    $0x43f601,%esi
  41a087:	48 89 c7             	mov    %rax,%rdi
  41a08a:	e8 8c cf 00 00       	callq  42701b <luaS_newlstr>
  41a08f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41a093:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a097:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a09b:	48 89 d6             	mov    %rdx,%rsi
  41a09e:	48 89 c7             	mov    %rax,%rdi
  41a0a1:	e8 e8 aa ff ff       	callq  414b8e <luaC_fix>
  41a0a6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41a0ad:	eb 44                	jmp    41a0f3 <luaX_init+0x86>
  41a0af:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a0b2:	48 98                	cltq   
  41a0b4:	48 8b 14 c5 c0 f4 43 	mov    0x43f4c0(,%rax,8),%rdx
  41a0bb:	00 
  41a0bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a0c0:	48 89 d6             	mov    %rdx,%rsi
  41a0c3:	48 89 c7             	mov    %rax,%rdi
  41a0c6:	e8 e1 cf 00 00       	callq  4270ac <luaS_new>
  41a0cb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41a0cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a0d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a0d7:	48 89 d6             	mov    %rdx,%rsi
  41a0da:	48 89 c7             	mov    %rax,%rdi
  41a0dd:	e8 ac aa ff ff       	callq  414b8e <luaC_fix>
  41a0e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a0e5:	8d 50 01             	lea    0x1(%rax),%edx
  41a0e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a0ec:	88 50 0a             	mov    %dl,0xa(%rax)
  41a0ef:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41a0f3:	83 7d fc 15          	cmpl   $0x15,-0x4(%rbp)
  41a0f7:	7e b6                	jle    41a0af <luaX_init+0x42>
  41a0f9:	90                   	nop
  41a0fa:	c9                   	leaveq 
  41a0fb:	c3                   	retq   

000000000041a0fc <luaX_token2str>:
  41a0fc:	55                   	push   %rbp
  41a0fd:	48 89 e5             	mov    %rsp,%rbp
  41a100:	48 83 ec 20          	sub    $0x20,%rsp
  41a104:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41a108:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41a10b:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
  41a112:	7f 57                	jg     41a16b <luaX_token2str+0x6f>
  41a114:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41a117:	83 c0 01             	add    $0x1,%eax
  41a11a:	48 98                	cltq   
  41a11c:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41a123:	0f b6 c0             	movzbl %al,%eax
  41a126:	83 e0 04             	and    $0x4,%eax
  41a129:	85 c0                	test   %eax,%eax
  41a12b:	74 1f                	je     41a14c <luaX_token2str+0x50>
  41a12d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a131:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a135:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41a138:	be 06 f6 43 00       	mov    $0x43f606,%esi
  41a13d:	48 89 c7             	mov    %rax,%rdi
  41a140:	b8 00 00 00 00       	mov    $0x0,%eax
  41a145:	e8 15 5b 00 00       	callq  41fc5f <luaO_pushfstring>
  41a14a:	eb 62                	jmp    41a1ae <luaX_token2str+0xb2>
  41a14c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a150:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a154:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41a157:	be 0b f6 43 00       	mov    $0x43f60b,%esi
  41a15c:	48 89 c7             	mov    %rax,%rdi
  41a15f:	b8 00 00 00 00       	mov    $0x0,%eax
  41a164:	e8 f6 5a 00 00       	callq  41fc5f <luaO_pushfstring>
  41a169:	eb 43                	jmp    41a1ae <luaX_token2str+0xb2>
  41a16b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41a16e:	2d 00 01 00 00       	sub    $0x100,%eax
  41a173:	48 98                	cltq   
  41a175:	48 8b 04 c5 c0 f4 43 	mov    0x43f4c0(,%rax,8),%rax
  41a17c:	00 
  41a17d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41a181:	81 7d e4 1f 01 00 00 	cmpl   $0x11f,-0x1c(%rbp)
  41a188:	7f 20                	jg     41a1aa <luaX_token2str+0xae>
  41a18a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a18e:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a192:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a196:	be 13 f6 43 00       	mov    $0x43f613,%esi
  41a19b:	48 89 c7             	mov    %rax,%rdi
  41a19e:	b8 00 00 00 00       	mov    $0x0,%eax
  41a1a3:	e8 b7 5a 00 00       	callq  41fc5f <luaO_pushfstring>
  41a1a8:	eb 04                	jmp    41a1ae <luaX_token2str+0xb2>
  41a1aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a1ae:	c9                   	leaveq 
  41a1af:	c3                   	retq   

000000000041a1b0 <txtToken>:
  41a1b0:	55                   	push   %rbp
  41a1b1:	48 89 e5             	mov    %rsp,%rbp
  41a1b4:	48 83 ec 10          	sub    $0x10,%rsp
  41a1b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a1bc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41a1bf:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41a1c2:	2d 21 01 00 00       	sub    $0x121,%eax
  41a1c7:	83 f8 03             	cmp    $0x3,%eax
  41a1ca:	77 38                	ja     41a204 <txtToken+0x54>
  41a1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a1d0:	be 00 00 00 00       	mov    $0x0,%esi
  41a1d5:	48 89 c7             	mov    %rax,%rdi
  41a1d8:	e8 c1 fd ff ff       	callq  419f9e <save>
  41a1dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a1e1:	48 8b 40 48          	mov    0x48(%rax),%rax
  41a1e5:	48 8b 10             	mov    (%rax),%rdx
  41a1e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a1ec:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a1f0:	be 13 f6 43 00       	mov    $0x43f613,%esi
  41a1f5:	48 89 c7             	mov    %rax,%rdi
  41a1f8:	b8 00 00 00 00       	mov    $0x0,%eax
  41a1fd:	e8 5d 5a 00 00       	callq  41fc5f <luaO_pushfstring>
  41a202:	eb 11                	jmp    41a215 <txtToken+0x65>
  41a204:	8b 55 f4             	mov    -0xc(%rbp),%edx
  41a207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a20b:	89 d6                	mov    %edx,%esi
  41a20d:	48 89 c7             	mov    %rax,%rdi
  41a210:	e8 e7 fe ff ff       	callq  41a0fc <luaX_token2str>
  41a215:	c9                   	leaveq 
  41a216:	c3                   	retq   

000000000041a217 <lexerror>:
  41a217:	55                   	push   %rbp
  41a218:	48 89 e5             	mov    %rsp,%rbp
  41a21b:	48 83 ec 20          	sub    $0x20,%rsp
  41a21f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a223:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41a227:	89 55 ec             	mov    %edx,-0x14(%rbp)
  41a22a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a22e:	8b 48 04             	mov    0x4(%rax),%ecx
  41a231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a235:	48 8b 50 60          	mov    0x60(%rax),%rdx
  41a239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a23d:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a241:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41a245:	48 89 c7             	mov    %rax,%rdi
  41a248:	e8 b9 67 ff ff       	callq  410a06 <luaG_addinfo>
  41a24d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41a251:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  41a255:	74 32                	je     41a289 <lexerror+0x72>
  41a257:	8b 55 ec             	mov    -0x14(%rbp),%edx
  41a25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a25e:	89 d6                	mov    %edx,%esi
  41a260:	48 89 c7             	mov    %rax,%rdi
  41a263:	e8 48 ff ff ff       	callq  41a1b0 <txtToken>
  41a268:	48 89 c1             	mov    %rax,%rcx
  41a26b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a26f:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a273:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a277:	be 18 f6 43 00       	mov    $0x43f618,%esi
  41a27c:	48 89 c7             	mov    %rax,%rdi
  41a27f:	b8 00 00 00 00       	mov    $0x0,%eax
  41a284:	e8 d6 59 00 00       	callq  41fc5f <luaO_pushfstring>
  41a289:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a28d:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a291:	be 03 00 00 00       	mov    $0x3,%esi
  41a296:	48 89 c7             	mov    %rax,%rdi
  41a299:	e8 db 6e ff ff       	callq  411179 <luaD_throw>

000000000041a29e <luaX_syntaxerror>:
  41a29e:	55                   	push   %rbp
  41a29f:	48 89 e5             	mov    %rsp,%rbp
  41a2a2:	48 83 ec 10          	sub    $0x10,%rsp
  41a2a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a2aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41a2ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a2b2:	8b 50 10             	mov    0x10(%rax),%edx
  41a2b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a2b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a2bd:	48 89 ce             	mov    %rcx,%rsi
  41a2c0:	48 89 c7             	mov    %rax,%rdi
  41a2c3:	e8 4f ff ff ff       	callq  41a217 <lexerror>

000000000041a2c8 <luaX_newstring>:
  41a2c8:	55                   	push   %rbp
  41a2c9:	48 89 e5             	mov    %rsp,%rbp
  41a2cc:	48 83 ec 50          	sub    $0x50,%rsp
  41a2d0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41a2d4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  41a2d8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  41a2dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41a2e0:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a2e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41a2e8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  41a2ec:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41a2f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a2f4:	48 89 ce             	mov    %rcx,%rsi
  41a2f7:	48 89 c7             	mov    %rax,%rdi
  41a2fa:	e8 1c cd 00 00       	callq  42701b <luaS_newlstr>
  41a2ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41a303:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41a307:	48 8b 40 50          	mov    0x50(%rax),%rax
  41a30b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a30f:	48 89 d6             	mov    %rdx,%rsi
  41a312:	48 89 c7             	mov    %rax,%rdi
  41a315:	e8 3b 34 01 00       	callq  42d755 <luaH_getstr>
  41a31a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41a31e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a322:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41a326:	0f b6 c0             	movzbl %al,%eax
  41a329:	83 e0 0f             	and    $0xf,%eax
  41a32c:	85 c0                	test   %eax,%eax
  41a32e:	74 11                	je     41a341 <luaX_newstring+0x79>
  41a330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a334:	48 8b 40 10          	mov    0x10(%rax),%rax
  41a338:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41a33c:	e9 9b 00 00 00       	jmpq   41a3dc <luaX_newstring+0x114>
  41a341:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a345:	48 8b 40 10          	mov    0x10(%rax),%rax
  41a349:	48 8d 48 10          	lea    0x10(%rax),%rcx
  41a34d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a351:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  41a355:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41a359:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a35d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41a361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a365:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41a369:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41a36d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a371:	48 89 10             	mov    %rdx,(%rax)
  41a374:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a378:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41a37c:	83 c8 40             	or     $0x40,%eax
  41a37f:	89 c2                	mov    %eax,%edx
  41a381:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a385:	88 50 08             	mov    %dl,0x8(%rax)
  41a388:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41a38c:	48 8b 70 50          	mov    0x50(%rax),%rsi
  41a390:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41a394:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41a398:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a39c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3a0:	49 89 f8             	mov    %rdi,%r8
  41a3a3:	48 89 c7             	mov    %rax,%rdi
  41a3a6:	e8 e4 34 01 00       	callq  42d88f <luaH_finishset>
  41a3ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3af:	48 8b 40 18          	mov    0x18(%rax),%rax
  41a3b3:	48 8b 40 18          	mov    0x18(%rax),%rax
  41a3b7:	48 85 c0             	test   %rax,%rax
  41a3ba:	7e 0c                	jle    41a3c8 <luaX_newstring+0x100>
  41a3bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3c0:	48 89 c7             	mov    %rax,%rdi
  41a3c3:	e8 90 df ff ff       	callq  418358 <luaC_step>
  41a3c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3cc:	48 8b 40 10          	mov    0x10(%rax),%rax
  41a3d0:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  41a3d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
  41a3dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a3e0:	c9                   	leaveq 
  41a3e1:	c3                   	retq   

000000000041a3e2 <inclinenumber>:
  41a3e2:	55                   	push   %rbp
  41a3e3:	48 89 e5             	mov    %rsp,%rbp
  41a3e6:	48 83 ec 20          	sub    $0x20,%rsp
  41a3ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41a3ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a3f2:	8b 00                	mov    (%rax),%eax
  41a3f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41a3f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a3fb:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a3ff:	48 8b 02             	mov    (%rdx),%rax
  41a402:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a406:	48 89 0a             	mov    %rcx,(%rdx)
  41a409:	48 85 c0             	test   %rax,%rax
  41a40c:	74 1c                	je     41a42a <inclinenumber+0x48>
  41a40e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a412:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a416:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a41a:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a41e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a422:	0f b6 00             	movzbl (%rax),%eax
  41a425:	0f b6 c0             	movzbl %al,%eax
  41a428:	eb 10                	jmp    41a43a <inclinenumber+0x58>
  41a42a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a42e:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a432:	48 89 c7             	mov    %rax,%rdi
  41a435:	e8 48 26 02 00       	callq  43ca82 <luaZ_fill>
  41a43a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a43e:	89 02                	mov    %eax,(%rdx)
  41a440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a444:	8b 00                	mov    (%rax),%eax
  41a446:	83 f8 0a             	cmp    $0xa,%eax
  41a449:	74 0b                	je     41a456 <inclinenumber+0x74>
  41a44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a44f:	8b 00                	mov    (%rax),%eax
  41a451:	83 f8 0d             	cmp    $0xd,%eax
  41a454:	75 54                	jne    41a4aa <inclinenumber+0xc8>
  41a456:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a45a:	8b 00                	mov    (%rax),%eax
  41a45c:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  41a45f:	74 49                	je     41a4aa <inclinenumber+0xc8>
  41a461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a465:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a469:	48 8b 02             	mov    (%rdx),%rax
  41a46c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a470:	48 89 0a             	mov    %rcx,(%rdx)
  41a473:	48 85 c0             	test   %rax,%rax
  41a476:	74 1c                	je     41a494 <inclinenumber+0xb2>
  41a478:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a47c:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a480:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a484:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a488:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a48c:	0f b6 00             	movzbl (%rax),%eax
  41a48f:	0f b6 c0             	movzbl %al,%eax
  41a492:	eb 10                	jmp    41a4a4 <inclinenumber+0xc2>
  41a494:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a498:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a49c:	48 89 c7             	mov    %rax,%rdi
  41a49f:	e8 de 25 02 00       	callq  43ca82 <luaZ_fill>
  41a4a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a4a8:	89 02                	mov    %eax,(%rdx)
  41a4aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a4ae:	8b 40 04             	mov    0x4(%rax),%eax
  41a4b1:	8d 50 01             	lea    0x1(%rax),%edx
  41a4b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a4b8:	89 50 04             	mov    %edx,0x4(%rax)
  41a4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a4bf:	8b 40 04             	mov    0x4(%rax),%eax
  41a4c2:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
  41a4c7:	75 16                	jne    41a4df <inclinenumber+0xfd>
  41a4c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a4cd:	ba 00 00 00 00       	mov    $0x0,%edx
  41a4d2:	be 23 f6 43 00       	mov    $0x43f623,%esi
  41a4d7:	48 89 c7             	mov    %rax,%rdi
  41a4da:	e8 38 fd ff ff       	callq  41a217 <lexerror>
  41a4df:	90                   	nop
  41a4e0:	c9                   	leaveq 
  41a4e1:	c3                   	retq   

000000000041a4e2 <luaX_setinput>:
  41a4e2:	55                   	push   %rbp
  41a4e3:	48 89 e5             	mov    %rsp,%rbp
  41a4e6:	53                   	push   %rbx
  41a4e7:	48 83 ec 38          	sub    $0x38,%rsp
  41a4eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41a4ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41a4f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41a4f7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41a4fb:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
  41a4ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a503:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  41a50a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a50e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a512:	48 89 50 38          	mov    %rdx,0x38(%rax)
  41a516:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a51a:	8b 55 cc             	mov    -0x34(%rbp),%edx
  41a51d:	89 10                	mov    %edx,(%rax)
  41a51f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a523:	c7 40 20 20 01 00 00 	movl   $0x120,0x20(%rax)
  41a52a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a52e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41a532:	48 89 50 40          	mov    %rdx,0x40(%rax)
  41a536:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a53a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  41a541:	00 
  41a542:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a546:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
  41a54d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a551:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  41a558:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a55c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41a560:	48 89 50 60          	mov    %rdx,0x60(%rax)
  41a564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a568:	ba 04 00 00 00       	mov    $0x4,%edx
  41a56d:	be 01 f6 43 00       	mov    $0x43f601,%esi
  41a572:	48 89 c7             	mov    %rax,%rdi
  41a575:	e8 a1 ca 00 00       	callq  42701b <luaS_newlstr>
  41a57a:	48 89 c2             	mov    %rax,%rdx
  41a57d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a581:	48 89 50 68          	mov    %rdx,0x68(%rax)
  41a585:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a589:	48 8b 40 48          	mov    0x48(%rax),%rax
  41a58d:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41a591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a595:	48 8b 40 48          	mov    0x48(%rax),%rax
  41a599:	48 8b 30             	mov    (%rax),%rsi
  41a59c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a5a0:	48 8b 40 38          	mov    0x38(%rax),%rax
  41a5a4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41a5a8:	48 8b 59 48          	mov    0x48(%rcx),%rbx
  41a5ac:	b9 20 00 00 00       	mov    $0x20,%ecx
  41a5b1:	48 89 c7             	mov    %rax,%rdi
  41a5b4:	e8 54 2c 00 00       	callq  41d20d <luaM_saferealloc_>
  41a5b9:	48 89 03             	mov    %rax,(%rbx)
  41a5bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a5c0:	48 8b 40 48          	mov    0x48(%rax),%rax
  41a5c4:	48 c7 40 10 20 00 00 	movq   $0x20,0x10(%rax)
  41a5cb:	00 
  41a5cc:	90                   	nop
  41a5cd:	48 83 c4 38          	add    $0x38,%rsp
  41a5d1:	5b                   	pop    %rbx
  41a5d2:	5d                   	pop    %rbp
  41a5d3:	c3                   	retq   

000000000041a5d4 <check_next1>:
  41a5d4:	55                   	push   %rbp
  41a5d5:	48 89 e5             	mov    %rsp,%rbp
  41a5d8:	48 83 ec 10          	sub    $0x10,%rsp
  41a5dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a5e0:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41a5e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a5e7:	8b 00                	mov    (%rax),%eax
  41a5e9:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  41a5ec:	75 50                	jne    41a63e <check_next1+0x6a>
  41a5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a5f2:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a5f6:	48 8b 02             	mov    (%rdx),%rax
  41a5f9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a5fd:	48 89 0a             	mov    %rcx,(%rdx)
  41a600:	48 85 c0             	test   %rax,%rax
  41a603:	74 1c                	je     41a621 <check_next1+0x4d>
  41a605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a609:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a60d:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a611:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a615:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a619:	0f b6 00             	movzbl (%rax),%eax
  41a61c:	0f b6 c0             	movzbl %al,%eax
  41a61f:	eb 10                	jmp    41a631 <check_next1+0x5d>
  41a621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a625:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a629:	48 89 c7             	mov    %rax,%rdi
  41a62c:	e8 51 24 02 00       	callq  43ca82 <luaZ_fill>
  41a631:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a635:	89 02                	mov    %eax,(%rdx)
  41a637:	b8 01 00 00 00       	mov    $0x1,%eax
  41a63c:	eb 05                	jmp    41a643 <check_next1+0x6f>
  41a63e:	b8 00 00 00 00       	mov    $0x0,%eax
  41a643:	c9                   	leaveq 
  41a644:	c3                   	retq   

000000000041a645 <check_next2>:
  41a645:	55                   	push   %rbp
  41a646:	48 89 e5             	mov    %rsp,%rbp
  41a649:	48 83 ec 10          	sub    $0x10,%rsp
  41a64d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a651:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41a655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a659:	8b 10                	mov    (%rax),%edx
  41a65b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a65f:	0f b6 00             	movzbl (%rax),%eax
  41a662:	0f be c0             	movsbl %al,%eax
  41a665:	39 c2                	cmp    %eax,%edx
  41a667:	74 18                	je     41a681 <check_next2+0x3c>
  41a669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a66d:	8b 10                	mov    (%rax),%edx
  41a66f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a673:	48 83 c0 01          	add    $0x1,%rax
  41a677:	0f b6 00             	movzbl (%rax),%eax
  41a67a:	0f be c0             	movsbl %al,%eax
  41a67d:	39 c2                	cmp    %eax,%edx
  41a67f:	75 64                	jne    41a6e5 <check_next2+0xa0>
  41a681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a685:	8b 10                	mov    (%rax),%edx
  41a687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a68b:	89 d6                	mov    %edx,%esi
  41a68d:	48 89 c7             	mov    %rax,%rdi
  41a690:	e8 09 f9 ff ff       	callq  419f9e <save>
  41a695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a699:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a69d:	48 8b 02             	mov    (%rdx),%rax
  41a6a0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a6a4:	48 89 0a             	mov    %rcx,(%rdx)
  41a6a7:	48 85 c0             	test   %rax,%rax
  41a6aa:	74 1c                	je     41a6c8 <check_next2+0x83>
  41a6ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a6b0:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a6b4:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a6b8:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a6bc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a6c0:	0f b6 00             	movzbl (%rax),%eax
  41a6c3:	0f b6 c0             	movzbl %al,%eax
  41a6c6:	eb 10                	jmp    41a6d8 <check_next2+0x93>
  41a6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a6cc:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a6d0:	48 89 c7             	mov    %rax,%rdi
  41a6d3:	e8 aa 23 02 00       	callq  43ca82 <luaZ_fill>
  41a6d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a6dc:	89 02                	mov    %eax,(%rdx)
  41a6de:	b8 01 00 00 00       	mov    $0x1,%eax
  41a6e3:	eb 05                	jmp    41a6ea <check_next2+0xa5>
  41a6e5:	b8 00 00 00 00       	mov    $0x0,%eax
  41a6ea:	c9                   	leaveq 
  41a6eb:	c3                   	retq   

000000000041a6ec <read_numeral>:
  41a6ec:	55                   	push   %rbp
  41a6ed:	48 89 e5             	mov    %rsp,%rbp
  41a6f0:	48 83 ec 30          	sub    $0x30,%rsp
  41a6f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41a6f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41a6fc:	48 c7 45 f8 3c f6 43 	movq   $0x43f63c,-0x8(%rbp)
  41a703:	00 
  41a704:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a708:	8b 00                	mov    (%rax),%eax
  41a70a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41a70d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a711:	8b 10                	mov    (%rax),%edx
  41a713:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a717:	89 d6                	mov    %edx,%esi
  41a719:	48 89 c7             	mov    %rax,%rdi
  41a71c:	e8 7d f8 ff ff       	callq  419f9e <save>
  41a721:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a725:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a729:	48 8b 02             	mov    (%rdx),%rax
  41a72c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a730:	48 89 0a             	mov    %rcx,(%rdx)
  41a733:	48 85 c0             	test   %rax,%rax
  41a736:	74 1c                	je     41a754 <read_numeral+0x68>
  41a738:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a73c:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a740:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a744:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a748:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a74c:	0f b6 00             	movzbl (%rax),%eax
  41a74f:	0f b6 c0             	movzbl %al,%eax
  41a752:	eb 10                	jmp    41a764 <read_numeral+0x78>
  41a754:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a758:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a75c:	48 89 c7             	mov    %rax,%rdi
  41a75f:	e8 1e 23 02 00       	callq  43ca82 <luaZ_fill>
  41a764:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41a768:	89 02                	mov    %eax,(%rdx)
  41a76a:	83 7d f4 30          	cmpl   $0x30,-0xc(%rbp)
  41a76e:	75 1d                	jne    41a78d <read_numeral+0xa1>
  41a770:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a774:	be 3f f6 43 00       	mov    $0x43f63f,%esi
  41a779:	48 89 c7             	mov    %rax,%rdi
  41a77c:	e8 c4 fe ff ff       	callq  41a645 <check_next2>
  41a781:	85 c0                	test   %eax,%eax
  41a783:	74 08                	je     41a78d <read_numeral+0xa1>
  41a785:	48 c7 45 f8 42 f6 43 	movq   $0x43f642,-0x8(%rbp)
  41a78c:	00 
  41a78d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41a791:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a795:	48 89 d6             	mov    %rdx,%rsi
  41a798:	48 89 c7             	mov    %rax,%rdi
  41a79b:	e8 a5 fe ff ff       	callq  41a645 <check_next2>
  41a7a0:	85 c0                	test   %eax,%eax
  41a7a2:	74 13                	je     41a7b7 <read_numeral+0xcb>
  41a7a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7a8:	be 45 f6 43 00       	mov    $0x43f645,%esi
  41a7ad:	48 89 c7             	mov    %rax,%rdi
  41a7b0:	e8 90 fe ff ff       	callq  41a645 <check_next2>
  41a7b5:	eb d6                	jmp    41a78d <read_numeral+0xa1>
  41a7b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7bb:	8b 00                	mov    (%rax),%eax
  41a7bd:	83 c0 01             	add    $0x1,%eax
  41a7c0:	48 98                	cltq   
  41a7c2:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41a7c9:	0f b6 c0             	movzbl %al,%eax
  41a7cc:	83 e0 10             	and    $0x10,%eax
  41a7cf:	85 c0                	test   %eax,%eax
  41a7d1:	75 0b                	jne    41a7de <read_numeral+0xf2>
  41a7d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7d7:	8b 00                	mov    (%rax),%eax
  41a7d9:	83 f8 2e             	cmp    $0x2e,%eax
  41a7dc:	75 62                	jne    41a840 <read_numeral+0x154>
  41a7de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7e2:	8b 10                	mov    (%rax),%edx
  41a7e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7e8:	89 d6                	mov    %edx,%esi
  41a7ea:	48 89 c7             	mov    %rax,%rdi
  41a7ed:	e8 ac f7 ff ff       	callq  419f9e <save>
  41a7f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a7f6:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a7fa:	48 8b 02             	mov    (%rdx),%rax
  41a7fd:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a801:	48 89 0a             	mov    %rcx,(%rdx)
  41a804:	48 85 c0             	test   %rax,%rax
  41a807:	74 1c                	je     41a825 <read_numeral+0x139>
  41a809:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a80d:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a811:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a815:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a819:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a81d:	0f b6 00             	movzbl (%rax),%eax
  41a820:	0f b6 c0             	movzbl %al,%eax
  41a823:	eb 10                	jmp    41a835 <read_numeral+0x149>
  41a825:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a829:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a82d:	48 89 c7             	mov    %rax,%rdi
  41a830:	e8 4d 22 02 00       	callq  43ca82 <luaZ_fill>
  41a835:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41a839:	89 02                	mov    %eax,(%rdx)
  41a83b:	e9 4d ff ff ff       	jmpq   41a78d <read_numeral+0xa1>
  41a840:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a844:	8b 00                	mov    (%rax),%eax
  41a846:	83 c0 01             	add    $0x1,%eax
  41a849:	48 98                	cltq   
  41a84b:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41a852:	0f b6 c0             	movzbl %al,%eax
  41a855:	83 e0 01             	and    $0x1,%eax
  41a858:	85 c0                	test   %eax,%eax
  41a85a:	74 5d                	je     41a8b9 <read_numeral+0x1cd>
  41a85c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a860:	8b 10                	mov    (%rax),%edx
  41a862:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a866:	89 d6                	mov    %edx,%esi
  41a868:	48 89 c7             	mov    %rax,%rdi
  41a86b:	e8 2e f7 ff ff       	callq  419f9e <save>
  41a870:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a874:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a878:	48 8b 02             	mov    (%rdx),%rax
  41a87b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a87f:	48 89 0a             	mov    %rcx,(%rdx)
  41a882:	48 85 c0             	test   %rax,%rax
  41a885:	74 1c                	je     41a8a3 <read_numeral+0x1b7>
  41a887:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a88b:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a88f:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a893:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a897:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a89b:	0f b6 00             	movzbl (%rax),%eax
  41a89e:	0f b6 c0             	movzbl %al,%eax
  41a8a1:	eb 10                	jmp    41a8b3 <read_numeral+0x1c7>
  41a8a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a8a7:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a8ab:	48 89 c7             	mov    %rax,%rdi
  41a8ae:	e8 cf 21 02 00       	callq  43ca82 <luaZ_fill>
  41a8b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41a8b7:	89 02                	mov    %eax,(%rdx)
  41a8b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a8bd:	be 00 00 00 00       	mov    $0x0,%esi
  41a8c2:	48 89 c7             	mov    %rax,%rdi
  41a8c5:	e8 d4 f6 ff ff       	callq  419f9e <save>
  41a8ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a8ce:	48 8b 40 48          	mov    0x48(%rax),%rax
  41a8d2:	48 8b 00             	mov    (%rax),%rax
  41a8d5:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  41a8d9:	48 89 d6             	mov    %rdx,%rsi
  41a8dc:	48 89 c7             	mov    %rax,%rdi
  41a8df:	e8 72 49 00 00       	callq  41f256 <luaO_str2num>
  41a8e4:	48 85 c0             	test   %rax,%rax
  41a8e7:	75 16                	jne    41a8ff <read_numeral+0x213>
  41a8e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a8ed:	ba 21 01 00 00       	mov    $0x121,%edx
  41a8f2:	be 48 f6 43 00       	mov    $0x43f648,%esi
  41a8f7:	48 89 c7             	mov    %rax,%rdi
  41a8fa:	e8 18 f9 ff ff       	callq  41a217 <lexerror>
  41a8ff:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
  41a903:	3c 03                	cmp    $0x3,%al
  41a905:	75 12                	jne    41a919 <read_numeral+0x22d>
  41a907:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a90b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a90f:	48 89 10             	mov    %rdx,(%rax)
  41a912:	b8 22 01 00 00       	mov    $0x122,%eax
  41a917:	eb 12                	jmp    41a92b <read_numeral+0x23f>
  41a919:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41a91e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a922:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  41a926:	b8 21 01 00 00       	mov    $0x121,%eax
  41a92b:	c9                   	leaveq 
  41a92c:	c3                   	retq   

000000000041a92d <skip_sep>:
  41a92d:	55                   	push   %rbp
  41a92e:	48 89 e5             	mov    %rsp,%rbp
  41a931:	48 83 ec 20          	sub    $0x20,%rsp
  41a935:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41a939:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  41a940:	00 
  41a941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a945:	8b 00                	mov    (%rax),%eax
  41a947:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41a94a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a94e:	8b 10                	mov    (%rax),%edx
  41a950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a954:	89 d6                	mov    %edx,%esi
  41a956:	48 89 c7             	mov    %rax,%rdi
  41a959:	e8 40 f6 ff ff       	callq  419f9e <save>
  41a95e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a962:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a966:	48 8b 02             	mov    (%rdx),%rax
  41a969:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a96d:	48 89 0a             	mov    %rcx,(%rdx)
  41a970:	48 85 c0             	test   %rax,%rax
  41a973:	74 1c                	je     41a991 <skip_sep+0x64>
  41a975:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a979:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a97d:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a981:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a985:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a989:	0f b6 00             	movzbl (%rax),%eax
  41a98c:	0f b6 c0             	movzbl %al,%eax
  41a98f:	eb 10                	jmp    41a9a1 <skip_sep+0x74>
  41a991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a995:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a999:	48 89 c7             	mov    %rax,%rdi
  41a99c:	e8 e1 20 02 00       	callq  43ca82 <luaZ_fill>
  41a9a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a9a5:	89 02                	mov    %eax,(%rdx)
  41a9a7:	eb 62                	jmp    41aa0b <skip_sep+0xde>
  41a9a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a9ad:	8b 10                	mov    (%rax),%edx
  41a9af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a9b3:	89 d6                	mov    %edx,%esi
  41a9b5:	48 89 c7             	mov    %rax,%rdi
  41a9b8:	e8 e1 f5 ff ff       	callq  419f9e <save>
  41a9bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a9c1:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a9c5:	48 8b 02             	mov    (%rdx),%rax
  41a9c8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41a9cc:	48 89 0a             	mov    %rcx,(%rdx)
  41a9cf:	48 85 c0             	test   %rax,%rax
  41a9d2:	74 1c                	je     41a9f0 <skip_sep+0xc3>
  41a9d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a9d8:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41a9dc:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a9e0:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41a9e4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a9e8:	0f b6 00             	movzbl (%rax),%eax
  41a9eb:	0f b6 c0             	movzbl %al,%eax
  41a9ee:	eb 10                	jmp    41aa00 <skip_sep+0xd3>
  41a9f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a9f4:	48 8b 40 40          	mov    0x40(%rax),%rax
  41a9f8:	48 89 c7             	mov    %rax,%rdi
  41a9fb:	e8 82 20 02 00       	callq  43ca82 <luaZ_fill>
  41aa00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41aa04:	89 02                	mov    %eax,(%rdx)
  41aa06:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  41aa0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41aa0f:	8b 00                	mov    (%rax),%eax
  41aa11:	83 f8 3d             	cmp    $0x3d,%eax
  41aa14:	74 93                	je     41a9a9 <skip_sep+0x7c>
  41aa16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41aa1a:	8b 00                	mov    (%rax),%eax
  41aa1c:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  41aa1f:	75 0a                	jne    41aa2b <skip_sep+0xfe>
  41aa21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41aa25:	48 83 c0 02          	add    $0x2,%rax
  41aa29:	eb 0d                	jmp    41aa38 <skip_sep+0x10b>
  41aa2b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41aa30:	0f 94 c0             	sete   %al
  41aa33:	0f b6 c0             	movzbl %al,%eax
  41aa36:	48 98                	cltq   
  41aa38:	c9                   	leaveq 
  41aa39:	c3                   	retq   

000000000041aa3a <read_long_string>:
  41aa3a:	55                   	push   %rbp
  41aa3b:	48 89 e5             	mov    %rsp,%rbp
  41aa3e:	48 83 ec 40          	sub    $0x40,%rsp
  41aa42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41aa46:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41aa4a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41aa4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa52:	8b 40 04             	mov    0x4(%rax),%eax
  41aa55:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41aa58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa5c:	8b 10                	mov    (%rax),%edx
  41aa5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa62:	89 d6                	mov    %edx,%esi
  41aa64:	48 89 c7             	mov    %rax,%rdi
  41aa67:	e8 32 f5 ff ff       	callq  419f9e <save>
  41aa6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa70:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41aa74:	48 8b 02             	mov    (%rdx),%rax
  41aa77:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41aa7b:	48 89 0a             	mov    %rcx,(%rdx)
  41aa7e:	48 85 c0             	test   %rax,%rax
  41aa81:	74 1c                	je     41aa9f <read_long_string+0x65>
  41aa83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa87:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41aa8b:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41aa8f:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41aa93:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41aa97:	0f b6 00             	movzbl (%rax),%eax
  41aa9a:	0f b6 c0             	movzbl %al,%eax
  41aa9d:	eb 10                	jmp    41aaaf <read_long_string+0x75>
  41aa9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aaa3:	48 8b 40 40          	mov    0x40(%rax),%rax
  41aaa7:	48 89 c7             	mov    %rax,%rdi
  41aaaa:	e8 d3 1f 02 00       	callq  43ca82 <luaZ_fill>
  41aaaf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41aab3:	89 02                	mov    %eax,(%rdx)
  41aab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aab9:	8b 00                	mov    (%rax),%eax
  41aabb:	83 f8 0a             	cmp    $0xa,%eax
  41aabe:	74 0b                	je     41aacb <read_long_string+0x91>
  41aac0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aac4:	8b 00                	mov    (%rax),%eax
  41aac6:	83 f8 0d             	cmp    $0xd,%eax
  41aac9:	75 0c                	jne    41aad7 <read_long_string+0x9d>
  41aacb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aacf:	48 89 c7             	mov    %rax,%rdi
  41aad2:	e8 0b f9 ff ff       	callq  41a3e2 <inclinenumber>
  41aad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aadb:	8b 00                	mov    (%rax),%eax
  41aadd:	83 f8 0a             	cmp    $0xa,%eax
  41aae0:	0f 84 fa 00 00 00    	je     41abe0 <read_long_string+0x1a6>
  41aae6:	83 f8 0a             	cmp    $0xa,%eax
  41aae9:	7f 0a                	jg     41aaf5 <read_long_string+0xbb>
  41aaeb:	83 f8 ff             	cmp    $0xffffffff,%eax
  41aaee:	74 18                	je     41ab08 <read_long_string+0xce>
  41aaf0:	e9 28 01 00 00       	jmpq   41ac1d <read_long_string+0x1e3>
  41aaf5:	83 f8 0d             	cmp    $0xd,%eax
  41aaf8:	0f 84 e2 00 00 00    	je     41abe0 <read_long_string+0x1a6>
  41aafe:	83 f8 5d             	cmp    $0x5d,%eax
  41ab01:	74 59                	je     41ab5c <read_long_string+0x122>
  41ab03:	e9 15 01 00 00       	jmpq   41ac1d <read_long_string+0x1e3>
  41ab08:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41ab0d:	74 07                	je     41ab16 <read_long_string+0xdc>
  41ab0f:	b8 59 f6 43 00       	mov    $0x43f659,%eax
  41ab14:	eb 05                	jmp    41ab1b <read_long_string+0xe1>
  41ab16:	b8 60 f6 43 00       	mov    $0x43f660,%eax
  41ab1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41ab1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab23:	48 8b 40 38          	mov    0x38(%rax),%rax
  41ab27:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  41ab2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41ab2e:	be 68 f6 43 00       	mov    $0x43f668,%esi
  41ab33:	48 89 c7             	mov    %rax,%rdi
  41ab36:	b8 00 00 00 00       	mov    $0x0,%eax
  41ab3b:	e8 1f 51 00 00       	callq  41fc5f <luaO_pushfstring>
  41ab40:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41ab44:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41ab48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab4c:	ba 20 01 00 00       	mov    $0x120,%edx
  41ab51:	48 89 ce             	mov    %rcx,%rsi
  41ab54:	48 89 c7             	mov    %rax,%rdi
  41ab57:	e8 bb f6 ff ff       	callq  41a217 <lexerror>
  41ab5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab60:	48 89 c7             	mov    %rax,%rdi
  41ab63:	e8 c5 fd ff ff       	callq  41a92d <skip_sep>
  41ab68:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
  41ab6c:	0f 85 62 01 00 00    	jne    41acd4 <read_long_string+0x29a>
  41ab72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab76:	8b 10                	mov    (%rax),%edx
  41ab78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab7c:	89 d6                	mov    %edx,%esi
  41ab7e:	48 89 c7             	mov    %rax,%rdi
  41ab81:	e8 18 f4 ff ff       	callq  419f9e <save>
  41ab86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ab8a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ab8e:	48 8b 02             	mov    (%rdx),%rax
  41ab91:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41ab95:	48 89 0a             	mov    %rcx,(%rdx)
  41ab98:	48 85 c0             	test   %rax,%rax
  41ab9b:	74 1c                	je     41abb9 <read_long_string+0x17f>
  41ab9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aba1:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41aba5:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41aba9:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41abad:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41abb1:	0f b6 00             	movzbl (%rax),%eax
  41abb4:	0f b6 c0             	movzbl %al,%eax
  41abb7:	eb 10                	jmp    41abc9 <read_long_string+0x18f>
  41abb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41abbd:	48 8b 40 40          	mov    0x40(%rax),%rax
  41abc1:	48 89 c7             	mov    %rax,%rdi
  41abc4:	e8 b9 1e 02 00       	callq  43ca82 <luaZ_fill>
  41abc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41abcd:	89 02                	mov    %eax,(%rdx)
  41abcf:	90                   	nop
  41abd0:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41abd5:	0f 84 49 01 00 00    	je     41ad24 <read_long_string+0x2ea>
  41abdb:	e9 00 01 00 00       	jmpq   41ace0 <read_long_string+0x2a6>
  41abe0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41abe4:	be 0a 00 00 00       	mov    $0xa,%esi
  41abe9:	48 89 c7             	mov    %rax,%rdi
  41abec:	e8 ad f3 ff ff       	callq  419f9e <save>
  41abf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41abf5:	48 89 c7             	mov    %rax,%rdi
  41abf8:	e8 e5 f7 ff ff       	callq  41a3e2 <inclinenumber>
  41abfd:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41ac02:	0f 85 d2 00 00 00    	jne    41acda <read_long_string+0x2a0>
  41ac08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac0c:	48 8b 40 48          	mov    0x48(%rax),%rax
  41ac10:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  41ac17:	00 
  41ac18:	e9 bd 00 00 00       	jmpq   41acda <read_long_string+0x2a0>
  41ac1d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41ac22:	74 62                	je     41ac86 <read_long_string+0x24c>
  41ac24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac28:	8b 10                	mov    (%rax),%edx
  41ac2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac2e:	89 d6                	mov    %edx,%esi
  41ac30:	48 89 c7             	mov    %rax,%rdi
  41ac33:	e8 66 f3 ff ff       	callq  419f9e <save>
  41ac38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac3c:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ac40:	48 8b 02             	mov    (%rdx),%rax
  41ac43:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41ac47:	48 89 0a             	mov    %rcx,(%rdx)
  41ac4a:	48 85 c0             	test   %rax,%rax
  41ac4d:	74 1c                	je     41ac6b <read_long_string+0x231>
  41ac4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac53:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ac57:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41ac5b:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41ac5f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41ac63:	0f b6 00             	movzbl (%rax),%eax
  41ac66:	0f b6 c0             	movzbl %al,%eax
  41ac69:	eb 10                	jmp    41ac7b <read_long_string+0x241>
  41ac6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac6f:	48 8b 40 40          	mov    0x40(%rax),%rax
  41ac73:	48 89 c7             	mov    %rax,%rdi
  41ac76:	e8 07 1e 02 00       	callq  43ca82 <luaZ_fill>
  41ac7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41ac7f:	89 02                	mov    %eax,(%rdx)
  41ac81:	e9 51 fe ff ff       	jmpq   41aad7 <read_long_string+0x9d>
  41ac86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ac8a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ac8e:	48 8b 02             	mov    (%rdx),%rax
  41ac91:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41ac95:	48 89 0a             	mov    %rcx,(%rdx)
  41ac98:	48 85 c0             	test   %rax,%rax
  41ac9b:	74 1c                	je     41acb9 <read_long_string+0x27f>
  41ac9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aca1:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41aca5:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41aca9:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41acad:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41acb1:	0f b6 00             	movzbl (%rax),%eax
  41acb4:	0f b6 c0             	movzbl %al,%eax
  41acb7:	eb 10                	jmp    41acc9 <read_long_string+0x28f>
  41acb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41acbd:	48 8b 40 40          	mov    0x40(%rax),%rax
  41acc1:	48 89 c7             	mov    %rax,%rdi
  41acc4:	e8 b9 1d 02 00       	callq  43ca82 <luaZ_fill>
  41acc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41accd:	89 02                	mov    %eax,(%rdx)
  41accf:	e9 03 fe ff ff       	jmpq   41aad7 <read_long_string+0x9d>
  41acd4:	90                   	nop
  41acd5:	e9 fd fd ff ff       	jmpq   41aad7 <read_long_string+0x9d>
  41acda:	90                   	nop
  41acdb:	e9 f7 fd ff ff       	jmpq   41aad7 <read_long_string+0x9d>
  41ace0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ace4:	48 8b 40 48          	mov    0x48(%rax),%rax
  41ace8:	48 8b 40 08          	mov    0x8(%rax),%rax
  41acec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41acf0:	48 01 d2             	add    %rdx,%rdx
  41acf3:	48 29 d0             	sub    %rdx,%rax
  41acf6:	48 89 c2             	mov    %rax,%rdx
  41acf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41acfd:	48 8b 40 48          	mov    0x48(%rax),%rax
  41ad01:	48 8b 08             	mov    (%rax),%rcx
  41ad04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41ad08:	48 01 c1             	add    %rax,%rcx
  41ad0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ad0f:	48 89 ce             	mov    %rcx,%rsi
  41ad12:	48 89 c7             	mov    %rax,%rdi
  41ad15:	e8 ae f5 ff ff       	callq  41a2c8 <luaX_newstring>
  41ad1a:	48 89 c2             	mov    %rax,%rdx
  41ad1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ad21:	48 89 10             	mov    %rdx,(%rax)
  41ad24:	90                   	nop
  41ad25:	c9                   	leaveq 
  41ad26:	c3                   	retq   

000000000041ad27 <esccheck>:
  41ad27:	55                   	push   %rbp
  41ad28:	48 89 e5             	mov    %rsp,%rbp
  41ad2b:	48 83 ec 20          	sub    $0x20,%rsp
  41ad2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41ad33:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41ad36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41ad3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  41ad3e:	0f 85 80 00 00 00    	jne    41adc4 <esccheck+0x9d>
  41ad44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad48:	8b 00                	mov    (%rax),%eax
  41ad4a:	83 f8 ff             	cmp    $0xffffffff,%eax
  41ad4d:	74 5d                	je     41adac <esccheck+0x85>
  41ad4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad53:	8b 10                	mov    (%rax),%edx
  41ad55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad59:	89 d6                	mov    %edx,%esi
  41ad5b:	48 89 c7             	mov    %rax,%rdi
  41ad5e:	e8 3b f2 ff ff       	callq  419f9e <save>
  41ad63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad67:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ad6b:	48 8b 02             	mov    (%rdx),%rax
  41ad6e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41ad72:	48 89 0a             	mov    %rcx,(%rdx)
  41ad75:	48 85 c0             	test   %rax,%rax
  41ad78:	74 1c                	je     41ad96 <esccheck+0x6f>
  41ad7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad7e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ad82:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41ad86:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41ad8a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41ad8e:	0f b6 00             	movzbl (%rax),%eax
  41ad91:	0f b6 c0             	movzbl %al,%eax
  41ad94:	eb 10                	jmp    41ada6 <esccheck+0x7f>
  41ad96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ad9a:	48 8b 40 40          	mov    0x40(%rax),%rax
  41ad9e:	48 89 c7             	mov    %rax,%rdi
  41ada1:	e8 dc 1c 02 00       	callq  43ca82 <luaZ_fill>
  41ada6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41adaa:	89 02                	mov    %eax,(%rdx)
  41adac:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41adb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41adb4:	ba 24 01 00 00       	mov    $0x124,%edx
  41adb9:	48 89 ce             	mov    %rcx,%rsi
  41adbc:	48 89 c7             	mov    %rax,%rdi
  41adbf:	e8 53 f4 ff ff       	callq  41a217 <lexerror>
  41adc4:	90                   	nop
  41adc5:	c9                   	leaveq 
  41adc6:	c3                   	retq   

000000000041adc7 <gethexa>:
  41adc7:	55                   	push   %rbp
  41adc8:	48 89 e5             	mov    %rsp,%rbp
  41adcb:	48 83 ec 10          	sub    $0x10,%rsp
  41adcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41add3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41add7:	8b 10                	mov    (%rax),%edx
  41add9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41addd:	89 d6                	mov    %edx,%esi
  41addf:	48 89 c7             	mov    %rax,%rdi
  41ade2:	e8 b7 f1 ff ff       	callq  419f9e <save>
  41ade7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41adeb:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41adef:	48 8b 02             	mov    (%rdx),%rax
  41adf2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41adf6:	48 89 0a             	mov    %rcx,(%rdx)
  41adf9:	48 85 c0             	test   %rax,%rax
  41adfc:	74 1c                	je     41ae1a <gethexa+0x53>
  41adfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ae02:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ae06:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41ae0a:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41ae0e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41ae12:	0f b6 00             	movzbl (%rax),%eax
  41ae15:	0f b6 c0             	movzbl %al,%eax
  41ae18:	eb 10                	jmp    41ae2a <gethexa+0x63>
  41ae1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ae1e:	48 8b 40 40          	mov    0x40(%rax),%rax
  41ae22:	48 89 c7             	mov    %rax,%rdi
  41ae25:	e8 58 1c 02 00       	callq  43ca82 <luaZ_fill>
  41ae2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41ae2e:	89 02                	mov    %eax,(%rdx)
  41ae30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ae34:	8b 00                	mov    (%rax),%eax
  41ae36:	83 c0 01             	add    $0x1,%eax
  41ae39:	48 98                	cltq   
  41ae3b:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41ae42:	0f b6 c0             	movzbl %al,%eax
  41ae45:	83 e0 10             	and    $0x10,%eax
  41ae48:	89 c1                	mov    %eax,%ecx
  41ae4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ae4e:	ba 91 f6 43 00       	mov    $0x43f691,%edx
  41ae53:	89 ce                	mov    %ecx,%esi
  41ae55:	48 89 c7             	mov    %rax,%rdi
  41ae58:	e8 ca fe ff ff       	callq  41ad27 <esccheck>
  41ae5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ae61:	8b 00                	mov    (%rax),%eax
  41ae63:	89 c7                	mov    %eax,%edi
  41ae65:	e8 6d 3f 00 00       	callq  41edd7 <luaO_hexavalue>
  41ae6a:	c9                   	leaveq 
  41ae6b:	c3                   	retq   

000000000041ae6c <readhexaesc>:
  41ae6c:	55                   	push   %rbp
  41ae6d:	48 89 e5             	mov    %rsp,%rbp
  41ae70:	53                   	push   %rbx
  41ae71:	48 83 ec 28          	sub    $0x28,%rsp
  41ae75:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41ae79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ae7d:	48 89 c7             	mov    %rax,%rdi
  41ae80:	e8 42 ff ff ff       	callq  41adc7 <gethexa>
  41ae85:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41ae88:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41ae8b:	c1 e0 04             	shl    $0x4,%eax
  41ae8e:	89 c3                	mov    %eax,%ebx
  41ae90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ae94:	48 89 c7             	mov    %rax,%rdi
  41ae97:	e8 2b ff ff ff       	callq  41adc7 <gethexa>
  41ae9c:	01 d8                	add    %ebx,%eax
  41ae9e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41aea1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aea5:	48 8b 40 48          	mov    0x48(%rax),%rax
  41aea9:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41aead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aeb1:	48 8b 40 48          	mov    0x48(%rax),%rax
  41aeb5:	48 83 ea 02          	sub    $0x2,%rdx
  41aeb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41aebd:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41aec0:	48 83 c4 28          	add    $0x28,%rsp
  41aec4:	5b                   	pop    %rbx
  41aec5:	5d                   	pop    %rbp
  41aec6:	c3                   	retq   

000000000041aec7 <readutf8esc>:
  41aec7:	55                   	push   %rbp
  41aec8:	48 89 e5             	mov    %rsp,%rbp
  41aecb:	53                   	push   %rbx
  41aecc:	48 83 ec 28          	sub    $0x28,%rsp
  41aed0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41aed4:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%rbp)
  41aedb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aedf:	8b 10                	mov    (%rax),%edx
  41aee1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aee5:	89 d6                	mov    %edx,%esi
  41aee7:	48 89 c7             	mov    %rax,%rdi
  41aeea:	e8 af f0 ff ff       	callq  419f9e <save>
  41aeef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aef3:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41aef7:	48 8b 02             	mov    (%rdx),%rax
  41aefa:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41aefe:	48 89 0a             	mov    %rcx,(%rdx)
  41af01:	48 85 c0             	test   %rax,%rax
  41af04:	74 1c                	je     41af22 <readutf8esc+0x5b>
  41af06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af0a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41af0e:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41af12:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41af16:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41af1a:	0f b6 00             	movzbl (%rax),%eax
  41af1d:	0f b6 c0             	movzbl %al,%eax
  41af20:	eb 10                	jmp    41af32 <readutf8esc+0x6b>
  41af22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af26:	48 8b 40 40          	mov    0x40(%rax),%rax
  41af2a:	48 89 c7             	mov    %rax,%rdi
  41af2d:	e8 50 1b 02 00       	callq  43ca82 <luaZ_fill>
  41af32:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41af36:	89 02                	mov    %eax,(%rdx)
  41af38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af3c:	8b 00                	mov    (%rax),%eax
  41af3e:	83 f8 7b             	cmp    $0x7b,%eax
  41af41:	0f 94 c0             	sete   %al
  41af44:	0f b6 c8             	movzbl %al,%ecx
  41af47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af4b:	ba ac f6 43 00       	mov    $0x43f6ac,%edx
  41af50:	89 ce                	mov    %ecx,%esi
  41af52:	48 89 c7             	mov    %rax,%rdi
  41af55:	e8 cd fd ff ff       	callq  41ad27 <esccheck>
  41af5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af5e:	48 89 c7             	mov    %rax,%rdi
  41af61:	e8 61 fe ff ff       	callq  41adc7 <gethexa>
  41af66:	48 98                	cltq   
  41af68:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41af6c:	eb 46                	jmp    41afb4 <readutf8esc+0xed>
  41af6e:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  41af72:	48 81 7d e8 ff ff ff 	cmpq   $0x7ffffff,-0x18(%rbp)
  41af79:	07 
  41af7a:	0f 96 c0             	setbe  %al
  41af7d:	0f b6 c8             	movzbl %al,%ecx
  41af80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41af84:	ba b8 f6 43 00       	mov    $0x43f6b8,%edx
  41af89:	89 ce                	mov    %ecx,%esi
  41af8b:	48 89 c7             	mov    %rax,%rdi
  41af8e:	e8 94 fd ff ff       	callq  41ad27 <esccheck>
  41af93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41af97:	48 c1 e0 04          	shl    $0x4,%rax
  41af9b:	48 89 c3             	mov    %rax,%rbx
  41af9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afa2:	8b 00                	mov    (%rax),%eax
  41afa4:	89 c7                	mov    %eax,%edi
  41afa6:	e8 2c 3e 00 00       	callq  41edd7 <luaO_hexavalue>
  41afab:	48 98                	cltq   
  41afad:	48 01 d8             	add    %rbx,%rax
  41afb0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41afb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afb8:	8b 10                	mov    (%rax),%edx
  41afba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afbe:	89 d6                	mov    %edx,%esi
  41afc0:	48 89 c7             	mov    %rax,%rdi
  41afc3:	e8 d6 ef ff ff       	callq  419f9e <save>
  41afc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afcc:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41afd0:	48 8b 02             	mov    (%rdx),%rax
  41afd3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41afd7:	48 89 0a             	mov    %rcx,(%rdx)
  41afda:	48 85 c0             	test   %rax,%rax
  41afdd:	74 1c                	je     41affb <readutf8esc+0x134>
  41afdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afe3:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41afe7:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41afeb:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41afef:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41aff3:	0f b6 00             	movzbl (%rax),%eax
  41aff6:	0f b6 c0             	movzbl %al,%eax
  41aff9:	eb 10                	jmp    41b00b <readutf8esc+0x144>
  41affb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41afff:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b003:	48 89 c7             	mov    %rax,%rdi
  41b006:	e8 77 1a 02 00       	callq  43ca82 <luaZ_fill>
  41b00b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b00f:	89 02                	mov    %eax,(%rdx)
  41b011:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b015:	8b 00                	mov    (%rax),%eax
  41b017:	83 c0 01             	add    $0x1,%eax
  41b01a:	48 98                	cltq   
  41b01c:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41b023:	0f b6 c0             	movzbl %al,%eax
  41b026:	83 e0 10             	and    $0x10,%eax
  41b029:	85 c0                	test   %eax,%eax
  41b02b:	0f 85 3d ff ff ff    	jne    41af6e <readutf8esc+0xa7>
  41b031:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b035:	8b 00                	mov    (%rax),%eax
  41b037:	83 f8 7d             	cmp    $0x7d,%eax
  41b03a:	0f 94 c0             	sete   %al
  41b03d:	0f b6 c8             	movzbl %al,%ecx
  41b040:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b044:	ba ce f6 43 00       	mov    $0x43f6ce,%edx
  41b049:	89 ce                	mov    %ecx,%esi
  41b04b:	48 89 c7             	mov    %rax,%rdi
  41b04e:	e8 d4 fc ff ff       	callq  41ad27 <esccheck>
  41b053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b057:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b05b:	48 8b 02             	mov    (%rdx),%rax
  41b05e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b062:	48 89 0a             	mov    %rcx,(%rdx)
  41b065:	48 85 c0             	test   %rax,%rax
  41b068:	74 1c                	je     41b086 <readutf8esc+0x1bf>
  41b06a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b06e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b072:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b076:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b07a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b07e:	0f b6 00             	movzbl (%rax),%eax
  41b081:	0f b6 c0             	movzbl %al,%eax
  41b084:	eb 10                	jmp    41b096 <readutf8esc+0x1cf>
  41b086:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b08a:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b08e:	48 89 c7             	mov    %rax,%rdi
  41b091:	e8 ec 19 02 00       	callq  43ca82 <luaZ_fill>
  41b096:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b09a:	89 02                	mov    %eax,(%rdx)
  41b09c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b0a0:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b0a4:	48 8b 48 08          	mov    0x8(%rax),%rcx
  41b0a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41b0ab:	48 63 d0             	movslq %eax,%rdx
  41b0ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b0b2:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b0b6:	48 29 d1             	sub    %rdx,%rcx
  41b0b9:	48 89 ca             	mov    %rcx,%rdx
  41b0bc:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41b0c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b0c4:	48 83 c4 28          	add    $0x28,%rsp
  41b0c8:	5b                   	pop    %rbx
  41b0c9:	5d                   	pop    %rbp
  41b0ca:	c3                   	retq   

000000000041b0cb <utf8esc>:
  41b0cb:	55                   	push   %rbp
  41b0cc:	48 89 e5             	mov    %rsp,%rbp
  41b0cf:	48 83 ec 20          	sub    $0x20,%rsp
  41b0d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41b0d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b0db:	48 89 c7             	mov    %rax,%rdi
  41b0de:	e8 e4 fd ff ff       	callq  41aec7 <readutf8esc>
  41b0e3:	48 89 c2             	mov    %rax,%rdx
  41b0e6:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  41b0ea:	48 89 d6             	mov    %rdx,%rsi
  41b0ed:	48 89 c7             	mov    %rax,%rdi
  41b0f0:	e8 fe 41 00 00       	callq  41f2f3 <luaO_utf8esc>
  41b0f5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41b0f8:	eb 24                	jmp    41b11e <utf8esc+0x53>
  41b0fa:	b8 08 00 00 00       	mov    $0x8,%eax
  41b0ff:	2b 45 fc             	sub    -0x4(%rbp),%eax
  41b102:	48 98                	cltq   
  41b104:	0f b6 44 05 f4       	movzbl -0xc(%rbp,%rax,1),%eax
  41b109:	0f be d0             	movsbl %al,%edx
  41b10c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b110:	89 d6                	mov    %edx,%esi
  41b112:	48 89 c7             	mov    %rax,%rdi
  41b115:	e8 84 ee ff ff       	callq  419f9e <save>
  41b11a:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  41b11e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  41b122:	7f d6                	jg     41b0fa <utf8esc+0x2f>
  41b124:	90                   	nop
  41b125:	c9                   	leaveq 
  41b126:	c3                   	retq   

000000000041b127 <readdecesc>:
  41b127:	55                   	push   %rbp
  41b128:	48 89 e5             	mov    %rsp,%rbp
  41b12b:	48 83 ec 20          	sub    $0x20,%rsp
  41b12f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41b133:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  41b13a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41b141:	eb 7d                	jmp    41b1c0 <readdecesc+0x99>
  41b143:	8b 55 f8             	mov    -0x8(%rbp),%edx
  41b146:	89 d0                	mov    %edx,%eax
  41b148:	c1 e0 02             	shl    $0x2,%eax
  41b14b:	01 d0                	add    %edx,%eax
  41b14d:	01 c0                	add    %eax,%eax
  41b14f:	89 c2                	mov    %eax,%edx
  41b151:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b155:	8b 00                	mov    (%rax),%eax
  41b157:	01 d0                	add    %edx,%eax
  41b159:	83 e8 30             	sub    $0x30,%eax
  41b15c:	89 45 f8             	mov    %eax,-0x8(%rbp)
  41b15f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b163:	8b 10                	mov    (%rax),%edx
  41b165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b169:	89 d6                	mov    %edx,%esi
  41b16b:	48 89 c7             	mov    %rax,%rdi
  41b16e:	e8 2b ee ff ff       	callq  419f9e <save>
  41b173:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b177:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b17b:	48 8b 02             	mov    (%rdx),%rax
  41b17e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b182:	48 89 0a             	mov    %rcx,(%rdx)
  41b185:	48 85 c0             	test   %rax,%rax
  41b188:	74 1c                	je     41b1a6 <readdecesc+0x7f>
  41b18a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b18e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b192:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b196:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b19a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b19e:	0f b6 00             	movzbl (%rax),%eax
  41b1a1:	0f b6 c0             	movzbl %al,%eax
  41b1a4:	eb 10                	jmp    41b1b6 <readdecesc+0x8f>
  41b1a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b1aa:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b1ae:	48 89 c7             	mov    %rax,%rdi
  41b1b1:	e8 cc 18 02 00       	callq  43ca82 <luaZ_fill>
  41b1b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b1ba:	89 02                	mov    %eax,(%rdx)
  41b1bc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41b1c0:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  41b1c4:	7f 20                	jg     41b1e6 <readdecesc+0xbf>
  41b1c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b1ca:	8b 00                	mov    (%rax),%eax
  41b1cc:	83 c0 01             	add    $0x1,%eax
  41b1cf:	48 98                	cltq   
  41b1d1:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41b1d8:	0f b6 c0             	movzbl %al,%eax
  41b1db:	83 e0 02             	and    $0x2,%eax
  41b1de:	85 c0                	test   %eax,%eax
  41b1e0:	0f 85 5d ff ff ff    	jne    41b143 <readdecesc+0x1c>
  41b1e6:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%rbp)
  41b1ed:	0f 9e c0             	setle  %al
  41b1f0:	0f b6 c8             	movzbl %al,%ecx
  41b1f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b1f7:	ba da f6 43 00       	mov    $0x43f6da,%edx
  41b1fc:	89 ce                	mov    %ecx,%esi
  41b1fe:	48 89 c7             	mov    %rax,%rdi
  41b201:	e8 21 fb ff ff       	callq  41ad27 <esccheck>
  41b206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b20a:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b20e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  41b212:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41b215:	48 63 d0             	movslq %eax,%rdx
  41b218:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b21c:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b220:	48 29 d1             	sub    %rdx,%rcx
  41b223:	48 89 ca             	mov    %rcx,%rdx
  41b226:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41b22a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41b22d:	c9                   	leaveq 
  41b22e:	c3                   	retq   

000000000041b22f <read_string>:
  41b22f:	55                   	push   %rbp
  41b230:	48 89 e5             	mov    %rsp,%rbp
  41b233:	48 83 ec 30          	sub    $0x30,%rsp
  41b237:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41b23b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41b23e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41b242:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b246:	8b 10                	mov    (%rax),%edx
  41b248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b24c:	89 d6                	mov    %edx,%esi
  41b24e:	48 89 c7             	mov    %rax,%rdi
  41b251:	e8 48 ed ff ff       	callq  419f9e <save>
  41b256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b25a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b25e:	48 8b 02             	mov    (%rdx),%rax
  41b261:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b265:	48 89 0a             	mov    %rcx,(%rdx)
  41b268:	48 85 c0             	test   %rax,%rax
  41b26b:	74 1c                	je     41b289 <read_string+0x5a>
  41b26d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b271:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b275:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b279:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b27d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b281:	0f b6 00             	movzbl (%rax),%eax
  41b284:	0f b6 c0             	movzbl %al,%eax
  41b287:	eb 10                	jmp    41b299 <read_string+0x6a>
  41b289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b28d:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b291:	48 89 c7             	mov    %rax,%rdi
  41b294:	e8 e9 17 02 00       	callq  43ca82 <luaZ_fill>
  41b299:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b29d:	89 02                	mov    %eax,(%rdx)
  41b29f:	e9 7e 03 00 00       	jmpq   41b622 <read_string+0x3f3>
  41b2a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b2a8:	8b 00                	mov    (%rax),%eax
  41b2aa:	83 f8 0a             	cmp    $0xa,%eax
  41b2ad:	74 34                	je     41b2e3 <read_string+0xb4>
  41b2af:	83 f8 0a             	cmp    $0xa,%eax
  41b2b2:	7f 0a                	jg     41b2be <read_string+0x8f>
  41b2b4:	83 f8 ff             	cmp    $0xffffffff,%eax
  41b2b7:	74 14                	je     41b2cd <read_string+0x9e>
  41b2b9:	e9 07 03 00 00       	jmpq   41b5c5 <read_string+0x396>
  41b2be:	83 f8 0d             	cmp    $0xd,%eax
  41b2c1:	74 20                	je     41b2e3 <read_string+0xb4>
  41b2c3:	83 f8 5c             	cmp    $0x5c,%eax
  41b2c6:	74 31                	je     41b2f9 <read_string+0xca>
  41b2c8:	e9 f8 02 00 00       	jmpq   41b5c5 <read_string+0x396>
  41b2cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b2d1:	ba 20 01 00 00       	mov    $0x120,%edx
  41b2d6:	be f3 f6 43 00       	mov    $0x43f6f3,%esi
  41b2db:	48 89 c7             	mov    %rax,%rdi
  41b2de:	e8 34 ef ff ff       	callq  41a217 <lexerror>
  41b2e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b2e7:	ba 24 01 00 00       	mov    $0x124,%edx
  41b2ec:	be f3 f6 43 00       	mov    $0x43f6f3,%esi
  41b2f1:	48 89 c7             	mov    %rax,%rdi
  41b2f4:	e8 1e ef ff ff       	callq  41a217 <lexerror>
  41b2f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b2fd:	8b 10                	mov    (%rax),%edx
  41b2ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b303:	89 d6                	mov    %edx,%esi
  41b305:	48 89 c7             	mov    %rax,%rdi
  41b308:	e8 91 ec ff ff       	callq  419f9e <save>
  41b30d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b311:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b315:	48 8b 02             	mov    (%rdx),%rax
  41b318:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b31c:	48 89 0a             	mov    %rcx,(%rdx)
  41b31f:	48 85 c0             	test   %rax,%rax
  41b322:	74 1c                	je     41b340 <read_string+0x111>
  41b324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b328:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b32c:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b330:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b334:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b338:	0f b6 00             	movzbl (%rax),%eax
  41b33b:	0f b6 c0             	movzbl %al,%eax
  41b33e:	eb 10                	jmp    41b350 <read_string+0x121>
  41b340:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b344:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b348:	48 89 c7             	mov    %rax,%rdi
  41b34b:	e8 32 17 02 00       	callq  43ca82 <luaZ_fill>
  41b350:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b354:	89 02                	mov    %eax,(%rdx)
  41b356:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b35a:	8b 00                	mov    (%rax),%eax
  41b35c:	83 c0 01             	add    $0x1,%eax
  41b35f:	83 f8 7b             	cmp    $0x7b,%eax
  41b362:	0f 87 a4 01 00 00    	ja     41b50c <read_string+0x2dd>
  41b368:	89 c0                	mov    %eax,%eax
  41b36a:	48 8b 04 c5 20 f7 43 	mov    0x43f720(,%rax,8),%rax
  41b371:	00 
  41b372:	ff e0                	jmpq   *%rax
  41b374:	c7 45 fc 07 00 00 00 	movl   $0x7,-0x4(%rbp)
  41b37b:	e9 ca 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b380:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%rbp)
  41b387:	e9 be 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b38c:	c7 45 fc 0c 00 00 00 	movl   $0xc,-0x4(%rbp)
  41b393:	e9 b2 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b398:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
  41b39f:	e9 a6 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b3a4:	c7 45 fc 0d 00 00 00 	movl   $0xd,-0x4(%rbp)
  41b3ab:	e9 9a 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b3b0:	c7 45 fc 09 00 00 00 	movl   $0x9,-0x4(%rbp)
  41b3b7:	e9 8e 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b3bc:	c7 45 fc 0b 00 00 00 	movl   $0xb,-0x4(%rbp)
  41b3c3:	e9 82 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b3c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b3cc:	48 89 c7             	mov    %rax,%rdi
  41b3cf:	e8 98 fa ff ff       	callq  41ae6c <readhexaesc>
  41b3d4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41b3d7:	e9 6e 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b3dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b3e0:	48 89 c7             	mov    %rax,%rdi
  41b3e3:	e8 e3 fc ff ff       	callq  41b0cb <utf8esc>
  41b3e8:	e9 d6 01 00 00       	jmpq   41b5c3 <read_string+0x394>
  41b3ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b3f1:	48 89 c7             	mov    %rax,%rdi
  41b3f4:	e8 e9 ef ff ff       	callq  41a3e2 <inclinenumber>
  41b3f9:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
  41b400:	e9 8e 01 00 00       	jmpq   41b593 <read_string+0x364>
  41b405:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b409:	8b 00                	mov    (%rax),%eax
  41b40b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41b40e:	e9 37 01 00 00       	jmpq   41b54a <read_string+0x31b>
  41b413:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b417:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b41b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41b41f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b423:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b427:	48 83 ea 01          	sub    $0x1,%rdx
  41b42b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41b42f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b433:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b437:	48 8b 02             	mov    (%rdx),%rax
  41b43a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b43e:	48 89 0a             	mov    %rcx,(%rdx)
  41b441:	48 85 c0             	test   %rax,%rax
  41b444:	74 1c                	je     41b462 <read_string+0x233>
  41b446:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b44a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b44e:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b452:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b456:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b45a:	0f b6 00             	movzbl (%rax),%eax
  41b45d:	0f b6 c0             	movzbl %al,%eax
  41b460:	eb 10                	jmp    41b472 <read_string+0x243>
  41b462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b466:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b46a:	48 89 c7             	mov    %rax,%rdi
  41b46d:	e8 10 16 02 00       	callq  43ca82 <luaZ_fill>
  41b472:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b476:	89 02                	mov    %eax,(%rdx)
  41b478:	eb 6d                	jmp    41b4e7 <read_string+0x2b8>
  41b47a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b47e:	8b 00                	mov    (%rax),%eax
  41b480:	83 f8 0a             	cmp    $0xa,%eax
  41b483:	74 0b                	je     41b490 <read_string+0x261>
  41b485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b489:	8b 00                	mov    (%rax),%eax
  41b48b:	83 f8 0d             	cmp    $0xd,%eax
  41b48e:	75 0e                	jne    41b49e <read_string+0x26f>
  41b490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b494:	48 89 c7             	mov    %rax,%rdi
  41b497:	e8 46 ef ff ff       	callq  41a3e2 <inclinenumber>
  41b49c:	eb 49                	jmp    41b4e7 <read_string+0x2b8>
  41b49e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b4a2:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b4a6:	48 8b 02             	mov    (%rdx),%rax
  41b4a9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b4ad:	48 89 0a             	mov    %rcx,(%rdx)
  41b4b0:	48 85 c0             	test   %rax,%rax
  41b4b3:	74 1c                	je     41b4d1 <read_string+0x2a2>
  41b4b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b4b9:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b4bd:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b4c1:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b4c5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b4c9:	0f b6 00             	movzbl (%rax),%eax
  41b4cc:	0f b6 c0             	movzbl %al,%eax
  41b4cf:	eb 10                	jmp    41b4e1 <read_string+0x2b2>
  41b4d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b4d5:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b4d9:	48 89 c7             	mov    %rax,%rdi
  41b4dc:	e8 a1 15 02 00       	callq  43ca82 <luaZ_fill>
  41b4e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b4e5:	89 02                	mov    %eax,(%rdx)
  41b4e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b4eb:	8b 00                	mov    (%rax),%eax
  41b4ed:	83 c0 01             	add    $0x1,%eax
  41b4f0:	48 98                	cltq   
  41b4f2:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41b4f9:	0f b6 c0             	movzbl %al,%eax
  41b4fc:	83 e0 08             	and    $0x8,%eax
  41b4ff:	85 c0                	test   %eax,%eax
  41b501:	0f 85 73 ff ff ff    	jne    41b47a <read_string+0x24b>
  41b507:	e9 b7 00 00 00       	jmpq   41b5c3 <read_string+0x394>
  41b50c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b510:	8b 00                	mov    (%rax),%eax
  41b512:	83 c0 01             	add    $0x1,%eax
  41b515:	48 98                	cltq   
  41b517:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41b51e:	0f b6 c0             	movzbl %al,%eax
  41b521:	83 e0 02             	and    $0x2,%eax
  41b524:	89 c1                	mov    %eax,%ecx
  41b526:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b52a:	ba 05 f7 43 00       	mov    $0x43f705,%edx
  41b52f:	89 ce                	mov    %ecx,%esi
  41b531:	48 89 c7             	mov    %rax,%rdi
  41b534:	e8 ee f7 ff ff       	callq  41ad27 <esccheck>
  41b539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b53d:	48 89 c7             	mov    %rax,%rdi
  41b540:	e8 e2 fb ff ff       	callq  41b127 <readdecesc>
  41b545:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41b548:	eb 49                	jmp    41b593 <read_string+0x364>
  41b54a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b54e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b552:	48 8b 02             	mov    (%rdx),%rax
  41b555:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b559:	48 89 0a             	mov    %rcx,(%rdx)
  41b55c:	48 85 c0             	test   %rax,%rax
  41b55f:	74 1c                	je     41b57d <read_string+0x34e>
  41b561:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b565:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b569:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b56d:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b571:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b575:	0f b6 00             	movzbl (%rax),%eax
  41b578:	0f b6 c0             	movzbl %al,%eax
  41b57b:	eb 10                	jmp    41b58d <read_string+0x35e>
  41b57d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b581:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b585:	48 89 c7             	mov    %rax,%rdi
  41b588:	e8 f5 14 02 00       	callq  43ca82 <luaZ_fill>
  41b58d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b591:	89 02                	mov    %eax,(%rdx)
  41b593:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b597:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b59b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41b59f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5a3:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b5a7:	48 83 ea 01          	sub    $0x1,%rdx
  41b5ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41b5af:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41b5b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5b6:	89 d6                	mov    %edx,%esi
  41b5b8:	48 89 c7             	mov    %rax,%rdi
  41b5bb:	e8 de e9 ff ff       	callq  419f9e <save>
  41b5c0:	eb 60                	jmp    41b622 <read_string+0x3f3>
  41b5c2:	90                   	nop
  41b5c3:	eb 5d                	jmp    41b622 <read_string+0x3f3>
  41b5c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5c9:	8b 10                	mov    (%rax),%edx
  41b5cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5cf:	89 d6                	mov    %edx,%esi
  41b5d1:	48 89 c7             	mov    %rax,%rdi
  41b5d4:	e8 c5 e9 ff ff       	callq  419f9e <save>
  41b5d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5dd:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b5e1:	48 8b 02             	mov    (%rdx),%rax
  41b5e4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b5e8:	48 89 0a             	mov    %rcx,(%rdx)
  41b5eb:	48 85 c0             	test   %rax,%rax
  41b5ee:	74 1c                	je     41b60c <read_string+0x3dd>
  41b5f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b5f4:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b5f8:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b5fc:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b600:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b604:	0f b6 00             	movzbl (%rax),%eax
  41b607:	0f b6 c0             	movzbl %al,%eax
  41b60a:	eb 10                	jmp    41b61c <read_string+0x3ed>
  41b60c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b610:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b614:	48 89 c7             	mov    %rax,%rdi
  41b617:	e8 66 14 02 00       	callq  43ca82 <luaZ_fill>
  41b61c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b620:	89 02                	mov    %eax,(%rdx)
  41b622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b626:	8b 00                	mov    (%rax),%eax
  41b628:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  41b62b:	0f 85 73 fc ff ff    	jne    41b2a4 <read_string+0x75>
  41b631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b635:	8b 10                	mov    (%rax),%edx
  41b637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b63b:	89 d6                	mov    %edx,%esi
  41b63d:	48 89 c7             	mov    %rax,%rdi
  41b640:	e8 59 e9 ff ff       	callq  419f9e <save>
  41b645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b649:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b64d:	48 8b 02             	mov    (%rdx),%rax
  41b650:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b654:	48 89 0a             	mov    %rcx,(%rdx)
  41b657:	48 85 c0             	test   %rax,%rax
  41b65a:	74 1c                	je     41b678 <read_string+0x449>
  41b65c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b660:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b664:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b668:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b66c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b670:	0f b6 00             	movzbl (%rax),%eax
  41b673:	0f b6 c0             	movzbl %al,%eax
  41b676:	eb 10                	jmp    41b688 <read_string+0x459>
  41b678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b67c:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b680:	48 89 c7             	mov    %rax,%rdi
  41b683:	e8 fa 13 02 00       	callq  43ca82 <luaZ_fill>
  41b688:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b68c:	89 02                	mov    %eax,(%rdx)
  41b68e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b692:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b696:	48 8b 40 08          	mov    0x8(%rax),%rax
  41b69a:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
  41b69e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b6a2:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b6a6:	48 8b 00             	mov    (%rax),%rax
  41b6a9:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b6ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b6b1:	48 89 ce             	mov    %rcx,%rsi
  41b6b4:	48 89 c7             	mov    %rax,%rdi
  41b6b7:	e8 0c ec ff ff       	callq  41a2c8 <luaX_newstring>
  41b6bc:	48 89 c2             	mov    %rax,%rdx
  41b6bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b6c3:	48 89 10             	mov    %rdx,(%rax)
  41b6c6:	90                   	nop
  41b6c7:	c9                   	leaveq 
  41b6c8:	c3                   	retq   

000000000041b6c9 <llex>:
  41b6c9:	55                   	push   %rbp
  41b6ca:	48 89 e5             	mov    %rsp,%rbp
  41b6cd:	48 83 ec 30          	sub    $0x30,%rsp
  41b6d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41b6d5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41b6d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b6dd:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b6e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  41b6e8:	00 
  41b6e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b6ed:	8b 00                	mov    (%rax),%eax
  41b6ef:	83 c0 01             	add    $0x1,%eax
  41b6f2:	83 f8 7f             	cmp    $0x7f,%eax
  41b6f5:	0f 87 4f 06 00 00    	ja     41bd4a <llex+0x681>
  41b6fb:	89 c0                	mov    %eax,%eax
  41b6fd:	48 8b 04 c5 20 fb 43 	mov    0x43fb20(,%rax,8),%rax
  41b704:	00 
  41b705:	ff e0                	jmpq   *%rax
  41b707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b70b:	48 89 c7             	mov    %rax,%rdi
  41b70e:	e8 cf ec ff ff       	callq  41a3e2 <inclinenumber>
  41b713:	e9 89 07 00 00       	jmpq   41bea1 <llex+0x7d8>
  41b718:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b71c:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b720:	48 8b 02             	mov    (%rdx),%rax
  41b723:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b727:	48 89 0a             	mov    %rcx,(%rdx)
  41b72a:	48 85 c0             	test   %rax,%rax
  41b72d:	74 1c                	je     41b74b <llex+0x82>
  41b72f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b733:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b737:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b73b:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b73f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b743:	0f b6 00             	movzbl (%rax),%eax
  41b746:	0f b6 c0             	movzbl %al,%eax
  41b749:	eb 10                	jmp    41b75b <llex+0x92>
  41b74b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b74f:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b753:	48 89 c7             	mov    %rax,%rdi
  41b756:	e8 27 13 02 00       	callq  43ca82 <luaZ_fill>
  41b75b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b75f:	89 02                	mov    %eax,(%rdx)
  41b761:	e9 3b 07 00 00       	jmpq   41bea1 <llex+0x7d8>
  41b766:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b76a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b76e:	48 8b 02             	mov    (%rdx),%rax
  41b771:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b775:	48 89 0a             	mov    %rcx,(%rdx)
  41b778:	48 85 c0             	test   %rax,%rax
  41b77b:	74 1c                	je     41b799 <llex+0xd0>
  41b77d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b781:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b785:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b789:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b78d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b791:	0f b6 00             	movzbl (%rax),%eax
  41b794:	0f b6 c0             	movzbl %al,%eax
  41b797:	eb 10                	jmp    41b7a9 <llex+0xe0>
  41b799:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b79d:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b7a1:	48 89 c7             	mov    %rax,%rdi
  41b7a4:	e8 d9 12 02 00       	callq  43ca82 <luaZ_fill>
  41b7a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b7ad:	89 02                	mov    %eax,(%rdx)
  41b7af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b7b3:	8b 00                	mov    (%rax),%eax
  41b7b5:	83 f8 2d             	cmp    $0x2d,%eax
  41b7b8:	74 0a                	je     41b7c4 <llex+0xfb>
  41b7ba:	b8 2d 00 00 00       	mov    $0x2d,%eax
  41b7bf:	e9 e2 06 00 00       	jmpq   41bea6 <llex+0x7dd>
  41b7c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b7c8:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b7cc:	48 8b 02             	mov    (%rdx),%rax
  41b7cf:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b7d3:	48 89 0a             	mov    %rcx,(%rdx)
  41b7d6:	48 85 c0             	test   %rax,%rax
  41b7d9:	74 1c                	je     41b7f7 <llex+0x12e>
  41b7db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b7df:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b7e3:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b7e7:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b7eb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b7ef:	0f b6 00             	movzbl (%rax),%eax
  41b7f2:	0f b6 c0             	movzbl %al,%eax
  41b7f5:	eb 10                	jmp    41b807 <llex+0x13e>
  41b7f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b7fb:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b7ff:	48 89 c7             	mov    %rax,%rdi
  41b802:	e8 7b 12 02 00       	callq  43ca82 <luaZ_fill>
  41b807:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b80b:	89 02                	mov    %eax,(%rdx)
  41b80d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b811:	8b 00                	mov    (%rax),%eax
  41b813:	83 f8 5b             	cmp    $0x5b,%eax
  41b816:	0f 85 9a 00 00 00    	jne    41b8b6 <llex+0x1ed>
  41b81c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b820:	48 89 c7             	mov    %rax,%rdi
  41b823:	e8 05 f1 ff ff       	callq  41a92d <skip_sep>
  41b828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41b82c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b830:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b834:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  41b83b:	00 
  41b83c:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
  41b841:	76 73                	jbe    41b8b6 <llex+0x1ed>
  41b843:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41b847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b84b:	be 00 00 00 00       	mov    $0x0,%esi
  41b850:	48 89 c7             	mov    %rax,%rdi
  41b853:	e8 e2 f1 ff ff       	callq  41aa3a <read_long_string>
  41b858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b85c:	48 8b 40 48          	mov    0x48(%rax),%rax
  41b860:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  41b867:	00 
  41b868:	e9 34 06 00 00       	jmpq   41bea1 <llex+0x7d8>
  41b86d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b871:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b875:	48 8b 02             	mov    (%rdx),%rax
  41b878:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b87c:	48 89 0a             	mov    %rcx,(%rdx)
  41b87f:	48 85 c0             	test   %rax,%rax
  41b882:	74 1c                	je     41b8a0 <llex+0x1d7>
  41b884:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b888:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b88c:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b890:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b894:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b898:	0f b6 00             	movzbl (%rax),%eax
  41b89b:	0f b6 c0             	movzbl %al,%eax
  41b89e:	eb 10                	jmp    41b8b0 <llex+0x1e7>
  41b8a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b8a4:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b8a8:	48 89 c7             	mov    %rax,%rdi
  41b8ab:	e8 d2 11 02 00       	callq  43ca82 <luaZ_fill>
  41b8b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b8b4:	89 02                	mov    %eax,(%rdx)
  41b8b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b8ba:	8b 00                	mov    (%rax),%eax
  41b8bc:	83 f8 0a             	cmp    $0xa,%eax
  41b8bf:	0f 84 db 05 00 00    	je     41bea0 <llex+0x7d7>
  41b8c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b8c9:	8b 00                	mov    (%rax),%eax
  41b8cb:	83 f8 0d             	cmp    $0xd,%eax
  41b8ce:	0f 84 cc 05 00 00    	je     41bea0 <llex+0x7d7>
  41b8d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b8d8:	8b 00                	mov    (%rax),%eax
  41b8da:	83 f8 ff             	cmp    $0xffffffff,%eax
  41b8dd:	75 8e                	jne    41b86d <llex+0x1a4>
  41b8df:	e9 bc 05 00 00       	jmpq   41bea0 <llex+0x7d7>
  41b8e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b8e8:	48 89 c7             	mov    %rax,%rdi
  41b8eb:	e8 3d f0 ff ff       	callq  41a92d <skip_sep>
  41b8f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41b8f4:	48 83 7d f0 01       	cmpq   $0x1,-0x10(%rbp)
  41b8f9:	76 21                	jbe    41b91c <llex+0x253>
  41b8fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b8ff:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b907:	48 89 ce             	mov    %rcx,%rsi
  41b90a:	48 89 c7             	mov    %rax,%rdi
  41b90d:	e8 28 f1 ff ff       	callq  41aa3a <read_long_string>
  41b912:	b8 24 01 00 00       	mov    $0x124,%eax
  41b917:	e9 8a 05 00 00       	jmpq   41bea6 <llex+0x7dd>
  41b91c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41b921:	75 16                	jne    41b939 <llex+0x270>
  41b923:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b927:	ba 24 01 00 00       	mov    $0x124,%edx
  41b92c:	be 00 fb 43 00       	mov    $0x43fb00,%esi
  41b931:	48 89 c7             	mov    %rax,%rdi
  41b934:	e8 de e8 ff ff       	callq  41a217 <lexerror>
  41b939:	b8 5b 00 00 00       	mov    $0x5b,%eax
  41b93e:	e9 63 05 00 00       	jmpq   41bea6 <llex+0x7dd>
  41b943:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b947:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b94b:	48 8b 02             	mov    (%rdx),%rax
  41b94e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b952:	48 89 0a             	mov    %rcx,(%rdx)
  41b955:	48 85 c0             	test   %rax,%rax
  41b958:	74 1c                	je     41b976 <llex+0x2ad>
  41b95a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b95e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b962:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b966:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b96a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b96e:	0f b6 00             	movzbl (%rax),%eax
  41b971:	0f b6 c0             	movzbl %al,%eax
  41b974:	eb 10                	jmp    41b986 <llex+0x2bd>
  41b976:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b97a:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b97e:	48 89 c7             	mov    %rax,%rdi
  41b981:	e8 fc 10 02 00       	callq  43ca82 <luaZ_fill>
  41b986:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b98a:	89 02                	mov    %eax,(%rdx)
  41b98c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b990:	be 3d 00 00 00       	mov    $0x3d,%esi
  41b995:	48 89 c7             	mov    %rax,%rdi
  41b998:	e8 37 ec ff ff       	callq  41a5d4 <check_next1>
  41b99d:	85 c0                	test   %eax,%eax
  41b99f:	74 0a                	je     41b9ab <llex+0x2e2>
  41b9a1:	b8 19 01 00 00       	mov    $0x119,%eax
  41b9a6:	e9 fb 04 00 00       	jmpq   41bea6 <llex+0x7dd>
  41b9ab:	b8 3d 00 00 00       	mov    $0x3d,%eax
  41b9b0:	e9 f1 04 00 00       	jmpq   41bea6 <llex+0x7dd>
  41b9b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b9b9:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b9bd:	48 8b 02             	mov    (%rdx),%rax
  41b9c0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41b9c4:	48 89 0a             	mov    %rcx,(%rdx)
  41b9c7:	48 85 c0             	test   %rax,%rax
  41b9ca:	74 1c                	je     41b9e8 <llex+0x31f>
  41b9cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b9d0:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41b9d4:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41b9d8:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b9dc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41b9e0:	0f b6 00             	movzbl (%rax),%eax
  41b9e3:	0f b6 c0             	movzbl %al,%eax
  41b9e6:	eb 10                	jmp    41b9f8 <llex+0x32f>
  41b9e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b9ec:	48 8b 40 40          	mov    0x40(%rax),%rax
  41b9f0:	48 89 c7             	mov    %rax,%rdi
  41b9f3:	e8 8a 10 02 00       	callq  43ca82 <luaZ_fill>
  41b9f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41b9fc:	89 02                	mov    %eax,(%rdx)
  41b9fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba02:	be 3d 00 00 00       	mov    $0x3d,%esi
  41ba07:	48 89 c7             	mov    %rax,%rdi
  41ba0a:	e8 c5 eb ff ff       	callq  41a5d4 <check_next1>
  41ba0f:	85 c0                	test   %eax,%eax
  41ba11:	74 0a                	je     41ba1d <llex+0x354>
  41ba13:	b8 1b 01 00 00       	mov    $0x11b,%eax
  41ba18:	e9 89 04 00 00       	jmpq   41bea6 <llex+0x7dd>
  41ba1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba21:	be 3c 00 00 00       	mov    $0x3c,%esi
  41ba26:	48 89 c7             	mov    %rax,%rdi
  41ba29:	e8 a6 eb ff ff       	callq  41a5d4 <check_next1>
  41ba2e:	85 c0                	test   %eax,%eax
  41ba30:	74 0a                	je     41ba3c <llex+0x373>
  41ba32:	b8 1d 01 00 00       	mov    $0x11d,%eax
  41ba37:	e9 6a 04 00 00       	jmpq   41bea6 <llex+0x7dd>
  41ba3c:	b8 3c 00 00 00       	mov    $0x3c,%eax
  41ba41:	e9 60 04 00 00       	jmpq   41bea6 <llex+0x7dd>
  41ba46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba4a:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ba4e:	48 8b 02             	mov    (%rdx),%rax
  41ba51:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41ba55:	48 89 0a             	mov    %rcx,(%rdx)
  41ba58:	48 85 c0             	test   %rax,%rax
  41ba5b:	74 1c                	je     41ba79 <llex+0x3b0>
  41ba5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba61:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41ba65:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41ba69:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41ba6d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41ba71:	0f b6 00             	movzbl (%rax),%eax
  41ba74:	0f b6 c0             	movzbl %al,%eax
  41ba77:	eb 10                	jmp    41ba89 <llex+0x3c0>
  41ba79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba7d:	48 8b 40 40          	mov    0x40(%rax),%rax
  41ba81:	48 89 c7             	mov    %rax,%rdi
  41ba84:	e8 f9 0f 02 00       	callq  43ca82 <luaZ_fill>
  41ba89:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41ba8d:	89 02                	mov    %eax,(%rdx)
  41ba8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ba93:	be 3d 00 00 00       	mov    $0x3d,%esi
  41ba98:	48 89 c7             	mov    %rax,%rdi
  41ba9b:	e8 34 eb ff ff       	callq  41a5d4 <check_next1>
  41baa0:	85 c0                	test   %eax,%eax
  41baa2:	74 0a                	je     41baae <llex+0x3e5>
  41baa4:	b8 1a 01 00 00       	mov    $0x11a,%eax
  41baa9:	e9 f8 03 00 00       	jmpq   41bea6 <llex+0x7dd>
  41baae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bab2:	be 3e 00 00 00       	mov    $0x3e,%esi
  41bab7:	48 89 c7             	mov    %rax,%rdi
  41baba:	e8 15 eb ff ff       	callq  41a5d4 <check_next1>
  41babf:	85 c0                	test   %eax,%eax
  41bac1:	74 0a                	je     41bacd <llex+0x404>
  41bac3:	b8 1e 01 00 00       	mov    $0x11e,%eax
  41bac8:	e9 d9 03 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bacd:	b8 3e 00 00 00       	mov    $0x3e,%eax
  41bad2:	e9 cf 03 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41badb:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41badf:	48 8b 02             	mov    (%rdx),%rax
  41bae2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41bae6:	48 89 0a             	mov    %rcx,(%rdx)
  41bae9:	48 85 c0             	test   %rax,%rax
  41baec:	74 1c                	je     41bb0a <llex+0x441>
  41baee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41baf2:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41baf6:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41bafa:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41bafe:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41bb02:	0f b6 00             	movzbl (%rax),%eax
  41bb05:	0f b6 c0             	movzbl %al,%eax
  41bb08:	eb 10                	jmp    41bb1a <llex+0x451>
  41bb0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb0e:	48 8b 40 40          	mov    0x40(%rax),%rax
  41bb12:	48 89 c7             	mov    %rax,%rdi
  41bb15:	e8 68 0f 02 00       	callq  43ca82 <luaZ_fill>
  41bb1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41bb1e:	89 02                	mov    %eax,(%rdx)
  41bb20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb24:	be 2f 00 00 00       	mov    $0x2f,%esi
  41bb29:	48 89 c7             	mov    %rax,%rdi
  41bb2c:	e8 a3 ea ff ff       	callq  41a5d4 <check_next1>
  41bb31:	85 c0                	test   %eax,%eax
  41bb33:	74 0a                	je     41bb3f <llex+0x476>
  41bb35:	b8 16 01 00 00       	mov    $0x116,%eax
  41bb3a:	e9 67 03 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bb3f:	b8 2f 00 00 00       	mov    $0x2f,%eax
  41bb44:	e9 5d 03 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bb49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb4d:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bb51:	48 8b 02             	mov    (%rdx),%rax
  41bb54:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41bb58:	48 89 0a             	mov    %rcx,(%rdx)
  41bb5b:	48 85 c0             	test   %rax,%rax
  41bb5e:	74 1c                	je     41bb7c <llex+0x4b3>
  41bb60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb64:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bb68:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41bb6c:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41bb70:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41bb74:	0f b6 00             	movzbl (%rax),%eax
  41bb77:	0f b6 c0             	movzbl %al,%eax
  41bb7a:	eb 10                	jmp    41bb8c <llex+0x4c3>
  41bb7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb80:	48 8b 40 40          	mov    0x40(%rax),%rax
  41bb84:	48 89 c7             	mov    %rax,%rdi
  41bb87:	e8 f6 0e 02 00       	callq  43ca82 <luaZ_fill>
  41bb8c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41bb90:	89 02                	mov    %eax,(%rdx)
  41bb92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb96:	be 3d 00 00 00       	mov    $0x3d,%esi
  41bb9b:	48 89 c7             	mov    %rax,%rdi
  41bb9e:	e8 31 ea ff ff       	callq  41a5d4 <check_next1>
  41bba3:	85 c0                	test   %eax,%eax
  41bba5:	74 0a                	je     41bbb1 <llex+0x4e8>
  41bba7:	b8 1c 01 00 00       	mov    $0x11c,%eax
  41bbac:	e9 f5 02 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bbb1:	b8 7e 00 00 00       	mov    $0x7e,%eax
  41bbb6:	e9 eb 02 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bbbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bbbf:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bbc3:	48 8b 02             	mov    (%rdx),%rax
  41bbc6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41bbca:	48 89 0a             	mov    %rcx,(%rdx)
  41bbcd:	48 85 c0             	test   %rax,%rax
  41bbd0:	74 1c                	je     41bbee <llex+0x525>
  41bbd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bbd6:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bbda:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41bbde:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41bbe2:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41bbe6:	0f b6 00             	movzbl (%rax),%eax
  41bbe9:	0f b6 c0             	movzbl %al,%eax
  41bbec:	eb 10                	jmp    41bbfe <llex+0x535>
  41bbee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bbf2:	48 8b 40 40          	mov    0x40(%rax),%rax
  41bbf6:	48 89 c7             	mov    %rax,%rdi
  41bbf9:	e8 84 0e 02 00       	callq  43ca82 <luaZ_fill>
  41bbfe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41bc02:	89 02                	mov    %eax,(%rdx)
  41bc04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc08:	be 3a 00 00 00       	mov    $0x3a,%esi
  41bc0d:	48 89 c7             	mov    %rax,%rdi
  41bc10:	e8 bf e9 ff ff       	callq  41a5d4 <check_next1>
  41bc15:	85 c0                	test   %eax,%eax
  41bc17:	74 0a                	je     41bc23 <llex+0x55a>
  41bc19:	b8 1f 01 00 00       	mov    $0x11f,%eax
  41bc1e:	e9 83 02 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bc23:	b8 3a 00 00 00       	mov    $0x3a,%eax
  41bc28:	e9 79 02 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bc2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc31:	8b 08                	mov    (%rax),%ecx
  41bc33:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41bc37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc3b:	89 ce                	mov    %ecx,%esi
  41bc3d:	48 89 c7             	mov    %rax,%rdi
  41bc40:	e8 ea f5 ff ff       	callq  41b22f <read_string>
  41bc45:	b8 24 01 00 00       	mov    $0x124,%eax
  41bc4a:	e9 57 02 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bc4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc53:	8b 10                	mov    (%rax),%edx
  41bc55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc59:	89 d6                	mov    %edx,%esi
  41bc5b:	48 89 c7             	mov    %rax,%rdi
  41bc5e:	e8 3b e3 ff ff       	callq  419f9e <save>
  41bc63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc67:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bc6b:	48 8b 02             	mov    (%rdx),%rax
  41bc6e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41bc72:	48 89 0a             	mov    %rcx,(%rdx)
  41bc75:	48 85 c0             	test   %rax,%rax
  41bc78:	74 1c                	je     41bc96 <llex+0x5cd>
  41bc7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc7e:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bc82:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41bc86:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41bc8a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41bc8e:	0f b6 00             	movzbl (%rax),%eax
  41bc91:	0f b6 c0             	movzbl %al,%eax
  41bc94:	eb 10                	jmp    41bca6 <llex+0x5dd>
  41bc96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bc9a:	48 8b 40 40          	mov    0x40(%rax),%rax
  41bc9e:	48 89 c7             	mov    %rax,%rdi
  41bca1:	e8 dc 0d 02 00       	callq  43ca82 <luaZ_fill>
  41bca6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41bcaa:	89 02                	mov    %eax,(%rdx)
  41bcac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bcb0:	be 2e 00 00 00       	mov    $0x2e,%esi
  41bcb5:	48 89 c7             	mov    %rax,%rdi
  41bcb8:	e8 17 e9 ff ff       	callq  41a5d4 <check_next1>
  41bcbd:	85 c0                	test   %eax,%eax
  41bcbf:	74 29                	je     41bcea <llex+0x621>
  41bcc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bcc5:	be 2e 00 00 00       	mov    $0x2e,%esi
  41bcca:	48 89 c7             	mov    %rax,%rdi
  41bccd:	e8 02 e9 ff ff       	callq  41a5d4 <check_next1>
  41bcd2:	85 c0                	test   %eax,%eax
  41bcd4:	74 0a                	je     41bce0 <llex+0x617>
  41bcd6:	b8 18 01 00 00       	mov    $0x118,%eax
  41bcdb:	e9 c6 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bce0:	b8 17 01 00 00       	mov    $0x117,%eax
  41bce5:	e9 bc 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bcea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bcee:	8b 00                	mov    (%rax),%eax
  41bcf0:	83 c0 01             	add    $0x1,%eax
  41bcf3:	48 98                	cltq   
  41bcf5:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41bcfc:	0f b6 c0             	movzbl %al,%eax
  41bcff:	83 e0 02             	and    $0x2,%eax
  41bd02:	85 c0                	test   %eax,%eax
  41bd04:	75 0a                	jne    41bd10 <llex+0x647>
  41bd06:	b8 2e 00 00 00       	mov    $0x2e,%eax
  41bd0b:	e9 96 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bd10:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41bd14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd18:	48 89 d6             	mov    %rdx,%rsi
  41bd1b:	48 89 c7             	mov    %rax,%rdi
  41bd1e:	e8 c9 e9 ff ff       	callq  41a6ec <read_numeral>
  41bd23:	e9 7e 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bd28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41bd2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd30:	48 89 d6             	mov    %rdx,%rsi
  41bd33:	48 89 c7             	mov    %rax,%rdi
  41bd36:	e8 b1 e9 ff ff       	callq  41a6ec <read_numeral>
  41bd3b:	e9 66 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bd40:	b8 20 01 00 00       	mov    $0x120,%eax
  41bd45:	e9 5c 01 00 00       	jmpq   41bea6 <llex+0x7dd>
  41bd4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd4e:	8b 00                	mov    (%rax),%eax
  41bd50:	83 c0 01             	add    $0x1,%eax
  41bd53:	48 98                	cltq   
  41bd55:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41bd5c:	0f b6 c0             	movzbl %al,%eax
  41bd5f:	83 e0 01             	and    $0x1,%eax
  41bd62:	85 c0                	test   %eax,%eax
  41bd64:	0f 84 df 00 00 00    	je     41be49 <llex+0x780>
  41bd6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd6e:	8b 10                	mov    (%rax),%edx
  41bd70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd74:	89 d6                	mov    %edx,%esi
  41bd76:	48 89 c7             	mov    %rax,%rdi
  41bd79:	e8 20 e2 ff ff       	callq  419f9e <save>
  41bd7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd82:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bd86:	48 8b 02             	mov    (%rdx),%rax
  41bd89:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41bd8d:	48 89 0a             	mov    %rcx,(%rdx)
  41bd90:	48 85 c0             	test   %rax,%rax
  41bd93:	74 1c                	je     41bdb1 <llex+0x6e8>
  41bd95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bd99:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41bd9d:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41bda1:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41bda5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41bda9:	0f b6 00             	movzbl (%rax),%eax
  41bdac:	0f b6 c0             	movzbl %al,%eax
  41bdaf:	eb 10                	jmp    41bdc1 <llex+0x6f8>
  41bdb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bdb5:	48 8b 40 40          	mov    0x40(%rax),%rax
  41bdb9:	48 89 c7             	mov    %rax,%rdi
  41bdbc:	e8 c1 0c 02 00       	callq  43ca82 <luaZ_fill>
  41bdc1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41bdc5:	89 02                	mov    %eax,(%rdx)
  41bdc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bdcb:	8b 00                	mov    (%rax),%eax
  41bdcd:	83 c0 01             	add    $0x1,%eax
  41bdd0:	48 98                	cltq   
  41bdd2:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41bdd9:	0f b6 c0             	movzbl %al,%eax
  41bddc:	83 e0 03             	and    $0x3,%eax
  41bddf:	85 c0                	test   %eax,%eax
  41bde1:	75 87                	jne    41bd6a <llex+0x6a1>
  41bde3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bde7:	48 8b 40 48          	mov    0x48(%rax),%rax
  41bdeb:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41bdef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bdf3:	48 8b 40 48          	mov    0x48(%rax),%rax
  41bdf7:	48 8b 08             	mov    (%rax),%rcx
  41bdfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bdfe:	48 89 ce             	mov    %rcx,%rsi
  41be01:	48 89 c7             	mov    %rax,%rdi
  41be04:	e8 bf e4 ff ff       	callq  41a2c8 <luaX_newstring>
  41be09:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41be0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41be11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41be15:	48 89 10             	mov    %rdx,(%rax)
  41be18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41be1c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41be20:	3c 04                	cmp    $0x4,%al
  41be22:	75 1e                	jne    41be42 <llex+0x779>
  41be24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41be28:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  41be2c:	84 c0                	test   %al,%al
  41be2e:	74 12                	je     41be42 <llex+0x779>
  41be30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41be34:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  41be38:	0f b6 c0             	movzbl %al,%eax
  41be3b:	05 ff 00 00 00       	add    $0xff,%eax
  41be40:	eb 64                	jmp    41bea6 <llex+0x7dd>
  41be42:	b8 23 01 00 00       	mov    $0x123,%eax
  41be47:	eb 5d                	jmp    41bea6 <llex+0x7dd>
  41be49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be4d:	8b 00                	mov    (%rax),%eax
  41be4f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41be52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be56:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41be5a:	48 8b 02             	mov    (%rdx),%rax
  41be5d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  41be61:	48 89 0a             	mov    %rcx,(%rdx)
  41be64:	48 85 c0             	test   %rax,%rax
  41be67:	74 1c                	je     41be85 <llex+0x7bc>
  41be69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be6d:	48 8b 50 40          	mov    0x40(%rax),%rdx
  41be71:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41be75:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41be79:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41be7d:	0f b6 00             	movzbl (%rax),%eax
  41be80:	0f b6 c0             	movzbl %al,%eax
  41be83:	eb 10                	jmp    41be95 <llex+0x7cc>
  41be85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be89:	48 8b 40 40          	mov    0x40(%rax),%rax
  41be8d:	48 89 c7             	mov    %rax,%rdi
  41be90:	e8 ed 0b 02 00       	callq  43ca82 <luaZ_fill>
  41be95:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41be99:	89 02                	mov    %eax,(%rdx)
  41be9b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41be9e:	eb 06                	jmp    41bea6 <llex+0x7dd>
  41bea0:	90                   	nop
  41bea1:	e9 43 f8 ff ff       	jmpq   41b6e9 <llex+0x20>
  41bea6:	c9                   	leaveq 
  41bea7:	c3                   	retq   

000000000041bea8 <luaX_next>:
  41bea8:	55                   	push   %rbp
  41bea9:	48 89 e5             	mov    %rsp,%rbp
  41beac:	48 83 ec 10          	sub    $0x10,%rsp
  41beb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41beb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41beb8:	8b 50 04             	mov    0x4(%rax),%edx
  41bebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bebf:	89 50 08             	mov    %edx,0x8(%rax)
  41bec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bec6:	8b 40 20             	mov    0x20(%rax),%eax
  41bec9:	3d 20 01 00 00       	cmp    $0x120,%eax
  41bece:	74 25                	je     41bef5 <luaX_next+0x4d>
  41bed0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41bed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bed8:	48 8b 50 28          	mov    0x28(%rax),%rdx
  41bedc:	48 8b 40 20          	mov    0x20(%rax),%rax
  41bee0:	48 89 41 10          	mov    %rax,0x10(%rcx)
  41bee4:	48 89 51 18          	mov    %rdx,0x18(%rcx)
  41bee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41beec:	c7 40 20 20 01 00 00 	movl   $0x120,0x20(%rax)
  41bef3:	eb 20                	jmp    41bf15 <luaX_next+0x6d>
  41bef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bef9:	48 8d 50 18          	lea    0x18(%rax),%rdx
  41befd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf01:	48 89 d6             	mov    %rdx,%rsi
  41bf04:	48 89 c7             	mov    %rax,%rdi
  41bf07:	e8 bd f7 ff ff       	callq  41b6c9 <llex>
  41bf0c:	89 c2                	mov    %eax,%edx
  41bf0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf12:	89 50 10             	mov    %edx,0x10(%rax)
  41bf15:	90                   	nop
  41bf16:	c9                   	leaveq 
  41bf17:	c3                   	retq   

000000000041bf18 <luaX_lookahead>:
  41bf18:	55                   	push   %rbp
  41bf19:	48 89 e5             	mov    %rsp,%rbp
  41bf1c:	48 83 ec 10          	sub    $0x10,%rsp
  41bf20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41bf24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf28:	48 8d 50 28          	lea    0x28(%rax),%rdx
  41bf2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf30:	48 89 d6             	mov    %rdx,%rsi
  41bf33:	48 89 c7             	mov    %rax,%rdi
  41bf36:	e8 8e f7 ff ff       	callq  41b6c9 <llex>
  41bf3b:	89 c2                	mov    %eax,%edx
  41bf3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf41:	89 50 20             	mov    %edx,0x20(%rax)
  41bf44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf48:	8b 40 20             	mov    0x20(%rax),%eax
  41bf4b:	c9                   	leaveq 
  41bf4c:	c3                   	retq   

000000000041bf4d <math_abs>:
  41bf4d:	55                   	push   %rbp
  41bf4e:	48 89 e5             	mov    %rsp,%rbp
  41bf51:	48 83 ec 20          	sub    $0x20,%rsp
  41bf55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41bf59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bf5d:	be 01 00 00 00       	mov    $0x1,%esi
  41bf62:	48 89 c7             	mov    %rax,%rdi
  41bf65:	e8 cf 64 fe ff       	callq  402439 <lua_isinteger>
  41bf6a:	85 c0                	test   %eax,%eax
  41bf6c:	74 41                	je     41bfaf <math_abs+0x62>
  41bf6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bf72:	ba 00 00 00 00       	mov    $0x0,%edx
  41bf77:	be 01 00 00 00       	mov    $0x1,%esi
  41bf7c:	48 89 c7             	mov    %rax,%rdi
  41bf7f:	e8 11 69 fe ff       	callq  402895 <lua_tointegerx>
  41bf84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41bf88:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41bf8d:	79 0b                	jns    41bf9a <math_abs+0x4d>
  41bf8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bf93:	48 f7 d8             	neg    %rax
  41bf96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41bf9a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41bf9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bfa2:	48 89 d6             	mov    %rdx,%rsi
  41bfa5:	48 89 c7             	mov    %rax,%rdi
  41bfa8:	e8 68 6d fe ff       	callq  402d15 <lua_pushinteger>
  41bfad:	eb 2d                	jmp    41bfdc <math_abs+0x8f>
  41bfaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bfb3:	be 01 00 00 00       	mov    $0x1,%esi
  41bfb8:	48 89 c7             	mov    %rax,%rdi
  41bfbb:	e8 d8 a8 fe ff       	callq  406898 <luaL_checknumber>
  41bfc0:	66 0f 28 c8          	movapd %xmm0,%xmm1
  41bfc4:	f3 0f 7e 05 34 42 02 	movq   0x24234(%rip),%xmm0        # 440200 <mathlib+0x1c0>
  41bfcb:	00 
  41bfcc:	66 0f 54 c1          	andpd  %xmm1,%xmm0
  41bfd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bfd4:	48 89 c7             	mov    %rax,%rdi
  41bfd7:	e8 f4 6c fe ff       	callq  402cd0 <lua_pushnumber>
  41bfdc:	b8 01 00 00 00       	mov    $0x1,%eax
  41bfe1:	c9                   	leaveq 
  41bfe2:	c3                   	retq   

000000000041bfe3 <math_sin>:
  41bfe3:	55                   	push   %rbp
  41bfe4:	48 89 e5             	mov    %rsp,%rbp
  41bfe7:	48 83 ec 10          	sub    $0x10,%rsp
  41bfeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41bfef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bff3:	be 01 00 00 00       	mov    $0x1,%esi
  41bff8:	48 89 c7             	mov    %rax,%rdi
  41bffb:	e8 98 a8 fe ff       	callq  406898 <luaL_checknumber>
  41c000:	e8 db 56 fe ff       	callq  4016e0 <sin@plt>
  41c005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c009:	48 89 c7             	mov    %rax,%rdi
  41c00c:	e8 bf 6c fe ff       	callq  402cd0 <lua_pushnumber>
  41c011:	b8 01 00 00 00       	mov    $0x1,%eax
  41c016:	c9                   	leaveq 
  41c017:	c3                   	retq   

000000000041c018 <math_cos>:
  41c018:	55                   	push   %rbp
  41c019:	48 89 e5             	mov    %rsp,%rbp
  41c01c:	48 83 ec 10          	sub    $0x10,%rsp
  41c020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c028:	be 01 00 00 00       	mov    $0x1,%esi
  41c02d:	48 89 c7             	mov    %rax,%rdi
  41c030:	e8 63 a8 fe ff       	callq  406898 <luaL_checknumber>
  41c035:	e8 b6 5a fe ff       	callq  401af0 <cos@plt>
  41c03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c03e:	48 89 c7             	mov    %rax,%rdi
  41c041:	e8 8a 6c fe ff       	callq  402cd0 <lua_pushnumber>
  41c046:	b8 01 00 00 00       	mov    $0x1,%eax
  41c04b:	c9                   	leaveq 
  41c04c:	c3                   	retq   

000000000041c04d <math_tan>:
  41c04d:	55                   	push   %rbp
  41c04e:	48 89 e5             	mov    %rsp,%rbp
  41c051:	48 83 ec 10          	sub    $0x10,%rsp
  41c055:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c05d:	be 01 00 00 00       	mov    $0x1,%esi
  41c062:	48 89 c7             	mov    %rax,%rdi
  41c065:	e8 2e a8 fe ff       	callq  406898 <luaL_checknumber>
  41c06a:	e8 61 57 fe ff       	callq  4017d0 <tan@plt>
  41c06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c073:	48 89 c7             	mov    %rax,%rdi
  41c076:	e8 55 6c fe ff       	callq  402cd0 <lua_pushnumber>
  41c07b:	b8 01 00 00 00       	mov    $0x1,%eax
  41c080:	c9                   	leaveq 
  41c081:	c3                   	retq   

000000000041c082 <math_asin>:
  41c082:	55                   	push   %rbp
  41c083:	48 89 e5             	mov    %rsp,%rbp
  41c086:	48 83 ec 10          	sub    $0x10,%rsp
  41c08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c08e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c092:	be 01 00 00 00       	mov    $0x1,%esi
  41c097:	48 89 c7             	mov    %rax,%rdi
  41c09a:	e8 f9 a7 fe ff       	callq  406898 <luaL_checknumber>
  41c09f:	e8 cc 59 fe ff       	callq  401a70 <asin@plt>
  41c0a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c0a8:	48 89 c7             	mov    %rax,%rdi
  41c0ab:	e8 20 6c fe ff       	callq  402cd0 <lua_pushnumber>
  41c0b0:	b8 01 00 00 00       	mov    $0x1,%eax
  41c0b5:	c9                   	leaveq 
  41c0b6:	c3                   	retq   

000000000041c0b7 <math_acos>:
  41c0b7:	55                   	push   %rbp
  41c0b8:	48 89 e5             	mov    %rsp,%rbp
  41c0bb:	48 83 ec 10          	sub    $0x10,%rsp
  41c0bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c0c7:	be 01 00 00 00       	mov    $0x1,%esi
  41c0cc:	48 89 c7             	mov    %rax,%rdi
  41c0cf:	e8 c4 a7 fe ff       	callq  406898 <luaL_checknumber>
  41c0d4:	e8 07 58 fe ff       	callq  4018e0 <acos@plt>
  41c0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c0dd:	48 89 c7             	mov    %rax,%rdi
  41c0e0:	e8 eb 6b fe ff       	callq  402cd0 <lua_pushnumber>
  41c0e5:	b8 01 00 00 00       	mov    $0x1,%eax
  41c0ea:	c9                   	leaveq 
  41c0eb:	c3                   	retq   

000000000041c0ec <math_atan>:
  41c0ec:	55                   	push   %rbp
  41c0ed:	48 89 e5             	mov    %rsp,%rbp
  41c0f0:	48 83 ec 20          	sub    $0x20,%rsp
  41c0f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c0f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c0fc:	be 01 00 00 00       	mov    $0x1,%esi
  41c101:	48 89 c7             	mov    %rax,%rdi
  41c104:	e8 8f a7 fe ff       	callq  406898 <luaL_checknumber>
  41c109:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c10e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c112:	f2 0f 10 05 f6 40 02 	movsd  0x240f6(%rip),%xmm0        # 440210 <mathlib+0x1d0>
  41c119:	00 
  41c11a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c11e:	be 02 00 00 00       	mov    $0x2,%esi
  41c123:	48 89 c7             	mov    %rax,%rdi
  41c126:	e8 c7 a7 fe ff       	callq  4068f2 <luaL_optnumber>
  41c12b:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c130:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c134:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
  41c139:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c13e:	e8 5d 55 fe ff       	callq  4016a0 <atan2@plt>
  41c143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c147:	48 89 c7             	mov    %rax,%rdi
  41c14a:	e8 81 6b fe ff       	callq  402cd0 <lua_pushnumber>
  41c14f:	b8 01 00 00 00       	mov    $0x1,%eax
  41c154:	c9                   	leaveq 
  41c155:	c3                   	retq   

000000000041c156 <math_toint>:
  41c156:	55                   	push   %rbp
  41c157:	48 89 e5             	mov    %rsp,%rbp
  41c15a:	48 83 ec 20          	sub    $0x20,%rsp
  41c15e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c162:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  41c166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c16a:	be 01 00 00 00       	mov    $0x1,%esi
  41c16f:	48 89 c7             	mov    %rax,%rdi
  41c172:	e8 1e 67 fe ff       	callq  402895 <lua_tointegerx>
  41c177:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c17b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41c17e:	85 c0                	test   %eax,%eax
  41c180:	0f 95 c0             	setne  %al
  41c183:	0f b6 c0             	movzbl %al,%eax
  41c186:	48 85 c0             	test   %rax,%rax
  41c189:	74 15                	je     41c1a0 <math_toint+0x4a>
  41c18b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41c18f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c193:	48 89 d6             	mov    %rdx,%rsi
  41c196:	48 89 c7             	mov    %rax,%rdi
  41c199:	e8 77 6b fe ff       	callq  402d15 <lua_pushinteger>
  41c19e:	eb 1d                	jmp    41c1bd <math_toint+0x67>
  41c1a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c1a4:	be 01 00 00 00       	mov    $0x1,%esi
  41c1a9:	48 89 c7             	mov    %rax,%rdi
  41c1ac:	e8 d4 a5 fe ff       	callq  406785 <luaL_checkany>
  41c1b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c1b5:	48 89 c7             	mov    %rax,%rdi
  41c1b8:	e8 e8 6a fe ff       	callq  402ca5 <lua_pushnil>
  41c1bd:	b8 01 00 00 00       	mov    $0x1,%eax
  41c1c2:	c9                   	leaveq 
  41c1c3:	c3                   	retq   

000000000041c1c4 <pushnumint>:
  41c1c4:	55                   	push   %rbp
  41c1c5:	48 89 e5             	mov    %rsp,%rbp
  41c1c8:	48 83 ec 20          	sub    $0x20,%rsp
  41c1cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c1d0:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  41c1d5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41c1da:	66 0f 2f 05 36 40 02 	comisd 0x24036(%rip),%xmm0        # 440218 <mathlib+0x1d8>
  41c1e1:	00 
  41c1e2:	72 32                	jb     41c216 <pushnumint+0x52>
  41c1e4:	f2 0f 10 05 34 40 02 	movsd  0x24034(%rip),%xmm0        # 440220 <mathlib+0x1e0>
  41c1eb:	00 
  41c1ec:	66 0f 2f 45 e0       	comisd -0x20(%rbp),%xmm0
  41c1f1:	76 23                	jbe    41c216 <pushnumint+0x52>
  41c1f3:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41c1f8:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  41c1fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c201:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41c205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c209:	48 89 d6             	mov    %rdx,%rsi
  41c20c:	48 89 c7             	mov    %rax,%rdi
  41c20f:	e8 01 6b fe ff       	callq  402d15 <lua_pushinteger>
  41c214:	eb 11                	jmp    41c227 <pushnumint+0x63>
  41c216:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41c21b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c21f:	48 89 c7             	mov    %rax,%rdi
  41c222:	e8 a9 6a fe ff       	callq  402cd0 <lua_pushnumber>
  41c227:	90                   	nop
  41c228:	c9                   	leaveq 
  41c229:	c3                   	retq   

000000000041c22a <math_floor>:
  41c22a:	55                   	push   %rbp
  41c22b:	48 89 e5             	mov    %rsp,%rbp
  41c22e:	48 83 ec 20          	sub    $0x20,%rsp
  41c232:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c236:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c23a:	be 01 00 00 00       	mov    $0x1,%esi
  41c23f:	48 89 c7             	mov    %rax,%rdi
  41c242:	e8 f2 61 fe ff       	callq  402439 <lua_isinteger>
  41c247:	85 c0                	test   %eax,%eax
  41c249:	74 13                	je     41c25e <math_floor+0x34>
  41c24b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c24f:	be 01 00 00 00       	mov    $0x1,%esi
  41c254:	48 89 c7             	mov    %rax,%rdi
  41c257:	e8 28 5d fe ff       	callq  401f84 <lua_settop>
  41c25c:	eb 30                	jmp    41c28e <math_floor+0x64>
  41c25e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c262:	be 01 00 00 00       	mov    $0x1,%esi
  41c267:	48 89 c7             	mov    %rax,%rdi
  41c26a:	e8 29 a6 fe ff       	callq  406898 <luaL_checknumber>
  41c26f:	e8 0c 58 fe ff       	callq  401a80 <floor@plt>
  41c274:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c27d:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c282:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c286:	48 89 c7             	mov    %rax,%rdi
  41c289:	e8 36 ff ff ff       	callq  41c1c4 <pushnumint>
  41c28e:	b8 01 00 00 00       	mov    $0x1,%eax
  41c293:	c9                   	leaveq 
  41c294:	c3                   	retq   

000000000041c295 <math_ceil>:
  41c295:	55                   	push   %rbp
  41c296:	48 89 e5             	mov    %rsp,%rbp
  41c299:	48 83 ec 20          	sub    $0x20,%rsp
  41c29d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c2a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c2a5:	be 01 00 00 00       	mov    $0x1,%esi
  41c2aa:	48 89 c7             	mov    %rax,%rdi
  41c2ad:	e8 87 61 fe ff       	callq  402439 <lua_isinteger>
  41c2b2:	85 c0                	test   %eax,%eax
  41c2b4:	74 13                	je     41c2c9 <math_ceil+0x34>
  41c2b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c2ba:	be 01 00 00 00       	mov    $0x1,%esi
  41c2bf:	48 89 c7             	mov    %rax,%rdi
  41c2c2:	e8 bd 5c fe ff       	callq  401f84 <lua_settop>
  41c2c7:	eb 30                	jmp    41c2f9 <math_ceil+0x64>
  41c2c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c2cd:	be 01 00 00 00       	mov    $0x1,%esi
  41c2d2:	48 89 c7             	mov    %rax,%rdi
  41c2d5:	e8 be a5 fe ff       	callq  406898 <luaL_checknumber>
  41c2da:	e8 e1 53 fe ff       	callq  4016c0 <ceil@plt>
  41c2df:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c2e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c2e8:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c2ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c2f1:	48 89 c7             	mov    %rax,%rdi
  41c2f4:	e8 cb fe ff ff       	callq  41c1c4 <pushnumint>
  41c2f9:	b8 01 00 00 00       	mov    $0x1,%eax
  41c2fe:	c9                   	leaveq 
  41c2ff:	c3                   	retq   

000000000041c300 <math_fmod>:
  41c300:	55                   	push   %rbp
  41c301:	48 89 e5             	mov    %rsp,%rbp
  41c304:	48 83 ec 20          	sub    $0x20,%rsp
  41c308:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c30c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c310:	be 01 00 00 00       	mov    $0x1,%esi
  41c315:	48 89 c7             	mov    %rax,%rdi
  41c318:	e8 1c 61 fe ff       	callq  402439 <lua_isinteger>
  41c31d:	85 c0                	test   %eax,%eax
  41c31f:	0f 84 aa 00 00 00    	je     41c3cf <math_fmod+0xcf>
  41c325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c329:	be 02 00 00 00       	mov    $0x2,%esi
  41c32e:	48 89 c7             	mov    %rax,%rdi
  41c331:	e8 03 61 fe ff       	callq  402439 <lua_isinteger>
  41c336:	85 c0                	test   %eax,%eax
  41c338:	0f 84 91 00 00 00    	je     41c3cf <math_fmod+0xcf>
  41c33e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c342:	ba 00 00 00 00       	mov    $0x0,%edx
  41c347:	be 02 00 00 00       	mov    $0x2,%esi
  41c34c:	48 89 c7             	mov    %rax,%rdi
  41c34f:	e8 41 65 fe ff       	callq  402895 <lua_tointegerx>
  41c354:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c35c:	48 83 c0 01          	add    $0x1,%rax
  41c360:	48 83 f8 01          	cmp    $0x1,%rax
  41c364:	77 3c                	ja     41c3a2 <math_fmod+0xa2>
  41c366:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41c36b:	0f 95 c0             	setne  %al
  41c36e:	0f b6 c0             	movzbl %al,%eax
  41c371:	48 85 c0             	test   %rax,%rax
  41c374:	75 18                	jne    41c38e <math_fmod+0x8e>
  41c376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c37a:	ba 20 ff 43 00       	mov    $0x43ff20,%edx
  41c37f:	be 02 00 00 00       	mov    $0x2,%esi
  41c384:	48 89 c7             	mov    %rax,%rdi
  41c387:	e8 66 9b fe ff       	callq  405ef2 <luaL_argerror>
  41c38c:	85 c0                	test   %eax,%eax
  41c38e:	90                   	nop
  41c38f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c393:	be 00 00 00 00       	mov    $0x0,%esi
  41c398:	48 89 c7             	mov    %rax,%rdi
  41c39b:	e8 75 69 fe ff       	callq  402d15 <lua_pushinteger>
  41c3a0:	eb 6a                	jmp    41c40c <math_fmod+0x10c>
  41c3a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c3a6:	ba 00 00 00 00       	mov    $0x0,%edx
  41c3ab:	be 01 00 00 00       	mov    $0x1,%esi
  41c3b0:	48 89 c7             	mov    %rax,%rdi
  41c3b3:	e8 dd 64 fe ff       	callq  402895 <lua_tointegerx>
  41c3b8:	48 99                	cqto   
  41c3ba:	48 f7 7d f8          	idivq  -0x8(%rbp)
  41c3be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c3c2:	48 89 d6             	mov    %rdx,%rsi
  41c3c5:	48 89 c7             	mov    %rax,%rdi
  41c3c8:	e8 48 69 fe ff       	callq  402d15 <lua_pushinteger>
  41c3cd:	eb 3d                	jmp    41c40c <math_fmod+0x10c>
  41c3cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c3d3:	be 02 00 00 00       	mov    $0x2,%esi
  41c3d8:	48 89 c7             	mov    %rax,%rdi
  41c3db:	e8 b8 a4 fe ff       	callq  406898 <luaL_checknumber>
  41c3e0:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  41c3e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c3e9:	be 01 00 00 00       	mov    $0x1,%esi
  41c3ee:	48 89 c7             	mov    %rax,%rdi
  41c3f1:	e8 a2 a4 fe ff       	callq  406898 <luaL_checknumber>
  41c3f6:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
  41c3fb:	e8 b0 55 fe ff       	callq  4019b0 <fmod@plt>
  41c400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c404:	48 89 c7             	mov    %rax,%rdi
  41c407:	e8 c4 68 fe ff       	callq  402cd0 <lua_pushnumber>
  41c40c:	b8 01 00 00 00       	mov    $0x1,%eax
  41c411:	c9                   	leaveq 
  41c412:	c3                   	retq   

000000000041c413 <math_modf>:
  41c413:	55                   	push   %rbp
  41c414:	48 89 e5             	mov    %rsp,%rbp
  41c417:	48 83 ec 20          	sub    $0x20,%rsp
  41c41b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c41f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c423:	be 01 00 00 00       	mov    $0x1,%esi
  41c428:	48 89 c7             	mov    %rax,%rdi
  41c42b:	e8 09 60 fe ff       	callq  402439 <lua_isinteger>
  41c430:	85 c0                	test   %eax,%eax
  41c432:	74 26                	je     41c45a <math_modf+0x47>
  41c434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c438:	be 01 00 00 00       	mov    $0x1,%esi
  41c43d:	48 89 c7             	mov    %rax,%rdi
  41c440:	e8 3f 5b fe ff       	callq  401f84 <lua_settop>
  41c445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c449:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41c44d:	48 89 c7             	mov    %rax,%rdi
  41c450:	e8 7b 68 fe ff       	callq  402cd0 <lua_pushnumber>
  41c455:	e9 8e 00 00 00       	jmpq   41c4e8 <math_modf+0xd5>
  41c45a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c45e:	be 01 00 00 00       	mov    $0x1,%esi
  41c463:	48 89 c7             	mov    %rax,%rdi
  41c466:	e8 2d a4 fe ff       	callq  406898 <luaL_checknumber>
  41c46b:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c470:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c474:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41c478:	66 0f 2f 45 f8       	comisd -0x8(%rbp),%xmm0
  41c47d:	76 11                	jbe    41c490 <math_modf+0x7d>
  41c47f:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c484:	e8 37 52 fe ff       	callq  4016c0 <ceil@plt>
  41c489:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c48e:	eb 0f                	jmp    41c49f <math_modf+0x8c>
  41c490:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c495:	e8 e6 55 fe ff       	callq  401a80 <floor@plt>
  41c49a:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c49f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c4a3:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  41c4a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c4ac:	48 89 c7             	mov    %rax,%rdi
  41c4af:	e8 10 fd ff ff       	callq  41c1c4 <pushnumint>
  41c4b4:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c4b9:	66 0f 2e 45 f0       	ucomisd -0x10(%rbp),%xmm0
  41c4be:	7a 0c                	jp     41c4cc <math_modf+0xb9>
  41c4c0:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c4c5:	66 0f 2e 45 f0       	ucomisd -0x10(%rbp),%xmm0
  41c4ca:	74 0c                	je     41c4d8 <math_modf+0xc5>
  41c4cc:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c4d1:	f2 0f 5c 45 f0       	subsd  -0x10(%rbp),%xmm0
  41c4d6:	eb 04                	jmp    41c4dc <math_modf+0xc9>
  41c4d8:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41c4dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c4e0:	48 89 c7             	mov    %rax,%rdi
  41c4e3:	e8 e8 67 fe ff       	callq  402cd0 <lua_pushnumber>
  41c4e8:	b8 02 00 00 00       	mov    $0x2,%eax
  41c4ed:	c9                   	leaveq 
  41c4ee:	c3                   	retq   

000000000041c4ef <math_sqrt>:
  41c4ef:	55                   	push   %rbp
  41c4f0:	48 89 e5             	mov    %rsp,%rbp
  41c4f3:	48 83 ec 10          	sub    $0x10,%rsp
  41c4f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c4fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c4ff:	be 01 00 00 00       	mov    $0x1,%esi
  41c504:	48 89 c7             	mov    %rax,%rdi
  41c507:	e8 8c a3 fe ff       	callq  406898 <luaL_checknumber>
  41c50c:	e8 1f 53 fe ff       	callq  401830 <sqrt@plt>
  41c511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c515:	48 89 c7             	mov    %rax,%rdi
  41c518:	e8 b3 67 fe ff       	callq  402cd0 <lua_pushnumber>
  41c51d:	b8 01 00 00 00       	mov    $0x1,%eax
  41c522:	c9                   	leaveq 
  41c523:	c3                   	retq   

000000000041c524 <math_ult>:
  41c524:	55                   	push   %rbp
  41c525:	48 89 e5             	mov    %rsp,%rbp
  41c528:	48 83 ec 20          	sub    $0x20,%rsp
  41c52c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c530:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c534:	be 01 00 00 00       	mov    $0x1,%esi
  41c539:	48 89 c7             	mov    %rax,%rdi
  41c53c:	e8 56 a4 fe ff       	callq  406997 <luaL_checkinteger>
  41c541:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c545:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c549:	be 02 00 00 00       	mov    $0x2,%esi
  41c54e:	48 89 c7             	mov    %rax,%rdi
  41c551:	e8 41 a4 fe ff       	callq  406997 <luaL_checkinteger>
  41c556:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c55a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41c55e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41c562:	48 39 c2             	cmp    %rax,%rdx
  41c565:	0f 92 c0             	setb   %al
  41c568:	0f b6 d0             	movzbl %al,%edx
  41c56b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c56f:	89 d6                	mov    %edx,%esi
  41c571:	48 89 c7             	mov    %rax,%rdi
  41c574:	e8 bf 6b fe ff       	callq  403138 <lua_pushboolean>
  41c579:	b8 01 00 00 00       	mov    $0x1,%eax
  41c57e:	c9                   	leaveq 
  41c57f:	c3                   	retq   

000000000041c580 <math_log>:
  41c580:	55                   	push   %rbp
  41c581:	48 89 e5             	mov    %rsp,%rbp
  41c584:	48 83 ec 30          	sub    $0x30,%rsp
  41c588:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41c58c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c590:	be 01 00 00 00       	mov    $0x1,%esi
  41c595:	48 89 c7             	mov    %rax,%rdi
  41c598:	e8 fb a2 fe ff       	callq  406898 <luaL_checknumber>
  41c59d:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c5a2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c5a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c5aa:	be 02 00 00 00       	mov    $0x2,%esi
  41c5af:	48 89 c7             	mov    %rax,%rdi
  41c5b2:	e8 bc 5d fe ff       	callq  402373 <lua_type>
  41c5b7:	85 c0                	test   %eax,%eax
  41c5b9:	7f 18                	jg     41c5d3 <math_log+0x53>
  41c5bb:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  41c5c0:	e8 5b 51 fe ff       	callq  401720 <log@plt>
  41c5c5:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c5ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c5ce:	e9 ab 00 00 00       	jmpq   41c67e <math_log+0xfe>
  41c5d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c5d7:	be 02 00 00 00       	mov    $0x2,%esi
  41c5dc:	48 89 c7             	mov    %rax,%rdi
  41c5df:	e8 b4 a2 fe ff       	callq  406898 <luaL_checknumber>
  41c5e4:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c5e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41c5ed:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41c5f2:	66 0f 2e 05 2e 3c 02 	ucomisd 0x23c2e(%rip),%xmm0        # 440228 <mathlib+0x1e8>
  41c5f9:	00 
  41c5fa:	7a 24                	jp     41c620 <math_log+0xa0>
  41c5fc:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41c601:	66 0f 2e 05 1f 3c 02 	ucomisd 0x23c1f(%rip),%xmm0        # 440228 <mathlib+0x1e8>
  41c608:	00 
  41c609:	75 15                	jne    41c620 <math_log+0xa0>
  41c60b:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  41c610:	e8 0b 54 fe ff       	callq  401a20 <log2@plt>
  41c615:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c61a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c61e:	eb 5e                	jmp    41c67e <math_log+0xfe>
  41c620:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41c625:	66 0f 2e 05 03 3c 02 	ucomisd 0x23c03(%rip),%xmm0        # 440230 <mathlib+0x1f0>
  41c62c:	00 
  41c62d:	7a 24                	jp     41c653 <math_log+0xd3>
  41c62f:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41c634:	66 0f 2e 05 f4 3b 02 	ucomisd 0x23bf4(%rip),%xmm0        # 440230 <mathlib+0x1f0>
  41c63b:	00 
  41c63c:	75 15                	jne    41c653 <math_log+0xd3>
  41c63e:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  41c643:	e8 58 51 fe ff       	callq  4017a0 <log10@plt>
  41c648:	66 48 0f 7e c0       	movq   %xmm0,%rax
  41c64d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41c651:	eb 2b                	jmp    41c67e <math_log+0xfe>
  41c653:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  41c658:	e8 c3 50 fe ff       	callq  401720 <log@plt>
  41c65d:	f2 0f 11 45 d0       	movsd  %xmm0,-0x30(%rbp)
  41c662:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41c667:	e8 b4 50 fe ff       	callq  401720 <log@plt>
  41c66c:	f2 0f 10 4d d0       	movsd  -0x30(%rbp),%xmm1
  41c671:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
  41c675:	66 0f 28 c1          	movapd %xmm1,%xmm0
  41c679:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  41c67e:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41c683:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c687:	48 89 c7             	mov    %rax,%rdi
  41c68a:	e8 41 66 fe ff       	callq  402cd0 <lua_pushnumber>
  41c68f:	b8 01 00 00 00       	mov    $0x1,%eax
  41c694:	c9                   	leaveq 
  41c695:	c3                   	retq   

000000000041c696 <math_exp>:
  41c696:	55                   	push   %rbp
  41c697:	48 89 e5             	mov    %rsp,%rbp
  41c69a:	48 83 ec 10          	sub    $0x10,%rsp
  41c69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c6a6:	be 01 00 00 00       	mov    $0x1,%esi
  41c6ab:	48 89 c7             	mov    %rax,%rdi
  41c6ae:	e8 e5 a1 fe ff       	callq  406898 <luaL_checknumber>
  41c6b3:	e8 e8 52 fe ff       	callq  4019a0 <exp@plt>
  41c6b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c6bc:	48 89 c7             	mov    %rax,%rdi
  41c6bf:	e8 0c 66 fe ff       	callq  402cd0 <lua_pushnumber>
  41c6c4:	b8 01 00 00 00       	mov    $0x1,%eax
  41c6c9:	c9                   	leaveq 
  41c6ca:	c3                   	retq   

000000000041c6cb <math_deg>:
  41c6cb:	55                   	push   %rbp
  41c6cc:	48 89 e5             	mov    %rsp,%rbp
  41c6cf:	48 83 ec 10          	sub    $0x10,%rsp
  41c6d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c6d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c6db:	be 01 00 00 00       	mov    $0x1,%esi
  41c6e0:	48 89 c7             	mov    %rax,%rdi
  41c6e3:	e8 b0 a1 fe ff       	callq  406898 <luaL_checknumber>
  41c6e8:	66 0f 28 c8          	movapd %xmm0,%xmm1
  41c6ec:	f2 0f 10 05 44 3b 02 	movsd  0x23b44(%rip),%xmm0        # 440238 <mathlib+0x1f8>
  41c6f3:	00 
  41c6f4:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  41c6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c6fc:	48 89 c7             	mov    %rax,%rdi
  41c6ff:	e8 cc 65 fe ff       	callq  402cd0 <lua_pushnumber>
  41c704:	b8 01 00 00 00       	mov    $0x1,%eax
  41c709:	c9                   	leaveq 
  41c70a:	c3                   	retq   

000000000041c70b <math_rad>:
  41c70b:	55                   	push   %rbp
  41c70c:	48 89 e5             	mov    %rsp,%rbp
  41c70f:	48 83 ec 10          	sub    $0x10,%rsp
  41c713:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c71b:	be 01 00 00 00       	mov    $0x1,%esi
  41c720:	48 89 c7             	mov    %rax,%rdi
  41c723:	e8 70 a1 fe ff       	callq  406898 <luaL_checknumber>
  41c728:	66 0f 28 c8          	movapd %xmm0,%xmm1
  41c72c:	f2 0f 10 05 0c 3b 02 	movsd  0x23b0c(%rip),%xmm0        # 440240 <mathlib+0x200>
  41c733:	00 
  41c734:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  41c738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c73c:	48 89 c7             	mov    %rax,%rdi
  41c73f:	e8 8c 65 fe ff       	callq  402cd0 <lua_pushnumber>
  41c744:	b8 01 00 00 00       	mov    $0x1,%eax
  41c749:	c9                   	leaveq 
  41c74a:	c3                   	retq   

000000000041c74b <math_min>:
  41c74b:	55                   	push   %rbp
  41c74c:	48 89 e5             	mov    %rsp,%rbp
  41c74f:	48 83 ec 20          	sub    $0x20,%rsp
  41c753:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c757:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c75b:	48 89 c7             	mov    %rax,%rdi
  41c75e:	e8 f6 57 fe ff       	callq  401f59 <lua_gettop>
  41c763:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41c766:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41c76d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  41c771:	0f 9f c0             	setg   %al
  41c774:	0f b6 c0             	movzbl %al,%eax
  41c777:	48 85 c0             	test   %rax,%rax
  41c77a:	75 18                	jne    41c794 <math_min+0x49>
  41c77c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c780:	ba 25 ff 43 00       	mov    $0x43ff25,%edx
  41c785:	be 01 00 00 00       	mov    $0x1,%esi
  41c78a:	48 89 c7             	mov    %rax,%rdi
  41c78d:	e8 60 97 fe ff       	callq  405ef2 <luaL_argerror>
  41c792:	85 c0                	test   %eax,%eax
  41c794:	90                   	nop
  41c795:	c7 45 f8 02 00 00 00 	movl   $0x2,-0x8(%rbp)
  41c79c:	eb 25                	jmp    41c7c3 <math_min+0x78>
  41c79e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41c7a1:	8b 75 f8             	mov    -0x8(%rbp),%esi
  41c7a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c7a8:	b9 01 00 00 00       	mov    $0x1,%ecx
  41c7ad:	48 89 c7             	mov    %rax,%rdi
  41c7b0:	e8 15 5f fe ff       	callq  4026ca <lua_compare>
  41c7b5:	85 c0                	test   %eax,%eax
  41c7b7:	74 06                	je     41c7bf <math_min+0x74>
  41c7b9:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41c7bc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41c7bf:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  41c7c3:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41c7c6:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  41c7c9:	7e d3                	jle    41c79e <math_min+0x53>
  41c7cb:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41c7ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c7d2:	89 d6                	mov    %edx,%esi
  41c7d4:	48 89 c7             	mov    %rax,%rdi
  41c7d7:	e8 33 5b fe ff       	callq  40230f <lua_pushvalue>
  41c7dc:	b8 01 00 00 00       	mov    $0x1,%eax
  41c7e1:	c9                   	leaveq 
  41c7e2:	c3                   	retq   

000000000041c7e3 <math_max>:
  41c7e3:	55                   	push   %rbp
  41c7e4:	48 89 e5             	mov    %rsp,%rbp
  41c7e7:	48 83 ec 20          	sub    $0x20,%rsp
  41c7eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41c7ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c7f3:	48 89 c7             	mov    %rax,%rdi
  41c7f6:	e8 5e 57 fe ff       	callq  401f59 <lua_gettop>
  41c7fb:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41c7fe:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41c805:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  41c809:	0f 9f c0             	setg   %al
  41c80c:	0f b6 c0             	movzbl %al,%eax
  41c80f:	48 85 c0             	test   %rax,%rax
  41c812:	75 18                	jne    41c82c <math_max+0x49>
  41c814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c818:	ba 25 ff 43 00       	mov    $0x43ff25,%edx
  41c81d:	be 01 00 00 00       	mov    $0x1,%esi
  41c822:	48 89 c7             	mov    %rax,%rdi
  41c825:	e8 c8 96 fe ff       	callq  405ef2 <luaL_argerror>
  41c82a:	85 c0                	test   %eax,%eax
  41c82c:	90                   	nop
  41c82d:	c7 45 f8 02 00 00 00 	movl   $0x2,-0x8(%rbp)
  41c834:	eb 25                	jmp    41c85b <math_max+0x78>
  41c836:	8b 55 f8             	mov    -0x8(%rbp),%edx
  41c839:	8b 75 fc             	mov    -0x4(%rbp),%esi
  41c83c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c840:	b9 01 00 00 00       	mov    $0x1,%ecx
  41c845:	48 89 c7             	mov    %rax,%rdi
  41c848:	e8 7d 5e fe ff       	callq  4026ca <lua_compare>
  41c84d:	85 c0                	test   %eax,%eax
  41c84f:	74 06                	je     41c857 <math_max+0x74>
  41c851:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41c854:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41c857:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  41c85b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41c85e:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  41c861:	7e d3                	jle    41c836 <math_max+0x53>
  41c863:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41c866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c86a:	89 d6                	mov    %edx,%esi
  41c86c:	48 89 c7             	mov    %rax,%rdi
  41c86f:	e8 9b 5a fe ff       	callq  40230f <lua_pushvalue>
  41c874:	b8 01 00 00 00       	mov    $0x1,%eax
  41c879:	c9                   	leaveq 
  41c87a:	c3                   	retq   

000000000041c87b <math_type>:
  41c87b:	55                   	push   %rbp
  41c87c:	48 89 e5             	mov    %rsp,%rbp
  41c87f:	48 83 ec 10          	sub    $0x10,%rsp
  41c883:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c88b:	be 01 00 00 00       	mov    $0x1,%esi
  41c890:	48 89 c7             	mov    %rax,%rdi
  41c893:	e8 db 5a fe ff       	callq  402373 <lua_type>
  41c898:	83 f8 03             	cmp    $0x3,%eax
  41c89b:	75 32                	jne    41c8cf <math_type+0x54>
  41c89d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c8a1:	be 01 00 00 00       	mov    $0x1,%esi
  41c8a6:	48 89 c7             	mov    %rax,%rdi
  41c8a9:	e8 8b 5b fe ff       	callq  402439 <lua_isinteger>
  41c8ae:	85 c0                	test   %eax,%eax
  41c8b0:	74 07                	je     41c8b9 <math_type+0x3e>
  41c8b2:	ba 34 ff 43 00       	mov    $0x43ff34,%edx
  41c8b7:	eb 05                	jmp    41c8be <math_type+0x43>
  41c8b9:	ba 3c ff 43 00       	mov    $0x43ff3c,%edx
  41c8be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c8c2:	48 89 d6             	mov    %rdx,%rsi
  41c8c5:	48 89 c7             	mov    %rax,%rdi
  41c8c8:	e8 41 65 fe ff       	callq  402e0e <lua_pushstring>
  41c8cd:	eb 1d                	jmp    41c8ec <math_type+0x71>
  41c8cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c8d3:	be 01 00 00 00       	mov    $0x1,%esi
  41c8d8:	48 89 c7             	mov    %rax,%rdi
  41c8db:	e8 a5 9e fe ff       	callq  406785 <luaL_checkany>
  41c8e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c8e4:	48 89 c7             	mov    %rax,%rdi
  41c8e7:	e8 b9 63 fe ff       	callq  402ca5 <lua_pushnil>
  41c8ec:	b8 01 00 00 00       	mov    $0x1,%eax
  41c8f1:	c9                   	leaveq 
  41c8f2:	c3                   	retq   

000000000041c8f3 <rotl>:
  41c8f3:	55                   	push   %rbp
  41c8f4:	48 89 e5             	mov    %rsp,%rbp
  41c8f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c8fb:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41c8fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41c901:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41c905:	89 c1                	mov    %eax,%ecx
  41c907:	48 d3 c2             	rol    %cl,%rdx
  41c90a:	48 89 d0             	mov    %rdx,%rax
  41c90d:	5d                   	pop    %rbp
  41c90e:	c3                   	retq   

000000000041c90f <nextrand>:
  41c90f:	55                   	push   %rbp
  41c910:	48 89 e5             	mov    %rsp,%rbp
  41c913:	53                   	push   %rbx
  41c914:	48 83 ec 38          	sub    $0x38,%rsp
  41c918:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  41c91c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c920:	48 8b 00             	mov    (%rax),%rax
  41c923:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c927:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c92b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41c92f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41c933:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c937:	48 83 c0 10          	add    $0x10,%rax
  41c93b:	48 8b 00             	mov    (%rax),%rax
  41c93e:	48 33 45 f0          	xor    -0x10(%rbp),%rax
  41c942:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41c946:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c94a:	48 83 c0 18          	add    $0x18,%rax
  41c94e:	48 8b 00             	mov    (%rax),%rax
  41c951:	48 33 45 e8          	xor    -0x18(%rbp),%rax
  41c955:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41c959:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41c95d:	48 89 d0             	mov    %rdx,%rax
  41c960:	48 c1 e0 02          	shl    $0x2,%rax
  41c964:	48 01 d0             	add    %rdx,%rax
  41c967:	be 07 00 00 00       	mov    $0x7,%esi
  41c96c:	48 89 c7             	mov    %rax,%rdi
  41c96f:	e8 7f ff ff ff       	callq  41c8f3 <rotl>
  41c974:	48 89 c2             	mov    %rax,%rdx
  41c977:	48 89 d0             	mov    %rdx,%rax
  41c97a:	48 c1 e0 03          	shl    $0x3,%rax
  41c97e:	48 01 d0             	add    %rdx,%rax
  41c981:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c985:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41c989:	48 33 45 d8          	xor    -0x28(%rbp),%rax
  41c98d:	48 89 c2             	mov    %rax,%rdx
  41c990:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c994:	48 89 10             	mov    %rdx,(%rax)
  41c997:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c99b:	48 8d 50 08          	lea    0x8(%rax),%rdx
  41c99f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c9a3:	48 33 45 e0          	xor    -0x20(%rbp),%rax
  41c9a7:	48 89 02             	mov    %rax,(%rdx)
  41c9aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c9ae:	48 c1 e0 11          	shl    $0x11,%rax
  41c9b2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41c9b6:	48 83 c2 10          	add    $0x10,%rdx
  41c9ba:	48 33 45 e0          	xor    -0x20(%rbp),%rax
  41c9be:	48 89 02             	mov    %rax,(%rdx)
  41c9c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c9c5:	48 8d 58 18          	lea    0x18(%rax),%rbx
  41c9c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c9cd:	be 2d 00 00 00       	mov    $0x2d,%esi
  41c9d2:	48 89 c7             	mov    %rax,%rdi
  41c9d5:	e8 19 ff ff ff       	callq  41c8f3 <rotl>
  41c9da:	48 89 03             	mov    %rax,(%rbx)
  41c9dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41c9e1:	48 83 c4 38          	add    $0x38,%rsp
  41c9e5:	5b                   	pop    %rbx
  41c9e6:	5d                   	pop    %rbp
  41c9e7:	c3                   	retq   

000000000041c9e8 <I2d>:
  41c9e8:	55                   	push   %rbp
  41c9e9:	48 89 e5             	mov    %rsp,%rbp
  41c9ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c9f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c9f4:	48 c1 e8 0b          	shr    $0xb,%rax
  41c9f8:	48 85 c0             	test   %rax,%rax
  41c9fb:	78 07                	js     41ca04 <I2d+0x1c>
  41c9fd:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  41ca02:	eb 15                	jmp    41ca19 <I2d+0x31>
  41ca04:	48 89 c2             	mov    %rax,%rdx
  41ca07:	48 d1 ea             	shr    %rdx
  41ca0a:	83 e0 01             	and    $0x1,%eax
  41ca0d:	48 09 c2             	or     %rax,%rdx
  41ca10:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  41ca15:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  41ca19:	f2 0f 10 0d 27 38 02 	movsd  0x23827(%rip),%xmm1        # 440248 <mathlib+0x208>
  41ca20:	00 
  41ca21:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  41ca25:	5d                   	pop    %rbp
  41ca26:	c3                   	retq   

000000000041ca27 <project>:
  41ca27:	55                   	push   %rbp
  41ca28:	48 89 e5             	mov    %rsp,%rbp
  41ca2b:	48 83 ec 28          	sub    $0x28,%rsp
  41ca2f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ca33:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41ca37:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41ca3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41ca3f:	48 83 c0 01          	add    $0x1,%rax
  41ca43:	48 23 45 e0          	and    -0x20(%rbp),%rax
  41ca47:	48 85 c0             	test   %rax,%rax
  41ca4a:	75 0a                	jne    41ca56 <project+0x2f>
  41ca4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ca50:	48 23 45 e0          	and    -0x20(%rbp),%rax
  41ca54:	eb 77                	jmp    41cacd <project+0xa6>
  41ca56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41ca5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ca5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca62:	48 d1 e8             	shr    %rax
  41ca65:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41ca69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca6d:	48 c1 e8 02          	shr    $0x2,%rax
  41ca71:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41ca75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca79:	48 c1 e8 04          	shr    $0x4,%rax
  41ca7d:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41ca81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca85:	48 c1 e8 08          	shr    $0x8,%rax
  41ca89:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41ca8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca91:	48 c1 e8 10          	shr    $0x10,%rax
  41ca95:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41ca99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ca9d:	48 c1 e8 20          	shr    $0x20,%rax
  41caa1:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  41caa5:	eb 10                	jmp    41cab7 <project+0x90>
  41caa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41caab:	48 89 c7             	mov    %rax,%rdi
  41caae:	e8 5c fe ff ff       	callq  41c90f <nextrand>
  41cab3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41cab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cabb:	48 21 45 e8          	and    %rax,-0x18(%rbp)
  41cabf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cac3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  41cac7:	77 de                	ja     41caa7 <project+0x80>
  41cac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cacd:	c9                   	leaveq 
  41cace:	c3                   	retq   

000000000041cacf <math_random>:
  41cacf:	55                   	push   %rbp
  41cad0:	48 89 e5             	mov    %rsp,%rbp
  41cad3:	48 83 ec 40          	sub    $0x40,%rsp
  41cad7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41cadb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cadf:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  41cae4:	48 89 c7             	mov    %rax,%rdi
  41cae7:	e8 cb 60 fe ff       	callq  402bb7 <lua_touserdata>
  41caec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41caf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41caf4:	48 89 c7             	mov    %rax,%rdi
  41caf7:	e8 13 fe ff ff       	callq  41c90f <nextrand>
  41cafc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41cb00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb04:	48 89 c7             	mov    %rax,%rdi
  41cb07:	e8 4d 54 fe ff       	callq  401f59 <lua_gettop>
  41cb0c:	83 f8 01             	cmp    $0x1,%eax
  41cb0f:	74 2f                	je     41cb40 <math_random+0x71>
  41cb11:	83 f8 02             	cmp    $0x2,%eax
  41cb14:	74 6b                	je     41cb81 <math_random+0xb2>
  41cb16:	85 c0                	test   %eax,%eax
  41cb18:	0f 85 8f 00 00 00    	jne    41cbad <math_random+0xde>
  41cb1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cb22:	48 89 c7             	mov    %rax,%rdi
  41cb25:	e8 be fe ff ff       	callq  41c9e8 <I2d>
  41cb2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb2e:	48 89 c7             	mov    %rax,%rdi
  41cb31:	e8 9a 61 fe ff       	callq  402cd0 <lua_pushnumber>
  41cb36:	b8 01 00 00 00       	mov    $0x1,%eax
  41cb3b:	e9 f9 00 00 00       	jmpq   41cc39 <math_random+0x16a>
  41cb40:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
  41cb47:	00 
  41cb48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb4c:	be 01 00 00 00       	mov    $0x1,%esi
  41cb51:	48 89 c7             	mov    %rax,%rdi
  41cb54:	e8 3e 9e fe ff       	callq  406997 <luaL_checkinteger>
  41cb59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41cb5d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41cb62:	75 61                	jne    41cbc5 <math_random+0xf6>
  41cb64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41cb68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb6c:	48 89 d6             	mov    %rdx,%rsi
  41cb6f:	48 89 c7             	mov    %rax,%rdi
  41cb72:	e8 9e 61 fe ff       	callq  402d15 <lua_pushinteger>
  41cb77:	b8 01 00 00 00       	mov    $0x1,%eax
  41cb7c:	e9 b8 00 00 00       	jmpq   41cc39 <math_random+0x16a>
  41cb81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb85:	be 01 00 00 00       	mov    $0x1,%esi
  41cb8a:	48 89 c7             	mov    %rax,%rdi
  41cb8d:	e8 05 9e fe ff       	callq  406997 <luaL_checkinteger>
  41cb92:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41cb96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cb9a:	be 02 00 00 00       	mov    $0x2,%esi
  41cb9f:	48 89 c7             	mov    %rax,%rdi
  41cba2:	e8 f0 9d fe ff       	callq  406997 <luaL_checkinteger>
  41cba7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41cbab:	eb 19                	jmp    41cbc6 <math_random+0xf7>
  41cbad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cbb1:	be 42 ff 43 00       	mov    $0x43ff42,%esi
  41cbb6:	48 89 c7             	mov    %rax,%rdi
  41cbb9:	b8 00 00 00 00       	mov    $0x0,%eax
  41cbbe:	e8 2d 96 fe ff       	callq  4061f0 <luaL_error>
  41cbc3:	eb 74                	jmp    41cc39 <math_random+0x16a>
  41cbc5:	90                   	nop
  41cbc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cbca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  41cbce:	0f 9e c0             	setle  %al
  41cbd1:	0f b6 c0             	movzbl %al,%eax
  41cbd4:	48 85 c0             	test   %rax,%rax
  41cbd7:	75 18                	jne    41cbf1 <math_random+0x122>
  41cbd9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cbdd:	ba 5c ff 43 00       	mov    $0x43ff5c,%edx
  41cbe2:	be 01 00 00 00       	mov    $0x1,%esi
  41cbe7:	48 89 c7             	mov    %rax,%rdi
  41cbea:	e8 03 93 fe ff       	callq  405ef2 <luaL_argerror>
  41cbef:	85 c0                	test   %eax,%eax
  41cbf1:	90                   	nop
  41cbf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41cbf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cbfa:	48 89 d1             	mov    %rdx,%rcx
  41cbfd:	48 29 c1             	sub    %rax,%rcx
  41cc00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41cc04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc08:	48 89 ce             	mov    %rcx,%rsi
  41cc0b:	48 89 c7             	mov    %rax,%rdi
  41cc0e:	e8 14 fe ff ff       	callq  41ca27 <project>
  41cc13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41cc17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41cc1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cc1f:	48 01 d0             	add    %rdx,%rax
  41cc22:	48 89 c2             	mov    %rax,%rdx
  41cc25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cc29:	48 89 d6             	mov    %rdx,%rsi
  41cc2c:	48 89 c7             	mov    %rax,%rdi
  41cc2f:	e8 e1 60 fe ff       	callq  402d15 <lua_pushinteger>
  41cc34:	b8 01 00 00 00       	mov    $0x1,%eax
  41cc39:	c9                   	leaveq 
  41cc3a:	c3                   	retq   

000000000041cc3b <setseed>:
  41cc3b:	55                   	push   %rbp
  41cc3c:	48 89 e5             	mov    %rsp,%rbp
  41cc3f:	48 83 ec 30          	sub    $0x30,%rsp
  41cc43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41cc47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41cc4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41cc4f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41cc53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41cc5b:	48 89 10             	mov    %rdx,(%rax)
  41cc5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc62:	48 83 c0 08          	add    $0x8,%rax
  41cc66:	48 c7 00 ff 00 00 00 	movq   $0xff,(%rax)
  41cc6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc71:	48 8d 50 10          	lea    0x10(%rax),%rdx
  41cc75:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41cc79:	48 89 02             	mov    %rax,(%rdx)
  41cc7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc80:	48 83 c0 18          	add    $0x18,%rax
  41cc84:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41cc8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41cc92:	eb 10                	jmp    41cca4 <setseed+0x69>
  41cc94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cc98:	48 89 c7             	mov    %rax,%rdi
  41cc9b:	e8 6f fc ff ff       	callq  41c90f <nextrand>
  41cca0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41cca4:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)
  41cca8:	7e ea                	jle    41cc94 <setseed+0x59>
  41ccaa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41ccae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ccb2:	48 89 d6             	mov    %rdx,%rsi
  41ccb5:	48 89 c7             	mov    %rax,%rdi
  41ccb8:	e8 58 60 fe ff       	callq  402d15 <lua_pushinteger>
  41ccbd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41ccc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ccc5:	48 89 d6             	mov    %rdx,%rsi
  41ccc8:	48 89 c7             	mov    %rax,%rdi
  41cccb:	e8 45 60 fe ff       	callq  402d15 <lua_pushinteger>
  41ccd0:	90                   	nop
  41ccd1:	c9                   	leaveq 
  41ccd2:	c3                   	retq   

000000000041ccd3 <randseed>:
  41ccd3:	55                   	push   %rbp
  41ccd4:	48 89 e5             	mov    %rsp,%rbp
  41ccd7:	48 83 ec 20          	sub    $0x20,%rsp
  41ccdb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ccdf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41cce3:	bf 00 00 00 00       	mov    $0x0,%edi
  41cce8:	e8 c3 4b fe ff       	callq  4018b0 <time@plt>
  41cced:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ccf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ccf5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41ccf9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41ccfd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41cd01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41cd05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cd09:	48 89 c7             	mov    %rax,%rdi
  41cd0c:	e8 2a ff ff ff       	callq  41cc3b <setseed>
  41cd11:	90                   	nop
  41cd12:	c9                   	leaveq 
  41cd13:	c3                   	retq   

000000000041cd14 <math_randomseed>:
  41cd14:	55                   	push   %rbp
  41cd15:	48 89 e5             	mov    %rsp,%rbp
  41cd18:	48 83 ec 30          	sub    $0x30,%rsp
  41cd1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41cd20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd24:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  41cd29:	48 89 c7             	mov    %rax,%rdi
  41cd2c:	e8 86 5e fe ff       	callq  402bb7 <lua_touserdata>
  41cd31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41cd35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd39:	be 01 00 00 00       	mov    $0x1,%esi
  41cd3e:	48 89 c7             	mov    %rax,%rdi
  41cd41:	e8 2d 56 fe ff       	callq  402373 <lua_type>
  41cd46:	83 f8 ff             	cmp    $0xffffffff,%eax
  41cd49:	75 15                	jne    41cd60 <math_randomseed+0x4c>
  41cd4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41cd4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd53:	48 89 d6             	mov    %rdx,%rsi
  41cd56:	48 89 c7             	mov    %rax,%rdi
  41cd59:	e8 75 ff ff ff       	callq  41ccd3 <randseed>
  41cd5e:	eb 47                	jmp    41cda7 <math_randomseed+0x93>
  41cd60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd64:	be 01 00 00 00       	mov    $0x1,%esi
  41cd69:	48 89 c7             	mov    %rax,%rdi
  41cd6c:	e8 26 9c fe ff       	callq  406997 <luaL_checkinteger>
  41cd71:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41cd75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd79:	ba 00 00 00 00       	mov    $0x0,%edx
  41cd7e:	be 02 00 00 00       	mov    $0x2,%esi
  41cd83:	48 89 c7             	mov    %rax,%rdi
  41cd86:	e8 5b 9c fe ff       	callq  4069e6 <luaL_optinteger>
  41cd8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41cd8f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41cd93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41cd97:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  41cd9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd9f:	48 89 c7             	mov    %rax,%rdi
  41cda2:	e8 94 fe ff ff       	callq  41cc3b <setseed>
  41cda7:	b8 02 00 00 00       	mov    $0x2,%eax
  41cdac:	c9                   	leaveq 
  41cdad:	c3                   	retq   

000000000041cdae <setrandfunc>:
  41cdae:	55                   	push   %rbp
  41cdaf:	48 89 e5             	mov    %rsp,%rbp
  41cdb2:	48 83 ec 20          	sub    $0x20,%rsp
  41cdb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41cdba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cdbe:	ba 00 00 00 00       	mov    $0x0,%edx
  41cdc3:	be 20 00 00 00       	mov    $0x20,%esi
  41cdc8:	48 89 c7             	mov    %rax,%rdi
  41cdcb:	e8 36 85 fe ff       	callq  405306 <lua_newuserdatauv>
  41cdd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41cdd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41cdd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cddc:	48 89 d6             	mov    %rdx,%rsi
  41cddf:	48 89 c7             	mov    %rax,%rdi
  41cde2:	e8 ec fe ff ff       	callq  41ccd3 <randseed>
  41cde7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cdeb:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41cdf0:	48 89 c7             	mov    %rax,%rdi
  41cdf3:	e8 8c 51 fe ff       	callq  401f84 <lua_settop>
  41cdf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cdfc:	ba 01 00 00 00       	mov    $0x1,%edx
  41ce01:	be 80 ff 43 00       	mov    $0x43ff80,%esi
  41ce06:	48 89 c7             	mov    %rax,%rdi
  41ce09:	e8 1c ad fe ff       	callq  407b2a <luaL_setfuncs>
  41ce0e:	90                   	nop
  41ce0f:	c9                   	leaveq 
  41ce10:	c3                   	retq   

000000000041ce11 <luaopen_math>:
  41ce11:	55                   	push   %rbp
  41ce12:	48 89 e5             	mov    %rsp,%rbp
  41ce15:	48 83 ec 10          	sub    $0x10,%rsp
  41ce19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41ce1d:	f2 0f 10 05 2b 34 02 	movsd  0x2342b(%rip),%xmm0        # 440250 <mathlib+0x210>
  41ce24:	00 
  41ce25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce29:	be 88 00 00 00       	mov    $0x88,%esi
  41ce2e:	48 89 c7             	mov    %rax,%rdi
  41ce31:	e8 9b b3 fe ff       	callq  4081d1 <luaL_checkversion_>
  41ce36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce3a:	ba 1b 00 00 00       	mov    $0x1b,%edx
  41ce3f:	be 00 00 00 00       	mov    $0x0,%esi
  41ce44:	48 89 c7             	mov    %rax,%rdi
  41ce47:	e8 cc 69 fe ff       	callq  403818 <lua_createtable>
  41ce4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce50:	ba 00 00 00 00       	mov    $0x0,%edx
  41ce55:	be 40 00 44 00       	mov    $0x440040,%esi
  41ce5a:	48 89 c7             	mov    %rax,%rdi
  41ce5d:	e8 c8 ac fe ff       	callq  407b2a <luaL_setfuncs>
  41ce62:	f2 0f 10 05 ee 33 02 	movsd  0x233ee(%rip),%xmm0        # 440258 <mathlib+0x218>
  41ce69:	00 
  41ce6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce6e:	48 89 c7             	mov    %rax,%rdi
  41ce71:	e8 5a 5e fe ff       	callq  402cd0 <lua_pushnumber>
  41ce76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce7a:	ba 14 00 44 00       	mov    $0x440014,%edx
  41ce7f:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41ce84:	48 89 c7             	mov    %rax,%rdi
  41ce87:	e8 46 6f fe ff       	callq  403dd2 <lua_setfield>
  41ce8c:	f2 0f 10 05 cc 33 02 	movsd  0x233cc(%rip),%xmm0        # 440260 <mathlib+0x220>
  41ce93:	00 
  41ce94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ce98:	48 89 c7             	mov    %rax,%rdi
  41ce9b:	e8 30 5e fe ff       	callq  402cd0 <lua_pushnumber>
  41cea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cea4:	ba 17 00 44 00       	mov    $0x440017,%edx
  41cea9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41ceae:	48 89 c7             	mov    %rax,%rdi
  41ceb1:	e8 1c 6f fe ff       	callq  403dd2 <lua_setfield>
  41ceb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ceba:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
  41cec1:	ff ff 7f 
  41cec4:	48 89 c7             	mov    %rax,%rdi
  41cec7:	e8 49 5e fe ff       	callq  402d15 <lua_pushinteger>
  41cecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ced0:	ba 1c 00 44 00       	mov    $0x44001c,%edx
  41ced5:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41ceda:	48 89 c7             	mov    %rax,%rdi
  41cedd:	e8 f0 6e fe ff       	callq  403dd2 <lua_setfield>
  41cee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cee6:	48 be 00 00 00 00 00 	movabs $0x8000000000000000,%rsi
  41ceed:	00 00 80 
  41cef0:	48 89 c7             	mov    %rax,%rdi
  41cef3:	e8 1d 5e fe ff       	callq  402d15 <lua_pushinteger>
  41cef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cefc:	ba 27 00 44 00       	mov    $0x440027,%edx
  41cf01:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41cf06:	48 89 c7             	mov    %rax,%rdi
  41cf09:	e8 c4 6e fe ff       	callq  403dd2 <lua_setfield>
  41cf0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41cf12:	48 89 c7             	mov    %rax,%rdi
  41cf15:	e8 94 fe ff ff       	callq  41cdae <setrandfunc>
  41cf1a:	b8 01 00 00 00       	mov    $0x1,%eax
  41cf1f:	c9                   	leaveq 
  41cf20:	c3                   	retq   

000000000041cf21 <luaM_growaux_>:
  41cf21:	55                   	push   %rbp
  41cf22:	48 89 e5             	mov    %rsp,%rbp
  41cf25:	48 83 ec 40          	sub    $0x40,%rsp
  41cf29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41cf2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41cf31:	89 55 dc             	mov    %edx,-0x24(%rbp)
  41cf34:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41cf38:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
  41cf3c:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  41cf40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41cf44:	8b 00                	mov    (%rax),%eax
  41cf46:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41cf49:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41cf4c:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  41cf4f:	7d 09                	jge    41cf5a <luaM_growaux_+0x39>
  41cf51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41cf55:	e9 9e 00 00 00       	jmpq   41cff8 <luaM_growaux_+0xd7>
  41cf5a:	8b 45 cc             	mov    -0x34(%rbp),%eax
  41cf5d:	89 c2                	mov    %eax,%edx
  41cf5f:	c1 ea 1f             	shr    $0x1f,%edx
  41cf62:	01 d0                	add    %edx,%eax
  41cf64:	d1 f8                	sar    %eax
  41cf66:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  41cf69:	7c 38                	jl     41cfa3 <luaM_growaux_+0x82>
  41cf6b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41cf6e:	3b 45 cc             	cmp    -0x34(%rbp),%eax
  41cf71:	0f 9d c0             	setge  %al
  41cf74:	0f b6 c0             	movzbl %al,%eax
  41cf77:	48 85 c0             	test   %rax,%rax
  41cf7a:	74 1f                	je     41cf9b <luaM_growaux_+0x7a>
  41cf7c:	8b 55 cc             	mov    -0x34(%rbp),%edx
  41cf7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cf83:	89 d1                	mov    %edx,%ecx
  41cf85:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  41cf89:	be 68 02 44 00       	mov    $0x440268,%esi
  41cf8e:	48 89 c7             	mov    %rax,%rdi
  41cf91:	b8 00 00 00 00       	mov    $0x0,%eax
  41cf96:	e8 de 3b ff ff       	callq  410b79 <luaG_runerror>
  41cf9b:	8b 45 cc             	mov    -0x34(%rbp),%eax
  41cf9e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41cfa1:	eb 10                	jmp    41cfb3 <luaM_growaux_+0x92>
  41cfa3:	d1 65 fc             	shll   -0x4(%rbp)
  41cfa6:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  41cfaa:	7f 07                	jg     41cfb3 <luaM_growaux_+0x92>
  41cfac:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
  41cfb3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41cfb6:	48 63 d0             	movslq %eax,%rdx
  41cfb9:	8b 45 d8             	mov    -0x28(%rbp),%eax
  41cfbc:	48 98                	cltq   
  41cfbe:	48 89 d1             	mov    %rdx,%rcx
  41cfc1:	48 0f af c8          	imul   %rax,%rcx
  41cfc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41cfc9:	8b 00                	mov    (%rax),%eax
  41cfcb:	48 63 d0             	movslq %eax,%rdx
  41cfce:	8b 45 d8             	mov    -0x28(%rbp),%eax
  41cfd1:	48 98                	cltq   
  41cfd3:	48 0f af d0          	imul   %rax,%rdx
  41cfd7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41cfdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cfdf:	48 89 c7             	mov    %rax,%rdi
  41cfe2:	e8 26 02 00 00       	callq  41d20d <luaM_saferealloc_>
  41cfe7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41cfeb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41cfef:	8b 55 fc             	mov    -0x4(%rbp),%edx
  41cff2:	89 10                	mov    %edx,(%rax)
  41cff4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41cff8:	c9                   	leaveq 
  41cff9:	c3                   	retq   

000000000041cffa <luaM_shrinkvector_>:
  41cffa:	55                   	push   %rbp
  41cffb:	48 89 e5             	mov    %rsp,%rbp
  41cffe:	48 83 ec 40          	sub    $0x40,%rsp
  41d002:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41d006:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41d00a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d00e:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  41d011:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
  41d015:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d019:	8b 00                	mov    (%rax),%eax
  41d01b:	0f af 45 c0          	imul   -0x40(%rbp),%eax
  41d01f:	48 98                	cltq   
  41d021:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d025:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41d028:	0f af 45 c0          	imul   -0x40(%rbp),%eax
  41d02c:	48 98                	cltq   
  41d02e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d032:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d036:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d03a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  41d03e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d042:	48 89 c7             	mov    %rax,%rdi
  41d045:	e8 c3 01 00 00       	callq  41d20d <luaM_saferealloc_>
  41d04a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41d04e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d052:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  41d055:	89 10                	mov    %edx,(%rax)
  41d057:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d05b:	c9                   	leaveq 
  41d05c:	c3                   	retq   

000000000041d05d <luaM_toobig>:
  41d05d:	55                   	push   %rbp
  41d05e:	48 89 e5             	mov    %rsp,%rbp
  41d061:	48 83 ec 10          	sub    $0x10,%rsp
  41d065:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41d069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d06d:	be 88 02 44 00       	mov    $0x440288,%esi
  41d072:	48 89 c7             	mov    %rax,%rdi
  41d075:	b8 00 00 00 00       	mov    $0x0,%eax
  41d07a:	e8 fa 3a ff ff       	callq  410b79 <luaG_runerror>

000000000041d07f <luaM_free_>:
  41d07f:	55                   	push   %rbp
  41d080:	48 89 e5             	mov    %rsp,%rbp
  41d083:	48 83 ec 30          	sub    $0x30,%rsp
  41d087:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d08b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d08f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41d093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d097:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d09b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d09f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d0a3:	48 8b 00             	mov    (%rax),%rax
  41d0a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d0aa:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  41d0ae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d0b2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41d0b6:	b9 00 00 00 00       	mov    $0x0,%ecx
  41d0bb:	ff d0                	callq  *%rax
  41d0bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d0c1:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d0c5:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  41d0c9:	48 89 c2             	mov    %rax,%rdx
  41d0cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d0d0:	48 89 50 18          	mov    %rdx,0x18(%rax)
  41d0d4:	90                   	nop
  41d0d5:	c9                   	leaveq 
  41d0d6:	c3                   	retq   

000000000041d0d7 <tryagain>:
  41d0d7:	55                   	push   %rbp
  41d0d8:	48 89 e5             	mov    %rsp,%rbp
  41d0db:	48 83 ec 30          	sub    $0x30,%rsp
  41d0df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d0e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d0e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41d0eb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41d0ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d0f3:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d0f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d0fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d0ff:	0f b6 40 58          	movzbl 0x58(%rax),%eax
  41d103:	0f b6 c0             	movzbl %al,%eax
  41d106:	83 e0 0f             	and    $0xf,%eax
  41d109:	85 c0                	test   %eax,%eax
  41d10b:	75 3c                	jne    41d149 <tryagain+0x72>
  41d10d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d111:	0f b6 40 67          	movzbl 0x67(%rax),%eax
  41d115:	84 c0                	test   %al,%al
  41d117:	75 30                	jne    41d149 <tryagain+0x72>
  41d119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d11d:	be 01 00 00 00       	mov    $0x1,%esi
  41d122:	48 89 c7             	mov    %rax,%rdi
  41d125:	e8 15 b3 ff ff       	callq  41843f <luaC_fullgc>
  41d12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d12e:	48 8b 00             	mov    (%rax),%rax
  41d131:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d135:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  41d139:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41d13d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d141:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41d145:	ff d0                	callq  *%rax
  41d147:	eb 05                	jmp    41d14e <tryagain+0x77>
  41d149:	b8 00 00 00 00       	mov    $0x0,%eax
  41d14e:	c9                   	leaveq 
  41d14f:	c3                   	retq   

000000000041d150 <luaM_realloc_>:
  41d150:	55                   	push   %rbp
  41d151:	48 89 e5             	mov    %rsp,%rbp
  41d154:	48 83 ec 30          	sub    $0x30,%rsp
  41d158:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d15c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d160:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41d164:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41d168:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d16c:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d170:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d174:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d178:	48 8b 00             	mov    (%rax),%rax
  41d17b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41d17f:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  41d183:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41d187:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d18b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41d18f:	ff d0                	callq  *%rax
  41d191:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d195:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d19a:	75 0e                	jne    41d1aa <luaM_realloc_+0x5a>
  41d19c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41d1a1:	74 07                	je     41d1aa <luaM_realloc_+0x5a>
  41d1a3:	b8 01 00 00 00       	mov    $0x1,%eax
  41d1a8:	eb 05                	jmp    41d1af <luaM_realloc_+0x5f>
  41d1aa:	b8 00 00 00 00       	mov    $0x0,%eax
  41d1af:	85 c0                	test   %eax,%eax
  41d1b1:	0f 95 c0             	setne  %al
  41d1b4:	0f b6 c0             	movzbl %al,%eax
  41d1b7:	48 85 c0             	test   %rax,%rax
  41d1ba:	74 2a                	je     41d1e6 <luaM_realloc_+0x96>
  41d1bc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41d1c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d1c4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41d1c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d1cc:	48 89 c7             	mov    %rax,%rdi
  41d1cf:	e8 03 ff ff ff       	callq  41d0d7 <tryagain>
  41d1d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d1d8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d1dd:	75 07                	jne    41d1e6 <luaM_realloc_+0x96>
  41d1df:	b8 00 00 00 00       	mov    $0x0,%eax
  41d1e4:	eb 25                	jmp    41d20b <luaM_realloc_+0xbb>
  41d1e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d1ea:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d1ee:	48 89 c2             	mov    %rax,%rdx
  41d1f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41d1f5:	48 01 d0             	add    %rdx,%rax
  41d1f8:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  41d1fc:	48 89 c2             	mov    %rax,%rdx
  41d1ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d203:	48 89 50 18          	mov    %rdx,0x18(%rax)
  41d207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d20b:	c9                   	leaveq 
  41d20c:	c3                   	retq   

000000000041d20d <luaM_saferealloc_>:
  41d20d:	55                   	push   %rbp
  41d20e:	48 89 e5             	mov    %rsp,%rbp
  41d211:	48 83 ec 30          	sub    $0x30,%rsp
  41d215:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d219:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d21d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41d221:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41d225:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41d229:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d22d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41d231:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d235:	48 89 c7             	mov    %rax,%rdi
  41d238:	e8 13 ff ff ff       	callq  41d150 <luaM_realloc_>
  41d23d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d241:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d246:	75 0e                	jne    41d256 <luaM_saferealloc_+0x49>
  41d248:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41d24d:	74 07                	je     41d256 <luaM_saferealloc_+0x49>
  41d24f:	b8 01 00 00 00       	mov    $0x1,%eax
  41d254:	eb 05                	jmp    41d25b <luaM_saferealloc_+0x4e>
  41d256:	b8 00 00 00 00       	mov    $0x0,%eax
  41d25b:	85 c0                	test   %eax,%eax
  41d25d:	0f 95 c0             	setne  %al
  41d260:	0f b6 c0             	movzbl %al,%eax
  41d263:	48 85 c0             	test   %rax,%rax
  41d266:	74 11                	je     41d279 <luaM_saferealloc_+0x6c>
  41d268:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d26c:	be 04 00 00 00       	mov    $0x4,%esi
  41d271:	48 89 c7             	mov    %rax,%rdi
  41d274:	e8 00 3f ff ff       	callq  411179 <luaD_throw>
  41d279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d27d:	c9                   	leaveq 
  41d27e:	c3                   	retq   

000000000041d27f <luaM_malloc_>:
  41d27f:	55                   	push   %rbp
  41d280:	48 89 e5             	mov    %rsp,%rbp
  41d283:	48 83 ec 30          	sub    $0x30,%rsp
  41d287:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d28b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d28f:	89 55 dc             	mov    %edx,-0x24(%rbp)
  41d292:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41d297:	75 0a                	jne    41d2a3 <luaM_malloc_+0x24>
  41d299:	b8 00 00 00 00       	mov    $0x0,%eax
  41d29e:	e9 98 00 00 00       	jmpq   41d33b <luaM_malloc_+0xbc>
  41d2a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d2a7:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d2ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d2af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d2b3:	48 8b 00             	mov    (%rax),%rax
  41d2b6:	8b 55 dc             	mov    -0x24(%rbp),%edx
  41d2b9:	48 63 d2             	movslq %edx,%rdx
  41d2bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d2c0:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  41d2c4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d2c8:	be 00 00 00 00       	mov    $0x0,%esi
  41d2cd:	ff d0                	callq  *%rax
  41d2cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d2d3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d2d8:	0f 94 c0             	sete   %al
  41d2db:	0f b6 c0             	movzbl %al,%eax
  41d2de:	48 85 c0             	test   %rax,%rax
  41d2e1:	74 37                	je     41d31a <luaM_malloc_+0x9b>
  41d2e3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41d2e6:	48 63 d0             	movslq %eax,%rdx
  41d2e9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d2ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d2f1:	be 00 00 00 00       	mov    $0x0,%esi
  41d2f6:	48 89 c7             	mov    %rax,%rdi
  41d2f9:	e8 d9 fd ff ff       	callq  41d0d7 <tryagain>
  41d2fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d302:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d307:	75 11                	jne    41d31a <luaM_malloc_+0x9b>
  41d309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d30d:	be 04 00 00 00       	mov    $0x4,%esi
  41d312:	48 89 c7             	mov    %rax,%rdi
  41d315:	e8 5f 3e ff ff       	callq  411179 <luaD_throw>
  41d31a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d31e:	48 8b 40 18          	mov    0x18(%rax),%rax
  41d322:	48 89 c2             	mov    %rax,%rdx
  41d325:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41d329:	48 01 d0             	add    %rdx,%rax
  41d32c:	48 89 c2             	mov    %rax,%rdx
  41d32f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d333:	48 89 50 18          	mov    %rdx,0x18(%rax)
  41d337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d33b:	c9                   	leaveq 
  41d33c:	c3                   	retq   

000000000041d33d <lsys_unloadlib>:
  41d33d:	55                   	push   %rbp
  41d33e:	48 89 e5             	mov    %rsp,%rbp
  41d341:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41d345:	90                   	nop
  41d346:	5d                   	pop    %rbp
  41d347:	c3                   	retq   

000000000041d348 <lsys_load>:
  41d348:	55                   	push   %rbp
  41d349:	48 89 e5             	mov    %rsp,%rbp
  41d34c:	48 83 ec 20          	sub    $0x20,%rsp
  41d350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41d354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41d358:	89 55 ec             	mov    %edx,-0x14(%rbp)
  41d35b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d35f:	be d0 02 44 00       	mov    $0x4402d0,%esi
  41d364:	48 89 c7             	mov    %rax,%rdi
  41d367:	e8 a2 5a fe ff       	callq  402e0e <lua_pushstring>
  41d36c:	b8 00 00 00 00       	mov    $0x0,%eax
  41d371:	c9                   	leaveq 
  41d372:	c3                   	retq   

000000000041d373 <lsys_sym>:
  41d373:	55                   	push   %rbp
  41d374:	48 89 e5             	mov    %rsp,%rbp
  41d377:	48 83 ec 20          	sub    $0x20,%rsp
  41d37b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41d37f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41d383:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d38b:	be d0 02 44 00       	mov    $0x4402d0,%esi
  41d390:	48 89 c7             	mov    %rax,%rdi
  41d393:	e8 76 5a fe ff       	callq  402e0e <lua_pushstring>
  41d398:	b8 00 00 00 00       	mov    $0x0,%eax
  41d39d:	c9                   	leaveq 
  41d39e:	c3                   	retq   

000000000041d39f <noenv>:
  41d39f:	55                   	push   %rbp
  41d3a0:	48 89 e5             	mov    %rsp,%rbp
  41d3a3:	48 83 ec 20          	sub    $0x20,%rsp
  41d3a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d3ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d3af:	ba 0b 03 44 00       	mov    $0x44030b,%edx
  41d3b4:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41d3b9:	48 89 c7             	mov    %rax,%rdi
  41d3bc:	e8 f4 60 fe ff       	callq  4034b5 <lua_getfield>
  41d3c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d3c5:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41d3ca:	48 89 c7             	mov    %rax,%rdi
  41d3cd:	e8 4b 55 fe ff       	callq  40291d <lua_toboolean>
  41d3d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41d3d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d3d9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d3de:	48 89 c7             	mov    %rax,%rdi
  41d3e1:	e8 9e 4b fe ff       	callq  401f84 <lua_settop>
  41d3e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41d3e9:	c9                   	leaveq 
  41d3ea:	c3                   	retq   

000000000041d3eb <setpath>:
  41d3eb:	55                   	push   %rbp
  41d3ec:	48 89 e5             	mov    %rsp,%rbp
  41d3ef:	48 81 ec 60 04 00 00 	sub    $0x460,%rsp
  41d3f6:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  41d3fd:	48 89 b5 b0 fb ff ff 	mov    %rsi,-0x450(%rbp)
  41d404:	48 89 95 a8 fb ff ff 	mov    %rdx,-0x458(%rbp)
  41d40b:	48 89 8d a0 fb ff ff 	mov    %rcx,-0x460(%rbp)
  41d412:	48 8b 95 a8 fb ff ff 	mov    -0x458(%rbp),%rdx
  41d419:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d420:	b9 15 03 44 00       	mov    $0x440315,%ecx
  41d425:	be 1a 03 44 00       	mov    $0x44031a,%esi
  41d42a:	48 89 c7             	mov    %rax,%rdi
  41d42d:	b8 00 00 00 00       	mov    $0x0,%eax
  41d432:	e8 db 5a fe ff       	callq  402f12 <lua_pushfstring>
  41d437:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d43b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d43f:	48 89 c7             	mov    %rax,%rdi
  41d442:	e8 39 45 fe ff       	callq  401980 <getenv@plt>
  41d447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d44b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d450:	75 13                	jne    41d465 <setpath+0x7a>
  41d452:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  41d459:	48 89 c7             	mov    %rax,%rdi
  41d45c:	e8 1f 45 fe ff       	callq  401980 <getenv@plt>
  41d461:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d465:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d46a:	74 13                	je     41d47f <setpath+0x94>
  41d46c:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d473:	48 89 c7             	mov    %rax,%rdi
  41d476:	e8 24 ff ff ff       	callq  41d39f <noenv>
  41d47b:	85 c0                	test   %eax,%eax
  41d47d:	74 1e                	je     41d49d <setpath+0xb2>
  41d47f:	48 8b 95 a0 fb ff ff 	mov    -0x460(%rbp),%rdx
  41d486:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d48d:	48 89 d6             	mov    %rdx,%rsi
  41d490:	48 89 c7             	mov    %rax,%rdi
  41d493:	e8 76 59 fe ff       	callq  402e0e <lua_pushstring>
  41d498:	e9 94 01 00 00       	jmpq   41d631 <setpath+0x246>
  41d49d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d4a1:	be 1f 03 44 00       	mov    $0x44031f,%esi
  41d4a6:	48 89 c7             	mov    %rax,%rdi
  41d4a9:	e8 42 42 fe ff       	callq  4016f0 <strstr@plt>
  41d4ae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41d4b2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41d4b7:	75 1b                	jne    41d4d4 <setpath+0xe9>
  41d4b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d4bd:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d4c4:	48 89 d6             	mov    %rdx,%rsi
  41d4c7:	48 89 c7             	mov    %rax,%rdi
  41d4ca:	e8 3f 59 fe ff       	callq  402e0e <lua_pushstring>
  41d4cf:	e9 5d 01 00 00       	jmpq   41d631 <setpath+0x246>
  41d4d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d4d8:	48 89 c7             	mov    %rax,%rdi
  41d4db:	e8 90 42 fe ff       	callq  401770 <strlen@plt>
  41d4e0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41d4e4:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
  41d4eb:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d4f2:	48 89 d6             	mov    %rdx,%rsi
  41d4f5:	48 89 c7             	mov    %rax,%rdi
  41d4f8:	e8 8c 9a fe ff       	callq  406f89 <luaL_buffinit>
  41d4fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d501:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  41d505:	73 6f                	jae    41d576 <setpath+0x18b>
  41d507:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d50b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  41d50f:	48 89 c2             	mov    %rax,%rdx
  41d512:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41d516:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d51d:	48 89 ce             	mov    %rcx,%rsi
  41d520:	48 89 c7             	mov    %rax,%rdi
  41d523:	e8 7a 98 fe ff       	callq  406da2 <luaL_addlstring>
  41d528:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
  41d52f:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41d536:	48 39 c2             	cmp    %rax,%rdx
  41d539:	72 17                	jb     41d552 <setpath+0x167>
  41d53b:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d542:	be 01 00 00 00       	mov    $0x1,%esi
  41d547:	48 89 c7             	mov    %rax,%rdi
  41d54a:	e8 29 98 fe ff       	callq  406d78 <luaL_prepbuffsize>
  41d54f:	48 85 c0             	test   %rax,%rax
  41d552:	90                   	nop
  41d553:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  41d55a:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
  41d561:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d565:	48 89 95 d0 fb ff ff 	mov    %rdx,-0x430(%rbp)
  41d56c:	48 01 c8             	add    %rcx,%rax
  41d56f:	ba 3b 00 00 00       	mov    $0x3b,%edx
  41d574:	88 10                	mov    %dl,(%rax)
  41d576:	48 8b 95 a0 fb ff ff 	mov    -0x460(%rbp),%rdx
  41d57d:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d584:	48 89 d6             	mov    %rdx,%rsi
  41d587:	48 89 c7             	mov    %rax,%rdi
  41d58a:	e8 7b 98 fe ff       	callq  406e0a <luaL_addstring>
  41d58f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41d593:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
  41d597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d59b:	48 01 d0             	add    %rdx,%rax
  41d59e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  41d5a2:	73 7e                	jae    41d622 <setpath+0x237>
  41d5a4:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
  41d5ab:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41d5b2:	48 39 c2             	cmp    %rax,%rdx
  41d5b5:	72 17                	jb     41d5ce <setpath+0x1e3>
  41d5b7:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d5be:	be 01 00 00 00       	mov    $0x1,%esi
  41d5c3:	48 89 c7             	mov    %rax,%rdi
  41d5c6:	e8 ad 97 fe ff       	callq  406d78 <luaL_prepbuffsize>
  41d5cb:	48 85 c0             	test   %rax,%rax
  41d5ce:	90                   	nop
  41d5cf:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  41d5d6:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
  41d5dd:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d5e1:	48 89 95 d0 fb ff ff 	mov    %rdx,-0x430(%rbp)
  41d5e8:	48 01 c8             	add    %rcx,%rax
  41d5eb:	ba 3b 00 00 00       	mov    $0x3b,%edx
  41d5f0:	88 10                	mov    %dl,(%rax)
  41d5f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41d5f6:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
  41d5fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d5fe:	48 01 d0             	add    %rdx,%rax
  41d601:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
  41d605:	48 89 c2             	mov    %rax,%rdx
  41d608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d60c:	48 8d 48 02          	lea    0x2(%rax),%rcx
  41d610:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d617:	48 89 ce             	mov    %rcx,%rsi
  41d61a:	48 89 c7             	mov    %rax,%rdi
  41d61d:	e8 80 97 fe ff       	callq  406da2 <luaL_addlstring>
  41d622:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  41d629:	48 89 c7             	mov    %rax,%rdi
  41d62c:	e8 0e 98 fe ff       	callq  406e3f <luaL_pushresult>
  41d631:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  41d638:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d63f:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41d644:	48 89 c7             	mov    %rax,%rdi
  41d647:	e8 86 67 fe ff       	callq  403dd2 <lua_setfield>
  41d64c:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41d653:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d658:	48 89 c7             	mov    %rax,%rdi
  41d65b:	e8 24 49 fe ff       	callq  401f84 <lua_settop>
  41d660:	90                   	nop
  41d661:	c9                   	leaveq 
  41d662:	c3                   	retq   

000000000041d663 <checkclib>:
  41d663:	55                   	push   %rbp
  41d664:	48 89 e5             	mov    %rsp,%rbp
  41d667:	48 83 ec 20          	sub    $0x20,%rsp
  41d66b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d66f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d673:	ba c0 02 44 00       	mov    $0x4402c0,%edx
  41d678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d67c:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41d681:	48 89 c7             	mov    %rax,%rdi
  41d684:	e8 2c 5e fe ff       	callq  4034b5 <lua_getfield>
  41d689:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41d68d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d691:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41d696:	48 89 c7             	mov    %rax,%rdi
  41d699:	e8 17 5e fe ff       	callq  4034b5 <lua_getfield>
  41d69e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d6a2:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41d6a7:	48 89 c7             	mov    %rax,%rdi
  41d6aa:	e8 08 55 fe ff       	callq  402bb7 <lua_touserdata>
  41d6af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d6b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d6b7:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41d6bc:	48 89 c7             	mov    %rax,%rdi
  41d6bf:	e8 c0 48 fe ff       	callq  401f84 <lua_settop>
  41d6c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d6c8:	c9                   	leaveq 
  41d6c9:	c3                   	retq   

000000000041d6ca <addtoclib>:
  41d6ca:	55                   	push   %rbp
  41d6cb:	48 89 e5             	mov    %rsp,%rbp
  41d6ce:	48 83 ec 20          	sub    $0x20,%rsp
  41d6d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41d6d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41d6da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d6de:	ba c0 02 44 00       	mov    $0x4402c0,%edx
  41d6e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d6e7:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41d6ec:	48 89 c7             	mov    %rax,%rdi
  41d6ef:	e8 c1 5d fe ff       	callq  4034b5 <lua_getfield>
  41d6f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41d6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d6fc:	48 89 d6             	mov    %rdx,%rsi
  41d6ff:	48 89 c7             	mov    %rax,%rdi
  41d702:	e8 73 5a fe ff       	callq  40317a <lua_pushlightuserdata>
  41d707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d70b:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41d710:	48 89 c7             	mov    %rax,%rdi
  41d713:	e8 f7 4b fe ff       	callq  40230f <lua_pushvalue>
  41d718:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41d71c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d720:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41d725:	48 89 c7             	mov    %rax,%rdi
  41d728:	e8 a5 66 fe ff       	callq  403dd2 <lua_setfield>
  41d72d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d731:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d736:	48 89 c7             	mov    %rax,%rdi
  41d739:	e8 1c a1 fe ff       	callq  40785a <luaL_len>
  41d73e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d746:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d74b:	48 89 c7             	mov    %rax,%rdi
  41d74e:	e8 c7 69 fe ff       	callq  40411a <lua_rawseti>
  41d753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d757:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d75c:	48 89 c7             	mov    %rax,%rdi
  41d75f:	e8 20 48 fe ff       	callq  401f84 <lua_settop>
  41d764:	90                   	nop
  41d765:	c9                   	leaveq 
  41d766:	c3                   	retq   

000000000041d767 <gctm>:
  41d767:	55                   	push   %rbp
  41d768:	48 89 e5             	mov    %rsp,%rbp
  41d76b:	48 83 ec 20          	sub    $0x20,%rsp
  41d76f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d777:	be 01 00 00 00       	mov    $0x1,%esi
  41d77c:	48 89 c7             	mov    %rax,%rdi
  41d77f:	e8 d6 a0 fe ff       	callq  40785a <luaL_len>
  41d784:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d788:	eb 44                	jmp    41d7ce <gctm+0x67>
  41d78a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d78e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d792:	be 01 00 00 00       	mov    $0x1,%esi
  41d797:	48 89 c7             	mov    %rax,%rdi
  41d79a:	e8 c0 5f fe ff       	callq  40375f <lua_rawgeti>
  41d79f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d7a3:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41d7a8:	48 89 c7             	mov    %rax,%rdi
  41d7ab:	e8 07 54 fe ff       	callq  402bb7 <lua_touserdata>
  41d7b0:	48 89 c7             	mov    %rax,%rdi
  41d7b3:	e8 85 fb ff ff       	callq  41d33d <lsys_unloadlib>
  41d7b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d7bc:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d7c1:	48 89 c7             	mov    %rax,%rdi
  41d7c4:	e8 bb 47 fe ff       	callq  401f84 <lua_settop>
  41d7c9:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  41d7ce:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d7d3:	7f b5                	jg     41d78a <gctm+0x23>
  41d7d5:	b8 00 00 00 00       	mov    $0x0,%eax
  41d7da:	c9                   	leaveq 
  41d7db:	c3                   	retq   

000000000041d7dc <lookforfunc>:
  41d7dc:	55                   	push   %rbp
  41d7dd:	48 89 e5             	mov    %rsp,%rbp
  41d7e0:	48 83 ec 30          	sub    $0x30,%rsp
  41d7e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d7e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d7ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41d7f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41d7f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d7f8:	48 89 d6             	mov    %rdx,%rsi
  41d7fb:	48 89 c7             	mov    %rax,%rdi
  41d7fe:	e8 60 fe ff ff       	callq  41d663 <checkclib>
  41d803:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d807:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d80c:	75 4e                	jne    41d85c <lookforfunc+0x80>
  41d80e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d812:	0f b6 00             	movzbl (%rax),%eax
  41d815:	3c 2a                	cmp    $0x2a,%al
  41d817:	0f 94 c0             	sete   %al
  41d81a:	0f b6 d0             	movzbl %al,%edx
  41d81d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d821:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d825:	48 89 ce             	mov    %rcx,%rsi
  41d828:	48 89 c7             	mov    %rax,%rdi
  41d82b:	e8 18 fb ff ff       	callq  41d348 <lsys_load>
  41d830:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d834:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d839:	75 0a                	jne    41d845 <lookforfunc+0x69>
  41d83b:	b8 01 00 00 00       	mov    $0x1,%eax
  41d840:	e9 80 00 00 00       	jmpq   41d8c5 <lookforfunc+0xe9>
  41d845:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41d849:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d84d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d851:	48 89 ce             	mov    %rcx,%rsi
  41d854:	48 89 c7             	mov    %rax,%rdi
  41d857:	e8 6e fe ff ff       	callq  41d6ca <addtoclib>
  41d85c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d860:	0f b6 00             	movzbl (%rax),%eax
  41d863:	3c 2a                	cmp    $0x2a,%al
  41d865:	75 18                	jne    41d87f <lookforfunc+0xa3>
  41d867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d86b:	be 01 00 00 00       	mov    $0x1,%esi
  41d870:	48 89 c7             	mov    %rax,%rdi
  41d873:	e8 c0 58 fe ff       	callq  403138 <lua_pushboolean>
  41d878:	b8 00 00 00 00       	mov    $0x0,%eax
  41d87d:	eb 46                	jmp    41d8c5 <lookforfunc+0xe9>
  41d87f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41d883:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41d887:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d88b:	48 89 ce             	mov    %rcx,%rsi
  41d88e:	48 89 c7             	mov    %rax,%rdi
  41d891:	e8 dd fa ff ff       	callq  41d373 <lsys_sym>
  41d896:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d89a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41d89f:	75 07                	jne    41d8a8 <lookforfunc+0xcc>
  41d8a1:	b8 02 00 00 00       	mov    $0x2,%eax
  41d8a6:	eb 1d                	jmp    41d8c5 <lookforfunc+0xe9>
  41d8a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d8ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d8b0:	ba 00 00 00 00       	mov    $0x0,%edx
  41d8b5:	48 89 ce             	mov    %rcx,%rsi
  41d8b8:	48 89 c7             	mov    %rax,%rdi
  41d8bb:	e8 2b 57 fe ff       	callq  402feb <lua_pushcclosure>
  41d8c0:	b8 00 00 00 00       	mov    $0x0,%eax
  41d8c5:	c9                   	leaveq 
  41d8c6:	c3                   	retq   

000000000041d8c7 <ll_loadlib>:
  41d8c7:	55                   	push   %rbp
  41d8c8:	48 89 e5             	mov    %rsp,%rbp
  41d8cb:	48 83 ec 30          	sub    $0x30,%rsp
  41d8cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41d8d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d8d7:	ba 00 00 00 00       	mov    $0x0,%edx
  41d8dc:	be 01 00 00 00       	mov    $0x1,%esi
  41d8e1:	48 89 c7             	mov    %rax,%rdi
  41d8e4:	e8 e3 8e fe ff       	callq  4067cc <luaL_checklstring>
  41d8e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d8ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d8f1:	ba 00 00 00 00       	mov    $0x0,%edx
  41d8f6:	be 02 00 00 00       	mov    $0x2,%esi
  41d8fb:	48 89 c7             	mov    %rax,%rdi
  41d8fe:	e8 c9 8e fe ff       	callq  4067cc <luaL_checklstring>
  41d903:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d907:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41d90b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41d90f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d913:	48 89 ce             	mov    %rcx,%rsi
  41d916:	48 89 c7             	mov    %rax,%rdi
  41d919:	e8 be fe ff ff       	callq  41d7dc <lookforfunc>
  41d91e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41d921:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  41d925:	0f 94 c0             	sete   %al
  41d928:	0f b6 c0             	movzbl %al,%eax
  41d92b:	48 85 c0             	test   %rax,%rax
  41d92e:	74 07                	je     41d937 <ll_loadlib+0x70>
  41d930:	b8 01 00 00 00       	mov    $0x1,%eax
  41d935:	eb 48                	jmp    41d97f <ll_loadlib+0xb8>
  41d937:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d93b:	48 89 c7             	mov    %rax,%rdi
  41d93e:	e8 62 53 fe ff       	callq  402ca5 <lua_pushnil>
  41d943:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d947:	ba 01 00 00 00       	mov    $0x1,%edx
  41d94c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41d951:	48 89 c7             	mov    %rax,%rdi
  41d954:	e8 15 48 fe ff       	callq  40216e <lua_rotate>
  41d959:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  41d95d:	75 07                	jne    41d966 <ll_loadlib+0x9f>
  41d95f:	ba 22 03 44 00       	mov    $0x440322,%edx
  41d964:	eb 05                	jmp    41d96b <ll_loadlib+0xa4>
  41d966:	ba 29 03 44 00       	mov    $0x440329,%edx
  41d96b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d96f:	48 89 d6             	mov    %rdx,%rsi
  41d972:	48 89 c7             	mov    %rax,%rdi
  41d975:	e8 94 54 fe ff       	callq  402e0e <lua_pushstring>
  41d97a:	b8 03 00 00 00       	mov    $0x3,%eax
  41d97f:	c9                   	leaveq 
  41d980:	c3                   	retq   

000000000041d981 <readable>:
  41d981:	55                   	push   %rbp
  41d982:	48 89 e5             	mov    %rsp,%rbp
  41d985:	48 83 ec 20          	sub    $0x20,%rsp
  41d989:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d98d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d991:	be 2e 03 44 00       	mov    $0x44032e,%esi
  41d996:	48 89 c7             	mov    %rax,%rdi
  41d999:	e8 92 3f fe ff       	callq  401930 <fopen64@plt>
  41d99e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41d9a2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41d9a7:	75 07                	jne    41d9b0 <readable+0x2f>
  41d9a9:	b8 00 00 00 00       	mov    $0x0,%eax
  41d9ae:	eb 11                	jmp    41d9c1 <readable+0x40>
  41d9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d9b4:	48 89 c7             	mov    %rax,%rdi
  41d9b7:	e8 34 3f fe ff       	callq  4018f0 <fclose@plt>
  41d9bc:	b8 01 00 00 00       	mov    $0x1,%eax
  41d9c1:	c9                   	leaveq 
  41d9c2:	c3                   	retq   

000000000041d9c3 <getnextfilename>:
  41d9c3:	55                   	push   %rbp
  41d9c4:	48 89 e5             	mov    %rsp,%rbp
  41d9c7:	48 83 ec 20          	sub    $0x20,%rsp
  41d9cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41d9cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41d9d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d9d7:	48 8b 00             	mov    (%rax),%rax
  41d9da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41d9de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d9e2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  41d9e6:	75 07                	jne    41d9ef <getnextfilename+0x2c>
  41d9e8:	b8 00 00 00 00       	mov    $0x0,%eax
  41d9ed:	eb 5a                	jmp    41da49 <getnextfilename+0x86>
  41d9ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41d9f3:	0f b6 00             	movzbl (%rax),%eax
  41d9f6:	84 c0                	test   %al,%al
  41d9f8:	75 10                	jne    41da0a <getnextfilename+0x47>
  41d9fa:	ba 3b 00 00 00       	mov    $0x3b,%edx
  41d9ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41da03:	88 10                	mov    %dl,(%rax)
  41da05:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  41da0a:	b8 3b 00 00 00       	mov    $0x3b,%eax
  41da0f:	0f be d0             	movsbl %al,%edx
  41da12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41da16:	89 d6                	mov    %edx,%esi
  41da18:	48 89 c7             	mov    %rax,%rdi
  41da1b:	e8 20 3d fe ff       	callq  401740 <strchr@plt>
  41da20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41da24:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41da29:	75 08                	jne    41da33 <getnextfilename+0x70>
  41da2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41da2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41da33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41da37:	c6 00 00             	movb   $0x0,(%rax)
  41da3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41da3e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41da42:	48 89 10             	mov    %rdx,(%rax)
  41da45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41da49:	c9                   	leaveq 
  41da4a:	c3                   	retq   

000000000041da4b <pusherrornotfound>:
  41da4b:	55                   	push   %rbp
  41da4c:	48 89 e5             	mov    %rsp,%rbp
  41da4f:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
  41da56:	48 89 bd d8 fb ff ff 	mov    %rdi,-0x428(%rbp)
  41da5d:	48 89 b5 d0 fb ff ff 	mov    %rsi,-0x430(%rbp)
  41da64:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
  41da6b:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  41da72:	48 89 d6             	mov    %rdx,%rsi
  41da75:	48 89 c7             	mov    %rax,%rdi
  41da78:	e8 0c 95 fe ff       	callq  406f89 <luaL_buffinit>
  41da7d:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  41da84:	be 30 03 44 00       	mov    $0x440330,%esi
  41da89:	48 89 c7             	mov    %rax,%rdi
  41da8c:	e8 79 93 fe ff       	callq  406e0a <luaL_addstring>
  41da91:	48 8b b5 d0 fb ff ff 	mov    -0x430(%rbp),%rsi
  41da98:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  41da9f:	b9 3a 03 44 00       	mov    $0x44033a,%ecx
  41daa4:	ba 47 03 44 00       	mov    $0x440347,%edx
  41daa9:	48 89 c7             	mov    %rax,%rdi
  41daac:	e8 25 a3 fe ff       	callq  407dd6 <luaL_addgsub>
  41dab1:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  41dab8:	be 49 03 44 00       	mov    $0x440349,%esi
  41dabd:	48 89 c7             	mov    %rax,%rdi
  41dac0:	e8 45 93 fe ff       	callq  406e0a <luaL_addstring>
  41dac5:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
  41dacc:	48 89 c7             	mov    %rax,%rdi
  41dacf:	e8 6b 93 fe ff       	callq  406e3f <luaL_pushresult>
  41dad4:	90                   	nop
  41dad5:	c9                   	leaveq 
  41dad6:	c3                   	retq   

000000000041dad7 <searchpath>:
  41dad7:	55                   	push   %rbp
  41dad8:	48 89 e5             	mov    %rsp,%rbp
  41dadb:	48 81 ec 70 04 00 00 	sub    $0x470,%rsp
  41dae2:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  41dae9:	48 89 b5 b0 fb ff ff 	mov    %rsi,-0x450(%rbp)
  41daf0:	48 89 95 a8 fb ff ff 	mov    %rdx,-0x458(%rbp)
  41daf7:	48 89 8d a0 fb ff ff 	mov    %rcx,-0x460(%rbp)
  41dafe:	4c 89 85 98 fb ff ff 	mov    %r8,-0x468(%rbp)
  41db05:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
  41db0c:	0f b6 00             	movzbl (%rax),%eax
  41db0f:	84 c0                	test   %al,%al
  41db11:	74 4e                	je     41db61 <searchpath+0x8a>
  41db13:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
  41db1a:	0f b6 00             	movzbl (%rax),%eax
  41db1d:	0f be d0             	movsbl %al,%edx
  41db20:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  41db27:	89 d6                	mov    %edx,%esi
  41db29:	48 89 c7             	mov    %rax,%rdi
  41db2c:	e8 0f 3c fe ff       	callq  401740 <strchr@plt>
  41db31:	48 85 c0             	test   %rax,%rax
  41db34:	74 2b                	je     41db61 <searchpath+0x8a>
  41db36:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  41db3d:	48 8b 95 a0 fb ff ff 	mov    -0x460(%rbp),%rdx
  41db44:	48 8b b5 b0 fb ff ff 	mov    -0x450(%rbp),%rsi
  41db4b:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41db52:	48 89 c7             	mov    %rax,%rdi
  41db55:	e8 1a a3 fe ff       	callq  407e74 <luaL_gsub>
  41db5a:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
  41db61:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  41db68:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41db6f:	48 89 d6             	mov    %rdx,%rsi
  41db72:	48 89 c7             	mov    %rax,%rdi
  41db75:	e8 0f 94 fe ff       	callq  406f89 <luaL_buffinit>
  41db7a:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  41db81:	48 8b b5 a8 fb ff ff 	mov    -0x458(%rbp),%rsi
  41db88:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41db8f:	48 89 d1             	mov    %rdx,%rcx
  41db92:	ba 4b 03 44 00       	mov    $0x44034b,%edx
  41db97:	48 89 c7             	mov    %rax,%rdi
  41db9a:	e8 37 a2 fe ff       	callq  407dd6 <luaL_addgsub>
  41db9f:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  41dba6:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  41dbad:	48 39 c2             	cmp    %rax,%rdx
  41dbb0:	72 17                	jb     41dbc9 <searchpath+0xf2>
  41dbb2:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41dbb9:	be 01 00 00 00       	mov    $0x1,%esi
  41dbbe:	48 89 c7             	mov    %rax,%rdi
  41dbc1:	e8 b2 91 fe ff       	callq  406d78 <luaL_prepbuffsize>
  41dbc6:	48 85 c0             	test   %rax,%rax
  41dbc9:	90                   	nop
  41dbca:	48 8b 8d d0 fb ff ff 	mov    -0x430(%rbp),%rcx
  41dbd1:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  41dbd8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41dbdc:	48 89 95 e0 fb ff ff 	mov    %rdx,-0x420(%rbp)
  41dbe3:	48 01 c8             	add    %rcx,%rax
  41dbe6:	c6 00 00             	movb   $0x0,(%rax)
  41dbe9:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
  41dbf0:	48 89 85 c8 fb ff ff 	mov    %rax,-0x438(%rbp)
  41dbf7:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41dbfe:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  41dc05:	48 83 ea 01          	sub    $0x1,%rdx
  41dc09:	48 01 d0             	add    %rdx,%rax
  41dc0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41dc10:	eb 28                	jmp    41dc3a <searchpath+0x163>
  41dc12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41dc16:	48 89 c7             	mov    %rax,%rdi
  41dc19:	e8 63 fd ff ff       	callq  41d981 <readable>
  41dc1e:	85 c0                	test   %eax,%eax
  41dc20:	74 18                	je     41dc3a <searchpath+0x163>
  41dc22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41dc26:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41dc2d:	48 89 d6             	mov    %rdx,%rsi
  41dc30:	48 89 c7             	mov    %rax,%rdi
  41dc33:	e8 d6 51 fe ff       	callq  402e0e <lua_pushstring>
  41dc38:	eb 63                	jmp    41dc9d <searchpath+0x1c6>
  41dc3a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41dc3e:	48 8d 85 c8 fb ff ff 	lea    -0x438(%rbp),%rax
  41dc45:	48 89 d6             	mov    %rdx,%rsi
  41dc48:	48 89 c7             	mov    %rax,%rdi
  41dc4b:	e8 73 fd ff ff       	callq  41d9c3 <getnextfilename>
  41dc50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41dc54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41dc59:	75 b7                	jne    41dc12 <searchpath+0x13b>
  41dc5b:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41dc62:	48 89 c7             	mov    %rax,%rdi
  41dc65:	e8 d5 91 fe ff       	callq  406e3f <luaL_pushresult>
  41dc6a:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41dc71:	ba 00 00 00 00       	mov    $0x0,%edx
  41dc76:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41dc7b:	48 89 c7             	mov    %rax,%rdi
  41dc7e:	e8 ea 4c fe ff       	callq  40296d <lua_tolstring>
  41dc83:	48 89 c2             	mov    %rax,%rdx
  41dc86:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41dc8d:	48 89 d6             	mov    %rdx,%rsi
  41dc90:	48 89 c7             	mov    %rax,%rdi
  41dc93:	e8 b3 fd ff ff       	callq  41da4b <pusherrornotfound>
  41dc98:	b8 00 00 00 00       	mov    $0x0,%eax
  41dc9d:	c9                   	leaveq 
  41dc9e:	c3                   	retq   

000000000041dc9f <ll_searchpath>:
  41dc9f:	55                   	push   %rbp
  41dca0:	48 89 e5             	mov    %rsp,%rbp
  41dca3:	41 55                	push   %r13
  41dca5:	41 54                	push   %r12
  41dca7:	53                   	push   %rbx
  41dca8:	48 83 ec 28          	sub    $0x28,%rsp
  41dcac:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41dcb0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dcb4:	b9 00 00 00 00       	mov    $0x0,%ecx
  41dcb9:	ba 4d 03 44 00       	mov    $0x44034d,%edx
  41dcbe:	be 04 00 00 00       	mov    $0x4,%esi
  41dcc3:	48 89 c7             	mov    %rax,%rdi
  41dcc6:	e8 59 8b fe ff       	callq  406824 <luaL_optlstring>
  41dccb:	49 89 c5             	mov    %rax,%r13
  41dcce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dcd2:	b9 00 00 00 00       	mov    $0x0,%ecx
  41dcd7:	ba 4f 03 44 00       	mov    $0x44034f,%edx
  41dcdc:	be 03 00 00 00       	mov    $0x3,%esi
  41dce1:	48 89 c7             	mov    %rax,%rdi
  41dce4:	e8 3b 8b fe ff       	callq  406824 <luaL_optlstring>
  41dce9:	49 89 c4             	mov    %rax,%r12
  41dcec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dcf0:	ba 00 00 00 00       	mov    $0x0,%edx
  41dcf5:	be 02 00 00 00       	mov    $0x2,%esi
  41dcfa:	48 89 c7             	mov    %rax,%rdi
  41dcfd:	e8 ca 8a fe ff       	callq  4067cc <luaL_checklstring>
  41dd02:	48 89 c3             	mov    %rax,%rbx
  41dd05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dd09:	ba 00 00 00 00       	mov    $0x0,%edx
  41dd0e:	be 01 00 00 00       	mov    $0x1,%esi
  41dd13:	48 89 c7             	mov    %rax,%rdi
  41dd16:	e8 b1 8a fe ff       	callq  4067cc <luaL_checklstring>
  41dd1b:	48 89 c6             	mov    %rax,%rsi
  41dd1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dd22:	4d 89 e8             	mov    %r13,%r8
  41dd25:	4c 89 e1             	mov    %r12,%rcx
  41dd28:	48 89 da             	mov    %rbx,%rdx
  41dd2b:	48 89 c7             	mov    %rax,%rdi
  41dd2e:	e8 a4 fd ff ff       	callq  41dad7 <searchpath>
  41dd33:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41dd37:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41dd3c:	74 07                	je     41dd45 <ll_searchpath+0xa6>
  41dd3e:	b8 01 00 00 00       	mov    $0x1,%eax
  41dd43:	eb 27                	jmp    41dd6c <ll_searchpath+0xcd>
  41dd45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dd49:	48 89 c7             	mov    %rax,%rdi
  41dd4c:	e8 54 4f fe ff       	callq  402ca5 <lua_pushnil>
  41dd51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41dd55:	ba 01 00 00 00       	mov    $0x1,%edx
  41dd5a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41dd5f:	48 89 c7             	mov    %rax,%rdi
  41dd62:	e8 07 44 fe ff       	callq  40216e <lua_rotate>
  41dd67:	b8 02 00 00 00       	mov    $0x2,%eax
  41dd6c:	48 83 c4 28          	add    $0x28,%rsp
  41dd70:	5b                   	pop    %rbx
  41dd71:	41 5c                	pop    %r12
  41dd73:	41 5d                	pop    %r13
  41dd75:	5d                   	pop    %rbp
  41dd76:	c3                   	retq   

000000000041dd77 <findfile>:
  41dd77:	55                   	push   %rbp
  41dd78:	48 89 e5             	mov    %rsp,%rbp
  41dd7b:	48 83 ec 30          	sub    $0x30,%rsp
  41dd7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41dd83:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41dd87:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41dd8b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41dd8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41dd93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41dd97:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  41dd9c:	48 89 c7             	mov    %rax,%rdi
  41dd9f:	e8 11 57 fe ff       	callq  4034b5 <lua_getfield>
  41dda4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41dda8:	ba 00 00 00 00       	mov    $0x0,%edx
  41ddad:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41ddb2:	48 89 c7             	mov    %rax,%rdi
  41ddb5:	e8 b3 4b fe ff       	callq  40296d <lua_tolstring>
  41ddba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ddbe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41ddc3:	0f 94 c0             	sete   %al
  41ddc6:	0f b6 c0             	movzbl %al,%eax
  41ddc9:	48 85 c0             	test   %rax,%rax
  41ddcc:	74 1a                	je     41dde8 <findfile+0x71>
  41ddce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41ddd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ddd6:	be 51 03 44 00       	mov    $0x440351,%esi
  41dddb:	48 89 c7             	mov    %rax,%rdi
  41ddde:	b8 00 00 00 00       	mov    $0x0,%eax
  41dde3:	e8 08 84 fe ff       	callq  4061f0 <luaL_error>
  41dde8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41ddec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41ddf0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41ddf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ddf8:	49 89 c8             	mov    %rcx,%r8
  41ddfb:	b9 4f 03 44 00       	mov    $0x44034f,%ecx
  41de00:	48 89 c7             	mov    %rax,%rdi
  41de03:	e8 cf fc ff ff       	callq  41dad7 <searchpath>
  41de08:	c9                   	leaveq 
  41de09:	c3                   	retq   

000000000041de0a <checkload>:
  41de0a:	55                   	push   %rbp
  41de0b:	48 89 e5             	mov    %rsp,%rbp
  41de0e:	53                   	push   %rbx
  41de0f:	48 83 ec 28          	sub    $0x28,%rsp
  41de13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41de17:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  41de1a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41de1e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  41de22:	0f 95 c0             	setne  %al
  41de25:	0f b6 c0             	movzbl %al,%eax
  41de28:	48 85 c0             	test   %rax,%rax
  41de2b:	74 1a                	je     41de47 <checkload+0x3d>
  41de2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41de31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41de35:	48 89 d6             	mov    %rdx,%rsi
  41de38:	48 89 c7             	mov    %rax,%rdi
  41de3b:	e8 ce 4f fe ff       	callq  402e0e <lua_pushstring>
  41de40:	b8 02 00 00 00       	mov    $0x2,%eax
  41de45:	eb 55                	jmp    41de9c <checkload+0x92>
  41de47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41de4b:	ba 00 00 00 00       	mov    $0x0,%edx
  41de50:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41de55:	48 89 c7             	mov    %rax,%rdi
  41de58:	e8 10 4b fe ff       	callq  40296d <lua_tolstring>
  41de5d:	48 89 c3             	mov    %rax,%rbx
  41de60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41de64:	ba 00 00 00 00       	mov    $0x0,%edx
  41de69:	be 01 00 00 00       	mov    $0x1,%esi
  41de6e:	48 89 c7             	mov    %rax,%rdi
  41de71:	e8 f7 4a fe ff       	callq  40296d <lua_tolstring>
  41de76:	48 89 c6             	mov    %rax,%rsi
  41de79:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41de7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41de81:	49 89 d8             	mov    %rbx,%r8
  41de84:	48 89 d1             	mov    %rdx,%rcx
  41de87:	48 89 f2             	mov    %rsi,%rdx
  41de8a:	be 70 03 44 00       	mov    $0x440370,%esi
  41de8f:	48 89 c7             	mov    %rax,%rdi
  41de92:	b8 00 00 00 00       	mov    $0x0,%eax
  41de97:	e8 54 83 fe ff       	callq  4061f0 <luaL_error>
  41de9c:	48 83 c4 28          	add    $0x28,%rsp
  41dea0:	5b                   	pop    %rbx
  41dea1:	5d                   	pop    %rbp
  41dea2:	c3                   	retq   

000000000041dea3 <searcher_Lua>:
  41dea3:	55                   	push   %rbp
  41dea4:	48 89 e5             	mov    %rsp,%rbp
  41dea7:	48 83 ec 20          	sub    $0x20,%rsp
  41deab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41deaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41deb3:	ba 00 00 00 00       	mov    $0x0,%edx
  41deb8:	be 01 00 00 00       	mov    $0x1,%esi
  41debd:	48 89 c7             	mov    %rax,%rdi
  41dec0:	e8 07 89 fe ff       	callq  4067cc <luaL_checklstring>
  41dec5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41dec9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  41decd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ded1:	b9 4d 03 44 00       	mov    $0x44034d,%ecx
  41ded6:	ba 9e 03 44 00       	mov    $0x44039e,%edx
  41dedb:	48 89 c7             	mov    %rax,%rdi
  41dede:	e8 94 fe ff ff       	callq  41dd77 <findfile>
  41dee3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41dee7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41deec:	75 07                	jne    41def5 <searcher_Lua+0x52>
  41deee:	b8 01 00 00 00       	mov    $0x1,%eax
  41def3:	eb 32                	jmp    41df27 <searcher_Lua+0x84>
  41def5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41def9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41defd:	ba 00 00 00 00       	mov    $0x0,%edx
  41df02:	48 89 ce             	mov    %rcx,%rsi
  41df05:	48 89 c7             	mov    %rax,%rdi
  41df08:	e8 c2 94 fe ff       	callq  4073cf <luaL_loadfilex>
  41df0d:	85 c0                	test   %eax,%eax
  41df0f:	0f 94 c0             	sete   %al
  41df12:	0f b6 c8             	movzbl %al,%ecx
  41df15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41df19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41df1d:	89 ce                	mov    %ecx,%esi
  41df1f:	48 89 c7             	mov    %rax,%rdi
  41df22:	e8 e3 fe ff ff       	callq  41de0a <checkload>
  41df27:	c9                   	leaveq 
  41df28:	c3                   	retq   

000000000041df29 <loadfunc>:
  41df29:	55                   	push   %rbp
  41df2a:	48 89 e5             	mov    %rsp,%rbp
  41df2d:	48 83 ec 40          	sub    $0x40,%rsp
  41df31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41df35:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41df39:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41df3d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41df41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41df45:	b9 a3 03 44 00       	mov    $0x4403a3,%ecx
  41df4a:	ba 4f 03 44 00       	mov    $0x44034f,%edx
  41df4f:	48 89 c7             	mov    %rax,%rdi
  41df52:	e8 1d 9f fe ff       	callq  407e74 <luaL_gsub>
  41df57:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41df5b:	b8 2d 00 00 00       	mov    $0x2d,%eax
  41df60:	0f be d0             	movsbl %al,%edx
  41df63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41df67:	89 d6                	mov    %edx,%esi
  41df69:	48 89 c7             	mov    %rax,%rdi
  41df6c:	e8 cf 37 fe ff       	callq  401740 <strchr@plt>
  41df71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41df75:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41df7a:	74 71                	je     41dfed <loadfunc+0xc4>
  41df7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41df80:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  41df84:	48 89 c2             	mov    %rax,%rdx
  41df87:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41df8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41df8f:	48 89 ce             	mov    %rcx,%rsi
  41df92:	48 89 c7             	mov    %rax,%rdi
  41df95:	e8 bd 4d fe ff       	callq  402d57 <lua_pushlstring>
  41df9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41df9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41dfa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dfa6:	be a5 03 44 00       	mov    $0x4403a5,%esi
  41dfab:	48 89 c7             	mov    %rax,%rdi
  41dfae:	b8 00 00 00 00       	mov    $0x0,%eax
  41dfb3:	e8 5a 4f fe ff       	callq  402f12 <lua_pushfstring>
  41dfb8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41dfbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41dfc0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41dfc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dfc8:	48 89 ce             	mov    %rcx,%rsi
  41dfcb:	48 89 c7             	mov    %rax,%rdi
  41dfce:	e8 09 f8 ff ff       	callq  41d7dc <lookforfunc>
  41dfd3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41dfd6:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  41dfda:	74 05                	je     41dfe1 <loadfunc+0xb8>
  41dfdc:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41dfdf:	eb 41                	jmp    41e022 <loadfunc+0xf9>
  41dfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41dfe5:	48 83 c0 01          	add    $0x1,%rax
  41dfe9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41dfed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41dff1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dff5:	be a5 03 44 00       	mov    $0x4403a5,%esi
  41dffa:	48 89 c7             	mov    %rax,%rdi
  41dffd:	b8 00 00 00 00       	mov    $0x0,%eax
  41e002:	e8 0b 4f fe ff       	callq  402f12 <lua_pushfstring>
  41e007:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41e00b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41e00f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41e013:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e017:	48 89 ce             	mov    %rcx,%rsi
  41e01a:	48 89 c7             	mov    %rax,%rdi
  41e01d:	e8 ba f7 ff ff       	callq  41d7dc <lookforfunc>
  41e022:	c9                   	leaveq 
  41e023:	c3                   	retq   

000000000041e024 <searcher_C>:
  41e024:	55                   	push   %rbp
  41e025:	48 89 e5             	mov    %rsp,%rbp
  41e028:	48 83 ec 20          	sub    $0x20,%rsp
  41e02c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41e030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e034:	ba 00 00 00 00       	mov    $0x0,%edx
  41e039:	be 01 00 00 00       	mov    $0x1,%esi
  41e03e:	48 89 c7             	mov    %rax,%rdi
  41e041:	e8 86 87 fe ff       	callq  4067cc <luaL_checklstring>
  41e046:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e04a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  41e04e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e052:	b9 4d 03 44 00       	mov    $0x44034d,%ecx
  41e057:	ba b0 03 44 00       	mov    $0x4403b0,%edx
  41e05c:	48 89 c7             	mov    %rax,%rdi
  41e05f:	e8 13 fd ff ff       	callq  41dd77 <findfile>
  41e064:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41e068:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41e06d:	75 07                	jne    41e076 <searcher_C+0x52>
  41e06f:	b8 01 00 00 00       	mov    $0x1,%eax
  41e074:	eb 31                	jmp    41e0a7 <searcher_C+0x83>
  41e076:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e07a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41e07e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e082:	48 89 ce             	mov    %rcx,%rsi
  41e085:	48 89 c7             	mov    %rax,%rdi
  41e088:	e8 9c fe ff ff       	callq  41df29 <loadfunc>
  41e08d:	85 c0                	test   %eax,%eax
  41e08f:	0f 94 c0             	sete   %al
  41e092:	0f b6 c8             	movzbl %al,%ecx
  41e095:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41e099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e09d:	89 ce                	mov    %ecx,%esi
  41e09f:	48 89 c7             	mov    %rax,%rdi
  41e0a2:	e8 63 fd ff ff       	callq  41de0a <checkload>
  41e0a7:	c9                   	leaveq 
  41e0a8:	c3                   	retq   

000000000041e0a9 <searcher_Croot>:
  41e0a9:	55                   	push   %rbp
  41e0aa:	48 89 e5             	mov    %rsp,%rbp
  41e0ad:	48 83 ec 30          	sub    $0x30,%rsp
  41e0b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41e0b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e0b9:	ba 00 00 00 00       	mov    $0x0,%edx
  41e0be:	be 01 00 00 00       	mov    $0x1,%esi
  41e0c3:	48 89 c7             	mov    %rax,%rdi
  41e0c6:	e8 01 87 fe ff       	callq  4067cc <luaL_checklstring>
  41e0cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e0cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e0d3:	be 2e 00 00 00       	mov    $0x2e,%esi
  41e0d8:	48 89 c7             	mov    %rax,%rdi
  41e0db:	e8 60 36 fe ff       	callq  401740 <strchr@plt>
  41e0e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41e0e4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41e0e9:	75 0a                	jne    41e0f5 <searcher_Croot+0x4c>
  41e0eb:	b8 00 00 00 00       	mov    $0x0,%eax
  41e0f0:	e9 d9 00 00 00       	jmpq   41e1ce <searcher_Croot+0x125>
  41e0f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e0f9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  41e0fd:	48 89 c2             	mov    %rax,%rdx
  41e100:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41e104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e108:	48 89 ce             	mov    %rcx,%rsi
  41e10b:	48 89 c7             	mov    %rax,%rdi
  41e10e:	e8 44 4c fe ff       	callq  402d57 <lua_pushlstring>
  41e113:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e117:	ba 00 00 00 00       	mov    $0x0,%edx
  41e11c:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e121:	48 89 c7             	mov    %rax,%rdi
  41e124:	e8 44 48 fe ff       	callq  40296d <lua_tolstring>
  41e129:	48 89 c6             	mov    %rax,%rsi
  41e12c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e130:	b9 4d 03 44 00       	mov    $0x44034d,%ecx
  41e135:	ba b0 03 44 00       	mov    $0x4403b0,%edx
  41e13a:	48 89 c7             	mov    %rax,%rdi
  41e13d:	e8 35 fc ff ff       	callq  41dd77 <findfile>
  41e142:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41e146:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41e14b:	75 07                	jne    41e154 <searcher_Croot+0xab>
  41e14d:	b8 01 00 00 00       	mov    $0x1,%eax
  41e152:	eb 7a                	jmp    41e1ce <searcher_Croot+0x125>
  41e154:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e158:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e15c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e160:	48 89 ce             	mov    %rcx,%rsi
  41e163:	48 89 c7             	mov    %rax,%rdi
  41e166:	e8 be fd ff ff       	callq  41df29 <loadfunc>
  41e16b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41e16e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  41e172:	74 42                	je     41e1b6 <searcher_Croot+0x10d>
  41e174:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
  41e178:	74 17                	je     41e191 <searcher_Croot+0xe8>
  41e17a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e17e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e182:	be 00 00 00 00       	mov    $0x0,%esi
  41e187:	48 89 c7             	mov    %rax,%rdi
  41e18a:	e8 7b fc ff ff       	callq  41de0a <checkload>
  41e18f:	eb 3d                	jmp    41e1ce <searcher_Croot+0x125>
  41e191:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e195:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e199:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e19d:	be b6 03 44 00       	mov    $0x4403b6,%esi
  41e1a2:	48 89 c7             	mov    %rax,%rdi
  41e1a5:	b8 00 00 00 00       	mov    $0x0,%eax
  41e1aa:	e8 63 4d fe ff       	callq  402f12 <lua_pushfstring>
  41e1af:	b8 01 00 00 00       	mov    $0x1,%eax
  41e1b4:	eb 18                	jmp    41e1ce <searcher_Croot+0x125>
  41e1b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e1ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e1be:	48 89 d6             	mov    %rdx,%rsi
  41e1c1:	48 89 c7             	mov    %rax,%rdi
  41e1c4:	e8 45 4c fe ff       	callq  402e0e <lua_pushstring>
  41e1c9:	b8 02 00 00 00       	mov    $0x2,%eax
  41e1ce:	c9                   	leaveq 
  41e1cf:	c3                   	retq   

000000000041e1d0 <searcher_preload>:
  41e1d0:	55                   	push   %rbp
  41e1d1:	48 89 e5             	mov    %rsp,%rbp
  41e1d4:	48 83 ec 20          	sub    $0x20,%rsp
  41e1d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41e1dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e1e0:	ba 00 00 00 00       	mov    $0x0,%edx
  41e1e5:	be 01 00 00 00       	mov    $0x1,%esi
  41e1ea:	48 89 c7             	mov    %rax,%rdi
  41e1ed:	e8 da 85 fe ff       	callq  4067cc <luaL_checklstring>
  41e1f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e1f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e1fa:	ba d2 03 44 00       	mov    $0x4403d2,%edx
  41e1ff:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e204:	48 89 c7             	mov    %rax,%rdi
  41e207:	e8 a9 52 fe ff       	callq  4034b5 <lua_getfield>
  41e20c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e210:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e214:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e219:	48 89 c7             	mov    %rax,%rdi
  41e21c:	e8 94 52 fe ff       	callq  4034b5 <lua_getfield>
  41e221:	85 c0                	test   %eax,%eax
  41e223:	75 21                	jne    41e246 <searcher_preload+0x76>
  41e225:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e22d:	be e0 03 44 00       	mov    $0x4403e0,%esi
  41e232:	48 89 c7             	mov    %rax,%rdi
  41e235:	b8 00 00 00 00       	mov    $0x0,%eax
  41e23a:	e8 d3 4c fe ff       	callq  402f12 <lua_pushfstring>
  41e23f:	b8 01 00 00 00       	mov    $0x1,%eax
  41e244:	eb 16                	jmp    41e25c <searcher_preload+0x8c>
  41e246:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e24a:	be ff 03 44 00       	mov    $0x4403ff,%esi
  41e24f:	48 89 c7             	mov    %rax,%rdi
  41e252:	e8 b7 4b fe ff       	callq  402e0e <lua_pushstring>
  41e257:	b8 02 00 00 00       	mov    $0x2,%eax
  41e25c:	c9                   	leaveq 
  41e25d:	c3                   	retq   

000000000041e25e <findloader>:
  41e25e:	55                   	push   %rbp
  41e25f:	48 89 e5             	mov    %rsp,%rbp
  41e262:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  41e269:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  41e270:	48 89 b5 c0 fb ff ff 	mov    %rsi,-0x440(%rbp)
  41e277:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e27e:	ba 09 04 44 00       	mov    $0x440409,%edx
  41e283:	be d7 b9 f0 ff       	mov    $0xfff0b9d7,%esi
  41e288:	48 89 c7             	mov    %rax,%rdi
  41e28b:	e8 25 52 fe ff       	callq  4034b5 <lua_getfield>
  41e290:	83 f8 05             	cmp    $0x5,%eax
  41e293:	0f 95 c0             	setne  %al
  41e296:	0f b6 c0             	movzbl %al,%eax
  41e299:	48 85 c0             	test   %rax,%rax
  41e29c:	74 19                	je     41e2b7 <findloader+0x59>
  41e29e:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e2a5:	be 18 04 44 00       	mov    $0x440418,%esi
  41e2aa:	48 89 c7             	mov    %rax,%rdi
  41e2ad:	b8 00 00 00 00       	mov    $0x0,%eax
  41e2b2:	e8 39 7f fe ff       	callq  4061f0 <luaL_error>
  41e2b7:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  41e2be:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e2c5:	48 89 d6             	mov    %rdx,%rsi
  41e2c8:	48 89 c7             	mov    %rax,%rdi
  41e2cb:	e8 b9 8c fe ff       	callq  406f89 <luaL_buffinit>
  41e2d0:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41e2d7:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41e2de:	be 3c 04 44 00       	mov    $0x44043c,%esi
  41e2e3:	48 89 c7             	mov    %rax,%rdi
  41e2e6:	e8 1f 8b fe ff       	callq  406e0a <luaL_addstring>
  41e2eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e2ee:	48 63 d0             	movslq %eax,%rdx
  41e2f1:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e2f8:	be 03 00 00 00       	mov    $0x3,%esi
  41e2fd:	48 89 c7             	mov    %rax,%rdi
  41e300:	e8 5a 54 fe ff       	callq  40375f <lua_rawgeti>
  41e305:	85 c0                	test   %eax,%eax
  41e307:	0f 94 c0             	sete   %al
  41e30a:	0f b6 c0             	movzbl %al,%eax
  41e30d:	48 85 c0             	test   %rax,%rax
  41e310:	74 71                	je     41e383 <findloader+0x125>
  41e312:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e319:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e31e:	48 89 c7             	mov    %rax,%rdi
  41e321:	e8 5e 3c fe ff       	callq  401f84 <lua_settop>
  41e326:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  41e32d:	48 83 e8 02          	sub    $0x2,%rax
  41e331:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  41e338:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41e33f:	48 89 c7             	mov    %rax,%rdi
  41e342:	e8 f8 8a fe ff       	callq  406e3f <luaL_pushresult>
  41e347:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e34e:	ba 00 00 00 00       	mov    $0x0,%edx
  41e353:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e358:	48 89 c7             	mov    %rax,%rdi
  41e35b:	e8 0d 46 fe ff       	callq  40296d <lua_tolstring>
  41e360:	48 89 c1             	mov    %rax,%rcx
  41e363:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
  41e36a:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e371:	be 3f 04 44 00       	mov    $0x44043f,%esi
  41e376:	48 89 c7             	mov    %rax,%rdi
  41e379:	b8 00 00 00 00       	mov    $0x0,%eax
  41e37e:	e8 6d 7e fe ff       	callq  4061f0 <luaL_error>
  41e383:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
  41e38a:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e391:	48 89 d6             	mov    %rdx,%rsi
  41e394:	48 89 c7             	mov    %rax,%rdi
  41e397:	e8 72 4a fe ff       	callq  402e0e <lua_pushstring>
  41e39c:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e3a3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  41e3a9:	b9 00 00 00 00       	mov    $0x0,%ecx
  41e3ae:	ba 02 00 00 00       	mov    $0x2,%edx
  41e3b3:	be 01 00 00 00       	mov    $0x1,%esi
  41e3b8:	48 89 c7             	mov    %rax,%rdi
  41e3bb:	e8 ee 60 fe ff       	callq  4044ae <lua_callk>
  41e3c0:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e3c7:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e3cc:	48 89 c7             	mov    %rax,%rdi
  41e3cf:	e8 9f 3f fe ff       	callq  402373 <lua_type>
  41e3d4:	83 f8 06             	cmp    $0x6,%eax
  41e3d7:	74 6c                	je     41e445 <findloader+0x1e7>
  41e3d9:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e3e0:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e3e5:	48 89 c7             	mov    %rax,%rdi
  41e3e8:	e8 db 40 fe ff       	callq  4024c8 <lua_isstring>
  41e3ed:	85 c0                	test   %eax,%eax
  41e3ef:	74 25                	je     41e416 <findloader+0x1b8>
  41e3f1:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e3f8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e3fd:	48 89 c7             	mov    %rax,%rdi
  41e400:	e8 7f 3b fe ff       	callq  401f84 <lua_settop>
  41e405:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  41e40c:	48 89 c7             	mov    %rax,%rdi
  41e40f:	e8 e6 8a fe ff       	callq  406efa <luaL_addvalue>
  41e414:	eb 26                	jmp    41e43c <findloader+0x1de>
  41e416:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  41e41d:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41e422:	48 89 c7             	mov    %rax,%rdi
  41e425:	e8 5a 3b fe ff       	callq  401f84 <lua_settop>
  41e42a:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  41e431:	48 83 e8 02          	sub    $0x2,%rax
  41e435:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  41e43c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41e440:	e9 92 fe ff ff       	jmpq   41e2d7 <findloader+0x79>
  41e445:	90                   	nop
  41e446:	c9                   	leaveq 
  41e447:	c3                   	retq   

000000000041e448 <ll_require>:
  41e448:	55                   	push   %rbp
  41e449:	48 89 e5             	mov    %rsp,%rbp
  41e44c:	48 83 ec 20          	sub    $0x20,%rsp
  41e450:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41e454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e458:	ba 00 00 00 00       	mov    $0x0,%edx
  41e45d:	be 01 00 00 00       	mov    $0x1,%esi
  41e462:	48 89 c7             	mov    %rax,%rdi
  41e465:	e8 62 83 fe ff       	callq  4067cc <luaL_checklstring>
  41e46a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e46e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e472:	be 01 00 00 00       	mov    $0x1,%esi
  41e477:	48 89 c7             	mov    %rax,%rdi
  41e47a:	e8 05 3b fe ff       	callq  401f84 <lua_settop>
  41e47f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e483:	ba 58 04 44 00       	mov    $0x440458,%edx
  41e488:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e48d:	48 89 c7             	mov    %rax,%rdi
  41e490:	e8 20 50 fe ff       	callq  4034b5 <lua_getfield>
  41e495:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e49d:	be 02 00 00 00       	mov    $0x2,%esi
  41e4a2:	48 89 c7             	mov    %rax,%rdi
  41e4a5:	e8 0b 50 fe ff       	callq  4034b5 <lua_getfield>
  41e4aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e4ae:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e4b3:	48 89 c7             	mov    %rax,%rdi
  41e4b6:	e8 62 44 fe ff       	callq  40291d <lua_toboolean>
  41e4bb:	85 c0                	test   %eax,%eax
  41e4bd:	74 0a                	je     41e4c9 <ll_require+0x81>
  41e4bf:	b8 01 00 00 00       	mov    $0x1,%eax
  41e4c4:	e9 2a 01 00 00       	jmpq   41e5f3 <ll_require+0x1ab>
  41e4c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e4cd:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e4d2:	48 89 c7             	mov    %rax,%rdi
  41e4d5:	e8 aa 3a fe ff       	callq  401f84 <lua_settop>
  41e4da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e4de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e4e2:	48 89 d6             	mov    %rdx,%rsi
  41e4e5:	48 89 c7             	mov    %rax,%rdi
  41e4e8:	e8 71 fd ff ff       	callq  41e25e <findloader>
  41e4ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e4f1:	ba 01 00 00 00       	mov    $0x1,%edx
  41e4f6:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e4fb:	48 89 c7             	mov    %rax,%rdi
  41e4fe:	e8 6b 3c fe ff       	callq  40216e <lua_rotate>
  41e503:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e507:	be 01 00 00 00       	mov    $0x1,%esi
  41e50c:	48 89 c7             	mov    %rax,%rdi
  41e50f:	e8 fb 3d fe ff       	callq  40230f <lua_pushvalue>
  41e514:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e518:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  41e51d:	48 89 c7             	mov    %rax,%rdi
  41e520:	e8 ea 3d fe ff       	callq  40230f <lua_pushvalue>
  41e525:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e529:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  41e52f:	b9 00 00 00 00       	mov    $0x0,%ecx
  41e534:	ba 01 00 00 00       	mov    $0x1,%edx
  41e539:	be 02 00 00 00       	mov    $0x2,%esi
  41e53e:	48 89 c7             	mov    %rax,%rdi
  41e541:	e8 68 5f fe ff       	callq  4044ae <lua_callk>
  41e546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e54a:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e54f:	48 89 c7             	mov    %rax,%rdi
  41e552:	e8 1c 3e fe ff       	callq  402373 <lua_type>
  41e557:	85 c0                	test   %eax,%eax
  41e559:	74 17                	je     41e572 <ll_require+0x12a>
  41e55b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e55f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e563:	be 02 00 00 00       	mov    $0x2,%esi
  41e568:	48 89 c7             	mov    %rax,%rdi
  41e56b:	e8 62 58 fe ff       	callq  403dd2 <lua_setfield>
  41e570:	eb 11                	jmp    41e583 <ll_require+0x13b>
  41e572:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e576:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e57b:	48 89 c7             	mov    %rax,%rdi
  41e57e:	e8 01 3a fe ff       	callq  401f84 <lua_settop>
  41e583:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e587:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e58b:	be 02 00 00 00       	mov    $0x2,%esi
  41e590:	48 89 c7             	mov    %rax,%rdi
  41e593:	e8 1d 4f fe ff       	callq  4034b5 <lua_getfield>
  41e598:	85 c0                	test   %eax,%eax
  41e59a:	75 3c                	jne    41e5d8 <ll_require+0x190>
  41e59c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e5a0:	be 01 00 00 00       	mov    $0x1,%esi
  41e5a5:	48 89 c7             	mov    %rax,%rdi
  41e5a8:	e8 8b 4b fe ff       	callq  403138 <lua_pushboolean>
  41e5ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e5b1:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  41e5b6:	be ff ff ff ff       	mov    $0xffffffff,%esi
  41e5bb:	48 89 c7             	mov    %rax,%rdi
  41e5be:	e8 6a 3c fe ff       	callq  40222d <lua_copy>
  41e5c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41e5c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e5cb:	be 02 00 00 00       	mov    $0x2,%esi
  41e5d0:	48 89 c7             	mov    %rax,%rdi
  41e5d3:	e8 fa 57 fe ff       	callq  403dd2 <lua_setfield>
  41e5d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e5dc:	ba 01 00 00 00       	mov    $0x1,%edx
  41e5e1:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e5e6:	48 89 c7             	mov    %rax,%rdi
  41e5e9:	e8 80 3b fe ff       	callq  40216e <lua_rotate>
  41e5ee:	b8 02 00 00 00       	mov    $0x2,%eax
  41e5f3:	c9                   	leaveq 
  41e5f4:	c3                   	retq   

000000000041e5f5 <createsearcherstable>:
  41e5f5:	55                   	push   %rbp
  41e5f6:	48 89 e5             	mov    %rsp,%rbp
  41e5f9:	48 83 ec 20          	sub    $0x20,%rsp
  41e5fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41e601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e605:	ba 00 00 00 00       	mov    $0x0,%edx
  41e60a:	be 04 00 00 00       	mov    $0x4,%esi
  41e60f:	48 89 c7             	mov    %rax,%rdi
  41e612:	e8 01 52 fe ff       	callq  403818 <lua_createtable>
  41e617:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41e61e:	eb 50                	jmp    41e670 <createsearcherstable+0x7b>
  41e620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e624:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e629:	48 89 c7             	mov    %rax,%rdi
  41e62c:	e8 de 3c fe ff       	callq  40230f <lua_pushvalue>
  41e631:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e634:	48 98                	cltq   
  41e636:	48 8b 0c c5 80 06 44 	mov    0x440680(,%rax,8),%rcx
  41e63d:	00 
  41e63e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e642:	ba 01 00 00 00       	mov    $0x1,%edx
  41e647:	48 89 ce             	mov    %rcx,%rsi
  41e64a:	48 89 c7             	mov    %rax,%rdi
  41e64d:	e8 99 49 fe ff       	callq  402feb <lua_pushcclosure>
  41e652:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e655:	83 c0 01             	add    $0x1,%eax
  41e658:	48 63 d0             	movslq %eax,%rdx
  41e65b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e65f:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e664:	48 89 c7             	mov    %rax,%rdi
  41e667:	e8 ae 5a fe ff       	callq  40411a <lua_rawseti>
  41e66c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  41e670:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e673:	48 98                	cltq   
  41e675:	48 8b 04 c5 80 06 44 	mov    0x440680(,%rax,8),%rax
  41e67c:	00 
  41e67d:	48 85 c0             	test   %rax,%rax
  41e680:	75 9e                	jne    41e620 <createsearcherstable+0x2b>
  41e682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e686:	ba 09 04 44 00       	mov    $0x440409,%edx
  41e68b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e690:	48 89 c7             	mov    %rax,%rdi
  41e693:	e8 3a 57 fe ff       	callq  403dd2 <lua_setfield>
  41e698:	90                   	nop
  41e699:	c9                   	leaveq 
  41e69a:	c3                   	retq   

000000000041e69b <createclibstable>:
  41e69b:	55                   	push   %rbp
  41e69c:	48 89 e5             	mov    %rsp,%rbp
  41e69f:	48 83 ec 10          	sub    $0x10,%rsp
  41e6a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e6a7:	ba c0 02 44 00       	mov    $0x4402c0,%edx
  41e6ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e6b0:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e6b5:	48 89 c7             	mov    %rax,%rdi
  41e6b8:	e8 4b 95 fe ff       	callq  407c08 <luaL_getsubtable>
  41e6bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e6c1:	ba 01 00 00 00       	mov    $0x1,%edx
  41e6c6:	be 00 00 00 00       	mov    $0x0,%esi
  41e6cb:	48 89 c7             	mov    %rax,%rdi
  41e6ce:	e8 45 51 fe ff       	callq  403818 <lua_createtable>
  41e6d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e6d7:	ba 00 00 00 00       	mov    $0x0,%edx
  41e6dc:	be 67 d7 41 00       	mov    $0x41d767,%esi
  41e6e1:	48 89 c7             	mov    %rax,%rdi
  41e6e4:	e8 02 49 fe ff       	callq  402feb <lua_pushcclosure>
  41e6e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e6ed:	ba 60 05 44 00       	mov    $0x440560,%edx
  41e6f2:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e6f7:	48 89 c7             	mov    %rax,%rdi
  41e6fa:	e8 d3 56 fe ff       	callq  403dd2 <lua_setfield>
  41e6ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e703:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e708:	48 89 c7             	mov    %rax,%rdi
  41e70b:	e8 c8 5a fe ff       	callq  4041d8 <lua_setmetatable>
  41e710:	90                   	nop
  41e711:	c9                   	leaveq 
  41e712:	c3                   	retq   

000000000041e713 <luaopen_package>:
  41e713:	55                   	push   %rbp
  41e714:	48 89 e5             	mov    %rsp,%rbp
  41e717:	48 83 ec 10          	sub    $0x10,%rsp
  41e71b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e71f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e723:	48 89 c7             	mov    %rax,%rdi
  41e726:	e8 70 ff ff ff       	callq  41e69b <createclibstable>
  41e72b:	f2 0f 10 05 75 1f 02 	movsd  0x21f75(%rip),%xmm0        # 4406a8 <searchers.3494+0x28>
  41e732:	00 
  41e733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e737:	be 88 00 00 00       	mov    $0x88,%esi
  41e73c:	48 89 c7             	mov    %rax,%rdi
  41e73f:	e8 8d 9a fe ff       	callq  4081d1 <luaL_checkversion_>
  41e744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e748:	ba 07 00 00 00       	mov    $0x7,%edx
  41e74d:	be 00 00 00 00       	mov    $0x0,%esi
  41e752:	48 89 c7             	mov    %rax,%rdi
  41e755:	e8 be 50 fe ff       	callq  403818 <lua_createtable>
  41e75a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e75e:	ba 00 00 00 00       	mov    $0x0,%edx
  41e763:	be a0 04 44 00       	mov    $0x4404a0,%esi
  41e768:	48 89 c7             	mov    %rax,%rdi
  41e76b:	e8 ba 93 fe ff       	callq  407b2a <luaL_setfuncs>
  41e770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e774:	48 89 c7             	mov    %rax,%rdi
  41e777:	e8 79 fe ff ff       	callq  41e5f5 <createsearcherstable>
  41e77c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e780:	b9 68 05 44 00       	mov    $0x440568,%ecx
  41e785:	ba ff 05 44 00       	mov    $0x4405ff,%edx
  41e78a:	be 9e 03 44 00       	mov    $0x44039e,%esi
  41e78f:	48 89 c7             	mov    %rax,%rdi
  41e792:	e8 54 ec ff ff       	callq  41d3eb <setpath>
  41e797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e79b:	b9 08 06 44 00       	mov    $0x440608,%ecx
  41e7a0:	ba 4d 06 44 00       	mov    $0x44064d,%edx
  41e7a5:	be b0 03 44 00       	mov    $0x4403b0,%esi
  41e7aa:	48 89 c7             	mov    %rax,%rdi
  41e7ad:	e8 39 ec ff ff       	callq  41d3eb <setpath>
  41e7b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e7b6:	be 57 06 44 00       	mov    $0x440657,%esi
  41e7bb:	48 89 c7             	mov    %rax,%rdi
  41e7be:	e8 4b 46 fe ff       	callq  402e0e <lua_pushstring>
  41e7c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e7c7:	ba 62 06 44 00       	mov    $0x440662,%edx
  41e7cc:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e7d1:	48 89 c7             	mov    %rax,%rdi
  41e7d4:	e8 f9 55 fe ff       	callq  403dd2 <lua_setfield>
  41e7d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e7dd:	ba 58 04 44 00       	mov    $0x440458,%edx
  41e7e2:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e7e7:	48 89 c7             	mov    %rax,%rdi
  41e7ea:	e8 19 94 fe ff       	callq  407c08 <luaL_getsubtable>
  41e7ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e7f3:	ba 7b 04 44 00       	mov    $0x44047b,%edx
  41e7f8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e7fd:	48 89 c7             	mov    %rax,%rdi
  41e800:	e8 cd 55 fe ff       	callq  403dd2 <lua_setfield>
  41e805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e809:	ba d2 03 44 00       	mov    $0x4403d2,%edx
  41e80e:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e813:	48 89 c7             	mov    %rax,%rdi
  41e816:	e8 ed 93 fe ff       	callq  407c08 <luaL_getsubtable>
  41e81b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e81f:	ba 73 04 44 00       	mov    $0x440473,%edx
  41e824:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e829:	48 89 c7             	mov    %rax,%rdi
  41e82c:	e8 a1 55 fe ff       	callq  403dd2 <lua_setfield>
  41e831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e835:	ba 02 00 00 00       	mov    $0x2,%edx
  41e83a:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  41e83f:	48 89 c7             	mov    %rax,%rdi
  41e842:	e8 18 4f fe ff       	callq  40375f <lua_rawgeti>
  41e847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e84b:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e850:	48 89 c7             	mov    %rax,%rdi
  41e853:	e8 b7 3a fe ff       	callq  40230f <lua_pushvalue>
  41e858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e85c:	ba 01 00 00 00       	mov    $0x1,%edx
  41e861:	be 40 05 44 00       	mov    $0x440540,%esi
  41e866:	48 89 c7             	mov    %rax,%rdi
  41e869:	e8 bc 92 fe ff       	callq  407b2a <luaL_setfuncs>
  41e86e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e872:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  41e877:	48 89 c7             	mov    %rax,%rdi
  41e87a:	e8 05 37 fe ff       	callq  401f84 <lua_settop>
  41e87f:	b8 01 00 00 00       	mov    $0x1,%eax
  41e884:	c9                   	leaveq 
  41e885:	c3                   	retq   

000000000041e886 <luaO_ceillog2>:
  41e886:	55                   	push   %rbp
  41e887:	48 89 e5             	mov    %rsp,%rbp
  41e88a:	89 7d ec             	mov    %edi,-0x14(%rbp)
  41e88d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41e894:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  41e898:	eb 08                	jmp    41e8a2 <luaO_ceillog2+0x1c>
  41e89a:	83 45 fc 08          	addl   $0x8,-0x4(%rbp)
  41e89e:	c1 6d ec 08          	shrl   $0x8,-0x14(%rbp)
  41e8a2:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  41e8a9:	77 ef                	ja     41e89a <luaO_ceillog2+0x14>
  41e8ab:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41e8ae:	0f b6 80 e0 0a 44 00 	movzbl 0x440ae0(%rax),%eax
  41e8b5:	0f b6 d0             	movzbl %al,%edx
  41e8b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e8bb:	01 d0                	add    %edx,%eax
  41e8bd:	5d                   	pop    %rbp
  41e8be:	c3                   	retq   

000000000041e8bf <intarith>:
  41e8bf:	55                   	push   %rbp
  41e8c0:	48 89 e5             	mov    %rsp,%rbp
  41e8c3:	48 83 ec 20          	sub    $0x20,%rsp
  41e8c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e8cb:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41e8ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41e8d2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41e8d6:	83 7d f4 0d          	cmpl   $0xd,-0xc(%rbp)
  41e8da:	0f 87 df 00 00 00    	ja     41e9bf <intarith+0x100>
  41e8e0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41e8e3:	48 8b 04 c5 c0 06 44 	mov    0x4406c0(,%rax,8),%rax
  41e8ea:	00 
  41e8eb:	ff e0                	jmpq   *%rax
  41e8ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e8f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e8f5:	48 01 d0             	add    %rdx,%rax
  41e8f8:	e9 c7 00 00 00       	jmpq   41e9c4 <intarith+0x105>
  41e8fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e901:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e905:	48 29 c2             	sub    %rax,%rdx
  41e908:	48 89 d0             	mov    %rdx,%rax
  41e90b:	e9 b4 00 00 00       	jmpq   41e9c4 <intarith+0x105>
  41e910:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e914:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e918:	48 0f af c2          	imul   %rdx,%rax
  41e91c:	e9 a3 00 00 00       	jmpq   41e9c4 <intarith+0x105>
  41e921:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41e925:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e92d:	48 89 ce             	mov    %rcx,%rsi
  41e930:	48 89 c7             	mov    %rax,%rdi
  41e933:	e8 15 5c 01 00       	callq  43454d <luaV_mod>
  41e938:	e9 87 00 00 00       	jmpq   41e9c4 <intarith+0x105>
  41e93d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41e941:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e949:	48 89 ce             	mov    %rcx,%rsi
  41e94c:	48 89 c7             	mov    %rax,%rdi
  41e94f:	e8 70 5b 01 00       	callq  4344c4 <luaV_idiv>
  41e954:	eb 6e                	jmp    41e9c4 <intarith+0x105>
  41e956:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e95a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e95e:	48 21 d0             	and    %rdx,%rax
  41e961:	eb 61                	jmp    41e9c4 <intarith+0x105>
  41e963:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e967:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e96b:	48 09 d0             	or     %rdx,%rax
  41e96e:	eb 54                	jmp    41e9c4 <intarith+0x105>
  41e970:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e978:	48 31 d0             	xor    %rdx,%rax
  41e97b:	eb 47                	jmp    41e9c4 <intarith+0x105>
  41e97d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41e981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e985:	48 89 d6             	mov    %rdx,%rsi
  41e988:	48 89 c7             	mov    %rax,%rdi
  41e98b:	e8 ca 5c 01 00       	callq  43465a <luaV_shiftl>
  41e990:	eb 32                	jmp    41e9c4 <intarith+0x105>
  41e992:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e996:	48 f7 d8             	neg    %rax
  41e999:	48 89 c2             	mov    %rax,%rdx
  41e99c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e9a0:	48 89 d6             	mov    %rdx,%rsi
  41e9a3:	48 89 c7             	mov    %rax,%rdi
  41e9a6:	e8 af 5c 01 00       	callq  43465a <luaV_shiftl>
  41e9ab:	eb 17                	jmp    41e9c4 <intarith+0x105>
  41e9ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e9b1:	48 f7 d8             	neg    %rax
  41e9b4:	eb 0e                	jmp    41e9c4 <intarith+0x105>
  41e9b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e9ba:	48 f7 d0             	not    %rax
  41e9bd:	eb 05                	jmp    41e9c4 <intarith+0x105>
  41e9bf:	b8 00 00 00 00       	mov    $0x0,%eax
  41e9c4:	c9                   	leaveq 
  41e9c5:	c3                   	retq   

000000000041e9c6 <numarith>:
  41e9c6:	55                   	push   %rbp
  41e9c7:	48 89 e5             	mov    %rsp,%rbp
  41e9ca:	48 83 ec 20          	sub    $0x20,%rsp
  41e9ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e9d2:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41e9d5:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  41e9da:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  41e9df:	83 7d f4 0c          	cmpl   $0xc,-0xc(%rbp)
  41e9e3:	0f 87 bd 00 00 00    	ja     41eaa6 <numarith+0xe0>
  41e9e9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41e9ec:	48 8b 04 c5 30 07 44 	mov    0x440730(,%rax,8),%rax
  41e9f3:	00 
  41e9f4:	ff e0                	jmpq   *%rax
  41e9f6:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41e9fb:	f2 0f 58 45 e0       	addsd  -0x20(%rbp),%xmm0
  41ea00:	e9 a5 00 00 00       	jmpq   41eaaa <numarith+0xe4>
  41ea05:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea0a:	f2 0f 5c 45 e0       	subsd  -0x20(%rbp),%xmm0
  41ea0f:	e9 96 00 00 00       	jmpq   41eaaa <numarith+0xe4>
  41ea14:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea19:	f2 0f 59 45 e0       	mulsd  -0x20(%rbp),%xmm0
  41ea1e:	e9 87 00 00 00       	jmpq   41eaaa <numarith+0xe4>
  41ea23:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea28:	f2 0f 5e 45 e0       	divsd  -0x20(%rbp),%xmm0
  41ea2d:	eb 7b                	jmp    41eaaa <numarith+0xe4>
  41ea2f:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41ea34:	66 0f 2e 05 a4 21 02 	ucomisd 0x221a4(%rip),%xmm0        # 440be0 <log_2.5127+0x100>
  41ea3b:	00 
  41ea3c:	7a 1b                	jp     41ea59 <numarith+0x93>
  41ea3e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  41ea43:	66 0f 2e 05 95 21 02 	ucomisd 0x22195(%rip),%xmm0        # 440be0 <log_2.5127+0x100>
  41ea4a:	00 
  41ea4b:	75 0c                	jne    41ea59 <numarith+0x93>
  41ea4d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea52:	f2 0f 59 45 e8       	mulsd  -0x18(%rbp),%xmm0
  41ea57:	eb 51                	jmp    41eaaa <numarith+0xe4>
  41ea59:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
  41ea5e:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea63:	e8 38 2e fe ff       	callq  4018a0 <pow@plt>
  41ea68:	eb 40                	jmp    41eaaa <numarith+0xe4>
  41ea6a:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea6f:	f2 0f 5e 45 e0       	divsd  -0x20(%rbp),%xmm0
  41ea74:	e8 07 30 fe ff       	callq  401a80 <floor@plt>
  41ea79:	eb 2f                	jmp    41eaaa <numarith+0xe4>
  41ea7b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea80:	f3 0f 7e 0d 68 21 02 	movq   0x22168(%rip),%xmm1        # 440bf0 <log_2.5127+0x110>
  41ea87:	00 
  41ea88:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
  41ea8c:	eb 1c                	jmp    41eaaa <numarith+0xe4>
  41ea8e:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
  41ea93:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ea98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ea9c:	48 89 c7             	mov    %rax,%rdi
  41ea9f:	e8 28 5b 01 00       	callq  4345cc <luaV_modf>
  41eaa4:	eb 04                	jmp    41eaaa <numarith+0xe4>
  41eaa6:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41eaaa:	c9                   	leaveq 
  41eaab:	c3                   	retq   

000000000041eaac <luaO_rawarith>:
  41eaac:	55                   	push   %rbp
  41eaad:	48 89 e5             	mov    %rsp,%rbp
  41eab0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  41eab4:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  41eab8:	89 75 a4             	mov    %esi,-0x5c(%rbp)
  41eabb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  41eabf:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41eac3:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  41eac7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  41eaca:	83 e8 04             	sub    $0x4,%eax
  41eacd:	83 f8 09             	cmp    $0x9,%eax
  41ead0:	0f 87 8c 01 00 00    	ja     41ec62 <luaO_rawarith+0x1b6>
  41ead6:	89 c0                	mov    %eax,%eax
  41ead8:	48 8b 04 c5 98 07 44 	mov    0x440798(,%rax,8),%rax
  41eadf:	00 
  41eae0:	ff e0                	jmpq   *%rax
  41eae2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41eae6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41eaea:	3c 03                	cmp    $0x3,%al
  41eaec:	0f 94 c0             	sete   %al
  41eaef:	0f b6 c0             	movzbl %al,%eax
  41eaf2:	48 85 c0             	test   %rax,%rax
  41eaf5:	74 0d                	je     41eb04 <luaO_rawarith+0x58>
  41eaf7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41eafb:	48 8b 00             	mov    (%rax),%rax
  41eafe:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41eb02:	eb 1c                	jmp    41eb20 <luaO_rawarith+0x74>
  41eb04:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
  41eb08:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41eb0c:	ba 00 00 00 00       	mov    $0x0,%edx
  41eb11:	48 89 ce             	mov    %rcx,%rsi
  41eb14:	48 89 c7             	mov    %rax,%rdi
  41eb17:	e8 48 3e 01 00       	callq  432964 <luaV_tointegerns>
  41eb1c:	85 c0                	test   %eax,%eax
  41eb1e:	74 79                	je     41eb99 <luaO_rawarith+0xed>
  41eb20:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41eb24:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41eb28:	3c 03                	cmp    $0x3,%al
  41eb2a:	0f 94 c0             	sete   %al
  41eb2d:	0f b6 c0             	movzbl %al,%eax
  41eb30:	48 85 c0             	test   %rax,%rax
  41eb33:	74 0d                	je     41eb42 <luaO_rawarith+0x96>
  41eb35:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41eb39:	48 8b 00             	mov    (%rax),%rax
  41eb3c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41eb40:	eb 1c                	jmp    41eb5e <luaO_rawarith+0xb2>
  41eb42:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41eb46:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41eb4a:	ba 00 00 00 00       	mov    $0x0,%edx
  41eb4f:	48 89 ce             	mov    %rcx,%rsi
  41eb52:	48 89 c7             	mov    %rax,%rdi
  41eb55:	e8 0a 3e 01 00       	callq  432964 <luaV_tointegerns>
  41eb5a:	85 c0                	test   %eax,%eax
  41eb5c:	74 3b                	je     41eb99 <luaO_rawarith+0xed>
  41eb5e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41eb62:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41eb66:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41eb6a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  41eb6e:	8b 75 a4             	mov    -0x5c(%rbp),%esi
  41eb71:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41eb75:	48 89 c7             	mov    %rax,%rdi
  41eb78:	e8 42 fd ff ff       	callq  41e8bf <intarith>
  41eb7d:	48 89 c2             	mov    %rax,%rdx
  41eb80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41eb84:	48 89 10             	mov    %rdx,(%rax)
  41eb87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41eb8b:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  41eb8f:	b8 01 00 00 00       	mov    $0x1,%eax
  41eb94:	e9 d9 01 00 00       	jmpq   41ed72 <luaO_rawarith+0x2c6>
  41eb99:	b8 00 00 00 00       	mov    $0x0,%eax
  41eb9e:	e9 cf 01 00 00       	jmpq   41ed72 <luaO_rawarith+0x2c6>
  41eba3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41eba7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ebab:	3c 13                	cmp    $0x13,%al
  41ebad:	75 0f                	jne    41ebbe <luaO_rawarith+0x112>
  41ebaf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ebb3:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41ebb7:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  41ebbc:	eb 21                	jmp    41ebdf <luaO_rawarith+0x133>
  41ebbe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ebc2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ebc6:	3c 03                	cmp    $0x3,%al
  41ebc8:	0f 85 8a 00 00 00    	jne    41ec58 <luaO_rawarith+0x1ac>
  41ebce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ebd2:	48 8b 00             	mov    (%rax),%rax
  41ebd5:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  41ebda:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  41ebdf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ebe3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ebe7:	3c 13                	cmp    $0x13,%al
  41ebe9:	75 0f                	jne    41ebfa <luaO_rawarith+0x14e>
  41ebeb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ebef:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41ebf3:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  41ebf8:	eb 1d                	jmp    41ec17 <luaO_rawarith+0x16b>
  41ebfa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ebfe:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ec02:	3c 03                	cmp    $0x3,%al
  41ec04:	75 52                	jne    41ec58 <luaO_rawarith+0x1ac>
  41ec06:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ec0a:	48 8b 00             	mov    (%rax),%rax
  41ec0d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  41ec12:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  41ec17:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41ec1b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41ec1f:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
  41ec24:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  41ec29:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  41ec2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41ec30:	89 d6                	mov    %edx,%esi
  41ec32:	48 89 c7             	mov    %rax,%rdi
  41ec35:	e8 8c fd ff ff       	callq  41e9c6 <numarith>
  41ec3a:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  41ec3f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ec43:	48 89 10             	mov    %rdx,(%rax)
  41ec46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ec4a:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  41ec4e:	b8 01 00 00 00       	mov    $0x1,%eax
  41ec53:	e9 1a 01 00 00       	jmpq   41ed72 <luaO_rawarith+0x2c6>
  41ec58:	b8 00 00 00 00       	mov    $0x0,%eax
  41ec5d:	e9 10 01 00 00       	jmpq   41ed72 <luaO_rawarith+0x2c6>
  41ec62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ec66:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ec6a:	3c 03                	cmp    $0x3,%al
  41ec6c:	75 4d                	jne    41ecbb <luaO_rawarith+0x20f>
  41ec6e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ec72:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ec76:	3c 03                	cmp    $0x3,%al
  41ec78:	75 41                	jne    41ecbb <luaO_rawarith+0x20f>
  41ec7a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41ec7e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41ec82:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ec86:	48 8b 08             	mov    (%rax),%rcx
  41ec89:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ec8d:	48 8b 10             	mov    (%rax),%rdx
  41ec90:	8b 75 a4             	mov    -0x5c(%rbp),%esi
  41ec93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41ec97:	48 89 c7             	mov    %rax,%rdi
  41ec9a:	e8 20 fc ff ff       	callq  41e8bf <intarith>
  41ec9f:	48 89 c2             	mov    %rax,%rdx
  41eca2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41eca6:	48 89 10             	mov    %rdx,(%rax)
  41eca9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41ecad:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  41ecb1:	b8 01 00 00 00       	mov    $0x1,%eax
  41ecb6:	e9 b7 00 00 00       	jmpq   41ed72 <luaO_rawarith+0x2c6>
  41ecbb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ecbf:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ecc3:	3c 13                	cmp    $0x13,%al
  41ecc5:	75 0f                	jne    41ecd6 <luaO_rawarith+0x22a>
  41ecc7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41eccb:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41eccf:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  41ecd4:	eb 21                	jmp    41ecf7 <luaO_rawarith+0x24b>
  41ecd6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ecda:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ecde:	3c 03                	cmp    $0x3,%al
  41ece0:	0f 85 87 00 00 00    	jne    41ed6d <luaO_rawarith+0x2c1>
  41ece6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41ecea:	48 8b 00             	mov    (%rax),%rax
  41eced:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  41ecf2:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  41ecf7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ecfb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ecff:	3c 13                	cmp    $0x13,%al
  41ed01:	75 0f                	jne    41ed12 <luaO_rawarith+0x266>
  41ed03:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ed07:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41ed0b:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  41ed10:	eb 1d                	jmp    41ed2f <luaO_rawarith+0x283>
  41ed12:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ed16:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41ed1a:	3c 03                	cmp    $0x3,%al
  41ed1c:	75 4f                	jne    41ed6d <luaO_rawarith+0x2c1>
  41ed1e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ed22:	48 8b 00             	mov    (%rax),%rax
  41ed25:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  41ed2a:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  41ed2f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41ed33:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41ed37:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
  41ed3c:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  41ed41:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  41ed44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41ed48:	89 d6                	mov    %edx,%esi
  41ed4a:	48 89 c7             	mov    %rax,%rdi
  41ed4d:	e8 74 fc ff ff       	callq  41e9c6 <numarith>
  41ed52:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  41ed57:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41ed5b:	48 89 10             	mov    %rdx,(%rax)
  41ed5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41ed62:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  41ed66:	b8 01 00 00 00       	mov    $0x1,%eax
  41ed6b:	eb 05                	jmp    41ed72 <luaO_rawarith+0x2c6>
  41ed6d:	b8 00 00 00 00       	mov    $0x0,%eax
  41ed72:	c9                   	leaveq 
  41ed73:	c3                   	retq   

000000000041ed74 <luaO_arith>:
  41ed74:	55                   	push   %rbp
  41ed75:	48 89 e5             	mov    %rsp,%rbp
  41ed78:	48 83 ec 30          	sub    $0x30,%rsp
  41ed7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41ed80:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41ed83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41ed87:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41ed8b:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  41ed8f:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41ed93:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41ed97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41ed9b:	8b 75 f4             	mov    -0xc(%rbp),%esi
  41ed9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eda2:	49 89 f8             	mov    %rdi,%r8
  41eda5:	48 89 c7             	mov    %rax,%rdi
  41eda8:	e8 ff fc ff ff       	callq  41eaac <luaO_rawarith>
  41edad:	85 c0                	test   %eax,%eax
  41edaf:	75 23                	jne    41edd4 <luaO_arith+0x60>
  41edb1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41edb4:	83 c0 06             	add    $0x6,%eax
  41edb7:	89 c7                	mov    %eax,%edi
  41edb9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41edbd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41edc1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41edc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41edc9:	41 89 f8             	mov    %edi,%r8d
  41edcc:	48 89 c7             	mov    %rax,%rdi
  41edcf:	e8 39 05 01 00       	callq  42f30d <luaT_trybinTM>
  41edd4:	90                   	nop
  41edd5:	c9                   	leaveq 
  41edd6:	c3                   	retq   

000000000041edd7 <luaO_hexavalue>:
  41edd7:	55                   	push   %rbp
  41edd8:	48 89 e5             	mov    %rsp,%rbp
  41eddb:	89 7d fc             	mov    %edi,-0x4(%rbp)
  41edde:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41ede1:	83 c0 01             	add    $0x1,%eax
  41ede4:	48 98                	cltq   
  41ede6:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41eded:	0f b6 c0             	movzbl %al,%eax
  41edf0:	83 e0 02             	and    $0x2,%eax
  41edf3:	85 c0                	test   %eax,%eax
  41edf5:	74 08                	je     41edff <luaO_hexavalue+0x28>
  41edf7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41edfa:	83 e8 30             	sub    $0x30,%eax
  41edfd:	eb 09                	jmp    41ee08 <luaO_hexavalue+0x31>
  41edff:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41ee02:	83 c8 20             	or     $0x20,%eax
  41ee05:	83 e8 57             	sub    $0x57,%eax
  41ee08:	5d                   	pop    %rbp
  41ee09:	c3                   	retq   

000000000041ee0a <isneg>:
  41ee0a:	55                   	push   %rbp
  41ee0b:	48 89 e5             	mov    %rsp,%rbp
  41ee0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41ee12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee16:	48 8b 00             	mov    (%rax),%rax
  41ee19:	0f b6 00             	movzbl (%rax),%eax
  41ee1c:	3c 2d                	cmp    $0x2d,%al
  41ee1e:	75 19                	jne    41ee39 <isneg+0x2f>
  41ee20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee24:	48 8b 00             	mov    (%rax),%rax
  41ee27:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41ee2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee2f:	48 89 10             	mov    %rdx,(%rax)
  41ee32:	b8 01 00 00 00       	mov    $0x1,%eax
  41ee37:	eb 25                	jmp    41ee5e <isneg+0x54>
  41ee39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee3d:	48 8b 00             	mov    (%rax),%rax
  41ee40:	0f b6 00             	movzbl (%rax),%eax
  41ee43:	3c 2b                	cmp    $0x2b,%al
  41ee45:	75 12                	jne    41ee59 <isneg+0x4f>
  41ee47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee4b:	48 8b 00             	mov    (%rax),%rax
  41ee4e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41ee52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ee56:	48 89 10             	mov    %rdx,(%rax)
  41ee59:	b8 00 00 00 00       	mov    $0x0,%eax
  41ee5e:	5d                   	pop    %rbp
  41ee5f:	c3                   	retq   

000000000041ee60 <l_str2dloc>:
  41ee60:	55                   	push   %rbp
  41ee61:	48 89 e5             	mov    %rsp,%rbp
  41ee64:	48 83 ec 30          	sub    $0x30,%rsp
  41ee68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ee6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41ee70:	89 55 dc             	mov    %edx,-0x24(%rbp)
  41ee73:	83 7d dc 78          	cmpl   $0x78,-0x24(%rbp)
  41ee77:	75 1a                	jne    41ee93 <l_str2dloc+0x33>
  41ee79:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  41ee7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ee81:	48 89 d6             	mov    %rdx,%rsi
  41ee84:	48 89 c7             	mov    %rax,%rdi
  41ee87:	e8 94 29 fe ff       	callq  401820 <strtod@plt>
  41ee8c:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  41ee91:	eb 18                	jmp    41eeab <l_str2dloc+0x4b>
  41ee93:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  41ee97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ee9b:	48 89 d6             	mov    %rdx,%rsi
  41ee9e:	48 89 c7             	mov    %rax,%rdi
  41eea1:	e8 7a 29 fe ff       	callq  401820 <strtod@plt>
  41eea6:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  41eeab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41eeaf:	48 89 10             	mov    %rdx,(%rax)
  41eeb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eeb6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  41eeba:	75 13                	jne    41eecf <l_str2dloc+0x6f>
  41eebc:	b8 00 00 00 00       	mov    $0x0,%eax
  41eec1:	eb 42                	jmp    41ef05 <l_str2dloc+0xa5>
  41eec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eec7:	48 83 c0 01          	add    $0x1,%rax
  41eecb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41eecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eed3:	0f b6 00             	movzbl (%rax),%eax
  41eed6:	0f b6 c0             	movzbl %al,%eax
  41eed9:	83 c0 01             	add    $0x1,%eax
  41eedc:	48 98                	cltq   
  41eede:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41eee5:	0f b6 c0             	movzbl %al,%eax
  41eee8:	83 e0 08             	and    $0x8,%eax
  41eeeb:	85 c0                	test   %eax,%eax
  41eeed:	75 d4                	jne    41eec3 <l_str2dloc+0x63>
  41eeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eef3:	0f b6 00             	movzbl (%rax),%eax
  41eef6:	84 c0                	test   %al,%al
  41eef8:	75 06                	jne    41ef00 <l_str2dloc+0xa0>
  41eefa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41eefe:	eb 05                	jmp    41ef05 <l_str2dloc+0xa5>
  41ef00:	b8 00 00 00 00       	mov    $0x0,%eax
  41ef05:	c9                   	leaveq 
  41ef06:	c3                   	retq   

000000000041ef07 <l_str2d>:
  41ef07:	55                   	push   %rbp
  41ef08:	48 89 e5             	mov    %rsp,%rbp
  41ef0b:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
  41ef12:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  41ef19:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
  41ef20:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  41ef27:	be e8 07 44 00       	mov    $0x4407e8,%esi
  41ef2c:	48 89 c7             	mov    %rax,%rdi
  41ef2f:	e8 5c 2b fe ff       	callq  401a90 <strpbrk@plt>
  41ef34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41ef38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41ef3d:	74 0f                	je     41ef4e <l_str2d+0x47>
  41ef3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ef43:	0f b6 00             	movzbl (%rax),%eax
  41ef46:	83 c8 20             	or     $0x20,%eax
  41ef49:	0f b6 c0             	movzbl %al,%eax
  41ef4c:	eb 05                	jmp    41ef53 <l_str2d+0x4c>
  41ef4e:	b8 00 00 00 00       	mov    $0x0,%eax
  41ef53:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41ef56:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%rbp)
  41ef5a:	75 0a                	jne    41ef66 <l_str2d+0x5f>
  41ef5c:	b8 00 00 00 00       	mov    $0x0,%eax
  41ef61:	e9 ee 00 00 00       	jmpq   41f054 <l_str2d+0x14d>
  41ef66:	8b 55 ec             	mov    -0x14(%rbp),%edx
  41ef69:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41ef70:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  41ef77:	48 89 ce             	mov    %rcx,%rsi
  41ef7a:	48 89 c7             	mov    %rax,%rdi
  41ef7d:	e8 de fe ff ff       	callq  41ee60 <l_str2dloc>
  41ef82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ef86:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41ef8b:	0f 85 bf 00 00 00    	jne    41f050 <l_str2d+0x149>
  41ef91:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  41ef98:	be 2e 00 00 00       	mov    $0x2e,%esi
  41ef9d:	48 89 c7             	mov    %rax,%rdi
  41efa0:	e8 9b 27 fe ff       	callq  401740 <strchr@plt>
  41efa5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41efa9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41efae:	74 17                	je     41efc7 <l_str2d+0xc0>
  41efb0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  41efb7:	48 89 c7             	mov    %rax,%rdi
  41efba:	e8 b1 27 fe ff       	callq  401770 <strlen@plt>
  41efbf:	48 3d c8 00 00 00    	cmp    $0xc8,%rax
  41efc5:	76 0a                	jbe    41efd1 <l_str2d+0xca>
  41efc7:	b8 00 00 00 00       	mov    $0x0,%eax
  41efcc:	e9 83 00 00 00       	jmpq   41f054 <l_str2d+0x14d>
  41efd1:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  41efd8:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  41efdf:	48 89 d6             	mov    %rdx,%rsi
  41efe2:	48 89 c7             	mov    %rax,%rdi
  41efe5:	e8 d6 28 fe ff       	callq  4018c0 <strcpy@plt>
  41efea:	e8 21 2b fe ff       	callq  401b10 <localeconv@plt>
  41efef:	48 8b 10             	mov    (%rax),%rdx
  41eff2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41eff6:	48 2b 85 08 ff ff ff 	sub    -0xf8(%rbp),%rax
  41effd:	0f b6 12             	movzbl (%rdx),%edx
  41f000:	88 94 05 10 ff ff ff 	mov    %dl,-0xf0(%rbp,%rax,1)
  41f007:	8b 55 ec             	mov    -0x14(%rbp),%edx
  41f00a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41f011:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  41f018:	48 89 ce             	mov    %rcx,%rsi
  41f01b:	48 89 c7             	mov    %rax,%rdi
  41f01e:	e8 3d fe ff ff       	callq  41ee60 <l_str2dloc>
  41f023:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f027:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41f02c:	74 22                	je     41f050 <l_str2d+0x149>
  41f02e:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  41f035:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41f039:	48 29 c2             	sub    %rax,%rdx
  41f03c:	48 89 d0             	mov    %rdx,%rax
  41f03f:	48 89 c2             	mov    %rax,%rdx
  41f042:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  41f049:	48 01 d0             	add    %rdx,%rax
  41f04c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f054:	c9                   	leaveq 
  41f055:	c3                   	retq   

000000000041f056 <l_str2int>:
  41f056:	55                   	push   %rbp
  41f057:	48 89 e5             	mov    %rsp,%rbp
  41f05a:	53                   	push   %rbx
  41f05b:	48 83 ec 30          	sub    $0x30,%rsp
  41f05f:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  41f063:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  41f067:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  41f06e:	00 
  41f06f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  41f076:	eb 0c                	jmp    41f084 <l_str2int+0x2e>
  41f078:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f07c:	48 83 c0 01          	add    $0x1,%rax
  41f080:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41f084:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f088:	0f b6 00             	movzbl (%rax),%eax
  41f08b:	0f b6 c0             	movzbl %al,%eax
  41f08e:	83 c0 01             	add    $0x1,%eax
  41f091:	48 98                	cltq   
  41f093:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41f09a:	0f b6 c0             	movzbl %al,%eax
  41f09d:	83 e0 08             	and    $0x8,%eax
  41f0a0:	85 c0                	test   %eax,%eax
  41f0a2:	75 d4                	jne    41f078 <l_str2int+0x22>
  41f0a4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  41f0a8:	48 89 c7             	mov    %rax,%rdi
  41f0ab:	e8 5a fd ff ff       	callq  41ee0a <isneg>
  41f0b0:	89 45 e8             	mov    %eax,-0x18(%rbp)
  41f0b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f0b7:	0f b6 00             	movzbl (%rax),%eax
  41f0ba:	3c 30                	cmp    $0x30,%al
  41f0bc:	0f 85 05 01 00 00    	jne    41f1c7 <l_str2int+0x171>
  41f0c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f0c6:	48 83 c0 01          	add    $0x1,%rax
  41f0ca:	0f b6 00             	movzbl (%rax),%eax
  41f0cd:	3c 78                	cmp    $0x78,%al
  41f0cf:	74 13                	je     41f0e4 <l_str2int+0x8e>
  41f0d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f0d5:	48 83 c0 01          	add    $0x1,%rax
  41f0d9:	0f b6 00             	movzbl (%rax),%eax
  41f0dc:	3c 58                	cmp    $0x58,%al
  41f0de:	0f 85 e3 00 00 00    	jne    41f1c7 <l_str2int+0x171>
  41f0e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f0e8:	48 83 c0 02          	add    $0x2,%rax
  41f0ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41f0f0:	eb 38                	jmp    41f12a <l_str2int+0xd4>
  41f0f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f0f6:	48 c1 e0 04          	shl    $0x4,%rax
  41f0fa:	48 89 c3             	mov    %rax,%rbx
  41f0fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f101:	0f b6 00             	movzbl (%rax),%eax
  41f104:	0f be c0             	movsbl %al,%eax
  41f107:	89 c7                	mov    %eax,%edi
  41f109:	e8 c9 fc ff ff       	callq  41edd7 <luaO_hexavalue>
  41f10e:	48 98                	cltq   
  41f110:	48 01 d8             	add    %rbx,%rax
  41f113:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41f117:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  41f11e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f122:	48 83 c0 01          	add    $0x1,%rax
  41f126:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41f12a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f12e:	0f b6 00             	movzbl (%rax),%eax
  41f131:	0f b6 c0             	movzbl %al,%eax
  41f134:	83 c0 01             	add    $0x1,%eax
  41f137:	48 98                	cltq   
  41f139:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41f140:	0f b6 c0             	movzbl %al,%eax
  41f143:	83 e0 10             	and    $0x10,%eax
  41f146:	85 c0                	test   %eax,%eax
  41f148:	75 a8                	jne    41f0f2 <l_str2int+0x9c>
  41f14a:	e9 9c 00 00 00       	jmpq   41f1eb <l_str2int+0x195>
  41f14f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f153:	0f b6 00             	movzbl (%rax),%eax
  41f156:	0f be c0             	movsbl %al,%eax
  41f159:	83 e8 30             	sub    $0x30,%eax
  41f15c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41f15f:	48 b8 cb cc cc cc cc 	movabs $0xccccccccccccccb,%rax
  41f166:	cc cc 0c 
  41f169:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  41f16d:	76 25                	jbe    41f194 <l_str2int+0x13e>
  41f16f:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
  41f176:	cc cc 0c 
  41f179:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  41f17d:	77 0b                	ja     41f18a <l_str2int+0x134>
  41f17f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  41f182:	83 c0 07             	add    $0x7,%eax
  41f185:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  41f188:	7e 0a                	jle    41f194 <l_str2int+0x13e>
  41f18a:	b8 00 00 00 00       	mov    $0x0,%eax
  41f18f:	e9 bb 00 00 00       	jmpq   41f24f <l_str2int+0x1f9>
  41f194:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41f198:	48 89 d0             	mov    %rdx,%rax
  41f19b:	48 c1 e0 02          	shl    $0x2,%rax
  41f19f:	48 01 d0             	add    %rdx,%rax
  41f1a2:	48 01 c0             	add    %rax,%rax
  41f1a5:	48 89 c2             	mov    %rax,%rdx
  41f1a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41f1ab:	48 98                	cltq   
  41f1ad:	48 01 d0             	add    %rdx,%rax
  41f1b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41f1b4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  41f1bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f1bf:	48 83 c0 01          	add    $0x1,%rax
  41f1c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41f1c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f1cb:	0f b6 00             	movzbl (%rax),%eax
  41f1ce:	0f b6 c0             	movzbl %al,%eax
  41f1d1:	83 c0 01             	add    $0x1,%eax
  41f1d4:	48 98                	cltq   
  41f1d6:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41f1dd:	0f b6 c0             	movzbl %al,%eax
  41f1e0:	83 e0 02             	and    $0x2,%eax
  41f1e3:	85 c0                	test   %eax,%eax
  41f1e5:	0f 85 64 ff ff ff    	jne    41f14f <l_str2int+0xf9>
  41f1eb:	eb 0c                	jmp    41f1f9 <l_str2int+0x1a3>
  41f1ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f1f1:	48 83 c0 01          	add    $0x1,%rax
  41f1f5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41f1f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f1fd:	0f b6 00             	movzbl (%rax),%eax
  41f200:	0f b6 c0             	movzbl %al,%eax
  41f203:	83 c0 01             	add    $0x1,%eax
  41f206:	48 98                	cltq   
  41f208:	0f b6 80 40 de 43 00 	movzbl 0x43de40(%rax),%eax
  41f20f:	0f b6 c0             	movzbl %al,%eax
  41f212:	83 e0 08             	and    $0x8,%eax
  41f215:	85 c0                	test   %eax,%eax
  41f217:	75 d4                	jne    41f1ed <l_str2int+0x197>
  41f219:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  41f21d:	75 0b                	jne    41f22a <l_str2int+0x1d4>
  41f21f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f223:	0f b6 00             	movzbl (%rax),%eax
  41f226:	84 c0                	test   %al,%al
  41f228:	74 07                	je     41f231 <l_str2int+0x1db>
  41f22a:	b8 00 00 00 00       	mov    $0x0,%eax
  41f22f:	eb 1e                	jmp    41f24f <l_str2int+0x1f9>
  41f231:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  41f235:	74 09                	je     41f240 <l_str2int+0x1ea>
  41f237:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f23b:	48 f7 d8             	neg    %rax
  41f23e:	eb 04                	jmp    41f244 <l_str2int+0x1ee>
  41f240:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f244:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41f248:	48 89 02             	mov    %rax,(%rdx)
  41f24b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41f24f:	48 83 c4 30          	add    $0x30,%rsp
  41f253:	5b                   	pop    %rbx
  41f254:	5d                   	pop    %rbp
  41f255:	c3                   	retq   

000000000041f256 <luaO_str2num>:
  41f256:	55                   	push   %rbp
  41f257:	48 89 e5             	mov    %rsp,%rbp
  41f25a:	48 83 ec 40          	sub    $0x40,%rsp
  41f25e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41f262:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  41f266:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  41f26a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41f26e:	48 89 d6             	mov    %rdx,%rsi
  41f271:	48 89 c7             	mov    %rax,%rdi
  41f274:	e8 dd fd ff ff       	callq  41f056 <l_str2int>
  41f279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f27d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41f282:	74 1d                	je     41f2a1 <luaO_str2num+0x4b>
  41f284:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41f288:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41f28c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41f290:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f294:	48 89 10             	mov    %rdx,(%rax)
  41f297:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f29b:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  41f29f:	eb 44                	jmp    41f2e5 <luaO_str2num+0x8f>
  41f2a1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  41f2a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41f2a9:	48 89 d6             	mov    %rdx,%rsi
  41f2ac:	48 89 c7             	mov    %rax,%rdi
  41f2af:	e8 53 fc ff ff       	callq  41ef07 <l_str2d>
  41f2b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f2b8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41f2bd:	74 1f                	je     41f2de <luaO_str2num+0x88>
  41f2bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41f2c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41f2c7:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
  41f2cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f2d0:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  41f2d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f2d8:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  41f2dc:	eb 07                	jmp    41f2e5 <luaO_str2num+0x8f>
  41f2de:	b8 00 00 00 00       	mov    $0x0,%eax
  41f2e3:	eb 0c                	jmp    41f2f1 <luaO_str2num+0x9b>
  41f2e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f2e9:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  41f2ed:	48 83 c0 01          	add    $0x1,%rax
  41f2f1:	c9                   	leaveq 
  41f2f2:	c3                   	retq   

000000000041f2f3 <luaO_utf8esc>:
  41f2f3:	55                   	push   %rbp
  41f2f4:	48 89 e5             	mov    %rsp,%rbp
  41f2f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41f2fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41f2ff:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41f306:	48 83 7d e0 7f       	cmpq   $0x7f,-0x20(%rbp)
  41f30b:	77 10                	ja     41f31d <luaO_utf8esc+0x2a>
  41f30d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f311:	48 83 c0 07          	add    $0x7,%rax
  41f315:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41f319:	88 10                	mov    %dl,(%rax)
  41f31b:	eb 6a                	jmp    41f387 <luaO_utf8esc+0x94>
  41f31d:	c7 45 f8 3f 00 00 00 	movl   $0x3f,-0x8(%rbp)
  41f324:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f328:	83 e0 3f             	and    $0x3f,%eax
  41f32b:	83 c8 80             	or     $0xffffff80,%eax
  41f32e:	89 c1                	mov    %eax,%ecx
  41f330:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f333:	8d 50 01             	lea    0x1(%rax),%edx
  41f336:	89 55 fc             	mov    %edx,-0x4(%rbp)
  41f339:	ba 08 00 00 00       	mov    $0x8,%edx
  41f33e:	29 c2                	sub    %eax,%edx
  41f340:	89 d0                	mov    %edx,%eax
  41f342:	48 63 d0             	movslq %eax,%rdx
  41f345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f349:	48 01 d0             	add    %rdx,%rax
  41f34c:	89 ca                	mov    %ecx,%edx
  41f34e:	88 10                	mov    %dl,(%rax)
  41f350:	48 c1 6d e0 06       	shrq   $0x6,-0x20(%rbp)
  41f355:	d1 6d f8             	shrl   -0x8(%rbp)
  41f358:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41f35b:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  41f35f:	77 c3                	ja     41f324 <luaO_utf8esc+0x31>
  41f361:	8b 45 f8             	mov    -0x8(%rbp),%eax
  41f364:	f7 d0                	not    %eax
  41f366:	8d 14 00             	lea    (%rax,%rax,1),%edx
  41f369:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f36d:	89 d1                	mov    %edx,%ecx
  41f36f:	09 c1                	or     %eax,%ecx
  41f371:	b8 08 00 00 00       	mov    $0x8,%eax
  41f376:	2b 45 fc             	sub    -0x4(%rbp),%eax
  41f379:	48 63 d0             	movslq %eax,%rdx
  41f37c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f380:	48 01 d0             	add    %rdx,%rax
  41f383:	89 ca                	mov    %ecx,%edx
  41f385:	88 10                	mov    %dl,(%rax)
  41f387:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f38a:	5d                   	pop    %rbp
  41f38b:	c3                   	retq   

000000000041f38c <tostringbuff>:
  41f38c:	55                   	push   %rbp
  41f38d:	48 89 e5             	mov    %rsp,%rbp
  41f390:	48 83 ec 20          	sub    $0x20,%rsp
  41f394:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41f398:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41f39c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f3a0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41f3a4:	3c 03                	cmp    $0x3,%al
  41f3a6:	75 2a                	jne    41f3d2 <tostringbuff+0x46>
  41f3a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f3ac:	48 8b 10             	mov    (%rax),%rdx
  41f3af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f3b3:	48 89 d1             	mov    %rdx,%rcx
  41f3b6:	ba ee 07 44 00       	mov    $0x4407ee,%edx
  41f3bb:	be 2c 00 00 00       	mov    $0x2c,%esi
  41f3c0:	48 89 c7             	mov    %rax,%rdi
  41f3c3:	b8 00 00 00 00       	mov    $0x0,%eax
  41f3c8:	e8 83 26 fe ff       	callq  401a50 <snprintf@plt>
  41f3cd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41f3d0:	eb 7e                	jmp    41f450 <tostringbuff+0xc4>
  41f3d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f3d6:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41f3da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f3de:	ba f3 07 44 00       	mov    $0x4407f3,%edx
  41f3e3:	be 2c 00 00 00       	mov    $0x2c,%esi
  41f3e8:	48 89 c7             	mov    %rax,%rdi
  41f3eb:	b8 01 00 00 00       	mov    $0x1,%eax
  41f3f0:	e8 5b 26 fe ff       	callq  401a50 <snprintf@plt>
  41f3f5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41f3f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f3fc:	be f9 07 44 00       	mov    $0x4407f9,%esi
  41f401:	48 89 c7             	mov    %rax,%rdi
  41f404:	e8 57 23 fe ff       	callq  401760 <strspn@plt>
  41f409:	48 89 c2             	mov    %rax,%rdx
  41f40c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f410:	48 01 d0             	add    %rdx,%rax
  41f413:	0f b6 00             	movzbl (%rax),%eax
  41f416:	84 c0                	test   %al,%al
  41f418:	75 36                	jne    41f450 <tostringbuff+0xc4>
  41f41a:	e8 f1 26 fe ff       	callq  401b10 <localeconv@plt>
  41f41f:	48 8b 10             	mov    (%rax),%rdx
  41f422:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f425:	8d 48 01             	lea    0x1(%rax),%ecx
  41f428:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  41f42b:	48 63 c8             	movslq %eax,%rcx
  41f42e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f432:	48 01 c1             	add    %rax,%rcx
  41f435:	0f b6 02             	movzbl (%rdx),%eax
  41f438:	88 01                	mov    %al,(%rcx)
  41f43a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f43d:	8d 50 01             	lea    0x1(%rax),%edx
  41f440:	89 55 fc             	mov    %edx,-0x4(%rbp)
  41f443:	48 63 d0             	movslq %eax,%rdx
  41f446:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f44a:	48 01 d0             	add    %rdx,%rax
  41f44d:	c6 00 30             	movb   $0x30,(%rax)
  41f450:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f453:	c9                   	leaveq 
  41f454:	c3                   	retq   

000000000041f455 <luaO_tostring>:
  41f455:	55                   	push   %rbp
  41f456:	48 89 e5             	mov    %rsp,%rbp
  41f459:	48 83 ec 60          	sub    $0x60,%rsp
  41f45d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  41f461:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  41f465:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  41f469:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41f46d:	48 89 d6             	mov    %rdx,%rsi
  41f470:	48 89 c7             	mov    %rax,%rdi
  41f473:	e8 14 ff ff ff       	callq  41f38c <tostringbuff>
  41f478:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41f47b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41f47f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41f483:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41f486:	48 63 d0             	movslq %eax,%rdx
  41f489:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41f48d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41f491:	48 89 ce             	mov    %rcx,%rsi
  41f494:	48 89 c7             	mov    %rax,%rdi
  41f497:	e8 7f 7b 00 00       	callq  42701b <luaS_newlstr>
  41f49c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41f4a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41f4a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f4a8:	48 89 10             	mov    %rdx,(%rax)
  41f4ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f4af:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41f4b3:	83 c8 40             	or     $0x40,%eax
  41f4b6:	89 c2                	mov    %eax,%edx
  41f4b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f4bc:	88 50 08             	mov    %dl,0x8(%rax)
  41f4bf:	90                   	nop
  41f4c0:	c9                   	leaveq 
  41f4c1:	c3                   	retq   

000000000041f4c2 <pushstr>:
  41f4c2:	55                   	push   %rbp
  41f4c3:	48 89 e5             	mov    %rsp,%rbp
  41f4c6:	48 83 ec 40          	sub    $0x40,%rsp
  41f4ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41f4ce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41f4d2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41f4d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41f4da:	48 8b 00             	mov    (%rax),%rax
  41f4dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f4e5:	48 8b 40 10          	mov    0x10(%rax),%rax
  41f4e9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41f4ed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41f4f1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41f4f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f4f9:	48 89 ce             	mov    %rcx,%rsi
  41f4fc:	48 89 c7             	mov    %rax,%rdi
  41f4ff:	e8 17 7b 00 00       	callq  42701b <luaS_newlstr>
  41f504:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41f508:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41f50c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f510:	48 89 10             	mov    %rdx,(%rax)
  41f513:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f517:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  41f51b:	83 c8 40             	or     $0x40,%eax
  41f51e:	89 c2                	mov    %eax,%edx
  41f520:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f524:	88 50 08             	mov    %dl,0x8(%rax)
  41f527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f52b:	48 8b 40 10          	mov    0x10(%rax),%rax
  41f52f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  41f533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f537:	48 89 50 10          	mov    %rdx,0x10(%rax)
  41f53b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41f53f:	8b 40 08             	mov    0x8(%rax),%eax
  41f542:	85 c0                	test   %eax,%eax
  41f544:	75 0d                	jne    41f553 <pushstr+0x91>
  41f546:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41f54a:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  41f551:	eb 11                	jmp    41f564 <pushstr+0xa2>
  41f553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f557:	be 02 00 00 00       	mov    $0x2,%esi
  41f55c:	48 89 c7             	mov    %rax,%rdi
  41f55f:	e8 a5 49 01 00       	callq  433f09 <luaV_concat>
  41f564:	90                   	nop
  41f565:	c9                   	leaveq 
  41f566:	c3                   	retq   

000000000041f567 <clearbuff>:
  41f567:	55                   	push   %rbp
  41f568:	48 89 e5             	mov    %rsp,%rbp
  41f56b:	48 83 ec 10          	sub    $0x10,%rsp
  41f56f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41f573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f577:	8b 40 0c             	mov    0xc(%rax),%eax
  41f57a:	48 63 d0             	movslq %eax,%rdx
  41f57d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f581:	48 8d 48 10          	lea    0x10(%rax),%rcx
  41f585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f589:	48 89 ce             	mov    %rcx,%rsi
  41f58c:	48 89 c7             	mov    %rax,%rdi
  41f58f:	e8 2e ff ff ff       	callq  41f4c2 <pushstr>
  41f594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f598:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  41f59f:	90                   	nop
  41f5a0:	c9                   	leaveq 
  41f5a1:	c3                   	retq   

000000000041f5a2 <getbuff>:
  41f5a2:	55                   	push   %rbp
  41f5a3:	48 89 e5             	mov    %rsp,%rbp
  41f5a6:	48 83 ec 10          	sub    $0x10,%rsp
  41f5aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41f5ae:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41f5b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f5b5:	8b 40 0c             	mov    0xc(%rax),%eax
  41f5b8:	ba c7 00 00 00       	mov    $0xc7,%edx
  41f5bd:	29 c2                	sub    %eax,%edx
  41f5bf:	89 d0                	mov    %edx,%eax
  41f5c1:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  41f5c4:	7e 0c                	jle    41f5d2 <getbuff+0x30>
  41f5c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f5ca:	48 89 c7             	mov    %rax,%rdi
  41f5cd:	e8 95 ff ff ff       	callq  41f567 <clearbuff>
  41f5d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f5d6:	48 8d 50 10          	lea    0x10(%rax),%rdx
  41f5da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f5de:	8b 40 0c             	mov    0xc(%rax),%eax
  41f5e1:	48 98                	cltq   
  41f5e3:	48 01 d0             	add    %rdx,%rax
  41f5e6:	c9                   	leaveq 
  41f5e7:	c3                   	retq   

000000000041f5e8 <addstr2buff>:
  41f5e8:	55                   	push   %rbp
  41f5e9:	48 89 e5             	mov    %rsp,%rbp
  41f5ec:	48 83 ec 30          	sub    $0x30,%rsp
  41f5f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41f5f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41f5f8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41f5fc:	48 81 7d d8 c7 00 00 	cmpq   $0xc7,-0x28(%rbp)
  41f603:	00 
  41f604:	77 45                	ja     41f64b <addstr2buff+0x63>
  41f606:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41f60a:	89 c2                	mov    %eax,%edx
  41f60c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f610:	89 d6                	mov    %edx,%esi
  41f612:	48 89 c7             	mov    %rax,%rdi
  41f615:	e8 88 ff ff ff       	callq  41f5a2 <getbuff>
  41f61a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f61e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41f622:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41f626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f62a:	48 89 ce             	mov    %rcx,%rsi
  41f62d:	48 89 c7             	mov    %rax,%rdi
  41f630:	e8 2b 22 fe ff       	callq  401860 <memcpy@plt>
  41f635:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f639:	8b 40 0c             	mov    0xc(%rax),%eax
  41f63c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41f640:	01 c2                	add    %eax,%edx
  41f642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f646:	89 50 0c             	mov    %edx,0xc(%rax)
  41f649:	eb 23                	jmp    41f66e <addstr2buff+0x86>
  41f64b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f64f:	48 89 c7             	mov    %rax,%rdi
  41f652:	e8 10 ff ff ff       	callq  41f567 <clearbuff>
  41f657:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41f65b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41f65f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f663:	48 89 ce             	mov    %rcx,%rsi
  41f666:	48 89 c7             	mov    %rax,%rdi
  41f669:	e8 54 fe ff ff       	callq  41f4c2 <pushstr>
  41f66e:	90                   	nop
  41f66f:	c9                   	leaveq 
  41f670:	c3                   	retq   

000000000041f671 <addnum2buff>:
  41f671:	55                   	push   %rbp
  41f672:	48 89 e5             	mov    %rsp,%rbp
  41f675:	48 83 ec 20          	sub    $0x20,%rsp
  41f679:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41f67d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41f681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f685:	be 2c 00 00 00       	mov    $0x2c,%esi
  41f68a:	48 89 c7             	mov    %rax,%rdi
  41f68d:	e8 10 ff ff ff       	callq  41f5a2 <getbuff>
  41f692:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f696:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41f69a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f69e:	48 89 d6             	mov    %rdx,%rsi
  41f6a1:	48 89 c7             	mov    %rax,%rdi
  41f6a4:	e8 e3 fc ff ff       	callq  41f38c <tostringbuff>
  41f6a9:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41f6ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f6b0:	8b 50 0c             	mov    0xc(%rax),%edx
  41f6b3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  41f6b6:	01 c2                	add    %eax,%edx
  41f6b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f6bc:	89 50 0c             	mov    %edx,0xc(%rax)
  41f6bf:	90                   	nop
  41f6c0:	c9                   	leaveq 
  41f6c1:	c3                   	retq   

000000000041f6c2 <luaO_pushvfstring>:
  41f6c2:	55                   	push   %rbp
  41f6c3:	48 89 e5             	mov    %rsp,%rbp
  41f6c6:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
  41f6cd:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
  41f6d4:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  41f6db:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
  41f6e2:	c7 85 ec fe ff ff 00 	movl   $0x0,-0x114(%rbp)
  41f6e9:	00 00 00 
  41f6ec:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  41f6f2:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
  41f6f8:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  41f6ff:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  41f706:	e9 df 04 00 00       	jmpq   41fbea <luaO_pushvfstring+0x528>
  41f70b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f70f:	48 2b 85 80 fe ff ff 	sub    -0x180(%rbp),%rax
  41f716:	48 89 c2             	mov    %rax,%rdx
  41f719:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  41f720:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41f727:	48 89 ce             	mov    %rcx,%rsi
  41f72a:	48 89 c7             	mov    %rax,%rdi
  41f72d:	e8 b6 fe ff ff       	callq  41f5e8 <addstr2buff>
  41f732:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41f736:	48 83 c0 01          	add    $0x1,%rax
  41f73a:	0f b6 00             	movzbl (%rax),%eax
  41f73d:	0f be c0             	movsbl %al,%eax
  41f740:	83 e8 25             	sub    $0x25,%eax
  41f743:	83 f8 4e             	cmp    $0x4e,%eax
  41f746:	0f 87 68 04 00 00    	ja     41fbb4 <luaO_pushvfstring+0x4f2>
  41f74c:	89 c0                	mov    %eax,%eax
  41f74e:	48 8b 04 c5 48 08 44 	mov    0x440848(,%rax,8),%rax
  41f755:	00 
  41f756:	ff e0                	jmpq   *%rax
  41f758:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f75f:	8b 00                	mov    (%rax),%eax
  41f761:	83 f8 2f             	cmp    $0x2f,%eax
  41f764:	77 30                	ja     41f796 <luaO_pushvfstring+0xd4>
  41f766:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f76d:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41f771:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f778:	8b 00                	mov    (%rax),%eax
  41f77a:	89 c0                	mov    %eax,%eax
  41f77c:	48 01 d0             	add    %rdx,%rax
  41f77f:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f786:	8b 12                	mov    (%rdx),%edx
  41f788:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41f78b:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f792:	89 0a                	mov    %ecx,(%rdx)
  41f794:	eb 1a                	jmp    41f7b0 <luaO_pushvfstring+0xee>
  41f796:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f79d:	48 8b 40 08          	mov    0x8(%rax),%rax
  41f7a1:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41f7a5:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f7ac:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41f7b0:	48 8b 00             	mov    (%rax),%rax
  41f7b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41f7b7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41f7bc:	75 08                	jne    41f7c6 <luaO_pushvfstring+0x104>
  41f7be:	48 c7 45 f8 05 08 44 	movq   $0x440805,-0x8(%rbp)
  41f7c5:	00 
  41f7c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41f7ca:	48 89 c7             	mov    %rax,%rdi
  41f7cd:	e8 9e 1f fe ff       	callq  401770 <strlen@plt>
  41f7d2:	48 89 c2             	mov    %rax,%rdx
  41f7d5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41f7d9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41f7e0:	48 89 ce             	mov    %rcx,%rsi
  41f7e3:	48 89 c7             	mov    %rax,%rdi
  41f7e6:	e8 fd fd ff ff       	callq  41f5e8 <addstr2buff>
  41f7eb:	e9 eb 03 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41f7f0:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f7f7:	8b 00                	mov    (%rax),%eax
  41f7f9:	83 f8 2f             	cmp    $0x2f,%eax
  41f7fc:	77 30                	ja     41f82e <luaO_pushvfstring+0x16c>
  41f7fe:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f805:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41f809:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f810:	8b 00                	mov    (%rax),%eax
  41f812:	89 c0                	mov    %eax,%eax
  41f814:	48 01 d0             	add    %rdx,%rax
  41f817:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f81e:	8b 12                	mov    (%rdx),%edx
  41f820:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41f823:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f82a:	89 0a                	mov    %ecx,(%rdx)
  41f82c:	eb 1a                	jmp    41f848 <luaO_pushvfstring+0x186>
  41f82e:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f835:	48 8b 40 08          	mov    0x8(%rax),%rax
  41f839:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41f83d:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f844:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41f848:	8b 00                	mov    (%rax),%eax
  41f84a:	88 85 df fe ff ff    	mov    %al,-0x121(%rbp)
  41f850:	48 8d 8d df fe ff ff 	lea    -0x121(%rbp),%rcx
  41f857:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41f85e:	ba 01 00 00 00       	mov    $0x1,%edx
  41f863:	48 89 ce             	mov    %rcx,%rsi
  41f866:	48 89 c7             	mov    %rax,%rdi
  41f869:	e8 7a fd ff ff       	callq  41f5e8 <addstr2buff>
  41f86e:	90                   	nop
  41f86f:	e9 67 03 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41f874:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  41f87b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41f87f:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f886:	8b 00                	mov    (%rax),%eax
  41f888:	83 f8 2f             	cmp    $0x2f,%eax
  41f88b:	77 30                	ja     41f8bd <luaO_pushvfstring+0x1fb>
  41f88d:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f894:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41f898:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f89f:	8b 00                	mov    (%rax),%eax
  41f8a1:	89 c0                	mov    %eax,%eax
  41f8a3:	48 01 d0             	add    %rdx,%rax
  41f8a6:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f8ad:	8b 12                	mov    (%rdx),%edx
  41f8af:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41f8b2:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f8b9:	89 0a                	mov    %ecx,(%rdx)
  41f8bb:	eb 1a                	jmp    41f8d7 <luaO_pushvfstring+0x215>
  41f8bd:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f8c4:	48 8b 40 08          	mov    0x8(%rax),%rax
  41f8c8:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41f8cc:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f8d3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41f8d7:	8b 00                	mov    (%rax),%eax
  41f8d9:	48 63 d0             	movslq %eax,%rdx
  41f8dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f8e0:	48 89 10             	mov    %rdx,(%rax)
  41f8e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41f8e7:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  41f8eb:	48 8d 95 c0 fe ff ff 	lea    -0x140(%rbp),%rdx
  41f8f2:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41f8f9:	48 89 d6             	mov    %rdx,%rsi
  41f8fc:	48 89 c7             	mov    %rax,%rdi
  41f8ff:	e8 6d fd ff ff       	callq  41f671 <addnum2buff>
  41f904:	90                   	nop
  41f905:	e9 d1 02 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41f90a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
  41f911:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41f915:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f91c:	8b 00                	mov    (%rax),%eax
  41f91e:	83 f8 2f             	cmp    $0x2f,%eax
  41f921:	77 30                	ja     41f953 <luaO_pushvfstring+0x291>
  41f923:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f92a:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41f92e:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f935:	8b 00                	mov    (%rax),%eax
  41f937:	89 c0                	mov    %eax,%eax
  41f939:	48 01 d0             	add    %rdx,%rax
  41f93c:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f943:	8b 12                	mov    (%rdx),%edx
  41f945:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41f948:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f94f:	89 0a                	mov    %ecx,(%rdx)
  41f951:	eb 1a                	jmp    41f96d <luaO_pushvfstring+0x2ab>
  41f953:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f95a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41f95e:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41f962:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f969:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41f96d:	48 8b 10             	mov    (%rax),%rdx
  41f970:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f974:	48 89 10             	mov    %rdx,(%rax)
  41f977:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41f97b:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  41f97f:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
  41f986:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41f98d:	48 89 d6             	mov    %rdx,%rsi
  41f990:	48 89 c7             	mov    %rax,%rdi
  41f993:	e8 d9 fc ff ff       	callq  41f671 <addnum2buff>
  41f998:	90                   	nop
  41f999:	e9 3d 02 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41f99e:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
  41f9a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41f9a9:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f9b0:	8b 40 04             	mov    0x4(%rax),%eax
  41f9b3:	3d af 00 00 00       	cmp    $0xaf,%eax
  41f9b8:	77 33                	ja     41f9ed <luaO_pushvfstring+0x32b>
  41f9ba:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f9c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41f9c5:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f9cc:	8b 40 04             	mov    0x4(%rax),%eax
  41f9cf:	89 c0                	mov    %eax,%eax
  41f9d1:	48 01 d0             	add    %rdx,%rax
  41f9d4:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f9db:	8b 52 04             	mov    0x4(%rdx),%edx
  41f9de:	8d 4a 10             	lea    0x10(%rdx),%ecx
  41f9e1:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41f9e8:	89 4a 04             	mov    %ecx,0x4(%rdx)
  41f9eb:	eb 1a                	jmp    41fa07 <luaO_pushvfstring+0x345>
  41f9ed:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41f9f4:	48 8b 40 08          	mov    0x8(%rax),%rax
  41f9f8:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41f9fc:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fa03:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41fa07:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41fa0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fa0f:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  41fa13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fa17:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  41fa1b:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
  41fa22:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fa29:	48 89 d6             	mov    %rdx,%rsi
  41fa2c:	48 89 c7             	mov    %rax,%rdi
  41fa2f:	e8 3d fc ff ff       	callq  41f671 <addnum2buff>
  41fa34:	90                   	nop
  41fa35:	e9 a1 01 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41fa3a:	c7 45 d4 20 00 00 00 	movl   $0x20,-0x2c(%rbp)
  41fa41:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  41fa44:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fa4b:	89 d6                	mov    %edx,%esi
  41fa4d:	48 89 c7             	mov    %rax,%rdi
  41fa50:	e8 4d fb ff ff       	callq  41f5a2 <getbuff>
  41fa55:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41fa59:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fa60:	8b 00                	mov    (%rax),%eax
  41fa62:	83 f8 2f             	cmp    $0x2f,%eax
  41fa65:	77 30                	ja     41fa97 <luaO_pushvfstring+0x3d5>
  41fa67:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fa6e:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41fa72:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fa79:	8b 00                	mov    (%rax),%eax
  41fa7b:	89 c0                	mov    %eax,%eax
  41fa7d:	48 01 d0             	add    %rdx,%rax
  41fa80:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fa87:	8b 12                	mov    (%rdx),%edx
  41fa89:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41fa8c:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fa93:	89 0a                	mov    %ecx,(%rdx)
  41fa95:	eb 1a                	jmp    41fab1 <luaO_pushvfstring+0x3ef>
  41fa97:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fa9e:	48 8b 40 08          	mov    0x8(%rax),%rax
  41faa2:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41faa6:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41faad:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41fab1:	48 8b 00             	mov    (%rax),%rax
  41fab4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41fab8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  41fabb:	48 63 f0             	movslq %eax,%rsi
  41fabe:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41fac2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41fac6:	48 89 d1             	mov    %rdx,%rcx
  41fac9:	ba 0c 08 44 00       	mov    $0x44080c,%edx
  41face:	48 89 c7             	mov    %rax,%rdi
  41fad1:	b8 00 00 00 00       	mov    $0x0,%eax
  41fad6:	e8 75 1f fe ff       	callq  401a50 <snprintf@plt>
  41fadb:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41fade:	8b 95 ec fe ff ff    	mov    -0x114(%rbp),%edx
  41fae4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41fae7:	01 d0                	add    %edx,%eax
  41fae9:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  41faef:	e9 e7 00 00 00       	jmpq   41fbdb <luaO_pushvfstring+0x519>
  41faf4:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fafb:	8b 00                	mov    (%rax),%eax
  41fafd:	83 f8 2f             	cmp    $0x2f,%eax
  41fb00:	77 30                	ja     41fb32 <luaO_pushvfstring+0x470>
  41fb02:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fb09:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41fb0d:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fb14:	8b 00                	mov    (%rax),%eax
  41fb16:	89 c0                	mov    %eax,%eax
  41fb18:	48 01 d0             	add    %rdx,%rax
  41fb1b:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fb22:	8b 12                	mov    (%rdx),%edx
  41fb24:	8d 4a 08             	lea    0x8(%rdx),%ecx
  41fb27:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fb2e:	89 0a                	mov    %ecx,(%rdx)
  41fb30:	eb 1a                	jmp    41fb4c <luaO_pushvfstring+0x48a>
  41fb32:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41fb39:	48 8b 40 08          	mov    0x8(%rax),%rax
  41fb3d:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41fb41:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41fb48:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41fb4c:	48 8b 00             	mov    (%rax),%rax
  41fb4f:	48 89 c2             	mov    %rax,%rdx
  41fb52:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
  41fb59:	48 89 d6             	mov    %rdx,%rsi
  41fb5c:	48 89 c7             	mov    %rax,%rdi
  41fb5f:	e8 8f f7 ff ff       	callq  41f2f3 <luaO_utf8esc>
  41fb64:	89 45 b8             	mov    %eax,-0x48(%rbp)
  41fb67:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41fb6a:	48 63 d0             	movslq %eax,%rdx
  41fb6d:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41fb70:	48 98                	cltq   
  41fb72:	b9 08 00 00 00       	mov    $0x8,%ecx
  41fb77:	48 29 c1             	sub    %rax,%rcx
  41fb7a:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
  41fb81:	48 01 c1             	add    %rax,%rcx
  41fb84:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fb8b:	48 89 ce             	mov    %rcx,%rsi
  41fb8e:	48 89 c7             	mov    %rax,%rdi
  41fb91:	e8 52 fa ff ff       	callq  41f5e8 <addstr2buff>
  41fb96:	90                   	nop
  41fb97:	eb 42                	jmp    41fbdb <luaO_pushvfstring+0x519>
  41fb99:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fba0:	ba 01 00 00 00       	mov    $0x1,%edx
  41fba5:	be 0f 08 44 00       	mov    $0x44080f,%esi
  41fbaa:	48 89 c7             	mov    %rax,%rdi
  41fbad:	e8 36 fa ff ff       	callq  41f5e8 <addstr2buff>
  41fbb2:	eb 27                	jmp    41fbdb <luaO_pushvfstring+0x519>
  41fbb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41fbb8:	48 83 c0 01          	add    $0x1,%rax
  41fbbc:	0f b6 00             	movzbl (%rax),%eax
  41fbbf:	0f be d0             	movsbl %al,%edx
  41fbc2:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  41fbc9:	be 18 08 44 00       	mov    $0x440818,%esi
  41fbce:	48 89 c7             	mov    %rax,%rdi
  41fbd1:	b8 00 00 00 00       	mov    $0x0,%eax
  41fbd6:	e8 9e 0f ff ff       	callq  410b79 <luaG_runerror>
  41fbdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41fbdf:	48 83 c0 02          	add    $0x2,%rax
  41fbe3:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  41fbea:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41fbf1:	be 25 00 00 00       	mov    $0x25,%esi
  41fbf6:	48 89 c7             	mov    %rax,%rdi
  41fbf9:	e8 42 1b fe ff       	callq  401740 <strchr@plt>
  41fbfe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41fc02:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41fc07:	0f 85 fe fa ff ff    	jne    41f70b <luaO_pushvfstring+0x49>
  41fc0d:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41fc14:	48 89 c7             	mov    %rax,%rdi
  41fc17:	e8 54 1b fe ff       	callq  401770 <strlen@plt>
  41fc1c:	48 89 c2             	mov    %rax,%rdx
  41fc1f:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  41fc26:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fc2d:	48 89 ce             	mov    %rcx,%rsi
  41fc30:	48 89 c7             	mov    %rax,%rdi
  41fc33:	e8 b0 f9 ff ff       	callq  41f5e8 <addstr2buff>
  41fc38:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  41fc3f:	48 89 c7             	mov    %rax,%rdi
  41fc42:	e8 20 f9 ff ff       	callq  41f567 <clearbuff>
  41fc47:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  41fc4e:	48 8b 40 10          	mov    0x10(%rax),%rax
  41fc52:	48 83 e8 10          	sub    $0x10,%rax
  41fc56:	48 8b 00             	mov    (%rax),%rax
  41fc59:	48 83 c0 18          	add    $0x18,%rax
  41fc5d:	c9                   	leaveq 
  41fc5e:	c3                   	retq   

000000000041fc5f <luaO_pushfstring>:
  41fc5f:	55                   	push   %rbp
  41fc60:	48 89 e5             	mov    %rsp,%rbp
  41fc63:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  41fc6a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  41fc71:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  41fc78:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  41fc7f:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  41fc86:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  41fc8d:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  41fc94:	84 c0                	test   %al,%al
  41fc96:	74 20                	je     41fcb8 <luaO_pushfstring+0x59>
  41fc98:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  41fc9c:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  41fca0:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  41fca4:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  41fca8:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  41fcac:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  41fcb0:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  41fcb4:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  41fcb8:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
  41fcbf:	00 00 00 
  41fcc2:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
  41fcc9:	00 00 00 
  41fccc:	48 8d 45 10          	lea    0x10(%rbp),%rax
  41fcd0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  41fcd7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  41fcde:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  41fce5:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  41fcec:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  41fcf3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41fcfa:	48 89 ce             	mov    %rcx,%rsi
  41fcfd:	48 89 c7             	mov    %rax,%rdi
  41fd00:	e8 bd f9 ff ff       	callq  41f6c2 <luaO_pushvfstring>
  41fd05:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  41fd0c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  41fd13:	c9                   	leaveq 
  41fd14:	c3                   	retq   

000000000041fd15 <luaO_chunkid>:
  41fd15:	55                   	push   %rbp
  41fd16:	48 89 e5             	mov    %rsp,%rbp
  41fd19:	48 83 ec 30          	sub    $0x30,%rsp
  41fd1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41fd21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41fd25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41fd29:	48 c7 45 f8 3c 00 00 	movq   $0x3c,-0x8(%rbp)
  41fd30:	00 
  41fd31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fd35:	0f b6 00             	movzbl (%rax),%eax
  41fd38:	3c 3d                	cmp    $0x3d,%al
  41fd3a:	75 61                	jne    41fd9d <luaO_chunkid+0x88>
  41fd3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fd40:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  41fd44:	77 20                	ja     41fd66 <luaO_chunkid+0x51>
  41fd46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fd4a:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41fd4e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41fd52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fd56:	48 89 ce             	mov    %rcx,%rsi
  41fd59:	48 89 c7             	mov    %rax,%rdi
  41fd5c:	e8 ff 1a fe ff       	callq  401860 <memcpy@plt>
  41fd61:	e9 94 01 00 00       	jmpq   41fefa <luaO_chunkid+0x1e5>
  41fd66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41fd6a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  41fd6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fd72:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41fd76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fd7a:	48 89 ce             	mov    %rcx,%rsi
  41fd7d:	48 89 c7             	mov    %rax,%rdi
  41fd80:	e8 db 1a fe ff       	callq  401860 <memcpy@plt>
  41fd85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41fd89:	48 83 e8 01          	sub    $0x1,%rax
  41fd8d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  41fd91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fd95:	c6 00 00             	movb   $0x0,(%rax)
  41fd98:	e9 5d 01 00 00       	jmpq   41fefa <luaO_chunkid+0x1e5>
  41fd9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fda1:	0f b6 00             	movzbl (%rax),%eax
  41fda4:	3c 40                	cmp    $0x40,%al
  41fda6:	75 76                	jne    41fe1e <luaO_chunkid+0x109>
  41fda8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fdac:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  41fdb0:	77 20                	ja     41fdd2 <luaO_chunkid+0xbd>
  41fdb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fdb6:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41fdba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41fdbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fdc2:	48 89 ce             	mov    %rcx,%rsi
  41fdc5:	48 89 c7             	mov    %rax,%rdi
  41fdc8:	e8 93 1a fe ff       	callq  401860 <memcpy@plt>
  41fdcd:	e9 28 01 00 00       	jmpq   41fefa <luaO_chunkid+0x1e5>
  41fdd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fdd6:	ba 03 00 00 00       	mov    $0x3,%edx
  41fddb:	be c0 0a 44 00       	mov    $0x440ac0,%esi
  41fde0:	48 89 c7             	mov    %rax,%rdi
  41fde3:	e8 78 1a fe ff       	callq  401860 <memcpy@plt>
  41fde8:	48 83 45 e8 03       	addq   $0x3,-0x18(%rbp)
  41fded:	48 83 6d f8 03       	subq   $0x3,-0x8(%rbp)
  41fdf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fdf6:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  41fdfa:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41fdfe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fe02:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  41fe06:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41fe0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fe0e:	48 89 ce             	mov    %rcx,%rsi
  41fe11:	48 89 c7             	mov    %rax,%rdi
  41fe14:	e8 47 1a fe ff       	callq  401860 <memcpy@plt>
  41fe19:	e9 dc 00 00 00       	jmpq   41fefa <luaO_chunkid+0x1e5>
  41fe1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41fe22:	be 0a 00 00 00       	mov    $0xa,%esi
  41fe27:	48 89 c7             	mov    %rax,%rdi
  41fe2a:	e8 11 19 fe ff       	callq  401740 <strchr@plt>
  41fe2f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41fe33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fe37:	ba 09 00 00 00       	mov    $0x9,%edx
  41fe3c:	be c4 0a 44 00       	mov    $0x440ac4,%esi
  41fe41:	48 89 c7             	mov    %rax,%rdi
  41fe44:	e8 17 1a fe ff       	callq  401860 <memcpy@plt>
  41fe49:	48 83 45 e8 09       	addq   $0x9,-0x18(%rbp)
  41fe4e:	48 83 6d f8 0f       	subq   $0xf,-0x8(%rbp)
  41fe53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fe57:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  41fe5b:	73 28                	jae    41fe85 <luaO_chunkid+0x170>
  41fe5d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41fe62:	75 21                	jne    41fe85 <luaO_chunkid+0x170>
  41fe64:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41fe68:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41fe6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fe70:	48 89 ce             	mov    %rcx,%rsi
  41fe73:	48 89 c7             	mov    %rax,%rdi
  41fe76:	e8 e5 19 fe ff       	callq  401860 <memcpy@plt>
  41fe7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fe7f:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  41fe83:	eb 5f                	jmp    41fee4 <luaO_chunkid+0x1cf>
  41fe85:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41fe8a:	74 0c                	je     41fe98 <luaO_chunkid+0x183>
  41fe8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41fe90:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  41fe94:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41fe98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fe9c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  41fea0:	76 08                	jbe    41feaa <luaO_chunkid+0x195>
  41fea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41fea6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41feaa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41feae:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41feb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41feb6:	48 89 ce             	mov    %rcx,%rsi
  41feb9:	48 89 c7             	mov    %rax,%rdi
  41febc:	e8 9f 19 fe ff       	callq  401860 <memcpy@plt>
  41fec1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41fec5:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  41fec9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fecd:	ba 03 00 00 00       	mov    $0x3,%edx
  41fed2:	be c0 0a 44 00       	mov    $0x440ac0,%esi
  41fed7:	48 89 c7             	mov    %rax,%rdi
  41feda:	e8 81 19 fe ff       	callq  401860 <memcpy@plt>
  41fedf:	48 83 45 e8 03       	addq   $0x3,-0x18(%rbp)
  41fee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41fee8:	ba 03 00 00 00       	mov    $0x3,%edx
  41feed:	be ce 0a 44 00       	mov    $0x440ace,%esi
  41fef2:	48 89 c7             	mov    %rax,%rdi
  41fef5:	e8 66 19 fe ff       	callq  401860 <memcpy@plt>
  41fefa:	90                   	nop
  41fefb:	c9                   	leaveq 
  41fefc:	c3                   	retq   

000000000041fefd <os_execute>:
  41fefd:	55                   	push   %rbp
  41fefe:	48 89 e5             	mov    %rsp,%rbp
  41ff01:	48 83 ec 20          	sub    $0x20,%rsp
  41ff05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ff09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ff0d:	b9 00 00 00 00       	mov    $0x0,%ecx
  41ff12:	ba 00 00 00 00       	mov    $0x0,%edx
  41ff17:	be 01 00 00 00       	mov    $0x1,%esi
  41ff1c:	48 89 c7             	mov    %rax,%rdi
  41ff1f:	e8 00 69 fe ff       	callq  406824 <luaL_optlstring>
  41ff24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ff28:	e8 63 17 fe ff       	callq  401690 <__errno_location@plt>
  41ff2d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  41ff33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ff37:	48 89 c7             	mov    %rax,%rdi
  41ff3a:	e8 31 19 fe ff       	callq  401870 <system@plt>
  41ff3f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  41ff42:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41ff47:	74 13                	je     41ff5c <os_execute+0x5f>
  41ff49:	8b 55 f4             	mov    -0xc(%rbp),%edx
  41ff4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ff50:	89 d6                	mov    %edx,%esi
  41ff52:	48 89 c7             	mov    %rax,%rdi
  41ff55:	e8 24 64 fe ff       	callq  40637e <luaL_execresult>
  41ff5a:	eb 16                	jmp    41ff72 <os_execute+0x75>
  41ff5c:	8b 55 f4             	mov    -0xc(%rbp),%edx
  41ff5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ff63:	89 d6                	mov    %edx,%esi
  41ff65:	48 89 c7             	mov    %rax,%rdi
  41ff68:	e8 cb 31 fe ff       	callq  403138 <lua_pushboolean>
  41ff6d:	b8 01 00 00 00       	mov    $0x1,%eax
  41ff72:	c9                   	leaveq 
  41ff73:	c3                   	retq   

000000000041ff74 <os_remove>:
  41ff74:	55                   	push   %rbp
  41ff75:	48 89 e5             	mov    %rsp,%rbp
  41ff78:	48 83 ec 20          	sub    $0x20,%rsp
  41ff7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ff80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ff84:	ba 00 00 00 00       	mov    $0x0,%edx
  41ff89:	be 01 00 00 00       	mov    $0x1,%esi
  41ff8e:	48 89 c7             	mov    %rax,%rdi
  41ff91:	e8 36 68 fe ff       	callq  4067cc <luaL_checklstring>
  41ff96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ff9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ff9e:	48 89 c7             	mov    %rax,%rdi
  41ffa1:	e8 0a 1b fe ff       	callq  401ab0 <remove@plt>
  41ffa6:	85 c0                	test   %eax,%eax
  41ffa8:	0f 94 c0             	sete   %al
  41ffab:	0f b6 c8             	movzbl %al,%ecx
  41ffae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41ffb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ffb6:	89 ce                	mov    %ecx,%esi
  41ffb8:	48 89 c7             	mov    %rax,%rdi
  41ffbb:	e8 0f 63 fe ff       	callq  4062cf <luaL_fileresult>
  41ffc0:	c9                   	leaveq 
  41ffc1:	c3                   	retq   

000000000041ffc2 <os_rename>:
  41ffc2:	55                   	push   %rbp
  41ffc3:	48 89 e5             	mov    %rsp,%rbp
  41ffc6:	48 83 ec 20          	sub    $0x20,%rsp
  41ffca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ffce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ffd2:	ba 00 00 00 00       	mov    $0x0,%edx
  41ffd7:	be 01 00 00 00       	mov    $0x1,%esi
  41ffdc:	48 89 c7             	mov    %rax,%rdi
  41ffdf:	e8 e8 67 fe ff       	callq  4067cc <luaL_checklstring>
  41ffe4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ffe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ffec:	ba 00 00 00 00       	mov    $0x0,%edx
  41fff1:	be 02 00 00 00       	mov    $0x2,%esi
  41fff6:	48 89 c7             	mov    %rax,%rdi
  41fff9:	e8 ce 67 fe ff       	callq  4067cc <luaL_checklstring>
  41fffe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  420002:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42000a:	48 89 d6             	mov    %rdx,%rsi
  42000d:	48 89 c7             	mov    %rax,%rdi
  420010:	e8 cb 17 fe ff       	callq  4017e0 <rename@plt>
  420015:	85 c0                	test   %eax,%eax
  420017:	0f 94 c0             	sete   %al
  42001a:	0f b6 c8             	movzbl %al,%ecx
  42001d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420021:	ba 00 00 00 00       	mov    $0x0,%edx
  420026:	89 ce                	mov    %ecx,%esi
  420028:	48 89 c7             	mov    %rax,%rdi
  42002b:	e8 9f 62 fe ff       	callq  4062cf <luaL_fileresult>
  420030:	c9                   	leaveq 
  420031:	c3                   	retq   

0000000000420032 <os_tmpname>:
  420032:	55                   	push   %rbp
  420033:	48 89 e5             	mov    %rsp,%rbp
  420036:	48 83 ec 30          	sub    $0x30,%rsp
  42003a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42003e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  420042:	48 89 c7             	mov    %rax,%rdi
  420045:	e8 06 18 fe ff       	callq  401850 <tmpnam@plt>
  42004a:	48 85 c0             	test   %rax,%rax
  42004d:	0f 94 c0             	sete   %al
  420050:	0f b6 c0             	movzbl %al,%eax
  420053:	89 45 fc             	mov    %eax,-0x4(%rbp)
  420056:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42005a:	0f 95 c0             	setne  %al
  42005d:	0f b6 c0             	movzbl %al,%eax
  420060:	48 85 c0             	test   %rax,%rax
  420063:	74 18                	je     42007d <os_tmpname+0x4b>
  420065:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420069:	be 60 0c 44 00       	mov    $0x440c60,%esi
  42006e:	48 89 c7             	mov    %rax,%rdi
  420071:	b8 00 00 00 00       	mov    $0x0,%eax
  420076:	e8 75 61 fe ff       	callq  4061f0 <luaL_error>
  42007b:	eb 18                	jmp    420095 <os_tmpname+0x63>
  42007d:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  420081:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420085:	48 89 d6             	mov    %rdx,%rsi
  420088:	48 89 c7             	mov    %rax,%rdi
  42008b:	e8 7e 2d fe ff       	callq  402e0e <lua_pushstring>
  420090:	b8 01 00 00 00       	mov    $0x1,%eax
  420095:	c9                   	leaveq 
  420096:	c3                   	retq   

0000000000420097 <os_getenv>:
  420097:	55                   	push   %rbp
  420098:	48 89 e5             	mov    %rsp,%rbp
  42009b:	48 83 ec 10          	sub    $0x10,%rsp
  42009f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4200a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4200a7:	ba 00 00 00 00       	mov    $0x0,%edx
  4200ac:	be 01 00 00 00       	mov    $0x1,%esi
  4200b1:	48 89 c7             	mov    %rax,%rdi
  4200b4:	e8 13 67 fe ff       	callq  4067cc <luaL_checklstring>
  4200b9:	48 89 c7             	mov    %rax,%rdi
  4200bc:	e8 bf 18 fe ff       	callq  401980 <getenv@plt>
  4200c1:	48 89 c2             	mov    %rax,%rdx
  4200c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4200c8:	48 89 d6             	mov    %rdx,%rsi
  4200cb:	48 89 c7             	mov    %rax,%rdi
  4200ce:	e8 3b 2d fe ff       	callq  402e0e <lua_pushstring>
  4200d3:	b8 01 00 00 00       	mov    $0x1,%eax
  4200d8:	c9                   	leaveq 
  4200d9:	c3                   	retq   

00000000004200da <os_clock>:
  4200da:	55                   	push   %rbp
  4200db:	48 89 e5             	mov    %rsp,%rbp
  4200de:	48 83 ec 10          	sub    $0x10,%rsp
  4200e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4200e6:	e8 05 17 fe ff       	callq  4017f0 <clock@plt>
  4200eb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4200f0:	f2 0f 10 0d a0 0e 02 	movsd  0x20ea0(%rip),%xmm1        # 440f98 <cat.3571+0x18>
  4200f7:	00 
  4200f8:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  4200fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420100:	48 89 c7             	mov    %rax,%rdi
  420103:	e8 c8 2b fe ff       	callq  402cd0 <lua_pushnumber>
  420108:	b8 01 00 00 00       	mov    $0x1,%eax
  42010d:	c9                   	leaveq 
  42010e:	c3                   	retq   

000000000042010f <setfield>:
  42010f:	55                   	push   %rbp
  420110:	48 89 e5             	mov    %rsp,%rbp
  420113:	48 83 ec 20          	sub    $0x20,%rsp
  420117:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42011b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42011f:	89 55 ec             	mov    %edx,-0x14(%rbp)
  420122:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  420125:	8b 45 ec             	mov    -0x14(%rbp),%eax
  420128:	48 63 d0             	movslq %eax,%rdx
  42012b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42012e:	48 98                	cltq   
  420130:	48 01 c2             	add    %rax,%rdx
  420133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420137:	48 89 d6             	mov    %rdx,%rsi
  42013a:	48 89 c7             	mov    %rax,%rdi
  42013d:	e8 d3 2b fe ff       	callq  402d15 <lua_pushinteger>
  420142:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42014a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42014f:	48 89 c7             	mov    %rax,%rdi
  420152:	e8 7b 3c fe ff       	callq  403dd2 <lua_setfield>
  420157:	90                   	nop
  420158:	c9                   	leaveq 
  420159:	c3                   	retq   

000000000042015a <setboolfield>:
  42015a:	55                   	push   %rbp
  42015b:	48 89 e5             	mov    %rsp,%rbp
  42015e:	48 83 ec 20          	sub    $0x20,%rsp
  420162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420166:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42016a:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42016d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  420171:	78 28                	js     42019b <setboolfield+0x41>
  420173:	8b 55 ec             	mov    -0x14(%rbp),%edx
  420176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42017a:	89 d6                	mov    %edx,%esi
  42017c:	48 89 c7             	mov    %rax,%rdi
  42017f:	e8 b4 2f fe ff       	callq  403138 <lua_pushboolean>
  420184:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42018c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  420191:	48 89 c7             	mov    %rax,%rdi
  420194:	e8 39 3c fe ff       	callq  403dd2 <lua_setfield>
  420199:	eb 01                	jmp    42019c <setboolfield+0x42>
  42019b:	90                   	nop
  42019c:	c9                   	leaveq 
  42019d:	c3                   	retq   

000000000042019e <setallfields>:
  42019e:	55                   	push   %rbp
  42019f:	48 89 e5             	mov    %rsp,%rbp
  4201a2:	48 83 ec 10          	sub    $0x10,%rsp
  4201a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4201aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4201ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4201b2:	8b 50 14             	mov    0x14(%rax),%edx
  4201b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4201b9:	b9 6c 07 00 00       	mov    $0x76c,%ecx
  4201be:	be 85 0c 44 00       	mov    $0x440c85,%esi
  4201c3:	48 89 c7             	mov    %rax,%rdi
  4201c6:	e8 44 ff ff ff       	callq  42010f <setfield>
  4201cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4201cf:	8b 50 10             	mov    0x10(%rax),%edx
  4201d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4201d6:	b9 01 00 00 00       	mov    $0x1,%ecx
  4201db:	be 8a 0c 44 00       	mov    $0x440c8a,%esi
  4201e0:	48 89 c7             	mov    %rax,%rdi
  4201e3:	e8 27 ff ff ff       	callq  42010f <setfield>
  4201e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4201ec:	8b 50 0c             	mov    0xc(%rax),%edx
  4201ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4201f3:	b9 00 00 00 00       	mov    $0x0,%ecx
  4201f8:	be 90 0c 44 00       	mov    $0x440c90,%esi
  4201fd:	48 89 c7             	mov    %rax,%rdi
  420200:	e8 0a ff ff ff       	callq  42010f <setfield>
  420205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420209:	8b 50 08             	mov    0x8(%rax),%edx
  42020c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420210:	b9 00 00 00 00       	mov    $0x0,%ecx
  420215:	be 94 0c 44 00       	mov    $0x440c94,%esi
  42021a:	48 89 c7             	mov    %rax,%rdi
  42021d:	e8 ed fe ff ff       	callq  42010f <setfield>
  420222:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420226:	8b 50 04             	mov    0x4(%rax),%edx
  420229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42022d:	b9 00 00 00 00       	mov    $0x0,%ecx
  420232:	be 99 0c 44 00       	mov    $0x440c99,%esi
  420237:	48 89 c7             	mov    %rax,%rdi
  42023a:	e8 d0 fe ff ff       	callq  42010f <setfield>
  42023f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420243:	8b 10                	mov    (%rax),%edx
  420245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420249:	b9 00 00 00 00       	mov    $0x0,%ecx
  42024e:	be 9d 0c 44 00       	mov    $0x440c9d,%esi
  420253:	48 89 c7             	mov    %rax,%rdi
  420256:	e8 b4 fe ff ff       	callq  42010f <setfield>
  42025b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42025f:	8b 50 1c             	mov    0x1c(%rax),%edx
  420262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420266:	b9 01 00 00 00       	mov    $0x1,%ecx
  42026b:	be a1 0c 44 00       	mov    $0x440ca1,%esi
  420270:	48 89 c7             	mov    %rax,%rdi
  420273:	e8 97 fe ff ff       	callq  42010f <setfield>
  420278:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42027c:	8b 50 18             	mov    0x18(%rax),%edx
  42027f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420283:	b9 01 00 00 00       	mov    $0x1,%ecx
  420288:	be a6 0c 44 00       	mov    $0x440ca6,%esi
  42028d:	48 89 c7             	mov    %rax,%rdi
  420290:	e8 7a fe ff ff       	callq  42010f <setfield>
  420295:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420299:	8b 50 20             	mov    0x20(%rax),%edx
  42029c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4202a0:	be ab 0c 44 00       	mov    $0x440cab,%esi
  4202a5:	48 89 c7             	mov    %rax,%rdi
  4202a8:	e8 ad fe ff ff       	callq  42015a <setboolfield>
  4202ad:	90                   	nop
  4202ae:	c9                   	leaveq 
  4202af:	c3                   	retq   

00000000004202b0 <getboolfield>:
  4202b0:	55                   	push   %rbp
  4202b1:	48 89 e5             	mov    %rsp,%rbp
  4202b4:	48 83 ec 20          	sub    $0x20,%rsp
  4202b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4202bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4202c0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4202c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4202c8:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4202cd:	48 89 c7             	mov    %rax,%rdi
  4202d0:	e8 e0 31 fe ff       	callq  4034b5 <lua_getfield>
  4202d5:	85 c0                	test   %eax,%eax
  4202d7:	74 13                	je     4202ec <getboolfield+0x3c>
  4202d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4202dd:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4202e2:	48 89 c7             	mov    %rax,%rdi
  4202e5:	e8 33 26 fe ff       	callq  40291d <lua_toboolean>
  4202ea:	eb 05                	jmp    4202f1 <getboolfield+0x41>
  4202ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4202f1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4202f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4202f8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4202fd:	48 89 c7             	mov    %rax,%rdi
  420300:	e8 7f 1c fe ff       	callq  401f84 <lua_settop>
  420305:	8b 45 fc             	mov    -0x4(%rbp),%eax
  420308:	c9                   	leaveq 
  420309:	c3                   	retq   

000000000042030a <getfield>:
  42030a:	55                   	push   %rbp
  42030b:	48 89 e5             	mov    %rsp,%rbp
  42030e:	48 83 ec 30          	sub    $0x30,%rsp
  420312:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420316:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42031a:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42031d:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  420320:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  420324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420328:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42032d:	48 89 c7             	mov    %rax,%rdi
  420330:	e8 80 31 fe ff       	callq  4034b5 <lua_getfield>
  420335:	89 45 f4             	mov    %eax,-0xc(%rbp)
  420338:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  42033c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420340:	be ff ff ff ff       	mov    $0xffffffff,%esi
  420345:	48 89 c7             	mov    %rax,%rdi
  420348:	e8 48 25 fe ff       	callq  402895 <lua_tointegerx>
  42034d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420351:	8b 45 f0             	mov    -0x10(%rbp),%eax
  420354:	85 c0                	test   %eax,%eax
  420356:	75 62                	jne    4203ba <getfield+0xb0>
  420358:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42035c:	0f 95 c0             	setne  %al
  42035f:	0f b6 c0             	movzbl %al,%eax
  420362:	48 85 c0             	test   %rax,%rax
  420365:	74 1f                	je     420386 <getfield+0x7c>
  420367:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42036b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42036f:	be b1 0c 44 00       	mov    $0x440cb1,%esi
  420374:	48 89 c7             	mov    %rax,%rdi
  420377:	b8 00 00 00 00       	mov    $0x0,%eax
  42037c:	e8 6f 5e fe ff       	callq  4061f0 <luaL_error>
  420381:	e9 a4 00 00 00       	jmpq   42042a <getfield+0x120>
  420386:	8b 45 dc             	mov    -0x24(%rbp),%eax
  420389:	c1 e8 1f             	shr    $0x1f,%eax
  42038c:	48 98                	cltq   
  42038e:	48 85 c0             	test   %rax,%rax
  420391:	74 1c                	je     4203af <getfield+0xa5>
  420393:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  420397:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42039b:	be d0 0c 44 00       	mov    $0x440cd0,%esi
  4203a0:	48 89 c7             	mov    %rax,%rdi
  4203a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4203a8:	e8 43 5e fe ff       	callq  4061f0 <luaL_error>
  4203ad:	eb 7b                	jmp    42042a <getfield+0x120>
  4203af:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4203b2:	48 98                	cltq   
  4203b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4203b8:	eb 5b                	jmp    420415 <getfield+0x10b>
  4203ba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4203bf:	78 1a                	js     4203db <getfield+0xd1>
  4203c1:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4203c4:	48 98                	cltq   
  4203c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4203ca:	48 29 c2             	sub    %rax,%rdx
  4203cd:	48 89 d0             	mov    %rdx,%rax
  4203d0:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
  4203d6:	0f 9f c0             	setg   %al
  4203d9:	eb 11                	jmp    4203ec <getfield+0xe2>
  4203db:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4203de:	05 00 00 00 80       	add    $0x80000000,%eax
  4203e3:	48 98                	cltq   
  4203e5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4203e9:	0f 9c c0             	setl   %al
  4203ec:	84 c0                	test   %al,%al
  4203ee:	74 1c                	je     42040c <getfield+0x102>
  4203f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4203f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4203f8:	be f1 0c 44 00       	mov    $0x440cf1,%esi
  4203fd:	48 89 c7             	mov    %rax,%rdi
  420400:	b8 00 00 00 00       	mov    $0x0,%eax
  420405:	e8 e6 5d fe ff       	callq  4061f0 <luaL_error>
  42040a:	eb 1e                	jmp    42042a <getfield+0x120>
  42040c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42040f:	48 98                	cltq   
  420411:	48 29 45 f8          	sub    %rax,-0x8(%rbp)
  420415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420419:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42041e:	48 89 c7             	mov    %rax,%rdi
  420421:	e8 5e 1b fe ff       	callq  401f84 <lua_settop>
  420426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42042a:	c9                   	leaveq 
  42042b:	c3                   	retq   

000000000042042c <checkoption>:
  42042c:	55                   	push   %rbp
  42042d:	48 89 e5             	mov    %rsp,%rbp
  420430:	48 83 ec 30          	sub    $0x30,%rsp
  420434:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420438:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42043c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  420440:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  420444:	48 c7 45 f8 10 0d 44 	movq   $0x440d10,-0x8(%rbp)
  42044b:	00 
  42044c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  420453:	eb 6f                	jmp    4204c4 <checkoption+0x98>
  420455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420459:	0f b6 00             	movzbl (%rax),%eax
  42045c:	3c 7c                	cmp    $0x7c,%al
  42045e:	75 06                	jne    420466 <checkoption+0x3a>
  420460:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  420464:	eb 55                	jmp    4204bb <checkoption+0x8f>
  420466:	8b 45 f4             	mov    -0xc(%rbp),%eax
  420469:	48 63 d0             	movslq %eax,%rdx
  42046c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  420470:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420474:	48 89 ce             	mov    %rcx,%rsi
  420477:	48 89 c7             	mov    %rax,%rdi
  42047a:	e8 01 13 fe ff       	callq  401780 <memcmp@plt>
  42047f:	85 c0                	test   %eax,%eax
  420481:	75 38                	jne    4204bb <checkoption+0x8f>
  420483:	8b 45 f4             	mov    -0xc(%rbp),%eax
  420486:	48 63 d0             	movslq %eax,%rdx
  420489:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42048d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  420491:	48 89 ce             	mov    %rcx,%rsi
  420494:	48 89 c7             	mov    %rax,%rdi
  420497:	e8 c4 13 fe ff       	callq  401860 <memcpy@plt>
  42049c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42049f:	48 63 d0             	movslq %eax,%rdx
  4204a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4204a6:	48 01 d0             	add    %rdx,%rax
  4204a9:	c6 00 00             	movb   $0x0,(%rax)
  4204ac:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4204af:	48 63 d0             	movslq %eax,%rdx
  4204b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4204b6:	48 01 d0             	add    %rdx,%rax
  4204b9:	eb 55                	jmp    420510 <checkoption+0xe4>
  4204bb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4204be:	48 98                	cltq   
  4204c0:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  4204c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4204c8:	0f b6 00             	movzbl (%rax),%eax
  4204cb:	84 c0                	test   %al,%al
  4204cd:	74 0f                	je     4204de <checkoption+0xb2>
  4204cf:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4204d2:	48 98                	cltq   
  4204d4:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  4204d8:	0f 8d 77 ff ff ff    	jge    420455 <checkoption+0x29>
  4204de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4204e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4204e6:	be 60 0d 44 00       	mov    $0x440d60,%esi
  4204eb:	48 89 c7             	mov    %rax,%rdi
  4204ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4204f3:	e8 1a 2a fe ff       	callq  402f12 <lua_pushfstring>
  4204f8:	48 89 c2             	mov    %rax,%rdx
  4204fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4204ff:	be 01 00 00 00       	mov    $0x1,%esi
  420504:	48 89 c7             	mov    %rax,%rdi
  420507:	e8 e6 59 fe ff       	callq  405ef2 <luaL_argerror>
  42050c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420510:	c9                   	leaveq 
  420511:	c3                   	retq   

0000000000420512 <l_checktime>:
  420512:	55                   	push   %rbp
  420513:	48 89 e5             	mov    %rsp,%rbp
  420516:	48 83 ec 20          	sub    $0x20,%rsp
  42051a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42051e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  420521:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  420524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420528:	89 d6                	mov    %edx,%esi
  42052a:	48 89 c7             	mov    %rax,%rdi
  42052d:	e8 65 64 fe ff       	callq  406997 <luaL_checkinteger>
  420532:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42053a:	c9                   	leaveq 
  42053b:	c3                   	retq   

000000000042053c <os_date>:
  42053c:	55                   	push   %rbp
  42053d:	48 89 e5             	mov    %rsp,%rbp
  420540:	48 81 ec b0 04 00 00 	sub    $0x4b0,%rsp
  420547:	48 89 bd 58 fb ff ff 	mov    %rdi,-0x4a8(%rbp)
  42054e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  420552:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  420559:	48 89 d1             	mov    %rdx,%rcx
  42055c:	ba 84 0d 44 00       	mov    $0x440d84,%edx
  420561:	be 01 00 00 00       	mov    $0x1,%esi
  420566:	48 89 c7             	mov    %rax,%rdi
  420569:	e8 b6 62 fe ff       	callq  406824 <luaL_optlstring>
  42056e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420572:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  420579:	be 02 00 00 00       	mov    $0x2,%esi
  42057e:	48 89 c7             	mov    %rax,%rdi
  420581:	e8 ed 1d fe ff       	callq  402373 <lua_type>
  420586:	85 c0                	test   %eax,%eax
  420588:	7f 0c                	jg     420596 <os_date+0x5a>
  42058a:	bf 00 00 00 00       	mov    $0x0,%edi
  42058f:	e8 1c 13 fe ff       	callq  4018b0 <time@plt>
  420594:	eb 14                	jmp    4205aa <os_date+0x6e>
  420596:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  42059d:	be 02 00 00 00       	mov    $0x2,%esi
  4205a2:	48 89 c7             	mov    %rax,%rdi
  4205a5:	e8 68 ff ff ff       	callq  420512 <l_checktime>
  4205aa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4205ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4205b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4205b6:	48 01 d0             	add    %rdx,%rax
  4205b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4205bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4205c1:	0f b6 00             	movzbl (%rax),%eax
  4205c4:	3c 21                	cmp    $0x21,%al
  4205c6:	75 17                	jne    4205df <os_date+0xa3>
  4205c8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  4205cc:	48 89 c7             	mov    %rax,%rdi
  4205cf:	e8 ac 12 fe ff       	callq  401880 <gmtime@plt>
  4205d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4205d8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  4205dd:	eb 10                	jmp    4205ef <os_date+0xb3>
  4205df:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  4205e3:	48 89 c7             	mov    %rax,%rdi
  4205e6:	e8 25 12 fe ff       	callq  401810 <localtime@plt>
  4205eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4205ef:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4205f4:	75 1e                	jne    420614 <os_date+0xd8>
  4205f6:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  4205fd:	be 88 0d 44 00       	mov    $0x440d88,%esi
  420602:	48 89 c7             	mov    %rax,%rdi
  420605:	b8 00 00 00 00       	mov    $0x0,%eax
  42060a:	e8 e1 5b fe ff       	callq  4061f0 <luaL_error>
  42060f:	e9 68 01 00 00       	jmpq   42077c <os_date+0x240>
  420614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420618:	be bf 0d 44 00       	mov    $0x440dbf,%esi
  42061d:	48 89 c7             	mov    %rax,%rdi
  420620:	e8 9b 13 fe ff       	callq  4019c0 <strcmp@plt>
  420625:	85 c0                	test   %eax,%eax
  420627:	75 34                	jne    42065d <os_date+0x121>
  420629:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  420630:	ba 09 00 00 00       	mov    $0x9,%edx
  420635:	be 00 00 00 00       	mov    $0x0,%esi
  42063a:	48 89 c7             	mov    %rax,%rdi
  42063d:	e8 d6 31 fe ff       	callq  403818 <lua_createtable>
  420642:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420646:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  42064d:	48 89 d6             	mov    %rdx,%rsi
  420650:	48 89 c7             	mov    %rax,%rdi
  420653:	e8 46 fb ff ff       	callq  42019e <setallfields>
  420658:	e9 1a 01 00 00       	jmpq   420777 <os_date+0x23b>
  42065d:	c6 45 8c 25          	movb   $0x25,-0x74(%rbp)
  420661:	48 8d 95 60 fb ff ff 	lea    -0x4a0(%rbp),%rdx
  420668:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  42066f:	48 89 d6             	mov    %rdx,%rsi
  420672:	48 89 c7             	mov    %rax,%rdi
  420675:	e8 0f 69 fe ff       	callq  406f89 <luaL_buffinit>
  42067a:	e9 db 00 00 00       	jmpq   42075a <os_date+0x21e>
  42067f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420683:	0f b6 00             	movzbl (%rax),%eax
  420686:	3c 25                	cmp    $0x25,%al
  420688:	74 5a                	je     4206e4 <os_date+0x1a8>
  42068a:	48 8b 95 70 fb ff ff 	mov    -0x490(%rbp),%rdx
  420691:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  420698:	48 39 c2             	cmp    %rax,%rdx
  42069b:	72 17                	jb     4206b4 <os_date+0x178>
  42069d:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  4206a4:	be 01 00 00 00       	mov    $0x1,%esi
  4206a9:	48 89 c7             	mov    %rax,%rdi
  4206ac:	e8 c7 66 fe ff       	callq  406d78 <luaL_prepbuffsize>
  4206b1:	48 85 c0             	test   %rax,%rax
  4206b4:	90                   	nop
  4206b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4206b9:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4206bd:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  4206c1:	48 8b b5 60 fb ff ff 	mov    -0x4a0(%rbp),%rsi
  4206c8:	48 8b 95 70 fb ff ff 	mov    -0x490(%rbp),%rdx
  4206cf:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  4206d3:	48 89 8d 70 fb ff ff 	mov    %rcx,-0x490(%rbp)
  4206da:	48 01 f2             	add    %rsi,%rdx
  4206dd:	0f b6 00             	movzbl (%rax),%eax
  4206e0:	88 02                	mov    %al,(%rdx)
  4206e2:	eb 76                	jmp    42075a <os_date+0x21e>
  4206e4:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  4206eb:	be fa 00 00 00       	mov    $0xfa,%esi
  4206f0:	48 89 c7             	mov    %rax,%rdi
  4206f3:	e8 80 66 fe ff       	callq  406d78 <luaL_prepbuffsize>
  4206f8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4206fc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  420701:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
  420705:	48 83 c0 01          	add    $0x1,%rax
  420709:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42070d:	48 2b 55 f8          	sub    -0x8(%rbp),%rdx
  420711:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  420715:	48 8b bd 58 fb ff ff 	mov    -0x4a8(%rbp),%rdi
  42071c:	48 89 c1             	mov    %rax,%rcx
  42071f:	e8 08 fd ff ff       	callq  42042c <checkoption>
  420724:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420728:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42072c:	48 8d 55 8c          	lea    -0x74(%rbp),%rdx
  420730:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420734:	be fa 00 00 00       	mov    $0xfa,%esi
  420739:	48 89 c7             	mov    %rax,%rdi
  42073c:	e8 ff 10 fe ff       	callq  401840 <strftime@plt>
  420741:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  420745:	48 8b 95 70 fb ff ff 	mov    -0x490(%rbp),%rdx
  42074c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420750:	48 01 d0             	add    %rdx,%rax
  420753:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  42075a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42075e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  420762:	0f 82 17 ff ff ff    	jb     42067f <os_date+0x143>
  420768:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  42076f:	48 89 c7             	mov    %rax,%rdi
  420772:	e8 c8 66 fe ff       	callq  406e3f <luaL_pushresult>
  420777:	b8 01 00 00 00       	mov    $0x1,%eax
  42077c:	c9                   	leaveq 
  42077d:	c3                   	retq   

000000000042077e <os_time>:
  42077e:	55                   	push   %rbp
  42077f:	48 89 e5             	mov    %rsp,%rbp
  420782:	48 83 ec 50          	sub    $0x50,%rsp
  420786:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  42078a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42078e:	be 01 00 00 00       	mov    $0x1,%esi
  420793:	48 89 c7             	mov    %rax,%rdi
  420796:	e8 d8 1b fe ff       	callq  402373 <lua_type>
  42079b:	85 c0                	test   %eax,%eax
  42079d:	7f 13                	jg     4207b2 <os_time+0x34>
  42079f:	bf 00 00 00 00       	mov    $0x0,%edi
  4207a4:	e8 07 11 fe ff       	callq  4018b0 <time@plt>
  4207a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4207ad:	e9 12 01 00 00       	jmpq   4208c4 <os_time+0x146>
  4207b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4207b6:	ba 05 00 00 00       	mov    $0x5,%edx
  4207bb:	be 01 00 00 00       	mov    $0x1,%esi
  4207c0:	48 89 c7             	mov    %rax,%rdi
  4207c3:	e8 75 5f fe ff       	callq  40673d <luaL_checktype>
  4207c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4207cc:	be 01 00 00 00       	mov    $0x1,%esi
  4207d1:	48 89 c7             	mov    %rax,%rdi
  4207d4:	e8 ab 17 fe ff       	callq  401f84 <lua_settop>
  4207d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4207dd:	b9 6c 07 00 00       	mov    $0x76c,%ecx
  4207e2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4207e7:	be 85 0c 44 00       	mov    $0x440c85,%esi
  4207ec:	48 89 c7             	mov    %rax,%rdi
  4207ef:	e8 16 fb ff ff       	callq  42030a <getfield>
  4207f4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4207f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4207fb:	b9 01 00 00 00       	mov    $0x1,%ecx
  420800:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  420805:	be 8a 0c 44 00       	mov    $0x440c8a,%esi
  42080a:	48 89 c7             	mov    %rax,%rdi
  42080d:	e8 f8 fa ff ff       	callq  42030a <getfield>
  420812:	89 45 d0             	mov    %eax,-0x30(%rbp)
  420815:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  420819:	b9 00 00 00 00       	mov    $0x0,%ecx
  42081e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  420823:	be 90 0c 44 00       	mov    $0x440c90,%esi
  420828:	48 89 c7             	mov    %rax,%rdi
  42082b:	e8 da fa ff ff       	callq  42030a <getfield>
  420830:	89 45 cc             	mov    %eax,-0x34(%rbp)
  420833:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  420837:	b9 00 00 00 00       	mov    $0x0,%ecx
  42083c:	ba 0c 00 00 00       	mov    $0xc,%edx
  420841:	be 94 0c 44 00       	mov    $0x440c94,%esi
  420846:	48 89 c7             	mov    %rax,%rdi
  420849:	e8 bc fa ff ff       	callq  42030a <getfield>
  42084e:	89 45 c8             	mov    %eax,-0x38(%rbp)
  420851:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  420855:	b9 00 00 00 00       	mov    $0x0,%ecx
  42085a:	ba 00 00 00 00       	mov    $0x0,%edx
  42085f:	be 99 0c 44 00       	mov    $0x440c99,%esi
  420864:	48 89 c7             	mov    %rax,%rdi
  420867:	e8 9e fa ff ff       	callq  42030a <getfield>
  42086c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42086f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  420873:	b9 00 00 00 00       	mov    $0x0,%ecx
  420878:	ba 00 00 00 00       	mov    $0x0,%edx
  42087d:	be 9d 0c 44 00       	mov    $0x440c9d,%esi
  420882:	48 89 c7             	mov    %rax,%rdi
  420885:	e8 80 fa ff ff       	callq  42030a <getfield>
  42088a:	89 45 c0             	mov    %eax,-0x40(%rbp)
  42088d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  420891:	be ab 0c 44 00       	mov    $0x440cab,%esi
  420896:	48 89 c7             	mov    %rax,%rdi
  420899:	e8 12 fa ff ff       	callq  4202b0 <getboolfield>
  42089e:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4208a1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4208a5:	48 89 c7             	mov    %rax,%rdi
  4208a8:	e8 53 0f fe ff       	callq  401800 <mktime@plt>
  4208ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4208b1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  4208b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4208b9:	48 89 d6             	mov    %rdx,%rsi
  4208bc:	48 89 c7             	mov    %rax,%rdi
  4208bf:	e8 da f8 ff ff       	callq  42019e <setallfields>
  4208c4:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
  4208c9:	75 18                	jne    4208e3 <os_time+0x165>
  4208cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4208cf:	be c8 0d 44 00       	mov    $0x440dc8,%esi
  4208d4:	48 89 c7             	mov    %rax,%rdi
  4208d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4208dc:	e8 0f 59 fe ff       	callq  4061f0 <luaL_error>
  4208e1:	eb 18                	jmp    4208fb <os_time+0x17d>
  4208e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4208e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4208eb:	48 89 d6             	mov    %rdx,%rsi
  4208ee:	48 89 c7             	mov    %rax,%rdi
  4208f1:	e8 1f 24 fe ff       	callq  402d15 <lua_pushinteger>
  4208f6:	b8 01 00 00 00       	mov    $0x1,%eax
  4208fb:	c9                   	leaveq 
  4208fc:	c3                   	retq   

00000000004208fd <os_difftime>:
  4208fd:	55                   	push   %rbp
  4208fe:	48 89 e5             	mov    %rsp,%rbp
  420901:	48 83 ec 20          	sub    $0x20,%rsp
  420905:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42090d:	be 01 00 00 00       	mov    $0x1,%esi
  420912:	48 89 c7             	mov    %rax,%rdi
  420915:	e8 f8 fb ff ff       	callq  420512 <l_checktime>
  42091a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42091e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420922:	be 02 00 00 00       	mov    $0x2,%esi
  420927:	48 89 c7             	mov    %rax,%rdi
  42092a:	e8 e3 fb ff ff       	callq  420512 <l_checktime>
  42092f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  420933:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42093b:	48 89 d6             	mov    %rdx,%rsi
  42093e:	48 89 c7             	mov    %rax,%rdi
  420941:	e8 6a 0e fe ff       	callq  4017b0 <difftime@plt>
  420946:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42094a:	48 89 c7             	mov    %rax,%rdi
  42094d:	e8 7e 23 fe ff       	callq  402cd0 <lua_pushnumber>
  420952:	b8 01 00 00 00       	mov    $0x1,%eax
  420957:	c9                   	leaveq 
  420958:	c3                   	retq   

0000000000420959 <os_setlocale>:
  420959:	55                   	push   %rbp
  42095a:	48 89 e5             	mov    %rsp,%rbp
  42095d:	48 83 ec 20          	sub    $0x20,%rsp
  420961:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420969:	b9 00 00 00 00       	mov    $0x0,%ecx
  42096e:	ba 00 00 00 00       	mov    $0x0,%edx
  420973:	be 01 00 00 00       	mov    $0x1,%esi
  420978:	48 89 c7             	mov    %rax,%rdi
  42097b:	e8 a4 5e fe ff       	callq  406824 <luaL_optlstring>
  420980:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420988:	b9 40 0f 44 00       	mov    $0x440f40,%ecx
  42098d:	ba ff 0d 44 00       	mov    $0x440dff,%edx
  420992:	be 02 00 00 00       	mov    $0x2,%esi
  420997:	48 89 c7             	mov    %rax,%rdi
  42099a:	e8 57 5c fe ff       	callq  4065f6 <luaL_checkoption>
  42099f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4209a2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4209a5:	48 98                	cltq   
  4209a7:	8b 04 85 80 0f 44 00 	mov    0x440f80(,%rax,4),%eax
  4209ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4209b2:	48 89 d6             	mov    %rdx,%rsi
  4209b5:	89 c7                	mov    %eax,%edi
  4209b7:	e8 d4 0e fe ff       	callq  401890 <setlocale@plt>
  4209bc:	48 89 c2             	mov    %rax,%rdx
  4209bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4209c3:	48 89 d6             	mov    %rdx,%rsi
  4209c6:	48 89 c7             	mov    %rax,%rdi
  4209c9:	e8 40 24 fe ff       	callq  402e0e <lua_pushstring>
  4209ce:	b8 01 00 00 00       	mov    $0x1,%eax
  4209d3:	c9                   	leaveq 
  4209d4:	c3                   	retq   

00000000004209d5 <os_exit>:
  4209d5:	55                   	push   %rbp
  4209d6:	48 89 e5             	mov    %rsp,%rbp
  4209d9:	48 83 ec 20          	sub    $0x20,%rsp
  4209dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4209e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4209e5:	be 01 00 00 00       	mov    $0x1,%esi
  4209ea:	48 89 c7             	mov    %rax,%rdi
  4209ed:	e8 81 19 fe ff       	callq  402373 <lua_type>
  4209f2:	83 f8 01             	cmp    $0x1,%eax
  4209f5:	75 1e                	jne    420a15 <os_exit+0x40>
  4209f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4209fb:	be 01 00 00 00       	mov    $0x1,%esi
  420a00:	48 89 c7             	mov    %rax,%rdi
  420a03:	e8 15 1f fe ff       	callq  40291d <lua_toboolean>
  420a08:	85 c0                	test   %eax,%eax
  420a0a:	0f 94 c0             	sete   %al
  420a0d:	0f b6 c0             	movzbl %al,%eax
  420a10:	89 45 fc             	mov    %eax,-0x4(%rbp)
  420a13:	eb 19                	jmp    420a2e <os_exit+0x59>
  420a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420a19:	ba 00 00 00 00       	mov    $0x0,%edx
  420a1e:	be 01 00 00 00       	mov    $0x1,%esi
  420a23:	48 89 c7             	mov    %rax,%rdi
  420a26:	e8 bb 5f fe ff       	callq  4069e6 <luaL_optinteger>
  420a2b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  420a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420a32:	be 02 00 00 00       	mov    $0x2,%esi
  420a37:	48 89 c7             	mov    %rax,%rdi
  420a3a:	e8 de 1e fe ff       	callq  40291d <lua_toboolean>
  420a3f:	85 c0                	test   %eax,%eax
  420a41:	74 0c                	je     420a4f <os_exit+0x7a>
  420a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420a47:	48 89 c7             	mov    %rax,%rdi
  420a4a:	e8 b4 5c 00 00       	callq  426703 <lua_close>
  420a4f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  420a54:	74 0a                	je     420a60 <os_exit+0x8b>
  420a56:	8b 45 fc             	mov    -0x4(%rbp),%eax
  420a59:	89 c7                	mov    %eax,%edi
  420a5b:	e8 10 0f fe ff       	callq  401970 <exit@plt>
  420a60:	b8 00 00 00 00       	mov    $0x0,%eax
  420a65:	c9                   	leaveq 
  420a66:	c3                   	retq   

0000000000420a67 <luaopen_os>:
  420a67:	55                   	push   %rbp
  420a68:	48 89 e5             	mov    %rsp,%rbp
  420a6b:	48 83 ec 10          	sub    $0x10,%rsp
  420a6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420a73:	f2 0f 10 05 25 05 02 	movsd  0x20525(%rip),%xmm0        # 440fa0 <cat.3571+0x20>
  420a7a:	00 
  420a7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420a7f:	be 88 00 00 00       	mov    $0x88,%esi
  420a84:	48 89 c7             	mov    %rax,%rdi
  420a87:	e8 45 77 fe ff       	callq  4081d1 <luaL_checkversion_>
  420a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420a90:	ba 0b 00 00 00       	mov    $0xb,%edx
  420a95:	be 00 00 00 00       	mov    $0x0,%esi
  420a9a:	48 89 c7             	mov    %rax,%rdi
  420a9d:	e8 76 2d fe ff       	callq  403818 <lua_createtable>
  420aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420aa6:	ba 00 00 00 00       	mov    $0x0,%edx
  420aab:	be 60 0e 44 00       	mov    $0x440e60,%esi
  420ab0:	48 89 c7             	mov    %rax,%rdi
  420ab3:	e8 72 70 fe ff       	callq  407b2a <luaL_setfuncs>
  420ab8:	b8 01 00 00 00       	mov    $0x1,%eax
  420abd:	c9                   	leaveq 
  420abe:	c3                   	retq   

0000000000420abf <error_expected>:
  420abf:	55                   	push   %rbp
  420ac0:	48 89 e5             	mov    %rsp,%rbp
  420ac3:	48 83 ec 10          	sub    $0x10,%rsp
  420ac7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420acb:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420ace:	8b 55 f4             	mov    -0xc(%rbp),%edx
  420ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420ad5:	89 d6                	mov    %edx,%esi
  420ad7:	48 89 c7             	mov    %rax,%rdi
  420ada:	e8 1d 96 ff ff       	callq  41a0fc <luaX_token2str>
  420adf:	48 89 c2             	mov    %rax,%rdx
  420ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420ae6:	48 8b 40 38          	mov    0x38(%rax),%rax
  420aea:	be c0 0f 44 00       	mov    $0x440fc0,%esi
  420aef:	48 89 c7             	mov    %rax,%rdi
  420af2:	b8 00 00 00 00       	mov    $0x0,%eax
  420af7:	e8 63 f1 ff ff       	callq  41fc5f <luaO_pushfstring>
  420afc:	48 89 c2             	mov    %rax,%rdx
  420aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420b03:	48 89 d6             	mov    %rdx,%rsi
  420b06:	48 89 c7             	mov    %rax,%rdi
  420b09:	e8 90 97 ff ff       	callq  41a29e <luaX_syntaxerror>

0000000000420b0e <errorlimit>:
  420b0e:	55                   	push   %rbp
  420b0f:	48 89 e5             	mov    %rsp,%rbp
  420b12:	48 83 ec 40          	sub    $0x40,%rsp
  420b16:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  420b1a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  420b1d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  420b21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420b25:	48 8b 40 10          	mov    0x10(%rax),%rax
  420b29:	48 8b 40 38          	mov    0x38(%rax),%rax
  420b2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420b31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420b35:	48 8b 00             	mov    (%rax),%rax
  420b38:	8b 40 2c             	mov    0x2c(%rax),%eax
  420b3b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  420b3e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  420b42:	74 1b                	je     420b5f <errorlimit+0x51>
  420b44:	8b 55 f4             	mov    -0xc(%rbp),%edx
  420b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420b4b:	be cc 0f 44 00       	mov    $0x440fcc,%esi
  420b50:	48 89 c7             	mov    %rax,%rdi
  420b53:	b8 00 00 00 00       	mov    $0x0,%eax
  420b58:	e8 02 f1 ff ff       	callq  41fc5f <luaO_pushfstring>
  420b5d:	eb 05                	jmp    420b64 <errorlimit+0x56>
  420b5f:	b8 e0 0f 44 00       	mov    $0x440fe0,%eax
  420b64:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  420b68:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  420b6c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  420b6f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  420b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420b77:	49 89 f0             	mov    %rsi,%r8
  420b7a:	be f0 0f 44 00       	mov    $0x440ff0,%esi
  420b7f:	48 89 c7             	mov    %rax,%rdi
  420b82:	b8 00 00 00 00       	mov    $0x0,%eax
  420b87:	e8 d3 f0 ff ff       	callq  41fc5f <luaO_pushfstring>
  420b8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420b90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420b94:	48 8b 40 10          	mov    0x10(%rax),%rax
  420b98:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  420b9c:	48 89 d6             	mov    %rdx,%rsi
  420b9f:	48 89 c7             	mov    %rax,%rdi
  420ba2:	e8 f7 96 ff ff       	callq  41a29e <luaX_syntaxerror>

0000000000420ba7 <checklimit>:
  420ba7:	55                   	push   %rbp
  420ba8:	48 89 e5             	mov    %rsp,%rbp
  420bab:	48 83 ec 20          	sub    $0x20,%rsp
  420baf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420bb3:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420bb6:	89 55 f0             	mov    %edx,-0x10(%rbp)
  420bb9:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  420bbd:	8b 45 f4             	mov    -0xc(%rbp),%eax
  420bc0:	3b 45 f0             	cmp    -0x10(%rbp),%eax
  420bc3:	7e 15                	jle    420bda <checklimit+0x33>
  420bc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  420bc9:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  420bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420bd0:	89 ce                	mov    %ecx,%esi
  420bd2:	48 89 c7             	mov    %rax,%rdi
  420bd5:	e8 34 ff ff ff       	callq  420b0e <errorlimit>
  420bda:	90                   	nop
  420bdb:	c9                   	leaveq 
  420bdc:	c3                   	retq   

0000000000420bdd <testnext>:
  420bdd:	55                   	push   %rbp
  420bde:	48 89 e5             	mov    %rsp,%rbp
  420be1:	48 83 ec 10          	sub    $0x10,%rsp
  420be5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420be9:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420bf0:	8b 40 10             	mov    0x10(%rax),%eax
  420bf3:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  420bf6:	75 13                	jne    420c0b <testnext+0x2e>
  420bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420bfc:	48 89 c7             	mov    %rax,%rdi
  420bff:	e8 a4 b2 ff ff       	callq  41bea8 <luaX_next>
  420c04:	b8 01 00 00 00       	mov    $0x1,%eax
  420c09:	eb 05                	jmp    420c10 <testnext+0x33>
  420c0b:	b8 00 00 00 00       	mov    $0x0,%eax
  420c10:	c9                   	leaveq 
  420c11:	c3                   	retq   

0000000000420c12 <check>:
  420c12:	55                   	push   %rbp
  420c13:	48 89 e5             	mov    %rsp,%rbp
  420c16:	48 83 ec 10          	sub    $0x10,%rsp
  420c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420c1e:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420c21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420c25:	8b 40 10             	mov    0x10(%rax),%eax
  420c28:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  420c2b:	74 11                	je     420c3e <check+0x2c>
  420c2d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  420c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420c34:	89 d6                	mov    %edx,%esi
  420c36:	48 89 c7             	mov    %rax,%rdi
  420c39:	e8 81 fe ff ff       	callq  420abf <error_expected>
  420c3e:	90                   	nop
  420c3f:	c9                   	leaveq 
  420c40:	c3                   	retq   

0000000000420c41 <checknext>:
  420c41:	55                   	push   %rbp
  420c42:	48 89 e5             	mov    %rsp,%rbp
  420c45:	48 83 ec 10          	sub    $0x10,%rsp
  420c49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420c4d:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420c50:	8b 55 f4             	mov    -0xc(%rbp),%edx
  420c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420c57:	89 d6                	mov    %edx,%esi
  420c59:	48 89 c7             	mov    %rax,%rdi
  420c5c:	e8 b1 ff ff ff       	callq  420c12 <check>
  420c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420c65:	48 89 c7             	mov    %rax,%rdi
  420c68:	e8 3b b2 ff ff       	callq  41bea8 <luaX_next>
  420c6d:	90                   	nop
  420c6e:	c9                   	leaveq 
  420c6f:	c3                   	retq   

0000000000420c70 <check_match>:
  420c70:	55                   	push   %rbp
  420c71:	48 89 e5             	mov    %rsp,%rbp
  420c74:	53                   	push   %rbx
  420c75:	48 83 ec 28          	sub    $0x28,%rsp
  420c79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420c7d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  420c80:	89 55 e0             	mov    %edx,-0x20(%rbp)
  420c83:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  420c86:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  420c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420c8d:	89 d6                	mov    %edx,%esi
  420c8f:	48 89 c7             	mov    %rax,%rdi
  420c92:	e8 46 ff ff ff       	callq  420bdd <testnext>
  420c97:	85 c0                	test   %eax,%eax
  420c99:	0f 94 c0             	sete   %al
  420c9c:	0f b6 c0             	movzbl %al,%eax
  420c9f:	48 85 c0             	test   %rax,%rax
  420ca2:	74 7d                	je     420d21 <check_match+0xb1>
  420ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420ca8:	8b 40 04             	mov    0x4(%rax),%eax
  420cab:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  420cae:	75 11                	jne    420cc1 <check_match+0x51>
  420cb0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  420cb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420cb7:	89 d6                	mov    %edx,%esi
  420cb9:	48 89 c7             	mov    %rax,%rdi
  420cbc:	e8 fe fd ff ff       	callq  420abf <error_expected>
  420cc1:	8b 55 e0             	mov    -0x20(%rbp),%edx
  420cc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420cc8:	89 d6                	mov    %edx,%esi
  420cca:	48 89 c7             	mov    %rax,%rdi
  420ccd:	e8 2a 94 ff ff       	callq  41a0fc <luaX_token2str>
  420cd2:	48 89 c3             	mov    %rax,%rbx
  420cd5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  420cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420cdc:	89 d6                	mov    %edx,%esi
  420cde:	48 89 c7             	mov    %rax,%rdi
  420ce1:	e8 16 94 ff ff       	callq  41a0fc <luaX_token2str>
  420ce6:	48 89 c6             	mov    %rax,%rsi
  420ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420ced:	48 8b 40 38          	mov    0x38(%rax),%rax
  420cf1:	8b 55 dc             	mov    -0x24(%rbp),%edx
  420cf4:	41 89 d0             	mov    %edx,%r8d
  420cf7:	48 89 d9             	mov    %rbx,%rcx
  420cfa:	48 89 f2             	mov    %rsi,%rdx
  420cfd:	be 10 10 44 00       	mov    $0x441010,%esi
  420d02:	48 89 c7             	mov    %rax,%rdi
  420d05:	b8 00 00 00 00       	mov    $0x0,%eax
  420d0a:	e8 50 ef ff ff       	callq  41fc5f <luaO_pushfstring>
  420d0f:	48 89 c2             	mov    %rax,%rdx
  420d12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420d16:	48 89 d6             	mov    %rdx,%rsi
  420d19:	48 89 c7             	mov    %rax,%rdi
  420d1c:	e8 7d 95 ff ff       	callq  41a29e <luaX_syntaxerror>
  420d21:	90                   	nop
  420d22:	48 83 c4 28          	add    $0x28,%rsp
  420d26:	5b                   	pop    %rbx
  420d27:	5d                   	pop    %rbp
  420d28:	c3                   	retq   

0000000000420d29 <str_checkname>:
  420d29:	55                   	push   %rbp
  420d2a:	48 89 e5             	mov    %rsp,%rbp
  420d2d:	48 83 ec 20          	sub    $0x20,%rsp
  420d31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420d35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420d39:	be 23 01 00 00       	mov    $0x123,%esi
  420d3e:	48 89 c7             	mov    %rax,%rdi
  420d41:	e8 cc fe ff ff       	callq  420c12 <check>
  420d46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420d4a:	48 8b 40 18          	mov    0x18(%rax),%rax
  420d4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420d52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420d56:	48 89 c7             	mov    %rax,%rdi
  420d59:	e8 4a b1 ff ff       	callq  41bea8 <luaX_next>
  420d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d62:	c9                   	leaveq 
  420d63:	c3                   	retq   

0000000000420d64 <init_exp>:
  420d64:	55                   	push   %rbp
  420d65:	48 89 e5             	mov    %rsp,%rbp
  420d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420d6c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  420d6f:	89 55 f0             	mov    %edx,-0x10(%rbp)
  420d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d76:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
  420d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d81:	8b 50 10             	mov    0x10(%rax),%edx
  420d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d88:	89 50 14             	mov    %edx,0x14(%rax)
  420d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d8f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  420d92:	89 10                	mov    %edx,(%rax)
  420d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d98:	8b 55 f0             	mov    -0x10(%rbp),%edx
  420d9b:	89 50 08             	mov    %edx,0x8(%rax)
  420d9e:	90                   	nop
  420d9f:	5d                   	pop    %rbp
  420da0:	c3                   	retq   

0000000000420da1 <codestring>:
  420da1:	55                   	push   %rbp
  420da2:	48 89 e5             	mov    %rsp,%rbp
  420da5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420da9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  420dad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420db1:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
  420db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420dbc:	8b 50 10             	mov    0x10(%rax),%edx
  420dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420dc3:	89 50 14             	mov    %edx,0x14(%rax)
  420dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420dca:	c7 00 07 00 00 00    	movl   $0x7,(%rax)
  420dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420dd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420dd8:	48 89 50 08          	mov    %rdx,0x8(%rax)
  420ddc:	90                   	nop
  420ddd:	5d                   	pop    %rbp
  420dde:	c3                   	retq   

0000000000420ddf <codename>:
  420ddf:	55                   	push   %rbp
  420de0:	48 89 e5             	mov    %rsp,%rbp
  420de3:	48 83 ec 10          	sub    $0x10,%rsp
  420de7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420deb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  420def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420df3:	48 89 c7             	mov    %rax,%rdi
  420df6:	e8 2e ff ff ff       	callq  420d29 <str_checkname>
  420dfb:	48 89 c2             	mov    %rax,%rdx
  420dfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e02:	48 89 d6             	mov    %rdx,%rsi
  420e05:	48 89 c7             	mov    %rax,%rdi
  420e08:	e8 94 ff ff ff       	callq  420da1 <codestring>
  420e0d:	90                   	nop
  420e0e:	c9                   	leaveq 
  420e0f:	c3                   	retq   

0000000000420e10 <registerlocalvar>:
  420e10:	55                   	push   %rbp
  420e11:	48 89 e5             	mov    %rsp,%rbp
  420e14:	48 83 ec 30          	sub    $0x30,%rsp
  420e18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  420e1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  420e20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  420e24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420e28:	48 8b 00             	mov    (%rax),%rax
  420e2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  420e2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e33:	8b 40 24             	mov    0x24(%rax),%eax
  420e36:	89 45 fc             	mov    %eax,-0x4(%rbp)
  420e39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e3d:	48 8d 48 24          	lea    0x24(%rax),%rcx
  420e41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420e45:	0f b7 40 40          	movzwl 0x40(%rax),%eax
  420e49:	0f bf d0             	movswl %ax,%edx
  420e4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e50:	48 8b 70 68          	mov    0x68(%rax),%rsi
  420e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420e58:	48 8b 40 38          	mov    0x38(%rax),%rax
  420e5c:	48 83 ec 08          	sub    $0x8,%rsp
  420e60:	68 35 10 44 00       	pushq  $0x441035
  420e65:	41 b9 ff 7f 00 00    	mov    $0x7fff,%r9d
  420e6b:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  420e71:	48 89 c7             	mov    %rax,%rdi
  420e74:	e8 a8 c0 ff ff       	callq  41cf21 <luaM_growaux_>
  420e79:	48 83 c4 10          	add    $0x10,%rsp
  420e7d:	48 89 c2             	mov    %rax,%rdx
  420e80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e84:	48 89 50 68          	mov    %rdx,0x68(%rax)
  420e88:	eb 21                	jmp    420eab <registerlocalvar+0x9b>
  420e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420e8e:	48 8b 48 68          	mov    0x68(%rax),%rcx
  420e92:	8b 45 fc             	mov    -0x4(%rbp),%eax
  420e95:	8d 50 01             	lea    0x1(%rax),%edx
  420e98:	89 55 fc             	mov    %edx,-0x4(%rbp)
  420e9b:	48 98                	cltq   
  420e9d:	48 c1 e0 04          	shl    $0x4,%rax
  420ea1:	48 01 c8             	add    %rcx,%rax
  420ea4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  420eab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420eaf:	8b 40 24             	mov    0x24(%rax),%eax
  420eb2:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  420eb5:	7c d3                	jl     420e8a <registerlocalvar+0x7a>
  420eb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420ebb:	48 8b 50 68          	mov    0x68(%rax),%rdx
  420ebf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420ec3:	0f b7 40 40          	movzwl 0x40(%rax),%eax
  420ec7:	48 0f bf c0          	movswq %ax,%rax
  420ecb:	48 c1 e0 04          	shl    $0x4,%rax
  420ecf:	48 01 c2             	add    %rax,%rdx
  420ed2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420ed6:	48 89 02             	mov    %rax,(%rdx)
  420ed9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420edd:	48 8b 50 68          	mov    0x68(%rax),%rdx
  420ee1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420ee5:	0f b7 40 40          	movzwl 0x40(%rax),%eax
  420ee9:	48 0f bf c0          	movswq %ax,%rax
  420eed:	48 c1 e0 04          	shl    $0x4,%rax
  420ef1:	48 01 c2             	add    %rax,%rdx
  420ef4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420ef8:	8b 40 20             	mov    0x20(%rax),%eax
  420efb:	89 42 08             	mov    %eax,0x8(%rdx)
  420efe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420f02:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  420f06:	0f b6 c0             	movzbl %al,%eax
  420f09:	83 e0 20             	and    $0x20,%eax
  420f0c:	85 c0                	test   %eax,%eax
  420f0e:	74 2d                	je     420f3d <registerlocalvar+0x12d>
  420f10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420f14:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  420f18:	0f b6 c0             	movzbl %al,%eax
  420f1b:	83 e0 18             	and    $0x18,%eax
  420f1e:	85 c0                	test   %eax,%eax
  420f20:	74 1b                	je     420f3d <registerlocalvar+0x12d>
  420f22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  420f26:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  420f2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420f2e:	48 8b 40 38          	mov    0x38(%rax),%rax
  420f32:	48 89 ce             	mov    %rcx,%rsi
  420f35:	48 89 c7             	mov    %rax,%rdi
  420f38:	e8 12 3b ff ff       	callq  414a4f <luaC_barrier_>
  420f3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420f41:	0f b7 40 40          	movzwl 0x40(%rax),%eax
  420f45:	89 c2                	mov    %eax,%edx
  420f47:	83 c2 01             	add    $0x1,%edx
  420f4a:	89 d1                	mov    %edx,%ecx
  420f4c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  420f50:	66 89 4a 40          	mov    %cx,0x40(%rdx)
  420f54:	98                   	cwtl   
  420f55:	c9                   	leaveq 
  420f56:	c3                   	retq   

0000000000420f57 <new_localvar>:
  420f57:	55                   	push   %rbp
  420f58:	48 89 e5             	mov    %rsp,%rbp
  420f5b:	48 83 ec 30          	sub    $0x30,%rsp
  420f5f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  420f63:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  420f67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420f6b:	48 8b 40 38          	mov    0x38(%rax),%rax
  420f6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420f73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420f77:	48 8b 40 30          	mov    0x30(%rax),%rax
  420f7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  420f7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420f83:	48 8b 40 58          	mov    0x58(%rax),%rax
  420f87:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  420f8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420f8f:	8b 40 08             	mov    0x8(%rax),%eax
  420f92:	8d 50 01             	lea    0x1(%rax),%edx
  420f95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420f99:	8b 40 38             	mov    0x38(%rax),%eax
  420f9c:	89 d6                	mov    %edx,%esi
  420f9e:	29 c6                	sub    %eax,%esi
  420fa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420fa4:	b9 35 10 44 00       	mov    $0x441035,%ecx
  420fa9:	ba c8 00 00 00       	mov    $0xc8,%edx
  420fae:	48 89 c7             	mov    %rax,%rdi
  420fb1:	e8 f1 fb ff ff       	callq  420ba7 <checklimit>
  420fb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420fba:	48 8d 48 0c          	lea    0xc(%rax),%rcx
  420fbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420fc2:	8b 40 08             	mov    0x8(%rax),%eax
  420fc5:	8d 50 01             	lea    0x1(%rax),%edx
  420fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420fcc:	48 8b 30             	mov    (%rax),%rsi
  420fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420fd3:	48 83 ec 08          	sub    $0x8,%rsp
  420fd7:	68 35 10 44 00       	pushq  $0x441035
  420fdc:	41 b9 ff ff 00 00    	mov    $0xffff,%r9d
  420fe2:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  420fe8:	48 89 c7             	mov    %rax,%rdi
  420feb:	e8 31 bf ff ff       	callq  41cf21 <luaM_growaux_>
  420ff0:	48 83 c4 10          	add    $0x10,%rsp
  420ff4:	48 89 c2             	mov    %rax,%rdx
  420ff7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420ffb:	48 89 10             	mov    %rdx,(%rax)
  420ffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421002:	48 8b 30             	mov    (%rax),%rsi
  421005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421009:	8b 40 08             	mov    0x8(%rax),%eax
  42100c:	8d 48 01             	lea    0x1(%rax),%ecx
  42100f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  421013:	89 4a 08             	mov    %ecx,0x8(%rdx)
  421016:	48 63 d0             	movslq %eax,%rdx
  421019:	48 89 d0             	mov    %rdx,%rax
  42101c:	48 01 c0             	add    %rax,%rax
  42101f:	48 01 d0             	add    %rdx,%rax
  421022:	48 c1 e0 03          	shl    $0x3,%rax
  421026:	48 01 f0             	add    %rsi,%rax
  421029:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42102d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421031:	c6 40 09 00          	movb   $0x0,0x9(%rax)
  421035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421039:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42103d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  421041:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421045:	8b 40 08             	mov    0x8(%rax),%eax
  421048:	8d 50 ff             	lea    -0x1(%rax),%edx
  42104b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42104f:	8b 40 38             	mov    0x38(%rax),%eax
  421052:	29 c2                	sub    %eax,%edx
  421054:	89 d0                	mov    %edx,%eax
  421056:	c9                   	leaveq 
  421057:	c3                   	retq   

0000000000421058 <getlocalvardesc>:
  421058:	55                   	push   %rbp
  421059:	48 89 e5             	mov    %rsp,%rbp
  42105c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  421060:	89 75 f4             	mov    %esi,-0xc(%rbp)
  421063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421067:	48 8b 40 10          	mov    0x10(%rax),%rax
  42106b:	48 8b 40 58          	mov    0x58(%rax),%rax
  42106f:	48 8b 08             	mov    (%rax),%rcx
  421072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421076:	8b 50 38             	mov    0x38(%rax),%edx
  421079:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42107c:	01 d0                	add    %edx,%eax
  42107e:	48 63 d0             	movslq %eax,%rdx
  421081:	48 89 d0             	mov    %rdx,%rax
  421084:	48 01 c0             	add    %rax,%rax
  421087:	48 01 d0             	add    %rdx,%rax
  42108a:	48 c1 e0 03          	shl    $0x3,%rax
  42108e:	48 01 c8             	add    %rcx,%rax
  421091:	5d                   	pop    %rbp
  421092:	c3                   	retq   

0000000000421093 <reglevel>:
  421093:	55                   	push   %rbp
  421094:	48 89 e5             	mov    %rsp,%rbp
  421097:	48 83 ec 20          	sub    $0x20,%rsp
  42109b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42109f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4210a2:	eb 31                	jmp    4210d5 <reglevel+0x42>
  4210a4:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4210a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4210ab:	89 d6                	mov    %edx,%esi
  4210ad:	48 89 c7             	mov    %rax,%rdi
  4210b0:	e8 a3 ff ff ff       	callq  421058 <getlocalvardesc>
  4210b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4210b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4210bd:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4210c1:	3c 03                	cmp    $0x3,%al
  4210c3:	74 10                	je     4210d5 <reglevel+0x42>
  4210c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4210c9:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  4210cd:	0f b6 c0             	movzbl %al,%eax
  4210d0:	83 c0 01             	add    $0x1,%eax
  4210d3:	eb 12                	jmp    4210e7 <reglevel+0x54>
  4210d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4210d8:	8d 50 ff             	lea    -0x1(%rax),%edx
  4210db:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  4210de:	85 c0                	test   %eax,%eax
  4210e0:	7f c2                	jg     4210a4 <reglevel+0x11>
  4210e2:	b8 00 00 00 00       	mov    $0x0,%eax
  4210e7:	c9                   	leaveq 
  4210e8:	c3                   	retq   

00000000004210e9 <luaY_nvarstack>:
  4210e9:	55                   	push   %rbp
  4210ea:	48 89 e5             	mov    %rsp,%rbp
  4210ed:	48 83 ec 08          	sub    $0x8,%rsp
  4210f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4210f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4210f9:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  4210fd:	0f b6 d0             	movzbl %al,%edx
  421100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421104:	89 d6                	mov    %edx,%esi
  421106:	48 89 c7             	mov    %rax,%rdi
  421109:	e8 85 ff ff ff       	callq  421093 <reglevel>
  42110e:	c9                   	leaveq 
  42110f:	c3                   	retq   

0000000000421110 <localdebuginfo>:
  421110:	55                   	push   %rbp
  421111:	48 89 e5             	mov    %rsp,%rbp
  421114:	48 83 ec 20          	sub    $0x20,%rsp
  421118:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42111c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42111f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  421122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421126:	89 d6                	mov    %edx,%esi
  421128:	48 89 c7             	mov    %rax,%rdi
  42112b:	e8 28 ff ff ff       	callq  421058 <getlocalvardesc>
  421130:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421138:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42113c:	3c 03                	cmp    $0x3,%al
  42113e:	75 07                	jne    421147 <localdebuginfo+0x37>
  421140:	b8 00 00 00 00       	mov    $0x0,%eax
  421145:	eb 24                	jmp    42116b <localdebuginfo+0x5b>
  421147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42114b:	0f b7 40 0c          	movzwl 0xc(%rax),%eax
  42114f:	98                   	cwtl   
  421150:	89 45 f4             	mov    %eax,-0xc(%rbp)
  421153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421157:	48 8b 00             	mov    (%rax),%rax
  42115a:	48 8b 40 68          	mov    0x68(%rax),%rax
  42115e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  421161:	48 63 d2             	movslq %edx,%rdx
  421164:	48 c1 e2 04          	shl    $0x4,%rdx
  421168:	48 01 d0             	add    %rdx,%rax
  42116b:	c9                   	leaveq 
  42116c:	c3                   	retq   

000000000042116d <init_var>:
  42116d:	55                   	push   %rbp
  42116e:	48 89 e5             	mov    %rsp,%rbp
  421171:	48 83 ec 18          	sub    $0x18,%rsp
  421175:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  421179:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42117d:	89 55 ec             	mov    %edx,-0x14(%rbp)
  421180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421184:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
  42118b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42118f:	8b 50 10             	mov    0x10(%rax),%edx
  421192:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421196:	89 50 14             	mov    %edx,0x14(%rax)
  421199:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42119d:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
  4211a3:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4211a6:	89 c2                	mov    %eax,%edx
  4211a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4211ac:	66 89 50 0a          	mov    %dx,0xa(%rax)
  4211b0:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4211b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4211b7:	89 d6                	mov    %edx,%esi
  4211b9:	48 89 c7             	mov    %rax,%rdi
  4211bc:	e8 97 fe ff ff       	callq  421058 <getlocalvardesc>
  4211c1:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
  4211c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4211c9:	88 50 08             	mov    %dl,0x8(%rax)
  4211cc:	90                   	nop
  4211cd:	c9                   	leaveq 
  4211ce:	c3                   	retq   

00000000004211cf <check_readonly>:
  4211cf:	55                   	push   %rbp
  4211d0:	48 89 e5             	mov    %rsp,%rbp
  4211d3:	48 83 ec 40          	sub    $0x40,%rsp
  4211d7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4211db:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4211df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4211e3:	48 8b 40 30          	mov    0x30(%rax),%rax
  4211e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4211eb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4211f2:	00 
  4211f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4211f7:	8b 00                	mov    (%rax),%eax
  4211f9:	83 f8 0a             	cmp    $0xa,%eax
  4211fc:	74 75                	je     421273 <check_readonly+0xa4>
  4211fe:	83 f8 0b             	cmp    $0xb,%eax
  421201:	74 0a                	je     42120d <check_readonly+0x3e>
  421203:	83 f8 09             	cmp    $0x9,%eax
  421206:	74 34                	je     42123c <check_readonly+0x6d>
  421208:	e9 e2 00 00 00       	jmpq   4212ef <check_readonly+0x120>
  42120d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421211:	48 8b 40 58          	mov    0x58(%rax),%rax
  421215:	48 8b 08             	mov    (%rax),%rcx
  421218:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42121c:	8b 40 08             	mov    0x8(%rax),%eax
  42121f:	48 63 d0             	movslq %eax,%rdx
  421222:	48 89 d0             	mov    %rdx,%rax
  421225:	48 01 c0             	add    %rax,%rax
  421228:	48 01 d0             	add    %rdx,%rax
  42122b:	48 c1 e0 03          	shl    $0x3,%rax
  42122f:	48 01 c8             	add    %rcx,%rax
  421232:	48 8b 40 10          	mov    0x10(%rax),%rax
  421236:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42123a:	eb 73                	jmp    4212af <check_readonly+0xe0>
  42123c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  421240:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  421244:	0f b7 d0             	movzwl %ax,%edx
  421247:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42124b:	89 d6                	mov    %edx,%esi
  42124d:	48 89 c7             	mov    %rax,%rdi
  421250:	e8 03 fe ff ff       	callq  421058 <getlocalvardesc>
  421255:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  421259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42125d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  421261:	84 c0                	test   %al,%al
  421263:	74 46                	je     4212ab <check_readonly+0xdc>
  421265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421269:	48 8b 40 10          	mov    0x10(%rax),%rax
  42126d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421271:	eb 38                	jmp    4212ab <check_readonly+0xdc>
  421273:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421277:	48 8b 00             	mov    (%rax),%rax
  42127a:	48 8b 50 50          	mov    0x50(%rax),%rdx
  42127e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  421282:	8b 40 08             	mov    0x8(%rax),%eax
  421285:	48 98                	cltq   
  421287:	48 c1 e0 04          	shl    $0x4,%rax
  42128b:	48 01 d0             	add    %rdx,%rax
  42128e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  421292:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421296:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42129a:	84 c0                	test   %al,%al
  42129c:	74 10                	je     4212ae <check_readonly+0xdf>
  42129e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4212a2:	48 8b 00             	mov    (%rax),%rax
  4212a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4212a9:	eb 03                	jmp    4212ae <check_readonly+0xdf>
  4212ab:	90                   	nop
  4212ac:	eb 01                	jmp    4212af <check_readonly+0xe0>
  4212ae:	90                   	nop
  4212af:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4212b4:	74 39                	je     4212ef <check_readonly+0x120>
  4212b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4212ba:	48 8d 50 18          	lea    0x18(%rax),%rdx
  4212be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4212c2:	48 8b 40 38          	mov    0x38(%rax),%rax
  4212c6:	be 48 10 44 00       	mov    $0x441048,%esi
  4212cb:	48 89 c7             	mov    %rax,%rdi
  4212ce:	b8 00 00 00 00       	mov    $0x0,%eax
  4212d3:	e8 87 e9 ff ff       	callq  41fc5f <luaO_pushfstring>
  4212d8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4212dc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4212e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4212e4:	48 89 d6             	mov    %rdx,%rsi
  4212e7:	48 89 c7             	mov    %rax,%rdi
  4212ea:	e8 42 85 fe ff       	callq  409831 <luaK_semerror>
  4212ef:	c9                   	leaveq 
  4212f0:	c3                   	retq   

00000000004212f1 <adjustlocalvars>:
  4212f1:	55                   	push   %rbp
  4212f2:	48 89 e5             	mov    %rsp,%rbp
  4212f5:	48 83 ec 30          	sub    $0x30,%rsp
  4212f9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4212fd:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  421300:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421304:	48 8b 40 30          	mov    0x30(%rax),%rax
  421308:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42130c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421310:	48 89 c7             	mov    %rax,%rdi
  421313:	e8 d1 fd ff ff       	callq  4210e9 <luaY_nvarstack>
  421318:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42131b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  421322:	eb 68                	jmp    42138c <adjustlocalvars+0x9b>
  421324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421328:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  42132c:	8d 48 01             	lea    0x1(%rax),%ecx
  42132f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  421333:	88 4a 42             	mov    %cl,0x42(%rdx)
  421336:	0f b6 c0             	movzbl %al,%eax
  421339:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42133c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42133f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421343:	89 d6                	mov    %edx,%esi
  421345:	48 89 c7             	mov    %rax,%rdi
  421348:	e8 0b fd ff ff       	callq  421058 <getlocalvardesc>
  42134d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  421351:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421354:	8d 50 01             	lea    0x1(%rax),%edx
  421357:	89 55 fc             	mov    %edx,-0x4(%rbp)
  42135a:	89 c2                	mov    %eax,%edx
  42135c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421360:	88 50 0a             	mov    %dl,0xa(%rax)
  421363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421367:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42136b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42136f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421373:	48 89 ce             	mov    %rcx,%rsi
  421376:	48 89 c7             	mov    %rax,%rdi
  421379:	e8 92 fa ff ff       	callq  420e10 <registerlocalvar>
  42137e:	89 c2                	mov    %eax,%edx
  421380:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421384:	66 89 50 0c          	mov    %dx,0xc(%rax)
  421388:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  42138c:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42138f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  421392:	7c 90                	jl     421324 <adjustlocalvars+0x33>
  421394:	90                   	nop
  421395:	c9                   	leaveq 
  421396:	c3                   	retq   

0000000000421397 <removevars>:
  421397:	55                   	push   %rbp
  421398:	48 89 e5             	mov    %rsp,%rbp
  42139b:	48 83 ec 20          	sub    $0x20,%rsp
  42139f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4213a3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4213a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213aa:	48 8b 40 10          	mov    0x10(%rax),%rax
  4213ae:	48 8b 40 58          	mov    0x58(%rax),%rax
  4213b2:	8b 48 08             	mov    0x8(%rax),%ecx
  4213b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213b9:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  4213bd:	0f b6 c0             	movzbl %al,%eax
  4213c0:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  4213c3:	89 c2                	mov    %eax,%edx
  4213c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213c9:	48 8b 40 10          	mov    0x10(%rax),%rax
  4213cd:	48 8b 40 58          	mov    0x58(%rax),%rax
  4213d1:	29 d1                	sub    %edx,%ecx
  4213d3:	89 ca                	mov    %ecx,%edx
  4213d5:	89 50 08             	mov    %edx,0x8(%rax)
  4213d8:	eb 44                	jmp    42141e <removevars+0x87>
  4213da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213de:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  4213e2:	8d 50 ff             	lea    -0x1(%rax),%edx
  4213e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213e9:	88 50 42             	mov    %dl,0x42(%rax)
  4213ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213f0:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  4213f4:	0f b6 d0             	movzbl %al,%edx
  4213f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4213fb:	89 d6                	mov    %edx,%esi
  4213fd:	48 89 c7             	mov    %rax,%rdi
  421400:	e8 0b fd ff ff       	callq  421110 <localdebuginfo>
  421405:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421409:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42140e:	74 0e                	je     42141e <removevars+0x87>
  421410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421414:	8b 50 20             	mov    0x20(%rax),%edx
  421417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42141b:	89 50 0c             	mov    %edx,0xc(%rax)
  42141e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421422:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  421426:	0f b6 c0             	movzbl %al,%eax
  421429:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  42142c:	7c ac                	jl     4213da <removevars+0x43>
  42142e:	90                   	nop
  42142f:	c9                   	leaveq 
  421430:	c3                   	retq   

0000000000421431 <searchupvalue>:
  421431:	55                   	push   %rbp
  421432:	48 89 e5             	mov    %rsp,%rbp
  421435:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  421439:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42143d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421441:	48 8b 00             	mov    (%rax),%rax
  421444:	48 8b 40 50          	mov    0x50(%rax),%rax
  421448:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42144c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  421453:	eb 25                	jmp    42147a <searchupvalue+0x49>
  421455:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421458:	48 98                	cltq   
  42145a:	48 c1 e0 04          	shl    $0x4,%rax
  42145e:	48 89 c2             	mov    %rax,%rdx
  421461:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421465:	48 01 d0             	add    %rdx,%rax
  421468:	48 8b 00             	mov    (%rax),%rax
  42146b:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42146f:	75 05                	jne    421476 <searchupvalue+0x45>
  421471:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421474:	eb 19                	jmp    42148f <searchupvalue+0x5e>
  421476:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42147a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42147e:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  421482:	0f b6 c0             	movzbl %al,%eax
  421485:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  421488:	7c cb                	jl     421455 <searchupvalue+0x24>
  42148a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  42148f:	5d                   	pop    %rbp
  421490:	c3                   	retq   

0000000000421491 <allocupvalue>:
  421491:	55                   	push   %rbp
  421492:	48 89 e5             	mov    %rsp,%rbp
  421495:	48 83 ec 20          	sub    $0x20,%rsp
  421499:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42149d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4214a1:	48 8b 00             	mov    (%rax),%rax
  4214a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4214a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4214ac:	8b 40 10             	mov    0x10(%rax),%eax
  4214af:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4214b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4214b6:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  4214ba:	0f b6 c0             	movzbl %al,%eax
  4214bd:	8d 70 01             	lea    0x1(%rax),%esi
  4214c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4214c4:	b9 71 10 44 00       	mov    $0x441071,%ecx
  4214c9:	ba ff 00 00 00       	mov    $0xff,%edx
  4214ce:	48 89 c7             	mov    %rax,%rdi
  4214d1:	e8 d1 f6 ff ff       	callq  420ba7 <checklimit>
  4214d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4214da:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4214de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4214e2:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  4214e6:	0f b6 d0             	movzbl %al,%edx
  4214e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4214ed:	48 8b 70 50          	mov    0x50(%rax),%rsi
  4214f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4214f5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4214f9:	48 8b 40 38          	mov    0x38(%rax),%rax
  4214fd:	48 83 ec 08          	sub    $0x8,%rsp
  421501:	68 71 10 44 00       	pushq  $0x441071
  421506:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
  42150c:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  421512:	48 89 c7             	mov    %rax,%rdi
  421515:	e8 07 ba ff ff       	callq  41cf21 <luaM_growaux_>
  42151a:	48 83 c4 10          	add    $0x10,%rsp
  42151e:	48 89 c2             	mov    %rax,%rdx
  421521:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421525:	48 89 50 50          	mov    %rdx,0x50(%rax)
  421529:	eb 21                	jmp    42154c <allocupvalue+0xbb>
  42152b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42152f:	48 8b 48 50          	mov    0x50(%rax),%rcx
  421533:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421536:	8d 50 01             	lea    0x1(%rax),%edx
  421539:	89 55 fc             	mov    %edx,-0x4(%rbp)
  42153c:	48 98                	cltq   
  42153e:	48 c1 e0 04          	shl    $0x4,%rax
  421542:	48 01 c8             	add    %rcx,%rax
  421545:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  42154c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421550:	8b 40 10             	mov    0x10(%rax),%eax
  421553:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  421556:	7c d3                	jl     42152b <allocupvalue+0x9a>
  421558:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42155c:	48 8b 70 50          	mov    0x50(%rax),%rsi
  421560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421564:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  421568:	8d 48 01             	lea    0x1(%rax),%ecx
  42156b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42156f:	88 4a 43             	mov    %cl,0x43(%rdx)
  421572:	0f b6 c0             	movzbl %al,%eax
  421575:	48 c1 e0 04          	shl    $0x4,%rax
  421579:	48 01 f0             	add    %rsi,%rax
  42157c:	c9                   	leaveq 
  42157d:	c3                   	retq   

000000000042157e <newupvalue>:
  42157e:	55                   	push   %rbp
  42157f:	48 89 e5             	mov    %rsp,%rbp
  421582:	48 83 ec 30          	sub    $0x30,%rsp
  421586:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42158a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42158e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  421592:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421596:	48 89 c7             	mov    %rax,%rdi
  421599:	e8 f3 fe ff ff       	callq  421491 <allocupvalue>
  42159e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4215a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4215a6:	48 8b 40 08          	mov    0x8(%rax),%rax
  4215aa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4215ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4215b2:	8b 00                	mov    (%rax),%eax
  4215b4:	83 f8 09             	cmp    $0x9,%eax
  4215b7:	75 3d                	jne    4215f6 <newupvalue+0x78>
  4215b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4215bd:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  4215c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4215c5:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4215c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4215cd:	88 50 09             	mov    %dl,0x9(%rax)
  4215d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4215d4:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4215d8:	0f b7 d0             	movzwl %ax,%edx
  4215db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4215df:	89 d6                	mov    %edx,%esi
  4215e1:	48 89 c7             	mov    %rax,%rdi
  4215e4:	e8 6f fa ff ff       	callq  421058 <getlocalvardesc>
  4215e9:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  4215ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4215f1:	88 50 0a             	mov    %dl,0xa(%rax)
  4215f4:	eb 3e                	jmp    421634 <newupvalue+0xb6>
  4215f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4215fa:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4215fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421602:	8b 40 08             	mov    0x8(%rax),%eax
  421605:	89 c2                	mov    %eax,%edx
  421607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42160b:	88 50 09             	mov    %dl,0x9(%rax)
  42160e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421612:	48 8b 00             	mov    (%rax),%rax
  421615:	48 8b 50 50          	mov    0x50(%rax),%rdx
  421619:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42161d:	8b 40 08             	mov    0x8(%rax),%eax
  421620:	48 98                	cltq   
  421622:	48 c1 e0 04          	shl    $0x4,%rax
  421626:	48 01 d0             	add    %rdx,%rax
  421629:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
  42162d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421631:	88 50 0a             	mov    %dl,0xa(%rax)
  421634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421638:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42163c:	48 89 10             	mov    %rdx,(%rax)
  42163f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421643:	48 8b 00             	mov    (%rax),%rax
  421646:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42164a:	0f b6 c0             	movzbl %al,%eax
  42164d:	83 e0 20             	and    $0x20,%eax
  421650:	85 c0                	test   %eax,%eax
  421652:	74 37                	je     42168b <newupvalue+0x10d>
  421654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421658:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42165c:	0f b6 c0             	movzbl %al,%eax
  42165f:	83 e0 18             	and    $0x18,%eax
  421662:	85 c0                	test   %eax,%eax
  421664:	74 25                	je     42168b <newupvalue+0x10d>
  421666:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42166a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42166e:	48 8b 00             	mov    (%rax),%rax
  421671:	48 89 c1             	mov    %rax,%rcx
  421674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421678:	48 8b 40 10          	mov    0x10(%rax),%rax
  42167c:	48 8b 40 38          	mov    0x38(%rax),%rax
  421680:	48 89 ce             	mov    %rcx,%rsi
  421683:	48 89 c7             	mov    %rax,%rdi
  421686:	e8 c4 33 ff ff       	callq  414a4f <luaC_barrier_>
  42168b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42168f:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  421693:	0f b6 c0             	movzbl %al,%eax
  421696:	83 e8 01             	sub    $0x1,%eax
  421699:	c9                   	leaveq 
  42169a:	c3                   	retq   

000000000042169b <searchvar>:
  42169b:	55                   	push   %rbp
  42169c:	48 89 e5             	mov    %rsp,%rbp
  42169f:	48 83 ec 28          	sub    $0x28,%rsp
  4216a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4216a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4216ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4216af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4216b3:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  4216b7:	0f b6 c0             	movzbl %al,%eax
  4216ba:	83 e8 01             	sub    $0x1,%eax
  4216bd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4216c0:	eb 70                	jmp    421732 <searchvar+0x97>
  4216c2:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4216c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4216c9:	89 d6                	mov    %edx,%esi
  4216cb:	48 89 c7             	mov    %rax,%rdi
  4216ce:	e8 85 f9 ff ff       	callq  421058 <getlocalvardesc>
  4216d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4216d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4216db:	48 8b 40 10          	mov    0x10(%rax),%rax
  4216df:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4216e3:	75 49                	jne    42172e <searchvar+0x93>
  4216e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4216e9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4216ed:	3c 03                	cmp    $0x3,%al
  4216ef:	75 1f                	jne    421710 <searchvar+0x75>
  4216f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4216f5:	8b 50 38             	mov    0x38(%rax),%edx
  4216f8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4216fb:	01 c2                	add    %eax,%edx
  4216fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421701:	be 0b 00 00 00       	mov    $0xb,%esi
  421706:	48 89 c7             	mov    %rax,%rdi
  421709:	e8 56 f6 ff ff       	callq  420d64 <init_exp>
  42170e:	eb 16                	jmp    421726 <searchvar+0x8b>
  421710:	8b 55 fc             	mov    -0x4(%rbp),%edx
  421713:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  421717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42171b:	48 89 ce             	mov    %rcx,%rsi
  42171e:	48 89 c7             	mov    %rax,%rdi
  421721:	e8 47 fa ff ff       	callq  42116d <init_var>
  421726:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42172a:	8b 00                	mov    (%rax),%eax
  42172c:	eb 0f                	jmp    42173d <searchvar+0xa2>
  42172e:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  421732:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  421736:	79 8a                	jns    4216c2 <searchvar+0x27>
  421738:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  42173d:	c9                   	leaveq 
  42173e:	c3                   	retq   

000000000042173f <markupval>:
  42173f:	55                   	push   %rbp
  421740:	48 89 e5             	mov    %rsp,%rbp
  421743:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  421747:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42174a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42174e:	48 8b 40 18          	mov    0x18(%rax),%rax
  421752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421756:	eb 0b                	jmp    421763 <markupval+0x24>
  421758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42175c:	48 8b 00             	mov    (%rax),%rax
  42175f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421767:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  42176b:	0f b6 c0             	movzbl %al,%eax
  42176e:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  421771:	7c e5                	jl     421758 <markupval+0x19>
  421773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421777:	c6 40 11 01          	movb   $0x1,0x11(%rax)
  42177b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42177f:	c6 40 46 01          	movb   $0x1,0x46(%rax)
  421783:	90                   	nop
  421784:	5d                   	pop    %rbp
  421785:	c3                   	retq   

0000000000421786 <marktobeclosed>:
  421786:	55                   	push   %rbp
  421787:	48 89 e5             	mov    %rsp,%rbp
  42178a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42178e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421792:	48 8b 40 18          	mov    0x18(%rax),%rax
  421796:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42179a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42179e:	c6 40 11 01          	movb   $0x1,0x11(%rax)
  4217a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4217a6:	c6 40 13 01          	movb   $0x1,0x13(%rax)
  4217aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4217ae:	c6 40 46 01          	movb   $0x1,0x46(%rax)
  4217b2:	90                   	nop
  4217b3:	5d                   	pop    %rbp
  4217b4:	c3                   	retq   

00000000004217b5 <singlevaraux>:
  4217b5:	55                   	push   %rbp
  4217b6:	48 89 e5             	mov    %rsp,%rbp
  4217b9:	48 83 ec 30          	sub    $0x30,%rsp
  4217bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4217c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4217c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4217c9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4217cc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4217d1:	75 1b                	jne    4217ee <singlevaraux+0x39>
  4217d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4217d7:	ba 00 00 00 00       	mov    $0x0,%edx
  4217dc:	be 00 00 00 00       	mov    $0x0,%esi
  4217e1:	48 89 c7             	mov    %rax,%rdi
  4217e4:	e8 7b f5 ff ff       	callq  420d64 <init_exp>
  4217e9:	e9 d3 00 00 00       	jmpq   4218c1 <singlevaraux+0x10c>
  4217ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4217f2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4217f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4217fa:	48 89 ce             	mov    %rcx,%rsi
  4217fd:	48 89 c7             	mov    %rax,%rdi
  421800:	e8 96 fe ff ff       	callq  42169b <searchvar>
  421805:	89 45 f8             	mov    %eax,-0x8(%rbp)
  421808:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  42180c:	78 32                	js     421840 <singlevaraux+0x8b>
  42180e:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
  421812:	0f 85 a9 00 00 00    	jne    4218c1 <singlevaraux+0x10c>
  421818:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  42181c:	0f 85 9f 00 00 00    	jne    4218c1 <singlevaraux+0x10c>
  421822:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421826:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  42182a:	0f b7 d0             	movzwl %ax,%edx
  42182d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421831:	89 d6                	mov    %edx,%esi
  421833:	48 89 c7             	mov    %rax,%rdi
  421836:	e8 04 ff ff ff       	callq  42173f <markupval>
  42183b:	e9 81 00 00 00       	jmpq   4218c1 <singlevaraux+0x10c>
  421840:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  421844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421848:	48 89 d6             	mov    %rdx,%rsi
  42184b:	48 89 c7             	mov    %rax,%rdi
  42184e:	e8 de fb ff ff       	callq  421431 <searchupvalue>
  421853:	89 45 fc             	mov    %eax,-0x4(%rbp)
  421856:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42185a:	79 4e                	jns    4218aa <singlevaraux+0xf5>
  42185c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421860:	48 8b 40 08          	mov    0x8(%rax),%rax
  421864:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  421868:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42186c:	b9 00 00 00 00       	mov    $0x0,%ecx
  421871:	48 89 c7             	mov    %rax,%rdi
  421874:	e8 3c ff ff ff       	callq  4217b5 <singlevaraux>
  421879:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42187d:	8b 00                	mov    (%rax),%eax
  42187f:	83 f8 09             	cmp    $0x9,%eax
  421882:	74 0b                	je     42188f <singlevaraux+0xda>
  421884:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421888:	8b 00                	mov    (%rax),%eax
  42188a:	83 f8 0a             	cmp    $0xa,%eax
  42188d:	75 31                	jne    4218c0 <singlevaraux+0x10b>
  42188f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  421893:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  421897:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42189b:	48 89 ce             	mov    %rcx,%rsi
  42189e:	48 89 c7             	mov    %rax,%rdi
  4218a1:	e8 d8 fc ff ff       	callq  42157e <newupvalue>
  4218a6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4218a9:	90                   	nop
  4218aa:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4218ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4218b1:	be 0a 00 00 00       	mov    $0xa,%esi
  4218b6:	48 89 c7             	mov    %rax,%rdi
  4218b9:	e8 a6 f4 ff ff       	callq  420d64 <init_exp>
  4218be:	eb 01                	jmp    4218c1 <singlevaraux+0x10c>
  4218c0:	90                   	nop
  4218c1:	c9                   	leaveq 
  4218c2:	c3                   	retq   

00000000004218c3 <singlevar>:
  4218c3:	55                   	push   %rbp
  4218c4:	48 89 e5             	mov    %rsp,%rbp
  4218c7:	48 83 ec 40          	sub    $0x40,%rsp
  4218cb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4218cf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4218d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4218d7:	48 89 c7             	mov    %rax,%rdi
  4218da:	e8 4a f4 ff ff       	callq  420d29 <str_checkname>
  4218df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4218e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4218e7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4218eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4218ef:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4218f3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  4218f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4218fb:	b9 01 00 00 00       	mov    $0x1,%ecx
  421900:	48 89 c7             	mov    %rax,%rdi
  421903:	e8 ad fe ff ff       	callq  4217b5 <singlevaraux>
  421908:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42190c:	8b 00                	mov    (%rax),%eax
  42190e:	85 c0                	test   %eax,%eax
  421910:	75 5a                	jne    42196c <singlevar+0xa9>
  421912:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421916:	48 8b 70 68          	mov    0x68(%rax),%rsi
  42191a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42191e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421922:	b9 01 00 00 00       	mov    $0x1,%ecx
  421927:	48 89 c7             	mov    %rax,%rdi
  42192a:	e8 86 fe ff ff       	callq  4217b5 <singlevaraux>
  42192f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  421933:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421937:	48 89 d6             	mov    %rdx,%rsi
  42193a:	48 89 c7             	mov    %rax,%rdi
  42193d:	e8 7a 9c fe ff       	callq  40b5bc <luaK_exp2anyregup>
  421942:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  421946:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42194a:	48 89 d6             	mov    %rdx,%rsi
  42194d:	48 89 c7             	mov    %rax,%rdi
  421950:	e8 4c f4 ff ff       	callq  420da1 <codestring>
  421955:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  421959:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42195d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421961:	48 89 ce             	mov    %rcx,%rsi
  421964:	48 89 c7             	mov    %rax,%rdi
  421967:	e8 18 a6 fe ff       	callq  40bf84 <luaK_indexed>
  42196c:	90                   	nop
  42196d:	c9                   	leaveq 
  42196e:	c3                   	retq   

000000000042196f <adjust_assign>:
  42196f:	55                   	push   %rbp
  421970:	48 89 e5             	mov    %rsp,%rbp
  421973:	48 83 ec 40          	sub    $0x40,%rsp
  421977:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42197b:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  42197e:	89 55 d0             	mov    %edx,-0x30(%rbp)
  421981:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  421985:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421989:	48 8b 40 30          	mov    0x30(%rax),%rax
  42198d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421991:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  421994:	2b 45 d0             	sub    -0x30(%rbp),%eax
  421997:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42199a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42199e:	8b 00                	mov    (%rax),%eax
  4219a0:	83 f8 12             	cmp    $0x12,%eax
  4219a3:	74 0b                	je     4219b0 <adjust_assign+0x41>
  4219a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4219a9:	8b 00                	mov    (%rax),%eax
  4219ab:	83 f8 13             	cmp    $0x13,%eax
  4219ae:	75 2e                	jne    4219de <adjust_assign+0x6f>
  4219b0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4219b3:	83 c0 01             	add    $0x1,%eax
  4219b6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4219b9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4219bd:	79 07                	jns    4219c6 <adjust_assign+0x57>
  4219bf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4219c6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4219c9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4219cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4219d1:	48 89 ce             	mov    %rcx,%rsi
  4219d4:	48 89 c7             	mov    %rax,%rdi
  4219d7:	e8 ac 92 fe ff       	callq  40ac88 <luaK_setreturns>
  4219dc:	eb 3f                	jmp    421a1d <adjust_assign+0xae>
  4219de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4219e2:	8b 00                	mov    (%rax),%eax
  4219e4:	85 c0                	test   %eax,%eax
  4219e6:	74 13                	je     4219fb <adjust_assign+0x8c>
  4219e8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4219ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4219f0:	48 89 d6             	mov    %rdx,%rsi
  4219f3:	48 89 c7             	mov    %rax,%rdi
  4219f6:	e8 b1 9a fe ff       	callq  40b4ac <luaK_exp2nextreg>
  4219fb:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4219ff:	7e 1c                	jle    421a1d <adjust_assign+0xae>
  421a01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421a05:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  421a09:	0f b6 c8             	movzbl %al,%ecx
  421a0c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  421a0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421a13:	89 ce                	mov    %ecx,%esi
  421a15:	48 89 c7             	mov    %rax,%rdi
  421a18:	e8 66 80 fe ff       	callq  409a83 <luaK_nil>
  421a1d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  421a21:	7e 13                	jle    421a36 <adjust_assign+0xc7>
  421a23:	8b 55 ec             	mov    -0x14(%rbp),%edx
  421a26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421a2a:	89 d6                	mov    %edx,%esi
  421a2c:	48 89 c7             	mov    %rax,%rdi
  421a2f:	e8 ab 8a fe ff       	callq  40a4df <luaK_reserveregs>
  421a34:	eb 14                	jmp    421a4a <adjust_assign+0xdb>
  421a36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421a3a:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  421a3e:	8b 55 ec             	mov    -0x14(%rbp),%edx
  421a41:	01 c2                	add    %eax,%edx
  421a43:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421a47:	88 50 44             	mov    %dl,0x44(%rax)
  421a4a:	90                   	nop
  421a4b:	c9                   	leaveq 
  421a4c:	c3                   	retq   

0000000000421a4d <jumpscopeerror>:
  421a4d:	55                   	push   %rbp
  421a4e:	48 89 e5             	mov    %rsp,%rbp
  421a51:	48 83 ec 20          	sub    $0x20,%rsp
  421a55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  421a59:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  421a5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421a61:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  421a65:	0f b6 d0             	movzbl %al,%edx
  421a68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421a6c:	48 8b 40 30          	mov    0x30(%rax),%rax
  421a70:	89 d6                	mov    %edx,%esi
  421a72:	48 89 c7             	mov    %rax,%rdi
  421a75:	e8 de f5 ff ff       	callq  421058 <getlocalvardesc>
  421a7a:	48 8b 40 10          	mov    0x10(%rax),%rax
  421a7e:	48 83 c0 18          	add    $0x18,%rax
  421a82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421a86:	48 c7 45 f0 80 10 44 	movq   $0x441080,-0x10(%rbp)
  421a8d:	00 
  421a8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421a92:	8b 50 0c             	mov    0xc(%rax),%edx
  421a95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421a99:	48 8b 00             	mov    (%rax),%rax
  421a9c:	48 8d 78 18          	lea    0x18(%rax),%rdi
  421aa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421aa4:	48 8b 40 38          	mov    0x38(%rax),%rax
  421aa8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  421aac:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  421ab0:	49 89 c8             	mov    %rcx,%r8
  421ab3:	89 d1                	mov    %edx,%ecx
  421ab5:	48 89 fa             	mov    %rdi,%rdx
  421ab8:	48 89 c7             	mov    %rax,%rdi
  421abb:	b8 00 00 00 00       	mov    $0x0,%eax
  421ac0:	e8 9a e1 ff ff       	callq  41fc5f <luaO_pushfstring>
  421ac5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421ac9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  421acd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421ad1:	48 89 d6             	mov    %rdx,%rsi
  421ad4:	48 89 c7             	mov    %rax,%rdi
  421ad7:	e8 55 7d fe ff       	callq  409831 <luaK_semerror>

0000000000421adc <solvegoto>:
  421adc:	55                   	push   %rbp
  421add:	48 89 e5             	mov    %rsp,%rbp
  421ae0:	48 83 ec 40          	sub    $0x40,%rsp
  421ae4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  421ae8:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  421aeb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  421aef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421af3:	48 8b 40 58          	mov    0x58(%rax),%rax
  421af7:	48 83 c0 10          	add    $0x10,%rax
  421afb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421aff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421b03:	48 8b 08             	mov    (%rax),%rcx
  421b06:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  421b09:	48 63 d0             	movslq %eax,%rdx
  421b0c:	48 89 d0             	mov    %rdx,%rax
  421b0f:	48 01 c0             	add    %rax,%rax
  421b12:	48 01 d0             	add    %rdx,%rax
  421b15:	48 c1 e0 03          	shl    $0x3,%rax
  421b19:	48 01 c8             	add    %rcx,%rax
  421b1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  421b20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421b24:	0f b6 50 10          	movzbl 0x10(%rax),%edx
  421b28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421b2c:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  421b30:	38 c2                	cmp    %al,%dl
  421b32:	0f 92 c0             	setb   %al
  421b35:	0f b6 c0             	movzbl %al,%eax
  421b38:	48 85 c0             	test   %rax,%rax
  421b3b:	74 13                	je     421b50 <solvegoto+0x74>
  421b3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  421b41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421b45:	48 89 d6             	mov    %rdx,%rsi
  421b48:	48 89 c7             	mov    %rax,%rdi
  421b4b:	e8 fd fe ff ff       	callq  421a4d <jumpscopeerror>
  421b50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421b54:	8b 50 08             	mov    0x8(%rax),%edx
  421b57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421b5b:	8b 48 08             	mov    0x8(%rax),%ecx
  421b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421b62:	48 8b 40 30          	mov    0x30(%rax),%rax
  421b66:	89 ce                	mov    %ecx,%esi
  421b68:	48 89 c7             	mov    %rax,%rdi
  421b6b:	e8 2f 84 fe ff       	callq  409f9f <luaK_patchlist>
  421b70:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  421b73:	89 45 fc             	mov    %eax,-0x4(%rbp)
  421b76:	eb 58                	jmp    421bd0 <solvegoto+0xf4>
  421b78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421b7c:	48 8b 08             	mov    (%rax),%rcx
  421b7f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421b82:	48 98                	cltq   
  421b84:	48 8d 50 01          	lea    0x1(%rax),%rdx
  421b88:	48 89 d0             	mov    %rdx,%rax
  421b8b:	48 01 c0             	add    %rax,%rax
  421b8e:	48 01 d0             	add    %rdx,%rax
  421b91:	48 c1 e0 03          	shl    $0x3,%rax
  421b95:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  421b99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421b9d:	48 8b 08             	mov    (%rax),%rcx
  421ba0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421ba3:	48 63 d0             	movslq %eax,%rdx
  421ba6:	48 89 d0             	mov    %rdx,%rax
  421ba9:	48 01 c0             	add    %rax,%rax
  421bac:	48 01 d0             	add    %rdx,%rax
  421baf:	48 c1 e0 03          	shl    $0x3,%rax
  421bb3:	48 01 c1             	add    %rax,%rcx
  421bb6:	48 8b 06             	mov    (%rsi),%rax
  421bb9:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  421bbd:	48 89 01             	mov    %rax,(%rcx)
  421bc0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  421bc4:	48 8b 46 10          	mov    0x10(%rsi),%rax
  421bc8:	48 89 41 10          	mov    %rax,0x10(%rcx)
  421bcc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  421bd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421bd4:	8b 40 08             	mov    0x8(%rax),%eax
  421bd7:	83 e8 01             	sub    $0x1,%eax
  421bda:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  421bdd:	7c 99                	jl     421b78 <solvegoto+0x9c>
  421bdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421be3:	8b 40 08             	mov    0x8(%rax),%eax
  421be6:	8d 50 ff             	lea    -0x1(%rax),%edx
  421be9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421bed:	89 50 08             	mov    %edx,0x8(%rax)
  421bf0:	90                   	nop
  421bf1:	c9                   	leaveq 
  421bf2:	c3                   	retq   

0000000000421bf3 <findlabel>:
  421bf3:	55                   	push   %rbp
  421bf4:	48 89 e5             	mov    %rsp,%rbp
  421bf7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  421bfb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  421bff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421c03:	48 8b 40 58          	mov    0x58(%rax),%rax
  421c07:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421c0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421c0f:	48 8b 40 30          	mov    0x30(%rax),%rax
  421c13:	8b 40 3c             	mov    0x3c(%rax),%eax
  421c16:	89 45 fc             	mov    %eax,-0x4(%rbp)
  421c19:	eb 39                	jmp    421c54 <findlabel+0x61>
  421c1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421c1f:	48 8b 48 20          	mov    0x20(%rax),%rcx
  421c23:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421c26:	48 63 d0             	movslq %eax,%rdx
  421c29:	48 89 d0             	mov    %rdx,%rax
  421c2c:	48 01 c0             	add    %rax,%rax
  421c2f:	48 01 d0             	add    %rdx,%rax
  421c32:	48 c1 e0 03          	shl    $0x3,%rax
  421c36:	48 01 c8             	add    %rcx,%rax
  421c39:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  421c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421c41:	48 8b 00             	mov    (%rax),%rax
  421c44:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  421c48:	75 06                	jne    421c50 <findlabel+0x5d>
  421c4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421c4e:	eb 15                	jmp    421c65 <findlabel+0x72>
  421c50:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  421c54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421c58:	8b 40 28             	mov    0x28(%rax),%eax
  421c5b:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  421c5e:	7c bb                	jl     421c1b <findlabel+0x28>
  421c60:	b8 00 00 00 00       	mov    $0x0,%eax
  421c65:	5d                   	pop    %rbp
  421c66:	c3                   	retq   

0000000000421c67 <newlabelentry>:
  421c67:	55                   	push   %rbp
  421c68:	48 89 e5             	mov    %rsp,%rbp
  421c6b:	48 83 ec 30          	sub    $0x30,%rsp
  421c6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  421c73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  421c77:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  421c7b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  421c7e:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  421c82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421c86:	8b 40 08             	mov    0x8(%rax),%eax
  421c89:	89 45 fc             	mov    %eax,-0x4(%rbp)
  421c8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421c90:	48 8d 48 0c          	lea    0xc(%rax),%rcx
  421c94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421c98:	48 8b 30             	mov    (%rax),%rsi
  421c9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421c9f:	48 8b 40 38          	mov    0x38(%rax),%rax
  421ca3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  421ca6:	48 83 ec 08          	sub    $0x8,%rsp
  421caa:	68 b8 10 44 00       	pushq  $0x4410b8
  421caf:	41 b9 ff 7f 00 00    	mov    $0x7fff,%r9d
  421cb5:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  421cbb:	48 89 c7             	mov    %rax,%rdi
  421cbe:	e8 5e b2 ff ff       	callq  41cf21 <luaM_growaux_>
  421cc3:	48 83 c4 10          	add    $0x10,%rsp
  421cc7:	48 89 c2             	mov    %rax,%rdx
  421cca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421cce:	48 89 10             	mov    %rdx,(%rax)
  421cd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421cd5:	48 8b 08             	mov    (%rax),%rcx
  421cd8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421cdb:	48 63 d0             	movslq %eax,%rdx
  421cde:	48 89 d0             	mov    %rdx,%rax
  421ce1:	48 01 c0             	add    %rax,%rax
  421ce4:	48 01 d0             	add    %rdx,%rax
  421ce7:	48 c1 e0 03          	shl    $0x3,%rax
  421ceb:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  421cef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421cf3:	48 89 02             	mov    %rax,(%rdx)
  421cf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421cfa:	48 8b 08             	mov    (%rax),%rcx
  421cfd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d00:	48 63 d0             	movslq %eax,%rdx
  421d03:	48 89 d0             	mov    %rdx,%rax
  421d06:	48 01 c0             	add    %rax,%rax
  421d09:	48 01 d0             	add    %rdx,%rax
  421d0c:	48 c1 e0 03          	shl    $0x3,%rax
  421d10:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  421d14:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  421d17:	89 42 0c             	mov    %eax,0xc(%rdx)
  421d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421d1e:	48 8b 48 30          	mov    0x30(%rax),%rcx
  421d22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421d26:	48 8b 30             	mov    (%rax),%rsi
  421d29:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d2c:	48 63 d0             	movslq %eax,%rdx
  421d2f:	48 89 d0             	mov    %rdx,%rax
  421d32:	48 01 c0             	add    %rax,%rax
  421d35:	48 01 d0             	add    %rdx,%rax
  421d38:	48 c1 e0 03          	shl    $0x3,%rax
  421d3c:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  421d40:	0f b6 41 42          	movzbl 0x42(%rcx),%eax
  421d44:	88 42 10             	mov    %al,0x10(%rdx)
  421d47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421d4b:	48 8b 08             	mov    (%rax),%rcx
  421d4e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d51:	48 63 d0             	movslq %eax,%rdx
  421d54:	48 89 d0             	mov    %rdx,%rax
  421d57:	48 01 c0             	add    %rax,%rax
  421d5a:	48 01 d0             	add    %rdx,%rax
  421d5d:	48 c1 e0 03          	shl    $0x3,%rax
  421d61:	48 01 c8             	add    %rcx,%rax
  421d64:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  421d68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421d6c:	48 8b 08             	mov    (%rax),%rcx
  421d6f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d72:	48 63 d0             	movslq %eax,%rdx
  421d75:	48 89 d0             	mov    %rdx,%rax
  421d78:	48 01 c0             	add    %rax,%rax
  421d7b:	48 01 d0             	add    %rdx,%rax
  421d7e:	48 c1 e0 03          	shl    $0x3,%rax
  421d82:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  421d86:	8b 45 d0             	mov    -0x30(%rbp),%eax
  421d89:	89 42 08             	mov    %eax,0x8(%rdx)
  421d8c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d8f:	8d 50 01             	lea    0x1(%rax),%edx
  421d92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421d96:	89 50 08             	mov    %edx,0x8(%rax)
  421d99:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421d9c:	c9                   	leaveq 
  421d9d:	c3                   	retq   

0000000000421d9e <newgotoentry>:
  421d9e:	55                   	push   %rbp
  421d9f:	48 89 e5             	mov    %rsp,%rbp
  421da2:	48 83 ec 20          	sub    $0x20,%rsp
  421da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  421daa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  421dae:	89 55 ec             	mov    %edx,-0x14(%rbp)
  421db1:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  421db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421db8:	48 8b 40 58          	mov    0x58(%rax),%rax
  421dbc:	48 8d 70 10          	lea    0x10(%rax),%rsi
  421dc0:	8b 7d e8             	mov    -0x18(%rbp),%edi
  421dc3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  421dc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  421dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421dce:	41 89 f8             	mov    %edi,%r8d
  421dd1:	48 89 c7             	mov    %rax,%rdi
  421dd4:	e8 8e fe ff ff       	callq  421c67 <newlabelentry>
  421dd9:	c9                   	leaveq 
  421dda:	c3                   	retq   

0000000000421ddb <solvegotos>:
  421ddb:	55                   	push   %rbp
  421ddc:	48 89 e5             	mov    %rsp,%rbp
  421ddf:	48 83 ec 20          	sub    $0x20,%rsp
  421de3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  421de7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  421deb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421def:	48 8b 40 58          	mov    0x58(%rax),%rax
  421df3:	48 83 c0 10          	add    $0x10,%rax
  421df7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421dfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421dff:	48 8b 40 30          	mov    0x30(%rax),%rax
  421e03:	48 8b 40 18          	mov    0x18(%rax),%rax
  421e07:	8b 40 0c             	mov    0xc(%rax),%eax
  421e0a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  421e0d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  421e14:	eb 6e                	jmp    421e84 <solvegotos+0xa9>
  421e16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421e1a:	48 8b 08             	mov    (%rax),%rcx
  421e1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421e20:	48 63 d0             	movslq %eax,%rdx
  421e23:	48 89 d0             	mov    %rdx,%rax
  421e26:	48 01 c0             	add    %rax,%rax
  421e29:	48 01 d0             	add    %rdx,%rax
  421e2c:	48 c1 e0 03          	shl    $0x3,%rax
  421e30:	48 01 c8             	add    %rcx,%rax
  421e33:	48 8b 10             	mov    (%rax),%rdx
  421e36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421e3a:	48 8b 00             	mov    (%rax),%rax
  421e3d:	48 39 c2             	cmp    %rax,%rdx
  421e40:	75 3e                	jne    421e80 <solvegotos+0xa5>
  421e42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421e46:	48 8b 08             	mov    (%rax),%rcx
  421e49:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421e4c:	48 63 d0             	movslq %eax,%rdx
  421e4f:	48 89 d0             	mov    %rdx,%rax
  421e52:	48 01 c0             	add    %rax,%rax
  421e55:	48 01 d0             	add    %rdx,%rax
  421e58:	48 c1 e0 03          	shl    $0x3,%rax
  421e5c:	48 01 c8             	add    %rcx,%rax
  421e5f:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  421e63:	0f b6 c0             	movzbl %al,%eax
  421e66:	09 45 f8             	or     %eax,-0x8(%rbp)
  421e69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  421e6d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  421e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421e74:	89 ce                	mov    %ecx,%esi
  421e76:	48 89 c7             	mov    %rax,%rdi
  421e79:	e8 5e fc ff ff       	callq  421adc <solvegoto>
  421e7e:	eb 04                	jmp    421e84 <solvegotos+0xa9>
  421e80:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  421e84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421e88:	8b 40 08             	mov    0x8(%rax),%eax
  421e8b:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  421e8e:	7c 86                	jl     421e16 <solvegotos+0x3b>
  421e90:	8b 45 f8             	mov    -0x8(%rbp),%eax
  421e93:	c9                   	leaveq 
  421e94:	c3                   	retq   

0000000000421e95 <createlabel>:
  421e95:	55                   	push   %rbp
  421e96:	48 89 e5             	mov    %rsp,%rbp
  421e99:	48 83 ec 40          	sub    $0x40,%rsp
  421e9d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  421ea1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  421ea5:	89 55 cc             	mov    %edx,-0x34(%rbp)
  421ea8:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  421eab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421eaf:	48 8b 40 30          	mov    0x30(%rax),%rax
  421eb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421ebb:	48 8b 40 58          	mov    0x58(%rax),%rax
  421ebf:	48 83 c0 20          	add    $0x20,%rax
  421ec3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  421ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421ecb:	48 89 c7             	mov    %rax,%rdi
  421ece:	e8 de 7e fe ff       	callq  409db1 <luaK_getlabel>
  421ed3:	89 c7                	mov    %eax,%edi
  421ed5:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  421ed8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  421edc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  421ee0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421ee4:	41 89 f8             	mov    %edi,%r8d
  421ee7:	48 89 c7             	mov    %rax,%rdi
  421eea:	e8 78 fd ff ff       	callq  421c67 <newlabelentry>
  421eef:	89 45 ec             	mov    %eax,-0x14(%rbp)
  421ef2:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  421ef6:	74 2d                	je     421f25 <createlabel+0x90>
  421ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421efc:	48 8b 48 18          	mov    0x18(%rax),%rcx
  421f00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421f04:	48 8b 30             	mov    (%rax),%rsi
  421f07:	8b 45 ec             	mov    -0x14(%rbp),%eax
  421f0a:	48 63 d0             	movslq %eax,%rdx
  421f0d:	48 89 d0             	mov    %rdx,%rax
  421f10:	48 01 c0             	add    %rax,%rax
  421f13:	48 01 d0             	add    %rdx,%rax
  421f16:	48 c1 e0 03          	shl    $0x3,%rax
  421f1a:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  421f1e:	0f b6 41 10          	movzbl 0x10(%rcx),%eax
  421f22:	88 42 10             	mov    %al,0x10(%rdx)
  421f25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421f29:	48 8b 08             	mov    (%rax),%rcx
  421f2c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  421f2f:	48 63 d0             	movslq %eax,%rdx
  421f32:	48 89 d0             	mov    %rdx,%rax
  421f35:	48 01 c0             	add    %rax,%rax
  421f38:	48 01 d0             	add    %rdx,%rax
  421f3b:	48 c1 e0 03          	shl    $0x3,%rax
  421f3f:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  421f43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421f47:	48 89 d6             	mov    %rdx,%rsi
  421f4a:	48 89 c7             	mov    %rax,%rdi
  421f4d:	e8 89 fe ff ff       	callq  421ddb <solvegotos>
  421f52:	85 c0                	test   %eax,%eax
  421f54:	74 37                	je     421f8d <createlabel+0xf8>
  421f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421f5a:	48 89 c7             	mov    %rax,%rdi
  421f5d:	e8 87 f1 ff ff       	callq  4210e9 <luaY_nvarstack>
  421f62:	89 c2                	mov    %eax,%edx
  421f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421f68:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  421f6e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  421f74:	b9 00 00 00 00       	mov    $0x0,%ecx
  421f79:	be 36 00 00 00       	mov    $0x36,%esi
  421f7e:	48 89 c7             	mov    %rax,%rdi
  421f81:	e8 60 83 fe ff       	callq  40a2e6 <luaK_codeABCk>
  421f86:	b8 01 00 00 00       	mov    $0x1,%eax
  421f8b:	eb 05                	jmp    421f92 <createlabel+0xfd>
  421f8d:	b8 00 00 00 00       	mov    $0x0,%eax
  421f92:	c9                   	leaveq 
  421f93:	c3                   	retq   

0000000000421f94 <movegotosout>:
  421f94:	55                   	push   %rbp
  421f95:	48 89 e5             	mov    %rsp,%rbp
  421f98:	53                   	push   %rbx
  421f99:	48 83 ec 30          	sub    $0x30,%rsp
  421f9d:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  421fa1:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  421fa5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  421fa9:	48 8b 40 10          	mov    0x10(%rax),%rax
  421fad:	48 8b 40 58          	mov    0x58(%rax),%rax
  421fb1:	48 83 c0 10          	add    $0x10,%rax
  421fb5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  421fb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421fbd:	8b 40 0c             	mov    0xc(%rax),%eax
  421fc0:	89 45 f4             	mov    %eax,-0xc(%rbp)
  421fc3:	e9 85 00 00 00       	jmpq   42204d <movegotosout+0xb9>
  421fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421fcc:	48 8b 08             	mov    (%rax),%rcx
  421fcf:	8b 45 f4             	mov    -0xc(%rbp),%eax
  421fd2:	48 63 d0             	movslq %eax,%rdx
  421fd5:	48 89 d0             	mov    %rdx,%rax
  421fd8:	48 01 c0             	add    %rax,%rax
  421fdb:	48 01 d0             	add    %rdx,%rax
  421fde:	48 c1 e0 03          	shl    $0x3,%rax
  421fe2:	48 01 c8             	add    %rcx,%rax
  421fe5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  421fe9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421fed:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  421ff1:	0f b6 d0             	movzbl %al,%edx
  421ff4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  421ff8:	89 d6                	mov    %edx,%esi
  421ffa:	48 89 c7             	mov    %rax,%rdi
  421ffd:	e8 91 f0 ff ff       	callq  421093 <reglevel>
  422002:	89 c3                	mov    %eax,%ebx
  422004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  422008:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  42200c:	0f b6 d0             	movzbl %al,%edx
  42200f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  422013:	89 d6                	mov    %edx,%esi
  422015:	48 89 c7             	mov    %rax,%rdi
  422018:	e8 76 f0 ff ff       	callq  421093 <reglevel>
  42201d:	39 c3                	cmp    %eax,%ebx
  42201f:	7e 19                	jle    42203a <movegotosout+0xa6>
  422021:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422025:	0f b6 50 11          	movzbl 0x11(%rax),%edx
  422029:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42202d:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  422031:	09 c2                	or     %eax,%edx
  422033:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422037:	88 50 11             	mov    %dl,0x11(%rax)
  42203a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42203e:	0f b6 50 10          	movzbl 0x10(%rax),%edx
  422042:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422046:	88 50 10             	mov    %dl,0x10(%rax)
  422049:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  42204d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422051:	8b 40 08             	mov    0x8(%rax),%eax
  422054:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  422057:	0f 8c 6b ff ff ff    	jl     421fc8 <movegotosout+0x34>
  42205d:	90                   	nop
  42205e:	48 83 c4 30          	add    $0x30,%rsp
  422062:	5b                   	pop    %rbx
  422063:	5d                   	pop    %rbp
  422064:	c3                   	retq   

0000000000422065 <enterblock>:
  422065:	55                   	push   %rbp
  422066:	48 89 e5             	mov    %rsp,%rbp
  422069:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42206d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  422071:	89 d0                	mov    %edx,%eax
  422073:	88 45 ec             	mov    %al,-0x14(%rbp)
  422076:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42207a:	0f b6 55 ec          	movzbl -0x14(%rbp),%edx
  42207e:	88 50 12             	mov    %dl,0x12(%rax)
  422081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422085:	0f b6 50 42          	movzbl 0x42(%rax),%edx
  422089:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42208d:	88 50 10             	mov    %dl,0x10(%rax)
  422090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422094:	48 8b 40 10          	mov    0x10(%rax),%rax
  422098:	48 8b 40 58          	mov    0x58(%rax),%rax
  42209c:	8b 50 28             	mov    0x28(%rax),%edx
  42209f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4220a3:	89 50 08             	mov    %edx,0x8(%rax)
  4220a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4220aa:	48 8b 40 10          	mov    0x10(%rax),%rax
  4220ae:	48 8b 40 58          	mov    0x58(%rax),%rax
  4220b2:	8b 50 18             	mov    0x18(%rax),%edx
  4220b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4220b9:	89 50 0c             	mov    %edx,0xc(%rax)
  4220bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4220c0:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  4220c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4220c8:	48 8b 40 18          	mov    0x18(%rax),%rax
  4220cc:	48 85 c0             	test   %rax,%rax
  4220cf:	74 17                	je     4220e8 <enterblock+0x83>
  4220d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4220d5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4220d9:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  4220dd:	84 c0                	test   %al,%al
  4220df:	74 07                	je     4220e8 <enterblock+0x83>
  4220e1:	b8 01 00 00 00       	mov    $0x1,%eax
  4220e6:	eb 05                	jmp    4220ed <enterblock+0x88>
  4220e8:	b8 00 00 00 00       	mov    $0x0,%eax
  4220ed:	89 c2                	mov    %eax,%edx
  4220ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4220f3:	88 50 13             	mov    %dl,0x13(%rax)
  4220f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4220fa:	48 8b 50 18          	mov    0x18(%rax),%rdx
  4220fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422102:	48 89 10             	mov    %rdx,(%rax)
  422105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422109:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42210d:	48 89 50 18          	mov    %rdx,0x18(%rax)
  422111:	90                   	nop
  422112:	5d                   	pop    %rbp
  422113:	c3                   	retq   

0000000000422114 <undefgoto>:
  422114:	55                   	push   %rbp
  422115:	48 89 e5             	mov    %rsp,%rbp
  422118:	53                   	push   %rbx
  422119:	48 83 ec 28          	sub    $0x28,%rsp
  42211d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  422121:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  422125:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  422129:	48 8b 18             	mov    (%rax),%rbx
  42212c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422130:	48 8b 40 38          	mov    0x38(%rax),%rax
  422134:	ba 05 00 00 00       	mov    $0x5,%edx
  422139:	be c5 10 44 00       	mov    $0x4410c5,%esi
  42213e:	48 89 c7             	mov    %rax,%rdi
  422141:	e8 d5 4e 00 00       	callq  42701b <luaS_newlstr>
  422146:	48 39 c3             	cmp    %rax,%rbx
  422149:	75 31                	jne    42217c <undefgoto+0x68>
  42214b:	48 c7 45 e8 cb 10 44 	movq   $0x4410cb,-0x18(%rbp)
  422152:	00 
  422153:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  422157:	8b 50 0c             	mov    0xc(%rax),%edx
  42215a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42215e:	48 8b 40 38          	mov    0x38(%rax),%rax
  422162:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  422166:	48 89 ce             	mov    %rcx,%rsi
  422169:	48 89 c7             	mov    %rax,%rdi
  42216c:	b8 00 00 00 00       	mov    $0x0,%eax
  422171:	e8 e9 da ff ff       	callq  41fc5f <luaO_pushfstring>
  422176:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42217a:	eb 3c                	jmp    4221b8 <undefgoto+0xa4>
  42217c:	48 c7 45 e8 f0 10 44 	movq   $0x4410f0,-0x18(%rbp)
  422183:	00 
  422184:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  422188:	8b 50 0c             	mov    0xc(%rax),%edx
  42218b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42218f:	48 8b 00             	mov    (%rax),%rax
  422192:	48 8d 78 18          	lea    0x18(%rax),%rdi
  422196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42219a:	48 8b 40 38          	mov    0x38(%rax),%rax
  42219e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4221a2:	89 d1                	mov    %edx,%ecx
  4221a4:	48 89 fa             	mov    %rdi,%rdx
  4221a7:	48 89 c7             	mov    %rax,%rdi
  4221aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4221af:	e8 ab da ff ff       	callq  41fc5f <luaO_pushfstring>
  4221b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4221b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4221bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4221c0:	48 89 d6             	mov    %rdx,%rsi
  4221c3:	48 89 c7             	mov    %rax,%rdi
  4221c6:	e8 66 76 fe ff       	callq  409831 <luaK_semerror>

00000000004221cb <leaveblock>:
  4221cb:	55                   	push   %rbp
  4221cc:	48 89 e5             	mov    %rsp,%rbp
  4221cf:	48 83 ec 30          	sub    $0x30,%rsp
  4221d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4221d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4221db:	48 8b 40 18          	mov    0x18(%rax),%rax
  4221df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4221e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4221e7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4221eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4221ef:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4221f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4221fa:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  4221fe:	0f b6 d0             	movzbl %al,%edx
  422201:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422205:	89 d6                	mov    %edx,%esi
  422207:	48 89 c7             	mov    %rax,%rdi
  42220a:	e8 84 ee ff ff       	callq  421093 <reglevel>
  42220f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  422212:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422216:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  42221a:	0f b6 d0             	movzbl %al,%edx
  42221d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422221:	89 d6                	mov    %edx,%esi
  422223:	48 89 c7             	mov    %rax,%rdi
  422226:	e8 6c f1 ff ff       	callq  421397 <removevars>
  42222b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42222f:	0f b6 40 12          	movzbl 0x12(%rax),%eax
  422233:	84 c0                	test   %al,%al
  422235:	74 36                	je     42226d <leaveblock+0xa2>
  422237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42223b:	48 8b 40 38          	mov    0x38(%rax),%rax
  42223f:	ba 05 00 00 00       	mov    $0x5,%edx
  422244:	be c5 10 44 00       	mov    $0x4410c5,%esi
  422249:	48 89 c7             	mov    %rax,%rdi
  42224c:	e8 ca 4d 00 00       	callq  42701b <luaS_newlstr>
  422251:	48 89 c6             	mov    %rax,%rsi
  422254:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422258:	b9 00 00 00 00       	mov    $0x0,%ecx
  42225d:	ba 00 00 00 00       	mov    $0x0,%edx
  422262:	48 89 c7             	mov    %rax,%rdi
  422265:	e8 2b fc ff ff       	callq  421e95 <createlabel>
  42226a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42226d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  422271:	75 3d                	jne    4222b0 <leaveblock+0xe5>
  422273:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422277:	48 8b 00             	mov    (%rax),%rax
  42227a:	48 85 c0             	test   %rax,%rax
  42227d:	74 31                	je     4222b0 <leaveblock+0xe5>
  42227f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422283:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  422287:	84 c0                	test   %al,%al
  422289:	74 25                	je     4222b0 <leaveblock+0xe5>
  42228b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42228e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422292:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  422298:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42229e:	b9 00 00 00 00       	mov    $0x0,%ecx
  4222a3:	be 36 00 00 00       	mov    $0x36,%esi
  4222a8:	48 89 c7             	mov    %rax,%rdi
  4222ab:	e8 36 80 fe ff       	callq  40a2e6 <luaK_codeABCk>
  4222b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4222b3:	89 c2                	mov    %eax,%edx
  4222b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4222b9:	88 50 44             	mov    %dl,0x44(%rax)
  4222bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4222c0:	48 8b 40 58          	mov    0x58(%rax),%rax
  4222c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4222c8:	8b 52 08             	mov    0x8(%rdx),%edx
  4222cb:	89 50 28             	mov    %edx,0x28(%rax)
  4222ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4222d2:	48 8b 10             	mov    (%rax),%rdx
  4222d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4222d9:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4222dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4222e1:	48 8b 00             	mov    (%rax),%rax
  4222e4:	48 85 c0             	test   %rax,%rax
  4222e7:	74 15                	je     4222fe <leaveblock+0x133>
  4222e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4222ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4222f1:	48 89 d6             	mov    %rdx,%rsi
  4222f4:	48 89 c7             	mov    %rax,%rdi
  4222f7:	e8 98 fc ff ff       	callq  421f94 <movegotosout>
  4222fc:	eb 4c                	jmp    42234a <leaveblock+0x17f>
  4222fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422302:	8b 50 0c             	mov    0xc(%rax),%edx
  422305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422309:	48 8b 40 58          	mov    0x58(%rax),%rax
  42230d:	8b 40 18             	mov    0x18(%rax),%eax
  422310:	39 c2                	cmp    %eax,%edx
  422312:	7d 36                	jge    42234a <leaveblock+0x17f>
  422314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422318:	48 8b 40 58          	mov    0x58(%rax),%rax
  42231c:	48 8b 48 10          	mov    0x10(%rax),%rcx
  422320:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422324:	8b 40 0c             	mov    0xc(%rax),%eax
  422327:	48 63 d0             	movslq %eax,%rdx
  42232a:	48 89 d0             	mov    %rdx,%rax
  42232d:	48 01 c0             	add    %rax,%rax
  422330:	48 01 d0             	add    %rdx,%rax
  422333:	48 c1 e0 03          	shl    $0x3,%rax
  422337:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  42233b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42233f:	48 89 d6             	mov    %rdx,%rsi
  422342:	48 89 c7             	mov    %rax,%rdi
  422345:	e8 ca fd ff ff       	callq  422114 <undefgoto>
  42234a:	90                   	nop
  42234b:	c9                   	leaveq 
  42234c:	c3                   	retq   

000000000042234d <addprototype>:
  42234d:	55                   	push   %rbp
  42234e:	48 89 e5             	mov    %rsp,%rbp
  422351:	48 83 ec 40          	sub    $0x40,%rsp
  422355:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  422359:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42235d:	48 8b 40 38          	mov    0x38(%rax),%rax
  422361:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  422365:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  422369:	48 8b 40 30          	mov    0x30(%rax),%rax
  42236d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  422371:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422375:	48 8b 00             	mov    (%rax),%rax
  422378:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42237c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422380:	8b 50 30             	mov    0x30(%rax),%edx
  422383:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422387:	8b 40 20             	mov    0x20(%rax),%eax
  42238a:	39 c2                	cmp    %eax,%edx
  42238c:	0f 8c 80 00 00 00    	jl     422412 <addprototype+0xc5>
  422392:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422396:	8b 40 20             	mov    0x20(%rax),%eax
  422399:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42239c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4223a0:	48 8d 48 20          	lea    0x20(%rax),%rcx
  4223a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4223a8:	8b 50 30             	mov    0x30(%rax),%edx
  4223ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4223af:	48 8b 70 48          	mov    0x48(%rax),%rsi
  4223b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4223b7:	48 83 ec 08          	sub    $0x8,%rsp
  4223bb:	68 1c 11 44 00       	pushq  $0x44111c
  4223c0:	41 b9 ff ff 01 00    	mov    $0x1ffff,%r9d
  4223c6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  4223cc:	48 89 c7             	mov    %rax,%rdi
  4223cf:	e8 4d ab ff ff       	callq  41cf21 <luaM_growaux_>
  4223d4:	48 83 c4 10          	add    $0x10,%rsp
  4223d8:	48 89 c2             	mov    %rax,%rdx
  4223db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4223df:	48 89 50 48          	mov    %rdx,0x48(%rax)
  4223e3:	eb 21                	jmp    422406 <addprototype+0xb9>
  4223e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4223e9:	48 8b 48 48          	mov    0x48(%rax),%rcx
  4223ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4223f0:	8d 50 01             	lea    0x1(%rax),%edx
  4223f3:	89 55 fc             	mov    %edx,-0x4(%rbp)
  4223f6:	48 98                	cltq   
  4223f8:	48 c1 e0 03          	shl    $0x3,%rax
  4223fc:	48 01 c8             	add    %rcx,%rax
  4223ff:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  422406:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42240a:	8b 40 20             	mov    0x20(%rax),%eax
  42240d:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  422410:	7c d3                	jl     4223e5 <addprototype+0x98>
  422412:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422416:	48 89 c7             	mov    %rax,%rdi
  422419:	e8 15 22 ff ff       	callq  414633 <luaF_newproto>
  42241e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  422422:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422426:	48 8b 70 48          	mov    0x48(%rax),%rsi
  42242a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42242e:	8b 40 30             	mov    0x30(%rax),%eax
  422431:	8d 48 01             	lea    0x1(%rax),%ecx
  422434:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  422438:	89 4a 30             	mov    %ecx,0x30(%rdx)
  42243b:	48 98                	cltq   
  42243d:	48 c1 e0 03          	shl    $0x3,%rax
  422441:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  422445:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422449:	48 89 02             	mov    %rax,(%rdx)
  42244c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422450:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  422454:	0f b6 c0             	movzbl %al,%eax
  422457:	83 e0 20             	and    $0x20,%eax
  42245a:	85 c0                	test   %eax,%eax
  42245c:	74 29                	je     422487 <addprototype+0x13a>
  42245e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422462:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  422466:	0f b6 c0             	movzbl %al,%eax
  422469:	83 e0 18             	and    $0x18,%eax
  42246c:	85 c0                	test   %eax,%eax
  42246e:	74 17                	je     422487 <addprototype+0x13a>
  422470:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  422474:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  422478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42247c:	48 89 ce             	mov    %rcx,%rsi
  42247f:	48 89 c7             	mov    %rax,%rdi
  422482:	e8 c8 25 ff ff       	callq  414a4f <luaC_barrier_>
  422487:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42248b:	c9                   	leaveq 
  42248c:	c3                   	retq   

000000000042248d <codeclosure>:
  42248d:	55                   	push   %rbp
  42248e:	48 89 e5             	mov    %rsp,%rbp
  422491:	48 83 ec 20          	sub    $0x20,%rsp
  422495:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  422499:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42249d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4224a1:	48 8b 40 30          	mov    0x30(%rax),%rax
  4224a5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4224a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4224ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4224b1:	8b 40 30             	mov    0x30(%rax),%eax
  4224b4:	83 e8 01             	sub    $0x1,%eax
  4224b7:	89 c2                	mov    %eax,%edx
  4224b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4224bd:	89 d1                	mov    %edx,%ecx
  4224bf:	ba 00 00 00 00       	mov    $0x0,%edx
  4224c4:	be 4f 00 00 00       	mov    $0x4f,%esi
  4224c9:	48 89 c7             	mov    %rax,%rdi
  4224cc:	e8 63 7e fe ff       	callq  40a334 <luaK_codeABx>
  4224d1:	89 c2                	mov    %eax,%edx
  4224d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4224d7:	be 11 00 00 00       	mov    $0x11,%esi
  4224dc:	48 89 c7             	mov    %rax,%rdi
  4224df:	e8 80 e8 ff ff       	callq  420d64 <init_exp>
  4224e4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4224e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4224ec:	48 89 d6             	mov    %rdx,%rsi
  4224ef:	48 89 c7             	mov    %rax,%rdi
  4224f2:	e8 b5 8f fe ff       	callq  40b4ac <luaK_exp2nextreg>
  4224f7:	90                   	nop
  4224f8:	c9                   	leaveq 
  4224f9:	c3                   	retq   

00000000004224fa <open_func>:
  4224fa:	55                   	push   %rbp
  4224fb:	48 89 e5             	mov    %rsp,%rbp
  4224fe:	48 83 ec 30          	sub    $0x30,%rsp
  422502:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  422506:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42250a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42250e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422512:	48 8b 00             	mov    (%rax),%rax
  422515:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  422519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42251d:	48 8b 50 30          	mov    0x30(%rax),%rdx
  422521:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422525:	48 89 50 08          	mov    %rdx,0x8(%rax)
  422529:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42252d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  422531:	48 89 50 10          	mov    %rdx,0x10(%rax)
  422535:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422539:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42253d:	48 89 50 30          	mov    %rdx,0x30(%rax)
  422541:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422545:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  42254c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422550:	8b 50 2c             	mov    0x2c(%rax),%edx
  422553:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422557:	89 50 28             	mov    %edx,0x28(%rax)
  42255a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42255e:	c6 40 45 00          	movb   $0x0,0x45(%rax)
  422562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422566:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
  42256d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422571:	c6 40 44 00          	movb   $0x0,0x44(%rax)
  422575:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422579:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%rax)
  422580:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422584:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
  42258b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42258f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
  422596:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42259a:	c6 40 43 00          	movb   $0x0,0x43(%rax)
  42259e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225a2:	66 c7 40 40 00 00    	movw   $0x0,0x40(%rax)
  4225a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225ac:	c6 40 42 00          	movb   $0x0,0x42(%rax)
  4225b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225b4:	c6 40 46 00          	movb   $0x0,0x46(%rax)
  4225b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4225bc:	48 8b 40 58          	mov    0x58(%rax),%rax
  4225c0:	8b 50 08             	mov    0x8(%rax),%edx
  4225c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225c7:	89 50 38             	mov    %edx,0x38(%rax)
  4225ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4225ce:	48 8b 40 58          	mov    0x58(%rax),%rax
  4225d2:	8b 50 28             	mov    0x28(%rax),%edx
  4225d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225d9:	89 50 3c             	mov    %edx,0x3c(%rax)
  4225dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4225e0:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  4225e7:	00 
  4225e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4225ec:	48 8b 50 60          	mov    0x60(%rax),%rdx
  4225f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4225f4:	48 89 50 70          	mov    %rdx,0x70(%rax)
  4225f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4225fc:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  422600:	0f b6 c0             	movzbl %al,%eax
  422603:	83 e0 20             	and    $0x20,%eax
  422606:	85 c0                	test   %eax,%eax
  422608:	74 38                	je     422642 <open_func+0x148>
  42260a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42260e:	48 8b 40 70          	mov    0x70(%rax),%rax
  422612:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  422616:	0f b6 c0             	movzbl %al,%eax
  422619:	83 e0 18             	and    $0x18,%eax
  42261c:	85 c0                	test   %eax,%eax
  42261e:	74 22                	je     422642 <open_func+0x148>
  422620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422624:	48 8b 40 70          	mov    0x70(%rax),%rax
  422628:	48 89 c2             	mov    %rax,%rdx
  42262b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42262f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422633:	48 8b 40 38          	mov    0x38(%rax),%rax
  422637:	48 89 ce             	mov    %rcx,%rsi
  42263a:	48 89 c7             	mov    %rax,%rdi
  42263d:	e8 0d 24 ff ff       	callq  414a4f <luaC_barrier_>
  422642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422646:	c6 40 0c 02          	movb   $0x2,0xc(%rax)
  42264a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42264e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  422652:	ba 00 00 00 00       	mov    $0x0,%edx
  422657:	48 89 ce             	mov    %rcx,%rsi
  42265a:	48 89 c7             	mov    %rax,%rdi
  42265d:	e8 03 fa ff ff       	callq  422065 <enterblock>
  422662:	90                   	nop
  422663:	c9                   	leaveq 
  422664:	c3                   	retq   

0000000000422665 <close_func>:
  422665:	55                   	push   %rbp
  422666:	48 89 e5             	mov    %rsp,%rbp
  422669:	48 83 ec 30          	sub    $0x30,%rsp
  42266d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  422671:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422675:	48 8b 40 38          	mov    0x38(%rax),%rax
  422679:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42267d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422681:	48 8b 40 30          	mov    0x30(%rax),%rax
  422685:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  422689:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42268d:	48 8b 00             	mov    (%rax),%rax
  422690:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  422694:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422698:	48 89 c7             	mov    %rax,%rdi
  42269b:	e8 49 ea ff ff       	callq  4210e9 <luaY_nvarstack>
  4226a0:	89 c1                	mov    %eax,%ecx
  4226a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4226a6:	ba 00 00 00 00       	mov    $0x0,%edx
  4226ab:	89 ce                	mov    %ecx,%esi
  4226ad:	48 89 c7             	mov    %rax,%rdi
  4226b0:	e8 4e 76 fe ff       	callq  409d03 <luaK_ret>
  4226b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4226b9:	48 89 c7             	mov    %rax,%rdi
  4226bc:	e8 0a fb ff ff       	callq  4221cb <leaveblock>
  4226c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4226c5:	48 89 c7             	mov    %rax,%rdi
  4226c8:	e8 ec ac fe ff       	callq  40d3b9 <luaK_finish>
  4226cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4226d1:	8b 50 20             	mov    0x20(%rax),%edx
  4226d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4226d8:	48 8d 78 18          	lea    0x18(%rax),%rdi
  4226dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4226e0:	48 8b 70 40          	mov    0x40(%rax),%rsi
  4226e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4226e8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  4226ee:	89 d1                	mov    %edx,%ecx
  4226f0:	48 89 fa             	mov    %rdi,%rdx
  4226f3:	48 89 c7             	mov    %rax,%rdi
  4226f6:	e8 ff a8 ff ff       	callq  41cffa <luaM_shrinkvector_>
  4226fb:	48 89 c2             	mov    %rax,%rdx
  4226fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422702:	48 89 50 40          	mov    %rdx,0x40(%rax)
  422706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42270a:	8b 50 20             	mov    0x20(%rax),%edx
  42270d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422711:	48 8d 78 1c          	lea    0x1c(%rax),%rdi
  422715:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422719:	48 8b 70 58          	mov    0x58(%rax),%rsi
  42271d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422721:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  422727:	89 d1                	mov    %edx,%ecx
  422729:	48 89 fa             	mov    %rdi,%rdx
  42272c:	48 89 c7             	mov    %rax,%rdi
  42272f:	e8 c6 a8 ff ff       	callq  41cffa <luaM_shrinkvector_>
  422734:	48 89 c2             	mov    %rax,%rdx
  422737:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42273b:	48 89 50 58          	mov    %rdx,0x58(%rax)
  42273f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422743:	8b 50 34             	mov    0x34(%rax),%edx
  422746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42274a:	48 8d 78 28          	lea    0x28(%rax),%rdi
  42274e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422752:	48 8b 70 60          	mov    0x60(%rax),%rsi
  422756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42275a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  422760:	89 d1                	mov    %edx,%ecx
  422762:	48 89 fa             	mov    %rdi,%rdx
  422765:	48 89 c7             	mov    %rax,%rdi
  422768:	e8 8d a8 ff ff       	callq  41cffa <luaM_shrinkvector_>
  42276d:	48 89 c2             	mov    %rax,%rdx
  422770:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422774:	48 89 50 60          	mov    %rdx,0x60(%rax)
  422778:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42277c:	8b 50 2c             	mov    0x2c(%rax),%edx
  42277f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422783:	48 8d 78 14          	lea    0x14(%rax),%rdi
  422787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42278b:	48 8b 70 38          	mov    0x38(%rax),%rsi
  42278f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422793:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  422799:	89 d1                	mov    %edx,%ecx
  42279b:	48 89 fa             	mov    %rdi,%rdx
  42279e:	48 89 c7             	mov    %rax,%rdi
  4227a1:	e8 54 a8 ff ff       	callq  41cffa <luaM_shrinkvector_>
  4227a6:	48 89 c2             	mov    %rax,%rdx
  4227a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4227ad:	48 89 50 38          	mov    %rdx,0x38(%rax)
  4227b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4227b5:	8b 50 30             	mov    0x30(%rax),%edx
  4227b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4227bc:	48 8d 78 20          	lea    0x20(%rax),%rdi
  4227c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4227c4:	48 8b 70 48          	mov    0x48(%rax),%rsi
  4227c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4227cc:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  4227d2:	89 d1                	mov    %edx,%ecx
  4227d4:	48 89 fa             	mov    %rdi,%rdx
  4227d7:	48 89 c7             	mov    %rax,%rdi
  4227da:	e8 1b a8 ff ff       	callq  41cffa <luaM_shrinkvector_>
  4227df:	48 89 c2             	mov    %rax,%rdx
  4227e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4227e6:	48 89 50 48          	mov    %rdx,0x48(%rax)
  4227ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4227ee:	0f b7 40 40          	movzwl 0x40(%rax),%eax
  4227f2:	0f bf d0             	movswl %ax,%edx
  4227f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4227f9:	48 8d 78 24          	lea    0x24(%rax),%rdi
  4227fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422801:	48 8b 70 68          	mov    0x68(%rax),%rsi
  422805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422809:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  42280f:	89 d1                	mov    %edx,%ecx
  422811:	48 89 fa             	mov    %rdi,%rdx
  422814:	48 89 c7             	mov    %rax,%rdi
  422817:	e8 de a7 ff ff       	callq  41cffa <luaM_shrinkvector_>
  42281c:	48 89 c2             	mov    %rax,%rdx
  42281f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422823:	48 89 50 68          	mov    %rdx,0x68(%rax)
  422827:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42282b:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  42282f:	0f b6 d0             	movzbl %al,%edx
  422832:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422836:	48 8d 78 10          	lea    0x10(%rax),%rdi
  42283a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42283e:	48 8b 70 50          	mov    0x50(%rax),%rsi
  422842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422846:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  42284c:	89 d1                	mov    %edx,%ecx
  42284e:	48 89 fa             	mov    %rdi,%rdx
  422851:	48 89 c7             	mov    %rax,%rdi
  422854:	e8 a1 a7 ff ff       	callq  41cffa <luaM_shrinkvector_>
  422859:	48 89 c2             	mov    %rax,%rdx
  42285c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422860:	48 89 50 50          	mov    %rdx,0x50(%rax)
  422864:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422868:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42286c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422870:	48 89 50 30          	mov    %rdx,0x30(%rax)
  422874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422878:	48 8b 40 18          	mov    0x18(%rax),%rax
  42287c:	48 8b 40 18          	mov    0x18(%rax),%rax
  422880:	48 85 c0             	test   %rax,%rax
  422883:	7e 0c                	jle    422891 <close_func+0x22c>
  422885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422889:	48 89 c7             	mov    %rax,%rdi
  42288c:	e8 c7 5a ff ff       	callq  418358 <luaC_step>
  422891:	90                   	nop
  422892:	c9                   	leaveq 
  422893:	c3                   	retq   

0000000000422894 <block_follow>:
  422894:	55                   	push   %rbp
  422895:	48 89 e5             	mov    %rsp,%rbp
  422898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42289c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  42289f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4228a3:	8b 40 10             	mov    0x10(%rax),%eax
  4228a6:	3d 14 01 00 00       	cmp    $0x114,%eax
  4228ab:	74 21                	je     4228ce <block_follow+0x3a>
  4228ad:	3d 14 01 00 00       	cmp    $0x114,%eax
  4228b2:	7f 0c                	jg     4228c0 <block_follow+0x2c>
  4228b4:	2d 03 01 00 00       	sub    $0x103,%eax
  4228b9:	83 f8 02             	cmp    $0x2,%eax
  4228bc:	77 15                	ja     4228d3 <block_follow+0x3f>
  4228be:	eb 07                	jmp    4228c7 <block_follow+0x33>
  4228c0:	3d 20 01 00 00       	cmp    $0x120,%eax
  4228c5:	75 0c                	jne    4228d3 <block_follow+0x3f>
  4228c7:	b8 01 00 00 00       	mov    $0x1,%eax
  4228cc:	eb 0a                	jmp    4228d8 <block_follow+0x44>
  4228ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4228d1:	eb 05                	jmp    4228d8 <block_follow+0x44>
  4228d3:	b8 00 00 00 00       	mov    $0x0,%eax
  4228d8:	5d                   	pop    %rbp
  4228d9:	c3                   	retq   

00000000004228da <statlist>:
  4228da:	55                   	push   %rbp
  4228db:	48 89 e5             	mov    %rsp,%rbp
  4228de:	48 83 ec 10          	sub    $0x10,%rsp
  4228e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4228e6:	eb 28                	jmp    422910 <statlist+0x36>
  4228e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4228ec:	8b 40 10             	mov    0x10(%rax),%eax
  4228ef:	3d 11 01 00 00       	cmp    $0x111,%eax
  4228f4:	75 0e                	jne    422904 <statlist+0x2a>
  4228f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4228fa:	48 89 c7             	mov    %rax,%rdi
  4228fd:	e8 9e 29 00 00       	callq  4252a0 <statement>
  422902:	eb 21                	jmp    422925 <statlist+0x4b>
  422904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422908:	48 89 c7             	mov    %rax,%rdi
  42290b:	e8 90 29 00 00       	callq  4252a0 <statement>
  422910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422914:	be 01 00 00 00       	mov    $0x1,%esi
  422919:	48 89 c7             	mov    %rax,%rdi
  42291c:	e8 73 ff ff ff       	callq  422894 <block_follow>
  422921:	85 c0                	test   %eax,%eax
  422923:	74 c3                	je     4228e8 <statlist+0xe>
  422925:	c9                   	leaveq 
  422926:	c3                   	retq   

0000000000422927 <fieldsel>:
  422927:	55                   	push   %rbp
  422928:	48 89 e5             	mov    %rsp,%rbp
  42292b:	48 83 ec 30          	sub    $0x30,%rsp
  42292f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  422933:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  422937:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42293b:	48 8b 40 30          	mov    0x30(%rax),%rax
  42293f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  422943:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  422947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42294b:	48 89 d6             	mov    %rdx,%rsi
  42294e:	48 89 c7             	mov    %rax,%rdi
  422951:	e8 66 8c fe ff       	callq  40b5bc <luaK_exp2anyregup>
  422956:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42295a:	48 89 c7             	mov    %rax,%rdi
  42295d:	e8 46 95 ff ff       	callq  41bea8 <luaX_next>
  422962:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  422966:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42296a:	48 89 d6             	mov    %rdx,%rsi
  42296d:	48 89 c7             	mov    %rax,%rdi
  422970:	e8 6a e4 ff ff       	callq  420ddf <codename>
  422975:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  422979:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42297d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422981:	48 89 ce             	mov    %rcx,%rsi
  422984:	48 89 c7             	mov    %rax,%rdi
  422987:	e8 f8 95 fe ff       	callq  40bf84 <luaK_indexed>
  42298c:	90                   	nop
  42298d:	c9                   	leaveq 
  42298e:	c3                   	retq   

000000000042298f <yindex>:
  42298f:	55                   	push   %rbp
  422990:	48 89 e5             	mov    %rsp,%rbp
  422993:	48 83 ec 10          	sub    $0x10,%rsp
  422997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42299b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42299f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4229a3:	48 89 c7             	mov    %rax,%rdi
  4229a6:	e8 fd 94 ff ff       	callq  41bea8 <luaX_next>
  4229ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4229af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4229b3:	48 89 d6             	mov    %rdx,%rsi
  4229b6:	48 89 c7             	mov    %rax,%rdi
  4229b9:	e8 48 11 00 00       	callq  423b06 <expr>
  4229be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4229c2:	48 8b 40 30          	mov    0x30(%rax),%rax
  4229c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4229ca:	48 89 d6             	mov    %rdx,%rsi
  4229cd:	48 89 c7             	mov    %rax,%rdi
  4229d0:	e8 2a 8c fe ff       	callq  40b5ff <luaK_exp2val>
  4229d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4229d9:	be 5d 00 00 00       	mov    $0x5d,%esi
  4229de:	48 89 c7             	mov    %rax,%rdi
  4229e1:	e8 5b e2 ff ff       	callq  420c41 <checknext>
  4229e6:	90                   	nop
  4229e7:	c9                   	leaveq 
  4229e8:	c3                   	retq   

00000000004229e9 <recfield>:
  4229e9:	55                   	push   %rbp
  4229ea:	48 89 e5             	mov    %rsp,%rbp
  4229ed:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  4229f1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  4229f5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  4229f9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4229fd:	48 8b 40 30          	mov    0x30(%rax),%rax
  422a01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  422a05:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422a09:	48 8b 40 30          	mov    0x30(%rax),%rax
  422a0d:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  422a11:	0f b6 c0             	movzbl %al,%eax
  422a14:	89 45 f4             	mov    %eax,-0xc(%rbp)
  422a17:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422a1b:	8b 40 10             	mov    0x10(%rax),%eax
  422a1e:	3d 23 01 00 00       	cmp    $0x123,%eax
  422a23:	75 32                	jne    422a57 <recfield+0x6e>
  422a25:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  422a29:	8b 70 20             	mov    0x20(%rax),%esi
  422a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422a30:	b9 26 11 44 00       	mov    $0x441126,%ecx
  422a35:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
  422a3a:	48 89 c7             	mov    %rax,%rdi
  422a3d:	e8 65 e1 ff ff       	callq  420ba7 <checklimit>
  422a42:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  422a46:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422a4a:	48 89 d6             	mov    %rdx,%rsi
  422a4d:	48 89 c7             	mov    %rax,%rdi
  422a50:	e8 8a e3 ff ff       	callq  420ddf <codename>
  422a55:	eb 13                	jmp    422a6a <recfield+0x81>
  422a57:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  422a5b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422a5f:	48 89 d6             	mov    %rdx,%rsi
  422a62:	48 89 c7             	mov    %rax,%rdi
  422a65:	e8 25 ff ff ff       	callq  42298f <yindex>
  422a6a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  422a6e:	8b 40 20             	mov    0x20(%rax),%eax
  422a71:	8d 50 01             	lea    0x1(%rax),%edx
  422a74:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  422a78:	89 50 20             	mov    %edx,0x20(%rax)
  422a7b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422a7f:	be 3d 00 00 00       	mov    $0x3d,%esi
  422a84:	48 89 c7             	mov    %rax,%rdi
  422a87:	e8 b5 e1 ff ff       	callq  420c41 <checknext>
  422a8c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  422a90:	48 8b 48 18          	mov    0x18(%rax),%rcx
  422a94:	48 8b 01             	mov    (%rcx),%rax
  422a97:	48 8b 51 08          	mov    0x8(%rcx),%rdx
  422a9b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  422a9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  422aa3:	48 8b 41 10          	mov    0x10(%rcx),%rax
  422aa7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  422aab:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  422aaf:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  422ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422ab7:	48 89 ce             	mov    %rcx,%rsi
  422aba:	48 89 c7             	mov    %rax,%rdi
  422abd:	e8 c2 94 fe ff       	callq  40bf84 <luaK_indexed>
  422ac2:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  422ac6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  422aca:	48 89 d6             	mov    %rdx,%rsi
  422acd:	48 89 c7             	mov    %rax,%rdi
  422ad0:	e8 31 10 00 00       	callq  423b06 <expr>
  422ad5:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  422ad9:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  422add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422ae1:	48 89 ce             	mov    %rcx,%rsi
  422ae4:	48 89 c7             	mov    %rax,%rdi
  422ae7:	e8 07 8d fe ff       	callq  40b7f3 <luaK_storevar>
  422aec:	8b 45 f4             	mov    -0xc(%rbp),%eax
  422aef:	89 c2                	mov    %eax,%edx
  422af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422af5:	88 50 44             	mov    %dl,0x44(%rax)
  422af8:	90                   	nop
  422af9:	c9                   	leaveq 
  422afa:	c3                   	retq   

0000000000422afb <closelistfield>:
  422afb:	55                   	push   %rbp
  422afc:	48 89 e5             	mov    %rsp,%rbp
  422aff:	48 83 ec 10          	sub    $0x10,%rsp
  422b03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  422b07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  422b0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b0f:	8b 00                	mov    (%rax),%eax
  422b11:	85 c0                	test   %eax,%eax
  422b13:	74 72                	je     422b87 <closelistfield+0x8c>
  422b15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422b1d:	48 89 d6             	mov    %rdx,%rsi
  422b20:	48 89 c7             	mov    %rax,%rdi
  422b23:	e8 84 89 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  422b28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b2c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  422b32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b36:	8b 40 28             	mov    0x28(%rax),%eax
  422b39:	83 f8 32             	cmp    $0x32,%eax
  422b3c:	75 4a                	jne    422b88 <closelistfield+0x8d>
  422b3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b42:	8b 48 28             	mov    0x28(%rax),%ecx
  422b45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b49:	8b 50 24             	mov    0x24(%rax),%edx
  422b4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b50:	48 8b 40 18          	mov    0x18(%rax),%rax
  422b54:	8b 70 08             	mov    0x8(%rax),%esi
  422b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422b5b:	48 89 c7             	mov    %rax,%rdi
  422b5e:	e8 45 a7 fe ff       	callq  40d2a8 <luaK_setlist>
  422b63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b67:	8b 50 24             	mov    0x24(%rax),%edx
  422b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b6e:	8b 40 28             	mov    0x28(%rax),%eax
  422b71:	01 c2                	add    %eax,%edx
  422b73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b77:	89 50 24             	mov    %edx,0x24(%rax)
  422b7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b7e:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  422b85:	eb 01                	jmp    422b88 <closelistfield+0x8d>
  422b87:	90                   	nop
  422b88:	c9                   	leaveq 
  422b89:	c3                   	retq   

0000000000422b8a <lastlistfield>:
  422b8a:	55                   	push   %rbp
  422b8b:	48 89 e5             	mov    %rsp,%rbp
  422b8e:	48 83 ec 10          	sub    $0x10,%rsp
  422b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  422b96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  422b9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422b9e:	8b 40 28             	mov    0x28(%rax),%eax
  422ba1:	85 c0                	test   %eax,%eax
  422ba3:	0f 84 bf 00 00 00    	je     422c68 <lastlistfield+0xde>
  422ba9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422bad:	8b 00                	mov    (%rax),%eax
  422baf:	83 f8 12             	cmp    $0x12,%eax
  422bb2:	74 0b                	je     422bbf <lastlistfield+0x35>
  422bb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422bb8:	8b 00                	mov    (%rax),%eax
  422bba:	83 f8 13             	cmp    $0x13,%eax
  422bbd:	75 4e                	jne    422c0d <lastlistfield+0x83>
  422bbf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  422bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422bc7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  422bcc:	48 89 ce             	mov    %rcx,%rsi
  422bcf:	48 89 c7             	mov    %rax,%rdi
  422bd2:	e8 b1 80 fe ff       	callq  40ac88 <luaK_setreturns>
  422bd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422bdb:	8b 50 24             	mov    0x24(%rax),%edx
  422bde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422be2:	48 8b 40 18          	mov    0x18(%rax),%rax
  422be6:	8b 70 08             	mov    0x8(%rax),%esi
  422be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422bed:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  422bf2:	48 89 c7             	mov    %rax,%rdi
  422bf5:	e8 ae a6 fe ff       	callq  40d2a8 <luaK_setlist>
  422bfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422bfe:	8b 40 24             	mov    0x24(%rax),%eax
  422c01:	8d 50 ff             	lea    -0x1(%rax),%edx
  422c04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c08:	89 50 24             	mov    %edx,0x24(%rax)
  422c0b:	eb 42                	jmp    422c4f <lastlistfield+0xc5>
  422c0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c11:	8b 00                	mov    (%rax),%eax
  422c13:	85 c0                	test   %eax,%eax
  422c15:	74 13                	je     422c2a <lastlistfield+0xa0>
  422c17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422c1f:	48 89 d6             	mov    %rdx,%rsi
  422c22:	48 89 c7             	mov    %rax,%rdi
  422c25:	e8 82 88 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  422c2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c2e:	8b 48 28             	mov    0x28(%rax),%ecx
  422c31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c35:	8b 50 24             	mov    0x24(%rax),%edx
  422c38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c3c:	48 8b 40 18          	mov    0x18(%rax),%rax
  422c40:	8b 70 08             	mov    0x8(%rax),%esi
  422c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422c47:	48 89 c7             	mov    %rax,%rdi
  422c4a:	e8 59 a6 fe ff       	callq  40d2a8 <luaK_setlist>
  422c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c53:	8b 50 24             	mov    0x24(%rax),%edx
  422c56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c5a:	8b 40 28             	mov    0x28(%rax),%eax
  422c5d:	01 c2                	add    %eax,%edx
  422c5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c63:	89 50 24             	mov    %edx,0x24(%rax)
  422c66:	eb 01                	jmp    422c69 <lastlistfield+0xdf>
  422c68:	90                   	nop
  422c69:	c9                   	leaveq 
  422c6a:	c3                   	retq   

0000000000422c6b <listfield>:
  422c6b:	55                   	push   %rbp
  422c6c:	48 89 e5             	mov    %rsp,%rbp
  422c6f:	48 83 ec 10          	sub    $0x10,%rsp
  422c73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  422c77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  422c7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422c83:	48 89 d6             	mov    %rdx,%rsi
  422c86:	48 89 c7             	mov    %rax,%rdi
  422c89:	e8 78 0e 00 00       	callq  423b06 <expr>
  422c8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c92:	8b 40 28             	mov    0x28(%rax),%eax
  422c95:	8d 50 01             	lea    0x1(%rax),%edx
  422c98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422c9c:	89 50 28             	mov    %edx,0x28(%rax)
  422c9f:	90                   	nop
  422ca0:	c9                   	leaveq 
  422ca1:	c3                   	retq   

0000000000422ca2 <field>:
  422ca2:	55                   	push   %rbp
  422ca3:	48 89 e5             	mov    %rsp,%rbp
  422ca6:	48 83 ec 10          	sub    $0x10,%rsp
  422caa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  422cae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  422cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422cb6:	8b 40 10             	mov    0x10(%rax),%eax
  422cb9:	83 f8 5b             	cmp    $0x5b,%eax
  422cbc:	74 42                	je     422d00 <field+0x5e>
  422cbe:	3d 23 01 00 00       	cmp    $0x123,%eax
  422cc3:	75 50                	jne    422d15 <field+0x73>
  422cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422cc9:	48 89 c7             	mov    %rax,%rdi
  422ccc:	e8 47 92 ff ff       	callq  41bf18 <luaX_lookahead>
  422cd1:	83 f8 3d             	cmp    $0x3d,%eax
  422cd4:	74 15                	je     422ceb <field+0x49>
  422cd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422cde:	48 89 d6             	mov    %rdx,%rsi
  422ce1:	48 89 c7             	mov    %rax,%rdi
  422ce4:	e8 82 ff ff ff       	callq  422c6b <listfield>
  422ce9:	eb 3e                	jmp    422d29 <field+0x87>
  422ceb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422cf3:	48 89 d6             	mov    %rdx,%rsi
  422cf6:	48 89 c7             	mov    %rax,%rdi
  422cf9:	e8 eb fc ff ff       	callq  4229e9 <recfield>
  422cfe:	eb 29                	jmp    422d29 <field+0x87>
  422d00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422d08:	48 89 d6             	mov    %rdx,%rsi
  422d0b:	48 89 c7             	mov    %rax,%rdi
  422d0e:	e8 d6 fc ff ff       	callq  4229e9 <recfield>
  422d13:	eb 14                	jmp    422d29 <field+0x87>
  422d15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  422d19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422d1d:	48 89 d6             	mov    %rdx,%rsi
  422d20:	48 89 c7             	mov    %rax,%rdi
  422d23:	e8 43 ff ff ff       	callq  422c6b <listfield>
  422d28:	90                   	nop
  422d29:	90                   	nop
  422d2a:	c9                   	leaveq 
  422d2b:	c3                   	retq   

0000000000422d2c <constructor>:
  422d2c:	55                   	push   %rbp
  422d2d:	48 89 e5             	mov    %rsp,%rbp
  422d30:	48 83 ec 50          	sub    $0x50,%rsp
  422d34:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  422d38:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  422d3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422d40:	48 8b 40 30          	mov    0x30(%rax),%rax
  422d44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  422d48:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422d4c:	8b 40 04             	mov    0x4(%rax),%eax
  422d4f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  422d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422d56:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  422d5c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  422d62:	b9 00 00 00 00       	mov    $0x0,%ecx
  422d67:	ba 00 00 00 00       	mov    $0x0,%edx
  422d6c:	be 13 00 00 00       	mov    $0x13,%esi
  422d71:	48 89 c7             	mov    %rax,%rdi
  422d74:	e8 6d 75 fe ff       	callq  40a2e6 <luaK_codeABCk>
  422d79:	89 45 f0             	mov    %eax,-0x10(%rbp)
  422d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422d80:	be 00 00 00 00       	mov    $0x0,%esi
  422d85:	48 89 c7             	mov    %rax,%rdi
  422d88:	e8 9e 74 fe ff       	callq  40a22b <luaK_code>
  422d8d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  422d94:	8b 45 e8             	mov    -0x18(%rbp),%eax
  422d97:	89 45 e0             	mov    %eax,-0x20(%rbp)
  422d9a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  422d9d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  422da0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  422da4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  422da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422dac:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  422db0:	0f b6 d0             	movzbl %al,%edx
  422db3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  422db7:	be 08 00 00 00       	mov    $0x8,%esi
  422dbc:	48 89 c7             	mov    %rax,%rdi
  422dbf:	e8 a0 df ff ff       	callq  420d64 <init_exp>
  422dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422dc8:	be 01 00 00 00       	mov    $0x1,%esi
  422dcd:	48 89 c7             	mov    %rax,%rdi
  422dd0:	e8 0a 77 fe ff       	callq  40a4df <luaK_reserveregs>
  422dd5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  422dd9:	ba 00 00 00 00       	mov    $0x0,%edx
  422dde:	be 00 00 00 00       	mov    $0x0,%esi
  422de3:	48 89 c7             	mov    %rax,%rdi
  422de6:	e8 79 df ff ff       	callq  420d64 <init_exp>
  422deb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422def:	be 7b 00 00 00       	mov    $0x7b,%esi
  422df4:	48 89 c7             	mov    %rax,%rdi
  422df7:	e8 45 de ff ff       	callq  420c41 <checknext>
  422dfc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422e00:	8b 40 10             	mov    0x10(%rax),%eax
  422e03:	83 f8 7d             	cmp    $0x7d,%eax
  422e06:	74 52                	je     422e5a <constructor+0x12e>
  422e08:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  422e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422e10:	48 89 d6             	mov    %rdx,%rsi
  422e13:	48 89 c7             	mov    %rax,%rdi
  422e16:	e8 e0 fc ff ff       	callq  422afb <closelistfield>
  422e1b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  422e1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422e23:	48 89 d6             	mov    %rdx,%rsi
  422e26:	48 89 c7             	mov    %rax,%rdi
  422e29:	e8 74 fe ff ff       	callq  422ca2 <field>
  422e2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422e32:	be 2c 00 00 00       	mov    $0x2c,%esi
  422e37:	48 89 c7             	mov    %rax,%rdi
  422e3a:	e8 9e dd ff ff       	callq  420bdd <testnext>
  422e3f:	85 c0                	test   %eax,%eax
  422e41:	75 b9                	jne    422dfc <constructor+0xd0>
  422e43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422e47:	be 3b 00 00 00       	mov    $0x3b,%esi
  422e4c:	48 89 c7             	mov    %rax,%rdi
  422e4f:	e8 89 dd ff ff       	callq  420bdd <testnext>
  422e54:	85 c0                	test   %eax,%eax
  422e56:	75 a4                	jne    422dfc <constructor+0xd0>
  422e58:	eb 01                	jmp    422e5b <constructor+0x12f>
  422e5a:	90                   	nop
  422e5b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  422e5e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  422e62:	89 d1                	mov    %edx,%ecx
  422e64:	ba 7b 00 00 00       	mov    $0x7b,%edx
  422e69:	be 7d 00 00 00       	mov    $0x7d,%esi
  422e6e:	48 89 c7             	mov    %rax,%rdi
  422e71:	e8 fa dd ff ff       	callq  420c70 <check_match>
  422e76:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  422e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422e7e:	48 89 d6             	mov    %rdx,%rsi
  422e81:	48 89 c7             	mov    %rax,%rdi
  422e84:	e8 01 fd ff ff       	callq  422b8a <lastlistfield>
  422e89:	8b 7d e0             	mov    -0x20(%rbp),%edi
  422e8c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  422e8f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  422e93:	8b 50 08             	mov    0x8(%rax),%edx
  422e96:	8b 75 f0             	mov    -0x10(%rbp),%esi
  422e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422e9d:	41 89 f8             	mov    %edi,%r8d
  422ea0:	48 89 c7             	mov    %rax,%rdi
  422ea3:	e8 39 a3 fe ff       	callq  40d1e1 <luaK_settablesize>
  422ea8:	90                   	nop
  422ea9:	c9                   	leaveq 
  422eaa:	c3                   	retq   

0000000000422eab <setvararg>:
  422eab:	55                   	push   %rbp
  422eac:	48 89 e5             	mov    %rsp,%rbp
  422eaf:	48 83 ec 10          	sub    $0x10,%rsp
  422eb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  422eb7:	89 75 f4             	mov    %esi,-0xc(%rbp)
  422eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422ebe:	48 8b 00             	mov    (%rax),%rax
  422ec1:	c6 40 0b 01          	movb   $0x1,0xb(%rax)
  422ec5:	8b 55 f4             	mov    -0xc(%rbp),%edx
  422ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  422ecc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  422ed2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  422ed8:	b9 00 00 00 00       	mov    $0x0,%ecx
  422edd:	be 51 00 00 00       	mov    $0x51,%esi
  422ee2:	48 89 c7             	mov    %rax,%rdi
  422ee5:	e8 fc 73 fe ff       	callq  40a2e6 <luaK_codeABCk>
  422eea:	90                   	nop
  422eeb:	c9                   	leaveq 
  422eec:	c3                   	retq   

0000000000422eed <parlist>:
  422eed:	55                   	push   %rbp
  422eee:	48 89 e5             	mov    %rsp,%rbp
  422ef1:	48 83 ec 30          	sub    $0x30,%rsp
  422ef5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  422ef9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422efd:	48 8b 40 30          	mov    0x30(%rax),%rax
  422f01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  422f05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422f09:	48 8b 00             	mov    (%rax),%rax
  422f0c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  422f10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  422f17:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  422f1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f22:	8b 40 10             	mov    0x10(%rax),%eax
  422f25:	83 f8 29             	cmp    $0x29,%eax
  422f28:	74 7a                	je     422fa4 <parlist+0xb7>
  422f2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f2e:	8b 40 10             	mov    0x10(%rax),%eax
  422f31:	3d 18 01 00 00       	cmp    $0x118,%eax
  422f36:	74 2b                	je     422f63 <parlist+0x76>
  422f38:	3d 23 01 00 00       	cmp    $0x123,%eax
  422f3d:	75 39                	jne    422f78 <parlist+0x8b>
  422f3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f43:	48 89 c7             	mov    %rax,%rdi
  422f46:	e8 de dd ff ff       	callq  420d29 <str_checkname>
  422f4b:	48 89 c2             	mov    %rax,%rdx
  422f4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f52:	48 89 d6             	mov    %rdx,%rsi
  422f55:	48 89 c7             	mov    %rax,%rdi
  422f58:	e8 fa df ff ff       	callq  420f57 <new_localvar>
  422f5d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  422f61:	eb 26                	jmp    422f89 <parlist+0x9c>
  422f63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f67:	48 89 c7             	mov    %rax,%rdi
  422f6a:	e8 39 8f ff ff       	callq  41bea8 <luaX_next>
  422f6f:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  422f76:	eb 11                	jmp    422f89 <parlist+0x9c>
  422f78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f7c:	be 3d 11 44 00       	mov    $0x44113d,%esi
  422f81:	48 89 c7             	mov    %rax,%rdi
  422f84:	e8 15 73 ff ff       	callq  41a29e <luaX_syntaxerror>
  422f89:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  422f8d:	75 15                	jne    422fa4 <parlist+0xb7>
  422f8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422f93:	be 2c 00 00 00       	mov    $0x2c,%esi
  422f98:	48 89 c7             	mov    %rax,%rdi
  422f9b:	e8 3d dc ff ff       	callq  420bdd <testnext>
  422fa0:	85 c0                	test   %eax,%eax
  422fa2:	75 86                	jne    422f2a <parlist+0x3d>
  422fa4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  422fa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  422fab:	89 d6                	mov    %edx,%esi
  422fad:	48 89 c7             	mov    %rax,%rdi
  422fb0:	e8 3c e3 ff ff       	callq  4212f1 <adjustlocalvars>
  422fb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422fb9:	0f b6 50 42          	movzbl 0x42(%rax),%edx
  422fbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422fc1:	88 50 0a             	mov    %dl,0xa(%rax)
  422fc4:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  422fc8:	74 19                	je     422fe3 <parlist+0xf6>
  422fca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  422fce:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  422fd2:	0f b6 d0             	movzbl %al,%edx
  422fd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422fd9:	89 d6                	mov    %edx,%esi
  422fdb:	48 89 c7             	mov    %rax,%rdi
  422fde:	e8 c8 fe ff ff       	callq  422eab <setvararg>
  422fe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422fe7:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  422feb:	0f b6 d0             	movzbl %al,%edx
  422fee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  422ff2:	89 d6                	mov    %edx,%esi
  422ff4:	48 89 c7             	mov    %rax,%rdi
  422ff7:	e8 e3 74 fe ff       	callq  40a4df <luaK_reserveregs>
  422ffc:	90                   	nop
  422ffd:	c9                   	leaveq 
  422ffe:	c3                   	retq   

0000000000422fff <body>:
  422fff:	55                   	push   %rbp
  423000:	48 89 e5             	mov    %rsp,%rbp
  423003:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  42300a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  42300e:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  423012:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  423018:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
  42301e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423022:	48 89 c7             	mov    %rax,%rdi
  423025:	e8 23 f3 ff ff       	callq  42234d <addprototype>
  42302a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42302e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423032:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  423038:	89 50 2c             	mov    %edx,0x2c(%rax)
  42303b:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  42303f:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  423043:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423047:	48 89 ce             	mov    %rcx,%rsi
  42304a:	48 89 c7             	mov    %rax,%rdi
  42304d:	e8 a8 f4 ff ff       	callq  4224fa <open_func>
  423052:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423056:	be 28 00 00 00       	mov    $0x28,%esi
  42305b:	48 89 c7             	mov    %rax,%rdi
  42305e:	e8 de db ff ff       	callq  420c41 <checknext>
  423063:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
  42306a:	74 39                	je     4230a5 <body+0xa6>
  42306c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423070:	ba 04 00 00 00       	mov    $0x4,%edx
  423075:	be 56 11 44 00       	mov    $0x441156,%esi
  42307a:	48 89 c7             	mov    %rax,%rdi
  42307d:	e8 46 72 ff ff       	callq  41a2c8 <luaX_newstring>
  423082:	48 89 c2             	mov    %rax,%rdx
  423085:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423089:	48 89 d6             	mov    %rdx,%rsi
  42308c:	48 89 c7             	mov    %rax,%rdi
  42308f:	e8 c3 de ff ff       	callq  420f57 <new_localvar>
  423094:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423098:	be 01 00 00 00       	mov    $0x1,%esi
  42309d:	48 89 c7             	mov    %rax,%rdi
  4230a0:	e8 4c e2 ff ff       	callq  4212f1 <adjustlocalvars>
  4230a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4230a9:	48 89 c7             	mov    %rax,%rdi
  4230ac:	e8 3c fe ff ff       	callq  422eed <parlist>
  4230b1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4230b5:	be 29 00 00 00       	mov    $0x29,%esi
  4230ba:	48 89 c7             	mov    %rax,%rdi
  4230bd:	e8 7f db ff ff       	callq  420c41 <checknext>
  4230c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4230c6:	48 89 c7             	mov    %rax,%rdi
  4230c9:	e8 0c f8 ff ff       	callq  4228da <statlist>
  4230ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4230d2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  4230d6:	8b 52 04             	mov    0x4(%rdx),%edx
  4230d9:	89 50 30             	mov    %edx,0x30(%rax)
  4230dc:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  4230e2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4230e6:	89 d1                	mov    %edx,%ecx
  4230e8:	ba 08 01 00 00       	mov    $0x108,%edx
  4230ed:	be 05 01 00 00       	mov    $0x105,%esi
  4230f2:	48 89 c7             	mov    %rax,%rdi
  4230f5:	e8 76 db ff ff       	callq  420c70 <check_match>
  4230fa:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  4230fe:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423102:	48 89 d6             	mov    %rdx,%rsi
  423105:	48 89 c7             	mov    %rax,%rdi
  423108:	e8 80 f3 ff ff       	callq  42248d <codeclosure>
  42310d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423111:	48 89 c7             	mov    %rax,%rdi
  423114:	e8 4c f5 ff ff       	callq  422665 <close_func>
  423119:	90                   	nop
  42311a:	c9                   	leaveq 
  42311b:	c3                   	retq   

000000000042311c <explist>:
  42311c:	55                   	push   %rbp
  42311d:	48 89 e5             	mov    %rsp,%rbp
  423120:	48 83 ec 20          	sub    $0x20,%rsp
  423124:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  423128:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42312c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  423133:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  423137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42313b:	48 89 d6             	mov    %rdx,%rsi
  42313e:	48 89 c7             	mov    %rax,%rdi
  423141:	e8 c0 09 00 00       	callq  423b06 <expr>
  423146:	eb 2e                	jmp    423176 <explist+0x5a>
  423148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42314c:	48 8b 40 30          	mov    0x30(%rax),%rax
  423150:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  423154:	48 89 d6             	mov    %rdx,%rsi
  423157:	48 89 c7             	mov    %rax,%rdi
  42315a:	e8 4d 83 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  42315f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  423163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423167:	48 89 d6             	mov    %rdx,%rsi
  42316a:	48 89 c7             	mov    %rax,%rdi
  42316d:	e8 94 09 00 00       	callq  423b06 <expr>
  423172:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  423176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42317a:	be 2c 00 00 00       	mov    $0x2c,%esi
  42317f:	48 89 c7             	mov    %rax,%rdi
  423182:	e8 56 da ff ff       	callq  420bdd <testnext>
  423187:	85 c0                	test   %eax,%eax
  423189:	75 bd                	jne    423148 <explist+0x2c>
  42318b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42318e:	c9                   	leaveq 
  42318f:	c3                   	retq   

0000000000423190 <funcargs>:
  423190:	55                   	push   %rbp
  423191:	48 89 e5             	mov    %rsp,%rbp
  423194:	48 83 ec 50          	sub    $0x50,%rsp
  423198:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42319c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4231a0:	89 55 bc             	mov    %edx,-0x44(%rbp)
  4231a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4231a7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4231ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4231af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4231b3:	8b 40 10             	mov    0x10(%rax),%eax
  4231b6:	83 f8 7b             	cmp    $0x7b,%eax
  4231b9:	0f 84 8d 00 00 00    	je     42324c <funcargs+0xbc>
  4231bf:	3d 24 01 00 00       	cmp    $0x124,%eax
  4231c4:	0f 84 97 00 00 00    	je     423261 <funcargs+0xd1>
  4231ca:	83 f8 28             	cmp    $0x28,%eax
  4231cd:	0f 85 b3 00 00 00    	jne    423286 <funcargs+0xf6>
  4231d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4231d7:	48 89 c7             	mov    %rax,%rdi
  4231da:	e8 c9 8c ff ff       	callq  41bea8 <luaX_next>
  4231df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4231e3:	8b 40 10             	mov    0x10(%rax),%eax
  4231e6:	83 f8 29             	cmp    $0x29,%eax
  4231e9:	75 09                	jne    4231f4 <funcargs+0x64>
  4231eb:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  4231f2:	eb 3b                	jmp    42322f <funcargs+0x9f>
  4231f4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4231f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4231fc:	48 89 d6             	mov    %rdx,%rsi
  4231ff:	48 89 c7             	mov    %rax,%rdi
  423202:	e8 15 ff ff ff       	callq  42311c <explist>
  423207:	8b 45 d0             	mov    -0x30(%rbp),%eax
  42320a:	83 f8 12             	cmp    $0x12,%eax
  42320d:	74 08                	je     423217 <funcargs+0x87>
  42320f:	8b 45 d0             	mov    -0x30(%rbp),%eax
  423212:	83 f8 13             	cmp    $0x13,%eax
  423215:	75 18                	jne    42322f <funcargs+0x9f>
  423217:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  42321b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42321f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  423224:	48 89 ce             	mov    %rcx,%rsi
  423227:	48 89 c7             	mov    %rax,%rdi
  42322a:	e8 59 7a fe ff       	callq  40ac88 <luaK_setreturns>
  42322f:	8b 55 bc             	mov    -0x44(%rbp),%edx
  423232:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423236:	89 d1                	mov    %edx,%ecx
  423238:	ba 28 00 00 00       	mov    $0x28,%edx
  42323d:	be 29 00 00 00       	mov    $0x29,%esi
  423242:	48 89 c7             	mov    %rax,%rdi
  423245:	e8 26 da ff ff       	callq  420c70 <check_match>
  42324a:	eb 4b                	jmp    423297 <funcargs+0x107>
  42324c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  423250:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423254:	48 89 d6             	mov    %rdx,%rsi
  423257:	48 89 c7             	mov    %rax,%rdi
  42325a:	e8 cd fa ff ff       	callq  422d2c <constructor>
  42325f:	eb 36                	jmp    423297 <funcargs+0x107>
  423261:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423265:	48 8b 50 18          	mov    0x18(%rax),%rdx
  423269:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42326d:	48 89 d6             	mov    %rdx,%rsi
  423270:	48 89 c7             	mov    %rax,%rdi
  423273:	e8 29 db ff ff       	callq  420da1 <codestring>
  423278:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42327c:	48 89 c7             	mov    %rax,%rdi
  42327f:	e8 24 8c ff ff       	callq  41bea8 <luaX_next>
  423284:	eb 11                	jmp    423297 <funcargs+0x107>
  423286:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42328a:	be 5b 11 44 00       	mov    $0x44115b,%esi
  42328f:	48 89 c7             	mov    %rax,%rdi
  423292:	e8 07 70 ff ff       	callq  41a29e <luaX_syntaxerror>
  423297:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42329b:	8b 40 08             	mov    0x8(%rax),%eax
  42329e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4232a1:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4232a4:	83 f8 12             	cmp    $0x12,%eax
  4232a7:	74 08                	je     4232b1 <funcargs+0x121>
  4232a9:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4232ac:	83 f8 13             	cmp    $0x13,%eax
  4232af:	75 09                	jne    4232ba <funcargs+0x12a>
  4232b1:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  4232b8:	eb 30                	jmp    4232ea <funcargs+0x15a>
  4232ba:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4232bd:	85 c0                	test   %eax,%eax
  4232bf:	74 13                	je     4232d4 <funcargs+0x144>
  4232c1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4232c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4232c9:	48 89 d6             	mov    %rdx,%rsi
  4232cc:	48 89 c7             	mov    %rax,%rdi
  4232cf:	e8 d8 81 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  4232d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4232d8:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  4232dc:	0f b6 c0             	movzbl %al,%eax
  4232df:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4232e2:	83 c2 01             	add    $0x1,%edx
  4232e5:	29 d0                	sub    %edx,%eax
  4232e7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4232ea:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4232ed:	8d 48 01             	lea    0x1(%rax),%ecx
  4232f0:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4232f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4232f7:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4232fd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  423303:	be 44 00 00 00       	mov    $0x44,%esi
  423308:	48 89 c7             	mov    %rax,%rdi
  42330b:	e8 d6 6f fe ff       	callq  40a2e6 <luaK_codeABCk>
  423310:	89 c2                	mov    %eax,%edx
  423312:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  423316:	be 12 00 00 00       	mov    $0x12,%esi
  42331b:	48 89 c7             	mov    %rax,%rdi
  42331e:	e8 41 da ff ff       	callq  420d64 <init_exp>
  423323:	8b 55 bc             	mov    -0x44(%rbp),%edx
  423326:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42332a:	89 d6                	mov    %edx,%esi
  42332c:	48 89 c7             	mov    %rax,%rdi
  42332f:	e8 76 9e fe ff       	callq  40d1aa <luaK_fixline>
  423334:	8b 45 ec             	mov    -0x14(%rbp),%eax
  423337:	8d 50 01             	lea    0x1(%rax),%edx
  42333a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42333e:	88 50 44             	mov    %dl,0x44(%rax)
  423341:	90                   	nop
  423342:	c9                   	leaveq 
  423343:	c3                   	retq   

0000000000423344 <primaryexp>:
  423344:	55                   	push   %rbp
  423345:	48 89 e5             	mov    %rsp,%rbp
  423348:	48 83 ec 20          	sub    $0x20,%rsp
  42334c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  423350:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  423354:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423358:	8b 40 10             	mov    0x10(%rax),%eax
  42335b:	83 f8 28             	cmp    $0x28,%eax
  42335e:	74 09                	je     423369 <primaryexp+0x25>
  423360:	3d 23 01 00 00       	cmp    $0x123,%eax
  423365:	74 5f                	je     4233c6 <primaryexp+0x82>
  423367:	eb 72                	jmp    4233db <primaryexp+0x97>
  423369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42336d:	8b 40 04             	mov    0x4(%rax),%eax
  423370:	89 45 fc             	mov    %eax,-0x4(%rbp)
  423373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423377:	48 89 c7             	mov    %rax,%rdi
  42337a:	e8 29 8b ff ff       	callq  41bea8 <luaX_next>
  42337f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  423383:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423387:	48 89 d6             	mov    %rdx,%rsi
  42338a:	48 89 c7             	mov    %rax,%rdi
  42338d:	e8 74 07 00 00       	callq  423b06 <expr>
  423392:	8b 55 fc             	mov    -0x4(%rbp),%edx
  423395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423399:	89 d1                	mov    %edx,%ecx
  42339b:	ba 28 00 00 00       	mov    $0x28,%edx
  4233a0:	be 29 00 00 00       	mov    $0x29,%esi
  4233a5:	48 89 c7             	mov    %rax,%rdi
  4233a8:	e8 c3 d8 ff ff       	callq  420c70 <check_match>
  4233ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4233b1:	48 8b 40 30          	mov    0x30(%rax),%rax
  4233b5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4233b9:	48 89 d6             	mov    %rdx,%rsi
  4233bc:	48 89 c7             	mov    %rax,%rdi
  4233bf:	e8 66 7a fe ff       	callq  40ae2a <luaK_dischargevars>
  4233c4:	eb 26                	jmp    4233ec <primaryexp+0xa8>
  4233c6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4233ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4233ce:	48 89 d6             	mov    %rdx,%rsi
  4233d1:	48 89 c7             	mov    %rax,%rdi
  4233d4:	e8 ea e4 ff ff       	callq  4218c3 <singlevar>
  4233d9:	eb 11                	jmp    4233ec <primaryexp+0xa8>
  4233db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4233df:	be 77 11 44 00       	mov    $0x441177,%esi
  4233e4:	48 89 c7             	mov    %rax,%rdi
  4233e7:	e8 b2 6e ff ff       	callq  41a29e <luaX_syntaxerror>
  4233ec:	c9                   	leaveq 
  4233ed:	c3                   	retq   

00000000004233ee <suffixedexp>:
  4233ee:	55                   	push   %rbp
  4233ef:	48 89 e5             	mov    %rsp,%rbp
  4233f2:	48 83 ec 60          	sub    $0x60,%rsp
  4233f6:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  4233fa:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4233fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  423402:	48 8b 40 30          	mov    0x30(%rax),%rax
  423406:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42340a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42340e:	8b 40 04             	mov    0x4(%rax),%eax
  423411:	89 45 f4             	mov    %eax,-0xc(%rbp)
  423414:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423418:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42341c:	48 89 d6             	mov    %rdx,%rsi
  42341f:	48 89 c7             	mov    %rax,%rdi
  423422:	e8 1d ff ff ff       	callq  423344 <primaryexp>
  423427:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42342b:	8b 40 10             	mov    0x10(%rax),%eax
  42342e:	83 f8 3a             	cmp    $0x3a,%eax
  423431:	0f 84 8e 00 00 00    	je     4234c5 <suffixedexp+0xd7>
  423437:	83 f8 3a             	cmp    $0x3a,%eax
  42343a:	7f 13                	jg     42344f <suffixedexp+0x61>
  42343c:	83 f8 28             	cmp    $0x28,%eax
  42343f:	0f 84 cf 00 00 00    	je     423514 <suffixedexp+0x126>
  423445:	83 f8 2e             	cmp    $0x2e,%eax
  423448:	74 23                	je     42346d <suffixedexp+0x7f>
  42344a:	e9 f4 00 00 00       	jmpq   423543 <suffixedexp+0x155>
  42344f:	83 f8 7b             	cmp    $0x7b,%eax
  423452:	0f 84 bc 00 00 00    	je     423514 <suffixedexp+0x126>
  423458:	3d 24 01 00 00       	cmp    $0x124,%eax
  42345d:	0f 84 b1 00 00 00    	je     423514 <suffixedexp+0x126>
  423463:	83 f8 5b             	cmp    $0x5b,%eax
  423466:	74 1d                	je     423485 <suffixedexp+0x97>
  423468:	e9 d6 00 00 00       	jmpq   423543 <suffixedexp+0x155>
  42346d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423471:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  423475:	48 89 d6             	mov    %rdx,%rsi
  423478:	48 89 c7             	mov    %rax,%rdi
  42347b:	e8 a7 f4 ff ff       	callq  422927 <fieldsel>
  423480:	e9 b9 00 00 00       	jmpq   42353e <suffixedexp+0x150>
  423485:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42348d:	48 89 d6             	mov    %rdx,%rsi
  423490:	48 89 c7             	mov    %rax,%rdi
  423493:	e8 24 81 fe ff       	callq  40b5bc <luaK_exp2anyregup>
  423498:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  42349c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4234a0:	48 89 d6             	mov    %rdx,%rsi
  4234a3:	48 89 c7             	mov    %rax,%rdi
  4234a6:	e8 e4 f4 ff ff       	callq  42298f <yindex>
  4234ab:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4234af:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4234b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4234b7:	48 89 ce             	mov    %rcx,%rsi
  4234ba:	48 89 c7             	mov    %rax,%rdi
  4234bd:	e8 c2 8a fe ff       	callq  40bf84 <luaK_indexed>
  4234c2:	90                   	nop
  4234c3:	eb 79                	jmp    42353e <suffixedexp+0x150>
  4234c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4234c9:	48 89 c7             	mov    %rax,%rdi
  4234cc:	e8 d7 89 ff ff       	callq  41bea8 <luaX_next>
  4234d1:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  4234d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4234d9:	48 89 d6             	mov    %rdx,%rsi
  4234dc:	48 89 c7             	mov    %rax,%rdi
  4234df:	e8 fb d8 ff ff       	callq  420ddf <codename>
  4234e4:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  4234e8:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4234ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4234f0:	48 89 ce             	mov    %rcx,%rsi
  4234f3:	48 89 c7             	mov    %rax,%rdi
  4234f6:	e8 79 84 fe ff       	callq  40b974 <luaK_self>
  4234fb:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4234fe:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  423502:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  423506:	48 89 ce             	mov    %rcx,%rsi
  423509:	48 89 c7             	mov    %rax,%rdi
  42350c:	e8 7f fc ff ff       	callq  423190 <funcargs>
  423511:	90                   	nop
  423512:	eb 2a                	jmp    42353e <suffixedexp+0x150>
  423514:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42351c:	48 89 d6             	mov    %rdx,%rsi
  42351f:	48 89 c7             	mov    %rax,%rdi
  423522:	e8 85 7f fe ff       	callq  40b4ac <luaK_exp2nextreg>
  423527:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42352a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42352e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  423532:	48 89 ce             	mov    %rcx,%rsi
  423535:	48 89 c7             	mov    %rax,%rdi
  423538:	e8 53 fc ff ff       	callq  423190 <funcargs>
  42353d:	90                   	nop
  42353e:	e9 e4 fe ff ff       	jmpq   423427 <suffixedexp+0x39>
  423543:	c9                   	leaveq 
  423544:	c3                   	retq   

0000000000423545 <simpleexp>:
  423545:	55                   	push   %rbp
  423546:	48 89 e5             	mov    %rsp,%rbp
  423549:	48 83 ec 20          	sub    $0x20,%rsp
  42354d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  423551:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  423555:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423559:	8b 40 10             	mov    0x10(%rax),%eax
  42355c:	3d 13 01 00 00       	cmp    $0x113,%eax
  423561:	0f 84 02 01 00 00    	je     423669 <simpleexp+0x124>
  423567:	3d 13 01 00 00       	cmp    $0x113,%eax
  42356c:	7f 3b                	jg     4235a9 <simpleexp+0x64>
  42356e:	3d 06 01 00 00       	cmp    $0x106,%eax
  423573:	0f 84 0b 01 00 00    	je     423684 <simpleexp+0x13f>
  423579:	3d 06 01 00 00       	cmp    $0x106,%eax
  42357e:	7f 0e                	jg     42358e <simpleexp+0x49>
  423580:	83 f8 7b             	cmp    $0x7b,%eax
  423583:	0f 84 7e 01 00 00    	je     423707 <simpleexp+0x1c2>
  423589:	e9 ba 01 00 00       	jmpq   423748 <simpleexp+0x203>
  42358e:	3d 08 01 00 00       	cmp    $0x108,%eax
  423593:	0f 84 83 01 00 00    	je     42371c <simpleexp+0x1d7>
  423599:	3d 0d 01 00 00       	cmp    $0x10d,%eax
  42359e:	0f 84 aa 00 00 00    	je     42364e <simpleexp+0x109>
  4235a4:	e9 9f 01 00 00       	jmpq   423748 <simpleexp+0x203>
  4235a9:	3d 21 01 00 00       	cmp    $0x121,%eax
  4235ae:	74 2a                	je     4235da <simpleexp+0x95>
  4235b0:	3d 21 01 00 00       	cmp    $0x121,%eax
  4235b5:	7f 10                	jg     4235c7 <simpleexp+0x82>
  4235b7:	3d 18 01 00 00       	cmp    $0x118,%eax
  4235bc:	0f 84 dd 00 00 00    	je     42369f <simpleexp+0x15a>
  4235c2:	e9 81 01 00 00       	jmpq   423748 <simpleexp+0x203>
  4235c7:	3d 22 01 00 00       	cmp    $0x122,%eax
  4235cc:	74 39                	je     423607 <simpleexp+0xc2>
  4235ce:	3d 24 01 00 00       	cmp    $0x124,%eax
  4235d3:	74 5d                	je     423632 <simpleexp+0xed>
  4235d5:	e9 6e 01 00 00       	jmpq   423748 <simpleexp+0x203>
  4235da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4235de:	ba 00 00 00 00       	mov    $0x0,%edx
  4235e3:	be 05 00 00 00       	mov    $0x5,%esi
  4235e8:	48 89 c7             	mov    %rax,%rdi
  4235eb:	e8 74 d7 ff ff       	callq  420d64 <init_exp>
  4235f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4235f4:	f2 0f 10 40 18       	movsd  0x18(%rax),%xmm0
  4235f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4235fd:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
  423602:	e9 56 01 00 00       	jmpq   42375d <simpleexp+0x218>
  423607:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42360b:	ba 00 00 00 00       	mov    $0x0,%edx
  423610:	be 06 00 00 00       	mov    $0x6,%esi
  423615:	48 89 c7             	mov    %rax,%rdi
  423618:	e8 47 d7 ff ff       	callq  420d64 <init_exp>
  42361d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423621:	48 8b 50 18          	mov    0x18(%rax),%rdx
  423625:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423629:	48 89 50 08          	mov    %rdx,0x8(%rax)
  42362d:	e9 2b 01 00 00       	jmpq   42375d <simpleexp+0x218>
  423632:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423636:	48 8b 50 18          	mov    0x18(%rax),%rdx
  42363a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42363e:	48 89 d6             	mov    %rdx,%rsi
  423641:	48 89 c7             	mov    %rax,%rdi
  423644:	e8 58 d7 ff ff       	callq  420da1 <codestring>
  423649:	e9 0f 01 00 00       	jmpq   42375d <simpleexp+0x218>
  42364e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423652:	ba 00 00 00 00       	mov    $0x0,%edx
  423657:	be 01 00 00 00       	mov    $0x1,%esi
  42365c:	48 89 c7             	mov    %rax,%rdi
  42365f:	e8 00 d7 ff ff       	callq  420d64 <init_exp>
  423664:	e9 f4 00 00 00       	jmpq   42375d <simpleexp+0x218>
  423669:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42366d:	ba 00 00 00 00       	mov    $0x0,%edx
  423672:	be 02 00 00 00       	mov    $0x2,%esi
  423677:	48 89 c7             	mov    %rax,%rdi
  42367a:	e8 e5 d6 ff ff       	callq  420d64 <init_exp>
  42367f:	e9 d9 00 00 00       	jmpq   42375d <simpleexp+0x218>
  423684:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423688:	ba 00 00 00 00       	mov    $0x0,%edx
  42368d:	be 03 00 00 00       	mov    $0x3,%esi
  423692:	48 89 c7             	mov    %rax,%rdi
  423695:	e8 ca d6 ff ff       	callq  420d64 <init_exp>
  42369a:	e9 be 00 00 00       	jmpq   42375d <simpleexp+0x218>
  42369f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4236a3:	48 8b 40 30          	mov    0x30(%rax),%rax
  4236a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4236ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4236af:	48 8b 00             	mov    (%rax),%rax
  4236b2:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  4236b6:	84 c0                	test   %al,%al
  4236b8:	75 11                	jne    4236cb <simpleexp+0x186>
  4236ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4236be:	be 90 11 44 00       	mov    $0x441190,%esi
  4236c3:	48 89 c7             	mov    %rax,%rdi
  4236c6:	e8 d3 6b ff ff       	callq  41a29e <luaX_syntaxerror>
  4236cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4236cf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4236d5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4236db:	b9 00 00 00 00       	mov    $0x0,%ecx
  4236e0:	ba 00 00 00 00       	mov    $0x0,%edx
  4236e5:	be 50 00 00 00       	mov    $0x50,%esi
  4236ea:	48 89 c7             	mov    %rax,%rdi
  4236ed:	e8 f4 6b fe ff       	callq  40a2e6 <luaK_codeABCk>
  4236f2:	89 c2                	mov    %eax,%edx
  4236f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4236f8:	be 13 00 00 00       	mov    $0x13,%esi
  4236fd:	48 89 c7             	mov    %rax,%rdi
  423700:	e8 5f d6 ff ff       	callq  420d64 <init_exp>
  423705:	eb 56                	jmp    42375d <simpleexp+0x218>
  423707:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42370b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42370f:	48 89 d6             	mov    %rdx,%rsi
  423712:	48 89 c7             	mov    %rax,%rdi
  423715:	e8 12 f6 ff ff       	callq  422d2c <constructor>
  42371a:	eb 4d                	jmp    423769 <simpleexp+0x224>
  42371c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423720:	48 89 c7             	mov    %rax,%rdi
  423723:	e8 80 87 ff ff       	callq  41bea8 <luaX_next>
  423728:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42372c:	8b 50 04             	mov    0x4(%rax),%edx
  42372f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  423733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423737:	89 d1                	mov    %edx,%ecx
  423739:	ba 00 00 00 00       	mov    $0x0,%edx
  42373e:	48 89 c7             	mov    %rax,%rdi
  423741:	e8 b9 f8 ff ff       	callq  422fff <body>
  423746:	eb 21                	jmp    423769 <simpleexp+0x224>
  423748:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42374c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423750:	48 89 d6             	mov    %rdx,%rsi
  423753:	48 89 c7             	mov    %rax,%rdi
  423756:	e8 93 fc ff ff       	callq  4233ee <suffixedexp>
  42375b:	eb 0c                	jmp    423769 <simpleexp+0x224>
  42375d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423761:	48 89 c7             	mov    %rax,%rdi
  423764:	e8 3f 87 ff ff       	callq  41bea8 <luaX_next>
  423769:	c9                   	leaveq 
  42376a:	c3                   	retq   

000000000042376b <getunopr>:
  42376b:	55                   	push   %rbp
  42376c:	48 89 e5             	mov    %rsp,%rbp
  42376f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  423772:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  423776:	74 24                	je     42379c <getunopr+0x31>
  423778:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  42377c:	7f 08                	jg     423786 <getunopr+0x1b>
  42377e:	83 7d fc 23          	cmpl   $0x23,-0x4(%rbp)
  423782:	74 26                	je     4237aa <getunopr+0x3f>
  423784:	eb 2b                	jmp    4237b1 <getunopr+0x46>
  423786:	83 7d fc 7e          	cmpl   $0x7e,-0x4(%rbp)
  42378a:	74 17                	je     4237a3 <getunopr+0x38>
  42378c:	81 7d fc 0e 01 00 00 	cmpl   $0x10e,-0x4(%rbp)
  423793:	75 1c                	jne    4237b1 <getunopr+0x46>
  423795:	b8 02 00 00 00       	mov    $0x2,%eax
  42379a:	eb 1a                	jmp    4237b6 <getunopr+0x4b>
  42379c:	b8 00 00 00 00       	mov    $0x0,%eax
  4237a1:	eb 13                	jmp    4237b6 <getunopr+0x4b>
  4237a3:	b8 01 00 00 00       	mov    $0x1,%eax
  4237a8:	eb 0c                	jmp    4237b6 <getunopr+0x4b>
  4237aa:	b8 03 00 00 00       	mov    $0x3,%eax
  4237af:	eb 05                	jmp    4237b6 <getunopr+0x4b>
  4237b1:	b8 04 00 00 00       	mov    $0x4,%eax
  4237b6:	5d                   	pop    %rbp
  4237b7:	c3                   	retq   

00000000004237b8 <getbinopr>:
  4237b8:	55                   	push   %rbp
  4237b9:	48 89 e5             	mov    %rsp,%rbp
  4237bc:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4237bf:	83 7d fc 7e          	cmpl   $0x7e,-0x4(%rbp)
  4237c3:	0f 84 85 01 00 00    	je     42394e <getbinopr+0x196>
  4237c9:	83 7d fc 7e          	cmpl   $0x7e,-0x4(%rbp)
  4237cd:	0f 8f 8a 00 00 00    	jg     42385d <getbinopr+0xa5>
  4237d3:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  4237d7:	0f 84 33 01 00 00    	je     423910 <getbinopr+0x158>
  4237dd:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  4237e1:	7f 38                	jg     42381b <getbinopr+0x63>
  4237e3:	83 7d fc 26          	cmpl   $0x26,-0x4(%rbp)
  4237e7:	0f 84 53 01 00 00    	je     423940 <getbinopr+0x188>
  4237ed:	83 7d fc 26          	cmpl   $0x26,-0x4(%rbp)
  4237f1:	7f 0f                	jg     423802 <getbinopr+0x4a>
  4237f3:	83 7d fc 25          	cmpl   $0x25,-0x4(%rbp)
  4237f7:	0f 84 27 01 00 00    	je     423924 <getbinopr+0x16c>
  4237fd:	e9 a0 01 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  423802:	83 7d fc 2a          	cmpl   $0x2a,-0x4(%rbp)
  423806:	0f 84 0e 01 00 00    	je     42391a <getbinopr+0x162>
  42380c:	83 7d fc 2b          	cmpl   $0x2b,-0x4(%rbp)
  423810:	0f 84 f0 00 00 00    	je     423906 <getbinopr+0x14e>
  423816:	e9 87 01 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  42381b:	83 7d fc 3e          	cmpl   $0x3e,-0x4(%rbp)
  42381f:	0f 84 61 01 00 00    	je     423986 <getbinopr+0x1ce>
  423825:	83 7d fc 3e          	cmpl   $0x3e,-0x4(%rbp)
  423829:	7f 19                	jg     423844 <getbinopr+0x8c>
  42382b:	83 7d fc 2f          	cmpl   $0x2f,-0x4(%rbp)
  42382f:	0f 84 fd 00 00 00    	je     423932 <getbinopr+0x17a>
  423835:	83 7d fc 3c          	cmpl   $0x3c,-0x4(%rbp)
  423839:	0f 84 39 01 00 00    	je     423978 <getbinopr+0x1c0>
  42383f:	e9 5e 01 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  423844:	83 7d fc 5e          	cmpl   $0x5e,-0x4(%rbp)
  423848:	0f 84 dd 00 00 00    	je     42392b <getbinopr+0x173>
  42384e:	83 7d fc 7c          	cmpl   $0x7c,-0x4(%rbp)
  423852:	0f 84 ef 00 00 00    	je     423947 <getbinopr+0x18f>
  423858:	e9 45 01 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  42385d:	81 7d fc 19 01 00 00 	cmpl   $0x119,-0x4(%rbp)
  423864:	0f 84 07 01 00 00    	je     423971 <getbinopr+0x1b9>
  42386a:	81 7d fc 19 01 00 00 	cmpl   $0x119,-0x4(%rbp)
  423871:	7f 47                	jg     4238ba <getbinopr+0x102>
  423873:	81 7d fc 0f 01 00 00 	cmpl   $0x10f,-0x4(%rbp)
  42387a:	0f 84 1b 01 00 00    	je     42399b <getbinopr+0x1e3>
  423880:	81 7d fc 0f 01 00 00 	cmpl   $0x10f,-0x4(%rbp)
  423887:	7f 12                	jg     42389b <getbinopr+0xe3>
  423889:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
  423890:	0f 84 fe 00 00 00    	je     423994 <getbinopr+0x1dc>
  423896:	e9 07 01 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  42389b:	81 7d fc 16 01 00 00 	cmpl   $0x116,-0x4(%rbp)
  4238a2:	0f 84 91 00 00 00    	je     423939 <getbinopr+0x181>
  4238a8:	81 7d fc 17 01 00 00 	cmpl   $0x117,-0x4(%rbp)
  4238af:	0f 84 ae 00 00 00    	je     423963 <getbinopr+0x1ab>
  4238b5:	e9 e8 00 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  4238ba:	81 7d fc 1c 01 00 00 	cmpl   $0x11c,-0x4(%rbp)
  4238c1:	0f 84 a3 00 00 00    	je     42396a <getbinopr+0x1b2>
  4238c7:	81 7d fc 1c 01 00 00 	cmpl   $0x11c,-0x4(%rbp)
  4238ce:	7f 1f                	jg     4238ef <getbinopr+0x137>
  4238d0:	81 7d fc 1a 01 00 00 	cmpl   $0x11a,-0x4(%rbp)
  4238d7:	0f 84 b0 00 00 00    	je     42398d <getbinopr+0x1d5>
  4238dd:	81 7d fc 1b 01 00 00 	cmpl   $0x11b,-0x4(%rbp)
  4238e4:	0f 84 95 00 00 00    	je     42397f <getbinopr+0x1c7>
  4238ea:	e9 b3 00 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  4238ef:	81 7d fc 1d 01 00 00 	cmpl   $0x11d,-0x4(%rbp)
  4238f6:	74 5d                	je     423955 <getbinopr+0x19d>
  4238f8:	81 7d fc 1e 01 00 00 	cmpl   $0x11e,-0x4(%rbp)
  4238ff:	74 5b                	je     42395c <getbinopr+0x1a4>
  423901:	e9 9c 00 00 00       	jmpq   4239a2 <getbinopr+0x1ea>
  423906:	b8 00 00 00 00       	mov    $0x0,%eax
  42390b:	e9 97 00 00 00       	jmpq   4239a7 <getbinopr+0x1ef>
  423910:	b8 01 00 00 00       	mov    $0x1,%eax
  423915:	e9 8d 00 00 00       	jmpq   4239a7 <getbinopr+0x1ef>
  42391a:	b8 02 00 00 00       	mov    $0x2,%eax
  42391f:	e9 83 00 00 00       	jmpq   4239a7 <getbinopr+0x1ef>
  423924:	b8 03 00 00 00       	mov    $0x3,%eax
  423929:	eb 7c                	jmp    4239a7 <getbinopr+0x1ef>
  42392b:	b8 04 00 00 00       	mov    $0x4,%eax
  423930:	eb 75                	jmp    4239a7 <getbinopr+0x1ef>
  423932:	b8 05 00 00 00       	mov    $0x5,%eax
  423937:	eb 6e                	jmp    4239a7 <getbinopr+0x1ef>
  423939:	b8 06 00 00 00       	mov    $0x6,%eax
  42393e:	eb 67                	jmp    4239a7 <getbinopr+0x1ef>
  423940:	b8 07 00 00 00       	mov    $0x7,%eax
  423945:	eb 60                	jmp    4239a7 <getbinopr+0x1ef>
  423947:	b8 08 00 00 00       	mov    $0x8,%eax
  42394c:	eb 59                	jmp    4239a7 <getbinopr+0x1ef>
  42394e:	b8 09 00 00 00       	mov    $0x9,%eax
  423953:	eb 52                	jmp    4239a7 <getbinopr+0x1ef>
  423955:	b8 0a 00 00 00       	mov    $0xa,%eax
  42395a:	eb 4b                	jmp    4239a7 <getbinopr+0x1ef>
  42395c:	b8 0b 00 00 00       	mov    $0xb,%eax
  423961:	eb 44                	jmp    4239a7 <getbinopr+0x1ef>
  423963:	b8 0c 00 00 00       	mov    $0xc,%eax
  423968:	eb 3d                	jmp    4239a7 <getbinopr+0x1ef>
  42396a:	b8 10 00 00 00       	mov    $0x10,%eax
  42396f:	eb 36                	jmp    4239a7 <getbinopr+0x1ef>
  423971:	b8 0d 00 00 00       	mov    $0xd,%eax
  423976:	eb 2f                	jmp    4239a7 <getbinopr+0x1ef>
  423978:	b8 0e 00 00 00       	mov    $0xe,%eax
  42397d:	eb 28                	jmp    4239a7 <getbinopr+0x1ef>
  42397f:	b8 0f 00 00 00       	mov    $0xf,%eax
  423984:	eb 21                	jmp    4239a7 <getbinopr+0x1ef>
  423986:	b8 11 00 00 00       	mov    $0x11,%eax
  42398b:	eb 1a                	jmp    4239a7 <getbinopr+0x1ef>
  42398d:	b8 12 00 00 00       	mov    $0x12,%eax
  423992:	eb 13                	jmp    4239a7 <getbinopr+0x1ef>
  423994:	b8 13 00 00 00       	mov    $0x13,%eax
  423999:	eb 0c                	jmp    4239a7 <getbinopr+0x1ef>
  42399b:	b8 14 00 00 00       	mov    $0x14,%eax
  4239a0:	eb 05                	jmp    4239a7 <getbinopr+0x1ef>
  4239a2:	b8 15 00 00 00       	mov    $0x15,%eax
  4239a7:	5d                   	pop    %rbp
  4239a8:	c3                   	retq   

00000000004239a9 <subexpr>:
  4239a9:	55                   	push   %rbp
  4239aa:	48 89 e5             	mov    %rsp,%rbp
  4239ad:	48 83 ec 50          	sub    $0x50,%rsp
  4239b1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4239b5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4239b9:	89 55 bc             	mov    %edx,-0x44(%rbp)
  4239bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4239c0:	48 8b 40 38          	mov    0x38(%rax),%rax
  4239c4:	48 89 c7             	mov    %rax,%rdi
  4239c7:	e8 da 21 00 00       	callq  425ba6 <luaE_incCstack>
  4239cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4239d0:	8b 40 10             	mov    0x10(%rax),%eax
  4239d3:	89 c7                	mov    %eax,%edi
  4239d5:	e8 91 fd ff ff       	callq  42376b <getunopr>
  4239da:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4239dd:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)
  4239e1:	74 4a                	je     423a2d <subexpr+0x84>
  4239e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4239e7:	8b 40 04             	mov    0x4(%rax),%eax
  4239ea:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4239ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4239f1:	48 89 c7             	mov    %rax,%rdi
  4239f4:	e8 af 84 ff ff       	callq  41bea8 <luaX_next>
  4239f9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4239fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a01:	ba 0c 00 00 00       	mov    $0xc,%edx
  423a06:	48 89 ce             	mov    %rcx,%rsi
  423a09:	48 89 c7             	mov    %rax,%rdi
  423a0c:	e8 98 ff ff ff       	callq  4239a9 <subexpr>
  423a11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a15:	48 8b 40 30          	mov    0x30(%rax),%rax
  423a19:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  423a1c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  423a20:	8b 75 f8             	mov    -0x8(%rbp),%esi
  423a23:	48 89 c7             	mov    %rax,%rdi
  423a26:	e8 d4 91 fe ff       	callq  40cbff <luaK_prefix>
  423a2b:	eb 13                	jmp    423a40 <subexpr+0x97>
  423a2d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  423a31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a35:	48 89 d6             	mov    %rdx,%rsi
  423a38:	48 89 c7             	mov    %rax,%rdi
  423a3b:	e8 05 fb ff ff       	callq  423545 <simpleexp>
  423a40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a44:	8b 40 10             	mov    0x10(%rax),%eax
  423a47:	89 c7                	mov    %eax,%edi
  423a49:	e8 6a fd ff ff       	callq  4237b8 <getbinopr>
  423a4e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  423a51:	eb 7a                	jmp    423acd <subexpr+0x124>
  423a53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a57:	8b 40 04             	mov    0x4(%rax),%eax
  423a5a:	89 45 f0             	mov    %eax,-0x10(%rbp)
  423a5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a61:	48 89 c7             	mov    %rax,%rdi
  423a64:	e8 3f 84 ff ff       	callq  41bea8 <luaX_next>
  423a69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a6d:	48 8b 40 30          	mov    0x30(%rax),%rax
  423a71:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  423a75:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  423a78:	89 ce                	mov    %ecx,%esi
  423a7a:	48 89 c7             	mov    %rax,%rdi
  423a7d:	e8 15 92 fe ff       	callq  40cc97 <luaK_infix>
  423a82:	8b 45 fc             	mov    -0x4(%rbp),%eax
  423a85:	0f b6 84 00 c1 11 44 	movzbl 0x4411c1(%rax,%rax,1),%eax
  423a8c:	00 
  423a8d:	0f b6 d0             	movzbl %al,%edx
  423a90:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  423a94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423a98:	48 89 ce             	mov    %rcx,%rsi
  423a9b:	48 89 c7             	mov    %rax,%rdi
  423a9e:	e8 06 ff ff ff       	callq  4239a9 <subexpr>
  423aa3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  423aa6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423aaa:	48 8b 40 30          	mov    0x30(%rax),%rax
  423aae:	8b 7d f0             	mov    -0x10(%rbp),%edi
  423ab1:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  423ab5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  423ab9:	8b 75 fc             	mov    -0x4(%rbp),%esi
  423abc:	41 89 f8             	mov    %edi,%r8d
  423abf:	48 89 c7             	mov    %rax,%rdi
  423ac2:	e8 d6 93 fe ff       	callq  40ce9d <luaK_posfix>
  423ac7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  423aca:	89 45 fc             	mov    %eax,-0x4(%rbp)
  423acd:	83 7d fc 15          	cmpl   $0x15,-0x4(%rbp)
  423ad1:	74 17                	je     423aea <subexpr+0x141>
  423ad3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  423ad6:	0f b6 84 00 c0 11 44 	movzbl 0x4411c0(%rax,%rax,1),%eax
  423add:	00 
  423ade:	0f b6 c0             	movzbl %al,%eax
  423ae1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
  423ae4:	0f 8c 69 ff ff ff    	jl     423a53 <subexpr+0xaa>
  423aea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423aee:	48 8b 40 38          	mov    0x38(%rax),%rax
  423af2:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
  423af8:	83 ea 01             	sub    $0x1,%edx
  423afb:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  423b01:	8b 45 fc             	mov    -0x4(%rbp),%eax
  423b04:	c9                   	leaveq 
  423b05:	c3                   	retq   

0000000000423b06 <expr>:
  423b06:	55                   	push   %rbp
  423b07:	48 89 e5             	mov    %rsp,%rbp
  423b0a:	48 83 ec 10          	sub    $0x10,%rsp
  423b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  423b12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  423b16:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  423b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  423b1e:	ba 00 00 00 00       	mov    $0x0,%edx
  423b23:	48 89 ce             	mov    %rcx,%rsi
  423b26:	48 89 c7             	mov    %rax,%rdi
  423b29:	e8 7b fe ff ff       	callq  4239a9 <subexpr>
  423b2e:	90                   	nop
  423b2f:	c9                   	leaveq 
  423b30:	c3                   	retq   

0000000000423b31 <block>:
  423b31:	55                   	push   %rbp
  423b32:	48 89 e5             	mov    %rsp,%rbp
  423b35:	48 83 ec 30          	sub    $0x30,%rsp
  423b39:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  423b3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423b41:	48 8b 40 30          	mov    0x30(%rax),%rax
  423b45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  423b49:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  423b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  423b51:	ba 00 00 00 00       	mov    $0x0,%edx
  423b56:	48 89 ce             	mov    %rcx,%rsi
  423b59:	48 89 c7             	mov    %rax,%rdi
  423b5c:	e8 04 e5 ff ff       	callq  422065 <enterblock>
  423b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423b65:	48 89 c7             	mov    %rax,%rdi
  423b68:	e8 6d ed ff ff       	callq  4228da <statlist>
  423b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  423b71:	48 89 c7             	mov    %rax,%rdi
  423b74:	e8 52 e6 ff ff       	callq  4221cb <leaveblock>
  423b79:	90                   	nop
  423b7a:	c9                   	leaveq 
  423b7b:	c3                   	retq   

0000000000423b7c <check_conflict>:
  423b7c:	55                   	push   %rbp
  423b7d:	48 89 e5             	mov    %rsp,%rbp
  423b80:	48 83 ec 40          	sub    $0x40,%rsp
  423b84:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  423b88:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  423b8c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  423b90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423b94:	48 8b 40 30          	mov    0x30(%rax),%rax
  423b98:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  423b9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423ba0:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  423ba4:	0f b6 c0             	movzbl %al,%eax
  423ba7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  423baa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  423bb1:	e9 f7 00 00 00       	jmpq   423cad <check_conflict+0x131>
  423bb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423bba:	8b 40 08             	mov    0x8(%rax),%eax
  423bbd:	83 f8 0b             	cmp    $0xb,%eax
  423bc0:	0f 86 dc 00 00 00    	jbe    423ca2 <check_conflict+0x126>
  423bc6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423bca:	8b 40 08             	mov    0x8(%rax),%eax
  423bcd:	83 f8 0f             	cmp    $0xf,%eax
  423bd0:	0f 87 cc 00 00 00    	ja     423ca2 <check_conflict+0x126>
  423bd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423bda:	8b 40 08             	mov    0x8(%rax),%eax
  423bdd:	83 f8 0d             	cmp    $0xd,%eax
  423be0:	75 49                	jne    423c2b <check_conflict+0xaf>
  423be2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423be6:	8b 00                	mov    (%rax),%eax
  423be8:	83 f8 0a             	cmp    $0xa,%eax
  423beb:	0f 85 b1 00 00 00    	jne    423ca2 <check_conflict+0x126>
  423bf1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423bf5:	0f b6 40 12          	movzbl 0x12(%rax),%eax
  423bf9:	0f b6 d0             	movzbl %al,%edx
  423bfc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423c00:	8b 40 08             	mov    0x8(%rax),%eax
  423c03:	39 c2                	cmp    %eax,%edx
  423c05:	0f 85 97 00 00 00    	jne    423ca2 <check_conflict+0x126>
  423c0b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  423c12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c16:	c7 40 08 0f 00 00 00 	movl   $0xf,0x8(%rax)
  423c1d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  423c20:	89 c2                	mov    %eax,%edx
  423c22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c26:	88 50 12             	mov    %dl,0x12(%rax)
  423c29:	eb 77                	jmp    423ca2 <check_conflict+0x126>
  423c2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423c2f:	8b 00                	mov    (%rax),%eax
  423c31:	83 f8 09             	cmp    $0x9,%eax
  423c34:	75 27                	jne    423c5d <check_conflict+0xe1>
  423c36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c3a:	0f b6 50 12          	movzbl 0x12(%rax),%edx
  423c3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423c42:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  423c46:	38 c2                	cmp    %al,%dl
  423c48:	75 13                	jne    423c5d <check_conflict+0xe1>
  423c4a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  423c51:	8b 45 ec             	mov    -0x14(%rbp),%eax
  423c54:	89 c2                	mov    %eax,%edx
  423c56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c5a:	88 50 12             	mov    %dl,0x12(%rax)
  423c5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c61:	8b 40 08             	mov    0x8(%rax),%eax
  423c64:	83 f8 0c             	cmp    $0xc,%eax
  423c67:	75 39                	jne    423ca2 <check_conflict+0x126>
  423c69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423c6d:	8b 00                	mov    (%rax),%eax
  423c6f:	83 f8 09             	cmp    $0x9,%eax
  423c72:	75 2e                	jne    423ca2 <check_conflict+0x126>
  423c74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c78:	0f b7 40 10          	movzwl 0x10(%rax),%eax
  423c7c:	0f bf d0             	movswl %ax,%edx
  423c7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423c83:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  423c87:	0f b6 c0             	movzbl %al,%eax
  423c8a:	39 c2                	cmp    %eax,%edx
  423c8c:	75 14                	jne    423ca2 <check_conflict+0x126>
  423c8e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  423c95:	8b 45 ec             	mov    -0x14(%rbp),%eax
  423c98:	89 c2                	mov    %eax,%edx
  423c9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423c9e:	66 89 50 10          	mov    %dx,0x10(%rax)
  423ca2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423ca6:	48 8b 00             	mov    (%rax),%rax
  423ca9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  423cad:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  423cb2:	0f 85 fe fe ff ff    	jne    423bb6 <check_conflict+0x3a>
  423cb8:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  423cbc:	74 70                	je     423d2e <check_conflict+0x1b2>
  423cbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423cc2:	8b 00                	mov    (%rax),%eax
  423cc4:	83 f8 09             	cmp    $0x9,%eax
  423cc7:	75 2d                	jne    423cf6 <check_conflict+0x17a>
  423cc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423ccd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  423cd1:	0f b6 c8             	movzbl %al,%ecx
  423cd4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  423cd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423cdb:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  423ce1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  423ce7:	be 00 00 00 00       	mov    $0x0,%esi
  423cec:	48 89 c7             	mov    %rax,%rdi
  423cef:	e8 f2 65 fe ff       	callq  40a2e6 <luaK_codeABCk>
  423cf4:	eb 27                	jmp    423d1d <check_conflict+0x1a1>
  423cf6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423cfa:	8b 48 08             	mov    0x8(%rax),%ecx
  423cfd:	8b 55 ec             	mov    -0x14(%rbp),%edx
  423d00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423d04:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  423d0a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  423d10:	be 09 00 00 00       	mov    $0x9,%esi
  423d15:	48 89 c7             	mov    %rax,%rdi
  423d18:	e8 c9 65 fe ff       	callq  40a2e6 <luaK_codeABCk>
  423d1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423d21:	be 01 00 00 00       	mov    $0x1,%esi
  423d26:	48 89 c7             	mov    %rax,%rdi
  423d29:	e8 b1 67 fe ff       	callq  40a4df <luaK_reserveregs>
  423d2e:	90                   	nop
  423d2f:	c9                   	leaveq 
  423d30:	c3                   	retq   

0000000000423d31 <restassign>:
  423d31:	55                   	push   %rbp
  423d32:	48 89 e5             	mov    %rsp,%rbp
  423d35:	48 83 ec 60          	sub    $0x60,%rsp
  423d39:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  423d3d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  423d41:	89 55 ac             	mov    %edx,-0x54(%rbp)
  423d44:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423d48:	8b 40 08             	mov    0x8(%rax),%eax
  423d4b:	83 f8 08             	cmp    $0x8,%eax
  423d4e:	76 0c                	jbe    423d5c <restassign+0x2b>
  423d50:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423d54:	8b 40 08             	mov    0x8(%rax),%eax
  423d57:	83 f8 0f             	cmp    $0xf,%eax
  423d5a:	76 11                	jbe    423d6d <restassign+0x3c>
  423d5c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423d60:	be ea 11 44 00       	mov    $0x4411ea,%esi
  423d65:	48 89 c7             	mov    %rax,%rdi
  423d68:	e8 31 65 ff ff       	callq  41a29e <luaX_syntaxerror>
  423d6d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423d71:	48 8d 50 08          	lea    0x8(%rax),%rdx
  423d75:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423d79:	48 89 d6             	mov    %rdx,%rsi
  423d7c:	48 89 c7             	mov    %rax,%rdi
  423d7f:	e8 4b d4 ff ff       	callq  4211cf <check_readonly>
  423d84:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423d88:	be 2c 00 00 00       	mov    $0x2c,%esi
  423d8d:	48 89 c7             	mov    %rax,%rdi
  423d90:	e8 48 ce ff ff       	callq  420bdd <testnext>
  423d95:	85 c0                	test   %eax,%eax
  423d97:	0f 84 8c 00 00 00    	je     423e29 <restassign+0xf8>
  423d9d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423da1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  423da5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  423da9:	48 8d 50 08          	lea    0x8(%rax),%rdx
  423dad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423db1:	48 89 d6             	mov    %rdx,%rsi
  423db4:	48 89 c7             	mov    %rax,%rdi
  423db7:	e8 32 f6 ff ff       	callq  4233ee <suffixedexp>
  423dbc:	8b 45 c8             	mov    -0x38(%rbp),%eax
  423dbf:	83 f8 0b             	cmp    $0xb,%eax
  423dc2:	76 08                	jbe    423dcc <restassign+0x9b>
  423dc4:	8b 45 c8             	mov    -0x38(%rbp),%eax
  423dc7:	83 f8 0f             	cmp    $0xf,%eax
  423dca:	76 1b                	jbe    423de7 <restassign+0xb6>
  423dcc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  423dd0:	48 8d 50 08          	lea    0x8(%rax),%rdx
  423dd4:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  423dd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423ddc:	48 89 ce             	mov    %rcx,%rsi
  423ddf:	48 89 c7             	mov    %rax,%rdi
  423de2:	e8 95 fd ff ff       	callq  423b7c <check_conflict>
  423de7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423deb:	48 8b 40 38          	mov    0x38(%rax),%rax
  423def:	48 89 c7             	mov    %rax,%rdi
  423df2:	e8 af 1d 00 00       	callq  425ba6 <luaE_incCstack>
  423df7:	8b 45 ac             	mov    -0x54(%rbp),%eax
  423dfa:	8d 50 01             	lea    0x1(%rax),%edx
  423dfd:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  423e01:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e05:	48 89 ce             	mov    %rcx,%rsi
  423e08:	48 89 c7             	mov    %rax,%rdi
  423e0b:	e8 21 ff ff ff       	callq  423d31 <restassign>
  423e10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e14:	48 8b 40 38          	mov    0x38(%rax),%rax
  423e18:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
  423e1e:	83 ea 01             	sub    $0x1,%edx
  423e21:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  423e27:	eb 7f                	jmp    423ea8 <restassign+0x177>
  423e29:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e2d:	be 3d 00 00 00       	mov    $0x3d,%esi
  423e32:	48 89 c7             	mov    %rax,%rdi
  423e35:	e8 07 ce ff ff       	callq  420c41 <checknext>
  423e3a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423e3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e42:	48 89 d6             	mov    %rdx,%rsi
  423e45:	48 89 c7             	mov    %rax,%rdi
  423e48:	e8 cf f2 ff ff       	callq  42311c <explist>
  423e4d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  423e50:	8b 45 fc             	mov    -0x4(%rbp),%eax
  423e53:	3b 45 ac             	cmp    -0x54(%rbp),%eax
  423e56:	74 18                	je     423e70 <restassign+0x13f>
  423e58:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  423e5c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  423e5f:	8b 75 ac             	mov    -0x54(%rbp),%esi
  423e62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e66:	48 89 c7             	mov    %rax,%rdi
  423e69:	e8 01 db ff ff       	callq  42196f <adjust_assign>
  423e6e:	eb 38                	jmp    423ea8 <restassign+0x177>
  423e70:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e74:	48 8b 40 30          	mov    0x30(%rax),%rax
  423e78:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423e7c:	48 89 d6             	mov    %rdx,%rsi
  423e7f:	48 89 c7             	mov    %rax,%rdi
  423e82:	e8 f5 6e fe ff       	callq  40ad7c <luaK_setoneret>
  423e87:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423e8b:	48 8d 48 08          	lea    0x8(%rax),%rcx
  423e8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423e93:	48 8b 40 30          	mov    0x30(%rax),%rax
  423e97:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423e9b:	48 89 ce             	mov    %rcx,%rsi
  423e9e:	48 89 c7             	mov    %rax,%rdi
  423ea1:	e8 4d 79 fe ff       	callq  40b7f3 <luaK_storevar>
  423ea6:	eb 42                	jmp    423eea <restassign+0x1b9>
  423ea8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423eac:	48 8b 40 30          	mov    0x30(%rax),%rax
  423eb0:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  423eb4:	0f b6 c0             	movzbl %al,%eax
  423eb7:	8d 50 ff             	lea    -0x1(%rax),%edx
  423eba:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  423ebe:	be 08 00 00 00       	mov    $0x8,%esi
  423ec3:	48 89 c7             	mov    %rax,%rdi
  423ec6:	e8 99 ce ff ff       	callq  420d64 <init_exp>
  423ecb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423ecf:	48 8d 48 08          	lea    0x8(%rax),%rcx
  423ed3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423ed7:	48 8b 40 30          	mov    0x30(%rax),%rax
  423edb:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423edf:	48 89 ce             	mov    %rcx,%rsi
  423ee2:	48 89 c7             	mov    %rax,%rdi
  423ee5:	e8 09 79 fe ff       	callq  40b7f3 <luaK_storevar>
  423eea:	c9                   	leaveq 
  423eeb:	c3                   	retq   

0000000000423eec <cond>:
  423eec:	55                   	push   %rbp
  423eed:	48 89 e5             	mov    %rsp,%rbp
  423ef0:	48 83 ec 30          	sub    $0x30,%rsp
  423ef4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  423ef8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423efc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423f00:	48 89 d6             	mov    %rdx,%rsi
  423f03:	48 89 c7             	mov    %rax,%rdi
  423f06:	e8 fb fb ff ff       	callq  423b06 <expr>
  423f0b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  423f0e:	83 f8 01             	cmp    $0x1,%eax
  423f11:	75 07                	jne    423f1a <cond+0x2e>
  423f13:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%rbp)
  423f1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423f1e:	48 8b 40 30          	mov    0x30(%rax),%rax
  423f22:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  423f26:	48 89 d6             	mov    %rdx,%rsi
  423f29:	48 89 c7             	mov    %rax,%rdi
  423f2c:	e8 23 7c fe ff       	callq  40bb54 <luaK_goiftrue>
  423f31:	8b 45 f4             	mov    -0xc(%rbp),%eax
  423f34:	c9                   	leaveq 
  423f35:	c3                   	retq   

0000000000423f36 <gotostat>:
  423f36:	55                   	push   %rbp
  423f37:	48 89 e5             	mov    %rsp,%rbp
  423f3a:	53                   	push   %rbx
  423f3b:	48 83 ec 48          	sub    $0x48,%rsp
  423f3f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  423f43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423f47:	48 8b 40 30          	mov    0x30(%rax),%rax
  423f4b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  423f4f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423f53:	8b 40 04             	mov    0x4(%rax),%eax
  423f56:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  423f59:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423f5d:	48 89 c7             	mov    %rax,%rdi
  423f60:	e8 c4 cd ff ff       	callq  420d29 <str_checkname>
  423f65:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  423f69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  423f6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423f71:	48 89 d6             	mov    %rdx,%rsi
  423f74:	48 89 c7             	mov    %rax,%rdi
  423f77:	e8 77 dc ff ff       	callq  421bf3 <findlabel>
  423f7c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  423f80:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  423f85:	75 23                	jne    423faa <gotostat+0x74>
  423f87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423f8b:	48 89 c7             	mov    %rax,%rdi
  423f8e:	e8 47 5d fe ff       	callq  409cda <luaK_jump>
  423f93:	89 c1                	mov    %eax,%ecx
  423f95:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  423f98:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  423f9c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  423fa0:	48 89 c7             	mov    %rax,%rdi
  423fa3:	e8 f6 dd ff ff       	callq  421d9e <newgotoentry>
  423fa8:	eb 77                	jmp    424021 <gotostat+0xeb>
  423faa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423fae:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  423fb2:	0f b6 d0             	movzbl %al,%edx
  423fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423fb9:	89 d6                	mov    %edx,%esi
  423fbb:	48 89 c7             	mov    %rax,%rdi
  423fbe:	e8 d0 d0 ff ff       	callq  421093 <reglevel>
  423fc3:	89 45 cc             	mov    %eax,-0x34(%rbp)
  423fc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423fca:	48 89 c7             	mov    %rax,%rdi
  423fcd:	e8 17 d1 ff ff       	callq  4210e9 <luaY_nvarstack>
  423fd2:	39 45 cc             	cmp    %eax,-0x34(%rbp)
  423fd5:	7d 25                	jge    423ffc <gotostat+0xc6>
  423fd7:	8b 55 cc             	mov    -0x34(%rbp),%edx
  423fda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423fde:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  423fe4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  423fea:	b9 00 00 00 00       	mov    $0x0,%ecx
  423fef:	be 36 00 00 00       	mov    $0x36,%esi
  423ff4:	48 89 c7             	mov    %rax,%rdi
  423ff7:	e8 ea 62 fe ff       	callq  40a2e6 <luaK_codeABCk>
  423ffc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  424000:	8b 58 08             	mov    0x8(%rax),%ebx
  424003:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424007:	48 89 c7             	mov    %rax,%rdi
  42400a:	e8 cb 5c fe ff       	callq  409cda <luaK_jump>
  42400f:	89 c1                	mov    %eax,%ecx
  424011:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424015:	89 da                	mov    %ebx,%edx
  424017:	89 ce                	mov    %ecx,%esi
  424019:	48 89 c7             	mov    %rax,%rdi
  42401c:	e8 7e 5f fe ff       	callq  409f9f <luaK_patchlist>
  424021:	90                   	nop
  424022:	48 83 c4 48          	add    $0x48,%rsp
  424026:	5b                   	pop    %rbx
  424027:	5d                   	pop    %rbp
  424028:	c3                   	retq   

0000000000424029 <breakstat>:
  424029:	55                   	push   %rbp
  42402a:	48 89 e5             	mov    %rsp,%rbp
  42402d:	53                   	push   %rbx
  42402e:	48 83 ec 28          	sub    $0x28,%rsp
  424032:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  424036:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42403a:	8b 40 04             	mov    0x4(%rax),%eax
  42403d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  424040:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424044:	48 89 c7             	mov    %rax,%rdi
  424047:	e8 5c 7e ff ff       	callq  41bea8 <luaX_next>
  42404c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424050:	48 8b 40 30          	mov    0x30(%rax),%rax
  424054:	48 89 c7             	mov    %rax,%rdi
  424057:	e8 7e 5c fe ff       	callq  409cda <luaK_jump>
  42405c:	89 c3                	mov    %eax,%ebx
  42405e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424062:	48 8b 40 38          	mov    0x38(%rax),%rax
  424066:	ba 05 00 00 00       	mov    $0x5,%edx
  42406b:	be c5 10 44 00       	mov    $0x4410c5,%esi
  424070:	48 89 c7             	mov    %rax,%rdi
  424073:	e8 a3 2f 00 00       	callq  42701b <luaS_newlstr>
  424078:	48 89 c6             	mov    %rax,%rsi
  42407b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42407e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424082:	89 d9                	mov    %ebx,%ecx
  424084:	48 89 c7             	mov    %rax,%rdi
  424087:	e8 12 dd ff ff       	callq  421d9e <newgotoentry>
  42408c:	90                   	nop
  42408d:	48 83 c4 28          	add    $0x28,%rsp
  424091:	5b                   	pop    %rbx
  424092:	5d                   	pop    %rbp
  424093:	c3                   	retq   

0000000000424094 <checkrepeated>:
  424094:	55                   	push   %rbp
  424095:	48 89 e5             	mov    %rsp,%rbp
  424098:	48 83 ec 20          	sub    $0x20,%rsp
  42409c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4240a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4240a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4240a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4240ac:	48 89 d6             	mov    %rdx,%rsi
  4240af:	48 89 c7             	mov    %rax,%rdi
  4240b2:	e8 3c db ff ff       	callq  421bf3 <findlabel>
  4240b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4240bb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4240c0:	0f 95 c0             	setne  %al
  4240c3:	0f b6 c0             	movzbl %al,%eax
  4240c6:	48 85 c0             	test   %rax,%rax
  4240c9:	74 4c                	je     424117 <checkrepeated+0x83>
  4240cb:	48 c7 45 f0 f8 11 44 	movq   $0x4411f8,-0x10(%rbp)
  4240d2:	00 
  4240d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4240d7:	8b 50 0c             	mov    0xc(%rax),%edx
  4240da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4240de:	48 8d 78 18          	lea    0x18(%rax),%rdi
  4240e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4240e6:	48 8b 40 38          	mov    0x38(%rax),%rax
  4240ea:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4240ee:	89 d1                	mov    %edx,%ecx
  4240f0:	48 89 fa             	mov    %rdi,%rdx
  4240f3:	48 89 c7             	mov    %rax,%rdi
  4240f6:	b8 00 00 00 00       	mov    $0x0,%eax
  4240fb:	e8 5f bb ff ff       	callq  41fc5f <luaO_pushfstring>
  424100:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  424104:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  424108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42410c:	48 89 d6             	mov    %rdx,%rsi
  42410f:	48 89 c7             	mov    %rax,%rdi
  424112:	e8 1a 57 fe ff       	callq  409831 <luaK_semerror>
  424117:	90                   	nop
  424118:	c9                   	leaveq 
  424119:	c3                   	retq   

000000000042411a <labelstat>:
  42411a:	55                   	push   %rbp
  42411b:	48 89 e5             	mov    %rsp,%rbp
  42411e:	48 83 ec 20          	sub    $0x20,%rsp
  424122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  424126:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42412a:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42412d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424131:	be 1f 01 00 00       	mov    $0x11f,%esi
  424136:	48 89 c7             	mov    %rax,%rdi
  424139:	e8 03 cb ff ff       	callq  420c41 <checknext>
  42413e:	eb 0c                	jmp    42414c <labelstat+0x32>
  424140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424144:	48 89 c7             	mov    %rax,%rdi
  424147:	e8 54 11 00 00       	callq  4252a0 <statement>
  42414c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424150:	8b 40 10             	mov    0x10(%rax),%eax
  424153:	83 f8 3b             	cmp    $0x3b,%eax
  424156:	74 e8                	je     424140 <labelstat+0x26>
  424158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42415c:	8b 40 10             	mov    0x10(%rax),%eax
  42415f:	3d 1f 01 00 00       	cmp    $0x11f,%eax
  424164:	74 da                	je     424140 <labelstat+0x26>
  424166:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42416a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42416e:	48 89 d6             	mov    %rdx,%rsi
  424171:	48 89 c7             	mov    %rax,%rdi
  424174:	e8 1b ff ff ff       	callq  424094 <checkrepeated>
  424179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42417d:	be 00 00 00 00       	mov    $0x0,%esi
  424182:	48 89 c7             	mov    %rax,%rdi
  424185:	e8 0a e7 ff ff       	callq  422894 <block_follow>
  42418a:	89 c1                	mov    %eax,%ecx
  42418c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42418f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  424193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424197:	48 89 c7             	mov    %rax,%rdi
  42419a:	e8 f6 dc ff ff       	callq  421e95 <createlabel>
  42419f:	90                   	nop
  4241a0:	c9                   	leaveq 
  4241a1:	c3                   	retq   

00000000004241a2 <whilestat>:
  4241a2:	55                   	push   %rbp
  4241a3:	48 89 e5             	mov    %rsp,%rbp
  4241a6:	48 83 ec 40          	sub    $0x40,%rsp
  4241aa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4241ae:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  4241b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4241b5:	48 8b 40 30          	mov    0x30(%rax),%rax
  4241b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4241bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4241c1:	48 89 c7             	mov    %rax,%rdi
  4241c4:	e8 df 7c ff ff       	callq  41bea8 <luaX_next>
  4241c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4241cd:	48 89 c7             	mov    %rax,%rdi
  4241d0:	e8 dc 5b fe ff       	callq  409db1 <luaK_getlabel>
  4241d5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4241d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4241dc:	48 89 c7             	mov    %rax,%rdi
  4241df:	e8 08 fd ff ff       	callq  423eec <cond>
  4241e4:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4241e7:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4241eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4241ef:	ba 01 00 00 00       	mov    $0x1,%edx
  4241f4:	48 89 ce             	mov    %rcx,%rsi
  4241f7:	48 89 c7             	mov    %rax,%rdi
  4241fa:	e8 66 de ff ff       	callq  422065 <enterblock>
  4241ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424203:	be 02 01 00 00       	mov    $0x102,%esi
  424208:	48 89 c7             	mov    %rax,%rdi
  42420b:	e8 31 ca ff ff       	callq  420c41 <checknext>
  424210:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424214:	48 89 c7             	mov    %rax,%rdi
  424217:	e8 15 f9 ff ff       	callq  423b31 <block>
  42421c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424220:	48 89 c7             	mov    %rax,%rdi
  424223:	e8 b2 5a fe ff       	callq  409cda <luaK_jump>
  424228:	89 c1                	mov    %eax,%ecx
  42422a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42422d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424231:	89 ce                	mov    %ecx,%esi
  424233:	48 89 c7             	mov    %rax,%rdi
  424236:	e8 64 5d fe ff       	callq  409f9f <luaK_patchlist>
  42423b:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  42423e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424242:	89 d1                	mov    %edx,%ecx
  424244:	ba 15 01 00 00       	mov    $0x115,%edx
  424249:	be 05 01 00 00       	mov    $0x105,%esi
  42424e:	48 89 c7             	mov    %rax,%rdi
  424251:	e8 1a ca ff ff       	callq  420c70 <check_match>
  424256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42425a:	48 89 c7             	mov    %rax,%rdi
  42425d:	e8 69 df ff ff       	callq  4221cb <leaveblock>
  424262:	8b 55 f0             	mov    -0x10(%rbp),%edx
  424265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424269:	89 d6                	mov    %edx,%esi
  42426b:	48 89 c7             	mov    %rax,%rdi
  42426e:	e8 5e 5d fe ff       	callq  409fd1 <luaK_patchtohere>
  424273:	90                   	nop
  424274:	c9                   	leaveq 
  424275:	c3                   	retq   

0000000000424276 <repeatstat>:
  424276:	55                   	push   %rbp
  424277:	48 89 e5             	mov    %rsp,%rbp
  42427a:	48 83 ec 60          	sub    $0x60,%rsp
  42427e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  424282:	89 75 a4             	mov    %esi,-0x5c(%rbp)
  424285:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  424289:	48 8b 40 30          	mov    0x30(%rax),%rax
  42428d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  424291:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424295:	48 89 c7             	mov    %rax,%rdi
  424298:	e8 14 5b fe ff       	callq  409db1 <luaK_getlabel>
  42429d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4242a0:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4242a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4242a8:	ba 01 00 00 00       	mov    $0x1,%edx
  4242ad:	48 89 ce             	mov    %rcx,%rsi
  4242b0:	48 89 c7             	mov    %rax,%rdi
  4242b3:	e8 ad dd ff ff       	callq  422065 <enterblock>
  4242b8:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  4242bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4242c0:	ba 00 00 00 00       	mov    $0x0,%edx
  4242c5:	48 89 ce             	mov    %rcx,%rsi
  4242c8:	48 89 c7             	mov    %rax,%rdi
  4242cb:	e8 95 dd ff ff       	callq  422065 <enterblock>
  4242d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4242d4:	48 89 c7             	mov    %rax,%rdi
  4242d7:	e8 cc 7b ff ff       	callq  41bea8 <luaX_next>
  4242dc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4242e0:	48 89 c7             	mov    %rax,%rdi
  4242e3:	e8 f2 e5 ff ff       	callq  4228da <statlist>
  4242e8:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  4242eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4242ef:	89 d1                	mov    %edx,%ecx
  4242f1:	ba 10 01 00 00       	mov    $0x110,%edx
  4242f6:	be 14 01 00 00       	mov    $0x114,%esi
  4242fb:	48 89 c7             	mov    %rax,%rdi
  4242fe:	e8 6d c9 ff ff       	callq  420c70 <check_match>
  424303:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  424307:	48 89 c7             	mov    %rax,%rdi
  42430a:	e8 dd fb ff ff       	callq  423eec <cond>
  42430f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  424312:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424316:	48 89 c7             	mov    %rax,%rdi
  424319:	e8 ad de ff ff       	callq  4221cb <leaveblock>
  42431e:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
  424322:	84 c0                	test   %al,%al
  424324:	74 79                	je     42439f <repeatstat+0x129>
  424326:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42432a:	48 89 c7             	mov    %rax,%rdi
  42432d:	e8 a8 59 fe ff       	callq  409cda <luaK_jump>
  424332:	89 45 e8             	mov    %eax,-0x18(%rbp)
  424335:	8b 55 fc             	mov    -0x4(%rbp),%edx
  424338:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42433c:	89 d6                	mov    %edx,%esi
  42433e:	48 89 c7             	mov    %rax,%rdi
  424341:	e8 8b 5c fe ff       	callq  409fd1 <luaK_patchtohere>
  424346:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
  42434a:	0f b6 d0             	movzbl %al,%edx
  42434d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424351:	89 d6                	mov    %edx,%esi
  424353:	48 89 c7             	mov    %rax,%rdi
  424356:	e8 38 cd ff ff       	callq  421093 <reglevel>
  42435b:	89 c2                	mov    %eax,%edx
  42435d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424361:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  424367:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42436d:	b9 00 00 00 00       	mov    $0x0,%ecx
  424372:	be 36 00 00 00       	mov    $0x36,%esi
  424377:	48 89 c7             	mov    %rax,%rdi
  42437a:	e8 67 5f fe ff       	callq  40a2e6 <luaK_codeABCk>
  42437f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424383:	48 89 c7             	mov    %rax,%rdi
  424386:	e8 4f 59 fe ff       	callq  409cda <luaK_jump>
  42438b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42438e:	8b 55 e8             	mov    -0x18(%rbp),%edx
  424391:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424395:	89 d6                	mov    %edx,%esi
  424397:	48 89 c7             	mov    %rax,%rdi
  42439a:	e8 32 5c fe ff       	callq  409fd1 <luaK_patchtohere>
  42439f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4243a2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4243a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4243a9:	89 ce                	mov    %ecx,%esi
  4243ab:	48 89 c7             	mov    %rax,%rdi
  4243ae:	e8 ec 5b fe ff       	callq  409f9f <luaK_patchlist>
  4243b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4243b7:	48 89 c7             	mov    %rax,%rdi
  4243ba:	e8 0c de ff ff       	callq  4221cb <leaveblock>
  4243bf:	90                   	nop
  4243c0:	c9                   	leaveq 
  4243c1:	c3                   	retq   

00000000004243c2 <exp1>:
  4243c2:	55                   	push   %rbp
  4243c3:	48 89 e5             	mov    %rsp,%rbp
  4243c6:	48 83 ec 30          	sub    $0x30,%rsp
  4243ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4243ce:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4243d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4243d6:	48 89 d6             	mov    %rdx,%rsi
  4243d9:	48 89 c7             	mov    %rax,%rdi
  4243dc:	e8 25 f7 ff ff       	callq  423b06 <expr>
  4243e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4243e5:	48 8b 40 30          	mov    0x30(%rax),%rax
  4243e9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4243ed:	48 89 d6             	mov    %rdx,%rsi
  4243f0:	48 89 c7             	mov    %rax,%rdi
  4243f3:	e8 b4 70 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  4243f8:	90                   	nop
  4243f9:	c9                   	leaveq 
  4243fa:	c3                   	retq   

00000000004243fb <fixforjump>:
  4243fb:	55                   	push   %rbp
  4243fc:	48 89 e5             	mov    %rsp,%rbp
  4243ff:	48 83 ec 30          	sub    $0x30,%rsp
  424403:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  424407:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42440a:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42440d:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  424410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424414:	48 8b 00             	mov    (%rax),%rax
  424417:	48 8b 40 40          	mov    0x40(%rax),%rax
  42441b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42441e:	48 63 d2             	movslq %edx,%rdx
  424421:	48 c1 e2 02          	shl    $0x2,%rdx
  424425:	48 01 d0             	add    %rdx,%rax
  424428:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42442c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42442f:	8d 50 01             	lea    0x1(%rax),%edx
  424432:	8b 45 e0             	mov    -0x20(%rbp),%eax
  424435:	29 d0                	sub    %edx,%eax
  424437:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42443a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42443e:	74 03                	je     424443 <fixforjump+0x48>
  424440:	f7 5d fc             	negl   -0x4(%rbp)
  424443:	81 7d fc ff ff 01 00 	cmpl   $0x1ffff,-0x4(%rbp)
  42444a:	0f 9f c0             	setg   %al
  42444d:	0f b6 c0             	movzbl %al,%eax
  424450:	48 85 c0             	test   %rax,%rax
  424453:	74 15                	je     42446a <fixforjump+0x6f>
  424455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424459:	48 8b 40 10          	mov    0x10(%rax),%rax
  42445d:	be 1e 12 44 00       	mov    $0x44121e,%esi
  424462:	48 89 c7             	mov    %rax,%rdi
  424465:	e8 34 5e ff ff       	callq  41a29e <luaX_syntaxerror>
  42446a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42446e:	8b 00                	mov    (%rax),%eax
  424470:	25 ff 7f 00 00       	and    $0x7fff,%eax
  424475:	89 c2                	mov    %eax,%edx
  424477:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42447a:	c1 e0 0f             	shl    $0xf,%eax
  42447d:	09 c2                	or     %eax,%edx
  42447f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  424483:	89 10                	mov    %edx,(%rax)
  424485:	90                   	nop
  424486:	c9                   	leaveq 
  424487:	c3                   	retq   

0000000000424488 <forbody>:
  424488:	55                   	push   %rbp
  424489:	48 89 e5             	mov    %rsp,%rbp
  42448c:	48 83 ec 50          	sub    $0x50,%rsp
  424490:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  424494:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  424497:	89 55 c0             	mov    %edx,-0x40(%rbp)
  42449a:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  42449d:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
  4244a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4244a5:	48 8b 40 30          	mov    0x30(%rax),%rax
  4244a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4244ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4244b1:	be 02 01 00 00       	mov    $0x102,%esi
  4244b6:	48 89 c7             	mov    %rax,%rdi
  4244b9:	e8 83 c7 ff ff       	callq  420c41 <checknext>
  4244be:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4244c1:	48 98                	cltq   
  4244c3:	8b 34 85 b0 12 44 00 	mov    0x4412b0(,%rax,4),%esi
  4244ca:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4244cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4244d1:	b9 00 00 00 00       	mov    $0x0,%ecx
  4244d6:	48 89 c7             	mov    %rax,%rdi
  4244d9:	e8 56 5e fe ff       	callq  40a334 <luaK_codeABx>
  4244de:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4244e1:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4244e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4244e9:	ba 00 00 00 00       	mov    $0x0,%edx
  4244ee:	48 89 ce             	mov    %rcx,%rsi
  4244f1:	48 89 c7             	mov    %rax,%rdi
  4244f4:	e8 6c db ff ff       	callq  422065 <enterblock>
  4244f9:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4244fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424500:	89 d6                	mov    %edx,%esi
  424502:	48 89 c7             	mov    %rax,%rdi
  424505:	e8 e7 cd ff ff       	callq  4212f1 <adjustlocalvars>
  42450a:	8b 55 bc             	mov    -0x44(%rbp),%edx
  42450d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424511:	89 d6                	mov    %edx,%esi
  424513:	48 89 c7             	mov    %rax,%rdi
  424516:	e8 c4 5f fe ff       	callq  40a4df <luaK_reserveregs>
  42451b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42451f:	48 89 c7             	mov    %rax,%rdi
  424522:	e8 0a f6 ff ff       	callq  423b31 <block>
  424527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42452b:	48 89 c7             	mov    %rax,%rdi
  42452e:	e8 98 dc ff ff       	callq  4221cb <leaveblock>
  424533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424537:	48 89 c7             	mov    %rax,%rdi
  42453a:	e8 72 58 fe ff       	callq  409db1 <luaK_getlabel>
  42453f:	89 c2                	mov    %eax,%edx
  424541:	8b 75 f4             	mov    -0xc(%rbp),%esi
  424544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424548:	b9 00 00 00 00       	mov    $0x0,%ecx
  42454d:	48 89 c7             	mov    %rax,%rdi
  424550:	e8 a6 fe ff ff       	callq  4243fb <fixforjump>
  424555:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
  424559:	74 36                	je     424591 <forbody+0x109>
  42455b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  42455e:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  424561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424565:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  42456b:	41 89 c8             	mov    %ecx,%r8d
  42456e:	b9 00 00 00 00       	mov    $0x0,%ecx
  424573:	be 4c 00 00 00       	mov    $0x4c,%esi
  424578:	48 89 c7             	mov    %rax,%rdi
  42457b:	e8 66 5d fe ff       	callq  40a2e6 <luaK_codeABCk>
  424580:	8b 55 c0             	mov    -0x40(%rbp),%edx
  424583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424587:	89 d6                	mov    %edx,%esi
  424589:	48 89 c7             	mov    %rax,%rdi
  42458c:	e8 19 8c fe ff       	callq  40d1aa <luaK_fixline>
  424591:	8b 45 b8             	mov    -0x48(%rbp),%eax
  424594:	48 98                	cltq   
  424596:	8b 34 85 b8 12 44 00 	mov    0x4412b8(,%rax,4),%esi
  42459d:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4245a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4245a4:	b9 00 00 00 00       	mov    $0x0,%ecx
  4245a9:	48 89 c7             	mov    %rax,%rdi
  4245ac:	e8 83 5d fe ff       	callq  40a334 <luaK_codeABx>
  4245b1:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4245b4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4245b7:	8d 50 01             	lea    0x1(%rax),%edx
  4245ba:	8b 75 f0             	mov    -0x10(%rbp),%esi
  4245bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4245c1:	b9 01 00 00 00       	mov    $0x1,%ecx
  4245c6:	48 89 c7             	mov    %rax,%rdi
  4245c9:	e8 2d fe ff ff       	callq  4243fb <fixforjump>
  4245ce:	8b 55 c0             	mov    -0x40(%rbp),%edx
  4245d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4245d5:	89 d6                	mov    %edx,%esi
  4245d7:	48 89 c7             	mov    %rax,%rdi
  4245da:	e8 cb 8b fe ff       	callq  40d1aa <luaK_fixline>
  4245df:	90                   	nop
  4245e0:	c9                   	leaveq 
  4245e1:	c3                   	retq   

00000000004245e2 <fornum>:
  4245e2:	55                   	push   %rbp
  4245e3:	48 89 e5             	mov    %rsp,%rbp
  4245e6:	48 83 ec 30          	sub    $0x30,%rsp
  4245ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4245ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4245f2:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4245f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4245f9:	48 8b 40 30          	mov    0x30(%rax),%rax
  4245fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424605:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  424609:	0f b6 c0             	movzbl %al,%eax
  42460c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42460f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424613:	ba 0b 00 00 00       	mov    $0xb,%edx
  424618:	be 39 12 44 00       	mov    $0x441239,%esi
  42461d:	48 89 c7             	mov    %rax,%rdi
  424620:	e8 a3 5c ff ff       	callq  41a2c8 <luaX_newstring>
  424625:	48 89 c2             	mov    %rax,%rdx
  424628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42462c:	48 89 d6             	mov    %rdx,%rsi
  42462f:	48 89 c7             	mov    %rax,%rdi
  424632:	e8 20 c9 ff ff       	callq  420f57 <new_localvar>
  424637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42463b:	ba 0b 00 00 00       	mov    $0xb,%edx
  424640:	be 39 12 44 00       	mov    $0x441239,%esi
  424645:	48 89 c7             	mov    %rax,%rdi
  424648:	e8 7b 5c ff ff       	callq  41a2c8 <luaX_newstring>
  42464d:	48 89 c2             	mov    %rax,%rdx
  424650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424654:	48 89 d6             	mov    %rdx,%rsi
  424657:	48 89 c7             	mov    %rax,%rdi
  42465a:	e8 f8 c8 ff ff       	callq  420f57 <new_localvar>
  42465f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424663:	ba 0b 00 00 00       	mov    $0xb,%edx
  424668:	be 39 12 44 00       	mov    $0x441239,%esi
  42466d:	48 89 c7             	mov    %rax,%rdi
  424670:	e8 53 5c ff ff       	callq  41a2c8 <luaX_newstring>
  424675:	48 89 c2             	mov    %rax,%rdx
  424678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42467c:	48 89 d6             	mov    %rdx,%rsi
  42467f:	48 89 c7             	mov    %rax,%rdi
  424682:	e8 d0 c8 ff ff       	callq  420f57 <new_localvar>
  424687:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42468b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42468f:	48 89 d6             	mov    %rdx,%rsi
  424692:	48 89 c7             	mov    %rax,%rdi
  424695:	e8 bd c8 ff ff       	callq  420f57 <new_localvar>
  42469a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42469e:	be 3d 00 00 00       	mov    $0x3d,%esi
  4246a3:	48 89 c7             	mov    %rax,%rdi
  4246a6:	e8 96 c5 ff ff       	callq  420c41 <checknext>
  4246ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4246af:	48 89 c7             	mov    %rax,%rdi
  4246b2:	e8 0b fd ff ff       	callq  4243c2 <exp1>
  4246b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4246bb:	be 2c 00 00 00       	mov    $0x2c,%esi
  4246c0:	48 89 c7             	mov    %rax,%rdi
  4246c3:	e8 79 c5 ff ff       	callq  420c41 <checknext>
  4246c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4246cc:	48 89 c7             	mov    %rax,%rdi
  4246cf:	e8 ee fc ff ff       	callq  4243c2 <exp1>
  4246d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4246d8:	be 2c 00 00 00       	mov    $0x2c,%esi
  4246dd:	48 89 c7             	mov    %rax,%rdi
  4246e0:	e8 f8 c4 ff ff       	callq  420bdd <testnext>
  4246e5:	85 c0                	test   %eax,%eax
  4246e7:	74 0e                	je     4246f7 <fornum+0x115>
  4246e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4246ed:	48 89 c7             	mov    %rax,%rdi
  4246f0:	e8 cd fc ff ff       	callq  4243c2 <exp1>
  4246f5:	eb 2f                	jmp    424726 <fornum+0x144>
  4246f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4246fb:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  4246ff:	0f b6 c8             	movzbl %al,%ecx
  424702:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424706:	ba 01 00 00 00       	mov    $0x1,%edx
  42470b:	89 ce                	mov    %ecx,%esi
  42470d:	48 89 c7             	mov    %rax,%rdi
  424710:	e8 df 63 fe ff       	callq  40aaf4 <luaK_int>
  424715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424719:	be 01 00 00 00       	mov    $0x1,%esi
  42471e:	48 89 c7             	mov    %rax,%rdi
  424721:	e8 b9 5d fe ff       	callq  40a4df <luaK_reserveregs>
  424726:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42472a:	be 03 00 00 00       	mov    $0x3,%esi
  42472f:	48 89 c7             	mov    %rax,%rdi
  424732:	e8 ba cb ff ff       	callq  4212f1 <adjustlocalvars>
  424737:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42473a:	8b 75 f4             	mov    -0xc(%rbp),%esi
  42473d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424741:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  424747:	b9 01 00 00 00       	mov    $0x1,%ecx
  42474c:	48 89 c7             	mov    %rax,%rdi
  42474f:	e8 34 fd ff ff       	callq  424488 <forbody>
  424754:	90                   	nop
  424755:	c9                   	leaveq 
  424756:	c3                   	retq   

0000000000424757 <forlist>:
  424757:	55                   	push   %rbp
  424758:	48 89 e5             	mov    %rsp,%rbp
  42475b:	48 83 ec 40          	sub    $0x40,%rsp
  42475f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  424763:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  424767:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42476b:	48 8b 40 30          	mov    0x30(%rax),%rax
  42476f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  424773:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
  42477a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42477e:	0f b6 40 44          	movzbl 0x44(%rax),%eax
  424782:	0f b6 c0             	movzbl %al,%eax
  424785:	89 45 ec             	mov    %eax,-0x14(%rbp)
  424788:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42478c:	ba 0b 00 00 00       	mov    $0xb,%edx
  424791:	be 39 12 44 00       	mov    $0x441239,%esi
  424796:	48 89 c7             	mov    %rax,%rdi
  424799:	e8 2a 5b ff ff       	callq  41a2c8 <luaX_newstring>
  42479e:	48 89 c2             	mov    %rax,%rdx
  4247a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4247a5:	48 89 d6             	mov    %rdx,%rsi
  4247a8:	48 89 c7             	mov    %rax,%rdi
  4247ab:	e8 a7 c7 ff ff       	callq  420f57 <new_localvar>
  4247b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4247b4:	ba 0b 00 00 00       	mov    $0xb,%edx
  4247b9:	be 39 12 44 00       	mov    $0x441239,%esi
  4247be:	48 89 c7             	mov    %rax,%rdi
  4247c1:	e8 02 5b ff ff       	callq  41a2c8 <luaX_newstring>
  4247c6:	48 89 c2             	mov    %rax,%rdx
  4247c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4247cd:	48 89 d6             	mov    %rdx,%rsi
  4247d0:	48 89 c7             	mov    %rax,%rdi
  4247d3:	e8 7f c7 ff ff       	callq  420f57 <new_localvar>
  4247d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4247dc:	ba 0b 00 00 00       	mov    $0xb,%edx
  4247e1:	be 39 12 44 00       	mov    $0x441239,%esi
  4247e6:	48 89 c7             	mov    %rax,%rdi
  4247e9:	e8 da 5a ff ff       	callq  41a2c8 <luaX_newstring>
  4247ee:	48 89 c2             	mov    %rax,%rdx
  4247f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4247f5:	48 89 d6             	mov    %rdx,%rsi
  4247f8:	48 89 c7             	mov    %rax,%rdi
  4247fb:	e8 57 c7 ff ff       	callq  420f57 <new_localvar>
  424800:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424804:	ba 0b 00 00 00       	mov    $0xb,%edx
  424809:	be 39 12 44 00       	mov    $0x441239,%esi
  42480e:	48 89 c7             	mov    %rax,%rdi
  424811:	e8 b2 5a ff ff       	callq  41a2c8 <luaX_newstring>
  424816:	48 89 c2             	mov    %rax,%rdx
  424819:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42481d:	48 89 d6             	mov    %rdx,%rsi
  424820:	48 89 c7             	mov    %rax,%rdi
  424823:	e8 2f c7 ff ff       	callq  420f57 <new_localvar>
  424828:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42482c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424830:	48 89 d6             	mov    %rdx,%rsi
  424833:	48 89 c7             	mov    %rax,%rdi
  424836:	e8 1c c7 ff ff       	callq  420f57 <new_localvar>
  42483b:	eb 22                	jmp    42485f <forlist+0x108>
  42483d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424841:	48 89 c7             	mov    %rax,%rdi
  424844:	e8 e0 c4 ff ff       	callq  420d29 <str_checkname>
  424849:	48 89 c2             	mov    %rax,%rdx
  42484c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424850:	48 89 d6             	mov    %rdx,%rsi
  424853:	48 89 c7             	mov    %rax,%rdi
  424856:	e8 fc c6 ff ff       	callq  420f57 <new_localvar>
  42485b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42485f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424863:	be 2c 00 00 00       	mov    $0x2c,%esi
  424868:	48 89 c7             	mov    %rax,%rdi
  42486b:	e8 6d c3 ff ff       	callq  420bdd <testnext>
  424870:	85 c0                	test   %eax,%eax
  424872:	75 c9                	jne    42483d <forlist+0xe6>
  424874:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424878:	be 0b 01 00 00       	mov    $0x10b,%esi
  42487d:	48 89 c7             	mov    %rax,%rdi
  424880:	e8 bc c3 ff ff       	callq  420c41 <checknext>
  424885:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424889:	8b 40 04             	mov    0x4(%rax),%eax
  42488c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  42488f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  424893:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424897:	48 89 d6             	mov    %rdx,%rsi
  42489a:	48 89 c7             	mov    %rax,%rdi
  42489d:	e8 7a e8 ff ff       	callq  42311c <explist>
  4248a2:	89 c6                	mov    %eax,%esi
  4248a4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4248a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4248ac:	48 89 d1             	mov    %rdx,%rcx
  4248af:	89 f2                	mov    %esi,%edx
  4248b1:	be 04 00 00 00       	mov    $0x4,%esi
  4248b6:	48 89 c7             	mov    %rax,%rdi
  4248b9:	e8 b1 d0 ff ff       	callq  42196f <adjust_assign>
  4248be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4248c2:	be 04 00 00 00       	mov    $0x4,%esi
  4248c7:	48 89 c7             	mov    %rax,%rdi
  4248ca:	e8 22 ca ff ff       	callq  4212f1 <adjustlocalvars>
  4248cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4248d3:	48 89 c7             	mov    %rax,%rdi
  4248d6:	e8 ab ce ff ff       	callq  421786 <marktobeclosed>
  4248db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4248df:	be 03 00 00 00       	mov    $0x3,%esi
  4248e4:	48 89 c7             	mov    %rax,%rdi
  4248e7:	e8 90 5b fe ff       	callq  40a47c <luaK_checkstack>
  4248ec:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4248ef:	8d 48 fc             	lea    -0x4(%rax),%ecx
  4248f2:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4248f5:	8b 75 ec             	mov    -0x14(%rbp),%esi
  4248f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4248fc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  424902:	48 89 c7             	mov    %rax,%rdi
  424905:	e8 7e fb ff ff       	callq  424488 <forbody>
  42490a:	90                   	nop
  42490b:	c9                   	leaveq 
  42490c:	c3                   	retq   

000000000042490d <forstat>:
  42490d:	55                   	push   %rbp
  42490e:	48 89 e5             	mov    %rsp,%rbp
  424911:	48 83 ec 40          	sub    $0x40,%rsp
  424915:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  424919:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  42491c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424920:	48 8b 40 30          	mov    0x30(%rax),%rax
  424924:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424928:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  42492c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424930:	ba 01 00 00 00       	mov    $0x1,%edx
  424935:	48 89 ce             	mov    %rcx,%rsi
  424938:	48 89 c7             	mov    %rax,%rdi
  42493b:	e8 25 d7 ff ff       	callq  422065 <enterblock>
  424940:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424944:	48 89 c7             	mov    %rax,%rdi
  424947:	e8 5c 75 ff ff       	callq  41bea8 <luaX_next>
  42494c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424950:	48 89 c7             	mov    %rax,%rdi
  424953:	e8 d1 c3 ff ff       	callq  420d29 <str_checkname>
  424958:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42495c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424960:	8b 40 10             	mov    0x10(%rax),%eax
  424963:	83 f8 3d             	cmp    $0x3d,%eax
  424966:	74 0e                	je     424976 <forstat+0x69>
  424968:	3d 0b 01 00 00       	cmp    $0x10b,%eax
  42496d:	74 1f                	je     42498e <forstat+0x81>
  42496f:	83 f8 2c             	cmp    $0x2c,%eax
  424972:	74 1a                	je     42498e <forstat+0x81>
  424974:	eb 2d                	jmp    4249a3 <forstat+0x96>
  424976:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  424979:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42497d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424981:	48 89 ce             	mov    %rcx,%rsi
  424984:	48 89 c7             	mov    %rax,%rdi
  424987:	e8 56 fc ff ff       	callq  4245e2 <fornum>
  42498c:	eb 26                	jmp    4249b4 <forstat+0xa7>
  42498e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  424992:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424996:	48 89 d6             	mov    %rdx,%rsi
  424999:	48 89 c7             	mov    %rax,%rdi
  42499c:	e8 b6 fd ff ff       	callq  424757 <forlist>
  4249a1:	eb 11                	jmp    4249b4 <forstat+0xa7>
  4249a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4249a7:	be 45 12 44 00       	mov    $0x441245,%esi
  4249ac:	48 89 c7             	mov    %rax,%rdi
  4249af:	e8 ea 58 ff ff       	callq  41a29e <luaX_syntaxerror>
  4249b4:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4249b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4249bb:	89 d1                	mov    %edx,%ecx
  4249bd:	ba 07 01 00 00       	mov    $0x107,%edx
  4249c2:	be 05 01 00 00       	mov    $0x105,%esi
  4249c7:	48 89 c7             	mov    %rax,%rdi
  4249ca:	e8 a1 c2 ff ff       	callq  420c70 <check_match>
  4249cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4249d3:	48 89 c7             	mov    %rax,%rdi
  4249d6:	e8 f0 d7 ff ff       	callq  4221cb <leaveblock>
  4249db:	90                   	nop
  4249dc:	c9                   	leaveq 
  4249dd:	c3                   	retq   

00000000004249de <test_then_block>:
  4249de:	55                   	push   %rbp
  4249df:	48 89 e5             	mov    %rsp,%rbp
  4249e2:	53                   	push   %rbx
  4249e3:	48 83 ec 68          	sub    $0x68,%rsp
  4249e7:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  4249eb:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  4249ef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4249f3:	48 8b 40 30          	mov    0x30(%rax),%rax
  4249f7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4249fb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4249ff:	48 89 c7             	mov    %rax,%rdi
  424a02:	e8 a1 74 ff ff       	callq  41bea8 <luaX_next>
  424a07:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
  424a0b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a0f:	48 89 d6             	mov    %rdx,%rsi
  424a12:	48 89 c7             	mov    %rax,%rdi
  424a15:	e8 ec f0 ff ff       	callq  423b06 <expr>
  424a1a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a1e:	be 12 01 00 00       	mov    $0x112,%esi
  424a23:	48 89 c7             	mov    %rax,%rdi
  424a26:	e8 16 c2 ff ff       	callq  420c41 <checknext>
  424a2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a2f:	8b 40 10             	mov    0x10(%rax),%eax
  424a32:	3d 01 01 00 00       	cmp    $0x101,%eax
  424a37:	0f 85 c3 00 00 00    	jne    424b00 <test_then_block+0x122>
  424a3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a41:	8b 40 04             	mov    0x4(%rax),%eax
  424a44:	89 45 dc             	mov    %eax,-0x24(%rbp)
  424a47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a4b:	48 8b 40 30          	mov    0x30(%rax),%rax
  424a4f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
  424a53:	48 89 d6             	mov    %rdx,%rsi
  424a56:	48 89 c7             	mov    %rax,%rdi
  424a59:	e8 b6 71 fe ff       	callq  40bc14 <luaK_goiffalse>
  424a5e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a62:	48 89 c7             	mov    %rax,%rdi
  424a65:	e8 3e 74 ff ff       	callq  41bea8 <luaX_next>
  424a6a:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  424a6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424a72:	ba 00 00 00 00       	mov    $0x0,%edx
  424a77:	48 89 ce             	mov    %rcx,%rsi
  424a7a:	48 89 c7             	mov    %rax,%rdi
  424a7d:	e8 e3 d5 ff ff       	callq  422065 <enterblock>
  424a82:	8b 5d b0             	mov    -0x50(%rbp),%ebx
  424a85:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424a89:	48 8b 40 38          	mov    0x38(%rax),%rax
  424a8d:	ba 05 00 00 00       	mov    $0x5,%edx
  424a92:	be c5 10 44 00       	mov    $0x4410c5,%esi
  424a97:	48 89 c7             	mov    %rax,%rdi
  424a9a:	e8 7c 25 00 00       	callq  42701b <luaS_newlstr>
  424a9f:	48 89 c6             	mov    %rax,%rsi
  424aa2:	8b 55 dc             	mov    -0x24(%rbp),%edx
  424aa5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424aa9:	89 d9                	mov    %ebx,%ecx
  424aab:	48 89 c7             	mov    %rax,%rdi
  424aae:	e8 eb d2 ff ff       	callq  421d9e <newgotoentry>
  424ab3:	90                   	nop
  424ab4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424ab8:	be 3b 00 00 00       	mov    $0x3b,%esi
  424abd:	48 89 c7             	mov    %rax,%rdi
  424ac0:	e8 18 c1 ff ff       	callq  420bdd <testnext>
  424ac5:	85 c0                	test   %eax,%eax
  424ac7:	75 eb                	jne    424ab4 <test_then_block+0xd6>
  424ac9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424acd:	be 00 00 00 00       	mov    $0x0,%esi
  424ad2:	48 89 c7             	mov    %rax,%rdi
  424ad5:	e8 ba dd ff ff       	callq  422894 <block_follow>
  424ada:	85 c0                	test   %eax,%eax
  424adc:	74 11                	je     424aef <test_then_block+0x111>
  424ade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424ae2:	48 89 c7             	mov    %rax,%rdi
  424ae5:	e8 e1 d6 ff ff       	callq  4221cb <leaveblock>
  424aea:	e9 ac 00 00 00       	jmpq   424b9b <test_then_block+0x1bd>
  424aef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424af3:	48 89 c7             	mov    %rax,%rdi
  424af6:	e8 df 51 fe ff       	callq  409cda <luaK_jump>
  424afb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  424afe:	eb 35                	jmp    424b35 <test_then_block+0x157>
  424b00:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424b04:	48 8b 40 30          	mov    0x30(%rax),%rax
  424b08:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
  424b0c:	48 89 d6             	mov    %rdx,%rsi
  424b0f:	48 89 c7             	mov    %rax,%rdi
  424b12:	e8 3d 70 fe ff       	callq  40bb54 <luaK_goiftrue>
  424b17:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  424b1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424b1f:	ba 00 00 00 00       	mov    $0x0,%edx
  424b24:	48 89 ce             	mov    %rcx,%rsi
  424b27:	48 89 c7             	mov    %rax,%rdi
  424b2a:	e8 36 d5 ff ff       	callq  422065 <enterblock>
  424b2f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  424b32:	89 45 ec             	mov    %eax,-0x14(%rbp)
  424b35:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424b39:	48 89 c7             	mov    %rax,%rdi
  424b3c:	e8 99 dd ff ff       	callq  4228da <statlist>
  424b41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424b45:	48 89 c7             	mov    %rax,%rdi
  424b48:	e8 7e d6 ff ff       	callq  4221cb <leaveblock>
  424b4d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424b51:	8b 40 10             	mov    0x10(%rax),%eax
  424b54:	3d 03 01 00 00       	cmp    $0x103,%eax
  424b59:	74 0e                	je     424b69 <test_then_block+0x18b>
  424b5b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  424b5f:	8b 40 10             	mov    0x10(%rax),%eax
  424b62:	3d 04 01 00 00       	cmp    $0x104,%eax
  424b67:	75 21                	jne    424b8a <test_then_block+0x1ac>
  424b69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424b6d:	48 89 c7             	mov    %rax,%rdi
  424b70:	e8 65 51 fe ff       	callq  409cda <luaK_jump>
  424b75:	89 c2                	mov    %eax,%edx
  424b77:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  424b7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424b7f:	48 89 ce             	mov    %rcx,%rsi
  424b82:	48 89 c7             	mov    %rax,%rdi
  424b85:	e8 dd 50 fe ff       	callq  409c67 <luaK_concat>
  424b8a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  424b8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424b91:	89 d6                	mov    %edx,%esi
  424b93:	48 89 c7             	mov    %rax,%rdi
  424b96:	e8 36 54 fe ff       	callq  409fd1 <luaK_patchtohere>
  424b9b:	48 83 c4 68          	add    $0x68,%rsp
  424b9f:	5b                   	pop    %rbx
  424ba0:	5d                   	pop    %rbp
  424ba1:	c3                   	retq   

0000000000424ba2 <ifstat>:
  424ba2:	55                   	push   %rbp
  424ba3:	48 89 e5             	mov    %rsp,%rbp
  424ba6:	48 83 ec 20          	sub    $0x20,%rsp
  424baa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  424bae:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  424bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424bb5:	48 8b 40 30          	mov    0x30(%rax),%rax
  424bb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424bbd:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%rbp)
  424bc4:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  424bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424bcc:	48 89 d6             	mov    %rdx,%rsi
  424bcf:	48 89 c7             	mov    %rax,%rdi
  424bd2:	e8 07 fe ff ff       	callq  4249de <test_then_block>
  424bd7:	eb 13                	jmp    424bec <ifstat+0x4a>
  424bd9:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  424bdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424be1:	48 89 d6             	mov    %rdx,%rsi
  424be4:	48 89 c7             	mov    %rax,%rdi
  424be7:	e8 f2 fd ff ff       	callq  4249de <test_then_block>
  424bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424bf0:	8b 40 10             	mov    0x10(%rax),%eax
  424bf3:	3d 04 01 00 00       	cmp    $0x104,%eax
  424bf8:	74 df                	je     424bd9 <ifstat+0x37>
  424bfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424bfe:	be 03 01 00 00       	mov    $0x103,%esi
  424c03:	48 89 c7             	mov    %rax,%rdi
  424c06:	e8 d2 bf ff ff       	callq  420bdd <testnext>
  424c0b:	85 c0                	test   %eax,%eax
  424c0d:	74 0c                	je     424c1b <ifstat+0x79>
  424c0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424c13:	48 89 c7             	mov    %rax,%rdi
  424c16:	e8 16 ef ff ff       	callq  423b31 <block>
  424c1b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  424c1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424c22:	89 d1                	mov    %edx,%ecx
  424c24:	ba 0a 01 00 00       	mov    $0x10a,%edx
  424c29:	be 05 01 00 00       	mov    $0x105,%esi
  424c2e:	48 89 c7             	mov    %rax,%rdi
  424c31:	e8 3a c0 ff ff       	callq  420c70 <check_match>
  424c36:	8b 55 f4             	mov    -0xc(%rbp),%edx
  424c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424c3d:	89 d6                	mov    %edx,%esi
  424c3f:	48 89 c7             	mov    %rax,%rdi
  424c42:	e8 8a 53 fe ff       	callq  409fd1 <luaK_patchtohere>
  424c47:	90                   	nop
  424c48:	c9                   	leaveq 
  424c49:	c3                   	retq   

0000000000424c4a <localfunc>:
  424c4a:	55                   	push   %rbp
  424c4b:	48 89 e5             	mov    %rsp,%rbp
  424c4e:	48 83 ec 40          	sub    $0x40,%rsp
  424c52:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  424c56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424c5a:	48 8b 40 30          	mov    0x30(%rax),%rax
  424c5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424c66:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  424c6a:	0f b6 c0             	movzbl %al,%eax
  424c6d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  424c70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424c74:	48 89 c7             	mov    %rax,%rdi
  424c77:	e8 ad c0 ff ff       	callq  420d29 <str_checkname>
  424c7c:	48 89 c2             	mov    %rax,%rdx
  424c7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424c83:	48 89 d6             	mov    %rdx,%rsi
  424c86:	48 89 c7             	mov    %rax,%rdi
  424c89:	e8 c9 c2 ff ff       	callq  420f57 <new_localvar>
  424c8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424c92:	be 01 00 00 00       	mov    $0x1,%esi
  424c97:	48 89 c7             	mov    %rax,%rdi
  424c9a:	e8 52 c6 ff ff       	callq  4212f1 <adjustlocalvars>
  424c9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424ca3:	8b 50 04             	mov    0x4(%rax),%edx
  424ca6:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  424caa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  424cae:	89 d1                	mov    %edx,%ecx
  424cb0:	ba 00 00 00 00       	mov    $0x0,%edx
  424cb5:	48 89 c7             	mov    %rax,%rdi
  424cb8:	e8 42 e3 ff ff       	callq  422fff <body>
  424cbd:	8b 55 f4             	mov    -0xc(%rbp),%edx
  424cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424cc4:	89 d6                	mov    %edx,%esi
  424cc6:	48 89 c7             	mov    %rax,%rdi
  424cc9:	e8 42 c4 ff ff       	callq  421110 <localdebuginfo>
  424cce:	48 89 c2             	mov    %rax,%rdx
  424cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424cd5:	8b 40 20             	mov    0x20(%rax),%eax
  424cd8:	89 42 08             	mov    %eax,0x8(%rdx)
  424cdb:	90                   	nop
  424cdc:	c9                   	leaveq 
  424cdd:	c3                   	retq   

0000000000424cde <getlocalattribute>:
  424cde:	55                   	push   %rbp
  424cdf:	48 89 e5             	mov    %rsp,%rbp
  424ce2:	48 83 ec 20          	sub    $0x20,%rsp
  424ce6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  424cea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424cee:	be 3c 00 00 00       	mov    $0x3c,%esi
  424cf3:	48 89 c7             	mov    %rax,%rdi
  424cf6:	e8 e2 be ff ff       	callq  420bdd <testnext>
  424cfb:	85 c0                	test   %eax,%eax
  424cfd:	0f 84 8d 00 00 00    	je     424d90 <getlocalattribute+0xb2>
  424d03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424d07:	48 89 c7             	mov    %rax,%rdi
  424d0a:	e8 1a c0 ff ff       	callq  420d29 <str_checkname>
  424d0f:	48 83 c0 18          	add    $0x18,%rax
  424d13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424d1b:	be 3e 00 00 00       	mov    $0x3e,%esi
  424d20:	48 89 c7             	mov    %rax,%rdi
  424d23:	e8 19 bf ff ff       	callq  420c41 <checknext>
  424d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424d2c:	be 5a 12 44 00       	mov    $0x44125a,%esi
  424d31:	48 89 c7             	mov    %rax,%rdi
  424d34:	e8 87 cc fd ff       	callq  4019c0 <strcmp@plt>
  424d39:	85 c0                	test   %eax,%eax
  424d3b:	75 07                	jne    424d44 <getlocalattribute+0x66>
  424d3d:	b8 01 00 00 00       	mov    $0x1,%eax
  424d42:	eb 51                	jmp    424d95 <getlocalattribute+0xb7>
  424d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424d48:	be 60 12 44 00       	mov    $0x441260,%esi
  424d4d:	48 89 c7             	mov    %rax,%rdi
  424d50:	e8 6b cc fd ff       	callq  4019c0 <strcmp@plt>
  424d55:	85 c0                	test   %eax,%eax
  424d57:	75 07                	jne    424d60 <getlocalattribute+0x82>
  424d59:	b8 02 00 00 00       	mov    $0x2,%eax
  424d5e:	eb 35                	jmp    424d95 <getlocalattribute+0xb7>
  424d60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424d64:	48 8b 40 38          	mov    0x38(%rax),%rax
  424d68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  424d6c:	be 66 12 44 00       	mov    $0x441266,%esi
  424d71:	48 89 c7             	mov    %rax,%rdi
  424d74:	b8 00 00 00 00       	mov    $0x0,%eax
  424d79:	e8 e1 ae ff ff       	callq  41fc5f <luaO_pushfstring>
  424d7e:	48 89 c2             	mov    %rax,%rdx
  424d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424d85:	48 89 d6             	mov    %rdx,%rsi
  424d88:	48 89 c7             	mov    %rax,%rdi
  424d8b:	e8 a1 4a fe ff       	callq  409831 <luaK_semerror>
  424d90:	b8 00 00 00 00       	mov    $0x0,%eax
  424d95:	c9                   	leaveq 
  424d96:	c3                   	retq   

0000000000424d97 <checktoclose>:
  424d97:	55                   	push   %rbp
  424d98:	48 89 e5             	mov    %rsp,%rbp
  424d9b:	48 83 ec 10          	sub    $0x10,%rsp
  424d9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  424da3:	89 75 f4             	mov    %esi,-0xc(%rbp)
  424da6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  424daa:	74 41                	je     424ded <checktoclose+0x56>
  424dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424db0:	48 89 c7             	mov    %rax,%rdi
  424db3:	e8 ce c9 ff ff       	callq  421786 <marktobeclosed>
  424db8:	8b 55 f4             	mov    -0xc(%rbp),%edx
  424dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424dbf:	89 d6                	mov    %edx,%esi
  424dc1:	48 89 c7             	mov    %rax,%rdi
  424dc4:	e8 ca c2 ff ff       	callq  421093 <reglevel>
  424dc9:	89 c2                	mov    %eax,%edx
  424dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  424dcf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  424dd5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  424ddb:	b9 00 00 00 00       	mov    $0x0,%ecx
  424de0:	be 37 00 00 00       	mov    $0x37,%esi
  424de5:	48 89 c7             	mov    %rax,%rdi
  424de8:	e8 f9 54 fe ff       	callq  40a2e6 <luaK_codeABCk>
  424ded:	90                   	nop
  424dee:	c9                   	leaveq 
  424def:	c3                   	retq   

0000000000424df0 <localstat>:
  424df0:	55                   	push   %rbp
  424df1:	48 89 e5             	mov    %rsp,%rbp
  424df4:	48 83 ec 50          	sub    $0x50,%rsp
  424df8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  424dfc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e00:	48 8b 40 30          	mov    0x30(%rax),%rax
  424e04:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  424e08:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  424e0f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  424e16:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e1a:	48 89 c7             	mov    %rax,%rdi
  424e1d:	e8 07 bf ff ff       	callq  420d29 <str_checkname>
  424e22:	48 89 c2             	mov    %rax,%rdx
  424e25:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e29:	48 89 d6             	mov    %rdx,%rsi
  424e2c:	48 89 c7             	mov    %rax,%rdi
  424e2f:	e8 23 c1 ff ff       	callq  420f57 <new_localvar>
  424e34:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  424e37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e3b:	48 89 c7             	mov    %rax,%rdi
  424e3e:	e8 9b fe ff ff       	callq  424cde <getlocalattribute>
  424e43:	89 45 e0             	mov    %eax,-0x20(%rbp)
  424e46:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  424e49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424e4d:	89 d6                	mov    %edx,%esi
  424e4f:	48 89 c7             	mov    %rax,%rdi
  424e52:	e8 01 c2 ff ff       	callq  421058 <getlocalvardesc>
  424e57:	8b 55 e0             	mov    -0x20(%rbp),%edx
  424e5a:	88 50 09             	mov    %dl,0x9(%rax)
  424e5d:	83 7d e0 02          	cmpl   $0x2,-0x20(%rbp)
  424e61:	75 2a                	jne    424e8d <localstat+0x9d>
  424e63:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  424e67:	74 11                	je     424e7a <localstat+0x8a>
  424e69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e6d:	be 80 12 44 00       	mov    $0x441280,%esi
  424e72:	48 89 c7             	mov    %rax,%rdi
  424e75:	e8 b7 49 fe ff       	callq  409831 <luaK_semerror>
  424e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424e7e:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  424e82:	0f b6 d0             	movzbl %al,%edx
  424e85:	8b 45 f8             	mov    -0x8(%rbp),%eax
  424e88:	01 d0                	add    %edx,%eax
  424e8a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  424e8d:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  424e91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424e95:	be 2c 00 00 00       	mov    $0x2c,%esi
  424e9a:	48 89 c7             	mov    %rax,%rdi
  424e9d:	e8 3b bd ff ff       	callq  420bdd <testnext>
  424ea2:	85 c0                	test   %eax,%eax
  424ea4:	0f 85 6c ff ff ff    	jne    424e16 <localstat+0x26>
  424eaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424eae:	be 3d 00 00 00       	mov    $0x3d,%esi
  424eb3:	48 89 c7             	mov    %rax,%rdi
  424eb6:	e8 22 bd ff ff       	callq  420bdd <testnext>
  424ebb:	85 c0                	test   %eax,%eax
  424ebd:	74 18                	je     424ed7 <localstat+0xe7>
  424ebf:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  424ec3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424ec7:	48 89 d6             	mov    %rdx,%rsi
  424eca:	48 89 c7             	mov    %rax,%rdi
  424ecd:	e8 4a e2 ff ff       	callq  42311c <explist>
  424ed2:	89 45 f4             	mov    %eax,-0xc(%rbp)
  424ed5:	eb 0e                	jmp    424ee5 <localstat+0xf5>
  424ed7:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
  424ede:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  424ee5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  424ee8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424eec:	89 d6                	mov    %edx,%esi
  424eee:	48 89 c7             	mov    %rax,%rdi
  424ef1:	e8 62 c1 ff ff       	callq  421058 <getlocalvardesc>
  424ef6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  424efa:	8b 45 f8             	mov    -0x8(%rbp),%eax
  424efd:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  424f00:	75 57                	jne    424f59 <localstat+0x169>
  424f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424f06:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  424f0a:	3c 01                	cmp    $0x1,%al
  424f0c:	75 4b                	jne    424f59 <localstat+0x169>
  424f0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  424f12:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  424f16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424f1a:	48 89 ce             	mov    %rcx,%rsi
  424f1d:	48 89 c7             	mov    %rax,%rdi
  424f20:	e8 09 4a fe ff       	callq  40992e <luaK_exp2const>
  424f25:	85 c0                	test   %eax,%eax
  424f27:	74 30                	je     424f59 <localstat+0x169>
  424f29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424f2d:	c6 40 09 03          	movb   $0x3,0x9(%rax)
  424f31:	8b 45 f8             	mov    -0x8(%rbp),%eax
  424f34:	8d 50 ff             	lea    -0x1(%rax),%edx
  424f37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424f3b:	89 d6                	mov    %edx,%esi
  424f3d:	48 89 c7             	mov    %rax,%rdi
  424f40:	e8 ac c3 ff ff       	callq  4212f1 <adjustlocalvars>
  424f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424f49:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  424f4d:	8d 50 01             	lea    0x1(%rax),%edx
  424f50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424f54:	88 50 42             	mov    %dl,0x42(%rax)
  424f57:	eb 27                	jmp    424f80 <localstat+0x190>
  424f59:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  424f5d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  424f60:	8b 75 f8             	mov    -0x8(%rbp),%esi
  424f63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424f67:	48 89 c7             	mov    %rax,%rdi
  424f6a:	e8 00 ca ff ff       	callq  42196f <adjust_assign>
  424f6f:	8b 55 f8             	mov    -0x8(%rbp),%edx
  424f72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424f76:	89 d6                	mov    %edx,%esi
  424f78:	48 89 c7             	mov    %rax,%rdi
  424f7b:	e8 71 c3 ff ff       	callq  4212f1 <adjustlocalvars>
  424f80:	8b 55 fc             	mov    -0x4(%rbp),%edx
  424f83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424f87:	89 d6                	mov    %edx,%esi
  424f89:	48 89 c7             	mov    %rax,%rdi
  424f8c:	e8 06 fe ff ff       	callq  424d97 <checktoclose>
  424f91:	90                   	nop
  424f92:	c9                   	leaveq 
  424f93:	c3                   	retq   

0000000000424f94 <funcname>:
  424f94:	55                   	push   %rbp
  424f95:	48 89 e5             	mov    %rsp,%rbp
  424f98:	48 83 ec 20          	sub    $0x20,%rsp
  424f9c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  424fa0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  424fa4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  424fab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  424faf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424fb3:	48 89 d6             	mov    %rdx,%rsi
  424fb6:	48 89 c7             	mov    %rax,%rdi
  424fb9:	e8 05 c9 ff ff       	callq  4218c3 <singlevar>
  424fbe:	eb 13                	jmp    424fd3 <funcname+0x3f>
  424fc0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  424fc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424fc8:	48 89 d6             	mov    %rdx,%rsi
  424fcb:	48 89 c7             	mov    %rax,%rdi
  424fce:	e8 54 d9 ff ff       	callq  422927 <fieldsel>
  424fd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424fd7:	8b 40 10             	mov    0x10(%rax),%eax
  424fda:	83 f8 2e             	cmp    $0x2e,%eax
  424fdd:	74 e1                	je     424fc0 <funcname+0x2c>
  424fdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424fe3:	8b 40 10             	mov    0x10(%rax),%eax
  424fe6:	83 f8 3a             	cmp    $0x3a,%eax
  424fe9:	75 1a                	jne    425005 <funcname+0x71>
  424feb:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  424ff2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  424ff6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424ffa:	48 89 d6             	mov    %rdx,%rsi
  424ffd:	48 89 c7             	mov    %rax,%rdi
  425000:	e8 22 d9 ff ff       	callq  422927 <fieldsel>
  425005:	8b 45 fc             	mov    -0x4(%rbp),%eax
  425008:	c9                   	leaveq 
  425009:	c3                   	retq   

000000000042500a <funcstat>:
  42500a:	55                   	push   %rbp
  42500b:	48 89 e5             	mov    %rsp,%rbp
  42500e:	48 83 ec 50          	sub    $0x50,%rsp
  425012:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  425016:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  425019:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42501d:	48 89 c7             	mov    %rax,%rdi
  425020:	e8 83 6e ff ff       	callq  41bea8 <luaX_next>
  425025:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  425029:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42502d:	48 89 d6             	mov    %rdx,%rsi
  425030:	48 89 c7             	mov    %rax,%rdi
  425033:	e8 5c ff ff ff       	callq  424f94 <funcname>
  425038:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42503b:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  42503e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425041:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  425045:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425049:	48 89 c7             	mov    %rax,%rdi
  42504c:	e8 ae df ff ff       	callq  422fff <body>
  425051:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  425055:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425059:	48 89 d6             	mov    %rdx,%rsi
  42505c:	48 89 c7             	mov    %rax,%rdi
  42505f:	e8 6b c1 ff ff       	callq  4211cf <check_readonly>
  425064:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425068:	48 8b 40 30          	mov    0x30(%rax),%rax
  42506c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  425070:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  425074:	48 89 ce             	mov    %rcx,%rsi
  425077:	48 89 c7             	mov    %rax,%rdi
  42507a:	e8 74 67 fe ff       	callq  40b7f3 <luaK_storevar>
  42507f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425083:	48 8b 40 30          	mov    0x30(%rax),%rax
  425087:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  42508a:	89 d6                	mov    %edx,%esi
  42508c:	48 89 c7             	mov    %rax,%rdi
  42508f:	e8 16 81 fe ff       	callq  40d1aa <luaK_fixline>
  425094:	90                   	nop
  425095:	c9                   	leaveq 
  425096:	c3                   	retq   

0000000000425097 <exprstat>:
  425097:	55                   	push   %rbp
  425098:	48 89 e5             	mov    %rsp,%rbp
  42509b:	48 83 ec 40          	sub    $0x40,%rsp
  42509f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4250a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4250a7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4250ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4250af:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4250b3:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4250b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4250bb:	48 89 d6             	mov    %rdx,%rsi
  4250be:	48 89 c7             	mov    %rax,%rdi
  4250c1:	e8 28 e3 ff ff       	callq  4233ee <suffixedexp>
  4250c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4250ca:	8b 40 10             	mov    0x10(%rax),%eax
  4250cd:	83 f8 3d             	cmp    $0x3d,%eax
  4250d0:	74 0c                	je     4250de <exprstat+0x47>
  4250d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4250d6:	8b 40 10             	mov    0x10(%rax),%eax
  4250d9:	83 f8 2c             	cmp    $0x2c,%eax
  4250dc:	75 22                	jne    425100 <exprstat+0x69>
  4250de:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  4250e5:	00 
  4250e6:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4250ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4250ee:	ba 01 00 00 00       	mov    $0x1,%edx
  4250f3:	48 89 ce             	mov    %rcx,%rsi
  4250f6:	48 89 c7             	mov    %rax,%rdi
  4250f9:	e8 33 ec ff ff       	callq  423d31 <restassign>
  4250fe:	eb 4d                	jmp    42514d <exprstat+0xb6>
  425100:	8b 45 d8             	mov    -0x28(%rbp),%eax
  425103:	83 f8 12             	cmp    $0x12,%eax
  425106:	74 11                	je     425119 <exprstat+0x82>
  425108:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42510c:	be ea 11 44 00       	mov    $0x4411ea,%esi
  425111:	48 89 c7             	mov    %rax,%rdi
  425114:	e8 85 51 ff ff       	callq  41a29e <luaX_syntaxerror>
  425119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42511d:	48 8b 00             	mov    (%rax),%rax
  425120:	48 8b 40 40          	mov    0x40(%rax),%rax
  425124:	8b 55 e0             	mov    -0x20(%rbp),%edx
  425127:	48 63 d2             	movslq %edx,%rdx
  42512a:	48 c1 e2 02          	shl    $0x2,%rdx
  42512e:	48 01 d0             	add    %rdx,%rax
  425131:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425139:	8b 00                	mov    (%rax),%eax
  42513b:	25 ff ff ff 00       	and    $0xffffff,%eax
  425140:	0d 00 00 00 01       	or     $0x1000000,%eax
  425145:	89 c2                	mov    %eax,%edx
  425147:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42514b:	89 10                	mov    %edx,(%rax)
  42514d:	90                   	nop
  42514e:	c9                   	leaveq 
  42514f:	c3                   	retq   

0000000000425150 <retstat>:
  425150:	55                   	push   %rbp
  425151:	48 89 e5             	mov    %rsp,%rbp
  425154:	48 83 ec 40          	sub    $0x40,%rsp
  425158:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42515c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  425160:	48 8b 40 30          	mov    0x30(%rax),%rax
  425164:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425168:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42516c:	48 89 c7             	mov    %rax,%rdi
  42516f:	e8 75 bf ff ff       	callq  4210e9 <luaY_nvarstack>
  425174:	89 45 f8             	mov    %eax,-0x8(%rbp)
  425177:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42517b:	be 01 00 00 00       	mov    $0x1,%esi
  425180:	48 89 c7             	mov    %rax,%rdi
  425183:	e8 0c d7 ff ff       	callq  422894 <block_follow>
  425188:	85 c0                	test   %eax,%eax
  42518a:	75 0c                	jne    425198 <retstat+0x48>
  42518c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  425190:	8b 40 10             	mov    0x10(%rax),%eax
  425193:	83 f8 3b             	cmp    $0x3b,%eax
  425196:	75 0c                	jne    4251a4 <retstat+0x54>
  425198:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42519f:	e9 d4 00 00 00       	jmpq   425278 <retstat+0x128>
  4251a4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4251a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4251ac:	48 89 d6             	mov    %rdx,%rsi
  4251af:	48 89 c7             	mov    %rax,%rdi
  4251b2:	e8 65 df ff ff       	callq  42311c <explist>
  4251b7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4251ba:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4251bd:	83 f8 12             	cmp    $0x12,%eax
  4251c0:	74 08                	je     4251ca <retstat+0x7a>
  4251c2:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4251c5:	83 f8 13             	cmp    $0x13,%eax
  4251c8:	75 7d                	jne    425247 <retstat+0xf7>
  4251ca:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4251ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4251d2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4251d7:	48 89 ce             	mov    %rcx,%rsi
  4251da:	48 89 c7             	mov    %rax,%rdi
  4251dd:	e8 a6 5a fe ff       	callq  40ac88 <luaK_setreturns>
  4251e2:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4251e5:	83 f8 12             	cmp    $0x12,%eax
  4251e8:	75 54                	jne    42523e <retstat+0xee>
  4251ea:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  4251ee:	75 4e                	jne    42523e <retstat+0xee>
  4251f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4251f4:	48 8b 40 18          	mov    0x18(%rax),%rax
  4251f8:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  4251fc:	84 c0                	test   %al,%al
  4251fe:	75 3e                	jne    42523e <retstat+0xee>
  425200:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425204:	48 8b 00             	mov    (%rax),%rax
  425207:	48 8b 40 40          	mov    0x40(%rax),%rax
  42520b:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42520e:	48 63 d2             	movslq %edx,%rdx
  425211:	48 c1 e2 02          	shl    $0x2,%rdx
  425215:	48 01 d0             	add    %rdx,%rax
  425218:	8b 00                	mov    (%rax),%eax
  42521a:	83 e0 80             	and    $0xffffff80,%eax
  42521d:	89 c1                	mov    %eax,%ecx
  42521f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425223:	48 8b 00             	mov    (%rax),%rax
  425226:	48 8b 40 40          	mov    0x40(%rax),%rax
  42522a:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42522d:	48 63 d2             	movslq %edx,%rdx
  425230:	48 c1 e2 02          	shl    $0x2,%rdx
  425234:	48 01 d0             	add    %rdx,%rax
  425237:	83 c9 45             	or     $0x45,%ecx
  42523a:	89 ca                	mov    %ecx,%edx
  42523c:	89 10                	mov    %edx,(%rax)
  42523e:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  425245:	eb 31                	jmp    425278 <retstat+0x128>
  425247:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  42524b:	75 18                	jne    425265 <retstat+0x115>
  42524d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  425251:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425255:	48 89 d6             	mov    %rdx,%rsi
  425258:	48 89 c7             	mov    %rax,%rdi
  42525b:	e8 b7 62 fe ff       	callq  40b517 <luaK_exp2anyreg>
  425260:	89 45 f8             	mov    %eax,-0x8(%rbp)
  425263:	eb 13                	jmp    425278 <retstat+0x128>
  425265:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  425269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42526d:	48 89 d6             	mov    %rdx,%rsi
  425270:	48 89 c7             	mov    %rax,%rdi
  425273:	e8 34 62 fe ff       	callq  40b4ac <luaK_exp2nextreg>
  425278:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42527b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  42527e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425282:	89 ce                	mov    %ecx,%esi
  425284:	48 89 c7             	mov    %rax,%rdi
  425287:	e8 77 4a fe ff       	callq  409d03 <luaK_ret>
  42528c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  425290:	be 3b 00 00 00       	mov    $0x3b,%esi
  425295:	48 89 c7             	mov    %rax,%rdi
  425298:	e8 40 b9 ff ff       	callq  420bdd <testnext>
  42529d:	90                   	nop
  42529e:	c9                   	leaveq 
  42529f:	c3                   	retq   

00000000004252a0 <statement>:
  4252a0:	55                   	push   %rbp
  4252a1:	48 89 e5             	mov    %rsp,%rbp
  4252a4:	48 83 ec 20          	sub    $0x20,%rsp
  4252a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4252ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4252b0:	8b 40 04             	mov    0x4(%rax),%eax
  4252b3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4252b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4252ba:	48 8b 40 38          	mov    0x38(%rax),%rax
  4252be:	48 89 c7             	mov    %rax,%rdi
  4252c1:	e8 e0 08 00 00       	callq  425ba6 <luaE_incCstack>
  4252c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4252ca:	8b 40 10             	mov    0x10(%rax),%eax
  4252cd:	3d 09 01 00 00       	cmp    $0x109,%eax
  4252d2:	0f 84 e2 01 00 00    	je     4254ba <statement+0x21a>
  4252d8:	3d 09 01 00 00       	cmp    $0x109,%eax
  4252dd:	7f 42                	jg     425321 <statement+0x81>
  4252df:	3d 02 01 00 00       	cmp    $0x102,%eax
  4252e4:	0f 84 bf 00 00 00    	je     4253a9 <statement+0x109>
  4252ea:	3d 02 01 00 00       	cmp    $0x102,%eax
  4252ef:	7f 15                	jg     425306 <statement+0x66>
  4252f1:	83 f8 3b             	cmp    $0x3b,%eax
  4252f4:	74 76                	je     42536c <statement+0xcc>
  4252f6:	3d 01 01 00 00       	cmp    $0x101,%eax
  4252fb:	0f 84 ab 01 00 00    	je     4254ac <statement+0x20c>
  425301:	e9 ce 01 00 00       	jmpq   4254d4 <statement+0x234>
  425306:	3d 07 01 00 00       	cmp    $0x107,%eax
  42530b:	0f 84 d0 00 00 00    	je     4253e1 <statement+0x141>
  425311:	3d 08 01 00 00       	cmp    $0x108,%eax
  425316:	0f 84 f1 00 00 00    	je     42540d <statement+0x16d>
  42531c:	e9 b3 01 00 00       	jmpq   4254d4 <statement+0x234>
  425321:	3d 10 01 00 00       	cmp    $0x110,%eax
  425326:	0f 84 cb 00 00 00    	je     4253f7 <statement+0x157>
  42532c:	3d 10 01 00 00       	cmp    $0x110,%eax
  425331:	7f 17                	jg     42534a <statement+0xaa>
  425333:	3d 0a 01 00 00       	cmp    $0x10a,%eax
  425338:	74 43                	je     42537d <statement+0xdd>
  42533a:	3d 0c 01 00 00       	cmp    $0x10c,%eax
  42533f:	0f 84 de 00 00 00    	je     425423 <statement+0x183>
  425345:	e9 8a 01 00 00       	jmpq   4254d4 <statement+0x234>
  42534a:	3d 15 01 00 00       	cmp    $0x115,%eax
  42534f:	74 42                	je     425393 <statement+0xf3>
  425351:	3d 1f 01 00 00       	cmp    $0x11f,%eax
  425356:	0f 84 07 01 00 00    	je     425463 <statement+0x1c3>
  42535c:	3d 11 01 00 00       	cmp    $0x111,%eax
  425361:	0f 84 2b 01 00 00    	je     425492 <statement+0x1f2>
  425367:	e9 68 01 00 00       	jmpq   4254d4 <statement+0x234>
  42536c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425370:	48 89 c7             	mov    %rax,%rdi
  425373:	e8 30 6b ff ff       	callq  41bea8 <luaX_next>
  425378:	e9 64 01 00 00       	jmpq   4254e1 <statement+0x241>
  42537d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425380:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425384:	89 d6                	mov    %edx,%esi
  425386:	48 89 c7             	mov    %rax,%rdi
  425389:	e8 14 f8 ff ff       	callq  424ba2 <ifstat>
  42538e:	e9 4e 01 00 00       	jmpq   4254e1 <statement+0x241>
  425393:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42539a:	89 d6                	mov    %edx,%esi
  42539c:	48 89 c7             	mov    %rax,%rdi
  42539f:	e8 fe ed ff ff       	callq  4241a2 <whilestat>
  4253a4:	e9 38 01 00 00       	jmpq   4254e1 <statement+0x241>
  4253a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4253ad:	48 89 c7             	mov    %rax,%rdi
  4253b0:	e8 f3 6a ff ff       	callq  41bea8 <luaX_next>
  4253b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4253b9:	48 89 c7             	mov    %rax,%rdi
  4253bc:	e8 70 e7 ff ff       	callq  423b31 <block>
  4253c1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4253c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4253c8:	89 d1                	mov    %edx,%ecx
  4253ca:	ba 02 01 00 00       	mov    $0x102,%edx
  4253cf:	be 05 01 00 00       	mov    $0x105,%esi
  4253d4:	48 89 c7             	mov    %rax,%rdi
  4253d7:	e8 94 b8 ff ff       	callq  420c70 <check_match>
  4253dc:	e9 00 01 00 00       	jmpq   4254e1 <statement+0x241>
  4253e1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4253e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4253e8:	89 d6                	mov    %edx,%esi
  4253ea:	48 89 c7             	mov    %rax,%rdi
  4253ed:	e8 1b f5 ff ff       	callq  42490d <forstat>
  4253f2:	e9 ea 00 00 00       	jmpq   4254e1 <statement+0x241>
  4253f7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4253fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4253fe:	89 d6                	mov    %edx,%esi
  425400:	48 89 c7             	mov    %rax,%rdi
  425403:	e8 6e ee ff ff       	callq  424276 <repeatstat>
  425408:	e9 d4 00 00 00       	jmpq   4254e1 <statement+0x241>
  42540d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425414:	89 d6                	mov    %edx,%esi
  425416:	48 89 c7             	mov    %rax,%rdi
  425419:	e8 ec fb ff ff       	callq  42500a <funcstat>
  42541e:	e9 be 00 00 00       	jmpq   4254e1 <statement+0x241>
  425423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425427:	48 89 c7             	mov    %rax,%rdi
  42542a:	e8 79 6a ff ff       	callq  41bea8 <luaX_next>
  42542f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425433:	be 08 01 00 00       	mov    $0x108,%esi
  425438:	48 89 c7             	mov    %rax,%rdi
  42543b:	e8 9d b7 ff ff       	callq  420bdd <testnext>
  425440:	85 c0                	test   %eax,%eax
  425442:	74 11                	je     425455 <statement+0x1b5>
  425444:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425448:	48 89 c7             	mov    %rax,%rdi
  42544b:	e8 fa f7 ff ff       	callq  424c4a <localfunc>
  425450:	e9 8c 00 00 00       	jmpq   4254e1 <statement+0x241>
  425455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425459:	48 89 c7             	mov    %rax,%rdi
  42545c:	e8 8f f9 ff ff       	callq  424df0 <localstat>
  425461:	eb 7e                	jmp    4254e1 <statement+0x241>
  425463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425467:	48 89 c7             	mov    %rax,%rdi
  42546a:	e8 39 6a ff ff       	callq  41bea8 <luaX_next>
  42546f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425473:	48 89 c7             	mov    %rax,%rdi
  425476:	e8 ae b8 ff ff       	callq  420d29 <str_checkname>
  42547b:	48 89 c1             	mov    %rax,%rcx
  42547e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425481:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425485:	48 89 ce             	mov    %rcx,%rsi
  425488:	48 89 c7             	mov    %rax,%rdi
  42548b:	e8 8a ec ff ff       	callq  42411a <labelstat>
  425490:	eb 4f                	jmp    4254e1 <statement+0x241>
  425492:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425496:	48 89 c7             	mov    %rax,%rdi
  425499:	e8 0a 6a ff ff       	callq  41bea8 <luaX_next>
  42549e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254a2:	48 89 c7             	mov    %rax,%rdi
  4254a5:	e8 a6 fc ff ff       	callq  425150 <retstat>
  4254aa:	eb 35                	jmp    4254e1 <statement+0x241>
  4254ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254b0:	48 89 c7             	mov    %rax,%rdi
  4254b3:	e8 71 eb ff ff       	callq  424029 <breakstat>
  4254b8:	eb 27                	jmp    4254e1 <statement+0x241>
  4254ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254be:	48 89 c7             	mov    %rax,%rdi
  4254c1:	e8 e2 69 ff ff       	callq  41bea8 <luaX_next>
  4254c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254ca:	48 89 c7             	mov    %rax,%rdi
  4254cd:	e8 64 ea ff ff       	callq  423f36 <gotostat>
  4254d2:	eb 0d                	jmp    4254e1 <statement+0x241>
  4254d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254d8:	48 89 c7             	mov    %rax,%rdi
  4254db:	e8 b7 fb ff ff       	callq  425097 <exprstat>
  4254e0:	90                   	nop
  4254e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254e5:	48 8b 40 30          	mov    0x30(%rax),%rax
  4254e9:	48 89 c7             	mov    %rax,%rdi
  4254ec:	e8 f8 bb ff ff       	callq  4210e9 <luaY_nvarstack>
  4254f1:	89 c2                	mov    %eax,%edx
  4254f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4254f7:	48 8b 40 30          	mov    0x30(%rax),%rax
  4254fb:	88 50 44             	mov    %dl,0x44(%rax)
  4254fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425502:	48 8b 40 38          	mov    0x38(%rax),%rax
  425506:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
  42550c:	83 ea 01             	sub    $0x1,%edx
  42550f:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  425515:	90                   	nop
  425516:	c9                   	leaveq 
  425517:	c3                   	retq   

0000000000425518 <mainfunc>:
  425518:	55                   	push   %rbp
  425519:	48 89 e5             	mov    %rsp,%rbp
  42551c:	48 83 ec 30          	sub    $0x30,%rsp
  425520:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  425524:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  425528:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  42552c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  425530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425534:	48 89 ce             	mov    %rcx,%rsi
  425537:	48 89 c7             	mov    %rax,%rdi
  42553a:	e8 bb cf ff ff       	callq  4224fa <open_func>
  42553f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  425543:	be 00 00 00 00       	mov    $0x0,%esi
  425548:	48 89 c7             	mov    %rax,%rdi
  42554b:	e8 5b d9 ff ff       	callq  422eab <setvararg>
  425550:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  425554:	48 89 c7             	mov    %rax,%rdi
  425557:	e8 35 bf ff ff       	callq  421491 <allocupvalue>
  42555c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425560:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425564:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  425568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42556c:	c6 40 09 00          	movb   $0x0,0x9(%rax)
  425570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425574:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  425578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42557c:	48 8b 50 68          	mov    0x68(%rax),%rdx
  425580:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425584:	48 89 10             	mov    %rdx,(%rax)
  425587:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42558b:	48 8b 00             	mov    (%rax),%rax
  42558e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  425592:	0f b6 c0             	movzbl %al,%eax
  425595:	83 e0 20             	and    $0x20,%eax
  425598:	85 c0                	test   %eax,%eax
  42559a:	74 3c                	je     4255d8 <mainfunc+0xc0>
  42559c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4255a0:	48 8b 00             	mov    (%rax),%rax
  4255a3:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4255a7:	0f b6 c0             	movzbl %al,%eax
  4255aa:	83 e0 18             	and    $0x18,%eax
  4255ad:	85 c0                	test   %eax,%eax
  4255af:	74 27                	je     4255d8 <mainfunc+0xc0>
  4255b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4255b5:	48 8b 00             	mov    (%rax),%rax
  4255b8:	48 89 c2             	mov    %rax,%rdx
  4255bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4255bf:	48 8b 00             	mov    (%rax),%rax
  4255c2:	48 89 c1             	mov    %rax,%rcx
  4255c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4255c9:	48 8b 40 38          	mov    0x38(%rax),%rax
  4255cd:	48 89 ce             	mov    %rcx,%rsi
  4255d0:	48 89 c7             	mov    %rax,%rdi
  4255d3:	e8 77 f4 fe ff       	callq  414a4f <luaC_barrier_>
  4255d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4255dc:	48 89 c7             	mov    %rax,%rdi
  4255df:	e8 c4 68 ff ff       	callq  41bea8 <luaX_next>
  4255e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4255e8:	48 89 c7             	mov    %rax,%rdi
  4255eb:	e8 ea d2 ff ff       	callq  4228da <statlist>
  4255f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4255f4:	be 20 01 00 00       	mov    $0x120,%esi
  4255f9:	48 89 c7             	mov    %rax,%rdi
  4255fc:	e8 11 b6 ff ff       	callq  420c12 <check>
  425601:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425605:	48 89 c7             	mov    %rax,%rdi
  425608:	e8 58 d0 ff ff       	callq  422665 <close_func>
  42560d:	90                   	nop
  42560e:	c9                   	leaveq 
  42560f:	c3                   	retq   

0000000000425610 <luaY_parser>:
  425610:	55                   	push   %rbp
  425611:	48 89 e5             	mov    %rsp,%rbp
  425614:	53                   	push   %rbx
  425615:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
  42561c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  425623:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
  42562a:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  425631:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  425638:	4c 89 85 d8 fe ff ff 	mov    %r8,-0x128(%rbp)
  42563f:	44 89 8d d4 fe ff ff 	mov    %r9d,-0x12c(%rbp)
  425646:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42564d:	be 01 00 00 00       	mov    $0x1,%esi
  425652:	48 89 c7             	mov    %rax,%rdi
  425655:	e8 21 e8 fe ff       	callq  413e7b <luaF_newLclosure>
  42565a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42565e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  425665:	48 8b 40 10          	mov    0x10(%rax),%rax
  425669:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42566d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425671:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  425675:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  425679:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42567d:	48 89 10             	mov    %rdx,(%rax)
  425680:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  425684:	c6 40 08 46          	movb   $0x46,0x8(%rax)
  425688:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42568f:	48 89 c7             	mov    %rax,%rdi
  425692:	e8 d0 c1 fe ff       	callq  411867 <luaD_inctop>
  425697:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42569e:	48 89 c7             	mov    %rax,%rdi
  4256a1:	e8 d3 79 00 00       	callq  42d079 <luaH_new>
  4256a6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  4256aa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4256b1:	48 8b 40 10          	mov    0x10(%rax),%rax
  4256b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4256b9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4256bd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4256c1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4256c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4256c9:	48 89 10             	mov    %rdx,(%rax)
  4256cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4256d0:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  4256d4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4256db:	48 89 c7             	mov    %rax,%rdi
  4256de:	e8 84 c1 fe ff       	callq  411867 <luaD_inctop>
  4256e3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4256ea:	48 89 c7             	mov    %rax,%rdi
  4256ed:	e8 41 ef fe ff       	callq  414633 <luaF_newproto>
  4256f2:	48 89 c2             	mov    %rax,%rdx
  4256f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4256f9:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4256fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425701:	48 8b 40 18          	mov    0x18(%rax),%rax
  425705:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  42570c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425710:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  425714:	0f b6 c0             	movzbl %al,%eax
  425717:	83 e0 20             	and    $0x20,%eax
  42571a:	85 c0                	test   %eax,%eax
  42571c:	74 37                	je     425755 <luaY_parser+0x145>
  42571e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425722:	48 8b 40 18          	mov    0x18(%rax),%rax
  425726:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42572a:	0f b6 c0             	movzbl %al,%eax
  42572d:	83 e0 18             	and    $0x18,%eax
  425730:	85 c0                	test   %eax,%eax
  425732:	74 21                	je     425755 <luaY_parser+0x145>
  425734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425738:	48 8b 40 18          	mov    0x18(%rax),%rax
  42573c:	48 89 c2             	mov    %rax,%rdx
  42573f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  425743:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42574a:	48 89 ce             	mov    %rcx,%rsi
  42574d:	48 89 c7             	mov    %rax,%rdi
  425750:	e8 fa f2 fe ff       	callq  414a4f <luaC_barrier_>
  425755:	48 8b 9d 00 ff ff ff 	mov    -0x100(%rbp),%rbx
  42575c:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
  425763:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42576a:	48 89 d6             	mov    %rdx,%rsi
  42576d:	48 89 c7             	mov    %rax,%rdi
  425770:	e8 37 19 00 00       	callq  4270ac <luaS_new>
  425775:	48 89 43 70          	mov    %rax,0x70(%rbx)
  425779:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  425780:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  425784:	0f b6 c0             	movzbl %al,%eax
  425787:	83 e0 20             	and    $0x20,%eax
  42578a:	85 c0                	test   %eax,%eax
  42578c:	74 43                	je     4257d1 <luaY_parser+0x1c1>
  42578e:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  425795:	48 8b 40 70          	mov    0x70(%rax),%rax
  425799:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42579d:	0f b6 c0             	movzbl %al,%eax
  4257a0:	83 e0 18             	and    $0x18,%eax
  4257a3:	85 c0                	test   %eax,%eax
  4257a5:	74 2a                	je     4257d1 <luaY_parser+0x1c1>
  4257a7:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4257ae:	48 8b 40 70          	mov    0x70(%rax),%rax
  4257b2:	48 89 c2             	mov    %rax,%rdx
  4257b5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4257bc:	48 89 c1             	mov    %rax,%rcx
  4257bf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4257c6:	48 89 ce             	mov    %rcx,%rsi
  4257c9:	48 89 c7             	mov    %rax,%rdi
  4257cc:	e8 7e f2 fe ff       	callq  414a4f <luaC_barrier_>
  4257d1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  4257d8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  4257dc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4257e3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4257e7:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4257ee:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  4257f5:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4257fc:	8b 50 28             	mov    0x28(%rax),%edx
  4257ff:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  425806:	89 50 18             	mov    %edx,0x18(%rax)
  425809:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  425810:	8b 50 18             	mov    0x18(%rax),%edx
  425813:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  42581a:	89 50 08             	mov    %edx,0x8(%rax)
  42581d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  425824:	48 8b 48 70          	mov    0x70(%rax),%rcx
  425828:	8b bd d4 fe ff ff    	mov    -0x12c(%rbp),%edi
  42582e:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
  425835:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
  42583c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  425843:	41 89 f8             	mov    %edi,%r8d
  425846:	48 89 c7             	mov    %rax,%rdi
  425849:	e8 94 4c ff ff       	callq  41a4e2 <luaX_setinput>
  42584e:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
  425855:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  42585c:	48 89 d6             	mov    %rdx,%rsi
  42585f:	48 89 c7             	mov    %rax,%rdi
  425862:	e8 b1 fc ff ff       	callq  425518 <mainfunc>
  425867:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42586e:	48 8b 40 10          	mov    0x10(%rax),%rax
  425872:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  425876:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42587d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  425881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425885:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
  42588c:	5b                   	pop    %rbx
  42588d:	5d                   	pop    %rbp
  42588e:	c3                   	retq   

000000000042588f <luai_makeseed>:
  42588f:	55                   	push   %rbp
  425890:	48 89 e5             	mov    %rsp,%rbp
  425893:	48 83 ec 50          	sub    $0x50,%rsp
  425897:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  42589b:	bf 00 00 00 00       	mov    $0x0,%edi
  4258a0:	e8 0b c0 fd ff       	callq  4018b0 <time@plt>
  4258a5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4258a8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4258af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4258b3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4258b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4258ba:	48 98                	cltq   
  4258bc:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4258c0:	48 01 c2             	add    %rax,%rdx
  4258c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4258c7:	48 89 02             	mov    %rax,(%rdx)
  4258ca:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4258cd:	83 c0 08             	add    $0x8,%eax
  4258d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4258d3:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
  4258d7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4258db:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4258de:	48 98                	cltq   
  4258e0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4258e4:	48 01 c2             	add    %rax,%rdx
  4258e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4258eb:	48 89 02             	mov    %rax,(%rdx)
  4258ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4258f1:	83 c0 08             	add    $0x8,%eax
  4258f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4258f7:	b8 7c 63 42 00       	mov    $0x42637c,%eax
  4258fc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  425900:	8b 45 fc             	mov    -0x4(%rbp),%eax
  425903:	48 98                	cltq   
  425905:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  425909:	48 01 c2             	add    %rax,%rdx
  42590c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  425910:	48 89 02             	mov    %rax,(%rdx)
  425913:	8b 45 fc             	mov    -0x4(%rbp),%eax
  425916:	83 c0 08             	add    $0x8,%eax
  425919:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42591c:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42591f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  425922:	48 63 c8             	movslq %eax,%rcx
  425925:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  425929:	48 89 ce             	mov    %rcx,%rsi
  42592c:	48 89 c7             	mov    %rax,%rdi
  42592f:	e8 6f 0f 00 00       	callq  4268a3 <luaS_hash>
  425934:	c9                   	leaveq 
  425935:	c3                   	retq   

0000000000425936 <luaE_setdebt>:
  425936:	55                   	push   %rbp
  425937:	48 89 e5             	mov    %rsp,%rbp
  42593a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42593e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  425942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425946:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42594a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42594e:	48 8b 40 18          	mov    0x18(%rax),%rax
  425952:	48 01 d0             	add    %rdx,%rax
  425955:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425959:	48 ba 01 00 00 00 00 	movabs $0x8000000000000001,%rdx
  425960:	00 00 80 
  425963:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425967:	48 01 d0             	add    %rdx,%rax
  42596a:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42596e:	7d 15                	jge    425985 <luaE_setdebt+0x4f>
  425970:	48 ba 01 00 00 00 00 	movabs $0x8000000000000001,%rdx
  425977:	00 00 80 
  42597a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42597e:	48 01 d0             	add    %rdx,%rax
  425981:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  425985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425989:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  42598d:	48 89 c2             	mov    %rax,%rdx
  425990:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425994:	48 89 50 10          	mov    %rdx,0x10(%rax)
  425998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42599c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4259a0:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4259a4:	90                   	nop
  4259a5:	5d                   	pop    %rbp
  4259a6:	c3                   	retq   

00000000004259a7 <lua_setcstacklimit>:
  4259a7:	55                   	push   %rbp
  4259a8:	48 89 e5             	mov    %rsp,%rbp
  4259ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4259af:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4259b2:	b8 c8 00 00 00       	mov    $0xc8,%eax
  4259b7:	5d                   	pop    %rbp
  4259b8:	c3                   	retq   

00000000004259b9 <luaE_extendCI>:
  4259b9:	55                   	push   %rbp
  4259ba:	48 89 e5             	mov    %rsp,%rbp
  4259bd:	48 83 ec 20          	sub    $0x20,%rsp
  4259c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4259c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4259c9:	ba 00 00 00 00       	mov    $0x0,%edx
  4259ce:	be 40 00 00 00       	mov    $0x40,%esi
  4259d3:	48 89 c7             	mov    %rax,%rdi
  4259d6:	e8 a4 78 ff ff       	callq  41d27f <luaM_malloc_>
  4259db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4259df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4259e3:	48 8b 40 20          	mov    0x20(%rax),%rax
  4259e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4259eb:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4259ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4259f3:	48 8b 50 20          	mov    0x20(%rax),%rdx
  4259f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4259fb:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4259ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425a03:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  425a0a:	00 
  425a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425a0f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  425a16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a1a:	0f b7 40 0c          	movzwl 0xc(%rax),%eax
  425a1e:	8d 50 01             	lea    0x1(%rax),%edx
  425a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a25:	66 89 50 0c          	mov    %dx,0xc(%rax)
  425a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425a2d:	c9                   	leaveq 
  425a2e:	c3                   	retq   

0000000000425a2f <luaE_freeCI>:
  425a2f:	55                   	push   %rbp
  425a30:	48 89 e5             	mov    %rsp,%rbp
  425a33:	48 83 ec 20          	sub    $0x20,%rsp
  425a37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  425a3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a3f:	48 8b 40 20          	mov    0x20(%rax),%rax
  425a43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425a47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425a4b:	48 8b 40 18          	mov    0x18(%rax),%rax
  425a4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425a53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425a57:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  425a5e:	00 
  425a5f:	eb 37                	jmp    425a98 <luaE_freeCI+0x69>
  425a61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425a65:	48 8b 40 18          	mov    0x18(%rax),%rax
  425a69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425a6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  425a71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a75:	ba 40 00 00 00       	mov    $0x40,%edx
  425a7a:	48 89 ce             	mov    %rcx,%rsi
  425a7d:	48 89 c7             	mov    %rax,%rdi
  425a80:	e8 fa 75 ff ff       	callq  41d07f <luaM_free_>
  425a85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a89:	0f b7 40 0c          	movzwl 0xc(%rax),%eax
  425a8d:	8d 50 ff             	lea    -0x1(%rax),%edx
  425a90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425a94:	66 89 50 0c          	mov    %dx,0xc(%rax)
  425a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425a9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425aa0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  425aa5:	75 ba                	jne    425a61 <luaE_freeCI+0x32>
  425aa7:	90                   	nop
  425aa8:	c9                   	leaveq 
  425aa9:	c3                   	retq   

0000000000425aaa <luaE_shrinkCI>:
  425aaa:	55                   	push   %rbp
  425aab:	48 89 e5             	mov    %rsp,%rbp
  425aae:	48 83 ec 30          	sub    $0x30,%rsp
  425ab2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  425ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425aba:	48 8b 40 20          	mov    0x20(%rax),%rax
  425abe:	48 8b 40 18          	mov    0x18(%rax),%rax
  425ac2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425ac6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  425acb:	74 75                	je     425b42 <luaE_shrinkCI+0x98>
  425acd:	eb 5e                	jmp    425b2d <luaE_shrinkCI+0x83>
  425acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425ad3:	48 8b 40 18          	mov    0x18(%rax),%rax
  425ad7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  425adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425adf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  425ae3:	48 89 50 18          	mov    %rdx,0x18(%rax)
  425ae7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425aeb:	0f b7 40 0c          	movzwl 0xc(%rax),%eax
  425aef:	8d 50 ff             	lea    -0x1(%rax),%edx
  425af2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425af6:	66 89 50 0c          	mov    %dx,0xc(%rax)
  425afa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  425afe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425b02:	ba 40 00 00 00       	mov    $0x40,%edx
  425b07:	48 89 ce             	mov    %rcx,%rsi
  425b0a:	48 89 c7             	mov    %rax,%rdi
  425b0d:	e8 6d 75 ff ff       	callq  41d07f <luaM_free_>
  425b12:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  425b17:	74 2c                	je     425b45 <luaE_shrinkCI+0x9b>
  425b19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425b1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  425b21:	48 89 50 10          	mov    %rdx,0x10(%rax)
  425b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425b29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425b2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425b31:	48 8b 40 18          	mov    0x18(%rax),%rax
  425b35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425b39:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  425b3e:	75 8f                	jne    425acf <luaE_shrinkCI+0x25>
  425b40:	eb 04                	jmp    425b46 <luaE_shrinkCI+0x9c>
  425b42:	90                   	nop
  425b43:	eb 01                	jmp    425b46 <luaE_shrinkCI+0x9c>
  425b45:	90                   	nop
  425b46:	c9                   	leaveq 
  425b47:	c3                   	retq   

0000000000425b48 <luaE_checkcstack>:
  425b48:	55                   	push   %rbp
  425b49:	48 89 e5             	mov    %rsp,%rbp
  425b4c:	48 83 ec 10          	sub    $0x10,%rsp
  425b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  425b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425b58:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  425b5e:	0f b7 c0             	movzwl %ax,%eax
  425b61:	3d c8 00 00 00       	cmp    $0xc8,%eax
  425b66:	75 16                	jne    425b7e <luaE_checkcstack+0x36>
  425b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425b6c:	be c0 12 44 00       	mov    $0x4412c0,%esi
  425b71:	48 89 c7             	mov    %rax,%rdi
  425b74:	b8 00 00 00 00       	mov    $0x0,%eax
  425b79:	e8 fb af fe ff       	callq  410b79 <luaG_runerror>
  425b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425b82:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  425b88:	0f b7 c0             	movzwl %ax,%eax
  425b8b:	3d db 00 00 00       	cmp    $0xdb,%eax
  425b90:	76 11                	jbe    425ba3 <luaE_checkcstack+0x5b>
  425b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425b96:	be 05 00 00 00       	mov    $0x5,%esi
  425b9b:	48 89 c7             	mov    %rax,%rdi
  425b9e:	e8 d6 b5 fe ff       	callq  411179 <luaD_throw>
  425ba3:	90                   	nop
  425ba4:	c9                   	leaveq 
  425ba5:	c3                   	retq   

0000000000425ba6 <luaE_incCstack>:
  425ba6:	55                   	push   %rbp
  425ba7:	48 89 e5             	mov    %rsp,%rbp
  425baa:	48 83 ec 10          	sub    $0x10,%rsp
  425bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  425bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425bb6:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  425bbc:	8d 50 01             	lea    0x1(%rax),%edx
  425bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425bc3:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  425bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425bcd:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  425bd3:	0f b7 c0             	movzwl %ax,%eax
  425bd6:	3d c7 00 00 00       	cmp    $0xc7,%eax
  425bdb:	0f 97 c0             	seta   %al
  425bde:	0f b6 c0             	movzbl %al,%eax
  425be1:	48 85 c0             	test   %rax,%rax
  425be4:	74 0c                	je     425bf2 <luaE_incCstack+0x4c>
  425be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425bea:	48 89 c7             	mov    %rax,%rdi
  425bed:	e8 56 ff ff ff       	callq  425b48 <luaE_checkcstack>
  425bf2:	90                   	nop
  425bf3:	c9                   	leaveq 
  425bf4:	c3                   	retq   

0000000000425bf5 <stack_init>:
  425bf5:	55                   	push   %rbp
  425bf6:	48 89 e5             	mov    %rsp,%rbp
  425bf9:	48 83 ec 20          	sub    $0x20,%rsp
  425bfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  425c01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  425c05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  425c09:	ba 00 00 00 00       	mov    $0x0,%edx
  425c0e:	be d0 02 00 00       	mov    $0x2d0,%esi
  425c13:	48 89 c7             	mov    %rax,%rdi
  425c16:	e8 64 76 ff ff       	callq  41d27f <luaM_malloc_>
  425c1b:	48 89 c2             	mov    %rax,%rdx
  425c1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c22:	48 89 50 30          	mov    %rdx,0x30(%rax)
  425c26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c2a:	48 8b 50 30          	mov    0x30(%rax),%rdx
  425c2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c32:	48 89 50 40          	mov    %rdx,0x40(%rax)
  425c36:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  425c3d:	eb 1d                	jmp    425c5c <stack_init+0x67>
  425c3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c43:	48 8b 40 30          	mov    0x30(%rax),%rax
  425c47:	8b 55 fc             	mov    -0x4(%rbp),%edx
  425c4a:	48 63 d2             	movslq %edx,%rdx
  425c4d:	48 c1 e2 04          	shl    $0x4,%rdx
  425c51:	48 01 d0             	add    %rdx,%rax
  425c54:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  425c58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  425c5c:	83 7d fc 2c          	cmpl   $0x2c,-0x4(%rbp)
  425c60:	7e dd                	jle    425c3f <stack_init+0x4a>
  425c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c66:	48 8b 50 30          	mov    0x30(%rax),%rdx
  425c6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c6e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  425c72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c76:	48 8b 40 30          	mov    0x30(%rax),%rax
  425c7a:	48 8d 90 80 02 00 00 	lea    0x280(%rax),%rdx
  425c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c85:	48 89 50 28          	mov    %rdx,0x28(%rax)
  425c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425c8d:	48 83 c0 60          	add    $0x60,%rax
  425c91:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425c95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425c99:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  425ca0:	00 
  425ca1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425ca5:	48 8b 50 10          	mov    0x10(%rax),%rdx
  425ca9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425cad:	48 89 50 18          	mov    %rdx,0x18(%rax)
  425cb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425cb5:	66 c7 40 3e 02 00    	movw   $0x2,0x3e(%rax)
  425cbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425cbf:	48 8b 50 10          	mov    0x10(%rax),%rdx
  425cc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425cc7:	48 89 10             	mov    %rdx,(%rax)
  425cca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425cce:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  425cd5:	00 
  425cd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425cda:	66 c7 40 3c 00 00    	movw   $0x0,0x3c(%rax)
  425ce0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425ce4:	48 8b 40 10          	mov    0x10(%rax),%rax
  425ce8:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  425cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425cf0:	48 8b 40 10          	mov    0x10(%rax),%rax
  425cf4:	48 8d 50 10          	lea    0x10(%rax),%rdx
  425cf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425cfc:	48 89 50 10          	mov    %rdx,0x10(%rax)
  425d00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425d04:	48 8b 40 10          	mov    0x10(%rax),%rax
  425d08:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
  425d0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425d13:	48 89 50 08          	mov    %rdx,0x8(%rax)
  425d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425d1b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  425d1f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  425d23:	90                   	nop
  425d24:	c9                   	leaveq 
  425d25:	c3                   	retq   

0000000000425d26 <freestack>:
  425d26:	55                   	push   %rbp
  425d27:	48 89 e5             	mov    %rsp,%rbp
  425d2a:	48 83 ec 10          	sub    $0x10,%rsp
  425d2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  425d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d36:	48 8b 40 30          	mov    0x30(%rax),%rax
  425d3a:	48 85 c0             	test   %rax,%rax
  425d3d:	74 5b                	je     425d9a <freestack+0x74>
  425d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d43:	48 8d 50 60          	lea    0x60(%rax),%rdx
  425d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d4b:	48 89 50 20          	mov    %rdx,0x20(%rax)
  425d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d53:	48 89 c7             	mov    %rax,%rdi
  425d56:	e8 d4 fc ff ff       	callq  425a2f <luaE_freeCI>
  425d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d5f:	48 8b 50 28          	mov    0x28(%rax),%rdx
  425d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d67:	48 8b 40 30          	mov    0x30(%rax),%rax
  425d6b:	48 29 c2             	sub    %rax,%rdx
  425d6e:	48 89 d0             	mov    %rdx,%rax
  425d71:	48 c1 f8 04          	sar    $0x4,%rax
  425d75:	83 c0 05             	add    $0x5,%eax
  425d78:	48 98                	cltq   
  425d7a:	48 c1 e0 04          	shl    $0x4,%rax
  425d7e:	48 89 c2             	mov    %rax,%rdx
  425d81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d85:	48 8b 48 30          	mov    0x30(%rax),%rcx
  425d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425d8d:	48 89 ce             	mov    %rcx,%rsi
  425d90:	48 89 c7             	mov    %rax,%rdi
  425d93:	e8 e7 72 ff ff       	callq  41d07f <luaM_free_>
  425d98:	eb 01                	jmp    425d9b <freestack+0x75>
  425d9a:	90                   	nop
  425d9b:	c9                   	leaveq 
  425d9c:	c3                   	retq   

0000000000425d9d <init_registry>:
  425d9d:	55                   	push   %rbp
  425d9e:	48 89 e5             	mov    %rsp,%rbp
  425da1:	48 83 ec 50          	sub    $0x50,%rsp
  425da5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  425da9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  425dad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425db1:	48 89 c7             	mov    %rax,%rdi
  425db4:	e8 c0 72 00 00       	callq  42d079 <luaH_new>
  425db9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425dbd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  425dc1:	48 83 c0 40          	add    $0x40,%rax
  425dc5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  425dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425dcd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  425dd1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  425dd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425dd9:	48 89 10             	mov    %rdx,(%rax)
  425ddc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  425de0:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  425de4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  425de8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425dec:	b9 00 00 00 00       	mov    $0x0,%ecx
  425df1:	ba 02 00 00 00       	mov    $0x2,%edx
  425df6:	48 89 c7             	mov    %rax,%rdi
  425df9:	e8 3b 6f 00 00       	callq  42cd39 <luaH_resize>
  425dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425e02:	48 8b 40 10          	mov    0x10(%rax),%rax
  425e06:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  425e0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425e0e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  425e12:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  425e16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  425e1a:	48 89 10             	mov    %rdx,(%rax)
  425e1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  425e21:	c6 40 08 48          	movb   $0x48,0x8(%rax)
  425e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425e29:	48 8b 40 10          	mov    0x10(%rax),%rax
  425e2d:	48 83 c0 10          	add    $0x10,%rax
  425e31:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  425e35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  425e39:	48 89 c7             	mov    %rax,%rdi
  425e3c:	e8 38 72 00 00       	callq  42d079 <luaH_new>
  425e41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  425e45:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  425e49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  425e4d:	48 89 10             	mov    %rdx,(%rax)
  425e50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  425e54:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  425e58:	90                   	nop
  425e59:	c9                   	leaveq 
  425e5a:	c3                   	retq   

0000000000425e5b <f_luaopen>:
  425e5b:	55                   	push   %rbp
  425e5c:	48 89 e5             	mov    %rsp,%rbp
  425e5f:	48 83 ec 20          	sub    $0x20,%rsp
  425e63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  425e67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  425e6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425e6f:	48 8b 40 18          	mov    0x18(%rax),%rax
  425e73:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425e77:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  425e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425e7f:	48 89 d6             	mov    %rdx,%rsi
  425e82:	48 89 c7             	mov    %rax,%rdi
  425e85:	e8 6b fd ff ff       	callq  425bf5 <stack_init>
  425e8a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  425e8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425e92:	48 89 d6             	mov    %rdx,%rsi
  425e95:	48 89 c7             	mov    %rax,%rdi
  425e98:	e8 00 ff ff ff       	callq  425d9d <init_registry>
  425e9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425ea1:	48 89 c7             	mov    %rax,%rdi
  425ea4:	e8 09 0d 00 00       	callq  426bb2 <luaS_init>
  425ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425ead:	48 89 c7             	mov    %rax,%rdi
  425eb0:	e8 9c 8e 00 00       	callq  42ed51 <luaT_init>
  425eb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425eb9:	48 89 c7             	mov    %rax,%rdi
  425ebc:	e8 ac 41 ff ff       	callq  41a06d <luaX_init>
  425ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425ec5:	c6 40 6a 00          	movb   $0x0,0x6a(%rax)
  425ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425ecd:	c6 40 58 00          	movb   $0x0,0x58(%rax)
  425ed1:	90                   	nop
  425ed2:	c9                   	leaveq 
  425ed3:	c3                   	retq   

0000000000425ed4 <preinit_thread>:
  425ed4:	55                   	push   %rbp
  425ed5:	48 89 e5             	mov    %rsp,%rbp
  425ed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  425edc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  425ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425ee4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  425ee8:	48 89 50 18          	mov    %rdx,0x18(%rax)
  425eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425ef0:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  425ef7:	00 
  425ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425efc:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  425f03:	00 
  425f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f08:	66 c7 40 0c 00 00    	movw   $0x0,0xc(%rax)
  425f0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  425f16:	48 89 50 50          	mov    %rdx,0x50(%rax)
  425f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f1e:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%rax)
  425f25:	00 00 00 
  425f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f2c:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
  425f33:	00 
  425f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f38:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
  425f3f:	00 00 00 00 
  425f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f47:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%rax)
  425f4e:	00 00 00 
  425f51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f55:	c7 80 b8 00 00 00 00 	movl   $0x0,0xb8(%rax)
  425f5c:	00 00 00 
  425f5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f63:	c6 40 0b 01          	movb   $0x1,0xb(%rax)
  425f67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f6b:	8b 90 b8 00 00 00    	mov    0xb8(%rax),%edx
  425f71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f75:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
  425f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f7f:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
  425f86:	00 
  425f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f8b:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  425f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425f93:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
  425f9a:	00 00 00 00 
  425f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425fa2:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%rax)
  425fa9:	00 00 00 
  425fac:	90                   	nop
  425fad:	5d                   	pop    %rbp
  425fae:	c3                   	retq   

0000000000425faf <close_state>:
  425faf:	55                   	push   %rbp
  425fb0:	48 89 e5             	mov    %rsp,%rbp
  425fb3:	48 83 ec 20          	sub    $0x20,%rsp
  425fb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  425fbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425fbf:	48 8b 40 18          	mov    0x18(%rax),%rax
  425fc3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  425fcb:	0f b6 40 58          	movzbl 0x58(%rax),%eax
  425fcf:	0f b6 c0             	movzbl %al,%eax
  425fd2:	83 e0 0f             	and    $0xf,%eax
  425fd5:	85 c0                	test   %eax,%eax
  425fd7:	74 0e                	je     425fe7 <close_state+0x38>
  425fd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425fdd:	48 89 c7             	mov    %rax,%rdi
  425fe0:	e8 d3 1c ff ff       	callq  417cb8 <luaC_freeallobjects>
  425fe5:	eb 32                	jmp    426019 <close_state+0x6a>
  425fe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425feb:	48 8d 50 60          	lea    0x60(%rax),%rdx
  425fef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425ff3:	48 89 50 20          	mov    %rdx,0x20(%rax)
  425ff7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425ffb:	ba 00 00 00 00       	mov    $0x0,%edx
  426000:	be 01 00 00 00       	mov    $0x1,%esi
  426005:	48 89 c7             	mov    %rax,%rdi
  426008:	e8 9e d0 fe ff       	callq  4130ab <luaD_closeprotected>
  42600d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426011:	48 89 c7             	mov    %rax,%rdi
  426014:	e8 9f 1c ff ff       	callq  417cb8 <luaC_freeallobjects>
  426019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42601d:	48 8b 40 18          	mov    0x18(%rax),%rax
  426021:	8b 40 3c             	mov    0x3c(%rax),%eax
  426024:	48 98                	cltq   
  426026:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  42602d:	00 
  42602e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426032:	48 8b 40 18          	mov    0x18(%rax),%rax
  426036:	48 8b 48 30          	mov    0x30(%rax),%rcx
  42603a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42603e:	48 89 ce             	mov    %rcx,%rsi
  426041:	48 89 c7             	mov    %rax,%rdi
  426044:	e8 36 70 ff ff       	callq  41d07f <luaM_free_>
  426049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42604d:	48 89 c7             	mov    %rax,%rdi
  426050:	e8 d1 fc ff ff       	callq  425d26 <freestack>
  426055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426059:	48 8b 00             	mov    (%rax),%rax
  42605c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  426060:	48 8d 72 f8          	lea    -0x8(%rdx),%rsi
  426064:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  426068:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  42606c:	b9 00 00 00 00       	mov    $0x0,%ecx
  426071:	ba 58 06 00 00       	mov    $0x658,%edx
  426076:	ff d0                	callq  *%rax
  426078:	90                   	nop
  426079:	c9                   	leaveq 
  42607a:	c3                   	retq   

000000000042607b <lua_newthread>:
  42607b:	55                   	push   %rbp
  42607c:	48 89 e5             	mov    %rsp,%rbp
  42607f:	48 83 ec 40          	sub    $0x40,%rsp
  426083:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  426087:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42608b:	48 8b 40 18          	mov    0x18(%rax),%rax
  42608f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426093:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426097:	48 8b 40 18          	mov    0x18(%rax),%rax
  42609b:	48 8b 40 18          	mov    0x18(%rax),%rax
  42609f:	48 85 c0             	test   %rax,%rax
  4260a2:	7e 0c                	jle    4260b0 <lua_newthread+0x35>
  4260a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4260a8:	48 89 c7             	mov    %rax,%rdi
  4260ab:	e8 a8 22 ff ff       	callq  418358 <luaC_step>
  4260b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4260b4:	b9 08 00 00 00       	mov    $0x8,%ecx
  4260b9:	ba d0 00 00 00       	mov    $0xd0,%edx
  4260be:	be 08 00 00 00       	mov    $0x8,%esi
  4260c3:	48 89 c7             	mov    %rax,%rdi
  4260c6:	e8 39 eb fe ff       	callq  414c04 <luaC_newobjdt>
  4260cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4260cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4260d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4260d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4260db:	48 8b 40 10          	mov    0x10(%rax),%rax
  4260df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4260e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4260e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4260eb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4260ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4260f3:	48 89 10             	mov    %rdx,(%rax)
  4260f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4260fa:	c6 40 08 48          	movb   $0x48,0x8(%rax)
  4260fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426102:	48 8b 40 10          	mov    0x10(%rax),%rax
  426106:	48 8d 50 10          	lea    0x10(%rax),%rdx
  42610a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42610e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  426112:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  426116:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42611a:	48 89 d6             	mov    %rdx,%rsi
  42611d:	48 89 c7             	mov    %rax,%rdi
  426120:	e8 af fd ff ff       	callq  425ed4 <preinit_thread>
  426125:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426129:	8b 90 c0 00 00 00    	mov    0xc0(%rax),%edx
  42612f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426133:	89 90 c0 00 00 00    	mov    %edx,0xc0(%rax)
  426139:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42613d:	8b 90 b8 00 00 00    	mov    0xb8(%rax),%edx
  426143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426147:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)
  42614d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426151:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
  426158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42615c:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
  426163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426167:	8b 90 b8 00 00 00    	mov    0xb8(%rax),%edx
  42616d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426171:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
  426177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42617b:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  426182:	48 83 e8 08          	sub    $0x8,%rax
  426186:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42618a:	48 83 ea 08          	sub    $0x8,%rdx
  42618e:	48 8b 00             	mov    (%rax),%rax
  426191:	48 89 02             	mov    %rax,(%rdx)
  426194:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  426198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42619c:	48 89 d6             	mov    %rdx,%rsi
  42619f:	48 89 c7             	mov    %rax,%rdi
  4261a2:	e8 4e fa ff ff       	callq  425bf5 <stack_init>
  4261a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4261ab:	c9                   	leaveq 
  4261ac:	c3                   	retq   

00000000004261ad <luaE_freethread>:
  4261ad:	55                   	push   %rbp
  4261ae:	48 89 e5             	mov    %rsp,%rbp
  4261b1:	48 83 ec 20          	sub    $0x20,%rsp
  4261b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4261b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4261bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4261c1:	48 83 e8 08          	sub    $0x8,%rax
  4261c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4261c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4261cd:	48 8b 50 30          	mov    0x30(%rax),%rdx
  4261d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4261d5:	48 89 d6             	mov    %rdx,%rsi
  4261d8:	48 89 c7             	mov    %rax,%rdi
  4261db:	e8 49 e2 fe ff       	callq  414429 <luaF_closeupval>
  4261e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4261e4:	48 89 c7             	mov    %rax,%rdi
  4261e7:	e8 3a fb ff ff       	callq  425d26 <freestack>
  4261ec:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4261f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4261f4:	ba d0 00 00 00       	mov    $0xd0,%edx
  4261f9:	48 89 ce             	mov    %rcx,%rsi
  4261fc:	48 89 c7             	mov    %rax,%rdi
  4261ff:	e8 7b 6e ff ff       	callq  41d07f <luaM_free_>
  426204:	90                   	nop
  426205:	c9                   	leaveq 
  426206:	c3                   	retq   

0000000000426207 <luaE_resetthread>:
  426207:	55                   	push   %rbp
  426208:	48 89 e5             	mov    %rsp,%rbp
  42620b:	48 83 ec 20          	sub    $0x20,%rsp
  42620f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426213:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  426216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42621a:	48 8d 50 60          	lea    0x60(%rax),%rdx
  42621e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426222:	48 89 50 20          	mov    %rdx,0x20(%rax)
  426226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42622a:	48 8b 40 20          	mov    0x20(%rax),%rax
  42622e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426236:	48 8b 40 30          	mov    0x30(%rax),%rax
  42623a:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  42623e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426242:	48 8b 50 30          	mov    0x30(%rax),%rdx
  426246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42624a:	48 89 10             	mov    %rdx,(%rax)
  42624d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426251:	66 c7 40 3e 02 00    	movw   $0x2,0x3e(%rax)
  426257:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  42625b:	75 07                	jne    426264 <luaE_resetthread+0x5d>
  42625d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  426264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426268:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  42626c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42626f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426273:	be 01 00 00 00       	mov    $0x1,%esi
  426278:	48 89 c7             	mov    %rax,%rdi
  42627b:	e8 2b ce fe ff       	callq  4130ab <luaD_closeprotected>
  426280:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  426283:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  426287:	74 1f                	je     4262a8 <luaE_resetthread+0xa1>
  426289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42628d:	48 8b 40 30          	mov    0x30(%rax),%rax
  426291:	48 8d 50 10          	lea    0x10(%rax),%rdx
  426295:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  426298:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42629c:	89 ce                	mov    %ecx,%esi
  42629e:	48 89 c7             	mov    %rax,%rdi
  4262a1:	e8 d0 ad fe ff       	callq  411076 <luaD_seterrorobj>
  4262a6:	eb 14                	jmp    4262bc <luaE_resetthread+0xb5>
  4262a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4262ac:	48 8b 40 30          	mov    0x30(%rax),%rax
  4262b0:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4262b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4262b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4262bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4262c0:	48 8b 40 10          	mov    0x10(%rax),%rax
  4262c4:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
  4262cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4262cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4262d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4262d7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4262db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4262df:	48 8b 40 30          	mov    0x30(%rax),%rax
  4262e3:	48 29 c2             	sub    %rax,%rdx
  4262e6:	48 89 d0             	mov    %rdx,%rax
  4262e9:	48 c1 f8 04          	sar    $0x4,%rax
  4262ed:	89 c1                	mov    %eax,%ecx
  4262ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4262f3:	ba 00 00 00 00       	mov    $0x0,%edx
  4262f8:	89 ce                	mov    %ecx,%esi
  4262fa:	48 89 c7             	mov    %rax,%rdi
  4262fd:	e8 f4 b1 fe ff       	callq  4114f6 <luaD_reallocstack>
  426302:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  426305:	c9                   	leaveq 
  426306:	c3                   	retq   

0000000000426307 <lua_closethread>:
  426307:	55                   	push   %rbp
  426308:	48 89 e5             	mov    %rsp,%rbp
  42630b:	48 83 ec 20          	sub    $0x20,%rsp
  42630f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426313:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  426317:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42631c:	74 0f                	je     42632d <lua_closethread+0x26>
  42631e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426322:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  426328:	0f b7 c0             	movzwl %ax,%eax
  42632b:	eb 05                	jmp    426332 <lua_closethread+0x2b>
  42632d:	b8 00 00 00 00       	mov    $0x0,%eax
  426332:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  426336:	89 82 b0 00 00 00    	mov    %eax,0xb0(%rdx)
  42633c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426340:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  426344:	0f b6 d0             	movzbl %al,%edx
  426347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42634b:	89 d6                	mov    %edx,%esi
  42634d:	48 89 c7             	mov    %rax,%rdi
  426350:	e8 b2 fe ff ff       	callq  426207 <luaE_resetthread>
  426355:	89 45 fc             	mov    %eax,-0x4(%rbp)
  426358:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42635b:	c9                   	leaveq 
  42635c:	c3                   	retq   

000000000042635d <lua_resetthread>:
  42635d:	55                   	push   %rbp
  42635e:	48 89 e5             	mov    %rsp,%rbp
  426361:	48 83 ec 10          	sub    $0x10,%rsp
  426365:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  426369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42636d:	be 00 00 00 00       	mov    $0x0,%esi
  426372:	48 89 c7             	mov    %rax,%rdi
  426375:	e8 8d ff ff ff       	callq  426307 <lua_closethread>
  42637a:	c9                   	leaveq 
  42637b:	c3                   	retq   

000000000042637c <lua_newstate>:
  42637c:	55                   	push   %rbp
  42637d:	48 89 e5             	mov    %rsp,%rbp
  426380:	48 83 ec 40          	sub    $0x40,%rsp
  426384:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  426388:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  42638c:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  426390:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426394:	b9 58 06 00 00       	mov    $0x658,%ecx
  426399:	ba 08 00 00 00       	mov    $0x8,%edx
  42639e:	be 00 00 00 00       	mov    $0x0,%esi
  4263a3:	ff d0                	callq  *%rax
  4263a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4263a9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4263ae:	75 0a                	jne    4263ba <lua_newstate+0x3e>
  4263b0:	b8 00 00 00 00       	mov    $0x0,%eax
  4263b5:	e9 47 03 00 00       	jmpq   426701 <lua_newstate+0x385>
  4263ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4263be:	48 83 c0 08          	add    $0x8,%rax
  4263c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4263c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4263ca:	48 05 d0 00 00 00    	add    $0xd0,%rax
  4263d0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4263d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4263d8:	c6 40 08 08          	movb   $0x8,0x8(%rax)
  4263dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4263e0:	c6 40 64 08          	movb   $0x8,0x64(%rax)
  4263e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4263e8:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  4263ec:	83 e0 18             	and    $0x18,%eax
  4263ef:	89 c2                	mov    %eax,%edx
  4263f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4263f5:	88 50 09             	mov    %dl,0x9(%rax)
  4263f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4263fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426400:	48 89 d6             	mov    %rdx,%rsi
  426403:	48 89 c7             	mov    %rax,%rdi
  426406:	e8 c9 fa ff ff       	callq  425ed4 <preinit_thread>
  42640b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42640f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426413:	48 89 50 70          	mov    %rdx,0x70(%rax)
  426417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42641b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  426422:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426426:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
  42642c:	8d 90 00 00 01 00    	lea    0x10000(%rax),%edx
  426432:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426436:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
  42643c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426440:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  426444:	48 89 10             	mov    %rdx,(%rax)
  426447:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42644b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42644f:	48 89 50 08          	mov    %rdx,0x8(%rax)
  426453:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426457:	48 c7 80 78 05 00 00 	movq   $0x0,0x578(%rax)
  42645e:	00 00 00 00 
  426462:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426466:	48 c7 80 80 05 00 00 	movq   $0x0,0x580(%rax)
  42646d:	00 00 00 00 
  426471:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426475:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  426479:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
  426480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426484:	48 89 c7             	mov    %rax,%rdi
  426487:	e8 03 f4 ff ff       	callq  42588f <luai_makeseed>
  42648c:	89 c2                	mov    %eax,%edx
  42648e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426492:	89 50 60             	mov    %edx,0x60(%rax)
  426495:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426499:	c6 40 6a 02          	movb   $0x2,0x6a(%rax)
  42649d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264a1:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
  4264a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264ac:	8b 50 38             	mov    0x38(%rax),%edx
  4264af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264b3:	89 50 3c             	mov    %edx,0x3c(%rax)
  4264b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264ba:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  4264c1:	00 
  4264c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264c6:	c6 40 48 00          	movb   $0x0,0x48(%rax)
  4264ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264ce:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
  4264d5:	00 00 00 00 
  4264d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264dd:	c6 40 65 08          	movb   $0x8,0x65(%rax)
  4264e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264e5:	c6 40 66 00          	movb   $0x0,0x66(%rax)
  4264e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264ed:	c6 40 67 00          	movb   $0x0,0x67(%rax)
  4264f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264f5:	c6 40 6b 00          	movb   $0x0,0x6b(%rax)
  4264f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4264fd:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
  426504:	00 00 00 00 
  426508:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42650c:	48 8b 90 b8 00 00 00 	mov    0xb8(%rax),%rdx
  426513:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426517:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
  42651e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426522:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  426529:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42652d:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
  426534:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426538:	48 c7 80 d0 00 00 00 	movq   $0x0,0xd0(%rax)
  42653f:	00 00 00 00 
  426543:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426547:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
  42654e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426552:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
  426559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42655d:	48 8b 90 c8 00 00 00 	mov    0xc8(%rax),%rdx
  426564:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426568:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
  42656f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426573:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx
  42657a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42657e:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
  426585:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426589:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)
  426590:	00 00 00 00 
  426594:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426598:	48 8b 90 f0 00 00 00 	mov    0xf0(%rax),%rdx
  42659f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265a3:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  4265aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265ae:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
  4265b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265b9:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  4265c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265c4:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
  4265cb:	00 
  4265cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265d0:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
  4265d7:	00 00 00 00 
  4265db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265df:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
  4265e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265ea:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
  4265f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4265f5:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
  4265fc:	00 00 00 00 
  426600:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426604:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
  42660b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42660f:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
  426616:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42661a:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
  426621:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426625:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
  42662c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426630:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
  426637:	00 00 00 00 
  42663b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42663f:	48 c7 40 10 58 06 00 	movq   $0x658,0x10(%rax)
  426646:	00 
  426647:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42664b:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  426652:	00 
  426653:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426657:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  42665e:	00 
  42665f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426663:	48 83 c0 50          	add    $0x50,%rax
  426667:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42666b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42666f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  426676:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42667a:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42667e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426682:	c6 40 6c 32          	movb   $0x32,0x6c(%rax)
  426686:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42668a:	c6 40 6d 19          	movb   $0x19,0x6d(%rax)
  42668e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426692:	c6 40 6e 0d          	movb   $0xd,0x6e(%rax)
  426696:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42669a:	c6 40 69 19          	movb   $0x19,0x69(%rax)
  42669e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4266a2:	c6 40 68 14          	movb   $0x14,0x68(%rax)
  4266a6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4266ad:	eb 1a                	jmp    4266c9 <lua_newstate+0x34d>
  4266af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4266b3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4266b6:	48 63 d2             	movslq %edx,%rdx
  4266b9:	48 83 c2 3c          	add    $0x3c,%rdx
  4266bd:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
  4266c4:	00 
  4266c5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4266c9:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
  4266cd:	7e e0                	jle    4266af <lua_newstate+0x333>
  4266cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4266d3:	ba 00 00 00 00       	mov    $0x0,%edx
  4266d8:	be 5b 5e 42 00       	mov    $0x425e5b,%esi
  4266dd:	48 89 c7             	mov    %rax,%rdi
  4266e0:	e8 97 ab fe ff       	callq  41127c <luaD_rawrunprotected>
  4266e5:	85 c0                	test   %eax,%eax
  4266e7:	74 14                	je     4266fd <lua_newstate+0x381>
  4266e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4266ed:	48 89 c7             	mov    %rax,%rdi
  4266f0:	e8 ba f8 ff ff       	callq  425faf <close_state>
  4266f5:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4266fc:	00 
  4266fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426701:	c9                   	leaveq 
  426702:	c3                   	retq   

0000000000426703 <lua_close>:
  426703:	55                   	push   %rbp
  426704:	48 89 e5             	mov    %rsp,%rbp
  426707:	48 83 ec 10          	sub    $0x10,%rsp
  42670b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42670f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426713:	48 8b 40 18          	mov    0x18(%rax),%rax
  426717:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  42671e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426726:	48 89 c7             	mov    %rax,%rdi
  426729:	e8 81 f8 ff ff       	callq  425faf <close_state>
  42672e:	90                   	nop
  42672f:	c9                   	leaveq 
  426730:	c3                   	retq   

0000000000426731 <luaE_warning>:
  426731:	55                   	push   %rbp
  426732:	48 89 e5             	mov    %rsp,%rbp
  426735:	48 83 ec 30          	sub    $0x30,%rsp
  426739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42673d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  426741:	89 55 dc             	mov    %edx,-0x24(%rbp)
  426744:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426748:	48 8b 40 18          	mov    0x18(%rax),%rax
  42674c:	48 8b 80 78 05 00 00 	mov    0x578(%rax),%rax
  426753:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426757:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42675c:	74 1f                	je     42677d <luaE_warning+0x4c>
  42675e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426762:	48 8b 40 18          	mov    0x18(%rax),%rax
  426766:	48 8b 88 80 05 00 00 	mov    0x580(%rax),%rcx
  42676d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  426770:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  426774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426778:	48 89 cf             	mov    %rcx,%rdi
  42677b:	ff d0                	callq  *%rax
  42677d:	90                   	nop
  42677e:	c9                   	leaveq 
  42677f:	c3                   	retq   

0000000000426780 <luaE_warnerror>:
  426780:	55                   	push   %rbp
  426781:	48 89 e5             	mov    %rsp,%rbp
  426784:	48 83 ec 20          	sub    $0x20,%rsp
  426788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42678c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  426790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426794:	48 8b 40 10          	mov    0x10(%rax),%rax
  426798:	48 83 e8 10          	sub    $0x10,%rax
  42679c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4267a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4267a4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4267a8:	0f b6 c0             	movzbl %al,%eax
  4267ab:	83 e0 0f             	and    $0xf,%eax
  4267ae:	83 f8 04             	cmp    $0x4,%eax
  4267b1:	75 0d                	jne    4267c0 <luaE_warnerror+0x40>
  4267b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4267b7:	48 8b 00             	mov    (%rax),%rax
  4267ba:	48 83 c0 18          	add    $0x18,%rax
  4267be:	eb 05                	jmp    4267c5 <luaE_warnerror+0x45>
  4267c0:	b8 d1 12 44 00       	mov    $0x4412d1,%eax
  4267c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4267c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4267cd:	ba 01 00 00 00       	mov    $0x1,%edx
  4267d2:	be ee 12 44 00       	mov    $0x4412ee,%esi
  4267d7:	48 89 c7             	mov    %rax,%rdi
  4267da:	e8 52 ff ff ff       	callq  426731 <luaE_warning>
  4267df:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4267e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4267e7:	ba 01 00 00 00       	mov    $0x1,%edx
  4267ec:	48 89 ce             	mov    %rcx,%rsi
  4267ef:	48 89 c7             	mov    %rax,%rdi
  4267f2:	e8 3a ff ff ff       	callq  426731 <luaE_warning>
  4267f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4267fb:	ba 01 00 00 00       	mov    $0x1,%edx
  426800:	be f8 12 44 00       	mov    $0x4412f8,%esi
  426805:	48 89 c7             	mov    %rax,%rdi
  426808:	e8 24 ff ff ff       	callq  426731 <luaE_warning>
  42680d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  426811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426815:	ba 01 00 00 00       	mov    $0x1,%edx
  42681a:	48 89 ce             	mov    %rcx,%rsi
  42681d:	48 89 c7             	mov    %rax,%rdi
  426820:	e8 0c ff ff ff       	callq  426731 <luaE_warning>
  426825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426829:	ba 00 00 00 00       	mov    $0x0,%edx
  42682e:	be fb 12 44 00       	mov    $0x4412fb,%esi
  426833:	48 89 c7             	mov    %rax,%rdi
  426836:	e8 f6 fe ff ff       	callq  426731 <luaE_warning>
  42683b:	90                   	nop
  42683c:	c9                   	leaveq 
  42683d:	c3                   	retq   

000000000042683e <luaS_eqlngstr>:
  42683e:	55                   	push   %rbp
  42683f:	48 89 e5             	mov    %rsp,%rbp
  426842:	48 83 ec 20          	sub    $0x20,%rsp
  426846:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42684a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42684e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426852:	48 8b 40 10          	mov    0x10(%rax),%rax
  426856:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42685a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42685e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  426862:	74 31                	je     426895 <luaS_eqlngstr+0x57>
  426864:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426868:	48 8b 40 10          	mov    0x10(%rax),%rax
  42686c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  426870:	75 2a                	jne    42689c <luaS_eqlngstr+0x5e>
  426872:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426876:	48 8d 70 18          	lea    0x18(%rax),%rsi
  42687a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42687e:	48 8d 48 18          	lea    0x18(%rax),%rcx
  426882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426886:	48 89 c2             	mov    %rax,%rdx
  426889:	48 89 cf             	mov    %rcx,%rdi
  42688c:	e8 ef ae fd ff       	callq  401780 <memcmp@plt>
  426891:	85 c0                	test   %eax,%eax
  426893:	75 07                	jne    42689c <luaS_eqlngstr+0x5e>
  426895:	b8 01 00 00 00       	mov    $0x1,%eax
  42689a:	eb 05                	jmp    4268a1 <luaS_eqlngstr+0x63>
  42689c:	b8 00 00 00 00       	mov    $0x0,%eax
  4268a1:	c9                   	leaveq 
  4268a2:	c3                   	retq   

00000000004268a3 <luaS_hash>:
  4268a3:	55                   	push   %rbp
  4268a4:	48 89 e5             	mov    %rsp,%rbp
  4268a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4268ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4268af:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4268b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4268b6:	33 45 dc             	xor    -0x24(%rbp),%eax
  4268b9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4268bc:	eb 2f                	jmp    4268ed <luaS_hash+0x4a>
  4268be:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4268c1:	c1 e0 05             	shl    $0x5,%eax
  4268c4:	89 c2                	mov    %eax,%edx
  4268c6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4268c9:	c1 e8 02             	shr    $0x2,%eax
  4268cc:	01 c2                	add    %eax,%edx
  4268ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4268d2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  4268d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4268da:	48 01 c8             	add    %rcx,%rax
  4268dd:	0f b6 00             	movzbl (%rax),%eax
  4268e0:	0f b6 c0             	movzbl %al,%eax
  4268e3:	01 d0                	add    %edx,%eax
  4268e5:	31 45 fc             	xor    %eax,-0x4(%rbp)
  4268e8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4268ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4268f2:	75 ca                	jne    4268be <luaS_hash+0x1b>
  4268f4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4268f7:	5d                   	pop    %rbp
  4268f8:	c3                   	retq   

00000000004268f9 <luaS_hashlongstr>:
  4268f9:	55                   	push   %rbp
  4268fa:	48 89 e5             	mov    %rsp,%rbp
  4268fd:	48 83 ec 18          	sub    $0x18,%rsp
  426901:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426905:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426909:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42690d:	84 c0                	test   %al,%al
  42690f:	75 3b                	jne    42694c <luaS_hashlongstr+0x53>
  426911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426915:	48 8b 40 10          	mov    0x10(%rax),%rax
  426919:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42691d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426921:	8b 50 0c             	mov    0xc(%rax),%edx
  426924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426928:	48 8d 48 18          	lea    0x18(%rax),%rcx
  42692c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426930:	48 89 c6             	mov    %rax,%rsi
  426933:	48 89 cf             	mov    %rcx,%rdi
  426936:	e8 68 ff ff ff       	callq  4268a3 <luaS_hash>
  42693b:	89 c2                	mov    %eax,%edx
  42693d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426941:	89 50 0c             	mov    %edx,0xc(%rax)
  426944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426948:	c6 40 0a 01          	movb   $0x1,0xa(%rax)
  42694c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426950:	8b 40 0c             	mov    0xc(%rax),%eax
  426953:	c9                   	leaveq 
  426954:	c3                   	retq   

0000000000426955 <tablerehash>:
  426955:	55                   	push   %rbp
  426956:	48 89 e5             	mov    %rsp,%rbp
  426959:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42695d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  426960:	89 55 d0             	mov    %edx,-0x30(%rbp)
  426963:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  426966:	89 45 fc             	mov    %eax,-0x4(%rbp)
  426969:	eb 1f                	jmp    42698a <tablerehash+0x35>
  42696b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42696e:	48 98                	cltq   
  426970:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  426977:	00 
  426978:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42697c:	48 01 d0             	add    %rdx,%rax
  42697f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  426986:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42698a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42698d:	3b 45 d0             	cmp    -0x30(%rbp),%eax
  426990:	7c d9                	jl     42696b <tablerehash+0x16>
  426992:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  426999:	e9 9f 00 00 00       	jmpq   426a3d <tablerehash+0xe8>
  42699e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4269a1:	48 98                	cltq   
  4269a3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4269aa:	00 
  4269ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4269af:	48 01 d0             	add    %rdx,%rax
  4269b2:	48 8b 00             	mov    (%rax),%rax
  4269b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4269b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4269bc:	48 98                	cltq   
  4269be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4269c5:	00 
  4269c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4269ca:	48 01 d0             	add    %rdx,%rax
  4269cd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4269d4:	eb 5c                	jmp    426a32 <tablerehash+0xdd>
  4269d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4269da:	48 8b 40 10          	mov    0x10(%rax),%rax
  4269de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4269e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4269e6:	8b 40 0c             	mov    0xc(%rax),%eax
  4269e9:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4269ec:	83 ea 01             	sub    $0x1,%edx
  4269ef:	21 d0                	and    %edx,%eax
  4269f1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4269f4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4269f7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4269fe:	00 
  4269ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426a03:	48 01 d0             	add    %rdx,%rax
  426a06:	48 8b 10             	mov    (%rax),%rdx
  426a09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426a0d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  426a11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  426a14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  426a1b:	00 
  426a1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426a20:	48 01 c2             	add    %rax,%rdx
  426a23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426a27:	48 89 02             	mov    %rax,(%rdx)
  426a2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426a2e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426a32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  426a37:	75 9d                	jne    4269d6 <tablerehash+0x81>
  426a39:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  426a3d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  426a40:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  426a43:	0f 8c 55 ff ff ff    	jl     42699e <tablerehash+0x49>
  426a49:	90                   	nop
  426a4a:	5d                   	pop    %rbp
  426a4b:	c3                   	retq   

0000000000426a4c <luaS_resize>:
  426a4c:	55                   	push   %rbp
  426a4d:	48 89 e5             	mov    %rsp,%rbp
  426a50:	48 83 ec 30          	sub    $0x30,%rsp
  426a54:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  426a58:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  426a5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426a5f:	48 8b 40 18          	mov    0x18(%rax),%rax
  426a63:	48 83 c0 30          	add    $0x30,%rax
  426a67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426a6f:	8b 40 0c             	mov    0xc(%rax),%eax
  426a72:	89 45 f4             	mov    %eax,-0xc(%rbp)
  426a75:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  426a78:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  426a7b:	7d 17                	jge    426a94 <luaS_resize+0x48>
  426a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426a81:	48 8b 00             	mov    (%rax),%rax
  426a84:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  426a87:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  426a8a:	89 ce                	mov    %ecx,%esi
  426a8c:	48 89 c7             	mov    %rax,%rdi
  426a8f:	e8 c1 fe ff ff       	callq  426955 <tablerehash>
  426a94:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  426a97:	48 98                	cltq   
  426a99:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  426aa0:	00 
  426aa1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  426aa4:	48 98                	cltq   
  426aa6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  426aad:	00 
  426aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426ab2:	48 8b 30             	mov    (%rax),%rsi
  426ab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426ab9:	48 89 c7             	mov    %rax,%rdi
  426abc:	e8 8f 66 ff ff       	callq  41d150 <luaM_realloc_>
  426ac1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  426ac5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  426aca:	0f 94 c0             	sete   %al
  426acd:	0f b6 c0             	movzbl %al,%eax
  426ad0:	48 85 c0             	test   %rax,%rax
  426ad3:	74 21                	je     426af6 <luaS_resize+0xaa>
  426ad5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  426ad8:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  426adb:	7d 4a                	jge    426b27 <luaS_resize+0xdb>
  426add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426ae1:	48 8b 00             	mov    (%rax),%rax
  426ae4:	8b 55 f4             	mov    -0xc(%rbp),%edx
  426ae7:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  426aea:	89 ce                	mov    %ecx,%esi
  426aec:	48 89 c7             	mov    %rax,%rdi
  426aef:	e8 61 fe ff ff       	callq  426955 <tablerehash>
  426af4:	eb 31                	jmp    426b27 <luaS_resize+0xdb>
  426af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426afa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  426afe:	48 89 10             	mov    %rdx,(%rax)
  426b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426b05:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  426b08:	89 50 0c             	mov    %edx,0xc(%rax)
  426b0b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  426b0e:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  426b11:	7e 14                	jle    426b27 <luaS_resize+0xdb>
  426b13:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  426b16:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  426b19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426b1d:	89 ce                	mov    %ecx,%esi
  426b1f:	48 89 c7             	mov    %rax,%rdi
  426b22:	e8 2e fe ff ff       	callq  426955 <tablerehash>
  426b27:	90                   	nop
  426b28:	c9                   	leaveq 
  426b29:	c3                   	retq   

0000000000426b2a <luaS_clearcache>:
  426b2a:	55                   	push   %rbp
  426b2b:	48 89 e5             	mov    %rsp,%rbp
  426b2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426b32:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  426b39:	eb 6e                	jmp    426ba9 <luaS_clearcache+0x7f>
  426b3b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  426b42:	eb 5b                	jmp    426b9f <luaS_clearcache+0x75>
  426b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426b48:	8b 55 f8             	mov    -0x8(%rbp),%edx
  426b4b:	48 63 d2             	movslq %edx,%rdx
  426b4e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  426b51:	48 63 c9             	movslq %ecx,%rcx
  426b54:	48 01 c9             	add    %rcx,%rcx
  426b57:	48 01 ca             	add    %rcx,%rdx
  426b5a:	48 83 c2 44          	add    $0x44,%rdx
  426b5e:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
  426b63:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  426b67:	0f b6 c0             	movzbl %al,%eax
  426b6a:	83 e0 18             	and    $0x18,%eax
  426b6d:	85 c0                	test   %eax,%eax
  426b6f:	74 2a                	je     426b9b <luaS_clearcache+0x71>
  426b71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426b75:	48 8b 90 10 01 00 00 	mov    0x110(%rax),%rdx
  426b7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426b80:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  426b83:	48 63 c9             	movslq %ecx,%rcx
  426b86:	8b 75 fc             	mov    -0x4(%rbp),%esi
  426b89:	48 63 f6             	movslq %esi,%rsi
  426b8c:	48 01 f6             	add    %rsi,%rsi
  426b8f:	48 01 f1             	add    %rsi,%rcx
  426b92:	48 83 c1 44          	add    $0x44,%rcx
  426b96:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
  426b9b:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  426b9f:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  426ba3:	7e 9f                	jle    426b44 <luaS_clearcache+0x1a>
  426ba5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  426ba9:	83 7d fc 34          	cmpl   $0x34,-0x4(%rbp)
  426bad:	7e 8c                	jle    426b3b <luaS_clearcache+0x11>
  426baf:	90                   	nop
  426bb0:	5d                   	pop    %rbp
  426bb1:	c3                   	retq   

0000000000426bb2 <luaS_init>:
  426bb2:	55                   	push   %rbp
  426bb3:	48 89 e5             	mov    %rsp,%rbp
  426bb6:	48 83 ec 30          	sub    $0x30,%rsp
  426bba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  426bbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426bc2:	48 8b 40 18          	mov    0x18(%rax),%rax
  426bc6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426bca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426bce:	48 8b 40 18          	mov    0x18(%rax),%rax
  426bd2:	48 83 c0 30          	add    $0x30,%rax
  426bd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  426bda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426bde:	ba 00 00 00 00       	mov    $0x0,%edx
  426be3:	be 00 04 00 00       	mov    $0x400,%esi
  426be8:	48 89 c7             	mov    %rax,%rdi
  426beb:	e8 8f 66 ff ff       	callq  41d27f <luaM_malloc_>
  426bf0:	48 89 c2             	mov    %rax,%rdx
  426bf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426bf7:	48 89 10             	mov    %rdx,(%rax)
  426bfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426bfe:	48 8b 00             	mov    (%rax),%rax
  426c01:	ba 80 00 00 00       	mov    $0x80,%edx
  426c06:	be 00 00 00 00       	mov    $0x0,%esi
  426c0b:	48 89 c7             	mov    %rax,%rdi
  426c0e:	e8 42 fd ff ff       	callq  426955 <tablerehash>
  426c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426c17:	c7 40 0c 80 00 00 00 	movl   $0x80,0xc(%rax)
  426c1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426c22:	ba 11 00 00 00       	mov    $0x11,%edx
  426c27:	be fd 12 44 00       	mov    $0x4412fd,%esi
  426c2c:	48 89 c7             	mov    %rax,%rdi
  426c2f:	e8 e7 03 00 00       	callq  42701b <luaS_newlstr>
  426c34:	48 89 c2             	mov    %rax,%rdx
  426c37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c3b:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
  426c42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c46:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  426c4d:	48 89 c2             	mov    %rax,%rdx
  426c50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426c54:	48 89 d6             	mov    %rdx,%rsi
  426c57:	48 89 c7             	mov    %rax,%rdi
  426c5a:	e8 2f df fe ff       	callq  414b8e <luaC_fix>
  426c5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  426c66:	eb 41                	jmp    426ca9 <luaS_init+0xf7>
  426c68:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  426c6f:	eb 2e                	jmp    426c9f <luaS_init+0xed>
  426c71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c75:	48 8b 90 10 01 00 00 	mov    0x110(%rax),%rdx
  426c7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c80:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  426c83:	48 63 c9             	movslq %ecx,%rcx
  426c86:	8b 75 fc             	mov    -0x4(%rbp),%esi
  426c89:	48 63 f6             	movslq %esi,%rsi
  426c8c:	48 01 f6             	add    %rsi,%rsi
  426c8f:	48 01 f1             	add    %rsi,%rcx
  426c92:	48 83 c1 44          	add    $0x44,%rcx
  426c96:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
  426c9b:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  426c9f:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  426ca3:	7e cc                	jle    426c71 <luaS_init+0xbf>
  426ca5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  426ca9:	83 7d fc 34          	cmpl   $0x34,-0x4(%rbp)
  426cad:	7e b9                	jle    426c68 <luaS_init+0xb6>
  426caf:	90                   	nop
  426cb0:	c9                   	leaveq 
  426cb1:	c3                   	retq   

0000000000426cb2 <createstrobj>:
  426cb2:	55                   	push   %rbp
  426cb3:	48 89 e5             	mov    %rsp,%rbp
  426cb6:	48 83 ec 40          	sub    $0x40,%rsp
  426cba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  426cbe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  426cc2:	89 55 cc             	mov    %edx,-0x34(%rbp)
  426cc5:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  426cc8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426ccc:	48 83 c0 19          	add    $0x19,%rax
  426cd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426cd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  426cd8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  426cdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426cdf:	89 ce                	mov    %ecx,%esi
  426ce1:	48 89 c7             	mov    %rax,%rdi
  426ce4:	e8 ad df fe ff       	callq  414c96 <luaC_newobj>
  426ce9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426ced:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426cf1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  426cf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426cf9:	8b 55 c8             	mov    -0x38(%rbp),%edx
  426cfc:	89 50 0c             	mov    %edx,0xc(%rax)
  426cff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426d03:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  426d07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  426d0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426d0f:	48 01 d0             	add    %rdx,%rax
  426d12:	48 83 c0 18          	add    $0x18,%rax
  426d16:	c6 00 00             	movb   $0x0,(%rax)
  426d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426d1d:	c9                   	leaveq 
  426d1e:	c3                   	retq   

0000000000426d1f <luaS_createlngstrobj>:
  426d1f:	55                   	push   %rbp
  426d20:	48 89 e5             	mov    %rsp,%rbp
  426d23:	48 83 ec 20          	sub    $0x20,%rsp
  426d27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426d2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  426d2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426d33:	48 8b 40 18          	mov    0x18(%rax),%rax
  426d37:	8b 50 60             	mov    0x60(%rax),%edx
  426d3a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  426d3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426d42:	89 d1                	mov    %edx,%ecx
  426d44:	ba 14 00 00 00       	mov    $0x14,%edx
  426d49:	48 89 c7             	mov    %rax,%rdi
  426d4c:	e8 61 ff ff ff       	callq  426cb2 <createstrobj>
  426d51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426d59:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d5d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  426d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426d65:	c9                   	leaveq 
  426d66:	c3                   	retq   

0000000000426d67 <luaS_remove>:
  426d67:	55                   	push   %rbp
  426d68:	48 89 e5             	mov    %rsp,%rbp
  426d6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  426d6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  426d73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426d77:	48 8b 40 18          	mov    0x18(%rax),%rax
  426d7b:	48 83 c0 30          	add    $0x30,%rax
  426d7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426d83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426d87:	48 8b 10             	mov    (%rax),%rdx
  426d8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426d8e:	8b 48 0c             	mov    0xc(%rax),%ecx
  426d91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426d95:	8b 40 0c             	mov    0xc(%rax),%eax
  426d98:	83 e8 01             	sub    $0x1,%eax
  426d9b:	21 c8                	and    %ecx,%eax
  426d9d:	48 98                	cltq   
  426d9f:	48 c1 e0 03          	shl    $0x3,%rax
  426da3:	48 01 d0             	add    %rdx,%rax
  426da6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426daa:	eb 0f                	jmp    426dbb <luaS_remove+0x54>
  426dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426db0:	48 8b 00             	mov    (%rax),%rax
  426db3:	48 83 c0 10          	add    $0x10,%rax
  426db7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426dbf:	48 8b 00             	mov    (%rax),%rax
  426dc2:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  426dc6:	75 e4                	jne    426dac <luaS_remove+0x45>
  426dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426dcc:	48 8b 00             	mov    (%rax),%rax
  426dcf:	48 8b 50 10          	mov    0x10(%rax),%rdx
  426dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426dd7:	48 89 10             	mov    %rdx,(%rax)
  426dda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426dde:	8b 40 08             	mov    0x8(%rax),%eax
  426de1:	8d 50 ff             	lea    -0x1(%rax),%edx
  426de4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426de8:	89 50 08             	mov    %edx,0x8(%rax)
  426deb:	90                   	nop
  426dec:	5d                   	pop    %rbp
  426ded:	c3                   	retq   

0000000000426dee <growstrtab>:
  426dee:	55                   	push   %rbp
  426def:	48 89 e5             	mov    %rsp,%rbp
  426df2:	48 83 ec 10          	sub    $0x10,%rsp
  426df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  426dfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  426dfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426e02:	8b 40 08             	mov    0x8(%rax),%eax
  426e05:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
  426e0a:	0f 94 c0             	sete   %al
  426e0d:	0f b6 c0             	movzbl %al,%eax
  426e10:	48 85 c0             	test   %rax,%rax
  426e13:	74 30                	je     426e45 <growstrtab+0x57>
  426e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426e19:	be 01 00 00 00       	mov    $0x1,%esi
  426e1e:	48 89 c7             	mov    %rax,%rdi
  426e21:	e8 19 16 ff ff       	callq  41843f <luaC_fullgc>
  426e26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426e2a:	8b 40 08             	mov    0x8(%rax),%eax
  426e2d:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
  426e32:	75 11                	jne    426e45 <growstrtab+0x57>
  426e34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426e38:	be 04 00 00 00       	mov    $0x4,%esi
  426e3d:	48 89 c7             	mov    %rax,%rdi
  426e40:	e8 34 a3 fe ff       	callq  411179 <luaD_throw>
  426e45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426e49:	8b 40 0c             	mov    0xc(%rax),%eax
  426e4c:	3d ff ff ff 3f       	cmp    $0x3fffffff,%eax
  426e51:	7f 18                	jg     426e6b <growstrtab+0x7d>
  426e53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426e57:	8b 40 0c             	mov    0xc(%rax),%eax
  426e5a:	8d 14 00             	lea    (%rax,%rax,1),%edx
  426e5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426e61:	89 d6                	mov    %edx,%esi
  426e63:	48 89 c7             	mov    %rax,%rdi
  426e66:	e8 e1 fb ff ff       	callq  426a4c <luaS_resize>
  426e6b:	90                   	nop
  426e6c:	c9                   	leaveq 
  426e6d:	c3                   	retq   

0000000000426e6e <internshrstr>:
  426e6e:	55                   	push   %rbp
  426e6f:	48 89 e5             	mov    %rsp,%rbp
  426e72:	48 83 ec 50          	sub    $0x50,%rsp
  426e76:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  426e7a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  426e7e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  426e82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426e86:	48 8b 40 18          	mov    0x18(%rax),%rax
  426e8a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  426e8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426e92:	48 83 c0 30          	add    $0x30,%rax
  426e96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  426e9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426e9e:	8b 50 60             	mov    0x60(%rax),%edx
  426ea1:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  426ea5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  426ea9:	48 89 ce             	mov    %rcx,%rsi
  426eac:	48 89 c7             	mov    %rax,%rdi
  426eaf:	e8 ef f9 ff ff       	callq  4268a3 <luaS_hash>
  426eb4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  426eb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426ebb:	48 8b 10             	mov    (%rax),%rdx
  426ebe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426ec2:	8b 40 0c             	mov    0xc(%rax),%eax
  426ec5:	83 e8 01             	sub    $0x1,%eax
  426ec8:	23 45 dc             	and    -0x24(%rbp),%eax
  426ecb:	48 98                	cltq   
  426ecd:	48 c1 e0 03          	shl    $0x3,%rax
  426ed1:	48 01 d0             	add    %rdx,%rax
  426ed4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426ed8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426edc:	48 8b 00             	mov    (%rax),%rax
  426edf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426ee3:	eb 72                	jmp    426f57 <internshrstr+0xe9>
  426ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426ee9:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  426eed:	0f b6 c0             	movzbl %al,%eax
  426ef0:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
  426ef4:	75 55                	jne    426f4b <internshrstr+0xdd>
  426ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426efa:	48 8d 48 18          	lea    0x18(%rax),%rcx
  426efe:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  426f02:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  426f06:	48 89 ce             	mov    %rcx,%rsi
  426f09:	48 89 c7             	mov    %rax,%rdi
  426f0c:	e8 6f a8 fd ff       	callq  401780 <memcmp@plt>
  426f11:	85 c0                	test   %eax,%eax
  426f13:	75 36                	jne    426f4b <internshrstr+0xdd>
  426f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426f19:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  426f1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426f21:	0f b6 40 64          	movzbl 0x64(%rax),%eax
  426f25:	83 f0 18             	xor    $0x18,%eax
  426f28:	21 d0                	and    %edx,%eax
  426f2a:	84 c0                	test   %al,%al
  426f2c:	74 14                	je     426f42 <internshrstr+0xd4>
  426f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426f32:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  426f36:	83 f0 18             	xor    $0x18,%eax
  426f39:	89 c2                	mov    %eax,%edx
  426f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426f3f:	88 50 09             	mov    %dl,0x9(%rax)
  426f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426f46:	e9 ce 00 00 00       	jmpq   427019 <internshrstr+0x1ab>
  426f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426f4f:	48 8b 40 10          	mov    0x10(%rax),%rax
  426f53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426f57:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  426f5c:	75 87                	jne    426ee5 <internshrstr+0x77>
  426f5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426f62:	8b 50 08             	mov    0x8(%rax),%edx
  426f65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426f69:	8b 40 0c             	mov    0xc(%rax),%eax
  426f6c:	39 c2                	cmp    %eax,%edx
  426f6e:	7c 34                	jl     426fa4 <internshrstr+0x136>
  426f70:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426f74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426f78:	48 89 d6             	mov    %rdx,%rsi
  426f7b:	48 89 c7             	mov    %rax,%rdi
  426f7e:	e8 6b fe ff ff       	callq  426dee <growstrtab>
  426f83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426f87:	48 8b 10             	mov    (%rax),%rdx
  426f8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426f8e:	8b 40 0c             	mov    0xc(%rax),%eax
  426f91:	83 e8 01             	sub    $0x1,%eax
  426f94:	23 45 dc             	and    -0x24(%rbp),%eax
  426f97:	48 98                	cltq   
  426f99:	48 c1 e0 03          	shl    $0x3,%rax
  426f9d:	48 01 d0             	add    %rdx,%rax
  426fa0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426fa4:	8b 55 dc             	mov    -0x24(%rbp),%edx
  426fa7:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  426fab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  426faf:	89 d1                	mov    %edx,%ecx
  426fb1:	ba 04 00 00 00       	mov    $0x4,%edx
  426fb6:	48 89 c7             	mov    %rax,%rdi
  426fb9:	e8 f4 fc ff ff       	callq  426cb2 <createstrobj>
  426fbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  426fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426fc6:	48 8d 48 18          	lea    0x18(%rax),%rcx
  426fca:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  426fce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  426fd2:	48 89 c6             	mov    %rax,%rsi
  426fd5:	48 89 cf             	mov    %rcx,%rdi
  426fd8:	e8 83 a8 fd ff       	callq  401860 <memcpy@plt>
  426fdd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  426fe1:	89 c2                	mov    %eax,%edx
  426fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426fe7:	88 50 0b             	mov    %dl,0xb(%rax)
  426fea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426fee:	48 8b 10             	mov    (%rax),%rdx
  426ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  426ff5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  426ff9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426ffd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  427001:	48 89 10             	mov    %rdx,(%rax)
  427004:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427008:	8b 40 08             	mov    0x8(%rax),%eax
  42700b:	8d 50 01             	lea    0x1(%rax),%edx
  42700e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427012:	89 50 08             	mov    %edx,0x8(%rax)
  427015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427019:	c9                   	leaveq 
  42701a:	c3                   	retq   

000000000042701b <luaS_newlstr>:
  42701b:	55                   	push   %rbp
  42701c:	48 89 e5             	mov    %rsp,%rbp
  42701f:	48 83 ec 30          	sub    $0x30,%rsp
  427023:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427027:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42702b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42702f:	48 83 7d d8 28       	cmpq   $0x28,-0x28(%rbp)
  427034:	77 19                	ja     42704f <luaS_newlstr+0x34>
  427036:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42703a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42703e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427042:	48 89 ce             	mov    %rcx,%rsi
  427045:	48 89 c7             	mov    %rax,%rdi
  427048:	e8 21 fe ff ff       	callq  426e6e <internshrstr>
  42704d:	eb 5b                	jmp    4270aa <luaS_newlstr+0x8f>
  42704f:	48 b8 de ff ff ff ff 	movabs $0x7fffffffffffffde,%rax
  427056:	ff ff 7f 
  427059:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  42705d:	0f 97 c0             	seta   %al
  427060:	0f b6 c0             	movzbl %al,%eax
  427063:	48 85 c0             	test   %rax,%rax
  427066:	74 0c                	je     427074 <luaS_newlstr+0x59>
  427068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42706c:	48 89 c7             	mov    %rax,%rdi
  42706f:	e8 e9 5f ff ff       	callq  41d05d <luaM_toobig>
  427074:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  427078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42707c:	48 89 d6             	mov    %rdx,%rsi
  42707f:	48 89 c7             	mov    %rax,%rdi
  427082:	e8 98 fc ff ff       	callq  426d1f <luaS_createlngstrobj>
  427087:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42708b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42708f:	48 8d 48 18          	lea    0x18(%rax),%rcx
  427093:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  427097:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42709b:	48 89 c6             	mov    %rax,%rsi
  42709e:	48 89 cf             	mov    %rcx,%rdi
  4270a1:	e8 ba a7 fd ff       	callq  401860 <memcpy@plt>
  4270a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4270aa:	c9                   	leaveq 
  4270ab:	c3                   	retq   

00000000004270ac <luaS_new>:
  4270ac:	55                   	push   %rbp
  4270ad:	48 89 e5             	mov    %rsp,%rbp
  4270b0:	48 83 ec 20          	sub    $0x20,%rsp
  4270b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4270b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4270bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4270c0:	89 c1                	mov    %eax,%ecx
  4270c2:	ba b3 cf 21 35       	mov    $0x3521cfb3,%edx
  4270c7:	89 c8                	mov    %ecx,%eax
  4270c9:	f7 e2                	mul    %edx
  4270cb:	89 c8                	mov    %ecx,%eax
  4270cd:	29 d0                	sub    %edx,%eax
  4270cf:	d1 e8                	shr    %eax
  4270d1:	01 d0                	add    %edx,%eax
  4270d3:	c1 e8 05             	shr    $0x5,%eax
  4270d6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4270d9:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4270dc:	6b c0 35             	imul   $0x35,%eax,%eax
  4270df:	29 c1                	sub    %eax,%ecx
  4270e1:	89 c8                	mov    %ecx,%eax
  4270e3:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4270e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4270ea:	48 8b 40 18          	mov    0x18(%rax),%rax
  4270ee:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4270f1:	48 83 c2 22          	add    $0x22,%rdx
  4270f5:	48 c1 e2 04          	shl    $0x4,%rdx
  4270f9:	48 01 d0             	add    %rdx,%rax
  4270fc:	48 83 c0 08          	add    $0x8,%rax
  427100:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  427104:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42710b:	eb 4b                	jmp    427158 <luaS_new+0xac>
  42710d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427110:	48 98                	cltq   
  427112:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  427119:	00 
  42711a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42711e:	48 01 d0             	add    %rdx,%rax
  427121:	48 8b 00             	mov    (%rax),%rax
  427124:	48 8d 50 18          	lea    0x18(%rax),%rdx
  427128:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42712c:	48 89 d6             	mov    %rdx,%rsi
  42712f:	48 89 c7             	mov    %rax,%rdi
  427132:	e8 89 a8 fd ff       	callq  4019c0 <strcmp@plt>
  427137:	85 c0                	test   %eax,%eax
  427139:	75 19                	jne    427154 <luaS_new+0xa8>
  42713b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42713e:	48 98                	cltq   
  427140:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  427147:	00 
  427148:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42714c:	48 01 d0             	add    %rdx,%rax
  42714f:	48 8b 00             	mov    (%rax),%rax
  427152:	eb 7f                	jmp    4271d3 <luaS_new+0x127>
  427154:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  427158:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  42715c:	7e af                	jle    42710d <luaS_new+0x61>
  42715e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  427165:	eb 33                	jmp    42719a <luaS_new+0xee>
  427167:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42716a:	48 98                	cltq   
  42716c:	48 c1 e0 03          	shl    $0x3,%rax
  427170:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  427174:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427178:	48 01 d0             	add    %rdx,%rax
  42717b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42717e:	48 63 d2             	movslq %edx,%rdx
  427181:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
  427188:	00 
  427189:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42718d:	48 01 ca             	add    %rcx,%rdx
  427190:	48 8b 00             	mov    (%rax),%rax
  427193:	48 89 02             	mov    %rax,(%rdx)
  427196:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  42719a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42719e:	7f c7                	jg     427167 <luaS_new+0xbb>
  4271a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4271a4:	48 89 c7             	mov    %rax,%rdi
  4271a7:	e8 c4 a5 fd ff       	callq  401770 <strlen@plt>
  4271ac:	48 89 c2             	mov    %rax,%rdx
  4271af:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4271b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4271b7:	48 89 ce             	mov    %rcx,%rsi
  4271ba:	48 89 c7             	mov    %rax,%rdi
  4271bd:	e8 59 fe ff ff       	callq  42701b <luaS_newlstr>
  4271c2:	48 89 c2             	mov    %rax,%rdx
  4271c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4271c9:	48 89 10             	mov    %rdx,(%rax)
  4271cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4271d0:	48 8b 00             	mov    (%rax),%rax
  4271d3:	c9                   	leaveq 
  4271d4:	c3                   	retq   

00000000004271d5 <luaS_newudata>:
  4271d5:	55                   	push   %rbp
  4271d6:	48 89 e5             	mov    %rsp,%rbp
  4271d9:	48 83 ec 40          	sub    $0x40,%rsp
  4271dd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4271e1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4271e5:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4271e8:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  4271ec:	74 1b                	je     427209 <luaS_newudata+0x34>
  4271ee:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4271f1:	48 98                	cltq   
  4271f3:	48 c1 e0 04          	shl    $0x4,%rax
  4271f7:	48 ba d7 ff ff ff ff 	movabs $0x7fffffffffffffd7,%rdx
  4271fe:	ff ff 7f 
  427201:	48 29 c2             	sub    %rax,%rdx
  427204:	48 89 d0             	mov    %rdx,%rax
  427207:	eb 0a                	jmp    427213 <luaS_newudata+0x3e>
  427209:	48 b8 df ff ff ff ff 	movabs $0x7fffffffffffffdf,%rax
  427210:	ff ff 7f 
  427213:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  427217:	0f 92 c0             	setb   %al
  42721a:	0f b6 c0             	movzbl %al,%eax
  42721d:	48 85 c0             	test   %rax,%rax
  427220:	74 0c                	je     42722e <luaS_newudata+0x59>
  427222:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  427226:	48 89 c7             	mov    %rax,%rdi
  427229:	e8 2f 5e ff ff       	callq  41d05d <luaM_toobig>
  42722e:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  427232:	74 0f                	je     427243 <luaS_newudata+0x6e>
  427234:	8b 45 cc             	mov    -0x34(%rbp),%eax
  427237:	48 98                	cltq   
  427239:	48 c1 e0 04          	shl    $0x4,%rax
  42723d:	48 8d 50 28          	lea    0x28(%rax),%rdx
  427241:	eb 05                	jmp    427248 <luaS_newudata+0x73>
  427243:	ba 20 00 00 00       	mov    $0x20,%edx
  427248:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42724c:	48 01 c2             	add    %rax,%rdx
  42724f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  427253:	be 07 00 00 00       	mov    $0x7,%esi
  427258:	48 89 c7             	mov    %rax,%rdi
  42725b:	e8 36 da fe ff       	callq  414c96 <luaC_newobj>
  427260:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  427264:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427268:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42726c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427270:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427274:	48 89 50 10          	mov    %rdx,0x10(%rax)
  427278:	8b 45 cc             	mov    -0x34(%rbp),%eax
  42727b:	89 c2                	mov    %eax,%edx
  42727d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427281:	66 89 50 0a          	mov    %dx,0xa(%rax)
  427285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427289:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  427290:	00 
  427291:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  427298:	eb 20                	jmp    4272ba <luaS_newudata+0xe5>
  42729a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42729e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4272a1:	48 63 d2             	movslq %edx,%rdx
  4272a4:	48 83 c2 02          	add    $0x2,%rdx
  4272a8:	48 c1 e2 04          	shl    $0x4,%rdx
  4272ac:	48 01 d0             	add    %rdx,%rax
  4272af:	48 83 c0 10          	add    $0x10,%rax
  4272b3:	c6 00 00             	movb   $0x0,(%rax)
  4272b6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4272ba:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4272bd:	3b 45 cc             	cmp    -0x34(%rbp),%eax
  4272c0:	7c d8                	jl     42729a <luaS_newudata+0xc5>
  4272c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4272c6:	c9                   	leaveq 
  4272c7:	c3                   	retq   

00000000004272c8 <str_len>:
  4272c8:	55                   	push   %rbp
  4272c9:	48 89 e5             	mov    %rsp,%rbp
  4272cc:	48 83 ec 20          	sub    $0x20,%rsp
  4272d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4272d4:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  4272d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4272dc:	be 01 00 00 00       	mov    $0x1,%esi
  4272e1:	48 89 c7             	mov    %rax,%rdi
  4272e4:	e8 e3 f4 fd ff       	callq  4067cc <luaL_checklstring>
  4272e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4272ed:	48 89 c2             	mov    %rax,%rdx
  4272f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4272f4:	48 89 d6             	mov    %rdx,%rsi
  4272f7:	48 89 c7             	mov    %rax,%rdi
  4272fa:	e8 16 ba fd ff       	callq  402d15 <lua_pushinteger>
  4272ff:	b8 01 00 00 00       	mov    $0x1,%eax
  427304:	c9                   	leaveq 
  427305:	c3                   	retq   

0000000000427306 <posrelatI>:
  427306:	55                   	push   %rbp
  427307:	48 89 e5             	mov    %rsp,%rbp
  42730a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42730e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  427312:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  427317:	7e 06                	jle    42731f <posrelatI+0x19>
  427319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42731d:	eb 31                	jmp    427350 <posrelatI+0x4a>
  42731f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  427324:	75 07                	jne    42732d <posrelatI+0x27>
  427326:	b8 01 00 00 00       	mov    $0x1,%eax
  42732b:	eb 23                	jmp    427350 <posrelatI+0x4a>
  42732d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427331:	48 f7 d8             	neg    %rax
  427334:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  427338:	7d 07                	jge    427341 <posrelatI+0x3b>
  42733a:	b8 01 00 00 00       	mov    $0x1,%eax
  42733f:	eb 0f                	jmp    427350 <posrelatI+0x4a>
  427341:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  427345:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427349:	48 01 d0             	add    %rdx,%rax
  42734c:	48 83 c0 01          	add    $0x1,%rax
  427350:	5d                   	pop    %rbp
  427351:	c3                   	retq   

0000000000427352 <getendpos>:
  427352:	55                   	push   %rbp
  427353:	48 89 e5             	mov    %rsp,%rbp
  427356:	48 83 ec 30          	sub    $0x30,%rsp
  42735a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42735e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  427361:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  427365:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  427369:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42736d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  427370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427374:	89 ce                	mov    %ecx,%esi
  427376:	48 89 c7             	mov    %rax,%rdi
  427379:	e8 68 f6 fd ff       	callq  4069e6 <luaL_optinteger>
  42737e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427382:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427386:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  42738a:	7e 06                	jle    427392 <getendpos+0x40>
  42738c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427390:	eb 30                	jmp    4273c2 <getendpos+0x70>
  427392:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  427397:	78 06                	js     42739f <getendpos+0x4d>
  427399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42739d:	eb 23                	jmp    4273c2 <getendpos+0x70>
  42739f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4273a3:	48 f7 d8             	neg    %rax
  4273a6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4273aa:	7d 07                	jge    4273b3 <getendpos+0x61>
  4273ac:	b8 00 00 00 00       	mov    $0x0,%eax
  4273b1:	eb 0f                	jmp    4273c2 <getendpos+0x70>
  4273b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4273b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4273bb:	48 01 d0             	add    %rdx,%rax
  4273be:	48 83 c0 01          	add    $0x1,%rax
  4273c2:	c9                   	leaveq 
  4273c3:	c3                   	retq   

00000000004273c4 <str_sub>:
  4273c4:	55                   	push   %rbp
  4273c5:	48 89 e5             	mov    %rsp,%rbp
  4273c8:	53                   	push   %rbx
  4273c9:	48 83 ec 38          	sub    $0x38,%rsp
  4273cd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4273d1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4273d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4273d9:	be 01 00 00 00       	mov    $0x1,%esi
  4273de:	48 89 c7             	mov    %rax,%rdi
  4273e1:	e8 e6 f3 fd ff       	callq  4067cc <luaL_checklstring>
  4273e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4273ea:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
  4273ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4273f2:	be 02 00 00 00       	mov    $0x2,%esi
  4273f7:	48 89 c7             	mov    %rax,%rdi
  4273fa:	e8 98 f5 fd ff       	callq  406997 <luaL_checkinteger>
  4273ff:	48 89 de             	mov    %rbx,%rsi
  427402:	48 89 c7             	mov    %rax,%rdi
  427405:	e8 fc fe ff ff       	callq  427306 <posrelatI>
  42740a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42740e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427412:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  427416:	48 89 d1             	mov    %rdx,%rcx
  427419:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  427420:	be 03 00 00 00       	mov    $0x3,%esi
  427425:	48 89 c7             	mov    %rax,%rdi
  427428:	e8 25 ff ff ff       	callq  427352 <getendpos>
  42742d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  427431:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427435:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  427439:	77 2c                	ja     427467 <str_sub+0xa3>
  42743b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42743f:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  427443:	48 8d 50 01          	lea    0x1(%rax),%rdx
  427447:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42744b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  42744f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427453:	48 01 c1             	add    %rax,%rcx
  427456:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42745a:	48 89 ce             	mov    %rcx,%rsi
  42745d:	48 89 c7             	mov    %rax,%rdi
  427460:	e8 f2 b8 fd ff       	callq  402d57 <lua_pushlstring>
  427465:	eb 11                	jmp    427478 <str_sub+0xb4>
  427467:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42746b:	be 20 13 44 00       	mov    $0x441320,%esi
  427470:	48 89 c7             	mov    %rax,%rdi
  427473:	e8 96 b9 fd ff       	callq  402e0e <lua_pushstring>
  427478:	b8 01 00 00 00       	mov    $0x1,%eax
  42747d:	48 83 c4 38          	add    $0x38,%rsp
  427481:	5b                   	pop    %rbx
  427482:	5d                   	pop    %rbp
  427483:	c3                   	retq   

0000000000427484 <str_reverse>:
  427484:	55                   	push   %rbp
  427485:	48 89 e5             	mov    %rsp,%rbp
  427488:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  42748f:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  427496:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  42749a:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4274a1:	be 01 00 00 00       	mov    $0x1,%esi
  4274a6:	48 89 c7             	mov    %rax,%rdi
  4274a9:	e8 1e f3 fd ff       	callq  4067cc <luaL_checklstring>
  4274ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4274b2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4274b6:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  4274bd:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4274c4:	48 89 ce             	mov    %rcx,%rsi
  4274c7:	48 89 c7             	mov    %rax,%rdi
  4274ca:	e8 13 fb fd ff       	callq  406fe2 <luaL_buffinitsize>
  4274cf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4274d3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4274da:	00 
  4274db:	eb 28                	jmp    427505 <str_reverse+0x81>
  4274dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4274e1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  4274e5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4274e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4274ed:	48 01 d0             	add    %rdx,%rax
  4274f0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4274f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4274f8:	48 01 ca             	add    %rcx,%rdx
  4274fb:	0f b6 00             	movzbl (%rax),%eax
  4274fe:	88 02                	mov    %al,(%rdx)
  427500:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  427505:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427509:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  42750d:	72 ce                	jb     4274dd <str_reverse+0x59>
  42750f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427513:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  42751a:	48 89 d6             	mov    %rdx,%rsi
  42751d:	48 89 c7             	mov    %rax,%rdi
  427520:	e8 9f f9 fd ff       	callq  406ec4 <luaL_pushresultsize>
  427525:	b8 01 00 00 00       	mov    $0x1,%eax
  42752a:	c9                   	leaveq 
  42752b:	c3                   	retq   

000000000042752c <str_lower>:
  42752c:	55                   	push   %rbp
  42752d:	48 89 e5             	mov    %rsp,%rbp
  427530:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  427537:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  42753e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  427542:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  427549:	be 01 00 00 00       	mov    $0x1,%esi
  42754e:	48 89 c7             	mov    %rax,%rdi
  427551:	e8 76 f2 fd ff       	callq  4067cc <luaL_checklstring>
  427556:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42755a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42755e:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  427565:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  42756c:	48 89 ce             	mov    %rcx,%rsi
  42756f:	48 89 c7             	mov    %rax,%rdi
  427572:	e8 6b fa fd ff       	callq  406fe2 <luaL_buffinitsize>
  427577:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42757b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  427582:	00 
  427583:	eb 2e                	jmp    4275b3 <str_lower+0x87>
  427585:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42758d:	48 01 d0             	add    %rdx,%rax
  427590:	0f b6 00             	movzbl (%rax),%eax
  427593:	0f b6 c0             	movzbl %al,%eax
  427596:	89 c7                	mov    %eax,%edi
  427598:	e8 53 a4 fd ff       	callq  4019f0 <tolower@plt>
  42759d:	89 c1                	mov    %eax,%ecx
  42759f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4275a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4275a7:	48 01 d0             	add    %rdx,%rax
  4275aa:	89 ca                	mov    %ecx,%edx
  4275ac:	88 10                	mov    %dl,(%rax)
  4275ae:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  4275b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4275b7:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4275bb:	72 c8                	jb     427585 <str_lower+0x59>
  4275bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4275c1:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  4275c8:	48 89 d6             	mov    %rdx,%rsi
  4275cb:	48 89 c7             	mov    %rax,%rdi
  4275ce:	e8 f1 f8 fd ff       	callq  406ec4 <luaL_pushresultsize>
  4275d3:	b8 01 00 00 00       	mov    $0x1,%eax
  4275d8:	c9                   	leaveq 
  4275d9:	c3                   	retq   

00000000004275da <str_upper>:
  4275da:	55                   	push   %rbp
  4275db:	48 89 e5             	mov    %rsp,%rbp
  4275de:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  4275e5:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  4275ec:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4275f0:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4275f7:	be 01 00 00 00       	mov    $0x1,%esi
  4275fc:	48 89 c7             	mov    %rax,%rdi
  4275ff:	e8 c8 f1 fd ff       	callq  4067cc <luaL_checklstring>
  427604:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  427608:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42760c:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  427613:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  42761a:	48 89 ce             	mov    %rcx,%rsi
  42761d:	48 89 c7             	mov    %rax,%rdi
  427620:	e8 bd f9 fd ff       	callq  406fe2 <luaL_buffinitsize>
  427625:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  427629:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  427630:	00 
  427631:	eb 2e                	jmp    427661 <str_upper+0x87>
  427633:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42763b:	48 01 d0             	add    %rdx,%rax
  42763e:	0f b6 00             	movzbl (%rax),%eax
  427641:	0f b6 c0             	movzbl %al,%eax
  427644:	89 c7                	mov    %eax,%edi
  427646:	e8 85 a4 fd ff       	callq  401ad0 <toupper@plt>
  42764b:	89 c1                	mov    %eax,%ecx
  42764d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  427651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427655:	48 01 d0             	add    %rdx,%rax
  427658:	89 ca                	mov    %ecx,%edx
  42765a:	88 10                	mov    %dl,(%rax)
  42765c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  427661:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427665:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  427669:	72 c8                	jb     427633 <str_upper+0x59>
  42766b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42766f:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  427676:	48 89 d6             	mov    %rdx,%rsi
  427679:	48 89 c7             	mov    %rax,%rdi
  42767c:	e8 43 f8 fd ff       	callq  406ec4 <luaL_pushresultsize>
  427681:	b8 01 00 00 00       	mov    $0x1,%eax
  427686:	c9                   	leaveq 
  427687:	c3                   	retq   

0000000000427688 <str_rep>:
  427688:	55                   	push   %rbp
  427689:	48 89 e5             	mov    %rsp,%rbp
  42768c:	48 81 ec 70 04 00 00 	sub    $0x470,%rsp
  427693:	48 89 bd 98 fb ff ff 	mov    %rdi,-0x468(%rbp)
  42769a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  42769e:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  4276a5:	be 01 00 00 00       	mov    $0x1,%esi
  4276aa:	48 89 c7             	mov    %rax,%rdi
  4276ad:	e8 1a f1 fd ff       	callq  4067cc <luaL_checklstring>
  4276b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4276b6:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  4276bd:	be 02 00 00 00       	mov    $0x2,%esi
  4276c2:	48 89 c7             	mov    %rax,%rdi
  4276c5:	e8 cd f2 fd ff       	callq  406997 <luaL_checkinteger>
  4276ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4276ce:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  4276d2:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  4276d9:	48 89 d1             	mov    %rdx,%rcx
  4276dc:	ba 20 13 44 00       	mov    $0x441320,%edx
  4276e1:	be 03 00 00 00       	mov    $0x3,%esi
  4276e6:	48 89 c7             	mov    %rax,%rdi
  4276e9:	e8 36 f1 fd ff       	callq  406824 <luaL_optlstring>
  4276ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4276f2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4276f7:	7f 19                	jg     427712 <str_rep+0x8a>
  4276f9:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  427700:	be 20 13 44 00       	mov    $0x441320,%esi
  427705:	48 89 c7             	mov    %rax,%rdi
  427708:	e8 01 b7 fd ff       	callq  402e0e <lua_pushstring>
  42770d:	e9 3c 01 00 00       	jmpq   42784e <str_rep+0x1c6>
  427712:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427716:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42771a:	48 01 c2             	add    %rax,%rdx
  42771d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427721:	48 39 c2             	cmp    %rax,%rdx
  427724:	72 22                	jb     427748 <str_rep+0xc0>
  427726:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42772a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42772e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  427732:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  427736:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  42773b:	ba 00 00 00 00       	mov    $0x0,%edx
  427740:	48 f7 f6             	div    %rsi
  427743:	48 39 c1             	cmp    %rax,%rcx
  427746:	76 07                	jbe    42774f <str_rep+0xc7>
  427748:	b8 01 00 00 00       	mov    $0x1,%eax
  42774d:	eb 05                	jmp    427754 <str_rep+0xcc>
  42774f:	b8 00 00 00 00       	mov    $0x0,%eax
  427754:	85 c0                	test   %eax,%eax
  427756:	0f 95 c0             	setne  %al
  427759:	0f b6 c0             	movzbl %al,%eax
  42775c:	48 85 c0             	test   %rax,%rax
  42775f:	74 1e                	je     42777f <str_rep+0xf7>
  427761:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  427768:	be 21 13 44 00       	mov    $0x441321,%esi
  42776d:	48 89 c7             	mov    %rax,%rdi
  427770:	b8 00 00 00 00       	mov    $0x0,%eax
  427775:	e8 76 ea fd ff       	callq  4061f0 <luaL_error>
  42777a:	e9 d4 00 00 00       	jmpq   427853 <str_rep+0x1cb>
  42777f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  427783:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427787:	48 0f af d0          	imul   %rax,%rdx
  42778b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42778f:	48 83 e8 01          	sub    $0x1,%rax
  427793:	48 89 c1             	mov    %rax,%rcx
  427796:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42779a:	48 0f af c1          	imul   %rcx,%rax
  42779e:	48 01 d0             	add    %rdx,%rax
  4277a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4277a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4277a9:	48 8d 8d a0 fb ff ff 	lea    -0x460(%rbp),%rcx
  4277b0:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  4277b7:	48 89 ce             	mov    %rcx,%rsi
  4277ba:	48 89 c7             	mov    %rax,%rdi
  4277bd:	e8 20 f8 fd ff       	callq  406fe2 <luaL_buffinitsize>
  4277c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4277c6:	eb 47                	jmp    42780f <str_rep+0x187>
  4277c8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4277cc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4277d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4277d4:	48 89 ce             	mov    %rcx,%rsi
  4277d7:	48 89 c7             	mov    %rax,%rdi
  4277da:	e8 81 a0 fd ff       	callq  401860 <memcpy@plt>
  4277df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4277e3:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  4277e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4277eb:	48 85 c0             	test   %rax,%rax
  4277ee:	74 1f                	je     42780f <str_rep+0x187>
  4277f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4277f4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4277f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4277fc:	48 89 ce             	mov    %rcx,%rsi
  4277ff:	48 89 c7             	mov    %rax,%rdi
  427802:	e8 59 a0 fd ff       	callq  401860 <memcpy@plt>
  427807:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42780b:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  42780f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427813:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  427817:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  42781b:	48 83 f8 01          	cmp    $0x1,%rax
  42781f:	7f a7                	jg     4277c8 <str_rep+0x140>
  427821:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427825:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  427829:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42782d:	48 89 ce             	mov    %rcx,%rsi
  427830:	48 89 c7             	mov    %rax,%rdi
  427833:	e8 28 a0 fd ff       	callq  401860 <memcpy@plt>
  427838:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42783c:	48 8d 85 a0 fb ff ff 	lea    -0x460(%rbp),%rax
  427843:	48 89 d6             	mov    %rdx,%rsi
  427846:	48 89 c7             	mov    %rax,%rdi
  427849:	e8 76 f6 fd ff       	callq  406ec4 <luaL_pushresultsize>
  42784e:	b8 01 00 00 00       	mov    $0x1,%eax
  427853:	c9                   	leaveq 
  427854:	c3                   	retq   

0000000000427855 <str_byte>:
  427855:	55                   	push   %rbp
  427856:	48 89 e5             	mov    %rsp,%rbp
  427859:	48 83 ec 50          	sub    $0x50,%rsp
  42785d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  427861:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  427865:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  427869:	be 01 00 00 00       	mov    $0x1,%esi
  42786e:	48 89 c7             	mov    %rax,%rdi
  427871:	e8 56 ef fd ff       	callq  4067cc <luaL_checklstring>
  427876:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42787a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42787e:	ba 01 00 00 00       	mov    $0x1,%edx
  427883:	be 02 00 00 00       	mov    $0x2,%esi
  427888:	48 89 c7             	mov    %rax,%rdi
  42788b:	e8 56 f1 fd ff       	callq  4069e6 <luaL_optinteger>
  427890:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  427894:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  427898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42789c:	48 89 d6             	mov    %rdx,%rsi
  42789f:	48 89 c7             	mov    %rax,%rdi
  4278a2:	e8 5f fa ff ff       	callq  427306 <posrelatI>
  4278a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4278ab:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4278af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4278b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4278b7:	be 03 00 00 00       	mov    $0x3,%esi
  4278bc:	48 89 c7             	mov    %rax,%rdi
  4278bf:	e8 8e fa ff ff       	callq  427352 <getendpos>
  4278c4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4278c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4278cc:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4278d0:	76 0a                	jbe    4278dc <str_byte+0x87>
  4278d2:	b8 00 00 00 00       	mov    $0x0,%eax
  4278d7:	e9 a0 00 00 00       	jmpq   42797c <str_byte+0x127>
  4278dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4278e0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  4278e4:	48 3d fe ff ff 7f    	cmp    $0x7ffffffe,%rax
  4278ea:	0f 97 c0             	seta   %al
  4278ed:	0f b6 c0             	movzbl %al,%eax
  4278f0:	48 85 c0             	test   %rax,%rax
  4278f3:	74 18                	je     42790d <str_byte+0xb8>
  4278f5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4278f9:	be 3c 13 44 00       	mov    $0x44133c,%esi
  4278fe:	48 89 c7             	mov    %rax,%rdi
  427901:	b8 00 00 00 00       	mov    $0x0,%eax
  427906:	e8 e5 e8 fd ff       	callq  4061f0 <luaL_error>
  42790b:	eb 6f                	jmp    42797c <str_byte+0x127>
  42790d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  427911:	89 c2                	mov    %eax,%edx
  427913:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427917:	29 c2                	sub    %eax,%edx
  427919:	89 d0                	mov    %edx,%eax
  42791b:	83 c0 01             	add    $0x1,%eax
  42791e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  427921:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  427924:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  427928:	ba 3c 13 44 00       	mov    $0x44133c,%edx
  42792d:	89 ce                	mov    %ecx,%esi
  42792f:	48 89 c7             	mov    %rax,%rdi
  427932:	e8 99 ed fd ff       	callq  4066d0 <luaL_checkstack>
  427937:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42793e:	eb 31                	jmp    427971 <str_byte+0x11c>
  427940:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427943:	48 63 d0             	movslq %eax,%rdx
  427946:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42794a:	48 01 d0             	add    %rdx,%rax
  42794d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  427951:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427955:	48 01 d0             	add    %rdx,%rax
  427958:	0f b6 00             	movzbl (%rax),%eax
  42795b:	0f b6 d0             	movzbl %al,%edx
  42795e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  427962:	48 89 d6             	mov    %rdx,%rsi
  427965:	48 89 c7             	mov    %rax,%rdi
  427968:	e8 a8 b3 fd ff       	callq  402d15 <lua_pushinteger>
  42796d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  427971:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427974:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  427977:	7c c7                	jl     427940 <str_byte+0xeb>
  427979:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42797c:	c9                   	leaveq 
  42797d:	c3                   	retq   

000000000042797e <str_char>:
  42797e:	55                   	push   %rbp
  42797f:	48 89 e5             	mov    %rsp,%rbp
  427982:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
  427989:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  427990:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  427997:	48 89 c7             	mov    %rax,%rdi
  42799a:	e8 ba a5 fd ff       	callq  401f59 <lua_gettop>
  42799f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4279a2:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4279a5:	48 63 d0             	movslq %eax,%rdx
  4279a8:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  4279af:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4279b6:	48 89 ce             	mov    %rcx,%rsi
  4279b9:	48 89 c7             	mov    %rax,%rdi
  4279bc:	e8 21 f6 fd ff       	callq  406fe2 <luaL_buffinitsize>
  4279c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4279c5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4279cc:	eb 61                	jmp    427a2f <str_char+0xb1>
  4279ce:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4279d1:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4279d8:	89 d6                	mov    %edx,%esi
  4279da:	48 89 c7             	mov    %rax,%rdi
  4279dd:	e8 b5 ef fd ff       	callq  406997 <luaL_checkinteger>
  4279e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4279e6:	48 81 7d e8 ff 00 00 	cmpq   $0xff,-0x18(%rbp)
  4279ed:	00 
  4279ee:	0f 96 c0             	setbe  %al
  4279f1:	0f b6 c0             	movzbl %al,%eax
  4279f4:	48 85 c0             	test   %rax,%rax
  4279f7:	75 1b                	jne    427a14 <str_char+0x96>
  4279f9:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4279fc:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  427a03:	ba 52 13 44 00       	mov    $0x441352,%edx
  427a08:	89 ce                	mov    %ecx,%esi
  427a0a:	48 89 c7             	mov    %rax,%rdi
  427a0d:	e8 e0 e4 fd ff       	callq  405ef2 <luaL_argerror>
  427a12:	85 c0                	test   %eax,%eax
  427a14:	90                   	nop
  427a15:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427a18:	48 98                	cltq   
  427a1a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  427a1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427a22:	48 01 d0             	add    %rdx,%rax
  427a25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  427a29:	88 10                	mov    %dl,(%rax)
  427a2b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  427a2f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427a32:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  427a35:	7e 97                	jle    4279ce <str_char+0x50>
  427a37:	8b 45 f8             	mov    -0x8(%rbp),%eax
  427a3a:	48 63 d0             	movslq %eax,%rdx
  427a3d:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  427a44:	48 89 d6             	mov    %rdx,%rsi
  427a47:	48 89 c7             	mov    %rax,%rdi
  427a4a:	e8 75 f4 fd ff       	callq  406ec4 <luaL_pushresultsize>
  427a4f:	b8 01 00 00 00       	mov    $0x1,%eax
  427a54:	c9                   	leaveq 
  427a55:	c3                   	retq   

0000000000427a56 <writer>:
  427a56:	55                   	push   %rbp
  427a57:	48 89 e5             	mov    %rsp,%rbp
  427a5a:	48 83 ec 30          	sub    $0x30,%rsp
  427a5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427a62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  427a66:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  427a6a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  427a6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427a72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427a7a:	8b 00                	mov    (%rax),%eax
  427a7c:	85 c0                	test   %eax,%eax
  427a7e:	75 21                	jne    427aa1 <writer+0x4b>
  427a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427a84:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  427a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427a8e:	48 8d 50 08          	lea    0x8(%rax),%rdx
  427a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427a96:	48 89 d6             	mov    %rdx,%rsi
  427a99:	48 89 c7             	mov    %rax,%rdi
  427a9c:	e8 e8 f4 fd ff       	callq  406f89 <luaL_buffinit>
  427aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427aa5:	48 8d 48 08          	lea    0x8(%rax),%rcx
  427aa9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  427aad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427ab1:	48 89 c6             	mov    %rax,%rsi
  427ab4:	48 89 cf             	mov    %rcx,%rdi
  427ab7:	e8 e6 f2 fd ff       	callq  406da2 <luaL_addlstring>
  427abc:	b8 00 00 00 00       	mov    $0x0,%eax
  427ac1:	c9                   	leaveq 
  427ac2:	c3                   	retq   

0000000000427ac3 <str_dump>:
  427ac3:	55                   	push   %rbp
  427ac4:	48 89 e5             	mov    %rsp,%rbp
  427ac7:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  427ace:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  427ad5:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  427adc:	be 02 00 00 00       	mov    $0x2,%esi
  427ae1:	48 89 c7             	mov    %rax,%rdi
  427ae4:	e8 34 ae fd ff       	callq  40291d <lua_toboolean>
  427ae9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  427aec:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  427af3:	ba 06 00 00 00       	mov    $0x6,%edx
  427af8:	be 01 00 00 00       	mov    $0x1,%esi
  427afd:	48 89 c7             	mov    %rax,%rdi
  427b00:	e8 38 ec fd ff       	callq  40673d <luaL_checktype>
  427b05:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  427b0c:	be 01 00 00 00       	mov    $0x1,%esi
  427b11:	48 89 c7             	mov    %rax,%rdi
  427b14:	e8 6b a4 fd ff       	callq  401f84 <lua_settop>
  427b19:	c7 85 d0 fb ff ff 00 	movl   $0x0,-0x430(%rbp)
  427b20:	00 00 00 
  427b23:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  427b26:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  427b2d:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  427b34:	be 56 7a 42 00       	mov    $0x427a56,%esi
  427b39:	48 89 c7             	mov    %rax,%rdi
  427b3c:	e8 aa cd fd ff       	callq  4048eb <lua_dump>
  427b41:	85 c0                	test   %eax,%eax
  427b43:	0f 95 c0             	setne  %al
  427b46:	0f b6 c0             	movzbl %al,%eax
  427b49:	48 85 c0             	test   %rax,%rax
  427b4c:	74 1b                	je     427b69 <str_dump+0xa6>
  427b4e:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  427b55:	be 65 13 44 00       	mov    $0x441365,%esi
  427b5a:	48 89 c7             	mov    %rax,%rdi
  427b5d:	b8 00 00 00 00       	mov    $0x0,%eax
  427b62:	e8 89 e6 fd ff       	callq  4061f0 <luaL_error>
  427b67:	eb 18                	jmp    427b81 <str_dump+0xbe>
  427b69:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  427b70:	48 83 c0 08          	add    $0x8,%rax
  427b74:	48 89 c7             	mov    %rax,%rdi
  427b77:	e8 c3 f2 fd ff       	callq  406e3f <luaL_pushresult>
  427b7c:	b8 01 00 00 00       	mov    $0x1,%eax
  427b81:	c9                   	leaveq 
  427b82:	c3                   	retq   

0000000000427b83 <tonum>:
  427b83:	55                   	push   %rbp
  427b84:	48 89 e5             	mov    %rsp,%rbp
  427b87:	48 83 ec 20          	sub    $0x20,%rsp
  427b8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427b8f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  427b92:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  427b95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427b99:	89 d6                	mov    %edx,%esi
  427b9b:	48 89 c7             	mov    %rax,%rdi
  427b9e:	e8 d0 a7 fd ff       	callq  402373 <lua_type>
  427ba3:	83 f8 03             	cmp    $0x3,%eax
  427ba6:	75 18                	jne    427bc0 <tonum+0x3d>
  427ba8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  427bab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427baf:	89 d6                	mov    %edx,%esi
  427bb1:	48 89 c7             	mov    %rax,%rdi
  427bb4:	e8 56 a7 fd ff       	callq  40230f <lua_pushvalue>
  427bb9:	b8 01 00 00 00       	mov    $0x1,%eax
  427bbe:	eb 4f                	jmp    427c0f <tonum+0x8c>
  427bc0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  427bc4:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  427bc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427bcb:	89 ce                	mov    %ecx,%esi
  427bcd:	48 89 c7             	mov    %rax,%rdi
  427bd0:	e8 98 ad fd ff       	callq  40296d <lua_tolstring>
  427bd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427bd9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  427bde:	74 2a                	je     427c0a <tonum+0x87>
  427be0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  427be4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427be8:	48 89 d6             	mov    %rdx,%rsi
  427beb:	48 89 c7             	mov    %rax,%rdi
  427bee:	e8 d5 ab fd ff       	callq  4027c8 <lua_stringtonumber>
  427bf3:	48 89 c2             	mov    %rax,%rdx
  427bf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427bfa:	48 83 c0 01          	add    $0x1,%rax
  427bfe:	48 39 c2             	cmp    %rax,%rdx
  427c01:	75 07                	jne    427c0a <tonum+0x87>
  427c03:	b8 01 00 00 00       	mov    $0x1,%eax
  427c08:	eb 05                	jmp    427c0f <tonum+0x8c>
  427c0a:	b8 00 00 00 00       	mov    $0x0,%eax
  427c0f:	c9                   	leaveq 
  427c10:	c3                   	retq   

0000000000427c11 <trymt>:
  427c11:	55                   	push   %rbp
  427c12:	48 89 e5             	mov    %rsp,%rbp
  427c15:	53                   	push   %rbx
  427c16:	48 83 ec 18          	sub    $0x18,%rsp
  427c1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427c1e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  427c22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c26:	be 02 00 00 00       	mov    $0x2,%esi
  427c2b:	48 89 c7             	mov    %rax,%rdi
  427c2e:	e8 51 a3 fd ff       	callq  401f84 <lua_settop>
  427c33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c37:	be 02 00 00 00       	mov    $0x2,%esi
  427c3c:	48 89 c7             	mov    %rax,%rdi
  427c3f:	e8 2f a7 fd ff       	callq  402373 <lua_type>
  427c44:	83 f8 04             	cmp    $0x4,%eax
  427c47:	74 19                	je     427c62 <trymt+0x51>
  427c49:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427c4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c51:	be 02 00 00 00       	mov    $0x2,%esi
  427c56:	48 89 c7             	mov    %rax,%rdi
  427c59:	e8 e1 fa fd ff       	callq  40773f <luaL_getmetafield>
  427c5e:	85 c0                	test   %eax,%eax
  427c60:	75 07                	jne    427c69 <trymt+0x58>
  427c62:	b8 01 00 00 00       	mov    $0x1,%eax
  427c67:	eb 05                	jmp    427c6e <trymt+0x5d>
  427c69:	b8 00 00 00 00       	mov    $0x0,%eax
  427c6e:	85 c0                	test   %eax,%eax
  427c70:	0f 95 c0             	setne  %al
  427c73:	0f b6 c0             	movzbl %al,%eax
  427c76:	48 85 c0             	test   %rax,%rax
  427c79:	74 69                	je     427ce4 <trymt+0xd3>
  427c7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c7f:	be ff ff ff ff       	mov    $0xffffffff,%esi
  427c84:	48 89 c7             	mov    %rax,%rdi
  427c87:	e8 e7 a6 fd ff       	callq  402373 <lua_type>
  427c8c:	89 c2                	mov    %eax,%edx
  427c8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c92:	89 d6                	mov    %edx,%esi
  427c94:	48 89 c7             	mov    %rax,%rdi
  427c97:	e8 36 a7 fd ff       	callq  4023d2 <lua_typename>
  427c9c:	48 89 c3             	mov    %rax,%rbx
  427c9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427ca3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  427ca8:	48 89 c7             	mov    %rax,%rdi
  427cab:	e8 c3 a6 fd ff       	callq  402373 <lua_type>
  427cb0:	89 c2                	mov    %eax,%edx
  427cb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427cb6:	89 d6                	mov    %edx,%esi
  427cb8:	48 89 c7             	mov    %rax,%rdi
  427cbb:	e8 12 a7 fd ff       	callq  4023d2 <lua_typename>
  427cc0:	48 89 c1             	mov    %rax,%rcx
  427cc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427cc7:	48 8d 50 02          	lea    0x2(%rax),%rdx
  427ccb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427ccf:	49 89 d8             	mov    %rbx,%r8
  427cd2:	be 88 13 44 00       	mov    $0x441388,%esi
  427cd7:	48 89 c7             	mov    %rax,%rdi
  427cda:	b8 00 00 00 00       	mov    $0x0,%eax
  427cdf:	e8 0c e5 fd ff       	callq  4061f0 <luaL_error>
  427ce4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427ce8:	ba 01 00 00 00       	mov    $0x1,%edx
  427ced:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  427cf2:	48 89 c7             	mov    %rax,%rdi
  427cf5:	e8 74 a4 fd ff       	callq  40216e <lua_rotate>
  427cfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427cfe:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  427d04:	b9 00 00 00 00       	mov    $0x0,%ecx
  427d09:	ba 01 00 00 00       	mov    $0x1,%edx
  427d0e:	be 02 00 00 00       	mov    $0x2,%esi
  427d13:	48 89 c7             	mov    %rax,%rdi
  427d16:	e8 93 c7 fd ff       	callq  4044ae <lua_callk>
  427d1b:	90                   	nop
  427d1c:	48 83 c4 18          	add    $0x18,%rsp
  427d20:	5b                   	pop    %rbx
  427d21:	5d                   	pop    %rbp
  427d22:	c3                   	retq   

0000000000427d23 <arith>:
  427d23:	55                   	push   %rbp
  427d24:	48 89 e5             	mov    %rsp,%rbp
  427d27:	48 83 ec 20          	sub    $0x20,%rsp
  427d2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427d2f:	89 75 f4             	mov    %esi,-0xc(%rbp)
  427d32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  427d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427d3a:	be 01 00 00 00       	mov    $0x1,%esi
  427d3f:	48 89 c7             	mov    %rax,%rdi
  427d42:	e8 3c fe ff ff       	callq  427b83 <tonum>
  427d47:	85 c0                	test   %eax,%eax
  427d49:	74 28                	je     427d73 <arith+0x50>
  427d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427d4f:	be 02 00 00 00       	mov    $0x2,%esi
  427d54:	48 89 c7             	mov    %rax,%rdi
  427d57:	e8 27 fe ff ff       	callq  427b83 <tonum>
  427d5c:	85 c0                	test   %eax,%eax
  427d5e:	74 13                	je     427d73 <arith+0x50>
  427d60:	8b 55 f4             	mov    -0xc(%rbp),%edx
  427d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427d67:	89 d6                	mov    %edx,%esi
  427d69:	48 89 c7             	mov    %rax,%rdi
  427d6c:	e8 9b a8 fd ff       	callq  40260c <lua_arith>
  427d71:	eb 13                	jmp    427d86 <arith+0x63>
  427d73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  427d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427d7b:	48 89 d6             	mov    %rdx,%rsi
  427d7e:	48 89 c7             	mov    %rax,%rdi
  427d81:	e8 8b fe ff ff       	callq  427c11 <trymt>
  427d86:	b8 01 00 00 00       	mov    $0x1,%eax
  427d8b:	c9                   	leaveq 
  427d8c:	c3                   	retq   

0000000000427d8d <arith_add>:
  427d8d:	55                   	push   %rbp
  427d8e:	48 89 e5             	mov    %rsp,%rbp
  427d91:	48 83 ec 10          	sub    $0x10,%rsp
  427d95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427d9d:	ba a9 13 44 00       	mov    $0x4413a9,%edx
  427da2:	be 00 00 00 00       	mov    $0x0,%esi
  427da7:	48 89 c7             	mov    %rax,%rdi
  427daa:	e8 74 ff ff ff       	callq  427d23 <arith>
  427daf:	c9                   	leaveq 
  427db0:	c3                   	retq   

0000000000427db1 <arith_sub>:
  427db1:	55                   	push   %rbp
  427db2:	48 89 e5             	mov    %rsp,%rbp
  427db5:	48 83 ec 10          	sub    $0x10,%rsp
  427db9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427dc1:	ba af 13 44 00       	mov    $0x4413af,%edx
  427dc6:	be 01 00 00 00       	mov    $0x1,%esi
  427dcb:	48 89 c7             	mov    %rax,%rdi
  427dce:	e8 50 ff ff ff       	callq  427d23 <arith>
  427dd3:	c9                   	leaveq 
  427dd4:	c3                   	retq   

0000000000427dd5 <arith_mul>:
  427dd5:	55                   	push   %rbp
  427dd6:	48 89 e5             	mov    %rsp,%rbp
  427dd9:	48 83 ec 10          	sub    $0x10,%rsp
  427ddd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427de5:	ba b5 13 44 00       	mov    $0x4413b5,%edx
  427dea:	be 02 00 00 00       	mov    $0x2,%esi
  427def:	48 89 c7             	mov    %rax,%rdi
  427df2:	e8 2c ff ff ff       	callq  427d23 <arith>
  427df7:	c9                   	leaveq 
  427df8:	c3                   	retq   

0000000000427df9 <arith_mod>:
  427df9:	55                   	push   %rbp
  427dfa:	48 89 e5             	mov    %rsp,%rbp
  427dfd:	48 83 ec 10          	sub    $0x10,%rsp
  427e01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427e09:	ba bb 13 44 00       	mov    $0x4413bb,%edx
  427e0e:	be 03 00 00 00       	mov    $0x3,%esi
  427e13:	48 89 c7             	mov    %rax,%rdi
  427e16:	e8 08 ff ff ff       	callq  427d23 <arith>
  427e1b:	c9                   	leaveq 
  427e1c:	c3                   	retq   

0000000000427e1d <arith_pow>:
  427e1d:	55                   	push   %rbp
  427e1e:	48 89 e5             	mov    %rsp,%rbp
  427e21:	48 83 ec 10          	sub    $0x10,%rsp
  427e25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427e29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427e2d:	ba c1 13 44 00       	mov    $0x4413c1,%edx
  427e32:	be 04 00 00 00       	mov    $0x4,%esi
  427e37:	48 89 c7             	mov    %rax,%rdi
  427e3a:	e8 e4 fe ff ff       	callq  427d23 <arith>
  427e3f:	c9                   	leaveq 
  427e40:	c3                   	retq   

0000000000427e41 <arith_div>:
  427e41:	55                   	push   %rbp
  427e42:	48 89 e5             	mov    %rsp,%rbp
  427e45:	48 83 ec 10          	sub    $0x10,%rsp
  427e49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427e4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427e51:	ba c7 13 44 00       	mov    $0x4413c7,%edx
  427e56:	be 05 00 00 00       	mov    $0x5,%esi
  427e5b:	48 89 c7             	mov    %rax,%rdi
  427e5e:	e8 c0 fe ff ff       	callq  427d23 <arith>
  427e63:	c9                   	leaveq 
  427e64:	c3                   	retq   

0000000000427e65 <arith_idiv>:
  427e65:	55                   	push   %rbp
  427e66:	48 89 e5             	mov    %rsp,%rbp
  427e69:	48 83 ec 10          	sub    $0x10,%rsp
  427e6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427e75:	ba cd 13 44 00       	mov    $0x4413cd,%edx
  427e7a:	be 06 00 00 00       	mov    $0x6,%esi
  427e7f:	48 89 c7             	mov    %rax,%rdi
  427e82:	e8 9c fe ff ff       	callq  427d23 <arith>
  427e87:	c9                   	leaveq 
  427e88:	c3                   	retq   

0000000000427e89 <arith_unm>:
  427e89:	55                   	push   %rbp
  427e8a:	48 89 e5             	mov    %rsp,%rbp
  427e8d:	48 83 ec 10          	sub    $0x10,%rsp
  427e91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427e99:	ba d4 13 44 00       	mov    $0x4413d4,%edx
  427e9e:	be 0c 00 00 00       	mov    $0xc,%esi
  427ea3:	48 89 c7             	mov    %rax,%rdi
  427ea6:	e8 78 fe ff ff       	callq  427d23 <arith>
  427eab:	c9                   	leaveq 
  427eac:	c3                   	retq   

0000000000427ead <check_capture>:
  427ead:	55                   	push   %rbp
  427eae:	48 89 e5             	mov    %rsp,%rbp
  427eb1:	48 83 ec 10          	sub    $0x10,%rsp
  427eb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427eb9:	89 75 f4             	mov    %esi,-0xc(%rbp)
  427ebc:	83 6d f4 31          	subl   $0x31,-0xc(%rbp)
  427ec0:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  427ec4:	78 32                	js     427ef8 <check_capture+0x4b>
  427ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427eca:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  427ece:	0f b6 c0             	movzbl %al,%eax
  427ed1:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  427ed4:	7d 22                	jge    427ef8 <check_capture+0x4b>
  427ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427eda:	8b 55 f4             	mov    -0xc(%rbp),%edx
  427edd:	48 63 d2             	movslq %edx,%rdx
  427ee0:	48 83 c2 02          	add    $0x2,%rdx
  427ee4:	48 c1 e2 04          	shl    $0x4,%rdx
  427ee8:	48 01 d0             	add    %rdx,%rax
  427eeb:	48 83 c0 10          	add    $0x10,%rax
  427eef:	48 8b 00             	mov    (%rax),%rax
  427ef2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  427ef6:	75 07                	jne    427eff <check_capture+0x52>
  427ef8:	b8 01 00 00 00       	mov    $0x1,%eax
  427efd:	eb 05                	jmp    427f04 <check_capture+0x57>
  427eff:	b8 00 00 00 00       	mov    $0x0,%eax
  427f04:	85 c0                	test   %eax,%eax
  427f06:	0f 95 c0             	setne  %al
  427f09:	0f b6 c0             	movzbl %al,%eax
  427f0c:	48 85 c0             	test   %rax,%rax
  427f0f:	74 22                	je     427f33 <check_capture+0x86>
  427f11:	8b 45 f4             	mov    -0xc(%rbp),%eax
  427f14:	8d 50 01             	lea    0x1(%rax),%edx
  427f17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427f1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  427f1f:	be a0 14 44 00       	mov    $0x4414a0,%esi
  427f24:	48 89 c7             	mov    %rax,%rdi
  427f27:	b8 00 00 00 00       	mov    $0x0,%eax
  427f2c:	e8 bf e2 fd ff       	callq  4061f0 <luaL_error>
  427f31:	eb 03                	jmp    427f36 <check_capture+0x89>
  427f33:	8b 45 f4             	mov    -0xc(%rbp),%eax
  427f36:	c9                   	leaveq 
  427f37:	c3                   	retq   

0000000000427f38 <capture_to_close>:
  427f38:	55                   	push   %rbp
  427f39:	48 89 e5             	mov    %rsp,%rbp
  427f3c:	48 83 ec 20          	sub    $0x20,%rsp
  427f40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427f48:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  427f4c:	0f b6 c0             	movzbl %al,%eax
  427f4f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  427f52:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  427f56:	eb 2b                	jmp    427f83 <capture_to_close+0x4b>
  427f58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427f5c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  427f5f:	48 63 d2             	movslq %edx,%rdx
  427f62:	48 83 c2 02          	add    $0x2,%rdx
  427f66:	48 c1 e2 04          	shl    $0x4,%rdx
  427f6a:	48 01 d0             	add    %rdx,%rax
  427f6d:	48 83 c0 10          	add    $0x10,%rax
  427f71:	48 8b 00             	mov    (%rax),%rax
  427f74:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  427f78:	75 05                	jne    427f7f <capture_to_close+0x47>
  427f7a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427f7d:	eb 24                	jmp    427fa3 <capture_to_close+0x6b>
  427f7f:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  427f83:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  427f87:	79 cf                	jns    427f58 <capture_to_close+0x20>
  427f89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427f8d:	48 8b 40 18          	mov    0x18(%rax),%rax
  427f91:	be bb 14 44 00       	mov    $0x4414bb,%esi
  427f96:	48 89 c7             	mov    %rax,%rdi
  427f99:	b8 00 00 00 00       	mov    $0x0,%eax
  427f9e:	e8 4d e2 fd ff       	callq  4061f0 <luaL_error>
  427fa3:	c9                   	leaveq 
  427fa4:	c3                   	retq   

0000000000427fa5 <classend>:
  427fa5:	55                   	push   %rbp
  427fa6:	48 89 e5             	mov    %rsp,%rbp
  427fa9:	48 83 ec 10          	sub    $0x10,%rsp
  427fad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427fb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  427fb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427fb9:	48 8d 50 01          	lea    0x1(%rax),%rdx
  427fbd:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  427fc1:	0f b6 00             	movzbl (%rax),%eax
  427fc4:	0f be c0             	movsbl %al,%eax
  427fc7:	83 f8 25             	cmp    $0x25,%eax
  427fca:	74 0a                	je     427fd6 <classend+0x31>
  427fcc:	83 f8 5b             	cmp    $0x5b,%eax
  427fcf:	74 43                	je     428014 <classend+0x6f>
  427fd1:	e9 ba 00 00 00       	jmpq   428090 <classend+0xeb>
  427fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427fda:	48 8b 40 10          	mov    0x10(%rax),%rax
  427fde:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  427fe2:	0f 94 c0             	sete   %al
  427fe5:	0f b6 c0             	movzbl %al,%eax
  427fe8:	48 85 c0             	test   %rax,%rax
  427feb:	74 1a                	je     428007 <classend+0x62>
  427fed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  427ff1:	48 8b 40 18          	mov    0x18(%rax),%rax
  427ff5:	be d8 14 44 00       	mov    $0x4414d8,%esi
  427ffa:	48 89 c7             	mov    %rax,%rdi
  427ffd:	b8 00 00 00 00       	mov    $0x0,%eax
  428002:	e8 e9 e1 fd ff       	callq  4061f0 <luaL_error>
  428007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42800b:	48 83 c0 01          	add    $0x1,%rax
  42800f:	e9 80 00 00 00       	jmpq   428094 <classend+0xef>
  428014:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  428018:	0f b6 00             	movzbl (%rax),%eax
  42801b:	3c 5e                	cmp    $0x5e,%al
  42801d:	75 05                	jne    428024 <classend+0x7f>
  42801f:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  428024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428028:	48 8b 40 10          	mov    0x10(%rax),%rax
  42802c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  428030:	0f 94 c0             	sete   %al
  428033:	0f b6 c0             	movzbl %al,%eax
  428036:	48 85 c0             	test   %rax,%rax
  428039:	74 1a                	je     428055 <classend+0xb0>
  42803b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42803f:	48 8b 40 18          	mov    0x18(%rax),%rax
  428043:	be 00 15 44 00       	mov    $0x441500,%esi
  428048:	48 89 c7             	mov    %rax,%rdi
  42804b:	b8 00 00 00 00       	mov    $0x0,%eax
  428050:	e8 9b e1 fd ff       	callq  4061f0 <luaL_error>
  428055:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  428059:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42805d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  428061:	0f b6 00             	movzbl (%rax),%eax
  428064:	3c 25                	cmp    $0x25,%al
  428066:	75 13                	jne    42807b <classend+0xd6>
  428068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42806c:	48 8b 40 10          	mov    0x10(%rax),%rax
  428070:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  428074:	73 05                	jae    42807b <classend+0xd6>
  428076:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  42807b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42807f:	0f b6 00             	movzbl (%rax),%eax
  428082:	3c 5d                	cmp    $0x5d,%al
  428084:	75 9e                	jne    428024 <classend+0x7f>
  428086:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42808a:	48 83 c0 01          	add    $0x1,%rax
  42808e:	eb 04                	jmp    428094 <classend+0xef>
  428090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  428094:	c9                   	leaveq 
  428095:	c3                   	retq   

0000000000428096 <match_class>:
  428096:	55                   	push   %rbp
  428097:	48 89 e5             	mov    %rsp,%rbp
  42809a:	48 83 ec 20          	sub    $0x20,%rsp
  42809e:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4280a1:	89 75 e8             	mov    %esi,-0x18(%rbp)
  4280a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4280a7:	89 c7                	mov    %eax,%edi
  4280a9:	e8 42 99 fd ff       	callq  4019f0 <tolower@plt>
  4280ae:	83 e8 61             	sub    $0x61,%eax
  4280b1:	83 f8 19             	cmp    $0x19,%eax
  4280b4:	0f 87 92 01 00 00    	ja     42824c <match_class+0x1b6>
  4280ba:	89 c0                	mov    %eax,%eax
  4280bc:	48 8b 04 c5 20 15 44 	mov    0x441520(,%rax,8),%rax
  4280c3:	00 
  4280c4:	ff e0                	jmpq   *%rax
  4280c6:	e8 35 98 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4280cb:	48 8b 00             	mov    (%rax),%rax
  4280ce:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4280d1:	48 63 d2             	movslq %edx,%rdx
  4280d4:	48 01 d2             	add    %rdx,%rdx
  4280d7:	48 01 d0             	add    %rdx,%rax
  4280da:	0f b7 00             	movzwl (%rax),%eax
  4280dd:	0f b7 c0             	movzwl %ax,%eax
  4280e0:	25 00 04 00 00       	and    $0x400,%eax
  4280e5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4280e8:	e9 6d 01 00 00       	jmpq   42825a <match_class+0x1c4>
  4280ed:	e8 0e 98 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4280f2:	48 8b 00             	mov    (%rax),%rax
  4280f5:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4280f8:	48 63 d2             	movslq %edx,%rdx
  4280fb:	48 01 d2             	add    %rdx,%rdx
  4280fe:	48 01 d0             	add    %rdx,%rax
  428101:	0f b7 00             	movzwl (%rax),%eax
  428104:	0f b7 c0             	movzwl %ax,%eax
  428107:	83 e0 02             	and    $0x2,%eax
  42810a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42810d:	e9 48 01 00 00       	jmpq   42825a <match_class+0x1c4>
  428112:	e8 e9 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  428117:	48 8b 00             	mov    (%rax),%rax
  42811a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42811d:	48 63 d2             	movslq %edx,%rdx
  428120:	48 01 d2             	add    %rdx,%rdx
  428123:	48 01 d0             	add    %rdx,%rax
  428126:	0f b7 00             	movzwl (%rax),%eax
  428129:	0f b7 c0             	movzwl %ax,%eax
  42812c:	25 00 08 00 00       	and    $0x800,%eax
  428131:	89 45 fc             	mov    %eax,-0x4(%rbp)
  428134:	e9 21 01 00 00       	jmpq   42825a <match_class+0x1c4>
  428139:	e8 c2 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42813e:	48 8b 00             	mov    (%rax),%rax
  428141:	8b 55 ec             	mov    -0x14(%rbp),%edx
  428144:	48 63 d2             	movslq %edx,%rdx
  428147:	48 01 d2             	add    %rdx,%rdx
  42814a:	48 01 d0             	add    %rdx,%rax
  42814d:	0f b7 00             	movzwl (%rax),%eax
  428150:	0f b7 c0             	movzwl %ax,%eax
  428153:	25 00 80 00 00       	and    $0x8000,%eax
  428158:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42815b:	e9 fa 00 00 00       	jmpq   42825a <match_class+0x1c4>
  428160:	e8 9b 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  428165:	48 8b 00             	mov    (%rax),%rax
  428168:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42816b:	48 63 d2             	movslq %edx,%rdx
  42816e:	48 01 d2             	add    %rdx,%rdx
  428171:	48 01 d0             	add    %rdx,%rax
  428174:	0f b7 00             	movzwl (%rax),%eax
  428177:	0f b7 c0             	movzwl %ax,%eax
  42817a:	25 00 02 00 00       	and    $0x200,%eax
  42817f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  428182:	e9 d3 00 00 00       	jmpq   42825a <match_class+0x1c4>
  428187:	e8 74 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42818c:	48 8b 00             	mov    (%rax),%rax
  42818f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  428192:	48 63 d2             	movslq %edx,%rdx
  428195:	48 01 d2             	add    %rdx,%rdx
  428198:	48 01 d0             	add    %rdx,%rax
  42819b:	0f b7 00             	movzwl (%rax),%eax
  42819e:	0f b7 c0             	movzwl %ax,%eax
  4281a1:	83 e0 04             	and    $0x4,%eax
  4281a4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4281a7:	e9 ae 00 00 00       	jmpq   42825a <match_class+0x1c4>
  4281ac:	e8 4f 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4281b1:	48 8b 00             	mov    (%rax),%rax
  4281b4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4281b7:	48 63 d2             	movslq %edx,%rdx
  4281ba:	48 01 d2             	add    %rdx,%rdx
  4281bd:	48 01 d0             	add    %rdx,%rax
  4281c0:	0f b7 00             	movzwl (%rax),%eax
  4281c3:	0f b7 c0             	movzwl %ax,%eax
  4281c6:	25 00 20 00 00       	and    $0x2000,%eax
  4281cb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4281ce:	e9 87 00 00 00       	jmpq   42825a <match_class+0x1c4>
  4281d3:	e8 28 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4281d8:	48 8b 00             	mov    (%rax),%rax
  4281db:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4281de:	48 63 d2             	movslq %edx,%rdx
  4281e1:	48 01 d2             	add    %rdx,%rdx
  4281e4:	48 01 d0             	add    %rdx,%rax
  4281e7:	0f b7 00             	movzwl (%rax),%eax
  4281ea:	0f b7 c0             	movzwl %ax,%eax
  4281ed:	25 00 01 00 00       	and    $0x100,%eax
  4281f2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4281f5:	eb 63                	jmp    42825a <match_class+0x1c4>
  4281f7:	e8 04 97 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4281fc:	48 8b 00             	mov    (%rax),%rax
  4281ff:	8b 55 ec             	mov    -0x14(%rbp),%edx
  428202:	48 63 d2             	movslq %edx,%rdx
  428205:	48 01 d2             	add    %rdx,%rdx
  428208:	48 01 d0             	add    %rdx,%rax
  42820b:	0f b7 00             	movzwl (%rax),%eax
  42820e:	0f b7 c0             	movzwl %ax,%eax
  428211:	83 e0 08             	and    $0x8,%eax
  428214:	89 45 fc             	mov    %eax,-0x4(%rbp)
  428217:	eb 41                	jmp    42825a <match_class+0x1c4>
  428219:	e8 e2 96 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42821e:	48 8b 00             	mov    (%rax),%rax
  428221:	8b 55 ec             	mov    -0x14(%rbp),%edx
  428224:	48 63 d2             	movslq %edx,%rdx
  428227:	48 01 d2             	add    %rdx,%rdx
  42822a:	48 01 d0             	add    %rdx,%rax
  42822d:	0f b7 00             	movzwl (%rax),%eax
  428230:	0f b7 c0             	movzwl %ax,%eax
  428233:	25 00 10 00 00       	and    $0x1000,%eax
  428238:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42823b:	eb 1d                	jmp    42825a <match_class+0x1c4>
  42823d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  428241:	0f 94 c0             	sete   %al
  428244:	0f b6 c0             	movzbl %al,%eax
  428247:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42824a:	eb 0e                	jmp    42825a <match_class+0x1c4>
  42824c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42824f:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  428252:	0f 94 c0             	sete   %al
  428255:	0f b6 c0             	movzbl %al,%eax
  428258:	eb 32                	jmp    42828c <match_class+0x1f6>
  42825a:	e8 a1 96 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42825f:	48 8b 00             	mov    (%rax),%rax
  428262:	8b 55 e8             	mov    -0x18(%rbp),%edx
  428265:	48 63 d2             	movslq %edx,%rdx
  428268:	48 01 d2             	add    %rdx,%rdx
  42826b:	48 01 d0             	add    %rdx,%rax
  42826e:	0f b7 00             	movzwl (%rax),%eax
  428271:	0f b7 c0             	movzwl %ax,%eax
  428274:	25 00 02 00 00       	and    $0x200,%eax
  428279:	85 c0                	test   %eax,%eax
  42827b:	75 0c                	jne    428289 <match_class+0x1f3>
  42827d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  428281:	0f 94 c0             	sete   %al
  428284:	0f b6 c0             	movzbl %al,%eax
  428287:	eb 03                	jmp    42828c <match_class+0x1f6>
  428289:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42828c:	c9                   	leaveq 
  42828d:	c3                   	retq   

000000000042828e <matchbracketclass>:
  42828e:	55                   	push   %rbp
  42828f:	48 89 e5             	mov    %rsp,%rbp
  428292:	48 83 ec 30          	sub    $0x30,%rsp
  428296:	89 7d ec             	mov    %edi,-0x14(%rbp)
  428299:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42829d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4282a1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4282a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4282ac:	48 83 c0 01          	add    $0x1,%rax
  4282b0:	0f b6 00             	movzbl (%rax),%eax
  4282b3:	3c 5e                	cmp    $0x5e,%al
  4282b5:	0f 85 9d 00 00 00    	jne    428358 <matchbracketclass+0xca>
  4282bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4282c2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4282c7:	e9 8c 00 00 00       	jmpq   428358 <matchbracketclass+0xca>
  4282cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4282d0:	0f b6 00             	movzbl (%rax),%eax
  4282d3:	3c 25                	cmp    $0x25,%al
  4282d5:	75 24                	jne    4282fb <matchbracketclass+0x6d>
  4282d7:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4282dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4282e0:	0f b6 00             	movzbl (%rax),%eax
  4282e3:	0f b6 d0             	movzbl %al,%edx
  4282e6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4282e9:	89 d6                	mov    %edx,%esi
  4282eb:	89 c7                	mov    %eax,%edi
  4282ed:	e8 a4 fd ff ff       	callq  428096 <match_class>
  4282f2:	85 c0                	test   %eax,%eax
  4282f4:	74 62                	je     428358 <matchbracketclass+0xca>
  4282f6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4282f9:	eb 7a                	jmp    428375 <matchbracketclass+0xe7>
  4282fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4282ff:	48 83 c0 01          	add    $0x1,%rax
  428303:	0f b6 00             	movzbl (%rax),%eax
  428306:	3c 2d                	cmp    $0x2d,%al
  428308:	75 3a                	jne    428344 <matchbracketclass+0xb6>
  42830a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42830e:	48 83 c0 02          	add    $0x2,%rax
  428312:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  428316:	76 2c                	jbe    428344 <matchbracketclass+0xb6>
  428318:	48 83 45 e0 02       	addq   $0x2,-0x20(%rbp)
  42831d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428321:	48 83 e8 02          	sub    $0x2,%rax
  428325:	0f b6 00             	movzbl (%rax),%eax
  428328:	0f b6 c0             	movzbl %al,%eax
  42832b:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  42832e:	7c 28                	jl     428358 <matchbracketclass+0xca>
  428330:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428334:	0f b6 00             	movzbl (%rax),%eax
  428337:	0f b6 c0             	movzbl %al,%eax
  42833a:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  42833d:	7f 19                	jg     428358 <matchbracketclass+0xca>
  42833f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428342:	eb 31                	jmp    428375 <matchbracketclass+0xe7>
  428344:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428348:	0f b6 00             	movzbl (%rax),%eax
  42834b:	0f b6 c0             	movzbl %al,%eax
  42834e:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  428351:	75 05                	jne    428358 <matchbracketclass+0xca>
  428353:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428356:	eb 1d                	jmp    428375 <matchbracketclass+0xe7>
  428358:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  42835d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428361:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  428365:	0f 82 61 ff ff ff    	jb     4282cc <matchbracketclass+0x3e>
  42836b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42836f:	0f 94 c0             	sete   %al
  428372:	0f b6 c0             	movzbl %al,%eax
  428375:	c9                   	leaveq 
  428376:	c3                   	retq   

0000000000428377 <singlematch>:
  428377:	55                   	push   %rbp
  428378:	48 89 e5             	mov    %rsp,%rbp
  42837b:	48 83 ec 30          	sub    $0x30,%rsp
  42837f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428383:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428387:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42838b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42838f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428393:	48 8b 40 08          	mov    0x8(%rax),%rax
  428397:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42839b:	72 07                	jb     4283a4 <singlematch+0x2d>
  42839d:	b8 00 00 00 00       	mov    $0x0,%eax
  4283a2:	eb 79                	jmp    42841d <singlematch+0xa6>
  4283a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4283a8:	0f b6 00             	movzbl (%rax),%eax
  4283ab:	0f b6 c0             	movzbl %al,%eax
  4283ae:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4283b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4283b5:	0f b6 00             	movzbl (%rax),%eax
  4283b8:	0f be c0             	movsbl %al,%eax
  4283bb:	83 f8 2e             	cmp    $0x2e,%eax
  4283be:	74 0c                	je     4283cc <singlematch+0x55>
  4283c0:	83 f8 5b             	cmp    $0x5b,%eax
  4283c3:	74 2a                	je     4283ef <singlematch+0x78>
  4283c5:	83 f8 25             	cmp    $0x25,%eax
  4283c8:	74 09                	je     4283d3 <singlematch+0x5c>
  4283ca:	eb 3e                	jmp    42840a <singlematch+0x93>
  4283cc:	b8 01 00 00 00       	mov    $0x1,%eax
  4283d1:	eb 4a                	jmp    42841d <singlematch+0xa6>
  4283d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4283d7:	48 83 c0 01          	add    $0x1,%rax
  4283db:	0f b6 00             	movzbl (%rax),%eax
  4283de:	0f b6 d0             	movzbl %al,%edx
  4283e1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4283e4:	89 d6                	mov    %edx,%esi
  4283e6:	89 c7                	mov    %eax,%edi
  4283e8:	e8 a9 fc ff ff       	callq  428096 <match_class>
  4283ed:	eb 2e                	jmp    42841d <singlematch+0xa6>
  4283ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4283f3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4283f7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4283fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4283fe:	48 89 ce             	mov    %rcx,%rsi
  428401:	89 c7                	mov    %eax,%edi
  428403:	e8 86 fe ff ff       	callq  42828e <matchbracketclass>
  428408:	eb 13                	jmp    42841d <singlematch+0xa6>
  42840a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42840e:	0f b6 00             	movzbl (%rax),%eax
  428411:	0f b6 c0             	movzbl %al,%eax
  428414:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  428417:	0f 94 c0             	sete   %al
  42841a:	0f b6 c0             	movzbl %al,%eax
  42841d:	c9                   	leaveq 
  42841e:	c3                   	retq   

000000000042841f <matchbalance>:
  42841f:	55                   	push   %rbp
  428420:	48 89 e5             	mov    %rsp,%rbp
  428423:	48 83 ec 30          	sub    $0x30,%rsp
  428427:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42842b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42842f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  428433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428437:	48 8b 40 10          	mov    0x10(%rax),%rax
  42843b:	48 83 e8 01          	sub    $0x1,%rax
  42843f:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  428443:	0f 93 c0             	setae  %al
  428446:	0f b6 c0             	movzbl %al,%eax
  428449:	48 85 c0             	test   %rax,%rax
  42844c:	74 1a                	je     428468 <matchbalance+0x49>
  42844e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428452:	48 8b 40 18          	mov    0x18(%rax),%rax
  428456:	be f0 15 44 00       	mov    $0x4415f0,%esi
  42845b:	48 89 c7             	mov    %rax,%rdi
  42845e:	b8 00 00 00 00       	mov    $0x0,%eax
  428463:	e8 88 dd fd ff       	callq  4061f0 <luaL_error>
  428468:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42846c:	0f b6 10             	movzbl (%rax),%edx
  42846f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428473:	0f b6 00             	movzbl (%rax),%eax
  428476:	38 c2                	cmp    %al,%dl
  428478:	74 07                	je     428481 <matchbalance+0x62>
  42847a:	b8 00 00 00 00       	mov    $0x0,%eax
  42847f:	eb 75                	jmp    4284f6 <matchbalance+0xd7>
  428481:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428485:	0f b6 00             	movzbl (%rax),%eax
  428488:	0f be c0             	movsbl %al,%eax
  42848b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42848e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428492:	48 83 c0 01          	add    $0x1,%rax
  428496:	0f b6 00             	movzbl (%rax),%eax
  428499:	0f be c0             	movsbl %al,%eax
  42849c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42849f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4284a6:	eb 36                	jmp    4284de <matchbalance+0xbf>
  4284a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4284ac:	0f b6 00             	movzbl (%rax),%eax
  4284af:	0f be c0             	movsbl %al,%eax
  4284b2:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  4284b5:	75 14                	jne    4284cb <matchbalance+0xac>
  4284b7:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  4284bb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4284bf:	75 1d                	jne    4284de <matchbalance+0xbf>
  4284c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4284c5:	48 83 c0 01          	add    $0x1,%rax
  4284c9:	eb 2b                	jmp    4284f6 <matchbalance+0xd7>
  4284cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4284cf:	0f b6 00             	movzbl (%rax),%eax
  4284d2:	0f be c0             	movsbl %al,%eax
  4284d5:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  4284d8:	75 04                	jne    4284de <matchbalance+0xbf>
  4284da:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4284de:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4284e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4284e7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4284eb:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4284ef:	72 b7                	jb     4284a8 <matchbalance+0x89>
  4284f1:	b8 00 00 00 00       	mov    $0x0,%eax
  4284f6:	c9                   	leaveq 
  4284f7:	c3                   	retq   

00000000004284f8 <max_expand>:
  4284f8:	55                   	push   %rbp
  4284f9:	48 89 e5             	mov    %rsp,%rbp
  4284fc:	48 83 ec 30          	sub    $0x30,%rsp
  428500:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428504:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428508:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42850c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  428510:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  428517:	00 
  428518:	eb 05                	jmp    42851f <max_expand+0x27>
  42851a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42851f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  428523:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428527:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
  42852b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42852f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428537:	48 89 c7             	mov    %rax,%rdi
  42853a:	e8 38 fe ff ff       	callq  428377 <singlematch>
  42853f:	85 c0                	test   %eax,%eax
  428541:	75 d7                	jne    42851a <max_expand+0x22>
  428543:	eb 38                	jmp    42857d <max_expand+0x85>
  428545:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428549:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42854d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  428551:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428555:	48 01 c1             	add    %rax,%rcx
  428558:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42855c:	48 89 ce             	mov    %rcx,%rsi
  42855f:	48 89 c7             	mov    %rax,%rdi
  428562:	e8 a9 02 00 00       	callq  428810 <match>
  428567:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42856b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  428570:	74 06                	je     428578 <max_expand+0x80>
  428572:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  428576:	eb 11                	jmp    428589 <max_expand+0x91>
  428578:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  42857d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  428582:	79 c1                	jns    428545 <max_expand+0x4d>
  428584:	b8 00 00 00 00       	mov    $0x0,%eax
  428589:	c9                   	leaveq 
  42858a:	c3                   	retq   

000000000042858b <min_expand>:
  42858b:	55                   	push   %rbp
  42858c:	48 89 e5             	mov    %rsp,%rbp
  42858f:	48 83 ec 30          	sub    $0x30,%rsp
  428593:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428597:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42859b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42859f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4285a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4285a7:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4285ab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4285af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4285b3:	48 89 ce             	mov    %rcx,%rsi
  4285b6:	48 89 c7             	mov    %rax,%rdi
  4285b9:	e8 52 02 00 00       	callq  428810 <match>
  4285be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4285c2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4285c7:	74 06                	je     4285cf <min_expand+0x44>
  4285c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4285cd:	eb 28                	jmp    4285f7 <min_expand+0x6c>
  4285cf:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4285d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4285d7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4285db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4285df:	48 89 c7             	mov    %rax,%rdi
  4285e2:	e8 90 fd ff ff       	callq  428377 <singlematch>
  4285e7:	85 c0                	test   %eax,%eax
  4285e9:	74 07                	je     4285f2 <min_expand+0x67>
  4285eb:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4285f0:	eb b1                	jmp    4285a3 <min_expand+0x18>
  4285f2:	b8 00 00 00 00       	mov    $0x0,%eax
  4285f7:	c9                   	leaveq 
  4285f8:	c3                   	retq   

00000000004285f9 <start_capture>:
  4285f9:	55                   	push   %rbp
  4285fa:	48 89 e5             	mov    %rsp,%rbp
  4285fd:	48 83 ec 30          	sub    $0x30,%rsp
  428601:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428605:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428609:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42860d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  428610:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428614:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  428618:	0f b6 c0             	movzbl %al,%eax
  42861b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42861e:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
  428622:	7e 1a                	jle    42863e <start_capture+0x45>
  428624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428628:	48 8b 40 18          	mov    0x18(%rax),%rax
  42862c:	be 1f 16 44 00       	mov    $0x44161f,%esi
  428631:	48 89 c7             	mov    %rax,%rdi
  428634:	b8 00 00 00 00       	mov    $0x0,%eax
  428639:	e8 b2 db fd ff       	callq  4061f0 <luaL_error>
  42863e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428642:	8b 55 fc             	mov    -0x4(%rbp),%edx
  428645:	48 63 d2             	movslq %edx,%rdx
  428648:	48 83 c2 02          	add    $0x2,%rdx
  42864c:	48 c1 e2 04          	shl    $0x4,%rdx
  428650:	48 01 d0             	add    %rdx,%rax
  428653:	48 8d 50 08          	lea    0x8(%rax),%rdx
  428657:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42865b:	48 89 02             	mov    %rax,(%rdx)
  42865e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  428661:	48 98                	cltq   
  428663:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  428667:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42866a:	48 63 c9             	movslq %ecx,%rcx
  42866d:	48 83 c1 02          	add    $0x2,%rcx
  428671:	48 c1 e1 04          	shl    $0x4,%rcx
  428675:	48 01 ca             	add    %rcx,%rdx
  428678:	48 83 c2 10          	add    $0x10,%rdx
  42867c:	48 89 02             	mov    %rax,(%rdx)
  42867f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428682:	8d 50 01             	lea    0x1(%rax),%edx
  428685:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428689:	88 50 24             	mov    %dl,0x24(%rax)
  42868c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428690:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  428694:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428698:	48 89 ce             	mov    %rcx,%rsi
  42869b:	48 89 c7             	mov    %rax,%rdi
  42869e:	e8 6d 01 00 00       	callq  428810 <match>
  4286a3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4286a7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4286ac:	75 12                	jne    4286c0 <start_capture+0xc7>
  4286ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4286b2:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  4286b6:	8d 50 ff             	lea    -0x1(%rax),%edx
  4286b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4286bd:	88 50 24             	mov    %dl,0x24(%rax)
  4286c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4286c4:	c9                   	leaveq 
  4286c5:	c3                   	retq   

00000000004286c6 <end_capture>:
  4286c6:	55                   	push   %rbp
  4286c7:	48 89 e5             	mov    %rsp,%rbp
  4286ca:	48 83 ec 30          	sub    $0x30,%rsp
  4286ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4286d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4286d6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4286da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4286de:	48 89 c7             	mov    %rax,%rdi
  4286e1:	e8 52 f8 ff ff       	callq  427f38 <capture_to_close>
  4286e6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4286e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4286ed:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4286f0:	48 63 d2             	movslq %edx,%rdx
  4286f3:	48 83 c2 02          	add    $0x2,%rdx
  4286f7:	48 c1 e2 04          	shl    $0x4,%rdx
  4286fb:	48 01 d0             	add    %rdx,%rax
  4286fe:	48 83 c0 08          	add    $0x8,%rax
  428702:	48 8b 00             	mov    (%rax),%rax
  428705:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428709:	48 29 c2             	sub    %rax,%rdx
  42870c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428710:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  428713:	48 63 c9             	movslq %ecx,%rcx
  428716:	48 83 c1 02          	add    $0x2,%rcx
  42871a:	48 c1 e1 04          	shl    $0x4,%rcx
  42871e:	48 01 c8             	add    %rcx,%rax
  428721:	48 83 c0 10          	add    $0x10,%rax
  428725:	48 89 10             	mov    %rdx,(%rax)
  428728:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42872c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  428730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428734:	48 89 ce             	mov    %rcx,%rsi
  428737:	48 89 c7             	mov    %rax,%rdi
  42873a:	e8 d1 00 00 00       	callq  428810 <match>
  42873f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  428743:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  428748:	75 20                	jne    42876a <end_capture+0xa4>
  42874a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42874e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  428751:	48 63 d2             	movslq %edx,%rdx
  428754:	48 83 c2 02          	add    $0x2,%rdx
  428758:	48 c1 e2 04          	shl    $0x4,%rdx
  42875c:	48 01 d0             	add    %rdx,%rax
  42875f:	48 83 c0 10          	add    $0x10,%rax
  428763:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
  42876a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42876e:	c9                   	leaveq 
  42876f:	c3                   	retq   

0000000000428770 <match_capture>:
  428770:	55                   	push   %rbp
  428771:	48 89 e5             	mov    %rsp,%rbp
  428774:	48 83 ec 30          	sub    $0x30,%rsp
  428778:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42877c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428780:	89 55 dc             	mov    %edx,-0x24(%rbp)
  428783:	8b 55 dc             	mov    -0x24(%rbp),%edx
  428786:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42878a:	89 d6                	mov    %edx,%esi
  42878c:	48 89 c7             	mov    %rax,%rdi
  42878f:	e8 19 f7 ff ff       	callq  427ead <check_capture>
  428794:	89 45 dc             	mov    %eax,-0x24(%rbp)
  428797:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42879b:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42879e:	48 63 d2             	movslq %edx,%rdx
  4287a1:	48 83 c2 02          	add    $0x2,%rdx
  4287a5:	48 c1 e2 04          	shl    $0x4,%rdx
  4287a9:	48 01 d0             	add    %rdx,%rax
  4287ac:	48 83 c0 10          	add    $0x10,%rax
  4287b0:	48 8b 00             	mov    (%rax),%rax
  4287b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4287b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4287bb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4287bf:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  4287c3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4287c7:	77 40                	ja     428809 <match_capture+0x99>
  4287c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4287cd:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4287d0:	48 63 d2             	movslq %edx,%rdx
  4287d3:	48 83 c2 02          	add    $0x2,%rdx
  4287d7:	48 c1 e2 04          	shl    $0x4,%rdx
  4287db:	48 01 d0             	add    %rdx,%rax
  4287de:	48 83 c0 08          	add    $0x8,%rax
  4287e2:	48 8b 00             	mov    (%rax),%rax
  4287e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4287e9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4287ed:	48 89 ce             	mov    %rcx,%rsi
  4287f0:	48 89 c7             	mov    %rax,%rdi
  4287f3:	e8 88 8f fd ff       	callq  401780 <memcmp@plt>
  4287f8:	85 c0                	test   %eax,%eax
  4287fa:	75 0d                	jne    428809 <match_capture+0x99>
  4287fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428804:	48 01 d0             	add    %rdx,%rax
  428807:	eb 05                	jmp    42880e <match_capture+0x9e>
  428809:	b8 00 00 00 00       	mov    $0x0,%eax
  42880e:	c9                   	leaveq 
  42880f:	c3                   	retq   

0000000000428810 <match>:
  428810:	55                   	push   %rbp
  428811:	48 89 e5             	mov    %rsp,%rbp
  428814:	48 83 ec 40          	sub    $0x40,%rsp
  428818:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42881c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  428820:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  428824:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428828:	8b 40 20             	mov    0x20(%rax),%eax
  42882b:	8d 48 ff             	lea    -0x1(%rax),%ecx
  42882e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428832:	89 4a 20             	mov    %ecx,0x20(%rdx)
  428835:	85 c0                	test   %eax,%eax
  428837:	0f 94 c0             	sete   %al
  42883a:	0f b6 c0             	movzbl %al,%eax
  42883d:	48 85 c0             	test   %rax,%rax
  428840:	74 1c                	je     42885e <match+0x4e>
  428842:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428846:	48 8b 40 18          	mov    0x18(%rax),%rax
  42884a:	be 31 16 44 00       	mov    $0x441631,%esi
  42884f:	48 89 c7             	mov    %rax,%rdi
  428852:	b8 00 00 00 00       	mov    $0x0,%eax
  428857:	e8 94 d9 fd ff       	callq  4061f0 <luaL_error>
  42885c:	eb 01                	jmp    42885f <match+0x4f>
  42885e:	90                   	nop
  42885f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428863:	48 8b 40 10          	mov    0x10(%rax),%rax
  428867:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
  42886b:	0f 84 9c 03 00 00    	je     428c0d <match+0x3fd>
  428871:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428875:	0f b6 00             	movzbl (%rax),%eax
  428878:	0f be c0             	movsbl %al,%eax
  42887b:	83 f8 25             	cmp    $0x25,%eax
  42887e:	0f 84 dc 00 00 00    	je     428960 <match+0x150>
  428884:	83 f8 25             	cmp    $0x25,%eax
  428887:	7f 0e                	jg     428897 <match+0x87>
  428889:	83 f8 24             	cmp    $0x24,%eax
  42888c:	0f 84 93 00 00 00    	je     428925 <match+0x115>
  428892:	e9 3e 02 00 00       	jmpq   428ad5 <match+0x2c5>
  428897:	83 f8 28             	cmp    $0x28,%eax
  42889a:	74 0a                	je     4288a6 <match+0x96>
  42889c:	83 f8 29             	cmp    $0x29,%eax
  42889f:	74 60                	je     428901 <match+0xf1>
  4288a1:	e9 2f 02 00 00       	jmpq   428ad5 <match+0x2c5>
  4288a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4288aa:	48 83 c0 01          	add    $0x1,%rax
  4288ae:	0f b6 00             	movzbl (%rax),%eax
  4288b1:	3c 29                	cmp    $0x29,%al
  4288b3:	75 26                	jne    4288db <match+0xcb>
  4288b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4288b9:	48 8d 50 02          	lea    0x2(%rax),%rdx
  4288bd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4288c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4288c5:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
  4288ca:	48 89 c7             	mov    %rax,%rdi
  4288cd:	e8 27 fd ff ff       	callq  4285f9 <start_capture>
  4288d2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4288d6:	e9 33 03 00 00       	jmpq   428c0e <match+0x3fe>
  4288db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4288df:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4288e3:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4288e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4288eb:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  4288f0:	48 89 c7             	mov    %rax,%rdi
  4288f3:	e8 01 fd ff ff       	callq  4285f9 <start_capture>
  4288f8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4288fc:	e9 0d 03 00 00       	jmpq   428c0e <match+0x3fe>
  428901:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428905:	48 8d 50 01          	lea    0x1(%rax),%rdx
  428909:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42890d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428911:	48 89 ce             	mov    %rcx,%rsi
  428914:	48 89 c7             	mov    %rax,%rdi
  428917:	e8 aa fd ff ff       	callq  4286c6 <end_capture>
  42891c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  428920:	e9 e9 02 00 00       	jmpq   428c0e <match+0x3fe>
  428925:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428929:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42892d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428931:	48 8b 40 10          	mov    0x10(%rax),%rax
  428935:	48 39 c2             	cmp    %rax,%rdx
  428938:	0f 85 93 01 00 00    	jne    428ad1 <match+0x2c1>
  42893e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428942:	48 8b 40 08          	mov    0x8(%rax),%rax
  428946:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  42894a:	75 06                	jne    428952 <match+0x142>
  42894c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428950:	eb 05                	jmp    428957 <match+0x147>
  428952:	b8 00 00 00 00       	mov    $0x0,%eax
  428957:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42895b:	e9 ae 02 00 00       	jmpq   428c0e <match+0x3fe>
  428960:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428964:	48 83 c0 01          	add    $0x1,%rax
  428968:	0f b6 00             	movzbl (%rax),%eax
  42896b:	0f be c0             	movsbl %al,%eax
  42896e:	83 f8 62             	cmp    $0x62,%eax
  428971:	74 20                	je     428993 <match+0x183>
  428973:	83 f8 62             	cmp    $0x62,%eax
  428976:	7f 11                	jg     428989 <match+0x179>
  428978:	83 e8 30             	sub    $0x30,%eax
  42897b:	83 f8 09             	cmp    $0x9,%eax
  42897e:	0f 87 50 01 00 00    	ja     428ad4 <match+0x2c4>
  428984:	e9 06 01 00 00       	jmpq   428a8f <match+0x27f>
  428989:	83 f8 66             	cmp    $0x66,%eax
  42898c:	74 39                	je     4289c7 <match+0x1b7>
  42898e:	e9 41 01 00 00       	jmpq   428ad4 <match+0x2c4>
  428993:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428997:	48 8d 50 02          	lea    0x2(%rax),%rdx
  42899b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42899f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4289a3:	48 89 ce             	mov    %rcx,%rsi
  4289a6:	48 89 c7             	mov    %rax,%rdi
  4289a9:	e8 71 fa ff ff       	callq  42841f <matchbalance>
  4289ae:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4289b2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  4289b7:	0f 84 08 01 00 00    	je     428ac5 <match+0x2b5>
  4289bd:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
  4289c2:	e9 98 fe ff ff       	jmpq   42885f <match+0x4f>
  4289c7:	48 83 45 c8 02       	addq   $0x2,-0x38(%rbp)
  4289cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4289d0:	0f b6 00             	movzbl (%rax),%eax
  4289d3:	3c 5b                	cmp    $0x5b,%al
  4289d5:	0f 95 c0             	setne  %al
  4289d8:	0f b6 c0             	movzbl %al,%eax
  4289db:	48 85 c0             	test   %rax,%rax
  4289de:	74 1a                	je     4289fa <match+0x1ea>
  4289e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4289e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  4289e8:	be 48 16 44 00       	mov    $0x441648,%esi
  4289ed:	48 89 c7             	mov    %rax,%rdi
  4289f0:	b8 00 00 00 00       	mov    $0x0,%eax
  4289f5:	e8 f6 d7 fd ff       	callq  4061f0 <luaL_error>
  4289fa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4289fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428a02:	48 89 d6             	mov    %rdx,%rsi
  428a05:	48 89 c7             	mov    %rax,%rdi
  428a08:	e8 98 f5 ff ff       	callq  427fa5 <classend>
  428a0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  428a11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428a15:	48 8b 00             	mov    (%rax),%rax
  428a18:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  428a1c:	74 0d                	je     428a2b <match+0x21b>
  428a1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428a22:	48 83 e8 01          	sub    $0x1,%rax
  428a26:	0f b6 00             	movzbl (%rax),%eax
  428a29:	eb 05                	jmp    428a30 <match+0x220>
  428a2b:	b8 00 00 00 00       	mov    $0x0,%eax
  428a30:	88 45 f7             	mov    %al,-0x9(%rbp)
  428a33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428a37:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  428a3b:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  428a3f:	0f b6 c0             	movzbl %al,%eax
  428a42:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  428a46:	48 89 ce             	mov    %rcx,%rsi
  428a49:	89 c7                	mov    %eax,%edi
  428a4b:	e8 3e f8 ff ff       	callq  42828e <matchbracketclass>
  428a50:	85 c0                	test   %eax,%eax
  428a52:	75 31                	jne    428a85 <match+0x275>
  428a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428a58:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  428a5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428a60:	0f b6 00             	movzbl (%rax),%eax
  428a63:	0f b6 c0             	movzbl %al,%eax
  428a66:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  428a6a:	48 89 ce             	mov    %rcx,%rsi
  428a6d:	89 c7                	mov    %eax,%edi
  428a6f:	e8 1a f8 ff ff       	callq  42828e <matchbracketclass>
  428a74:	85 c0                	test   %eax,%eax
  428a76:	74 0d                	je     428a85 <match+0x275>
  428a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428a7c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  428a80:	e9 da fd ff ff       	jmpq   42885f <match+0x4f>
  428a85:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  428a8c:	00 
  428a8d:	eb 3d                	jmp    428acc <match+0x2bc>
  428a8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428a93:	48 83 c0 01          	add    $0x1,%rax
  428a97:	0f b6 00             	movzbl (%rax),%eax
  428a9a:	0f b6 d0             	movzbl %al,%edx
  428a9d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  428aa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428aa5:	48 89 ce             	mov    %rcx,%rsi
  428aa8:	48 89 c7             	mov    %rax,%rdi
  428aab:	e8 c0 fc ff ff       	callq  428770 <match_capture>
  428ab0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  428ab4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  428ab9:	74 10                	je     428acb <match+0x2bb>
  428abb:	48 83 45 c8 02       	addq   $0x2,-0x38(%rbp)
  428ac0:	e9 9a fd ff ff       	jmpq   42885f <match+0x4f>
  428ac5:	90                   	nop
  428ac6:	e9 43 01 00 00       	jmpq   428c0e <match+0x3fe>
  428acb:	90                   	nop
  428acc:	e9 3d 01 00 00       	jmpq   428c0e <match+0x3fe>
  428ad1:	90                   	nop
  428ad2:	eb 01                	jmp    428ad5 <match+0x2c5>
  428ad4:	90                   	nop
  428ad5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  428ad9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428add:	48 89 d6             	mov    %rdx,%rsi
  428ae0:	48 89 c7             	mov    %rax,%rdi
  428ae3:	e8 bd f4 ff ff       	callq  427fa5 <classend>
  428ae8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  428aec:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  428af0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  428af4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  428af8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428afc:	48 89 c7             	mov    %rax,%rdi
  428aff:	e8 73 f8 ff ff       	callq  428377 <singlematch>
  428b04:	85 c0                	test   %eax,%eax
  428b06:	75 3f                	jne    428b47 <match+0x337>
  428b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b0c:	0f b6 00             	movzbl (%rax),%eax
  428b0f:	3c 2a                	cmp    $0x2a,%al
  428b11:	74 16                	je     428b29 <match+0x319>
  428b13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b17:	0f b6 00             	movzbl (%rax),%eax
  428b1a:	3c 3f                	cmp    $0x3f,%al
  428b1c:	74 0b                	je     428b29 <match+0x319>
  428b1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b22:	0f b6 00             	movzbl (%rax),%eax
  428b25:	3c 2d                	cmp    $0x2d,%al
  428b27:	75 11                	jne    428b3a <match+0x32a>
  428b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b2d:	48 83 c0 01          	add    $0x1,%rax
  428b31:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  428b35:	e9 25 fd ff ff       	jmpq   42885f <match+0x4f>
  428b3a:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  428b41:	00 
  428b42:	e9 c7 00 00 00       	jmpq   428c0e <match+0x3fe>
  428b47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b4b:	0f b6 00             	movzbl (%rax),%eax
  428b4e:	0f be c0             	movsbl %al,%eax
  428b51:	83 f8 2b             	cmp    $0x2b,%eax
  428b54:	74 62                	je     428bb8 <match+0x3a8>
  428b56:	83 f8 2b             	cmp    $0x2b,%eax
  428b59:	7f 0a                	jg     428b65 <match+0x355>
  428b5b:	83 f8 2a             	cmp    $0x2a,%eax
  428b5e:	74 5d                	je     428bbd <match+0x3ad>
  428b60:	e9 94 00 00 00       	jmpq   428bf9 <match+0x3e9>
  428b65:	83 f8 2d             	cmp    $0x2d,%eax
  428b68:	74 71                	je     428bdb <match+0x3cb>
  428b6a:	83 f8 3f             	cmp    $0x3f,%eax
  428b6d:	0f 85 86 00 00 00    	jne    428bf9 <match+0x3e9>
  428b73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428b77:	48 8d 50 01          	lea    0x1(%rax),%rdx
  428b7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428b7f:	48 8d 48 01          	lea    0x1(%rax),%rcx
  428b83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428b87:	48 89 ce             	mov    %rcx,%rsi
  428b8a:	48 89 c7             	mov    %rax,%rdi
  428b8d:	e8 7e fc ff ff       	callq  428810 <match>
  428b92:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  428b96:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  428b9b:	74 0a                	je     428ba7 <match+0x397>
  428b9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428ba1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  428ba5:	eb 64                	jmp    428c0b <match+0x3fb>
  428ba7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428bab:	48 83 c0 01          	add    $0x1,%rax
  428baf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  428bb3:	e9 a7 fc ff ff       	jmpq   42885f <match+0x4f>
  428bb8:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
  428bbd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  428bc1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  428bc5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  428bc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428bcd:	48 89 c7             	mov    %rax,%rdi
  428bd0:	e8 23 f9 ff ff       	callq  4284f8 <max_expand>
  428bd5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  428bd9:	eb 30                	jmp    428c0b <match+0x3fb>
  428bdb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  428bdf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  428be3:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  428be7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428beb:	48 89 c7             	mov    %rax,%rdi
  428bee:	e8 98 f9 ff ff       	callq  42858b <min_expand>
  428bf3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  428bf7:	eb 12                	jmp    428c0b <match+0x3fb>
  428bf9:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
  428bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428c02:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  428c06:	e9 54 fc ff ff       	jmpq   42885f <match+0x4f>
  428c0b:	eb 01                	jmp    428c0e <match+0x3fe>
  428c0d:	90                   	nop
  428c0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428c12:	8b 40 20             	mov    0x20(%rax),%eax
  428c15:	8d 50 01             	lea    0x1(%rax),%edx
  428c18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428c1c:	89 50 20             	mov    %edx,0x20(%rax)
  428c1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428c23:	c9                   	leaveq 
  428c24:	c3                   	retq   

0000000000428c25 <lmemfind>:
  428c25:	55                   	push   %rbp
  428c26:	48 89 e5             	mov    %rsp,%rbp
  428c29:	48 83 ec 30          	sub    $0x30,%rsp
  428c2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428c31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428c35:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  428c39:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  428c3d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  428c42:	75 09                	jne    428c4d <lmemfind+0x28>
  428c44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428c48:	e9 98 00 00 00       	jmpq   428ce5 <lmemfind+0xc0>
  428c4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428c51:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  428c55:	76 0a                	jbe    428c61 <lmemfind+0x3c>
  428c57:	b8 00 00 00 00       	mov    $0x0,%eax
  428c5c:	e9 84 00 00 00       	jmpq   428ce5 <lmemfind+0xc0>
  428c61:	48 83 6d d0 01       	subq   $0x1,-0x30(%rbp)
  428c66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428c6a:	48 29 45 e0          	sub    %rax,-0x20(%rbp)
  428c6e:	eb 42                	jmp    428cb2 <lmemfind+0x8d>
  428c70:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  428c75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428c79:	48 8d 48 01          	lea    0x1(%rax),%rcx
  428c7d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  428c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428c85:	48 89 ce             	mov    %rcx,%rsi
  428c88:	48 89 c7             	mov    %rax,%rdi
  428c8b:	e8 f0 8a fd ff       	callq  401780 <memcmp@plt>
  428c90:	85 c0                	test   %eax,%eax
  428c92:	75 0a                	jne    428c9e <lmemfind+0x79>
  428c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428c98:	48 83 e8 01          	sub    $0x1,%rax
  428c9c:	eb 47                	jmp    428ce5 <lmemfind+0xc0>
  428c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428ca2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
  428ca6:	48 29 45 e0          	sub    %rax,-0x20(%rbp)
  428caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428cae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  428cb2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  428cb7:	74 27                	je     428ce0 <lmemfind+0xbb>
  428cb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  428cbd:	0f b6 00             	movzbl (%rax),%eax
  428cc0:	0f be c8             	movsbl %al,%ecx
  428cc3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428cc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428ccb:	89 ce                	mov    %ecx,%esi
  428ccd:	48 89 c7             	mov    %rax,%rdi
  428cd0:	e8 4b 8c fd ff       	callq  401920 <memchr@plt>
  428cd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  428cd9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  428cde:	75 90                	jne    428c70 <lmemfind+0x4b>
  428ce0:	b8 00 00 00 00       	mov    $0x0,%eax
  428ce5:	c9                   	leaveq 
  428ce6:	c3                   	retq   

0000000000428ce7 <get_onecapture>:
  428ce7:	55                   	push   %rbp
  428ce8:	48 89 e5             	mov    %rsp,%rbp
  428ceb:	48 83 ec 40          	sub    $0x40,%rsp
  428cef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428cf3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  428cf6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  428cfa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  428cfe:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  428d02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428d06:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  428d0a:	0f b6 c0             	movzbl %al,%eax
  428d0d:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  428d10:	7c 47                	jl     428d59 <get_onecapture+0x72>
  428d12:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  428d16:	0f 95 c0             	setne  %al
  428d19:	0f b6 c0             	movzbl %al,%eax
  428d1c:	48 85 c0             	test   %rax,%rax
  428d1f:	74 20                	je     428d41 <get_onecapture+0x5a>
  428d21:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428d24:	8d 50 01             	lea    0x1(%rax),%edx
  428d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428d2b:	48 8b 40 18          	mov    0x18(%rax),%rax
  428d2f:	be a0 14 44 00       	mov    $0x4414a0,%esi
  428d34:	48 89 c7             	mov    %rax,%rdi
  428d37:	b8 00 00 00 00       	mov    $0x0,%eax
  428d3c:	e8 af d4 fd ff       	callq  4061f0 <luaL_error>
  428d41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428d45:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428d49:	48 89 10             	mov    %rdx,(%rax)
  428d4c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428d50:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  428d54:	e9 ba 00 00 00       	jmpq   428e13 <get_onecapture+0x12c>
  428d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428d5d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  428d60:	48 63 d2             	movslq %edx,%rdx
  428d63:	48 83 c2 02          	add    $0x2,%rdx
  428d67:	48 c1 e2 04          	shl    $0x4,%rdx
  428d6b:	48 01 d0             	add    %rdx,%rax
  428d6e:	48 83 c0 10          	add    $0x10,%rax
  428d72:	48 8b 00             	mov    (%rax),%rax
  428d75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  428d79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428d7d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  428d80:	48 63 d2             	movslq %edx,%rdx
  428d83:	48 83 c2 02          	add    $0x2,%rdx
  428d87:	48 c1 e2 04          	shl    $0x4,%rdx
  428d8b:	48 01 d0             	add    %rdx,%rax
  428d8e:	48 83 c0 08          	add    $0x8,%rax
  428d92:	48 8b 10             	mov    (%rax),%rdx
  428d95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  428d99:	48 89 10             	mov    %rdx,(%rax)
  428d9c:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
  428da1:	0f 94 c0             	sete   %al
  428da4:	0f b6 c0             	movzbl %al,%eax
  428da7:	48 85 c0             	test   %rax,%rax
  428daa:	74 1c                	je     428dc8 <get_onecapture+0xe1>
  428dac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428db0:	48 8b 40 18          	mov    0x18(%rax),%rax
  428db4:	be 6b 16 44 00       	mov    $0x44166b,%esi
  428db9:	48 89 c7             	mov    %rax,%rdi
  428dbc:	b8 00 00 00 00       	mov    $0x0,%eax
  428dc1:	e8 2a d4 fd ff       	callq  4061f0 <luaL_error>
  428dc6:	eb 47                	jmp    428e0f <get_onecapture+0x128>
  428dc8:	48 83 7d f8 fe       	cmpq   $0xfffffffffffffffe,-0x8(%rbp)
  428dcd:	75 40                	jne    428e0f <get_onecapture+0x128>
  428dcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428dd3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  428dd6:	48 63 d2             	movslq %edx,%rdx
  428dd9:	48 83 c2 02          	add    $0x2,%rdx
  428ddd:	48 c1 e2 04          	shl    $0x4,%rdx
  428de1:	48 01 d0             	add    %rdx,%rax
  428de4:	48 83 c0 08          	add    $0x8,%rax
  428de8:	48 8b 10             	mov    (%rax),%rdx
  428deb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428def:	48 8b 00             	mov    (%rax),%rax
  428df2:	48 29 c2             	sub    %rax,%rdx
  428df5:	48 89 d0             	mov    %rdx,%rax
  428df8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  428dfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428e00:	48 8b 40 18          	mov    0x18(%rax),%rax
  428e04:	48 89 d6             	mov    %rdx,%rsi
  428e07:	48 89 c7             	mov    %rax,%rdi
  428e0a:	e8 06 9f fd ff       	callq  402d15 <lua_pushinteger>
  428e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428e13:	c9                   	leaveq 
  428e14:	c3                   	retq   

0000000000428e15 <push_onecapture>:
  428e15:	55                   	push   %rbp
  428e16:	48 89 e5             	mov    %rsp,%rbp
  428e19:	48 83 ec 30          	sub    $0x30,%rsp
  428e1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428e21:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  428e24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  428e28:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  428e2c:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  428e30:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  428e34:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428e38:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  428e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428e3f:	49 89 f8             	mov    %rdi,%r8
  428e42:	48 89 c7             	mov    %rax,%rdi
  428e45:	e8 9d fe ff ff       	callq  428ce7 <get_onecapture>
  428e4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  428e4e:	48 83 7d f8 fe       	cmpq   $0xfffffffffffffffe,-0x8(%rbp)
  428e53:	74 1b                	je     428e70 <push_onecapture+0x5b>
  428e55:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  428e59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  428e5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428e61:	48 8b 40 18          	mov    0x18(%rax),%rax
  428e65:	48 89 ce             	mov    %rcx,%rsi
  428e68:	48 89 c7             	mov    %rax,%rdi
  428e6b:	e8 e7 9e fd ff       	callq  402d57 <lua_pushlstring>
  428e70:	90                   	nop
  428e71:	c9                   	leaveq 
  428e72:	c3                   	retq   

0000000000428e73 <push_captures>:
  428e73:	55                   	push   %rbp
  428e74:	48 89 e5             	mov    %rsp,%rbp
  428e77:	48 83 ec 30          	sub    $0x30,%rsp
  428e7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428e7f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428e83:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  428e87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428e8b:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  428e8f:	84 c0                	test   %al,%al
  428e91:	75 07                	jne    428e9a <push_captures+0x27>
  428e93:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  428e98:	75 0d                	jne    428ea7 <push_captures+0x34>
  428e9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428e9e:	0f b6 40 24          	movzbl 0x24(%rax),%eax
  428ea2:	0f b6 c0             	movzbl %al,%eax
  428ea5:	eb 05                	jmp    428eac <push_captures+0x39>
  428ea7:	b8 01 00 00 00       	mov    $0x1,%eax
  428eac:	89 45 f8             	mov    %eax,-0x8(%rbp)
  428eaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428eb3:	48 8b 40 18          	mov    0x18(%rax),%rax
  428eb7:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  428eba:	ba 1f 16 44 00       	mov    $0x44161f,%edx
  428ebf:	89 ce                	mov    %ecx,%esi
  428ec1:	48 89 c7             	mov    %rax,%rdi
  428ec4:	e8 07 d8 fd ff       	callq  4066d0 <luaL_checkstack>
  428ec9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  428ed0:	eb 1b                	jmp    428eed <push_captures+0x7a>
  428ed2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  428ed6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428eda:	8b 75 fc             	mov    -0x4(%rbp),%esi
  428edd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  428ee1:	48 89 c7             	mov    %rax,%rdi
  428ee4:	e8 2c ff ff ff       	callq  428e15 <push_onecapture>
  428ee9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  428eed:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428ef0:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  428ef3:	7c dd                	jl     428ed2 <push_captures+0x5f>
  428ef5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  428ef8:	c9                   	leaveq 
  428ef9:	c3                   	retq   

0000000000428efa <nospecials>:
  428efa:	55                   	push   %rbp
  428efb:	48 89 e5             	mov    %rsp,%rbp
  428efe:	48 83 ec 20          	sub    $0x20,%rsp
  428f02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  428f06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  428f0a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  428f11:	00 
  428f12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  428f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f1a:	48 01 d0             	add    %rdx,%rax
  428f1d:	be 7e 16 44 00       	mov    $0x44167e,%esi
  428f22:	48 89 c7             	mov    %rax,%rdi
  428f25:	e8 66 8b fd ff       	callq  401a90 <strpbrk@plt>
  428f2a:	48 85 c0             	test   %rax,%rax
  428f2d:	74 07                	je     428f36 <nospecials+0x3c>
  428f2f:	b8 00 00 00 00       	mov    $0x0,%eax
  428f34:	eb 34                	jmp    428f6a <nospecials+0x70>
  428f36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  428f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f3e:	48 01 d0             	add    %rdx,%rax
  428f41:	48 89 c7             	mov    %rax,%rdi
  428f44:	e8 27 88 fd ff       	callq  401770 <strlen@plt>
  428f49:	48 89 c2             	mov    %rax,%rdx
  428f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f50:	48 01 d0             	add    %rdx,%rax
  428f53:	48 83 c0 01          	add    $0x1,%rax
  428f57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  428f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f5f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  428f63:	76 ad                	jbe    428f12 <nospecials+0x18>
  428f65:	b8 01 00 00 00       	mov    $0x1,%eax
  428f6a:	c9                   	leaveq 
  428f6b:	c3                   	retq   

0000000000428f6c <prepstate>:
  428f6c:	55                   	push   %rbp
  428f6d:	48 89 e5             	mov    %rsp,%rbp
  428f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  428f74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  428f78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  428f7c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  428f80:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  428f84:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  428f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  428f90:	48 89 50 18          	mov    %rdx,0x18(%rax)
  428f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428f98:	c7 40 20 c8 00 00 00 	movl   $0xc8,0x20(%rax)
  428f9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428fa3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  428fa7:	48 89 10             	mov    %rdx,(%rax)
  428faa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  428fae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  428fb2:	48 01 c2             	add    %rax,%rdx
  428fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428fb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  428fbd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  428fc1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  428fc5:	48 01 c2             	add    %rax,%rdx
  428fc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428fcc:	48 89 50 10          	mov    %rdx,0x10(%rax)
  428fd0:	90                   	nop
  428fd1:	5d                   	pop    %rbp
  428fd2:	c3                   	retq   

0000000000428fd3 <reprepstate>:
  428fd3:	55                   	push   %rbp
  428fd4:	48 89 e5             	mov    %rsp,%rbp
  428fd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  428fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  428fdf:	c6 40 24 00          	movb   $0x0,0x24(%rax)
  428fe3:	90                   	nop
  428fe4:	5d                   	pop    %rbp
  428fe5:	c3                   	retq   

0000000000428fe6 <str_find_aux>:
  428fe6:	55                   	push   %rbp
  428fe7:	48 89 e5             	mov    %rsp,%rbp
  428fea:	53                   	push   %rbx
  428feb:	48 81 ec 88 02 00 00 	sub    $0x288,%rsp
  428ff2:	48 89 bd 78 fd ff ff 	mov    %rdi,-0x288(%rbp)
  428ff9:	89 b5 74 fd ff ff    	mov    %esi,-0x28c(%rbp)
  428fff:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  429003:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  42900a:	be 01 00 00 00       	mov    $0x1,%esi
  42900f:	48 89 c7             	mov    %rax,%rdi
  429012:	e8 b5 d7 fd ff       	callq  4067cc <luaL_checklstring>
  429017:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42901b:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
  42901f:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429026:	be 02 00 00 00       	mov    $0x2,%esi
  42902b:	48 89 c7             	mov    %rax,%rdi
  42902e:	e8 99 d7 fd ff       	callq  4067cc <luaL_checklstring>
  429033:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  429037:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
  42903b:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429042:	ba 01 00 00 00       	mov    $0x1,%edx
  429047:	be 03 00 00 00       	mov    $0x3,%esi
  42904c:	48 89 c7             	mov    %rax,%rdi
  42904f:	e8 92 d9 fd ff       	callq  4069e6 <luaL_optinteger>
  429054:	48 89 de             	mov    %rbx,%rsi
  429057:	48 89 c7             	mov    %rax,%rdi
  42905a:	e8 a7 e2 ff ff       	callq  427306 <posrelatI>
  42905f:	48 83 e8 01          	sub    $0x1,%rax
  429063:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  429067:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42906b:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  42906f:	76 19                	jbe    42908a <str_find_aux+0xa4>
  429071:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429078:	48 89 c7             	mov    %rax,%rdi
  42907b:	e8 25 9c fd ff       	callq  402ca5 <lua_pushnil>
  429080:	b8 01 00 00 00       	mov    $0x1,%eax
  429085:	e9 11 02 00 00       	jmpq   42929b <str_find_aux+0x2b5>
  42908a:	83 bd 74 fd ff ff 00 	cmpl   $0x0,-0x28c(%rbp)
  429091:	0f 84 b5 00 00 00    	je     42914c <str_find_aux+0x166>
  429097:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  42909e:	be 04 00 00 00       	mov    $0x4,%esi
  4290a3:	48 89 c7             	mov    %rax,%rdi
  4290a6:	e8 72 98 fd ff       	callq  40291d <lua_toboolean>
  4290ab:	85 c0                	test   %eax,%eax
  4290ad:	75 1b                	jne    4290ca <str_find_aux+0xe4>
  4290af:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  4290b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4290b7:	48 89 d6             	mov    %rdx,%rsi
  4290ba:	48 89 c7             	mov    %rax,%rdi
  4290bd:	e8 38 fe ff ff       	callq  428efa <nospecials>
  4290c2:	85 c0                	test   %eax,%eax
  4290c4:	0f 84 82 00 00 00    	je     42914c <str_find_aux+0x166>
  4290ca:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4290ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4290d2:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
  4290d6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4290da:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4290de:	48 8d 3c 16          	lea    (%rsi,%rdx,1),%rdi
  4290e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4290e6:	48 89 c6             	mov    %rax,%rsi
  4290e9:	e8 37 fb ff ff       	callq  428c25 <lmemfind>
  4290ee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4290f2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  4290f7:	0f 84 89 01 00 00    	je     429286 <str_find_aux+0x2a0>
  4290fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429101:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  429105:	48 8d 50 01          	lea    0x1(%rax),%rdx
  429109:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429110:	48 89 d6             	mov    %rdx,%rsi
  429113:	48 89 c7             	mov    %rax,%rdi
  429116:	e8 fa 9b fd ff       	callq  402d15 <lua_pushinteger>
  42911b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42911f:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  429123:	48 89 c2             	mov    %rax,%rdx
  429126:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42912a:	48 01 d0             	add    %rdx,%rax
  42912d:	48 89 c2             	mov    %rax,%rdx
  429130:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429137:	48 89 d6             	mov    %rdx,%rsi
  42913a:	48 89 c7             	mov    %rax,%rdi
  42913d:	e8 d3 9b fd ff       	callq  402d15 <lua_pushinteger>
  429142:	b8 02 00 00 00       	mov    $0x2,%eax
  429147:	e9 4f 01 00 00       	jmpq   42929b <str_find_aux+0x2b5>
  42914c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429150:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429154:	48 01 d0             	add    %rdx,%rax
  429157:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42915b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42915f:	0f b6 00             	movzbl (%rax),%eax
  429162:	3c 5e                	cmp    $0x5e,%al
  429164:	0f 94 c0             	sete   %al
  429167:	0f b6 c0             	movzbl %al,%eax
  42916a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42916d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  429171:	74 11                	je     429184 <str_find_aux+0x19e>
  429173:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  429178:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42917c:	48 83 e8 01          	sub    $0x1,%rax
  429180:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  429184:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
  429188:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  42918c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  429190:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429194:	48 8b b5 78 fd ff ff 	mov    -0x288(%rbp),%rsi
  42919b:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4291a2:	4d 89 c1             	mov    %r8,%r9
  4291a5:	49 89 f8             	mov    %rdi,%r8
  4291a8:	48 89 c7             	mov    %rax,%rdi
  4291ab:	e8 bc fd ff ff       	callq  428f6c <prepstate>
  4291b0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4291b7:	48 89 c7             	mov    %rax,%rdi
  4291ba:	e8 14 fe ff ff       	callq  428fd3 <reprepstate>
  4291bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4291c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4291c7:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4291ce:	48 89 ce             	mov    %rcx,%rsi
  4291d1:	48 89 c7             	mov    %rax,%rdi
  4291d4:	e8 37 f6 ff ff       	callq  428810 <match>
  4291d9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4291dd:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  4291e2:	74 7e                	je     429262 <str_find_aux+0x27c>
  4291e4:	83 bd 74 fd ff ff 00 	cmpl   $0x0,-0x28c(%rbp)
  4291eb:	74 59                	je     429246 <str_find_aux+0x260>
  4291ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4291f1:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  4291f5:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4291f9:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  429200:	48 89 d6             	mov    %rdx,%rsi
  429203:	48 89 c7             	mov    %rax,%rdi
  429206:	e8 0a 9b fd ff       	callq  402d15 <lua_pushinteger>
  42920b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42920f:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  429213:	48 89 c2             	mov    %rax,%rdx
  429216:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  42921d:	48 89 d6             	mov    %rdx,%rsi
  429220:	48 89 c7             	mov    %rax,%rdi
  429223:	e8 ed 9a fd ff       	callq  402d15 <lua_pushinteger>
  429228:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  42922f:	ba 00 00 00 00       	mov    $0x0,%edx
  429234:	be 00 00 00 00       	mov    $0x0,%esi
  429239:	48 89 c7             	mov    %rax,%rdi
  42923c:	e8 32 fc ff ff       	callq  428e73 <push_captures>
  429241:	83 c0 02             	add    $0x2,%eax
  429244:	eb 55                	jmp    42929b <str_find_aux+0x2b5>
  429246:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42924a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42924e:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  429255:	48 89 ce             	mov    %rcx,%rsi
  429258:	48 89 c7             	mov    %rax,%rdi
  42925b:	e8 13 fc ff ff       	callq  428e73 <push_captures>
  429260:	eb 39                	jmp    42929b <str_find_aux+0x2b5>
  429262:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429266:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42926a:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42926e:	48 8b 95 88 fd ff ff 	mov    -0x278(%rbp),%rdx
  429275:	48 39 d0             	cmp    %rdx,%rax
  429278:	73 0d                	jae    429287 <str_find_aux+0x2a1>
  42927a:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  42927e:	0f 84 2c ff ff ff    	je     4291b0 <str_find_aux+0x1ca>
  429284:	eb 01                	jmp    429287 <str_find_aux+0x2a1>
  429286:	90                   	nop
  429287:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  42928e:	48 89 c7             	mov    %rax,%rdi
  429291:	e8 0f 9a fd ff       	callq  402ca5 <lua_pushnil>
  429296:	b8 01 00 00 00       	mov    $0x1,%eax
  42929b:	48 81 c4 88 02 00 00 	add    $0x288,%rsp
  4292a2:	5b                   	pop    %rbx
  4292a3:	5d                   	pop    %rbp
  4292a4:	c3                   	retq   

00000000004292a5 <str_find>:
  4292a5:	55                   	push   %rbp
  4292a6:	48 89 e5             	mov    %rsp,%rbp
  4292a9:	48 83 ec 10          	sub    $0x10,%rsp
  4292ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4292b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292b5:	be 01 00 00 00       	mov    $0x1,%esi
  4292ba:	48 89 c7             	mov    %rax,%rdi
  4292bd:	e8 24 fd ff ff       	callq  428fe6 <str_find_aux>
  4292c2:	c9                   	leaveq 
  4292c3:	c3                   	retq   

00000000004292c4 <str_match>:
  4292c4:	55                   	push   %rbp
  4292c5:	48 89 e5             	mov    %rsp,%rbp
  4292c8:	48 83 ec 10          	sub    $0x10,%rsp
  4292cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4292d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292d4:	be 00 00 00 00       	mov    $0x0,%esi
  4292d9:	48 89 c7             	mov    %rax,%rdi
  4292dc:	e8 05 fd ff ff       	callq  428fe6 <str_find_aux>
  4292e1:	c9                   	leaveq 
  4292e2:	c3                   	retq   

00000000004292e3 <gmatch_aux>:
  4292e3:	55                   	push   %rbp
  4292e4:	48 89 e5             	mov    %rsp,%rbp
  4292e7:	48 83 ec 30          	sub    $0x30,%rsp
  4292eb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4292ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4292f3:	be d5 b9 f0 ff       	mov    $0xfff0b9d5,%esi
  4292f8:	48 89 c7             	mov    %rax,%rdi
  4292fb:	e8 b7 98 fd ff       	callq  402bb7 <lua_touserdata>
  429300:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  429304:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429308:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42930c:	48 89 50 30          	mov    %rdx,0x30(%rax)
  429310:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429314:	48 8b 00             	mov    (%rax),%rax
  429317:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42931b:	e9 85 00 00 00       	jmpq   4293a5 <gmatch_aux+0xc2>
  429320:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429324:	48 83 c0 18          	add    $0x18,%rax
  429328:	48 89 c7             	mov    %rax,%rdi
  42932b:	e8 a3 fc ff ff       	callq  428fd3 <reprepstate>
  429330:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429334:	48 8b 50 08          	mov    0x8(%rax),%rdx
  429338:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42933c:	48 8d 48 18          	lea    0x18(%rax),%rcx
  429340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429344:	48 89 c6             	mov    %rax,%rsi
  429347:	48 89 cf             	mov    %rcx,%rdi
  42934a:	e8 c1 f4 ff ff       	callq  428810 <match>
  42934f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  429353:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  429358:	74 46                	je     4293a0 <gmatch_aux+0xbd>
  42935a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42935e:	48 8b 40 10          	mov    0x10(%rax),%rax
  429362:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  429366:	74 38                	je     4293a0 <gmatch_aux+0xbd>
  429368:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42936c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429370:	48 89 50 10          	mov    %rdx,0x10(%rax)
  429374:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429378:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42937c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429380:	48 89 10             	mov    %rdx,(%rax)
  429383:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429387:	48 8d 48 18          	lea    0x18(%rax),%rcx
  42938b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42938f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429393:	48 89 c6             	mov    %rax,%rsi
  429396:	48 89 cf             	mov    %rcx,%rdi
  429399:	e8 d5 fa ff ff       	callq  428e73 <push_captures>
  42939e:	eb 1c                	jmp    4293bc <gmatch_aux+0xd9>
  4293a0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  4293a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4293a9:	48 8b 40 20          	mov    0x20(%rax),%rax
  4293ad:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4293b1:	0f 86 69 ff ff ff    	jbe    429320 <gmatch_aux+0x3d>
  4293b7:	b8 00 00 00 00       	mov    $0x0,%eax
  4293bc:	c9                   	leaveq 
  4293bd:	c3                   	retq   

00000000004293be <gmatch>:
  4293be:	55                   	push   %rbp
  4293bf:	48 89 e5             	mov    %rsp,%rbp
  4293c2:	53                   	push   %rbx
  4293c3:	48 83 ec 48          	sub    $0x48,%rsp
  4293c7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  4293cb:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  4293cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4293d3:	be 01 00 00 00       	mov    $0x1,%esi
  4293d8:	48 89 c7             	mov    %rax,%rdi
  4293db:	e8 ec d3 fd ff       	callq  4067cc <luaL_checklstring>
  4293e0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4293e4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  4293e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4293ec:	be 02 00 00 00       	mov    $0x2,%esi
  4293f1:	48 89 c7             	mov    %rax,%rdi
  4293f4:	e8 d3 d3 fd ff       	callq  4067cc <luaL_checklstring>
  4293f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4293fd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  429401:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  429405:	ba 01 00 00 00       	mov    $0x1,%edx
  42940a:	be 03 00 00 00       	mov    $0x3,%esi
  42940f:	48 89 c7             	mov    %rax,%rdi
  429412:	e8 cf d5 fd ff       	callq  4069e6 <luaL_optinteger>
  429417:	48 89 de             	mov    %rbx,%rsi
  42941a:	48 89 c7             	mov    %rax,%rdi
  42941d:	e8 e4 de ff ff       	callq  427306 <posrelatI>
  429422:	48 83 e8 01          	sub    $0x1,%rax
  429426:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42942a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42942e:	be 02 00 00 00       	mov    $0x2,%esi
  429433:	48 89 c7             	mov    %rax,%rdi
  429436:	e8 49 8b fd ff       	callq  401f84 <lua_settop>
  42943b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42943f:	ba 00 00 00 00       	mov    $0x0,%edx
  429444:	be 40 02 00 00       	mov    $0x240,%esi
  429449:	48 89 c7             	mov    %rax,%rdi
  42944c:	e8 b5 be fd ff       	callq  405306 <lua_newuserdatauv>
  429451:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  429455:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429459:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  42945d:	76 0c                	jbe    42946b <gmatch+0xad>
  42945f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429463:	48 83 c0 01          	add    $0x1,%rax
  429467:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42946b:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
  42946f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  429473:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429477:	48 8d 78 18          	lea    0x18(%rax),%rdi
  42947b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42947f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429483:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  429487:	4d 89 c1             	mov    %r8,%r9
  42948a:	49 89 f0             	mov    %rsi,%r8
  42948d:	48 89 c6             	mov    %rax,%rsi
  429490:	e8 d7 fa ff ff       	callq  428f6c <prepstate>
  429495:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42949d:	48 01 c2             	add    %rax,%rdx
  4294a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4294a4:	48 89 10             	mov    %rdx,(%rax)
  4294a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4294ab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4294af:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4294b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4294b7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  4294be:	00 
  4294bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4294c3:	ba 03 00 00 00       	mov    $0x3,%edx
  4294c8:	be e3 92 42 00       	mov    $0x4292e3,%esi
  4294cd:	48 89 c7             	mov    %rax,%rdi
  4294d0:	e8 16 9b fd ff       	callq  402feb <lua_pushcclosure>
  4294d5:	b8 01 00 00 00       	mov    $0x1,%eax
  4294da:	48 83 c4 48          	add    $0x48,%rsp
  4294de:	5b                   	pop    %rbx
  4294df:	5d                   	pop    %rbp
  4294e0:	c3                   	retq   

00000000004294e1 <add_s>:
  4294e1:	55                   	push   %rbp
  4294e2:	48 89 e5             	mov    %rsp,%rbp
  4294e5:	48 83 ec 50          	sub    $0x50,%rsp
  4294e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4294ed:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4294f1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  4294f5:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  4294f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4294fd:	48 8b 40 18          	mov    0x18(%rax),%rax
  429501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  429505:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  429509:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42950d:	be 03 00 00 00       	mov    $0x3,%esi
  429512:	48 89 c7             	mov    %rax,%rdi
  429515:	e8 53 94 fd ff       	callq  40296d <lua_tolstring>
  42951a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42951e:	e9 72 01 00 00       	jmpq   429695 <add_s+0x1b4>
  429523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429527:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  42952b:	48 89 c2             	mov    %rax,%rdx
  42952e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  429532:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429536:	48 89 ce             	mov    %rcx,%rsi
  429539:	48 89 c7             	mov    %rax,%rdi
  42953c:	e8 61 d8 fd ff       	callq  406da2 <luaL_addlstring>
  429541:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  429546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42954a:	0f b6 00             	movzbl (%rax),%eax
  42954d:	3c 25                	cmp    $0x25,%al
  42954f:	75 57                	jne    4295a8 <add_s+0xc7>
  429551:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429555:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429559:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42955d:	48 8b 40 08          	mov    0x8(%rax),%rax
  429561:	48 39 c2             	cmp    %rax,%rdx
  429564:	72 14                	jb     42957a <add_s+0x99>
  429566:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42956a:	be 01 00 00 00       	mov    $0x1,%esi
  42956f:	48 89 c7             	mov    %rax,%rdi
  429572:	e8 01 d8 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429577:	48 85 c0             	test   %rax,%rax
  42957a:	90                   	nop
  42957b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42957f:	48 8b 30             	mov    (%rax),%rsi
  429582:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429586:	48 8b 40 10          	mov    0x10(%rax),%rax
  42958a:	48 8d 48 01          	lea    0x1(%rax),%rcx
  42958e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  429592:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429596:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  42959a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42959e:	0f b6 00             	movzbl (%rax),%eax
  4295a1:	88 02                	mov    %al,(%rdx)
  4295a3:	e9 ca 00 00 00       	jmpq   429672 <add_s+0x191>
  4295a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4295ac:	0f b6 00             	movzbl (%rax),%eax
  4295af:	3c 30                	cmp    $0x30,%al
  4295b1:	75 23                	jne    4295d6 <add_s+0xf5>
  4295b3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4295b7:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
  4295bb:	48 89 c2             	mov    %rax,%rdx
  4295be:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4295c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4295c6:	48 89 ce             	mov    %rcx,%rsi
  4295c9:	48 89 c7             	mov    %rax,%rdi
  4295cc:	e8 d1 d7 fd ff       	callq  406da2 <luaL_addlstring>
  4295d1:	e9 9c 00 00 00       	jmpq   429672 <add_s+0x191>
  4295d6:	e8 25 83 fd ff       	callq  401900 <__ctype_b_loc@plt>
  4295db:	48 8b 10             	mov    (%rax),%rdx
  4295de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4295e2:	0f b6 00             	movzbl (%rax),%eax
  4295e5:	0f b6 c0             	movzbl %al,%eax
  4295e8:	48 01 c0             	add    %rax,%rax
  4295eb:	48 01 d0             	add    %rdx,%rax
  4295ee:	0f b7 00             	movzwl (%rax),%eax
  4295f1:	0f b7 c0             	movzwl %ax,%eax
  4295f4:	25 00 08 00 00       	and    $0x800,%eax
  4295f9:	85 c0                	test   %eax,%eax
  4295fb:	74 5a                	je     429657 <add_s+0x176>
  4295fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429601:	0f b6 00             	movzbl (%rax),%eax
  429604:	0f be c0             	movsbl %al,%eax
  429607:	8d 70 cf             	lea    -0x31(%rax),%esi
  42960a:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  42960e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  429612:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  429616:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42961a:	49 89 f8             	mov    %rdi,%r8
  42961d:	48 89 c7             	mov    %rax,%rdi
  429620:	e8 c2 f6 ff ff       	callq  428ce7 <get_onecapture>
  429625:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  429629:	48 83 7d e0 fe       	cmpq   $0xfffffffffffffffe,-0x20(%rbp)
  42962e:	75 0e                	jne    42963e <add_s+0x15d>
  429630:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429634:	48 89 c7             	mov    %rax,%rdi
  429637:	e8 be d8 fd ff       	callq  406efa <luaL_addvalue>
  42963c:	eb 34                	jmp    429672 <add_s+0x191>
  42963e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429642:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  429646:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42964a:	48 89 ce             	mov    %rcx,%rsi
  42964d:	48 89 c7             	mov    %rax,%rdi
  429650:	e8 4d d7 fd ff       	callq  406da2 <luaL_addlstring>
  429655:	eb 1b                	jmp    429672 <add_s+0x191>
  429657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42965b:	ba 25 00 00 00       	mov    $0x25,%edx
  429660:	be 90 16 44 00       	mov    $0x441690,%esi
  429665:	48 89 c7             	mov    %rax,%rdi
  429668:	b8 00 00 00 00       	mov    $0x0,%eax
  42966d:	e8 7e cb fd ff       	callq  4061f0 <luaL_error>
  429672:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  429676:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42967a:	48 83 c2 01          	add    $0x1,%rdx
  42967e:	48 2b 55 f8          	sub    -0x8(%rbp),%rdx
  429682:	48 29 d0             	sub    %rdx,%rax
  429685:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  429689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42968d:	48 83 c0 01          	add    $0x1,%rax
  429691:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  429695:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42969d:	be 25 00 00 00       	mov    $0x25,%esi
  4296a2:	48 89 c7             	mov    %rax,%rdi
  4296a5:	e8 76 82 fd ff       	callq  401920 <memchr@plt>
  4296aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4296ae:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4296b3:	0f 85 6a fe ff ff    	jne    429523 <add_s+0x42>
  4296b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4296bd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4296c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4296c5:	48 89 ce             	mov    %rcx,%rsi
  4296c8:	48 89 c7             	mov    %rax,%rdi
  4296cb:	e8 d2 d6 fd ff       	callq  406da2 <luaL_addlstring>
  4296d0:	90                   	nop
  4296d1:	c9                   	leaveq 
  4296d2:	c3                   	retq   

00000000004296d3 <add_value>:
  4296d3:	55                   	push   %rbp
  4296d4:	48 89 e5             	mov    %rsp,%rbp
  4296d7:	48 83 ec 40          	sub    $0x40,%rsp
  4296db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4296df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4296e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4296e7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4296eb:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
  4296ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4296f3:	48 8b 40 18          	mov    0x18(%rax),%rax
  4296f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4296fb:	83 7d cc 05          	cmpl   $0x5,-0x34(%rbp)
  4296ff:	74 52                	je     429753 <add_value+0x80>
  429701:	83 7d cc 06          	cmpl   $0x6,-0x34(%rbp)
  429705:	75 78                	jne    42977f <add_value+0xac>
  429707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42970b:	be 03 00 00 00       	mov    $0x3,%esi
  429710:	48 89 c7             	mov    %rax,%rdi
  429713:	e8 f7 8b fd ff       	callq  40230f <lua_pushvalue>
  429718:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42971c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  429720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429724:	48 89 ce             	mov    %rcx,%rsi
  429727:	48 89 c7             	mov    %rax,%rdi
  42972a:	e8 44 f7 ff ff       	callq  428e73 <push_captures>
  42972f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  429732:	8b 75 f4             	mov    -0xc(%rbp),%esi
  429735:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429739:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42973f:	b9 00 00 00 00       	mov    $0x0,%ecx
  429744:	ba 01 00 00 00       	mov    $0x1,%edx
  429749:	48 89 c7             	mov    %rax,%rdi
  42974c:	e8 5d ad fd ff       	callq  4044ae <lua_callk>
  429751:	eb 4e                	jmp    4297a1 <add_value+0xce>
  429753:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  429757:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42975b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42975f:	be 00 00 00 00       	mov    $0x0,%esi
  429764:	48 89 c7             	mov    %rax,%rdi
  429767:	e8 a9 f6 ff ff       	callq  428e15 <push_onecapture>
  42976c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429770:	be 03 00 00 00       	mov    $0x3,%esi
  429775:	48 89 c7             	mov    %rax,%rdi
  429778:	e8 36 9c fd ff       	callq  4033b3 <lua_gettable>
  42977d:	eb 22                	jmp    4297a1 <add_value+0xce>
  42977f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  429783:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429787:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42978b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42978f:	48 89 c7             	mov    %rax,%rdi
  429792:	e8 4a fd ff ff       	callq  4294e1 <add_s>
  429797:	b8 01 00 00 00       	mov    $0x1,%eax
  42979c:	e9 b6 00 00 00       	jmpq   429857 <add_value+0x184>
  4297a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4297a5:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4297aa:	48 89 c7             	mov    %rax,%rdi
  4297ad:	e8 6b 91 fd ff       	callq  40291d <lua_toboolean>
  4297b2:	85 c0                	test   %eax,%eax
  4297b4:	75 36                	jne    4297ec <add_value+0x119>
  4297b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4297ba:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4297bf:	48 89 c7             	mov    %rax,%rdi
  4297c2:	e8 bd 87 fd ff       	callq  401f84 <lua_settop>
  4297c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4297cb:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  4297cf:	48 89 c2             	mov    %rax,%rdx
  4297d2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4297d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4297da:	48 89 ce             	mov    %rcx,%rsi
  4297dd:	48 89 c7             	mov    %rax,%rdi
  4297e0:	e8 bd d5 fd ff       	callq  406da2 <luaL_addlstring>
  4297e5:	b8 00 00 00 00       	mov    $0x0,%eax
  4297ea:	eb 6b                	jmp    429857 <add_value+0x184>
  4297ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4297f0:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4297f5:	48 89 c7             	mov    %rax,%rdi
  4297f8:	e8 cb 8c fd ff       	callq  4024c8 <lua_isstring>
  4297fd:	85 c0                	test   %eax,%eax
  4297ff:	0f 94 c0             	sete   %al
  429802:	0f b6 c0             	movzbl %al,%eax
  429805:	48 85 c0             	test   %rax,%rax
  429808:	74 3c                	je     429846 <add_value+0x173>
  42980a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42980e:	be ff ff ff ff       	mov    $0xffffffff,%esi
  429813:	48 89 c7             	mov    %rax,%rdi
  429816:	e8 58 8b fd ff       	callq  402373 <lua_type>
  42981b:	89 c2                	mov    %eax,%edx
  42981d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429821:	89 d6                	mov    %edx,%esi
  429823:	48 89 c7             	mov    %rax,%rdi
  429826:	e8 a7 8b fd ff       	callq  4023d2 <lua_typename>
  42982b:	48 89 c2             	mov    %rax,%rdx
  42982e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429832:	be c0 16 44 00       	mov    $0x4416c0,%esi
  429837:	48 89 c7             	mov    %rax,%rdi
  42983a:	b8 00 00 00 00       	mov    $0x0,%eax
  42983f:	e8 ac c9 fd ff       	callq  4061f0 <luaL_error>
  429844:	eb 11                	jmp    429857 <add_value+0x184>
  429846:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42984a:	48 89 c7             	mov    %rax,%rdi
  42984d:	e8 a8 d6 fd ff       	callq  406efa <luaL_addvalue>
  429852:	b8 01 00 00 00       	mov    $0x1,%eax
  429857:	c9                   	leaveq 
  429858:	c3                   	retq   

0000000000429859 <str_gsub>:
  429859:	55                   	push   %rbp
  42985a:	48 89 e5             	mov    %rsp,%rbp
  42985d:	48 81 ec b0 06 00 00 	sub    $0x6b0,%rsp
  429864:	48 89 bd 58 f9 ff ff 	mov    %rdi,-0x6a8(%rbp)
  42986b:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  42986f:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  429876:	be 01 00 00 00       	mov    $0x1,%esi
  42987b:	48 89 c7             	mov    %rax,%rdi
  42987e:	e8 49 cf fd ff       	callq  4067cc <luaL_checklstring>
  429883:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  429887:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42988b:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  429892:	be 02 00 00 00       	mov    $0x2,%esi
  429897:	48 89 c7             	mov    %rax,%rdi
  42989a:	e8 2d cf fd ff       	callq  4067cc <luaL_checklstring>
  42989f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4298a3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  4298aa:	00 
  4298ab:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  4298b2:	be 03 00 00 00       	mov    $0x3,%esi
  4298b7:	48 89 c7             	mov    %rax,%rdi
  4298ba:	e8 b4 8a fd ff       	callq  402373 <lua_type>
  4298bf:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4298c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4298c6:	48 83 c0 01          	add    $0x1,%rax
  4298ca:	48 89 c2             	mov    %rax,%rdx
  4298cd:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  4298d4:	be 04 00 00 00       	mov    $0x4,%esi
  4298d9:	48 89 c7             	mov    %rax,%rdi
  4298dc:	e8 05 d1 fd ff       	callq  4069e6 <luaL_optinteger>
  4298e1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4298e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4298e9:	0f b6 00             	movzbl (%rax),%eax
  4298ec:	3c 5e                	cmp    $0x5e,%al
  4298ee:	0f 94 c0             	sete   %al
  4298f1:	0f b6 c0             	movzbl %al,%eax
  4298f4:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4298f7:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  4298fe:	00 
  4298ff:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  429906:	83 7d d8 03          	cmpl   $0x3,-0x28(%rbp)
  42990a:	74 12                	je     42991e <str_gsub+0xc5>
  42990c:	83 7d d8 04          	cmpl   $0x4,-0x28(%rbp)
  429910:	74 0c                	je     42991e <str_gsub+0xc5>
  429912:	83 7d d8 06          	cmpl   $0x6,-0x28(%rbp)
  429916:	74 06                	je     42991e <str_gsub+0xc5>
  429918:	83 7d d8 05          	cmpl   $0x5,-0x28(%rbp)
  42991c:	75 07                	jne    429925 <str_gsub+0xcc>
  42991e:	b8 01 00 00 00       	mov    $0x1,%eax
  429923:	eb 05                	jmp    42992a <str_gsub+0xd1>
  429925:	b8 00 00 00 00       	mov    $0x0,%eax
  42992a:	85 c0                	test   %eax,%eax
  42992c:	0f 95 c0             	setne  %al
  42992f:	0f b6 c0             	movzbl %al,%eax
  429932:	48 85 c0             	test   %rax,%rax
  429935:	75 1b                	jne    429952 <str_gsub+0xf9>
  429937:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  42993e:	ba e1 16 44 00       	mov    $0x4416e1,%edx
  429943:	be 03 00 00 00       	mov    $0x3,%esi
  429948:	48 89 c7             	mov    %rax,%rdi
  42994b:	e8 f9 c6 fd ff       	callq  406049 <luaL_typeerror>
  429950:	85 c0                	test   %eax,%eax
  429952:	90                   	nop
  429953:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
  42995a:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  429961:	48 89 d6             	mov    %rdx,%rsi
  429964:	48 89 c7             	mov    %rax,%rdi
  429967:	e8 1d d6 fd ff       	callq  406f89 <luaL_buffinit>
  42996c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  429970:	74 11                	je     429983 <str_gsub+0x12a>
  429972:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  429977:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42997b:	48 83 e8 01          	sub    $0x1,%rax
  42997f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  429983:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
  429987:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  42998b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42998f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  429993:	48 8b b5 58 f9 ff ff 	mov    -0x6a8(%rbp),%rsi
  42999a:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4299a1:	4d 89 c1             	mov    %r8,%r9
  4299a4:	49 89 f8             	mov    %rdi,%r8
  4299a7:	48 89 c7             	mov    %rax,%rdi
  4299aa:	e8 bd f5 ff ff       	callq  428f6c <prepstate>
  4299af:	e9 e7 00 00 00       	jmpq   429a9b <str_gsub+0x242>
  4299b4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4299bb:	48 89 c7             	mov    %rax,%rdi
  4299be:	e8 10 f6 ff ff       	callq  428fd3 <reprepstate>
  4299c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4299c7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4299cb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4299d2:	48 89 ce             	mov    %rcx,%rsi
  4299d5:	48 89 c7             	mov    %rax,%rdi
  4299d8:	e8 33 ee ff ff       	callq  428810 <match>
  4299dd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4299e1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  4299e6:	74 48                	je     429a30 <str_gsub+0x1d7>
  4299e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4299ec:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  4299f0:	74 3e                	je     429a30 <str_gsub+0x1d7>
  4299f2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4299f7:	8b 7d d8             	mov    -0x28(%rbp),%edi
  4299fa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4299fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  429a02:	48 8d b5 60 f9 ff ff 	lea    -0x6a0(%rbp),%rsi
  429a09:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  429a10:	41 89 f8             	mov    %edi,%r8d
  429a13:	48 89 c7             	mov    %rax,%rdi
  429a16:	e8 b8 fc ff ff       	callq  4296d3 <add_value>
  429a1b:	09 45 dc             	or     %eax,-0x24(%rbp)
  429a1e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429a22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  429a26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429a2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  429a2e:	eb 65                	jmp    429a95 <str_gsub+0x23c>
  429a30:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  429a37:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  429a3b:	73 6e                	jae    429aab <str_gsub+0x252>
  429a3d:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  429a44:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  429a4b:	48 39 c2             	cmp    %rax,%rdx
  429a4e:	72 17                	jb     429a67 <str_gsub+0x20e>
  429a50:	48 8d 85 60 f9 ff ff 	lea    -0x6a0(%rbp),%rax
  429a57:	be 01 00 00 00       	mov    $0x1,%esi
  429a5c:	48 89 c7             	mov    %rax,%rdi
  429a5f:	e8 14 d3 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429a64:	48 85 c0             	test   %rax,%rax
  429a67:	90                   	nop
  429a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429a6c:	48 8d 50 01          	lea    0x1(%rax),%rdx
  429a70:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  429a74:	48 8b b5 60 f9 ff ff 	mov    -0x6a0(%rbp),%rsi
  429a7b:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  429a82:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  429a86:	48 89 8d 70 f9 ff ff 	mov    %rcx,-0x690(%rbp)
  429a8d:	48 01 f2             	add    %rsi,%rdx
  429a90:	0f b6 00             	movzbl (%rax),%eax
  429a93:	88 02                	mov    %al,(%rdx)
  429a95:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  429a99:	75 13                	jne    429aae <str_gsub+0x255>
  429a9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429a9f:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  429aa3:	0f 8c 0b ff ff ff    	jl     4299b4 <str_gsub+0x15b>
  429aa9:	eb 04                	jmp    429aaf <str_gsub+0x256>
  429aab:	90                   	nop
  429aac:	eb 01                	jmp    429aaf <str_gsub+0x256>
  429aae:	90                   	nop
  429aaf:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  429ab3:	75 16                	jne    429acb <str_gsub+0x272>
  429ab5:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  429abc:	be 01 00 00 00       	mov    $0x1,%esi
  429ac1:	48 89 c7             	mov    %rax,%rdi
  429ac4:	e8 46 88 fd ff       	callq  40230f <lua_pushvalue>
  429ac9:	eb 33                	jmp    429afe <str_gsub+0x2a5>
  429acb:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  429ad2:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  429ad6:	48 89 c2             	mov    %rax,%rdx
  429ad9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  429add:	48 8d 85 60 f9 ff ff 	lea    -0x6a0(%rbp),%rax
  429ae4:	48 89 ce             	mov    %rcx,%rsi
  429ae7:	48 89 c7             	mov    %rax,%rdi
  429aea:	e8 b3 d2 fd ff       	callq  406da2 <luaL_addlstring>
  429aef:	48 8d 85 60 f9 ff ff 	lea    -0x6a0(%rbp),%rax
  429af6:	48 89 c7             	mov    %rax,%rdi
  429af9:	e8 41 d3 fd ff       	callq  406e3f <luaL_pushresult>
  429afe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429b02:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  429b09:	48 89 d6             	mov    %rdx,%rsi
  429b0c:	48 89 c7             	mov    %rax,%rdi
  429b0f:	e8 01 92 fd ff       	callq  402d15 <lua_pushinteger>
  429b14:	b8 02 00 00 00       	mov    $0x2,%eax
  429b19:	c9                   	leaveq 
  429b1a:	c3                   	retq   

0000000000429b1b <addquoted>:
  429b1b:	55                   	push   %rbp
  429b1c:	48 89 e5             	mov    %rsp,%rbp
  429b1f:	48 83 ec 30          	sub    $0x30,%rsp
  429b23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  429b27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  429b2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  429b2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429b33:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429b37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429b3b:	48 8b 40 08          	mov    0x8(%rax),%rax
  429b3f:	48 39 c2             	cmp    %rax,%rdx
  429b42:	72 14                	jb     429b58 <addquoted+0x3d>
  429b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429b48:	be 01 00 00 00       	mov    $0x1,%esi
  429b4d:	48 89 c7             	mov    %rax,%rdi
  429b50:	e8 23 d2 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429b55:	48 85 c0             	test   %rax,%rax
  429b58:	90                   	nop
  429b59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429b5d:	48 8b 30             	mov    (%rax),%rsi
  429b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429b64:	48 8b 40 10          	mov    0x10(%rax),%rax
  429b68:	48 8d 48 01          	lea    0x1(%rax),%rcx
  429b6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429b70:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429b74:	48 01 f0             	add    %rsi,%rax
  429b77:	c6 00 22             	movb   $0x22,(%rax)
  429b7a:	e9 d7 01 00 00       	jmpq   429d56 <addquoted+0x23b>
  429b7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429b83:	0f b6 00             	movzbl (%rax),%eax
  429b86:	3c 22                	cmp    $0x22,%al
  429b88:	74 1a                	je     429ba4 <addquoted+0x89>
  429b8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429b8e:	0f b6 00             	movzbl (%rax),%eax
  429b91:	3c 5c                	cmp    $0x5c,%al
  429b93:	74 0f                	je     429ba4 <addquoted+0x89>
  429b95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429b99:	0f b6 00             	movzbl (%rax),%eax
  429b9c:	3c 0a                	cmp    $0xa,%al
  429b9e:	0f 85 a2 00 00 00    	jne    429c46 <addquoted+0x12b>
  429ba4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429ba8:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bb0:	48 8b 40 08          	mov    0x8(%rax),%rax
  429bb4:	48 39 c2             	cmp    %rax,%rdx
  429bb7:	72 14                	jb     429bcd <addquoted+0xb2>
  429bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bbd:	be 01 00 00 00       	mov    $0x1,%esi
  429bc2:	48 89 c7             	mov    %rax,%rdi
  429bc5:	e8 ae d1 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429bca:	48 85 c0             	test   %rax,%rax
  429bcd:	90                   	nop
  429bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bd2:	48 8b 30             	mov    (%rax),%rsi
  429bd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bd9:	48 8b 40 10          	mov    0x10(%rax),%rax
  429bdd:	48 8d 48 01          	lea    0x1(%rax),%rcx
  429be1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429be5:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429be9:	48 01 f0             	add    %rsi,%rax
  429bec:	c6 00 5c             	movb   $0x5c,(%rax)
  429bef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bf3:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429bf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429bfb:	48 8b 40 08          	mov    0x8(%rax),%rax
  429bff:	48 39 c2             	cmp    %rax,%rdx
  429c02:	72 14                	jb     429c18 <addquoted+0xfd>
  429c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429c08:	be 01 00 00 00       	mov    $0x1,%esi
  429c0d:	48 89 c7             	mov    %rax,%rdi
  429c10:	e8 63 d1 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429c15:	48 85 c0             	test   %rax,%rax
  429c18:	90                   	nop
  429c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429c1d:	48 8b 30             	mov    (%rax),%rsi
  429c20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429c24:	48 8b 40 10          	mov    0x10(%rax),%rax
  429c28:	48 8d 48 01          	lea    0x1(%rax),%rcx
  429c2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429c30:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429c34:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  429c38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429c3c:	0f b6 00             	movzbl (%rax),%eax
  429c3f:	88 02                	mov    %al,(%rdx)
  429c41:	e9 0b 01 00 00       	jmpq   429d51 <addquoted+0x236>
  429c46:	e8 b5 7c fd ff       	callq  401900 <__ctype_b_loc@plt>
  429c4b:	48 8b 10             	mov    (%rax),%rdx
  429c4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429c52:	0f b6 00             	movzbl (%rax),%eax
  429c55:	0f b6 c0             	movzbl %al,%eax
  429c58:	48 01 c0             	add    %rax,%rax
  429c5b:	48 01 d0             	add    %rdx,%rax
  429c5e:	0f b7 00             	movzwl (%rax),%eax
  429c61:	0f b7 c0             	movzwl %ax,%eax
  429c64:	83 e0 02             	and    $0x2,%eax
  429c67:	85 c0                	test   %eax,%eax
  429c69:	0f 84 90 00 00 00    	je     429cff <addquoted+0x1e4>
  429c6f:	e8 8c 7c fd ff       	callq  401900 <__ctype_b_loc@plt>
  429c74:	48 8b 00             	mov    (%rax),%rax
  429c77:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429c7b:	48 83 c2 01          	add    $0x1,%rdx
  429c7f:	0f b6 12             	movzbl (%rdx),%edx
  429c82:	0f b6 d2             	movzbl %dl,%edx
  429c85:	48 01 d2             	add    %rdx,%rdx
  429c88:	48 01 d0             	add    %rdx,%rax
  429c8b:	0f b7 00             	movzwl (%rax),%eax
  429c8e:	0f b7 c0             	movzwl %ax,%eax
  429c91:	25 00 08 00 00       	and    $0x800,%eax
  429c96:	85 c0                	test   %eax,%eax
  429c98:	75 29                	jne    429cc3 <addquoted+0x1a8>
  429c9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429c9e:	0f b6 00             	movzbl (%rax),%eax
  429ca1:	0f b6 d0             	movzbl %al,%edx
  429ca4:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  429ca8:	89 d1                	mov    %edx,%ecx
  429caa:	ba f7 16 44 00       	mov    $0x4416f7,%edx
  429caf:	be 0a 00 00 00       	mov    $0xa,%esi
  429cb4:	48 89 c7             	mov    %rax,%rdi
  429cb7:	b8 00 00 00 00       	mov    $0x0,%eax
  429cbc:	e8 8f 7d fd ff       	callq  401a50 <snprintf@plt>
  429cc1:	eb 27                	jmp    429cea <addquoted+0x1cf>
  429cc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429cc7:	0f b6 00             	movzbl (%rax),%eax
  429cca:	0f b6 d0             	movzbl %al,%edx
  429ccd:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  429cd1:	89 d1                	mov    %edx,%ecx
  429cd3:	ba fb 16 44 00       	mov    $0x4416fb,%edx
  429cd8:	be 0a 00 00 00       	mov    $0xa,%esi
  429cdd:	48 89 c7             	mov    %rax,%rdi
  429ce0:	b8 00 00 00 00       	mov    $0x0,%eax
  429ce5:	e8 66 7d fd ff       	callq  401a50 <snprintf@plt>
  429cea:	48 8d 55 f6          	lea    -0xa(%rbp),%rdx
  429cee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429cf2:	48 89 d6             	mov    %rdx,%rsi
  429cf5:	48 89 c7             	mov    %rax,%rdi
  429cf8:	e8 0d d1 fd ff       	callq  406e0a <luaL_addstring>
  429cfd:	eb 52                	jmp    429d51 <addquoted+0x236>
  429cff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d03:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429d07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d0b:	48 8b 40 08          	mov    0x8(%rax),%rax
  429d0f:	48 39 c2             	cmp    %rax,%rdx
  429d12:	72 14                	jb     429d28 <addquoted+0x20d>
  429d14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d18:	be 01 00 00 00       	mov    $0x1,%esi
  429d1d:	48 89 c7             	mov    %rax,%rdi
  429d20:	e8 53 d0 fd ff       	callq  406d78 <luaL_prepbuffsize>
  429d25:	48 85 c0             	test   %rax,%rax
  429d28:	90                   	nop
  429d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d2d:	48 8b 30             	mov    (%rax),%rsi
  429d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d34:	48 8b 40 10          	mov    0x10(%rax),%rax
  429d38:	48 8d 48 01          	lea    0x1(%rax),%rcx
  429d3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429d40:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429d44:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  429d48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429d4c:	0f b6 00             	movzbl (%rax),%eax
  429d4f:	88 02                	mov    %al,(%rdx)
  429d51:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  429d56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  429d5a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  429d5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  429d62:	48 85 c0             	test   %rax,%rax
  429d65:	0f 85 14 fe ff ff    	jne    429b7f <addquoted+0x64>
  429d6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d6f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  429d73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d77:	48 8b 40 08          	mov    0x8(%rax),%rax
  429d7b:	48 39 c2             	cmp    %rax,%rdx
  429d7e:	72 14                	jb     429d94 <addquoted+0x279>
  429d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d84:	be 01 00 00 00       	mov    $0x1,%esi
  429d89:	48 89 c7             	mov    %rax,%rdi
  429d8c:	e8 e7 cf fd ff       	callq  406d78 <luaL_prepbuffsize>
  429d91:	48 85 c0             	test   %rax,%rax
  429d94:	90                   	nop
  429d95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429d99:	48 8b 30             	mov    (%rax),%rsi
  429d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429da0:	48 8b 40 10          	mov    0x10(%rax),%rax
  429da4:	48 8d 48 01          	lea    0x1(%rax),%rcx
  429da8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429dac:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  429db0:	48 01 f0             	add    %rsi,%rax
  429db3:	c6 00 22             	movb   $0x22,(%rax)
  429db6:	90                   	nop
  429db7:	c9                   	leaveq 
  429db8:	c3                   	retq   

0000000000429db9 <quotefloat>:
  429db9:	55                   	push   %rbp
  429dba:	48 89 e5             	mov    %rsp,%rbp
  429dbd:	48 83 ec 40          	sub    $0x40,%rsp
  429dc1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  429dc5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  429dc9:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
  429dce:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429dd3:	66 0f 2e 05 25 83 01 	ucomisd 0x18325(%rip),%xmm0        # 442100 <strlib+0x120>
  429dda:	00 
  429ddb:	7a 1c                	jp     429df9 <quotefloat+0x40>
  429ddd:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429de2:	66 0f 2e 05 16 83 01 	ucomisd 0x18316(%rip),%xmm0        # 442100 <strlib+0x120>
  429de9:	00 
  429dea:	75 0d                	jne    429df9 <quotefloat+0x40>
  429dec:	48 c7 45 f8 01 17 44 	movq   $0x441701,-0x8(%rbp)
  429df3:	00 
  429df4:	e9 c9 00 00 00       	jmpq   429ec2 <quotefloat+0x109>
  429df9:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429dfe:	66 0f 2e 05 02 83 01 	ucomisd 0x18302(%rip),%xmm0        # 442108 <strlib+0x128>
  429e05:	00 
  429e06:	7a 1c                	jp     429e24 <quotefloat+0x6b>
  429e08:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429e0d:	66 0f 2e 05 f3 82 01 	ucomisd 0x182f3(%rip),%xmm0        # 442108 <strlib+0x128>
  429e14:	00 
  429e15:	75 0d                	jne    429e24 <quotefloat+0x6b>
  429e17:	48 c7 45 f8 08 17 44 	movq   $0x441708,-0x8(%rbp)
  429e1e:	00 
  429e1f:	e9 9e 00 00 00       	jmpq   429ec2 <quotefloat+0x109>
  429e24:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429e29:	66 0f 2e 45 c8       	ucomisd -0x38(%rbp),%xmm0
  429e2e:	7a 0c                	jp     429e3c <quotefloat+0x83>
  429e30:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429e35:	66 0f 2e 45 c8       	ucomisd -0x38(%rbp),%xmm0
  429e3a:	74 0a                	je     429e46 <quotefloat+0x8d>
  429e3c:	48 c7 45 f8 10 17 44 	movq   $0x441710,-0x8(%rbp)
  429e43:	00 
  429e44:	eb 7c                	jmp    429ec2 <quotefloat+0x109>
  429e46:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
  429e4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429e4f:	ba 16 17 44 00       	mov    $0x441716,%edx
  429e54:	be 78 00 00 00       	mov    $0x78,%esi
  429e59:	48 89 c7             	mov    %rax,%rdi
  429e5c:	b8 01 00 00 00       	mov    $0x1,%eax
  429e61:	e8 ea 7b fd ff       	callq  401a50 <snprintf@plt>
  429e66:	89 45 f4             	mov    %eax,-0xc(%rbp)
  429e69:	8b 45 f4             	mov    -0xc(%rbp),%eax
  429e6c:	48 63 d0             	movslq %eax,%rdx
  429e6f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429e73:	be 2e 00 00 00       	mov    $0x2e,%esi
  429e78:	48 89 c7             	mov    %rax,%rdi
  429e7b:	e8 a0 7a fd ff       	callq  401920 <memchr@plt>
  429e80:	48 85 c0             	test   %rax,%rax
  429e83:	75 38                	jne    429ebd <quotefloat+0x104>
  429e85:	e8 86 7c fd ff       	callq  401b10 <localeconv@plt>
  429e8a:	48 8b 00             	mov    (%rax),%rax
  429e8d:	0f b6 00             	movzbl (%rax),%eax
  429e90:	88 45 f3             	mov    %al,-0xd(%rbp)
  429e93:	8b 45 f4             	mov    -0xc(%rbp),%eax
  429e96:	48 63 d0             	movslq %eax,%rdx
  429e99:	0f be 4d f3          	movsbl -0xd(%rbp),%ecx
  429e9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429ea1:	89 ce                	mov    %ecx,%esi
  429ea3:	48 89 c7             	mov    %rax,%rdi
  429ea6:	e8 75 7a fd ff       	callq  401920 <memchr@plt>
  429eab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  429eaf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  429eb4:	74 07                	je     429ebd <quotefloat+0x104>
  429eb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429eba:	c6 00 2e             	movb   $0x2e,(%rax)
  429ebd:	8b 45 f4             	mov    -0xc(%rbp),%eax
  429ec0:	eb 22                	jmp    429ee4 <quotefloat+0x12b>
  429ec2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  429ec6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429eca:	48 89 d1             	mov    %rdx,%rcx
  429ecd:	ba 19 17 44 00       	mov    $0x441719,%edx
  429ed2:	be 78 00 00 00       	mov    $0x78,%esi
  429ed7:	48 89 c7             	mov    %rax,%rdi
  429eda:	b8 00 00 00 00       	mov    $0x0,%eax
  429edf:	e8 6c 7b fd ff       	callq  401a50 <snprintf@plt>
  429ee4:	c9                   	leaveq 
  429ee5:	c3                   	retq   

0000000000429ee6 <addliteral>:
  429ee6:	55                   	push   %rbp
  429ee7:	48 89 e5             	mov    %rsp,%rbp
  429eea:	48 83 ec 50          	sub    $0x50,%rsp
  429eee:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  429ef2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  429ef6:	89 55 bc             	mov    %edx,-0x44(%rbp)
  429ef9:	8b 55 bc             	mov    -0x44(%rbp),%edx
  429efc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429f00:	89 d6                	mov    %edx,%esi
  429f02:	48 89 c7             	mov    %rax,%rdi
  429f05:	e8 69 84 fd ff       	callq  402373 <lua_type>
  429f0a:	83 f8 03             	cmp    $0x3,%eax
  429f0d:	74 52                	je     429f61 <addliteral+0x7b>
  429f0f:	83 f8 03             	cmp    $0x3,%eax
  429f12:	7f 0e                	jg     429f22 <addliteral+0x3c>
  429f14:	83 f8 01             	cmp    $0x1,%eax
  429f17:	0f 87 35 01 00 00    	ja     42a052 <addliteral+0x16c>
  429f1d:	e9 0c 01 00 00       	jmpq   42a02e <addliteral+0x148>
  429f22:	83 f8 04             	cmp    $0x4,%eax
  429f25:	0f 85 27 01 00 00    	jne    42a052 <addliteral+0x16c>
  429f2b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  429f2f:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  429f32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429f36:	89 ce                	mov    %ecx,%esi
  429f38:	48 89 c7             	mov    %rax,%rdi
  429f3b:	e8 2d 8a fd ff       	callq  40296d <lua_tolstring>
  429f40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  429f44:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  429f48:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  429f4c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429f50:	48 89 ce             	mov    %rcx,%rsi
  429f53:	48 89 c7             	mov    %rax,%rdi
  429f56:	e8 c0 fb ff ff       	callq  429b1b <addquoted>
  429f5b:	90                   	nop
  429f5c:	e9 07 01 00 00       	jmpq   42a068 <addliteral+0x182>
  429f61:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  429f65:	be 78 00 00 00       	mov    $0x78,%esi
  429f6a:	48 89 c7             	mov    %rax,%rdi
  429f6d:	e8 06 ce fd ff       	callq  406d78 <luaL_prepbuffsize>
  429f72:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  429f76:	8b 55 bc             	mov    -0x44(%rbp),%edx
  429f79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429f7d:	89 d6                	mov    %edx,%esi
  429f7f:	48 89 c7             	mov    %rax,%rdi
  429f82:	e8 b2 84 fd ff       	callq  402439 <lua_isinteger>
  429f87:	85 c0                	test   %eax,%eax
  429f89:	75 2e                	jne    429fb9 <addliteral+0xd3>
  429f8b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  429f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429f92:	ba 00 00 00 00       	mov    $0x0,%edx
  429f97:	89 ce                	mov    %ecx,%esi
  429f99:	48 89 c7             	mov    %rax,%rdi
  429f9c:	e8 76 88 fd ff       	callq  402817 <lua_tonumberx>
  429fa1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  429fa5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429fa9:	48 89 d6             	mov    %rdx,%rsi
  429fac:	48 89 c7             	mov    %rax,%rdi
  429faf:	e8 05 fe ff ff       	callq  429db9 <quotefloat>
  429fb4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  429fb7:	eb 5b                	jmp    42a014 <addliteral+0x12e>
  429fb9:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  429fbc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429fc0:	ba 00 00 00 00       	mov    $0x0,%edx
  429fc5:	89 ce                	mov    %ecx,%esi
  429fc7:	48 89 c7             	mov    %rax,%rdi
  429fca:	e8 c6 88 fd ff       	callq  402895 <lua_tointegerx>
  429fcf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  429fd3:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  429fda:	00 00 80 
  429fdd:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  429fe1:	75 07                	jne    429fea <addliteral+0x104>
  429fe3:	b8 1c 17 44 00       	mov    $0x44171c,%eax
  429fe8:	eb 05                	jmp    429fef <addliteral+0x109>
  429fea:	b8 23 17 44 00       	mov    $0x441723,%eax
  429fef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  429ff3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  429ff7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429ffb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  429fff:	be 78 00 00 00       	mov    $0x78,%esi
  42a004:	48 89 c7             	mov    %rax,%rdi
  42a007:	b8 00 00 00 00       	mov    $0x0,%eax
  42a00c:	e8 3f 7a fd ff       	callq  401a50 <snprintf@plt>
  42a011:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42a014:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42a018:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42a01c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42a01f:	48 98                	cltq   
  42a021:	48 01 c2             	add    %rax,%rdx
  42a024:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42a028:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42a02c:	eb 3a                	jmp    42a068 <addliteral+0x182>
  42a02e:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  42a031:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a035:	ba 00 00 00 00       	mov    $0x0,%edx
  42a03a:	89 ce                	mov    %ecx,%esi
  42a03c:	48 89 c7             	mov    %rax,%rdi
  42a03f:	e8 8c d8 fd ff       	callq  4078d0 <luaL_tolstring>
  42a044:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42a048:	48 89 c7             	mov    %rax,%rdi
  42a04b:	e8 aa ce fd ff       	callq  406efa <luaL_addvalue>
  42a050:	eb 16                	jmp    42a068 <addliteral+0x182>
  42a052:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  42a055:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a059:	ba 28 17 44 00       	mov    $0x441728,%edx
  42a05e:	89 ce                	mov    %ecx,%esi
  42a060:	48 89 c7             	mov    %rax,%rdi
  42a063:	e8 8a be fd ff       	callq  405ef2 <luaL_argerror>
  42a068:	90                   	nop
  42a069:	c9                   	leaveq 
  42a06a:	c3                   	retq   

000000000042a06b <get2digits>:
  42a06b:	55                   	push   %rbp
  42a06c:	48 89 e5             	mov    %rsp,%rbp
  42a06f:	48 83 ec 10          	sub    $0x10,%rsp
  42a073:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42a077:	e8 84 78 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42a07c:	48 8b 10             	mov    (%rax),%rdx
  42a07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a083:	0f b6 00             	movzbl (%rax),%eax
  42a086:	0f b6 c0             	movzbl %al,%eax
  42a089:	48 01 c0             	add    %rax,%rax
  42a08c:	48 01 d0             	add    %rdx,%rax
  42a08f:	0f b7 00             	movzwl (%rax),%eax
  42a092:	0f b7 c0             	movzwl %ax,%eax
  42a095:	25 00 08 00 00       	and    $0x800,%eax
  42a09a:	85 c0                	test   %eax,%eax
  42a09c:	74 31                	je     42a0cf <get2digits+0x64>
  42a09e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42a0a3:	e8 58 78 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42a0a8:	48 8b 10             	mov    (%rax),%rdx
  42a0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a0af:	0f b6 00             	movzbl (%rax),%eax
  42a0b2:	0f b6 c0             	movzbl %al,%eax
  42a0b5:	48 01 c0             	add    %rax,%rax
  42a0b8:	48 01 d0             	add    %rdx,%rax
  42a0bb:	0f b7 00             	movzwl (%rax),%eax
  42a0be:	0f b7 c0             	movzwl %ax,%eax
  42a0c1:	25 00 08 00 00       	and    $0x800,%eax
  42a0c6:	85 c0                	test   %eax,%eax
  42a0c8:	74 05                	je     42a0cf <get2digits+0x64>
  42a0ca:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42a0cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a0d3:	c9                   	leaveq 
  42a0d4:	c3                   	retq   

000000000042a0d5 <checkformat>:
  42a0d5:	55                   	push   %rbp
  42a0d6:	48 89 e5             	mov    %rsp,%rbp
  42a0d9:	48 83 ec 30          	sub    $0x30,%rsp
  42a0dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42a0e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42a0e5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42a0e9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  42a0ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a0f0:	48 83 c0 01          	add    $0x1,%rax
  42a0f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a0f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42a0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a100:	48 89 d6             	mov    %rdx,%rsi
  42a103:	48 89 c7             	mov    %rax,%rdi
  42a106:	e8 55 76 fd ff       	callq  401760 <strspn@plt>
  42a10b:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  42a10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a113:	0f b6 00             	movzbl (%rax),%eax
  42a116:	3c 30                	cmp    $0x30,%al
  42a118:	74 36                	je     42a150 <checkformat+0x7b>
  42a11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a11e:	48 89 c7             	mov    %rax,%rdi
  42a121:	e8 45 ff ff ff       	callq  42a06b <get2digits>
  42a126:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a12e:	0f b6 00             	movzbl (%rax),%eax
  42a131:	3c 2e                	cmp    $0x2e,%al
  42a133:	75 1b                	jne    42a150 <checkformat+0x7b>
  42a135:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  42a139:	74 15                	je     42a150 <checkformat+0x7b>
  42a13b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42a140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a144:	48 89 c7             	mov    %rax,%rdi
  42a147:	e8 1f ff ff ff       	callq  42a06b <get2digits>
  42a14c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a150:	e8 ab 77 fd ff       	callq  401900 <__ctype_b_loc@plt>
  42a155:	48 8b 10             	mov    (%rax),%rdx
  42a158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a15c:	0f b6 00             	movzbl (%rax),%eax
  42a15f:	0f b6 c0             	movzbl %al,%eax
  42a162:	48 01 c0             	add    %rax,%rax
  42a165:	48 01 d0             	add    %rdx,%rax
  42a168:	0f b7 00             	movzwl (%rax),%eax
  42a16b:	0f b7 c0             	movzwl %ax,%eax
  42a16e:	25 00 04 00 00       	and    $0x400,%eax
  42a173:	85 c0                	test   %eax,%eax
  42a175:	75 1a                	jne    42a191 <checkformat+0xbc>
  42a177:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42a17b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a17f:	be 48 17 44 00       	mov    $0x441748,%esi
  42a184:	48 89 c7             	mov    %rax,%rdi
  42a187:	b8 00 00 00 00       	mov    $0x0,%eax
  42a18c:	e8 5f c0 fd ff       	callq  4061f0 <luaL_error>
  42a191:	90                   	nop
  42a192:	c9                   	leaveq 
  42a193:	c3                   	retq   

000000000042a194 <getformat>:
  42a194:	55                   	push   %rbp
  42a195:	48 89 e5             	mov    %rsp,%rbp
  42a198:	48 83 ec 30          	sub    $0x30,%rsp
  42a19c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42a1a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42a1a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42a1a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a1ac:	be 6f 17 44 00       	mov    $0x44176f,%esi
  42a1b1:	48 89 c7             	mov    %rax,%rdi
  42a1b4:	e8 a7 75 fd ff       	callq  401760 <strspn@plt>
  42a1b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a1bd:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42a1c2:	48 83 7d f8 15       	cmpq   $0x15,-0x8(%rbp)
  42a1c7:	76 16                	jbe    42a1df <getformat+0x4b>
  42a1c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a1cd:	be 7f 17 44 00       	mov    $0x44177f,%esi
  42a1d2:	48 89 c7             	mov    %rax,%rdi
  42a1d5:	b8 00 00 00 00       	mov    $0x0,%eax
  42a1da:	e8 11 c0 fd ff       	callq  4061f0 <luaL_error>
  42a1df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a1e3:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42a1e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42a1eb:	c6 00 25             	movb   $0x25,(%rax)
  42a1ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42a1f2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42a1f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a1fa:	48 89 ce             	mov    %rcx,%rsi
  42a1fd:	48 89 c7             	mov    %rax,%rdi
  42a200:	e8 5b 76 fd ff       	callq  401860 <memcpy@plt>
  42a205:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42a209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a20d:	48 01 d0             	add    %rdx,%rax
  42a210:	c6 00 00             	movb   $0x0,(%rax)
  42a213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a217:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42a21b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a21f:	48 01 d0             	add    %rdx,%rax
  42a222:	c9                   	leaveq 
  42a223:	c3                   	retq   

000000000042a224 <addlenmod>:
  42a224:	55                   	push   %rbp
  42a225:	48 89 e5             	mov    %rsp,%rbp
  42a228:	48 83 ec 30          	sub    $0x30,%rsp
  42a22c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42a230:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42a234:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a238:	48 89 c7             	mov    %rax,%rdi
  42a23b:	e8 30 75 fd ff       	callq  401770 <strlen@plt>
  42a240:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a244:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a248:	48 89 c7             	mov    %rax,%rdi
  42a24b:	e8 20 75 fd ff       	callq  401770 <strlen@plt>
  42a250:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42a254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a258:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42a25c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a260:	48 01 d0             	add    %rdx,%rax
  42a263:	0f b6 00             	movzbl (%rax),%eax
  42a266:	88 45 ef             	mov    %al,-0x11(%rbp)
  42a269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42a26d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42a271:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a275:	48 01 c2             	add    %rax,%rdx
  42a278:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a27c:	48 89 c6             	mov    %rax,%rsi
  42a27f:	48 89 d7             	mov    %rdx,%rdi
  42a282:	e8 39 76 fd ff       	callq  4018c0 <strcpy@plt>
  42a287:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42a28b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a28f:	48 01 d0             	add    %rdx,%rax
  42a292:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42a296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a29a:	48 01 c2             	add    %rax,%rdx
  42a29d:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  42a2a1:	88 02                	mov    %al,(%rdx)
  42a2a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42a2a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a2ab:	48 01 c2             	add    %rax,%rdx
  42a2ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a2b2:	48 01 d0             	add    %rdx,%rax
  42a2b5:	c6 00 00             	movb   $0x0,(%rax)
  42a2b8:	90                   	nop
  42a2b9:	c9                   	leaveq 
  42a2ba:	c3                   	retq   

000000000042a2bb <str_format>:
  42a2bb:	55                   	push   %rbp
  42a2bc:	48 89 e5             	mov    %rsp,%rbp
  42a2bf:	48 81 ec d0 04 00 00 	sub    $0x4d0,%rsp
  42a2c6:	48 89 bd 38 fb ff ff 	mov    %rdi,-0x4c8(%rbp)
  42a2cd:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a2d4:	48 89 c7             	mov    %rax,%rdi
  42a2d7:	e8 7d 7c fd ff       	callq  401f59 <lua_gettop>
  42a2dc:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42a2df:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42a2e6:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
  42a2ea:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42a2ed:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a2f4:	89 ce                	mov    %ecx,%esi
  42a2f6:	48 89 c7             	mov    %rax,%rdi
  42a2f9:	e8 ce c4 fd ff       	callq  4067cc <luaL_checklstring>
  42a2fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42a302:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42a306:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a30a:	48 01 d0             	add    %rdx,%rax
  42a30d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42a311:	48 8d 95 70 fb ff ff 	lea    -0x490(%rbp),%rdx
  42a318:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a31f:	48 89 d6             	mov    %rdx,%rsi
  42a322:	48 89 c7             	mov    %rax,%rdi
  42a325:	e8 5f cc fd ff       	callq  406f89 <luaL_buffinit>
  42a32a:	e9 93 05 00 00       	jmpq   42a8c2 <str_format+0x607>
  42a32f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a333:	0f b6 00             	movzbl (%rax),%eax
  42a336:	3c 25                	cmp    $0x25,%al
  42a338:	74 5d                	je     42a397 <str_format+0xdc>
  42a33a:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
  42a341:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
  42a348:	48 39 c2             	cmp    %rax,%rdx
  42a34b:	72 17                	jb     42a364 <str_format+0xa9>
  42a34d:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a354:	be 01 00 00 00       	mov    $0x1,%esi
  42a359:	48 89 c7             	mov    %rax,%rdi
  42a35c:	e8 17 ca fd ff       	callq  406d78 <luaL_prepbuffsize>
  42a361:	48 85 c0             	test   %rax,%rax
  42a364:	90                   	nop
  42a365:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a369:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42a36d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  42a371:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
  42a378:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
  42a37f:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  42a383:	48 89 8d 80 fb ff ff 	mov    %rcx,-0x480(%rbp)
  42a38a:	48 01 f2             	add    %rsi,%rdx
  42a38d:	0f b6 00             	movzbl (%rax),%eax
  42a390:	88 02                	mov    %al,(%rdx)
  42a392:	e9 2b 05 00 00       	jmpq   42a8c2 <str_format+0x607>
  42a397:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  42a39c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a3a0:	0f b6 00             	movzbl (%rax),%eax
  42a3a3:	3c 25                	cmp    $0x25,%al
  42a3a5:	75 5d                	jne    42a404 <str_format+0x149>
  42a3a7:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
  42a3ae:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
  42a3b5:	48 39 c2             	cmp    %rax,%rdx
  42a3b8:	72 17                	jb     42a3d1 <str_format+0x116>
  42a3ba:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a3c1:	be 01 00 00 00       	mov    $0x1,%esi
  42a3c6:	48 89 c7             	mov    %rax,%rdi
  42a3c9:	e8 aa c9 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42a3ce:	48 85 c0             	test   %rax,%rax
  42a3d1:	90                   	nop
  42a3d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a3d6:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42a3da:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  42a3de:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
  42a3e5:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
  42a3ec:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  42a3f0:	48 89 8d 80 fb ff ff 	mov    %rcx,-0x480(%rbp)
  42a3f7:	48 01 f2             	add    %rsi,%rdx
  42a3fa:	0f b6 00             	movzbl (%rax),%eax
  42a3fd:	88 02                	mov    %al,(%rdx)
  42a3ff:	e9 be 04 00 00       	jmpq   42a8c2 <str_format+0x607>
  42a404:	c7 45 e4 78 00 00 00 	movl   $0x78,-0x1c(%rbp)
  42a40b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a40e:	48 63 d0             	movslq %eax,%rdx
  42a411:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a418:	48 89 d6             	mov    %rdx,%rsi
  42a41b:	48 89 c7             	mov    %rax,%rdi
  42a41e:	e8 55 c9 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42a423:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42a427:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  42a42e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42a432:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42a435:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  42a438:	7e 1e                	jle    42a458 <str_format+0x19d>
  42a43a:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42a43d:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a444:	ba 99 17 44 00       	mov    $0x441799,%edx
  42a449:	89 ce                	mov    %ecx,%esi
  42a44b:	48 89 c7             	mov    %rax,%rdi
  42a44e:	e8 9f ba fd ff       	callq  405ef2 <luaL_argerror>
  42a453:	e9 8c 04 00 00       	jmpq   42a8e4 <str_format+0x629>
  42a458:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a45f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42a463:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a46a:	48 89 ce             	mov    %rcx,%rsi
  42a46d:	48 89 c7             	mov    %rax,%rdi
  42a470:	e8 1f fd ff ff       	callq  42a194 <getformat>
  42a475:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42a479:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a47d:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42a481:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  42a485:	0f b6 00             	movzbl (%rax),%eax
  42a488:	0f be c0             	movsbl %al,%eax
  42a48b:	83 e8 41             	sub    $0x41,%eax
  42a48e:	83 f8 37             	cmp    $0x37,%eax
  42a491:	0f 87 f3 03 00 00    	ja     42a88a <str_format+0x5cf>
  42a497:	89 c0                	mov    %eax,%eax
  42a499:	48 8b 04 c5 28 18 44 	mov    0x441828(,%rax,8),%rax
  42a4a0:	00 
  42a4a1:	ff e0                	jmpq   *%rax
  42a4a3:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a4aa:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a4b1:	b9 00 00 00 00       	mov    $0x0,%ecx
  42a4b6:	ba a2 17 44 00       	mov    $0x4417a2,%edx
  42a4bb:	48 89 c7             	mov    %rax,%rdi
  42a4be:	e8 12 fc ff ff       	callq  42a0d5 <checkformat>
  42a4c3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a4c6:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a4cd:	89 d6                	mov    %edx,%esi
  42a4cf:	48 89 c7             	mov    %rax,%rdi
  42a4d2:	e8 c0 c4 fd ff       	callq  406997 <luaL_checkinteger>
  42a4d7:	89 c1                	mov    %eax,%ecx
  42a4d9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a4dc:	48 63 f0             	movslq %eax,%rsi
  42a4df:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a4e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a4ea:	48 89 c7             	mov    %rax,%rdi
  42a4ed:	b8 00 00 00 00       	mov    $0x0,%eax
  42a4f2:	e8 59 75 fd ff       	callq  401a50 <snprintf@plt>
  42a4f7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a4fa:	e9 ad 03 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a4ff:	48 c7 45 e8 a4 17 44 	movq   $0x4417a4,-0x18(%rbp)
  42a506:	00 
  42a507:	eb 12                	jmp    42a51b <str_format+0x260>
  42a509:	48 c7 45 e8 a9 17 44 	movq   $0x4417a9,-0x18(%rbp)
  42a510:	00 
  42a511:	eb 08                	jmp    42a51b <str_format+0x260>
  42a513:	48 c7 45 e8 ac 17 44 	movq   $0x4417ac,-0x18(%rbp)
  42a51a:	00 
  42a51b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a51e:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a525:	89 d6                	mov    %edx,%esi
  42a527:	48 89 c7             	mov    %rax,%rdi
  42a52a:	e8 68 c4 fd ff       	callq  406997 <luaL_checkinteger>
  42a52f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42a533:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42a537:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a53e:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a545:	b9 01 00 00 00       	mov    $0x1,%ecx
  42a54a:	48 89 c7             	mov    %rax,%rdi
  42a54d:	e8 83 fb ff ff       	callq  42a0d5 <checkformat>
  42a552:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  42a559:	be b0 17 44 00       	mov    $0x4417b0,%esi
  42a55e:	48 89 c7             	mov    %rax,%rdi
  42a561:	e8 be fc ff ff       	callq  42a224 <addlenmod>
  42a566:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a569:	48 63 f0             	movslq %eax,%rsi
  42a56c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  42a570:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a577:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a57b:	48 89 c7             	mov    %rax,%rdi
  42a57e:	b8 00 00 00 00       	mov    $0x0,%eax
  42a583:	e8 c8 74 fd ff       	callq  401a50 <snprintf@plt>
  42a588:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a58b:	e9 1c 03 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a590:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a597:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a59e:	b9 01 00 00 00       	mov    $0x1,%ecx
  42a5a3:	ba b3 17 44 00       	mov    $0x4417b3,%edx
  42a5a8:	48 89 c7             	mov    %rax,%rdi
  42a5ab:	e8 25 fb ff ff       	callq  42a0d5 <checkformat>
  42a5b0:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  42a5b7:	be 20 13 44 00       	mov    $0x441320,%esi
  42a5bc:	48 89 c7             	mov    %rax,%rdi
  42a5bf:	e8 60 fc ff ff       	callq  42a224 <addlenmod>
  42a5c4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a5c7:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a5ce:	89 d6                	mov    %edx,%esi
  42a5d0:	48 89 c7             	mov    %rax,%rdi
  42a5d3:	e8 c0 c2 fd ff       	callq  406898 <luaL_checknumber>
  42a5d8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a5db:	48 63 c8             	movslq %eax,%rcx
  42a5de:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a5e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a5e9:	48 89 ce             	mov    %rcx,%rsi
  42a5ec:	48 89 c7             	mov    %rax,%rdi
  42a5ef:	b8 01 00 00 00       	mov    $0x1,%eax
  42a5f4:	e8 57 74 fd ff       	callq  401a50 <snprintf@plt>
  42a5f9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a5fc:	e9 ab 02 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a601:	c7 45 e4 a2 01 00 00 	movl   $0x1a2,-0x1c(%rbp)
  42a608:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a60b:	48 63 d0             	movslq %eax,%rdx
  42a60e:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a615:	48 89 d6             	mov    %rdx,%rsi
  42a618:	48 89 c7             	mov    %rax,%rdi
  42a61b:	e8 58 c7 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42a620:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42a624:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a627:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a62e:	89 d6                	mov    %edx,%esi
  42a630:	48 89 c7             	mov    %rax,%rdi
  42a633:	e8 60 c2 fd ff       	callq  406898 <luaL_checknumber>
  42a638:	66 48 0f 7e c0       	movq   %xmm0,%rax
  42a63d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  42a641:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a648:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a64f:	b9 01 00 00 00       	mov    $0x1,%ecx
  42a654:	ba b3 17 44 00       	mov    $0x4417b3,%edx
  42a659:	48 89 c7             	mov    %rax,%rdi
  42a65c:	e8 74 fa ff ff       	callq  42a0d5 <checkformat>
  42a661:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  42a668:	be 20 13 44 00       	mov    $0x441320,%esi
  42a66d:	48 89 c7             	mov    %rax,%rdi
  42a670:	e8 af fb ff ff       	callq  42a224 <addlenmod>
  42a675:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a678:	48 63 c8             	movslq %eax,%rcx
  42a67b:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
  42a680:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a68b:	48 89 ce             	mov    %rcx,%rsi
  42a68e:	48 89 c7             	mov    %rax,%rdi
  42a691:	b8 01 00 00 00       	mov    $0x1,%eax
  42a696:	e8 b5 73 fd ff       	callq  401a50 <snprintf@plt>
  42a69b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a69e:	e9 09 02 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a6a3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a6a6:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a6ad:	89 d6                	mov    %edx,%esi
  42a6af:	48 89 c7             	mov    %rax,%rdi
  42a6b2:	e8 72 85 fd ff       	callq  402c29 <lua_topointer>
  42a6b7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42a6bb:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a6c2:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a6c9:	b9 00 00 00 00       	mov    $0x0,%ecx
  42a6ce:	ba a2 17 44 00       	mov    $0x4417a2,%edx
  42a6d3:	48 89 c7             	mov    %rax,%rdi
  42a6d6:	e8 fa f9 ff ff       	callq  42a0d5 <checkformat>
  42a6db:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  42a6e0:	75 23                	jne    42a705 <str_format+0x44a>
  42a6e2:	48 c7 45 c8 b9 17 44 	movq   $0x4417b9,-0x38(%rbp)
  42a6e9:	00 
  42a6ea:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  42a6f1:	48 89 c7             	mov    %rax,%rdi
  42a6f4:	e8 77 70 fd ff       	callq  401770 <strlen@plt>
  42a6f9:	48 83 e8 01          	sub    $0x1,%rax
  42a6fd:	c6 84 05 40 fb ff ff 	movb   $0x73,-0x4c0(%rbp,%rax,1)
  42a704:	73 
  42a705:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a708:	48 63 f0             	movslq %eax,%rsi
  42a70b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42a70f:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a716:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a71a:	48 89 c7             	mov    %rax,%rdi
  42a71d:	b8 00 00 00 00       	mov    $0x0,%eax
  42a722:	e8 29 73 fd ff       	callq  401a50 <snprintf@plt>
  42a727:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a72a:	e9 7d 01 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a72f:	0f b6 85 42 fb ff ff 	movzbl -0x4be(%rbp),%eax
  42a736:	84 c0                	test   %al,%al
  42a738:	74 1e                	je     42a758 <str_format+0x49d>
  42a73a:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a741:	be c0 17 44 00       	mov    $0x4417c0,%esi
  42a746:	48 89 c7             	mov    %rax,%rdi
  42a749:	b8 00 00 00 00       	mov    $0x0,%eax
  42a74e:	e8 9d ba fd ff       	callq  4061f0 <luaL_error>
  42a753:	e9 8c 01 00 00       	jmpq   42a8e4 <str_format+0x629>
  42a758:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a75b:	48 8d 8d 70 fb ff ff 	lea    -0x490(%rbp),%rcx
  42a762:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a769:	48 89 ce             	mov    %rcx,%rsi
  42a76c:	48 89 c7             	mov    %rax,%rdi
  42a76f:	e8 72 f7 ff ff       	callq  429ee6 <addliteral>
  42a774:	e9 33 01 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a779:	48 8d 95 68 fb ff ff 	lea    -0x498(%rbp),%rdx
  42a780:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42a783:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a78a:	89 ce                	mov    %ecx,%esi
  42a78c:	48 89 c7             	mov    %rax,%rdi
  42a78f:	e8 3c d1 fd ff       	callq  4078d0 <luaL_tolstring>
  42a794:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  42a798:	0f b6 85 42 fb ff ff 	movzbl -0x4be(%rbp),%eax
  42a79f:	84 c0                	test   %al,%al
  42a7a1:	75 14                	jne    42a7b7 <str_format+0x4fc>
  42a7a3:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a7aa:	48 89 c7             	mov    %rax,%rdi
  42a7ad:	e8 48 c7 fd ff       	callq  406efa <luaL_addvalue>
  42a7b2:	e9 f5 00 00 00       	jmpq   42a8ac <str_format+0x5f1>
  42a7b7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42a7bb:	48 89 c7             	mov    %rax,%rdi
  42a7be:	e8 ad 6f fd ff       	callq  401770 <strlen@plt>
  42a7c3:	48 89 c2             	mov    %rax,%rdx
  42a7c6:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  42a7cd:	48 39 c2             	cmp    %rax,%rdx
  42a7d0:	0f 94 c0             	sete   %al
  42a7d3:	0f b6 c0             	movzbl %al,%eax
  42a7d6:	48 85 c0             	test   %rax,%rax
  42a7d9:	75 1b                	jne    42a7f6 <str_format+0x53b>
  42a7db:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42a7de:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a7e5:	ba e6 17 44 00       	mov    $0x4417e6,%edx
  42a7ea:	89 ce                	mov    %ecx,%esi
  42a7ec:	48 89 c7             	mov    %rax,%rdi
  42a7ef:	e8 fe b6 fd ff       	callq  405ef2 <luaL_argerror>
  42a7f4:	85 c0                	test   %eax,%eax
  42a7f6:	90                   	nop
  42a7f7:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  42a7fe:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a805:	b9 01 00 00 00       	mov    $0x1,%ecx
  42a80a:	ba a2 17 44 00       	mov    $0x4417a2,%edx
  42a80f:	48 89 c7             	mov    %rax,%rdi
  42a812:	e8 be f8 ff ff       	callq  42a0d5 <checkformat>
  42a817:	48 8d 85 40 fb ff ff 	lea    -0x4c0(%rbp),%rax
  42a81e:	be 2e 00 00 00       	mov    $0x2e,%esi
  42a823:	48 89 c7             	mov    %rax,%rdi
  42a826:	e8 15 6f fd ff       	callq  401740 <strchr@plt>
  42a82b:	48 85 c0             	test   %rax,%rax
  42a82e:	75 1e                	jne    42a84e <str_format+0x593>
  42a830:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  42a837:	48 83 f8 63          	cmp    $0x63,%rax
  42a83b:	76 11                	jbe    42a84e <str_format+0x593>
  42a83d:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a844:	48 89 c7             	mov    %rax,%rdi
  42a847:	e8 ae c6 fd ff       	callq  406efa <luaL_addvalue>
  42a84c:	eb 39                	jmp    42a887 <str_format+0x5cc>
  42a84e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a851:	48 63 f0             	movslq %eax,%rsi
  42a854:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42a858:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a85f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a863:	48 89 c7             	mov    %rax,%rdi
  42a866:	b8 00 00 00 00       	mov    $0x0,%eax
  42a86b:	e8 e0 71 fd ff       	callq  401a50 <snprintf@plt>
  42a870:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42a873:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a87a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42a87f:	48 89 c7             	mov    %rax,%rdi
  42a882:	e8 fd 76 fd ff       	callq  401f84 <lua_settop>
  42a887:	90                   	nop
  42a888:	eb 22                	jmp    42a8ac <str_format+0x5f1>
  42a88a:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42a891:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42a898:	be 00 18 44 00       	mov    $0x441800,%esi
  42a89d:	48 89 c7             	mov    %rax,%rdi
  42a8a0:	b8 00 00 00 00       	mov    $0x0,%eax
  42a8a5:	e8 46 b9 fd ff       	callq  4061f0 <luaL_error>
  42a8aa:	eb 38                	jmp    42a8e4 <str_format+0x629>
  42a8ac:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
  42a8b3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42a8b6:	48 98                	cltq   
  42a8b8:	48 01 d0             	add    %rdx,%rax
  42a8bb:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
  42a8c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42a8c6:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  42a8ca:	0f 82 5f fa ff ff    	jb     42a32f <str_format+0x74>
  42a8d0:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42a8d7:	48 89 c7             	mov    %rax,%rdi
  42a8da:	e8 60 c5 fd ff       	callq  406e3f <luaL_pushresult>
  42a8df:	b8 01 00 00 00       	mov    $0x1,%eax
  42a8e4:	c9                   	leaveq 
  42a8e5:	c3                   	retq   

000000000042a8e6 <digit>:
  42a8e6:	55                   	push   %rbp
  42a8e7:	48 89 e5             	mov    %rsp,%rbp
  42a8ea:	89 7d fc             	mov    %edi,-0x4(%rbp)
  42a8ed:	83 7d fc 2f          	cmpl   $0x2f,-0x4(%rbp)
  42a8f1:	7e 0d                	jle    42a900 <digit+0x1a>
  42a8f3:	83 7d fc 39          	cmpl   $0x39,-0x4(%rbp)
  42a8f7:	7f 07                	jg     42a900 <digit+0x1a>
  42a8f9:	b8 01 00 00 00       	mov    $0x1,%eax
  42a8fe:	eb 05                	jmp    42a905 <digit+0x1f>
  42a900:	b8 00 00 00 00       	mov    $0x0,%eax
  42a905:	5d                   	pop    %rbp
  42a906:	c3                   	retq   

000000000042a907 <getnum>:
  42a907:	55                   	push   %rbp
  42a908:	48 89 e5             	mov    %rsp,%rbp
  42a90b:	48 83 ec 20          	sub    $0x20,%rsp
  42a90f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42a913:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42a916:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a91a:	48 8b 00             	mov    (%rax),%rax
  42a91d:	0f b6 00             	movzbl (%rax),%eax
  42a920:	0f be c0             	movsbl %al,%eax
  42a923:	89 c7                	mov    %eax,%edi
  42a925:	e8 bc ff ff ff       	callq  42a8e6 <digit>
  42a92a:	85 c0                	test   %eax,%eax
  42a92c:	75 05                	jne    42a933 <getnum+0x2c>
  42a92e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a931:	eb 59                	jmp    42a98c <getnum+0x85>
  42a933:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42a93a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a93d:	89 d0                	mov    %edx,%eax
  42a93f:	c1 e0 02             	shl    $0x2,%eax
  42a942:	01 d0                	add    %edx,%eax
  42a944:	01 c0                	add    %eax,%eax
  42a946:	89 c6                	mov    %eax,%esi
  42a948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a94c:	48 8b 00             	mov    (%rax),%rax
  42a94f:	48 8d 48 01          	lea    0x1(%rax),%rcx
  42a953:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42a957:	48 89 0a             	mov    %rcx,(%rdx)
  42a95a:	0f b6 00             	movzbl (%rax),%eax
  42a95d:	0f be c0             	movsbl %al,%eax
  42a960:	83 e8 30             	sub    $0x30,%eax
  42a963:	01 f0                	add    %esi,%eax
  42a965:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42a968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a96c:	48 8b 00             	mov    (%rax),%rax
  42a96f:	0f b6 00             	movzbl (%rax),%eax
  42a972:	0f be c0             	movsbl %al,%eax
  42a975:	89 c7                	mov    %eax,%edi
  42a977:	e8 6a ff ff ff       	callq  42a8e6 <digit>
  42a97c:	85 c0                	test   %eax,%eax
  42a97e:	74 09                	je     42a989 <getnum+0x82>
  42a980:	81 7d fc cb cc cc 0c 	cmpl   $0xccccccb,-0x4(%rbp)
  42a987:	7e b1                	jle    42a93a <getnum+0x33>
  42a989:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42a98c:	c9                   	leaveq 
  42a98d:	c3                   	retq   

000000000042a98e <getnumlimit>:
  42a98e:	55                   	push   %rbp
  42a98f:	48 89 e5             	mov    %rsp,%rbp
  42a992:	48 83 ec 30          	sub    $0x30,%rsp
  42a996:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42a99a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42a99e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42a9a1:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42a9a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a9a8:	89 d6                	mov    %edx,%esi
  42a9aa:	48 89 c7             	mov    %rax,%rdi
  42a9ad:	e8 55 ff ff ff       	callq  42a907 <getnum>
  42a9b2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42a9b5:	83 7d fc 10          	cmpl   $0x10,-0x4(%rbp)
  42a9b9:	7f 06                	jg     42a9c1 <getnumlimit+0x33>
  42a9bb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42a9bf:	7f 07                	jg     42a9c8 <getnumlimit+0x3a>
  42a9c1:	b8 01 00 00 00       	mov    $0x1,%eax
  42a9c6:	eb 05                	jmp    42a9cd <getnumlimit+0x3f>
  42a9c8:	b8 00 00 00 00       	mov    $0x0,%eax
  42a9cd:	85 c0                	test   %eax,%eax
  42a9cf:	0f 95 c0             	setne  %al
  42a9d2:	0f b6 c0             	movzbl %al,%eax
  42a9d5:	48 85 c0             	test   %rax,%rax
  42a9d8:	74 23                	je     42a9fd <getnumlimit+0x6f>
  42a9da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a9de:	48 8b 00             	mov    (%rax),%rax
  42a9e1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42a9e4:	b9 10 00 00 00       	mov    $0x10,%ecx
  42a9e9:	be f0 19 44 00       	mov    $0x4419f0,%esi
  42a9ee:	48 89 c7             	mov    %rax,%rdi
  42a9f1:	b8 00 00 00 00       	mov    $0x0,%eax
  42a9f6:	e8 f5 b7 fd ff       	callq  4061f0 <luaL_error>
  42a9fb:	eb 03                	jmp    42aa00 <getnumlimit+0x72>
  42a9fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42aa00:	c9                   	leaveq 
  42aa01:	c3                   	retq   

000000000042aa02 <initheader>:
  42aa02:	55                   	push   %rbp
  42aa03:	48 89 e5             	mov    %rsp,%rbp
  42aa06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42aa0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42aa0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42aa12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42aa16:	48 89 10             	mov    %rdx,(%rax)
  42aa19:	b8 01 00 00 00       	mov    $0x1,%eax
  42aa1e:	0f be d0             	movsbl %al,%edx
  42aa21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42aa25:	89 50 08             	mov    %edx,0x8(%rax)
  42aa28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42aa2c:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
  42aa33:	90                   	nop
  42aa34:	5d                   	pop    %rbp
  42aa35:	c3                   	retq   

000000000042aa36 <getoption>:
  42aa36:	55                   	push   %rbp
  42aa37:	48 89 e5             	mov    %rsp,%rbp
  42aa3a:	48 83 ec 30          	sub    $0x30,%rsp
  42aa3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42aa42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42aa46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42aa4a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42aa4e:	48 8b 00             	mov    (%rax),%rax
  42aa51:	48 8d 48 01          	lea    0x1(%rax),%rcx
  42aa55:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42aa59:	48 89 0a             	mov    %rcx,(%rdx)
  42aa5c:	0f b6 00             	movzbl (%rax),%eax
  42aa5f:	0f be c0             	movsbl %al,%eax
  42aa62:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42aa65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aa69:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  42aa6f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42aa72:	83 e8 20             	sub    $0x20,%eax
  42aa75:	83 f8 5a             	cmp    $0x5a,%eax
  42aa78:	0f 87 3f 02 00 00    	ja     42acbd <getoption+0x287>
  42aa7e:	89 c0                	mov    %eax,%eax
  42aa80:	48 8b 04 c5 58 1a 44 	mov    0x441a58(,%rax,8),%rax
  42aa87:	00 
  42aa88:	ff e0                	jmpq   *%rax
  42aa8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aa8e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  42aa94:	b8 00 00 00 00       	mov    $0x0,%eax
  42aa99:	e9 43 02 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aa9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aaa2:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  42aaa8:	b8 01 00 00 00       	mov    $0x1,%eax
  42aaad:	e9 2f 02 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aab2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aab6:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  42aabc:	b8 00 00 00 00       	mov    $0x0,%eax
  42aac1:	e9 1b 02 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aaca:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  42aad0:	b8 01 00 00 00       	mov    $0x1,%eax
  42aad5:	e9 07 02 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aada:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aade:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42aae4:	b8 00 00 00 00       	mov    $0x0,%eax
  42aae9:	e9 f3 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aaee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aaf2:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42aaf8:	b8 01 00 00 00       	mov    $0x1,%eax
  42aafd:	e9 df 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab06:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42ab0c:	b8 00 00 00 00       	mov    $0x0,%eax
  42ab11:	e9 cb 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab1a:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42ab20:	b8 01 00 00 00       	mov    $0x1,%eax
  42ab25:	e9 b7 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab2e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42ab34:	b8 01 00 00 00       	mov    $0x1,%eax
  42ab39:	e9 a3 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab42:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
  42ab48:	b8 02 00 00 00       	mov    $0x2,%eax
  42ab4d:	e9 8f 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab56:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42ab5c:	b8 03 00 00 00       	mov    $0x3,%eax
  42ab61:	e9 7b 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab6a:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  42ab70:	b8 04 00 00 00       	mov    $0x4,%eax
  42ab75:	e9 67 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ab7a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42ab7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ab82:	ba 04 00 00 00       	mov    $0x4,%edx
  42ab87:	48 89 ce             	mov    %rcx,%rsi
  42ab8a:	48 89 c7             	mov    %rax,%rdi
  42ab8d:	e8 fc fd ff ff       	callq  42a98e <getnumlimit>
  42ab92:	89 c2                	mov    %eax,%edx
  42ab94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ab98:	89 10                	mov    %edx,(%rax)
  42ab9a:	b8 00 00 00 00       	mov    $0x0,%eax
  42ab9f:	e9 3d 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42aba4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42aba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42abac:	ba 04 00 00 00       	mov    $0x4,%edx
  42abb1:	48 89 ce             	mov    %rcx,%rsi
  42abb4:	48 89 c7             	mov    %rax,%rdi
  42abb7:	e8 d2 fd ff ff       	callq  42a98e <getnumlimit>
  42abbc:	89 c2                	mov    %eax,%edx
  42abbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42abc2:	89 10                	mov    %edx,(%rax)
  42abc4:	b8 01 00 00 00       	mov    $0x1,%eax
  42abc9:	e9 13 01 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42abce:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42abd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42abd6:	ba 08 00 00 00       	mov    $0x8,%edx
  42abdb:	48 89 ce             	mov    %rcx,%rsi
  42abde:	48 89 c7             	mov    %rax,%rdi
  42abe1:	e8 a8 fd ff ff       	callq  42a98e <getnumlimit>
  42abe6:	89 c2                	mov    %eax,%edx
  42abe8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42abec:	89 10                	mov    %edx,(%rax)
  42abee:	b8 06 00 00 00       	mov    $0x6,%eax
  42abf3:	e9 e9 00 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42abf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42abfc:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42ac01:	48 89 c7             	mov    %rax,%rdi
  42ac04:	e8 fe fc ff ff       	callq  42a907 <getnum>
  42ac09:	89 c2                	mov    %eax,%edx
  42ac0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ac0f:	89 10                	mov    %edx,(%rax)
  42ac11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ac15:	8b 00                	mov    (%rax),%eax
  42ac17:	83 f8 ff             	cmp    $0xffffffff,%eax
  42ac1a:	0f 94 c0             	sete   %al
  42ac1d:	0f b6 c0             	movzbl %al,%eax
  42ac20:	48 85 c0             	test   %rax,%rax
  42ac23:	74 19                	je     42ac3e <getoption+0x208>
  42ac25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ac29:	48 8b 00             	mov    (%rax),%rax
  42ac2c:	be 18 1a 44 00       	mov    $0x441a18,%esi
  42ac31:	48 89 c7             	mov    %rax,%rdi
  42ac34:	b8 00 00 00 00       	mov    $0x0,%eax
  42ac39:	e8 b2 b5 fd ff       	callq  4061f0 <luaL_error>
  42ac3e:	b8 05 00 00 00       	mov    $0x5,%eax
  42ac43:	e9 99 00 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ac48:	b8 07 00 00 00       	mov    $0x7,%eax
  42ac4d:	e9 8f 00 00 00       	jmpq   42ace1 <getoption+0x2ab>
  42ac52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ac56:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  42ac5c:	b8 08 00 00 00       	mov    $0x8,%eax
  42ac61:	eb 7e                	jmp    42ace1 <getoption+0x2ab>
  42ac63:	b8 09 00 00 00       	mov    $0x9,%eax
  42ac68:	eb 77                	jmp    42ace1 <getoption+0x2ab>
  42ac6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ac6e:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  42ac75:	eb 65                	jmp    42acdc <getoption+0x2a6>
  42ac77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ac7b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  42ac82:	eb 58                	jmp    42acdc <getoption+0x2a6>
  42ac84:	b8 01 00 00 00       	mov    $0x1,%eax
  42ac89:	0f be d0             	movsbl %al,%edx
  42ac8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ac90:	89 50 08             	mov    %edx,0x8(%rax)
  42ac93:	eb 47                	jmp    42acdc <getoption+0x2a6>
  42ac95:	c7 45 f8 08 00 00 00 	movl   $0x8,-0x8(%rbp)
  42ac9c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42ac9f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42aca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42aca7:	48 89 ce             	mov    %rcx,%rsi
  42acaa:	48 89 c7             	mov    %rax,%rdi
  42acad:	e8 dc fc ff ff       	callq  42a98e <getnumlimit>
  42acb2:	89 c2                	mov    %eax,%edx
  42acb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42acb8:	89 50 0c             	mov    %edx,0xc(%rax)
  42acbb:	eb 1f                	jmp    42acdc <getoption+0x2a6>
  42acbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42acc1:	48 8b 00             	mov    (%rax),%rax
  42acc4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42acc7:	be 3b 1a 44 00       	mov    $0x441a3b,%esi
  42accc:	48 89 c7             	mov    %rax,%rdi
  42accf:	b8 00 00 00 00       	mov    $0x0,%eax
  42acd4:	e8 17 b5 fd ff       	callq  4061f0 <luaL_error>
  42acd9:	eb 01                	jmp    42acdc <getoption+0x2a6>
  42acdb:	90                   	nop
  42acdc:	b8 0a 00 00 00       	mov    $0xa,%eax
  42ace1:	c9                   	leaveq 
  42ace2:	c3                   	retq   

000000000042ace3 <getdetails>:
  42ace3:	55                   	push   %rbp
  42ace4:	48 89 e5             	mov    %rsp,%rbp
  42ace7:	48 83 ec 40          	sub    $0x40,%rsp
  42aceb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42acef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42acf3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42acf7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42acfb:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  42acff:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42ad03:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ad07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ad0b:	48 89 ce             	mov    %rcx,%rsi
  42ad0e:	48 89 c7             	mov    %rax,%rdi
  42ad11:	e8 20 fd ff ff       	callq  42aa36 <getoption>
  42ad16:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42ad19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42ad1d:	8b 00                	mov    (%rax),%eax
  42ad1f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42ad22:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  42ad26:	75 4a                	jne    42ad72 <getdetails+0x8f>
  42ad28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ad2c:	48 8b 00             	mov    (%rax),%rax
  42ad2f:	0f b6 00             	movzbl (%rax),%eax
  42ad32:	84 c0                	test   %al,%al
  42ad34:	74 23                	je     42ad59 <getdetails+0x76>
  42ad36:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  42ad3a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ad3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ad42:	48 89 ce             	mov    %rcx,%rsi
  42ad45:	48 89 c7             	mov    %rax,%rdi
  42ad48:	e8 e9 fc ff ff       	callq  42aa36 <getoption>
  42ad4d:	83 f8 05             	cmp    $0x5,%eax
  42ad50:	74 07                	je     42ad59 <getdetails+0x76>
  42ad52:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ad55:	85 c0                	test   %eax,%eax
  42ad57:	75 19                	jne    42ad72 <getdetails+0x8f>
  42ad59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ad5d:	48 8b 00             	mov    (%rax),%rax
  42ad60:	ba 30 1d 44 00       	mov    $0x441d30,%edx
  42ad65:	be 01 00 00 00       	mov    $0x1,%esi
  42ad6a:	48 89 c7             	mov    %rax,%rdi
  42ad6d:	e8 80 b1 fd ff       	callq  405ef2 <luaL_argerror>
  42ad72:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ad75:	83 f8 01             	cmp    $0x1,%eax
  42ad78:	7e 06                	jle    42ad80 <getdetails+0x9d>
  42ad7a:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
  42ad7e:	75 0c                	jne    42ad8c <getdetails+0xa9>
  42ad80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42ad84:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  42ad8a:	eb 6c                	jmp    42adf8 <getdetails+0x115>
  42ad8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ad90:	8b 50 0c             	mov    0xc(%rax),%edx
  42ad93:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ad96:	39 c2                	cmp    %eax,%edx
  42ad98:	7d 0a                	jge    42ada4 <getdetails+0xc1>
  42ad9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ad9e:	8b 40 0c             	mov    0xc(%rax),%eax
  42ada1:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42ada4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ada7:	8d 50 ff             	lea    -0x1(%rax),%edx
  42adaa:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42adad:	21 d0                	and    %edx,%eax
  42adaf:	85 c0                	test   %eax,%eax
  42adb1:	0f 95 c0             	setne  %al
  42adb4:	0f b6 c0             	movzbl %al,%eax
  42adb7:	48 85 c0             	test   %rax,%rax
  42adba:	74 19                	je     42add5 <getdetails+0xf2>
  42adbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42adc0:	48 8b 00             	mov    (%rax),%rax
  42adc3:	ba 58 1d 44 00       	mov    $0x441d58,%edx
  42adc8:	be 01 00 00 00       	mov    $0x1,%esi
  42adcd:	48 89 c7             	mov    %rax,%rdi
  42add0:	e8 1d b1 fd ff       	callq  405ef2 <luaL_argerror>
  42add5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42add8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42addc:	89 d1                	mov    %edx,%ecx
  42adde:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42ade1:	83 ea 01             	sub    $0x1,%edx
  42ade4:	21 ca                	and    %ecx,%edx
  42ade6:	29 d0                	sub    %edx,%eax
  42ade8:	89 c2                	mov    %eax,%edx
  42adea:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42aded:	83 e8 01             	sub    $0x1,%eax
  42adf0:	21 c2                	and    %eax,%edx
  42adf2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42adf6:	89 10                	mov    %edx,(%rax)
  42adf8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42adfb:	c9                   	leaveq 
  42adfc:	c3                   	retq   

000000000042adfd <packint>:
  42adfd:	55                   	push   %rbp
  42adfe:	48 89 e5             	mov    %rsp,%rbp
  42ae01:	48 83 ec 30          	sub    $0x30,%rsp
  42ae05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ae09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42ae0d:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42ae10:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  42ae13:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
  42ae17:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42ae1a:	48 63 d0             	movslq %eax,%rdx
  42ae1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ae21:	48 89 d6             	mov    %rdx,%rsi
  42ae24:	48 89 c7             	mov    %rax,%rdi
  42ae27:	e8 4c bf fd ff       	callq  406d78 <luaL_prepbuffsize>
  42ae2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ae30:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42ae34:	75 0a                	jne    42ae40 <packint+0x43>
  42ae36:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42ae39:	83 e8 01             	sub    $0x1,%eax
  42ae3c:	48 98                	cltq   
  42ae3e:	eb 05                	jmp    42ae45 <packint+0x48>
  42ae40:	b8 00 00 00 00       	mov    $0x0,%eax
  42ae45:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42ae49:	48 01 d0             	add    %rdx,%rax
  42ae4c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42ae50:	88 10                	mov    %dl,(%rax)
  42ae52:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42ae59:	eb 2e                	jmp    42ae89 <packint+0x8c>
  42ae5b:	48 c1 6d e0 08       	shrq   $0x8,-0x20(%rbp)
  42ae60:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42ae64:	74 07                	je     42ae6d <packint+0x70>
  42ae66:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ae69:	48 98                	cltq   
  42ae6b:	eb 0b                	jmp    42ae78 <packint+0x7b>
  42ae6d:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42ae70:	83 e8 01             	sub    $0x1,%eax
  42ae73:	2b 45 fc             	sub    -0x4(%rbp),%eax
  42ae76:	48 98                	cltq   
  42ae78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42ae7c:	48 01 d0             	add    %rdx,%rax
  42ae7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42ae83:	88 10                	mov    %dl,(%rax)
  42ae85:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42ae89:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ae8c:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  42ae8f:	7c ca                	jl     42ae5b <packint+0x5e>
  42ae91:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  42ae95:	74 3d                	je     42aed4 <packint+0xd7>
  42ae97:	83 7d d8 08          	cmpl   $0x8,-0x28(%rbp)
  42ae9b:	7e 37                	jle    42aed4 <packint+0xd7>
  42ae9d:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%rbp)
  42aea4:	eb 26                	jmp    42aecc <packint+0xcf>
  42aea6:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42aeaa:	74 07                	je     42aeb3 <packint+0xb6>
  42aeac:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42aeaf:	48 98                	cltq   
  42aeb1:	eb 0b                	jmp    42aebe <packint+0xc1>
  42aeb3:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42aeb6:	83 e8 01             	sub    $0x1,%eax
  42aeb9:	2b 45 fc             	sub    -0x4(%rbp),%eax
  42aebc:	48 98                	cltq   
  42aebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42aec2:	48 01 d0             	add    %rdx,%rax
  42aec5:	c6 00 ff             	movb   $0xff,(%rax)
  42aec8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42aecc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42aecf:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  42aed2:	7c d2                	jl     42aea6 <packint+0xa9>
  42aed4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42aed8:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42aedc:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42aedf:	48 98                	cltq   
  42aee1:	48 01 c2             	add    %rax,%rdx
  42aee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42aee8:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42aeec:	90                   	nop
  42aeed:	c9                   	leaveq 
  42aeee:	c3                   	retq   

000000000042aeef <copywithendian>:
  42aeef:	55                   	push   %rbp
  42aef0:	48 89 e5             	mov    %rsp,%rbp
  42aef3:	48 83 ec 20          	sub    $0x20,%rsp
  42aef7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42aefb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42aeff:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42af02:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  42af05:	b8 01 00 00 00       	mov    $0x1,%eax
  42af0a:	0f be c0             	movsbl %al,%eax
  42af0d:	39 45 e8             	cmp    %eax,-0x18(%rbp)
  42af10:	75 1b                	jne    42af2d <copywithendian+0x3e>
  42af12:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42af15:	48 63 d0             	movslq %eax,%rdx
  42af18:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42af1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42af20:	48 89 ce             	mov    %rcx,%rsi
  42af23:	48 89 c7             	mov    %rax,%rdi
  42af26:	e8 35 69 fd ff       	callq  401860 <memcpy@plt>
  42af2b:	eb 39                	jmp    42af66 <copywithendian+0x77>
  42af2d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42af30:	48 98                	cltq   
  42af32:	48 83 e8 01          	sub    $0x1,%rax
  42af36:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  42af3a:	eb 1d                	jmp    42af59 <copywithendian+0x6a>
  42af3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42af40:	48 8d 42 01          	lea    0x1(%rdx),%rax
  42af44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42af48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42af4c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  42af50:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42af54:	0f b6 12             	movzbl (%rdx),%edx
  42af57:	88 10                	mov    %dl,(%rax)
  42af59:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42af5c:	8d 50 ff             	lea    -0x1(%rax),%edx
  42af5f:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42af62:	85 c0                	test   %eax,%eax
  42af64:	75 d6                	jne    42af3c <copywithendian+0x4d>
  42af66:	90                   	nop
  42af67:	c9                   	leaveq 
  42af68:	c3                   	retq   

000000000042af69 <str_pack>:
  42af69:	55                   	push   %rbp
  42af6a:	48 89 e5             	mov    %rsp,%rbp
  42af6d:	48 81 ec e0 04 00 00 	sub    $0x4e0,%rsp
  42af74:	48 89 bd 28 fb ff ff 	mov    %rdi,-0x4d8(%rbp)
  42af7b:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42af82:	ba 00 00 00 00       	mov    $0x0,%edx
  42af87:	be 01 00 00 00       	mov    $0x1,%esi
  42af8c:	48 89 c7             	mov    %rax,%rdi
  42af8f:	e8 38 b8 fd ff       	callq  4067cc <luaL_checklstring>
  42af94:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  42af9b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42afa2:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  42afa9:	00 
  42afaa:	48 8d 95 70 fb ff ff 	lea    -0x490(%rbp),%rdx
  42afb1:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42afb8:	48 89 d6             	mov    %rdx,%rsi
  42afbb:	48 89 c7             	mov    %rax,%rdi
  42afbe:	e8 3f fa ff ff       	callq  42aa02 <initheader>
  42afc3:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42afca:	48 89 c7             	mov    %rax,%rdi
  42afcd:	e8 d3 7c fd ff       	callq  402ca5 <lua_pushnil>
  42afd2:	48 8d 95 80 fb ff ff 	lea    -0x480(%rbp),%rdx
  42afd9:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42afe0:	48 89 d6             	mov    %rdx,%rsi
  42afe3:	48 89 c7             	mov    %rax,%rdi
  42afe6:	e8 9e bf fd ff       	callq  406f89 <luaL_buffinit>
  42afeb:	e9 57 06 00 00       	jmpq   42b647 <str_pack+0x6de>
  42aff0:	48 8d bd 60 fb ff ff 	lea    -0x4a0(%rbp),%rdi
  42aff7:	48 8d 8d 64 fb ff ff 	lea    -0x49c(%rbp),%rcx
  42affe:	48 8d 95 68 fb ff ff 	lea    -0x498(%rbp),%rdx
  42b005:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b009:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42b010:	49 89 f8             	mov    %rdi,%r8
  42b013:	48 89 c7             	mov    %rax,%rdi
  42b016:	e8 c8 fc ff ff       	callq  42ace3 <getdetails>
  42b01b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42b01e:	8b 95 60 fb ff ff    	mov    -0x4a0(%rbp),%edx
  42b024:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b02a:	01 d0                	add    %edx,%eax
  42b02c:	48 98                	cltq   
  42b02e:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  42b032:	eb 4a                	jmp    42b07e <str_pack+0x115>
  42b034:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b03b:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  42b042:	48 39 c2             	cmp    %rax,%rdx
  42b045:	72 17                	jb     42b05e <str_pack+0xf5>
  42b047:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b04e:	be 01 00 00 00       	mov    $0x1,%esi
  42b053:	48 89 c7             	mov    %rax,%rdi
  42b056:	e8 1d bd fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b05b:	48 85 c0             	test   %rax,%rax
  42b05e:	90                   	nop
  42b05f:	48 8b 8d 80 fb ff ff 	mov    -0x480(%rbp),%rcx
  42b066:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  42b06d:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42b071:	48 89 95 90 fb ff ff 	mov    %rdx,-0x470(%rbp)
  42b078:	48 01 c8             	add    %rcx,%rax
  42b07b:	c6 00 00             	movb   $0x0,(%rax)
  42b07e:	8b 85 60 fb ff ff    	mov    -0x4a0(%rbp),%eax
  42b084:	8d 50 ff             	lea    -0x1(%rax),%edx
  42b087:	89 95 60 fb ff ff    	mov    %edx,-0x4a0(%rbp)
  42b08d:	85 c0                	test   %eax,%eax
  42b08f:	7f a3                	jg     42b034 <str_pack+0xcb>
  42b091:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42b095:	83 7d ec 0a          	cmpl   $0xa,-0x14(%rbp)
  42b099:	0f 87 a8 05 00 00    	ja     42b647 <str_pack+0x6de>
  42b09f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42b0a2:	48 8b 04 c5 f8 1d 44 	mov    0x441df8(,%rax,8),%rax
  42b0a9:	00 
  42b0aa:	ff e0                	jmpq   *%rax
  42b0ac:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42b0af:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b0b6:	89 d6                	mov    %edx,%esi
  42b0b8:	48 89 c7             	mov    %rax,%rdi
  42b0bb:	e8 d7 b8 fd ff       	callq  406997 <luaL_checkinteger>
  42b0c0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42b0c4:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b0ca:	83 f8 07             	cmp    $0x7,%eax
  42b0cd:	7f 69                	jg     42b138 <str_pack+0x1cf>
  42b0cf:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b0d5:	c1 e0 03             	shl    $0x3,%eax
  42b0d8:	83 e8 01             	sub    $0x1,%eax
  42b0db:	ba 01 00 00 00       	mov    $0x1,%edx
  42b0e0:	89 c1                	mov    %eax,%ecx
  42b0e2:	48 d3 e2             	shl    %cl,%rdx
  42b0e5:	48 89 d0             	mov    %rdx,%rax
  42b0e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42b0ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42b0f0:	48 f7 d8             	neg    %rax
  42b0f3:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42b0f7:	7c 11                	jl     42b10a <str_pack+0x1a1>
  42b0f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b0fd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  42b101:	7d 07                	jge    42b10a <str_pack+0x1a1>
  42b103:	b8 01 00 00 00       	mov    $0x1,%eax
  42b108:	eb 05                	jmp    42b10f <str_pack+0x1a6>
  42b10a:	b8 00 00 00 00       	mov    $0x0,%eax
  42b10f:	85 c0                	test   %eax,%eax
  42b111:	0f 95 c0             	setne  %al
  42b114:	0f b6 c0             	movzbl %al,%eax
  42b117:	48 85 c0             	test   %rax,%rax
  42b11a:	75 1b                	jne    42b137 <str_pack+0x1ce>
  42b11c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b11f:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b126:	ba 81 1d 44 00       	mov    $0x441d81,%edx
  42b12b:	89 ce                	mov    %ecx,%esi
  42b12d:	48 89 c7             	mov    %rax,%rdi
  42b130:	e8 bd ad fd ff       	callq  405ef2 <luaL_argerror>
  42b135:	85 c0                	test   %eax,%eax
  42b137:	90                   	nop
  42b138:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b13c:	48 c1 e8 3f          	shr    $0x3f,%rax
  42b140:	0f b6 f8             	movzbl %al,%edi
  42b143:	8b 8d 64 fb ff ff    	mov    -0x49c(%rbp),%ecx
  42b149:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b14f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42b153:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b15a:	41 89 f8             	mov    %edi,%r8d
  42b15d:	48 89 c7             	mov    %rax,%rdi
  42b160:	e8 98 fc ff ff       	callq  42adfd <packint>
  42b165:	e9 dd 04 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b16a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42b16d:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b174:	89 d6                	mov    %edx,%esi
  42b176:	48 89 c7             	mov    %rax,%rdi
  42b179:	e8 19 b8 fd ff       	callq  406997 <luaL_checkinteger>
  42b17e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42b182:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b188:	83 f8 07             	cmp    $0x7,%eax
  42b18b:	7f 41                	jg     42b1ce <str_pack+0x265>
  42b18d:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b193:	c1 e0 03             	shl    $0x3,%eax
  42b196:	ba 01 00 00 00       	mov    $0x1,%edx
  42b19b:	89 c1                	mov    %eax,%ecx
  42b19d:	48 d3 e2             	shl    %cl,%rdx
  42b1a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42b1a4:	48 39 c2             	cmp    %rax,%rdx
  42b1a7:	0f 97 c0             	seta   %al
  42b1aa:	0f b6 c0             	movzbl %al,%eax
  42b1ad:	48 85 c0             	test   %rax,%rax
  42b1b0:	75 1b                	jne    42b1cd <str_pack+0x264>
  42b1b2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b1b5:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b1bc:	ba 92 1d 44 00       	mov    $0x441d92,%edx
  42b1c1:	89 ce                	mov    %ecx,%esi
  42b1c3:	48 89 c7             	mov    %rax,%rdi
  42b1c6:	e8 27 ad fd ff       	callq  405ef2 <luaL_argerror>
  42b1cb:	85 c0                	test   %eax,%eax
  42b1cd:	90                   	nop
  42b1ce:	8b 8d 64 fb ff ff    	mov    -0x49c(%rbp),%ecx
  42b1d4:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b1da:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42b1de:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b1e5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42b1eb:	48 89 c7             	mov    %rax,%rdi
  42b1ee:	e8 0a fc ff ff       	callq  42adfd <packint>
  42b1f3:	e9 4f 04 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b1f8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42b1fb:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b202:	89 d6                	mov    %edx,%esi
  42b204:	48 89 c7             	mov    %rax,%rdi
  42b207:	e8 8c b6 fd ff       	callq  406898 <luaL_checknumber>
  42b20c:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  42b210:	f3 0f 11 85 5c fb ff 	movss  %xmm0,-0x4a4(%rbp)
  42b217:	ff 
  42b218:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b21f:	be 04 00 00 00       	mov    $0x4,%esi
  42b224:	48 89 c7             	mov    %rax,%rdi
  42b227:	e8 4c bb fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b22c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42b230:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b236:	48 8d b5 5c fb ff ff 	lea    -0x4a4(%rbp),%rsi
  42b23d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b241:	89 d1                	mov    %edx,%ecx
  42b243:	ba 04 00 00 00       	mov    $0x4,%edx
  42b248:	48 89 c7             	mov    %rax,%rdi
  42b24b:	e8 9f fc ff ff       	callq  42aeef <copywithendian>
  42b250:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b257:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b25d:	48 98                	cltq   
  42b25f:	48 01 d0             	add    %rdx,%rax
  42b262:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  42b269:	90                   	nop
  42b26a:	e9 d8 03 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b26f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42b272:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b279:	89 d6                	mov    %edx,%esi
  42b27b:	48 89 c7             	mov    %rax,%rdi
  42b27e:	e8 15 b6 fd ff       	callq  406898 <luaL_checknumber>
  42b283:	66 48 0f 7e c0       	movq   %xmm0,%rax
  42b288:	48 89 85 50 fb ff ff 	mov    %rax,-0x4b0(%rbp)
  42b28f:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b296:	be 08 00 00 00       	mov    $0x8,%esi
  42b29b:	48 89 c7             	mov    %rax,%rdi
  42b29e:	e8 d5 ba fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b2a3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42b2a7:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b2ad:	48 8d b5 50 fb ff ff 	lea    -0x4b0(%rbp),%rsi
  42b2b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42b2b8:	89 d1                	mov    %edx,%ecx
  42b2ba:	ba 08 00 00 00       	mov    $0x8,%edx
  42b2bf:	48 89 c7             	mov    %rax,%rdi
  42b2c2:	e8 28 fc ff ff       	callq  42aeef <copywithendian>
  42b2c7:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b2ce:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b2d4:	48 98                	cltq   
  42b2d6:	48 01 d0             	add    %rdx,%rax
  42b2d9:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  42b2e0:	90                   	nop
  42b2e1:	e9 61 03 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b2e6:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42b2e9:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b2f0:	89 d6                	mov    %edx,%esi
  42b2f2:	48 89 c7             	mov    %rax,%rdi
  42b2f5:	e8 9e b5 fd ff       	callq  406898 <luaL_checknumber>
  42b2fa:	66 48 0f 7e c0       	movq   %xmm0,%rax
  42b2ff:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  42b306:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b30d:	be 08 00 00 00       	mov    $0x8,%esi
  42b312:	48 89 c7             	mov    %rax,%rdi
  42b315:	e8 5e ba fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b31a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42b31e:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b324:	48 8d b5 48 fb ff ff 	lea    -0x4b8(%rbp),%rsi
  42b32b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42b32f:	89 d1                	mov    %edx,%ecx
  42b331:	ba 08 00 00 00       	mov    $0x8,%edx
  42b336:	48 89 c7             	mov    %rax,%rdi
  42b339:	e8 b1 fb ff ff       	callq  42aeef <copywithendian>
  42b33e:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b345:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b34b:	48 98                	cltq   
  42b34d:	48 01 d0             	add    %rdx,%rax
  42b350:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  42b357:	90                   	nop
  42b358:	e9 ea 02 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b35d:	48 8d 95 40 fb ff ff 	lea    -0x4c0(%rbp),%rdx
  42b364:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b367:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b36e:	89 ce                	mov    %ecx,%esi
  42b370:	48 89 c7             	mov    %rax,%rdi
  42b373:	e8 54 b4 fd ff       	callq  4067cc <luaL_checklstring>
  42b378:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42b37c:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b382:	48 63 d0             	movslq %eax,%rdx
  42b385:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  42b38c:	48 39 c2             	cmp    %rax,%rdx
  42b38f:	0f 93 c0             	setae  %al
  42b392:	0f b6 c0             	movzbl %al,%eax
  42b395:	48 85 c0             	test   %rax,%rax
  42b398:	75 1b                	jne    42b3b5 <str_pack+0x44c>
  42b39a:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b39d:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b3a4:	ba a4 1d 44 00       	mov    $0x441da4,%edx
  42b3a9:	89 ce                	mov    %ecx,%esi
  42b3ab:	48 89 c7             	mov    %rax,%rdi
  42b3ae:	e8 3f ab fd ff       	callq  405ef2 <luaL_argerror>
  42b3b3:	85 c0                	test   %eax,%eax
  42b3b5:	90                   	nop
  42b3b6:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  42b3bd:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  42b3c1:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b3c8:	48 89 ce             	mov    %rcx,%rsi
  42b3cb:	48 89 c7             	mov    %rax,%rdi
  42b3ce:	e8 cf b9 fd ff       	callq  406da2 <luaL_addlstring>
  42b3d3:	eb 4a                	jmp    42b41f <str_pack+0x4b6>
  42b3d5:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b3dc:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  42b3e3:	48 39 c2             	cmp    %rax,%rdx
  42b3e6:	72 17                	jb     42b3ff <str_pack+0x496>
  42b3e8:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b3ef:	be 01 00 00 00       	mov    $0x1,%esi
  42b3f4:	48 89 c7             	mov    %rax,%rdi
  42b3f7:	e8 7c b9 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b3fc:	48 85 c0             	test   %rax,%rax
  42b3ff:	90                   	nop
  42b400:	48 8b 8d 80 fb ff ff 	mov    -0x480(%rbp),%rcx
  42b407:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  42b40e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42b412:	48 89 95 90 fb ff ff 	mov    %rdx,-0x470(%rbp)
  42b419:	48 01 c8             	add    %rcx,%rax
  42b41c:	c6 00 00             	movb   $0x0,(%rax)
  42b41f:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  42b426:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42b42a:	48 89 95 40 fb ff ff 	mov    %rdx,-0x4c0(%rbp)
  42b431:	8b 95 64 fb ff ff    	mov    -0x49c(%rbp),%edx
  42b437:	48 63 d2             	movslq %edx,%rdx
  42b43a:	48 39 d0             	cmp    %rdx,%rax
  42b43d:	72 96                	jb     42b3d5 <str_pack+0x46c>
  42b43f:	90                   	nop
  42b440:	e9 02 02 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b445:	48 8d 95 38 fb ff ff 	lea    -0x4c8(%rbp),%rdx
  42b44c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b44f:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b456:	89 ce                	mov    %ecx,%esi
  42b458:	48 89 c7             	mov    %rax,%rdi
  42b45b:	e8 6c b3 fd ff       	callq  4067cc <luaL_checklstring>
  42b460:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  42b464:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b46a:	83 f8 07             	cmp    $0x7,%eax
  42b46d:	7f 1f                	jg     42b48e <str_pack+0x525>
  42b46f:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  42b475:	c1 e0 03             	shl    $0x3,%eax
  42b478:	ba 01 00 00 00       	mov    $0x1,%edx
  42b47d:	89 c1                	mov    %eax,%ecx
  42b47f:	48 d3 e2             	shl    %cl,%rdx
  42b482:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42b489:	48 39 c2             	cmp    %rax,%rdx
  42b48c:	76 07                	jbe    42b495 <str_pack+0x52c>
  42b48e:	b8 01 00 00 00       	mov    $0x1,%eax
  42b493:	eb 05                	jmp    42b49a <str_pack+0x531>
  42b495:	b8 00 00 00 00       	mov    $0x0,%eax
  42b49a:	85 c0                	test   %eax,%eax
  42b49c:	0f 95 c0             	setne  %al
  42b49f:	0f b6 c0             	movzbl %al,%eax
  42b4a2:	48 85 c0             	test   %rax,%rax
  42b4a5:	75 1b                	jne    42b4c2 <str_pack+0x559>
  42b4a7:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b4aa:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b4b1:	ba c8 1d 44 00       	mov    $0x441dc8,%edx
  42b4b6:	89 ce                	mov    %ecx,%esi
  42b4b8:	48 89 c7             	mov    %rax,%rdi
  42b4bb:	e8 32 aa fd ff       	callq  405ef2 <luaL_argerror>
  42b4c0:	85 c0                	test   %eax,%eax
  42b4c2:	90                   	nop
  42b4c3:	8b 8d 64 fb ff ff    	mov    -0x49c(%rbp),%ecx
  42b4c9:	8b 95 78 fb ff ff    	mov    -0x488(%rbp),%edx
  42b4cf:	48 8b b5 38 fb ff ff 	mov    -0x4c8(%rbp),%rsi
  42b4d6:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b4dd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42b4e3:	48 89 c7             	mov    %rax,%rdi
  42b4e6:	e8 12 f9 ff ff       	callq  42adfd <packint>
  42b4eb:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
  42b4f2:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  42b4f6:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b4fd:	48 89 ce             	mov    %rcx,%rsi
  42b500:	48 89 c7             	mov    %rax,%rdi
  42b503:	e8 9a b8 fd ff       	callq  406da2 <luaL_addlstring>
  42b508:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42b50f:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  42b513:	90                   	nop
  42b514:	e9 2e 01 00 00       	jmpq   42b647 <str_pack+0x6de>
  42b519:	48 8d 95 30 fb ff ff 	lea    -0x4d0(%rbp),%rdx
  42b520:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b523:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b52a:	89 ce                	mov    %ecx,%esi
  42b52c:	48 89 c7             	mov    %rax,%rdi
  42b52f:	e8 98 b2 fd ff       	callq  4067cc <luaL_checklstring>
  42b534:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  42b538:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42b53c:	48 89 c7             	mov    %rax,%rdi
  42b53f:	e8 2c 62 fd ff       	callq  401770 <strlen@plt>
  42b544:	48 89 c2             	mov    %rax,%rdx
  42b547:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  42b54e:	48 39 c2             	cmp    %rax,%rdx
  42b551:	0f 94 c0             	sete   %al
  42b554:	0f b6 c0             	movzbl %al,%eax
  42b557:	48 85 c0             	test   %rax,%rax
  42b55a:	75 1b                	jne    42b577 <str_pack+0x60e>
  42b55c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42b55f:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42b566:	ba e6 17 44 00       	mov    $0x4417e6,%edx
  42b56b:	89 ce                	mov    %ecx,%esi
  42b56d:	48 89 c7             	mov    %rax,%rdi
  42b570:	e8 7d a9 fd ff       	callq  405ef2 <luaL_argerror>
  42b575:	85 c0                	test   %eax,%eax
  42b577:	90                   	nop
  42b578:	48 8b 95 30 fb ff ff 	mov    -0x4d0(%rbp),%rdx
  42b57f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42b583:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b58a:	48 89 ce             	mov    %rcx,%rsi
  42b58d:	48 89 c7             	mov    %rax,%rdi
  42b590:	e8 0d b8 fd ff       	callq  406da2 <luaL_addlstring>
  42b595:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b59c:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  42b5a3:	48 39 c2             	cmp    %rax,%rdx
  42b5a6:	72 17                	jb     42b5bf <str_pack+0x656>
  42b5a8:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b5af:	be 01 00 00 00       	mov    $0x1,%esi
  42b5b4:	48 89 c7             	mov    %rax,%rdi
  42b5b7:	e8 bc b7 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b5bc:	48 85 c0             	test   %rax,%rax
  42b5bf:	90                   	nop
  42b5c0:	48 8b 8d 80 fb ff ff 	mov    -0x480(%rbp),%rcx
  42b5c7:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  42b5ce:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42b5d2:	48 89 95 90 fb ff ff 	mov    %rdx,-0x470(%rbp)
  42b5d9:	48 01 c8             	add    %rcx,%rax
  42b5dc:	c6 00 00             	movb   $0x0,(%rax)
  42b5df:	48 8b 95 30 fb ff ff 	mov    -0x4d0(%rbp),%rdx
  42b5e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b5ea:	48 01 d0             	add    %rdx,%rax
  42b5ed:	48 83 c0 01          	add    $0x1,%rax
  42b5f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42b5f5:	90                   	nop
  42b5f6:	eb 4f                	jmp    42b647 <str_pack+0x6de>
  42b5f8:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  42b5ff:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  42b606:	48 39 c2             	cmp    %rax,%rdx
  42b609:	72 17                	jb     42b622 <str_pack+0x6b9>
  42b60b:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b612:	be 01 00 00 00       	mov    $0x1,%esi
  42b617:	48 89 c7             	mov    %rax,%rdi
  42b61a:	e8 59 b7 fd ff       	callq  406d78 <luaL_prepbuffsize>
  42b61f:	48 85 c0             	test   %rax,%rax
  42b622:	90                   	nop
  42b623:	48 8b 8d 80 fb ff ff 	mov    -0x480(%rbp),%rcx
  42b62a:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  42b631:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42b635:	48 89 95 90 fb ff ff 	mov    %rdx,-0x470(%rbp)
  42b63c:	48 01 c8             	add    %rcx,%rax
  42b63f:	c6 00 00             	movb   $0x0,(%rax)
  42b642:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  42b646:	90                   	nop
  42b647:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  42b64e:	0f b6 00             	movzbl (%rax),%eax
  42b651:	84 c0                	test   %al,%al
  42b653:	0f 85 97 f9 ff ff    	jne    42aff0 <str_pack+0x87>
  42b659:	48 8d 85 80 fb ff ff 	lea    -0x480(%rbp),%rax
  42b660:	48 89 c7             	mov    %rax,%rdi
  42b663:	e8 d7 b7 fd ff       	callq  406e3f <luaL_pushresult>
  42b668:	b8 01 00 00 00       	mov    $0x1,%eax
  42b66d:	c9                   	leaveq 
  42b66e:	c3                   	retq   

000000000042b66f <str_packsize>:
  42b66f:	55                   	push   %rbp
  42b670:	48 89 e5             	mov    %rsp,%rbp
  42b673:	48 83 ec 40          	sub    $0x40,%rsp
  42b677:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42b67b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b67f:	ba 00 00 00 00       	mov    $0x0,%edx
  42b684:	be 01 00 00 00       	mov    $0x1,%esi
  42b689:	48 89 c7             	mov    %rax,%rdi
  42b68c:	e8 3b b1 fd ff       	callq  4067cc <luaL_checklstring>
  42b691:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42b695:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42b69c:	00 
  42b69d:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  42b6a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b6a5:	48 89 d6             	mov    %rdx,%rsi
  42b6a8:	48 89 c7             	mov    %rax,%rdi
  42b6ab:	e8 52 f3 ff ff       	callq  42aa02 <initheader>
  42b6b0:	e9 ac 00 00 00       	jmpq   42b761 <str_packsize+0xf2>
  42b6b5:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  42b6b9:	48 8d 4d d4          	lea    -0x2c(%rbp),%rcx
  42b6bd:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  42b6c1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42b6c5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  42b6c9:	49 89 f8             	mov    %rdi,%r8
  42b6cc:	48 89 c7             	mov    %rax,%rdi
  42b6cf:	e8 0f f6 ff ff       	callq  42ace3 <getdetails>
  42b6d4:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42b6d7:	83 7d f4 06          	cmpl   $0x6,-0xc(%rbp)
  42b6db:	74 0d                	je     42b6ea <str_packsize+0x7b>
  42b6dd:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  42b6e1:	74 07                	je     42b6ea <str_packsize+0x7b>
  42b6e3:	b8 01 00 00 00       	mov    $0x1,%eax
  42b6e8:	eb 05                	jmp    42b6ef <str_packsize+0x80>
  42b6ea:	b8 00 00 00 00       	mov    $0x0,%eax
  42b6ef:	85 c0                	test   %eax,%eax
  42b6f1:	0f 95 c0             	setne  %al
  42b6f4:	0f b6 c0             	movzbl %al,%eax
  42b6f7:	48 85 c0             	test   %rax,%rax
  42b6fa:	75 18                	jne    42b714 <str_packsize+0xa5>
  42b6fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b700:	ba 50 1e 44 00       	mov    $0x441e50,%edx
  42b705:	be 01 00 00 00       	mov    $0x1,%esi
  42b70a:	48 89 c7             	mov    %rax,%rdi
  42b70d:	e8 e0 a7 fd ff       	callq  405ef2 <luaL_argerror>
  42b712:	85 c0                	test   %eax,%eax
  42b714:	90                   	nop
  42b715:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  42b718:	8b 45 d0             	mov    -0x30(%rbp),%eax
  42b71b:	01 d0                	add    %edx,%eax
  42b71d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42b720:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42b723:	48 98                	cltq   
  42b725:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
  42b72a:	48 29 c2             	sub    %rax,%rdx
  42b72d:	48 89 d0             	mov    %rdx,%rax
  42b730:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  42b734:	0f 96 c0             	setbe  %al
  42b737:	0f b6 c0             	movzbl %al,%eax
  42b73a:	48 85 c0             	test   %rax,%rax
  42b73d:	75 18                	jne    42b757 <str_packsize+0xe8>
  42b73f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b743:	ba 67 1e 44 00       	mov    $0x441e67,%edx
  42b748:	be 01 00 00 00       	mov    $0x1,%esi
  42b74d:	48 89 c7             	mov    %rax,%rdi
  42b750:	e8 9d a7 fd ff       	callq  405ef2 <luaL_argerror>
  42b755:	85 c0                	test   %eax,%eax
  42b757:	90                   	nop
  42b758:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42b75b:	48 98                	cltq   
  42b75d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  42b761:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42b765:	0f b6 00             	movzbl (%rax),%eax
  42b768:	84 c0                	test   %al,%al
  42b76a:	0f 85 45 ff ff ff    	jne    42b6b5 <str_packsize+0x46>
  42b770:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42b774:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42b778:	48 89 d6             	mov    %rdx,%rsi
  42b77b:	48 89 c7             	mov    %rax,%rdi
  42b77e:	e8 92 75 fd ff       	callq  402d15 <lua_pushinteger>
  42b783:	b8 01 00 00 00       	mov    $0x1,%eax
  42b788:	c9                   	leaveq 
  42b789:	c3                   	retq   

000000000042b78a <unpackint>:
  42b78a:	55                   	push   %rbp
  42b78b:	48 89 e5             	mov    %rsp,%rbp
  42b78e:	48 83 ec 40          	sub    $0x40,%rsp
  42b792:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42b796:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42b79a:	89 55 cc             	mov    %edx,-0x34(%rbp)
  42b79d:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  42b7a0:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  42b7a4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42b7ab:	00 
  42b7ac:	b8 08 00 00 00       	mov    $0x8,%eax
  42b7b1:	83 7d c8 08          	cmpl   $0x8,-0x38(%rbp)
  42b7b5:	0f 4e 45 c8          	cmovle -0x38(%rbp),%eax
  42b7b9:	89 45 f0             	mov    %eax,-0x10(%rbp)
  42b7bc:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42b7bf:	83 e8 01             	sub    $0x1,%eax
  42b7c2:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42b7c5:	eb 32                	jmp    42b7f9 <unpackint+0x6f>
  42b7c7:	48 c1 65 f8 08       	shlq   $0x8,-0x8(%rbp)
  42b7cc:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  42b7d0:	74 07                	je     42b7d9 <unpackint+0x4f>
  42b7d2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42b7d5:	48 98                	cltq   
  42b7d7:	eb 0b                	jmp    42b7e4 <unpackint+0x5a>
  42b7d9:	8b 45 c8             	mov    -0x38(%rbp),%eax
  42b7dc:	83 e8 01             	sub    $0x1,%eax
  42b7df:	2b 45 f4             	sub    -0xc(%rbp),%eax
  42b7e2:	48 98                	cltq   
  42b7e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42b7e8:	48 01 d0             	add    %rdx,%rax
  42b7eb:	0f b6 00             	movzbl (%rax),%eax
  42b7ee:	0f b6 c0             	movzbl %al,%eax
  42b7f1:	48 09 45 f8          	or     %rax,-0x8(%rbp)
  42b7f5:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  42b7f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42b7fd:	79 c8                	jns    42b7c7 <unpackint+0x3d>
  42b7ff:	83 7d c8 07          	cmpl   $0x7,-0x38(%rbp)
  42b803:	7f 39                	jg     42b83e <unpackint+0xb4>
  42b805:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  42b809:	0f 84 b3 00 00 00    	je     42b8c2 <unpackint+0x138>
  42b80f:	8b 45 c8             	mov    -0x38(%rbp),%eax
  42b812:	c1 e0 03             	shl    $0x3,%eax
  42b815:	83 e8 01             	sub    $0x1,%eax
  42b818:	ba 01 00 00 00       	mov    $0x1,%edx
  42b81d:	89 c1                	mov    %eax,%ecx
  42b81f:	48 d3 e2             	shl    %cl,%rdx
  42b822:	48 89 d0             	mov    %rdx,%rax
  42b825:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42b829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42b82d:	48 33 45 e8          	xor    -0x18(%rbp),%rax
  42b831:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
  42b835:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42b839:	e9 84 00 00 00       	jmpq   42b8c2 <unpackint+0x138>
  42b83e:	83 7d c8 08          	cmpl   $0x8,-0x38(%rbp)
  42b842:	7e 7e                	jle    42b8c2 <unpackint+0x138>
  42b844:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  42b848:	74 09                	je     42b853 <unpackint+0xc9>
  42b84a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42b84e:	48 85 c0             	test   %rax,%rax
  42b851:	78 07                	js     42b85a <unpackint+0xd0>
  42b853:	b8 00 00 00 00       	mov    $0x0,%eax
  42b858:	eb 05                	jmp    42b85f <unpackint+0xd5>
  42b85a:	b8 ff 00 00 00       	mov    $0xff,%eax
  42b85f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b862:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42b865:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42b868:	eb 50                	jmp    42b8ba <unpackint+0x130>
  42b86a:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  42b86e:	74 07                	je     42b877 <unpackint+0xed>
  42b870:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42b873:	48 98                	cltq   
  42b875:	eb 0b                	jmp    42b882 <unpackint+0xf8>
  42b877:	8b 45 c8             	mov    -0x38(%rbp),%eax
  42b87a:	83 e8 01             	sub    $0x1,%eax
  42b87d:	2b 45 f4             	sub    -0xc(%rbp),%eax
  42b880:	48 98                	cltq   
  42b882:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42b886:	48 01 d0             	add    %rdx,%rax
  42b889:	0f b6 00             	movzbl (%rax),%eax
  42b88c:	0f b6 c0             	movzbl %al,%eax
  42b88f:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  42b892:	0f 95 c0             	setne  %al
  42b895:	0f b6 c0             	movzbl %al,%eax
  42b898:	48 85 c0             	test   %rax,%rax
  42b89b:	74 19                	je     42b8b6 <unpackint+0x12c>
  42b89d:	8b 55 c8             	mov    -0x38(%rbp),%edx
  42b8a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42b8a4:	be 80 1e 44 00       	mov    $0x441e80,%esi
  42b8a9:	48 89 c7             	mov    %rax,%rdi
  42b8ac:	b8 00 00 00 00       	mov    $0x0,%eax
  42b8b1:	e8 3a a9 fd ff       	callq  4061f0 <luaL_error>
  42b8b6:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  42b8ba:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42b8bd:	3b 45 c8             	cmp    -0x38(%rbp),%eax
  42b8c0:	7c a8                	jl     42b86a <unpackint+0xe0>
  42b8c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42b8c6:	c9                   	leaveq 
  42b8c7:	c3                   	retq   

000000000042b8c8 <str_unpack>:
  42b8c8:	55                   	push   %rbp
  42b8c9:	48 89 e5             	mov    %rsp,%rbp
  42b8cc:	53                   	push   %rbx
  42b8cd:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  42b8d4:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  42b8db:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b8e2:	ba 00 00 00 00       	mov    $0x0,%edx
  42b8e7:	be 01 00 00 00       	mov    $0x1,%esi
  42b8ec:	48 89 c7             	mov    %rax,%rdi
  42b8ef:	e8 d8 ae fd ff       	callq  4067cc <luaL_checklstring>
  42b8f4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  42b8f8:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  42b8fc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b903:	be 02 00 00 00       	mov    $0x2,%esi
  42b908:	48 89 c7             	mov    %rax,%rdi
  42b90b:	e8 bc ae fd ff       	callq  4067cc <luaL_checklstring>
  42b910:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42b914:	48 8b 5d 90          	mov    -0x70(%rbp),%rbx
  42b918:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b91f:	ba 01 00 00 00       	mov    $0x1,%edx
  42b924:	be 03 00 00 00       	mov    $0x3,%esi
  42b929:	48 89 c7             	mov    %rax,%rdi
  42b92c:	e8 b5 b0 fd ff       	callq  4069e6 <luaL_optinteger>
  42b931:	48 89 de             	mov    %rbx,%rsi
  42b934:	48 89 c7             	mov    %rax,%rdi
  42b937:	e8 ca b9 ff ff       	callq  427306 <posrelatI>
  42b93c:	48 83 e8 01          	sub    $0x1,%rax
  42b940:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42b944:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  42b94b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42b94f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  42b953:	0f 96 c0             	setbe  %al
  42b956:	0f b6 c0             	movzbl %al,%eax
  42b959:	48 85 c0             	test   %rax,%rax
  42b95c:	75 1b                	jne    42b979 <str_unpack+0xb1>
  42b95e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b965:	ba b0 1e 44 00       	mov    $0x441eb0,%edx
  42b96a:	be 03 00 00 00       	mov    $0x3,%esi
  42b96f:	48 89 c7             	mov    %rax,%rdi
  42b972:	e8 7b a5 fd ff       	callq  405ef2 <luaL_argerror>
  42b977:	85 c0                	test   %eax,%eax
  42b979:	90                   	nop
  42b97a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
  42b97e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b985:	48 89 d6             	mov    %rdx,%rsi
  42b988:	48 89 c7             	mov    %rax,%rdi
  42b98b:	e8 72 f0 ff ff       	callq  42aa02 <initheader>
  42b990:	e9 0f 03 00 00       	jmpq   42bca4 <str_unpack+0x3dc>
  42b995:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
  42b999:	48 8d 4d 8c          	lea    -0x74(%rbp),%rcx
  42b99d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
  42b9a1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42b9a5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  42b9a9:	49 89 f8             	mov    %rdi,%r8
  42b9ac:	48 89 c7             	mov    %rax,%rdi
  42b9af:	e8 2f f3 ff ff       	callq  42ace3 <getdetails>
  42b9b4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42b9b7:	8b 45 88             	mov    -0x78(%rbp),%eax
  42b9ba:	48 63 d0             	movslq %eax,%rdx
  42b9bd:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42b9c0:	48 98                	cltq   
  42b9c2:	48 01 c2             	add    %rax,%rdx
  42b9c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42b9c9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
  42b9cd:	48 39 c2             	cmp    %rax,%rdx
  42b9d0:	0f 96 c0             	setbe  %al
  42b9d3:	0f b6 c0             	movzbl %al,%eax
  42b9d6:	48 85 c0             	test   %rax,%rax
  42b9d9:	75 1b                	jne    42b9f6 <str_unpack+0x12e>
  42b9db:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42b9e2:	ba cf 1e 44 00       	mov    $0x441ecf,%edx
  42b9e7:	be 02 00 00 00       	mov    $0x2,%esi
  42b9ec:	48 89 c7             	mov    %rax,%rdi
  42b9ef:	e8 fe a4 fd ff       	callq  405ef2 <luaL_argerror>
  42b9f4:	85 c0                	test   %eax,%eax
  42b9f6:	90                   	nop
  42b9f7:	8b 45 88             	mov    -0x78(%rbp),%eax
  42b9fa:	48 98                	cltq   
  42b9fc:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  42ba00:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42ba07:	ba e5 1e 44 00       	mov    $0x441ee5,%edx
  42ba0c:	be 02 00 00 00       	mov    $0x2,%esi
  42ba11:	48 89 c7             	mov    %rax,%rdi
  42ba14:	e8 b7 ac fd ff       	callq  4066d0 <luaL_checkstack>
  42ba19:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  42ba1d:	83 7d d4 0a          	cmpl   $0xa,-0x2c(%rbp)
  42ba21:	0f 87 74 02 00 00    	ja     42bc9b <str_unpack+0x3d3>
  42ba27:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42ba2a:	48 8b 04 c5 20 1f 44 	mov    0x441f20(,%rax,8),%rax
  42ba31:	00 
  42ba32:	ff e0                	jmpq   *%rax
  42ba34:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  42ba38:	0f 94 c0             	sete   %al
  42ba3b:	0f b6 f8             	movzbl %al,%edi
  42ba3e:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  42ba41:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42ba44:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42ba48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ba4c:	48 01 c6             	add    %rax,%rsi
  42ba4f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42ba56:	41 89 f8             	mov    %edi,%r8d
  42ba59:	48 89 c7             	mov    %rax,%rdi
  42ba5c:	e8 29 fd ff ff       	callq  42b78a <unpackint>
  42ba61:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42ba65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42ba69:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42ba70:	48 89 d6             	mov    %rdx,%rsi
  42ba73:	48 89 c7             	mov    %rax,%rdi
  42ba76:	e8 9a 72 fd ff       	callq  402d15 <lua_pushinteger>
  42ba7b:	e9 1b 02 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42ba80:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42ba83:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ba87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ba8b:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  42ba8f:	48 8d 45 84          	lea    -0x7c(%rbp),%rax
  42ba93:	89 d1                	mov    %edx,%ecx
  42ba95:	ba 04 00 00 00       	mov    $0x4,%edx
  42ba9a:	48 89 c7             	mov    %rax,%rdi
  42ba9d:	e8 4d f4 ff ff       	callq  42aeef <copywithendian>
  42baa2:	f3 0f 10 45 84       	movss  -0x7c(%rbp),%xmm0
  42baa7:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  42baab:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bab2:	48 89 c7             	mov    %rax,%rdi
  42bab5:	e8 16 72 fd ff       	callq  402cd0 <lua_pushnumber>
  42baba:	90                   	nop
  42babb:	e9 db 01 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42bac0:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bac3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42bac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bacb:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  42bacf:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
  42bad6:	89 d1                	mov    %edx,%ecx
  42bad8:	ba 08 00 00 00       	mov    $0x8,%edx
  42badd:	48 89 c7             	mov    %rax,%rdi
  42bae0:	e8 0a f4 ff ff       	callq  42aeef <copywithendian>
  42bae5:	f2 0f 10 85 78 ff ff 	movsd  -0x88(%rbp),%xmm0
  42baec:	ff 
  42baed:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42baf4:	48 89 c7             	mov    %rax,%rdi
  42baf7:	e8 d4 71 fd ff       	callq  402cd0 <lua_pushnumber>
  42bafc:	90                   	nop
  42bafd:	e9 99 01 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42bb02:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bb05:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42bb09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bb0d:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  42bb11:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  42bb18:	89 d1                	mov    %edx,%ecx
  42bb1a:	ba 08 00 00 00       	mov    $0x8,%edx
  42bb1f:	48 89 c7             	mov    %rax,%rdi
  42bb22:	e8 c8 f3 ff ff       	callq  42aeef <copywithendian>
  42bb27:	f2 0f 10 85 70 ff ff 	movsd  -0x90(%rbp),%xmm0
  42bb2e:	ff 
  42bb2f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bb36:	48 89 c7             	mov    %rax,%rdi
  42bb39:	e8 92 71 fd ff       	callq  402cd0 <lua_pushnumber>
  42bb3e:	90                   	nop
  42bb3f:	e9 57 01 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42bb44:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42bb47:	48 63 d0             	movslq %eax,%rdx
  42bb4a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42bb4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bb52:	48 01 c1             	add    %rax,%rcx
  42bb55:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bb5c:	48 89 ce             	mov    %rcx,%rsi
  42bb5f:	48 89 c7             	mov    %rax,%rdi
  42bb62:	e8 f0 71 fd ff       	callq  402d57 <lua_pushlstring>
  42bb67:	e9 2f 01 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42bb6c:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  42bb6f:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bb72:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42bb76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bb7a:	48 01 c6             	add    %rax,%rsi
  42bb7d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bb84:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42bb8a:	48 89 c7             	mov    %rax,%rdi
  42bb8d:	e8 f8 fb ff ff       	callq  42b78a <unpackint>
  42bb92:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42bb96:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42bb9a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
  42bb9e:	48 89 c2             	mov    %rax,%rdx
  42bba1:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42bba4:	48 98                	cltq   
  42bba6:	48 29 c2             	sub    %rax,%rdx
  42bba9:	48 89 d0             	mov    %rdx,%rax
  42bbac:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
  42bbb0:	0f 96 c0             	setbe  %al
  42bbb3:	0f b6 c0             	movzbl %al,%eax
  42bbb6:	48 85 c0             	test   %rax,%rax
  42bbb9:	75 1b                	jne    42bbd6 <str_unpack+0x30e>
  42bbbb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bbc2:	ba cf 1e 44 00       	mov    $0x441ecf,%edx
  42bbc7:	be 02 00 00 00       	mov    $0x2,%esi
  42bbcc:	48 89 c7             	mov    %rax,%rdi
  42bbcf:	e8 1e a3 fd ff       	callq  405ef2 <luaL_argerror>
  42bbd4:	85 c0                	test   %eax,%eax
  42bbd6:	90                   	nop
  42bbd7:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42bbda:	48 63 d0             	movslq %eax,%rdx
  42bbdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bbe1:	48 01 c2             	add    %rax,%rdx
  42bbe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42bbe8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  42bbec:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42bbf0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bbf7:	48 89 ce             	mov    %rcx,%rsi
  42bbfa:	48 89 c7             	mov    %rax,%rdi
  42bbfd:	e8 55 71 fd ff       	callq  402d57 <lua_pushlstring>
  42bc02:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42bc06:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  42bc0a:	e9 8c 00 00 00       	jmpq   42bc9b <str_unpack+0x3d3>
  42bc0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42bc13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bc17:	48 01 d0             	add    %rdx,%rax
  42bc1a:	48 89 c7             	mov    %rax,%rdi
  42bc1d:	e8 4e 5b fd ff       	callq  401770 <strlen@plt>
  42bc22:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42bc26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42bc2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42bc2e:	48 01 c2             	add    %rax,%rdx
  42bc31:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42bc35:	48 39 c2             	cmp    %rax,%rdx
  42bc38:	0f 92 c0             	setb   %al
  42bc3b:	0f b6 c0             	movzbl %al,%eax
  42bc3e:	48 85 c0             	test   %rax,%rax
  42bc41:	75 1b                	jne    42bc5e <str_unpack+0x396>
  42bc43:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bc4a:	ba f8 1e 44 00       	mov    $0x441ef8,%edx
  42bc4f:	be 02 00 00 00       	mov    $0x2,%esi
  42bc54:	48 89 c7             	mov    %rax,%rdi
  42bc57:	e8 96 a2 fd ff       	callq  405ef2 <luaL_argerror>
  42bc5c:	85 c0                	test   %eax,%eax
  42bc5e:	90                   	nop
  42bc5f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42bc63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bc67:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  42bc6b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42bc6f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bc76:	48 89 ce             	mov    %rcx,%rsi
  42bc79:	48 89 c7             	mov    %rax,%rdi
  42bc7c:	e8 d6 70 fd ff       	callq  402d57 <lua_pushlstring>
  42bc81:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42bc85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bc89:	48 01 d0             	add    %rdx,%rax
  42bc8c:	48 83 c0 01          	add    $0x1,%rax
  42bc90:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42bc94:	eb 05                	jmp    42bc9b <str_unpack+0x3d3>
  42bc96:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  42bc9a:	90                   	nop
  42bc9b:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42bc9e:	48 98                	cltq   
  42bca0:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  42bca4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42bca8:	0f b6 00             	movzbl (%rax),%eax
  42bcab:	84 c0                	test   %al,%al
  42bcad:	0f 85 e2 fc ff ff    	jne    42b995 <str_unpack+0xcd>
  42bcb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42bcb7:	48 83 c0 01          	add    $0x1,%rax
  42bcbb:	48 89 c2             	mov    %rax,%rdx
  42bcbe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42bcc5:	48 89 d6             	mov    %rdx,%rsi
  42bcc8:	48 89 c7             	mov    %rax,%rdi
  42bccb:	e8 45 70 fd ff       	callq  402d15 <lua_pushinteger>
  42bcd0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42bcd3:	83 c0 01             	add    $0x1,%eax
  42bcd6:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  42bcdd:	5b                   	pop    %rbx
  42bcde:	5d                   	pop    %rbp
  42bcdf:	c3                   	retq   

000000000042bce0 <createmetatable>:
  42bce0:	55                   	push   %rbp
  42bce1:	48 89 e5             	mov    %rsp,%rbp
  42bce4:	48 83 ec 10          	sub    $0x10,%rsp
  42bce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42bcec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bcf0:	ba 09 00 00 00       	mov    $0x9,%edx
  42bcf5:	be 00 00 00 00       	mov    $0x0,%esi
  42bcfa:	48 89 c7             	mov    %rax,%rdi
  42bcfd:	e8 16 7b fd ff       	callq  403818 <lua_createtable>
  42bd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd06:	ba 00 00 00 00       	mov    $0x0,%edx
  42bd0b:	be 00 14 44 00       	mov    $0x441400,%esi
  42bd10:	48 89 c7             	mov    %rax,%rdi
  42bd13:	e8 12 be fd ff       	callq  407b2a <luaL_setfuncs>
  42bd18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd1c:	be 20 13 44 00       	mov    $0x441320,%esi
  42bd21:	48 89 c7             	mov    %rax,%rdi
  42bd24:	e8 e5 70 fd ff       	callq  402e0e <lua_pushstring>
  42bd29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd2d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd32:	48 89 c7             	mov    %rax,%rdi
  42bd35:	e8 d5 65 fd ff       	callq  40230f <lua_pushvalue>
  42bd3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd3e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd43:	48 89 c7             	mov    %rax,%rdi
  42bd46:	e8 8d 84 fd ff       	callq  4041d8 <lua_setmetatable>
  42bd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd4f:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd54:	48 89 c7             	mov    %rax,%rdi
  42bd57:	e8 28 62 fd ff       	callq  401f84 <lua_settop>
  42bd5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd60:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd65:	48 89 c7             	mov    %rax,%rdi
  42bd68:	e8 a2 65 fd ff       	callq  40230f <lua_pushvalue>
  42bd6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd71:	ba da 13 44 00       	mov    $0x4413da,%edx
  42bd76:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd7b:	48 89 c7             	mov    %rax,%rdi
  42bd7e:	e8 4f 80 fd ff       	callq  403dd2 <lua_setfield>
  42bd83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bd87:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42bd8c:	48 89 c7             	mov    %rax,%rdi
  42bd8f:	e8 f0 61 fd ff       	callq  401f84 <lua_settop>
  42bd94:	90                   	nop
  42bd95:	c9                   	leaveq 
  42bd96:	c3                   	retq   

000000000042bd97 <luaopen_string>:
  42bd97:	55                   	push   %rbp
  42bd98:	48 89 e5             	mov    %rsp,%rbp
  42bd9b:	48 83 ec 10          	sub    $0x10,%rsp
  42bd9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42bda3:	f2 0f 10 05 65 63 01 	movsd  0x16365(%rip),%xmm0        # 442110 <strlib+0x130>
  42bdaa:	00 
  42bdab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bdaf:	be 88 00 00 00       	mov    $0x88,%esi
  42bdb4:	48 89 c7             	mov    %rax,%rdi
  42bdb7:	e8 15 c4 fd ff       	callq  4081d1 <luaL_checkversion_>
  42bdbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bdc0:	ba 11 00 00 00       	mov    $0x11,%edx
  42bdc5:	be 00 00 00 00       	mov    $0x0,%esi
  42bdca:	48 89 c7             	mov    %rax,%rdi
  42bdcd:	e8 46 7a fd ff       	callq  403818 <lua_createtable>
  42bdd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bdd6:	ba 00 00 00 00       	mov    $0x0,%edx
  42bddb:	be e0 1f 44 00       	mov    $0x441fe0,%esi
  42bde0:	48 89 c7             	mov    %rax,%rdi
  42bde3:	e8 42 bd fd ff       	callq  407b2a <luaL_setfuncs>
  42bde8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42bdec:	48 89 c7             	mov    %rax,%rdi
  42bdef:	e8 ec fe ff ff       	callq  42bce0 <createmetatable>
  42bdf4:	b8 01 00 00 00       	mov    $0x1,%eax
  42bdf9:	c9                   	leaveq 
  42bdfa:	c3                   	retq   

000000000042bdfb <hashint>:
  42bdfb:	55                   	push   %rbp
  42bdfc:	48 89 e5             	mov    %rsp,%rbp
  42bdff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42be03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42be07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42be0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42be0f:	48 81 7d f8 ff ff ff 	cmpq   $0x7fffffff,-0x8(%rbp)
  42be16:	7f 
  42be17:	77 48                	ja     42be61 <hashint+0x66>
  42be19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42be1d:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42be21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42be25:	89 c2                	mov    %eax,%edx
  42be27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42be2b:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42be2f:	0f b6 c0             	movzbl %al,%eax
  42be32:	bf 01 00 00 00       	mov    $0x1,%edi
  42be37:	89 c1                	mov    %eax,%ecx
  42be39:	d3 e7                	shl    %cl,%edi
  42be3b:	89 f8                	mov    %edi,%eax
  42be3d:	83 e8 01             	sub    $0x1,%eax
  42be40:	83 c8 01             	or     $0x1,%eax
  42be43:	89 c1                	mov    %eax,%ecx
  42be45:	89 d0                	mov    %edx,%eax
  42be47:	99                   	cltd   
  42be48:	f7 f9                	idiv   %ecx
  42be4a:	89 d0                	mov    %edx,%eax
  42be4c:	48 63 d0             	movslq %eax,%rdx
  42be4f:	48 89 d0             	mov    %rdx,%rax
  42be52:	48 01 c0             	add    %rax,%rax
  42be55:	48 01 d0             	add    %rdx,%rax
  42be58:	48 c1 e0 03          	shl    $0x3,%rax
  42be5c:	48 01 f0             	add    %rsi,%rax
  42be5f:	eb 43                	jmp    42bea4 <hashint+0xa9>
  42be61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42be65:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42be69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42be6d:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42be71:	0f b6 c0             	movzbl %al,%eax
  42be74:	ba 01 00 00 00       	mov    $0x1,%edx
  42be79:	89 c1                	mov    %eax,%ecx
  42be7b:	d3 e2                	shl    %cl,%edx
  42be7d:	89 d0                	mov    %edx,%eax
  42be7f:	83 e8 01             	sub    $0x1,%eax
  42be82:	83 c8 01             	or     $0x1,%eax
  42be85:	48 63 c8             	movslq %eax,%rcx
  42be88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42be8c:	ba 00 00 00 00       	mov    $0x0,%edx
  42be91:	48 f7 f1             	div    %rcx
  42be94:	48 89 d0             	mov    %rdx,%rax
  42be97:	48 01 c0             	add    %rax,%rax
  42be9a:	48 01 d0             	add    %rdx,%rax
  42be9d:	48 c1 e0 03          	shl    $0x3,%rax
  42bea1:	48 01 f0             	add    %rsi,%rax
  42bea4:	5d                   	pop    %rbp
  42bea5:	c3                   	retq   

000000000042bea6 <l_hashfloat>:
  42bea6:	55                   	push   %rbp
  42bea7:	48 89 e5             	mov    %rsp,%rbp
  42beaa:	48 83 ec 20          	sub    $0x20,%rsp
  42beae:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  42beb3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  42beb7:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42bebc:	48 89 c7             	mov    %rax,%rdi
  42bebf:	e8 1c 5c fd ff       	callq  401ae0 <frexp@plt>
  42bec4:	66 0f 28 c8          	movapd %xmm0,%xmm1
  42bec8:	f2 0f 10 05 88 63 01 	movsd  0x16388(%rip),%xmm0        # 442258 <absentkey+0x118>
  42becf:	00 
  42bed0:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  42bed4:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  42bed9:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42bede:	66 0f 2f 05 7a 63 01 	comisd 0x1637a(%rip),%xmm0        # 442260 <absentkey+0x120>
  42bee5:	00 
  42bee6:	0f 93 c0             	setae  %al
  42bee9:	83 f0 01             	xor    $0x1,%eax
  42beec:	84 c0                	test   %al,%al
  42beee:	75 3c                	jne    42bf2c <l_hashfloat+0x86>
  42bef0:	f2 0f 10 05 70 63 01 	movsd  0x16370(%rip),%xmm0        # 442268 <absentkey+0x128>
  42bef7:	00 
  42bef8:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  42befd:	0f 97 c0             	seta   %al
  42bf00:	83 f0 01             	xor    $0x1,%eax
  42bf03:	84 c0                	test   %al,%al
  42bf05:	75 25                	jne    42bf2c <l_hashfloat+0x86>
  42bf07:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42bf0c:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  42bf11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42bf15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42bf19:	89 c2                	mov    %eax,%edx
  42bf1b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42bf1e:	01 d0                	add    %edx,%eax
  42bf20:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42bf23:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42bf26:	85 c0                	test   %eax,%eax
  42bf28:	79 10                	jns    42bf3a <l_hashfloat+0x94>
  42bf2a:	eb 07                	jmp    42bf33 <l_hashfloat+0x8d>
  42bf2c:	b8 00 00 00 00       	mov    $0x0,%eax
  42bf31:	eb 0a                	jmp    42bf3d <l_hashfloat+0x97>
  42bf33:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42bf36:	f7 d0                	not    %eax
  42bf38:	eb 03                	jmp    42bf3d <l_hashfloat+0x97>
  42bf3a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42bf3d:	c9                   	leaveq 
  42bf3e:	c3                   	retq   

000000000042bf3f <mainpositionTV>:
  42bf3f:	55                   	push   %rbp
  42bf40:	48 89 e5             	mov    %rsp,%rbp
  42bf43:	53                   	push   %rbx
  42bf44:	48 83 ec 58          	sub    $0x58,%rsp
  42bf48:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  42bf4c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  42bf50:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42bf54:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42bf58:	0f b6 c0             	movzbl %al,%eax
  42bf5b:	83 e0 3f             	and    $0x3f,%eax
  42bf5e:	83 f8 16             	cmp    $0x16,%eax
  42bf61:	0f 87 28 02 00 00    	ja     42c18f <mainpositionTV+0x250>
  42bf67:	89 c0                	mov    %eax,%eax
  42bf69:	48 8b 04 c5 50 21 44 	mov    0x442150(,%rax,8),%rax
  42bf70:	00 
  42bf71:	ff e0                	jmpq   *%rax
  42bf73:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42bf77:	48 8b 00             	mov    (%rax),%rax
  42bf7a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42bf7e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42bf82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42bf86:	48 89 d6             	mov    %rdx,%rsi
  42bf89:	48 89 c7             	mov    %rax,%rdi
  42bf8c:	e8 6a fe ff ff       	callq  42bdfb <hashint>
  42bf91:	e9 4d 02 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42bf96:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42bf9a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  42bf9e:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  42bfa3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42bfa7:	48 8b 58 18          	mov    0x18(%rax),%rbx
  42bfab:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  42bfb0:	e8 f1 fe ff ff       	callq  42bea6 <l_hashfloat>
  42bfb5:	89 c2                	mov    %eax,%edx
  42bfb7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42bfbb:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42bfbf:	0f b6 c0             	movzbl %al,%eax
  42bfc2:	be 01 00 00 00       	mov    $0x1,%esi
  42bfc7:	89 c1                	mov    %eax,%ecx
  42bfc9:	d3 e6                	shl    %cl,%esi
  42bfcb:	89 f0                	mov    %esi,%eax
  42bfcd:	83 e8 01             	sub    $0x1,%eax
  42bfd0:	83 c8 01             	or     $0x1,%eax
  42bfd3:	89 c1                	mov    %eax,%ecx
  42bfd5:	89 d0                	mov    %edx,%eax
  42bfd7:	99                   	cltd   
  42bfd8:	f7 f9                	idiv   %ecx
  42bfda:	89 d0                	mov    %edx,%eax
  42bfdc:	48 63 d0             	movslq %eax,%rdx
  42bfdf:	48 89 d0             	mov    %rdx,%rax
  42bfe2:	48 01 c0             	add    %rax,%rax
  42bfe5:	48 01 d0             	add    %rdx,%rax
  42bfe8:	48 c1 e0 03          	shl    $0x3,%rax
  42bfec:	48 01 d8             	add    %rbx,%rax
  42bfef:	e9 ef 01 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42bff4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42bff8:	48 8b 00             	mov    (%rax),%rax
  42bffb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42bfff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c003:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42c007:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c00b:	8b 50 0c             	mov    0xc(%rax),%edx
  42c00e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c012:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c016:	0f b6 c0             	movzbl %al,%eax
  42c019:	bf 01 00 00 00       	mov    $0x1,%edi
  42c01e:	89 c1                	mov    %eax,%ecx
  42c020:	d3 e7                	shl    %cl,%edi
  42c022:	89 f8                	mov    %edi,%eax
  42c024:	83 e8 01             	sub    $0x1,%eax
  42c027:	21 d0                	and    %edx,%eax
  42c029:	48 63 d0             	movslq %eax,%rdx
  42c02c:	48 89 d0             	mov    %rdx,%rax
  42c02f:	48 01 c0             	add    %rax,%rax
  42c032:	48 01 d0             	add    %rdx,%rax
  42c035:	48 c1 e0 03          	shl    $0x3,%rax
  42c039:	48 01 f0             	add    %rsi,%rax
  42c03c:	e9 a2 01 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42c041:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c045:	48 8b 00             	mov    (%rax),%rax
  42c048:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42c04c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c050:	48 8b 58 18          	mov    0x18(%rax),%rbx
  42c054:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c058:	48 89 c7             	mov    %rax,%rdi
  42c05b:	e8 99 a8 ff ff       	callq  4268f9 <luaS_hashlongstr>
  42c060:	89 c2                	mov    %eax,%edx
  42c062:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c066:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c06a:	0f b6 c0             	movzbl %al,%eax
  42c06d:	be 01 00 00 00       	mov    $0x1,%esi
  42c072:	89 c1                	mov    %eax,%ecx
  42c074:	d3 e6                	shl    %cl,%esi
  42c076:	89 f0                	mov    %esi,%eax
  42c078:	83 e8 01             	sub    $0x1,%eax
  42c07b:	21 d0                	and    %edx,%eax
  42c07d:	48 63 d0             	movslq %eax,%rdx
  42c080:	48 89 d0             	mov    %rdx,%rax
  42c083:	48 01 c0             	add    %rax,%rax
  42c086:	48 01 d0             	add    %rdx,%rax
  42c089:	48 c1 e0 03          	shl    $0x3,%rax
  42c08d:	48 01 d8             	add    %rbx,%rax
  42c090:	e9 4e 01 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42c095:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c099:	48 8b 40 18          	mov    0x18(%rax),%rax
  42c09d:	e9 41 01 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42c0a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c0a6:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42c0aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c0ae:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c0b2:	0f b6 c0             	movzbl %al,%eax
  42c0b5:	ba 01 00 00 00       	mov    $0x1,%edx
  42c0ba:	89 c1                	mov    %eax,%ecx
  42c0bc:	d3 e2                	shl    %cl,%edx
  42c0be:	89 d0                	mov    %edx,%eax
  42c0c0:	83 e8 01             	sub    $0x1,%eax
  42c0c3:	48 98                	cltq   
  42c0c5:	83 e0 01             	and    $0x1,%eax
  42c0c8:	48 89 c2             	mov    %rax,%rdx
  42c0cb:	48 89 d0             	mov    %rdx,%rax
  42c0ce:	48 01 c0             	add    %rax,%rax
  42c0d1:	48 01 d0             	add    %rdx,%rax
  42c0d4:	48 c1 e0 03          	shl    $0x3,%rax
  42c0d8:	48 01 f0             	add    %rsi,%rax
  42c0db:	e9 03 01 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42c0e0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c0e4:	48 8b 00             	mov    (%rax),%rax
  42c0e7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42c0eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c0ef:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42c0f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42c0f7:	89 c2                	mov    %eax,%edx
  42c0f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c0fd:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c101:	0f b6 c0             	movzbl %al,%eax
  42c104:	bf 01 00 00 00       	mov    $0x1,%edi
  42c109:	89 c1                	mov    %eax,%ecx
  42c10b:	d3 e7                	shl    %cl,%edi
  42c10d:	89 f8                	mov    %edi,%eax
  42c10f:	83 e8 01             	sub    $0x1,%eax
  42c112:	83 c8 01             	or     $0x1,%eax
  42c115:	89 c1                	mov    %eax,%ecx
  42c117:	89 d0                	mov    %edx,%eax
  42c119:	ba 00 00 00 00       	mov    $0x0,%edx
  42c11e:	f7 f1                	div    %ecx
  42c120:	89 d0                	mov    %edx,%eax
  42c122:	89 c2                	mov    %eax,%edx
  42c124:	48 89 d0             	mov    %rdx,%rax
  42c127:	48 01 c0             	add    %rax,%rax
  42c12a:	48 01 d0             	add    %rdx,%rax
  42c12d:	48 c1 e0 03          	shl    $0x3,%rax
  42c131:	48 01 f0             	add    %rsi,%rax
  42c134:	e9 aa 00 00 00       	jmpq   42c1e3 <mainpositionTV+0x2a4>
  42c139:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c13d:	48 8b 00             	mov    (%rax),%rax
  42c140:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42c144:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c148:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42c14c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42c150:	89 c2                	mov    %eax,%edx
  42c152:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c156:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c15a:	0f b6 c0             	movzbl %al,%eax
  42c15d:	bf 01 00 00 00       	mov    $0x1,%edi
  42c162:	89 c1                	mov    %eax,%ecx
  42c164:	d3 e7                	shl    %cl,%edi
  42c166:	89 f8                	mov    %edi,%eax
  42c168:	83 e8 01             	sub    $0x1,%eax
  42c16b:	83 c8 01             	or     $0x1,%eax
  42c16e:	89 c1                	mov    %eax,%ecx
  42c170:	89 d0                	mov    %edx,%eax
  42c172:	ba 00 00 00 00       	mov    $0x0,%edx
  42c177:	f7 f1                	div    %ecx
  42c179:	89 d0                	mov    %edx,%eax
  42c17b:	89 c2                	mov    %eax,%edx
  42c17d:	48 89 d0             	mov    %rdx,%rax
  42c180:	48 01 c0             	add    %rax,%rax
  42c183:	48 01 d0             	add    %rdx,%rax
  42c186:	48 c1 e0 03          	shl    $0x3,%rax
  42c18a:	48 01 f0             	add    %rsi,%rax
  42c18d:	eb 54                	jmp    42c1e3 <mainpositionTV+0x2a4>
  42c18f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c193:	48 8b 00             	mov    (%rax),%rax
  42c196:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42c19a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c19e:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42c1a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42c1a6:	89 c2                	mov    %eax,%edx
  42c1a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c1ac:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c1b0:	0f b6 c0             	movzbl %al,%eax
  42c1b3:	bf 01 00 00 00       	mov    $0x1,%edi
  42c1b8:	89 c1                	mov    %eax,%ecx
  42c1ba:	d3 e7                	shl    %cl,%edi
  42c1bc:	89 f8                	mov    %edi,%eax
  42c1be:	83 e8 01             	sub    $0x1,%eax
  42c1c1:	83 c8 01             	or     $0x1,%eax
  42c1c4:	89 c1                	mov    %eax,%ecx
  42c1c6:	89 d0                	mov    %edx,%eax
  42c1c8:	ba 00 00 00 00       	mov    $0x0,%edx
  42c1cd:	f7 f1                	div    %ecx
  42c1cf:	89 d0                	mov    %edx,%eax
  42c1d1:	89 c2                	mov    %eax,%edx
  42c1d3:	48 89 d0             	mov    %rdx,%rax
  42c1d6:	48 01 c0             	add    %rax,%rax
  42c1d9:	48 01 d0             	add    %rdx,%rax
  42c1dc:	48 c1 e0 03          	shl    $0x3,%rax
  42c1e0:	48 01 f0             	add    %rsi,%rax
  42c1e3:	48 83 c4 58          	add    $0x58,%rsp
  42c1e7:	5b                   	pop    %rbx
  42c1e8:	5d                   	pop    %rbp
  42c1e9:	c3                   	retq   

000000000042c1ea <mainpositionfromnode>:
  42c1ea:	55                   	push   %rbp
  42c1eb:	48 89 e5             	mov    %rsp,%rbp
  42c1ee:	48 83 ec 30          	sub    $0x30,%rsp
  42c1f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42c1f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42c1fa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  42c1fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42c202:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c206:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42c20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c20e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42c212:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  42c216:	48 89 10             	mov    %rdx,(%rax)
  42c219:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c21d:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  42c221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c225:	88 50 08             	mov    %dl,0x8(%rax)
  42c228:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  42c22c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c230:	48 89 d6             	mov    %rdx,%rsi
  42c233:	48 89 c7             	mov    %rax,%rdi
  42c236:	e8 04 fd ff ff       	callq  42bf3f <mainpositionTV>
  42c23b:	c9                   	leaveq 
  42c23c:	c3                   	retq   

000000000042c23d <equalkey>:
  42c23d:	55                   	push   %rbp
  42c23e:	48 89 e5             	mov    %rsp,%rbp
  42c241:	48 83 ec 20          	sub    $0x20,%rsp
  42c245:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42c249:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42c24d:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42c250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c254:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42c258:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c25c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42c260:	38 c2                	cmp    %al,%dl
  42c262:	74 2e                	je     42c292 <equalkey+0x55>
  42c264:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  42c268:	74 1e                	je     42c288 <equalkey+0x4b>
  42c26a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c26e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42c272:	3c 0b                	cmp    $0xb,%al
  42c274:	75 12                	jne    42c288 <equalkey+0x4b>
  42c276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c27a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c27e:	0f b6 c0             	movzbl %al,%eax
  42c281:	83 e0 40             	and    $0x40,%eax
  42c284:	85 c0                	test   %eax,%eax
  42c286:	75 0a                	jne    42c292 <equalkey+0x55>
  42c288:	b8 00 00 00 00       	mov    $0x0,%eax
  42c28d:	e9 06 01 00 00       	jmpq   42c398 <equalkey+0x15b>
  42c292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c296:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42c29a:	0f b6 c0             	movzbl %al,%eax
  42c29d:	83 f8 03             	cmp    $0x3,%eax
  42c2a0:	74 45                	je     42c2e7 <equalkey+0xaa>
  42c2a2:	83 f8 03             	cmp    $0x3,%eax
  42c2a5:	7f 0f                	jg     42c2b6 <equalkey+0x79>
  42c2a7:	85 c0                	test   %eax,%eax
  42c2a9:	0f 88 d1 00 00 00    	js     42c380 <equalkey+0x143>
  42c2af:	83 f8 01             	cmp    $0x1,%eax
  42c2b2:	7e 29                	jle    42c2dd <equalkey+0xa0>
  42c2b4:	eb 77                	jmp    42c32d <equalkey+0xf0>
  42c2b6:	83 f8 13             	cmp    $0x13,%eax
  42c2b9:	74 49                	je     42c304 <equalkey+0xc7>
  42c2bb:	83 f8 13             	cmp    $0x13,%eax
  42c2be:	7f 0a                	jg     42c2ca <equalkey+0x8d>
  42c2c0:	83 f8 11             	cmp    $0x11,%eax
  42c2c3:	74 18                	je     42c2dd <equalkey+0xa0>
  42c2c5:	e9 b6 00 00 00       	jmpq   42c380 <equalkey+0x143>
  42c2ca:	83 f8 16             	cmp    $0x16,%eax
  42c2cd:	74 78                	je     42c347 <equalkey+0x10a>
  42c2cf:	83 f8 54             	cmp    $0x54,%eax
  42c2d2:	0f 84 89 00 00 00    	je     42c361 <equalkey+0x124>
  42c2d8:	e9 a3 00 00 00       	jmpq   42c380 <equalkey+0x143>
  42c2dd:	b8 01 00 00 00       	mov    $0x1,%eax
  42c2e2:	e9 b1 00 00 00       	jmpq   42c398 <equalkey+0x15b>
  42c2e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c2eb:	48 8b 10             	mov    (%rax),%rdx
  42c2ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c2f2:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c2f6:	48 39 c2             	cmp    %rax,%rdx
  42c2f9:	0f 94 c0             	sete   %al
  42c2fc:	0f b6 c0             	movzbl %al,%eax
  42c2ff:	e9 94 00 00 00       	jmpq   42c398 <equalkey+0x15b>
  42c304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c308:	f2 0f 10 00          	movsd  (%rax),%xmm0
  42c30c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c310:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
  42c315:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  42c319:	0f 9b c0             	setnp  %al
  42c31c:	ba 00 00 00 00       	mov    $0x0,%edx
  42c321:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  42c325:	0f 45 c2             	cmovne %edx,%eax
  42c328:	0f b6 c0             	movzbl %al,%eax
  42c32b:	eb 6b                	jmp    42c398 <equalkey+0x15b>
  42c32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c331:	48 8b 10             	mov    (%rax),%rdx
  42c334:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c338:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c33c:	48 39 c2             	cmp    %rax,%rdx
  42c33f:	0f 94 c0             	sete   %al
  42c342:	0f b6 c0             	movzbl %al,%eax
  42c345:	eb 51                	jmp    42c398 <equalkey+0x15b>
  42c347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c34b:	48 8b 10             	mov    (%rax),%rdx
  42c34e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c352:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c356:	48 39 c2             	cmp    %rax,%rdx
  42c359:	0f 94 c0             	sete   %al
  42c35c:	0f b6 c0             	movzbl %al,%eax
  42c35f:	eb 37                	jmp    42c398 <equalkey+0x15b>
  42c361:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c365:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c369:	48 89 c2             	mov    %rax,%rdx
  42c36c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c370:	48 8b 00             	mov    (%rax),%rax
  42c373:	48 89 d6             	mov    %rdx,%rsi
  42c376:	48 89 c7             	mov    %rax,%rdi
  42c379:	e8 c0 a4 ff ff       	callq  42683e <luaS_eqlngstr>
  42c37e:	eb 18                	jmp    42c398 <equalkey+0x15b>
  42c380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c384:	48 8b 10             	mov    (%rax),%rdx
  42c387:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c38b:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c38f:	48 39 c2             	cmp    %rax,%rdx
  42c392:	0f 94 c0             	sete   %al
  42c395:	0f b6 c0             	movzbl %al,%eax
  42c398:	c9                   	leaveq 
  42c399:	c3                   	retq   

000000000042c39a <luaH_realasize>:
  42c39a:	55                   	push   %rbp
  42c39b:	48 89 e5             	mov    %rsp,%rbp
  42c39e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42c3a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c3a6:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42c3aa:	84 c0                	test   %al,%al
  42c3ac:	79 17                	jns    42c3c5 <luaH_realasize+0x2b>
  42c3ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c3b2:	8b 50 0c             	mov    0xc(%rax),%edx
  42c3b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c3b9:	8b 40 0c             	mov    0xc(%rax),%eax
  42c3bc:	83 e8 01             	sub    $0x1,%eax
  42c3bf:	21 d0                	and    %edx,%eax
  42c3c1:	85 c0                	test   %eax,%eax
  42c3c3:	75 09                	jne    42c3ce <luaH_realasize+0x34>
  42c3c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c3c9:	8b 40 0c             	mov    0xc(%rax),%eax
  42c3cc:	eb 3d                	jmp    42c40b <luaH_realasize+0x71>
  42c3ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c3d2:	8b 40 0c             	mov    0xc(%rax),%eax
  42c3d5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c3d8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c3db:	d1 e8                	shr    %eax
  42c3dd:	09 45 fc             	or     %eax,-0x4(%rbp)
  42c3e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c3e3:	c1 e8 02             	shr    $0x2,%eax
  42c3e6:	09 45 fc             	or     %eax,-0x4(%rbp)
  42c3e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c3ec:	c1 e8 04             	shr    $0x4,%eax
  42c3ef:	09 45 fc             	or     %eax,-0x4(%rbp)
  42c3f2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c3f5:	c1 e8 08             	shr    $0x8,%eax
  42c3f8:	09 45 fc             	or     %eax,-0x4(%rbp)
  42c3fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c3fe:	c1 e8 10             	shr    $0x10,%eax
  42c401:	09 45 fc             	or     %eax,-0x4(%rbp)
  42c404:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42c408:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c40b:	5d                   	pop    %rbp
  42c40c:	c3                   	retq   

000000000042c40d <ispow2realasize>:
  42c40d:	55                   	push   %rbp
  42c40e:	48 89 e5             	mov    %rsp,%rbp
  42c411:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42c415:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c419:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42c41d:	84 c0                	test   %al,%al
  42c41f:	78 17                	js     42c438 <ispow2realasize+0x2b>
  42c421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c425:	8b 50 0c             	mov    0xc(%rax),%edx
  42c428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c42c:	8b 40 0c             	mov    0xc(%rax),%eax
  42c42f:	83 e8 01             	sub    $0x1,%eax
  42c432:	21 d0                	and    %edx,%eax
  42c434:	85 c0                	test   %eax,%eax
  42c436:	75 07                	jne    42c43f <ispow2realasize+0x32>
  42c438:	b8 01 00 00 00       	mov    $0x1,%eax
  42c43d:	eb 05                	jmp    42c444 <ispow2realasize+0x37>
  42c43f:	b8 00 00 00 00       	mov    $0x0,%eax
  42c444:	5d                   	pop    %rbp
  42c445:	c3                   	retq   

000000000042c446 <setlimittosize>:
  42c446:	55                   	push   %rbp
  42c447:	48 89 e5             	mov    %rsp,%rbp
  42c44a:	48 83 ec 08          	sub    $0x8,%rsp
  42c44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42c452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c456:	48 89 c7             	mov    %rax,%rdi
  42c459:	e8 3c ff ff ff       	callq  42c39a <luaH_realasize>
  42c45e:	89 c2                	mov    %eax,%edx
  42c460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c464:	89 50 0c             	mov    %edx,0xc(%rax)
  42c467:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c46b:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42c46f:	83 e0 7f             	and    $0x7f,%eax
  42c472:	89 c2                	mov    %eax,%edx
  42c474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c478:	88 50 0a             	mov    %dl,0xa(%rax)
  42c47b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c47f:	8b 40 0c             	mov    0xc(%rax),%eax
  42c482:	c9                   	leaveq 
  42c483:	c3                   	retq   

000000000042c484 <getgeneric>:
  42c484:	55                   	push   %rbp
  42c485:	48 89 e5             	mov    %rsp,%rbp
  42c488:	48 83 ec 30          	sub    $0x30,%rsp
  42c48c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42c490:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42c494:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42c497:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42c49b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c49f:	48 89 d6             	mov    %rdx,%rsi
  42c4a2:	48 89 c7             	mov    %rax,%rdi
  42c4a5:	e8 95 fa ff ff       	callq  42bf3f <mainpositionTV>
  42c4aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42c4ae:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42c4b1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42c4b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c4b9:	48 89 ce             	mov    %rcx,%rsi
  42c4bc:	48 89 c7             	mov    %rax,%rdi
  42c4bf:	e8 79 fd ff ff       	callq  42c23d <equalkey>
  42c4c4:	85 c0                	test   %eax,%eax
  42c4c6:	74 06                	je     42c4ce <getgeneric+0x4a>
  42c4c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c4cc:	eb 30                	jmp    42c4fe <getgeneric+0x7a>
  42c4ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c4d2:	8b 40 0c             	mov    0xc(%rax),%eax
  42c4d5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42c4d8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42c4dc:	75 07                	jne    42c4e5 <getgeneric+0x61>
  42c4de:	b8 40 21 44 00       	mov    $0x442140,%eax
  42c4e3:	eb 19                	jmp    42c4fe <getgeneric+0x7a>
  42c4e5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42c4e8:	48 63 d0             	movslq %eax,%rdx
  42c4eb:	48 89 d0             	mov    %rdx,%rax
  42c4ee:	48 01 c0             	add    %rax,%rax
  42c4f1:	48 01 d0             	add    %rdx,%rax
  42c4f4:	48 c1 e0 03          	shl    $0x3,%rax
  42c4f8:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  42c4fc:	eb b0                	jmp    42c4ae <getgeneric+0x2a>
  42c4fe:	c9                   	leaveq 
  42c4ff:	c3                   	retq   

000000000042c500 <arrayindex>:
  42c500:	55                   	push   %rbp
  42c501:	48 89 e5             	mov    %rsp,%rbp
  42c504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42c508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c50c:	48 83 e8 01          	sub    $0x1,%rax
  42c510:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
  42c516:	77 06                	ja     42c51e <arrayindex+0x1e>
  42c518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c51c:	eb 05                	jmp    42c523 <arrayindex+0x23>
  42c51e:	b8 00 00 00 00       	mov    $0x0,%eax
  42c523:	5d                   	pop    %rbp
  42c524:	c3                   	retq   

000000000042c525 <findindex>:
  42c525:	55                   	push   %rbp
  42c526:	48 89 e5             	mov    %rsp,%rbp
  42c529:	48 83 ec 30          	sub    $0x30,%rsp
  42c52d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42c531:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42c535:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42c539:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  42c53c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c540:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c544:	0f b6 c0             	movzbl %al,%eax
  42c547:	83 e0 0f             	and    $0xf,%eax
  42c54a:	85 c0                	test   %eax,%eax
  42c54c:	75 0a                	jne    42c558 <findindex+0x33>
  42c54e:	b8 00 00 00 00       	mov    $0x0,%eax
  42c553:	e9 b1 00 00 00       	jmpq   42c609 <findindex+0xe4>
  42c558:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c55c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c560:	3c 03                	cmp    $0x3,%al
  42c562:	75 11                	jne    42c575 <findindex+0x50>
  42c564:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c568:	48 8b 00             	mov    (%rax),%rax
  42c56b:	48 89 c7             	mov    %rax,%rdi
  42c56e:	e8 8d ff ff ff       	callq  42c500 <arrayindex>
  42c573:	eb 05                	jmp    42c57a <findindex+0x55>
  42c575:	b8 00 00 00 00       	mov    $0x0,%eax
  42c57a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c57d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c580:	83 e8 01             	sub    $0x1,%eax
  42c583:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  42c586:	76 05                	jbe    42c58d <findindex+0x68>
  42c588:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c58b:	eb 7c                	jmp    42c609 <findindex+0xe4>
  42c58d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42c591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c595:	ba 01 00 00 00       	mov    $0x1,%edx
  42c59a:	48 89 ce             	mov    %rcx,%rsi
  42c59d:	48 89 c7             	mov    %rax,%rdi
  42c5a0:	e8 df fe ff ff       	callq  42c484 <getgeneric>
  42c5a5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42c5a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c5ad:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c5b1:	3c 20                	cmp    $0x20,%al
  42c5b3:	0f 94 c0             	sete   %al
  42c5b6:	0f b6 c0             	movzbl %al,%eax
  42c5b9:	48 85 c0             	test   %rax,%rax
  42c5bc:	74 16                	je     42c5d4 <findindex+0xaf>
  42c5be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c5c2:	be 08 22 44 00       	mov    $0x442208,%esi
  42c5c7:	48 89 c7             	mov    %rax,%rdi
  42c5ca:	b8 00 00 00 00       	mov    $0x0,%eax
  42c5cf:	e8 a5 45 fe ff       	callq  410b79 <luaG_runerror>
  42c5d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c5d8:	48 8b 40 18          	mov    0x18(%rax),%rax
  42c5dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42c5e0:	48 29 c2             	sub    %rax,%rdx
  42c5e3:	48 89 d0             	mov    %rdx,%rax
  42c5e6:	48 c1 f8 03          	sar    $0x3,%rax
  42c5ea:	48 89 c2             	mov    %rax,%rdx
  42c5ed:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  42c5f4:	aa aa aa 
  42c5f7:	48 0f af c2          	imul   %rdx,%rax
  42c5fb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c5fe:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42c601:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42c604:	01 d0                	add    %edx,%eax
  42c606:	83 c0 01             	add    $0x1,%eax
  42c609:	c9                   	leaveq 
  42c60a:	c3                   	retq   

000000000042c60b <luaH_next>:
  42c60b:	55                   	push   %rbp
  42c60c:	48 89 e5             	mov    %rsp,%rbp
  42c60f:	48 83 ec 70          	sub    $0x70,%rsp
  42c613:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  42c617:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  42c61b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  42c61f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c623:	48 89 c7             	mov    %rax,%rdi
  42c626:	e8 6f fd ff ff       	callq  42c39a <luaH_realasize>
  42c62b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42c62e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42c632:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  42c635:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  42c639:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42c63d:	48 89 c7             	mov    %rax,%rdi
  42c640:	e8 e0 fe ff ff       	callq  42c525 <findindex>
  42c645:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c648:	e9 8c 00 00 00       	jmpq   42c6d9 <luaH_next+0xce>
  42c64d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c651:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c655:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42c658:	48 c1 e2 04          	shl    $0x4,%rdx
  42c65c:	48 01 d0             	add    %rdx,%rax
  42c65f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c663:	0f b6 c0             	movzbl %al,%eax
  42c666:	83 e0 0f             	and    $0xf,%eax
  42c669:	85 c0                	test   %eax,%eax
  42c66b:	74 68                	je     42c6d5 <luaH_next+0xca>
  42c66d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42c671:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42c675:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c678:	83 c0 01             	add    $0x1,%eax
  42c67b:	89 c2                	mov    %eax,%edx
  42c67d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c681:	48 89 10             	mov    %rdx,(%rax)
  42c684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c688:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42c68c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42c690:	48 83 c0 10          	add    $0x10,%rax
  42c694:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42c698:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c69c:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c6a0:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42c6a3:	48 c1 e2 04          	shl    $0x4,%rdx
  42c6a7:	48 01 d0             	add    %rdx,%rax
  42c6aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42c6ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c6b2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42c6b6:	48 8b 12             	mov    (%rdx),%rdx
  42c6b9:	48 89 10             	mov    %rdx,(%rax)
  42c6bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c6c0:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42c6c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c6c8:	88 50 08             	mov    %dl,0x8(%rax)
  42c6cb:	b8 01 00 00 00       	mov    $0x1,%eax
  42c6d0:	e9 f5 00 00 00       	jmpq   42c7ca <luaH_next+0x1bf>
  42c6d5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42c6d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c6dc:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  42c6df:	0f 82 68 ff ff ff    	jb     42c64d <luaH_next+0x42>
  42c6e5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42c6e8:	29 45 fc             	sub    %eax,-0x4(%rbp)
  42c6eb:	e9 b6 00 00 00       	jmpq   42c7a6 <luaH_next+0x19b>
  42c6f0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c6f4:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42c6f8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42c6fb:	48 89 d0             	mov    %rdx,%rax
  42c6fe:	48 01 c0             	add    %rax,%rax
  42c701:	48 01 d0             	add    %rdx,%rax
  42c704:	48 c1 e0 03          	shl    $0x3,%rax
  42c708:	48 01 c8             	add    %rcx,%rax
  42c70b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c70f:	0f b6 c0             	movzbl %al,%eax
  42c712:	83 e0 0f             	and    $0xf,%eax
  42c715:	85 c0                	test   %eax,%eax
  42c717:	0f 84 85 00 00 00    	je     42c7a2 <luaH_next+0x197>
  42c71d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c721:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42c725:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42c728:	48 89 d0             	mov    %rdx,%rax
  42c72b:	48 01 c0             	add    %rax,%rax
  42c72e:	48 01 d0             	add    %rdx,%rax
  42c731:	48 c1 e0 03          	shl    $0x3,%rax
  42c735:	48 01 c8             	add    %rcx,%rax
  42c738:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42c73c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42c740:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42c744:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c748:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42c74c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c750:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42c754:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  42c758:	48 89 10             	mov    %rdx,(%rax)
  42c75b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42c75f:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  42c763:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c767:	88 50 08             	mov    %dl,0x8(%rax)
  42c76a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42c76e:	48 83 c0 10          	add    $0x10,%rax
  42c772:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42c776:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c77a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42c77e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42c782:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42c786:	48 8b 12             	mov    (%rdx),%rdx
  42c789:	48 89 10             	mov    %rdx,(%rax)
  42c78c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42c790:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42c794:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42c798:	88 50 08             	mov    %dl,0x8(%rax)
  42c79b:	b8 01 00 00 00       	mov    $0x1,%eax
  42c7a0:	eb 28                	jmp    42c7ca <luaH_next+0x1bf>
  42c7a2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42c7a6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42c7aa:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c7ae:	0f b6 c0             	movzbl %al,%eax
  42c7b1:	ba 01 00 00 00       	mov    $0x1,%edx
  42c7b6:	89 c1                	mov    %eax,%ecx
  42c7b8:	d3 e2                	shl    %cl,%edx
  42c7ba:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c7bd:	39 c2                	cmp    %eax,%edx
  42c7bf:	0f 8f 2b ff ff ff    	jg     42c6f0 <luaH_next+0xe5>
  42c7c5:	b8 00 00 00 00       	mov    $0x0,%eax
  42c7ca:	c9                   	leaveq 
  42c7cb:	c3                   	retq   

000000000042c7cc <freehash>:
  42c7cc:	55                   	push   %rbp
  42c7cd:	48 89 e5             	mov    %rsp,%rbp
  42c7d0:	48 83 ec 10          	sub    $0x10,%rsp
  42c7d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42c7d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42c7dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c7e0:	48 8b 40 20          	mov    0x20(%rax),%rax
  42c7e4:	48 85 c0             	test   %rax,%rax
  42c7e7:	74 40                	je     42c829 <freehash+0x5d>
  42c7e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c7ed:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42c7f1:	0f b6 c0             	movzbl %al,%eax
  42c7f4:	ba 01 00 00 00       	mov    $0x1,%edx
  42c7f9:	89 c1                	mov    %eax,%ecx
  42c7fb:	d3 e2                	shl    %cl,%edx
  42c7fd:	89 d0                	mov    %edx,%eax
  42c7ff:	48 63 d0             	movslq %eax,%rdx
  42c802:	48 89 d0             	mov    %rdx,%rax
  42c805:	48 01 c0             	add    %rax,%rax
  42c808:	48 01 d0             	add    %rdx,%rax
  42c80b:	48 c1 e0 03          	shl    $0x3,%rax
  42c80f:	48 89 c2             	mov    %rax,%rdx
  42c812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c816:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42c81a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42c81e:	48 89 ce             	mov    %rcx,%rsi
  42c821:	48 89 c7             	mov    %rax,%rdi
  42c824:	e8 56 08 ff ff       	callq  41d07f <luaM_free_>
  42c829:	90                   	nop
  42c82a:	c9                   	leaveq 
  42c82b:	c3                   	retq   

000000000042c82c <computesizes>:
  42c82c:	55                   	push   %rbp
  42c82d:	48 89 e5             	mov    %rsp,%rbp
  42c830:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42c834:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42c838:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  42c83f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  42c846:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  42c84d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42c854:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  42c85b:	eb 36                	jmp    42c893 <computesizes+0x67>
  42c85d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c860:	48 98                	cltq   
  42c862:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  42c869:	00 
  42c86a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c86e:	48 01 d0             	add    %rdx,%rax
  42c871:	8b 00                	mov    (%rax),%eax
  42c873:	01 45 f4             	add    %eax,-0xc(%rbp)
  42c876:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42c879:	d1 e8                	shr    %eax
  42c87b:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  42c87e:	76 0c                	jbe    42c88c <computesizes+0x60>
  42c880:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42c883:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42c886:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42c889:	89 45 f0             	mov    %eax,-0x10(%rbp)
  42c88c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42c890:	d1 65 f8             	shll   -0x8(%rbp)
  42c893:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  42c897:	74 0f                	je     42c8a8 <computesizes+0x7c>
  42c899:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c89d:	8b 00                	mov    (%rax),%eax
  42c89f:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42c8a2:	d1 ea                	shr    %edx
  42c8a4:	39 d0                	cmp    %edx,%eax
  42c8a6:	77 b5                	ja     42c85d <computesizes+0x31>
  42c8a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c8ac:	8b 55 f0             	mov    -0x10(%rbp),%edx
  42c8af:	89 10                	mov    %edx,(%rax)
  42c8b1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42c8b4:	5d                   	pop    %rbp
  42c8b5:	c3                   	retq   

000000000042c8b6 <countint>:
  42c8b6:	55                   	push   %rbp
  42c8b7:	48 89 e5             	mov    %rsp,%rbp
  42c8ba:	48 83 ec 20          	sub    $0x20,%rsp
  42c8be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42c8c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42c8c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c8ca:	48 89 c7             	mov    %rax,%rdi
  42c8cd:	e8 2e fc ff ff       	callq  42c500 <arrayindex>
  42c8d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c8d5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42c8d9:	74 29                	je     42c904 <countint+0x4e>
  42c8db:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c8de:	89 c7                	mov    %eax,%edi
  42c8e0:	e8 a1 1f ff ff       	callq  41e886 <luaO_ceillog2>
  42c8e5:	48 98                	cltq   
  42c8e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  42c8ee:	00 
  42c8ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c8f3:	48 01 d0             	add    %rdx,%rax
  42c8f6:	8b 10                	mov    (%rax),%edx
  42c8f8:	83 c2 01             	add    $0x1,%edx
  42c8fb:	89 10                	mov    %edx,(%rax)
  42c8fd:	b8 01 00 00 00       	mov    $0x1,%eax
  42c902:	eb 05                	jmp    42c909 <countint+0x53>
  42c904:	b8 00 00 00 00       	mov    $0x0,%eax
  42c909:	c9                   	leaveq 
  42c90a:	c3                   	retq   

000000000042c90b <numusearray>:
  42c90b:	55                   	push   %rbp
  42c90c:	48 89 e5             	mov    %rsp,%rbp
  42c90f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42c913:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42c917:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  42c91e:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
  42c925:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c929:	8b 40 0c             	mov    0xc(%rax),%eax
  42c92c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42c92f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42c936:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  42c93d:	e9 9c 00 00 00       	jmpq   42c9de <numusearray+0xd3>
  42c942:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  42c949:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42c94c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  42c94f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42c952:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  42c955:	76 41                	jbe    42c998 <numusearray+0x8d>
  42c957:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42c95a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  42c95d:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42c960:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  42c963:	0f 87 81 00 00 00    	ja     42c9ea <numusearray+0xdf>
  42c969:	eb 2d                	jmp    42c998 <numusearray+0x8d>
  42c96b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42c96f:	48 8b 40 10          	mov    0x10(%rax),%rax
  42c973:	8b 55 f0             	mov    -0x10(%rbp),%edx
  42c976:	83 ea 01             	sub    $0x1,%edx
  42c979:	89 d2                	mov    %edx,%edx
  42c97b:	48 c1 e2 04          	shl    $0x4,%rdx
  42c97f:	48 01 d0             	add    %rdx,%rax
  42c982:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42c986:	0f b6 c0             	movzbl %al,%eax
  42c989:	83 e0 0f             	and    $0xf,%eax
  42c98c:	85 c0                	test   %eax,%eax
  42c98e:	74 04                	je     42c994 <numusearray+0x89>
  42c990:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  42c994:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  42c998:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42c99b:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  42c99e:	76 cb                	jbe    42c96b <numusearray+0x60>
  42c9a0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c9a3:	48 98                	cltq   
  42c9a5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  42c9ac:	00 
  42c9ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c9b1:	48 01 d0             	add    %rdx,%rax
  42c9b4:	8b 08                	mov    (%rax),%ecx
  42c9b6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c9b9:	48 98                	cltq   
  42c9bb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  42c9c2:	00 
  42c9c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c9c7:	48 01 d0             	add    %rdx,%rax
  42c9ca:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42c9cd:	01 ca                	add    %ecx,%edx
  42c9cf:	89 10                	mov    %edx,(%rax)
  42c9d1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42c9d4:	01 45 f4             	add    %eax,-0xc(%rbp)
  42c9d7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42c9db:	d1 65 f8             	shll   -0x8(%rbp)
  42c9de:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
  42c9e2:	0f 8e 5a ff ff ff    	jle    42c942 <numusearray+0x37>
  42c9e8:	eb 01                	jmp    42c9eb <numusearray+0xe0>
  42c9ea:	90                   	nop
  42c9eb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42c9ee:	5d                   	pop    %rbp
  42c9ef:	c3                   	retq   

000000000042c9f0 <numusehash>:
  42c9f0:	55                   	push   %rbp
  42c9f1:	48 89 e5             	mov    %rsp,%rbp
  42c9f4:	48 83 ec 40          	sub    $0x40,%rsp
  42c9f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42c9fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42ca00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42ca04:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42ca0b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  42ca12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ca16:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42ca1a:	0f b6 c0             	movzbl %al,%eax
  42ca1d:	ba 01 00 00 00       	mov    $0x1,%edx
  42ca22:	89 c1                	mov    %eax,%ecx
  42ca24:	d3 e2                	shl    %cl,%edx
  42ca26:	89 d0                	mov    %edx,%eax
  42ca28:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42ca2b:	eb 5e                	jmp    42ca8b <numusehash+0x9b>
  42ca2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ca31:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42ca35:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42ca38:	48 63 d0             	movslq %eax,%rdx
  42ca3b:	48 89 d0             	mov    %rdx,%rax
  42ca3e:	48 01 c0             	add    %rax,%rax
  42ca41:	48 01 d0             	add    %rdx,%rax
  42ca44:	48 c1 e0 03          	shl    $0x3,%rax
  42ca48:	48 01 c8             	add    %rcx,%rax
  42ca4b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42ca4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca53:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ca57:	0f b6 c0             	movzbl %al,%eax
  42ca5a:	83 e0 0f             	and    $0xf,%eax
  42ca5d:	85 c0                	test   %eax,%eax
  42ca5f:	74 2a                	je     42ca8b <numusehash+0x9b>
  42ca61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca65:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42ca69:	3c 03                	cmp    $0x3,%al
  42ca6b:	75 1a                	jne    42ca87 <numusehash+0x97>
  42ca6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca71:	48 8b 40 10          	mov    0x10(%rax),%rax
  42ca75:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42ca79:	48 89 d6             	mov    %rdx,%rsi
  42ca7c:	48 89 c7             	mov    %rax,%rdi
  42ca7f:	e8 32 fe ff ff       	callq  42c8b6 <countint>
  42ca84:	01 45 f8             	add    %eax,-0x8(%rbp)
  42ca87:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42ca8b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42ca8e:	8d 50 ff             	lea    -0x1(%rax),%edx
  42ca91:	89 55 f4             	mov    %edx,-0xc(%rbp)
  42ca94:	85 c0                	test   %eax,%eax
  42ca96:	75 95                	jne    42ca2d <numusehash+0x3d>
  42ca98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42ca9c:	8b 10                	mov    (%rax),%edx
  42ca9e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42caa1:	01 c2                	add    %eax,%edx
  42caa3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42caa7:	89 10                	mov    %edx,(%rax)
  42caa9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42caac:	c9                   	leaveq 
  42caad:	c3                   	retq   

000000000042caae <setnodevector>:
  42caae:	55                   	push   %rbp
  42caaf:	48 89 e5             	mov    %rsp,%rbp
  42cab2:	48 83 ec 30          	sub    $0x30,%rsp
  42cab6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42caba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42cabe:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42cac1:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42cac5:	75 25                	jne    42caec <setnodevector+0x3e>
  42cac7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cacb:	48 c7 40 18 20 21 44 	movq   $0x442120,0x18(%rax)
  42cad2:	00 
  42cad3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cad7:	c6 40 0b 00          	movb   $0x0,0xb(%rax)
  42cadb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cadf:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  42cae6:	00 
  42cae7:	e9 03 01 00 00       	jmpq   42cbef <setnodevector+0x141>
  42caec:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42caef:	89 c7                	mov    %eax,%edi
  42caf1:	e8 90 1d ff ff       	callq  41e886 <luaO_ceillog2>
  42caf6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42caf9:	83 7d f8 1e          	cmpl   $0x1e,-0x8(%rbp)
  42cafd:	7f 15                	jg     42cb14 <setnodevector+0x66>
  42caff:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42cb02:	ba 01 00 00 00       	mov    $0x1,%edx
  42cb07:	89 c1                	mov    %eax,%ecx
  42cb09:	d3 e2                	shl    %cl,%edx
  42cb0b:	89 d0                	mov    %edx,%eax
  42cb0d:	3d 00 00 00 40       	cmp    $0x40000000,%eax
  42cb12:	76 16                	jbe    42cb2a <setnodevector+0x7c>
  42cb14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb18:	be 1e 22 44 00       	mov    $0x44221e,%esi
  42cb1d:	48 89 c7             	mov    %rax,%rdi
  42cb20:	b8 00 00 00 00       	mov    $0x0,%eax
  42cb25:	e8 4f 40 fe ff       	callq  410b79 <luaG_runerror>
  42cb2a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42cb2d:	ba 01 00 00 00       	mov    $0x1,%edx
  42cb32:	89 c1                	mov    %eax,%ecx
  42cb34:	d3 e2                	shl    %cl,%edx
  42cb36:	89 d0                	mov    %edx,%eax
  42cb38:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42cb3b:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42cb3e:	48 89 d0             	mov    %rdx,%rax
  42cb41:	48 01 c0             	add    %rax,%rax
  42cb44:	48 01 d0             	add    %rdx,%rax
  42cb47:	48 c1 e0 03          	shl    $0x3,%rax
  42cb4b:	48 89 c1             	mov    %rax,%rcx
  42cb4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb52:	ba 00 00 00 00       	mov    $0x0,%edx
  42cb57:	48 89 ce             	mov    %rcx,%rsi
  42cb5a:	48 89 c7             	mov    %rax,%rdi
  42cb5d:	e8 1d 07 ff ff       	callq  41d27f <luaM_malloc_>
  42cb62:	48 89 c2             	mov    %rax,%rdx
  42cb65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cb69:	48 89 50 18          	mov    %rdx,0x18(%rax)
  42cb6d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42cb74:	eb 41                	jmp    42cbb7 <setnodevector+0x109>
  42cb76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cb7a:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42cb7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cb81:	48 63 d0             	movslq %eax,%rdx
  42cb84:	48 89 d0             	mov    %rdx,%rax
  42cb87:	48 01 c0             	add    %rax,%rax
  42cb8a:	48 01 d0             	add    %rdx,%rax
  42cb8d:	48 c1 e0 03          	shl    $0x3,%rax
  42cb91:	48 01 c8             	add    %rcx,%rax
  42cb94:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42cb98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb9c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  42cba3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cba7:	c6 40 09 00          	movb   $0x0,0x9(%rax)
  42cbab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cbaf:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  42cbb3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42cbb7:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42cbba:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  42cbbd:	7c b7                	jl     42cb76 <setnodevector+0xc8>
  42cbbf:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42cbc2:	89 c2                	mov    %eax,%edx
  42cbc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cbc8:	88 50 0b             	mov    %dl,0xb(%rax)
  42cbcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cbcf:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42cbd3:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42cbd6:	48 89 d0             	mov    %rdx,%rax
  42cbd9:	48 01 c0             	add    %rax,%rax
  42cbdc:	48 01 d0             	add    %rdx,%rax
  42cbdf:	48 c1 e0 03          	shl    $0x3,%rax
  42cbe3:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  42cbe7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cbeb:	48 89 50 20          	mov    %rdx,0x20(%rax)
  42cbef:	90                   	nop
  42cbf0:	c9                   	leaveq 
  42cbf1:	c3                   	retq   

000000000042cbf2 <reinsert>:
  42cbf2:	55                   	push   %rbp
  42cbf3:	48 89 e5             	mov    %rsp,%rbp
  42cbf6:	48 83 ec 50          	sub    $0x50,%rsp
  42cbfa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42cbfe:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  42cc02:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  42cc06:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42cc0a:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42cc0e:	0f b6 c0             	movzbl %al,%eax
  42cc11:	ba 01 00 00 00       	mov    $0x1,%edx
  42cc16:	89 c1                	mov    %eax,%ecx
  42cc18:	d3 e2                	shl    %cl,%edx
  42cc1a:	89 d0                	mov    %edx,%eax
  42cc1c:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42cc1f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42cc26:	eb 7e                	jmp    42cca6 <reinsert+0xb4>
  42cc28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42cc2c:	48 8b 48 18          	mov    0x18(%rax),%rcx
  42cc30:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cc33:	48 63 d0             	movslq %eax,%rdx
  42cc36:	48 89 d0             	mov    %rdx,%rax
  42cc39:	48 01 c0             	add    %rax,%rax
  42cc3c:	48 01 d0             	add    %rdx,%rax
  42cc3f:	48 c1 e0 03          	shl    $0x3,%rax
  42cc43:	48 01 c8             	add    %rcx,%rax
  42cc46:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42cc4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cc4e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42cc52:	0f b6 c0             	movzbl %al,%eax
  42cc55:	83 e0 0f             	and    $0xf,%eax
  42cc58:	85 c0                	test   %eax,%eax
  42cc5a:	74 46                	je     42cca2 <reinsert+0xb0>
  42cc5c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42cc60:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42cc64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cc68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42cc6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cc70:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42cc74:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  42cc78:	48 89 10             	mov    %rdx,(%rax)
  42cc7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cc7f:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  42cc83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cc87:	88 50 08             	mov    %dl,0x8(%rax)
  42cc8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42cc8e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  42cc92:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  42cc96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42cc9a:	48 89 c7             	mov    %rax,%rdi
  42cc9d:	e8 5f 0c 00 00       	callq  42d901 <luaH_set>
  42cca2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42cca6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cca9:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  42ccac:	0f 8c 76 ff ff ff    	jl     42cc28 <reinsert+0x36>
  42ccb2:	90                   	nop
  42ccb3:	c9                   	leaveq 
  42ccb4:	c3                   	retq   

000000000042ccb5 <exchangehashpart>:
  42ccb5:	55                   	push   %rbp
  42ccb6:	48 89 e5             	mov    %rsp,%rbp
  42ccb9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42ccbd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42ccc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ccc5:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42ccc9:	88 45 ff             	mov    %al,-0x1(%rbp)
  42cccc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ccd0:	48 8b 40 18          	mov    0x18(%rax),%rax
  42ccd4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ccd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ccdc:	48 8b 40 20          	mov    0x20(%rax),%rax
  42cce0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42cce4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42cce8:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
  42ccec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ccf0:	88 50 0b             	mov    %dl,0xb(%rax)
  42ccf3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42ccf7:	48 8b 50 18          	mov    0x18(%rax),%rdx
  42ccfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ccff:	48 89 50 18          	mov    %rdx,0x18(%rax)
  42cd03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42cd07:	48 8b 50 20          	mov    0x20(%rax),%rdx
  42cd0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42cd0f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  42cd13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42cd17:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
  42cd1b:	88 50 0b             	mov    %dl,0xb(%rax)
  42cd1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42cd22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42cd26:	48 89 50 18          	mov    %rdx,0x18(%rax)
  42cd2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42cd2e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42cd32:	48 89 50 20          	mov    %rdx,0x20(%rax)
  42cd36:	90                   	nop
  42cd37:	5d                   	pop    %rbp
  42cd38:	c3                   	retq   

000000000042cd39 <luaH_resize>:
  42cd39:	55                   	push   %rbp
  42cd3a:	48 89 e5             	mov    %rsp,%rbp
  42cd3d:	48 83 ec 70          	sub    $0x70,%rsp
  42cd41:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  42cd45:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  42cd49:	89 55 9c             	mov    %edx,-0x64(%rbp)
  42cd4c:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  42cd4f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cd53:	48 89 c7             	mov    %rax,%rdi
  42cd56:	e8 eb f6 ff ff       	callq  42c446 <setlimittosize>
  42cd5b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42cd5e:	8b 55 98             	mov    -0x68(%rbp),%edx
  42cd61:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  42cd65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42cd69:	48 89 ce             	mov    %rcx,%rsi
  42cd6c:	48 89 c7             	mov    %rax,%rdi
  42cd6f:	e8 3a fd ff ff       	callq  42caae <setnodevector>
  42cd74:	8b 45 9c             	mov    -0x64(%rbp),%eax
  42cd77:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  42cd7a:	0f 83 9e 00 00 00    	jae    42ce1e <luaH_resize+0xe5>
  42cd80:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cd84:	8b 55 9c             	mov    -0x64(%rbp),%edx
  42cd87:	89 50 0c             	mov    %edx,0xc(%rax)
  42cd8a:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42cd8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cd92:	48 89 d6             	mov    %rdx,%rsi
  42cd95:	48 89 c7             	mov    %rax,%rdi
  42cd98:	e8 18 ff ff ff       	callq  42ccb5 <exchangehashpart>
  42cd9d:	8b 45 9c             	mov    -0x64(%rbp),%eax
  42cda0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42cda3:	eb 54                	jmp    42cdf9 <luaH_resize+0xc0>
  42cda5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cda9:	48 8b 40 10          	mov    0x10(%rax),%rax
  42cdad:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42cdb0:	48 c1 e2 04          	shl    $0x4,%rdx
  42cdb4:	48 01 d0             	add    %rdx,%rax
  42cdb7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42cdbb:	0f b6 c0             	movzbl %al,%eax
  42cdbe:	83 e0 0f             	and    $0xf,%eax
  42cdc1:	85 c0                	test   %eax,%eax
  42cdc3:	74 30                	je     42cdf5 <luaH_resize+0xbc>
  42cdc5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cdc9:	48 8b 40 10          	mov    0x10(%rax),%rax
  42cdcd:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42cdd0:	48 c1 e2 04          	shl    $0x4,%rdx
  42cdd4:	48 01 c2             	add    %rax,%rdx
  42cdd7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cdda:	83 c0 01             	add    $0x1,%eax
  42cddd:	89 c7                	mov    %eax,%edi
  42cddf:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  42cde3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42cde7:	48 89 d1             	mov    %rdx,%rcx
  42cdea:	48 89 fa             	mov    %rdi,%rdx
  42cded:	48 89 c7             	mov    %rax,%rdi
  42cdf0:	e8 5d 0b 00 00       	callq  42d952 <luaH_setint>
  42cdf5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42cdf9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cdfc:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  42cdff:	72 a4                	jb     42cda5 <luaH_resize+0x6c>
  42ce01:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ce05:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42ce08:	89 50 0c             	mov    %edx,0xc(%rax)
  42ce0b:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42ce0f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ce13:	48 89 d6             	mov    %rdx,%rsi
  42ce16:	48 89 c7             	mov    %rax,%rdi
  42ce19:	e8 97 fe ff ff       	callq  42ccb5 <exchangehashpart>
  42ce1e:	8b 45 9c             	mov    -0x64(%rbp),%eax
  42ce21:	48 c1 e0 04          	shl    $0x4,%rax
  42ce25:	48 89 c1             	mov    %rax,%rcx
  42ce28:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ce2b:	48 c1 e0 04          	shl    $0x4,%rax
  42ce2f:	48 89 c2             	mov    %rax,%rdx
  42ce32:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ce36:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42ce3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42ce3e:	48 89 c7             	mov    %rax,%rdi
  42ce41:	e8 0a 03 ff ff       	callq  41d150 <luaM_realloc_>
  42ce46:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ce4a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42ce4f:	75 0d                	jne    42ce5e <luaH_resize+0x125>
  42ce51:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
  42ce55:	74 07                	je     42ce5e <luaH_resize+0x125>
  42ce57:	b8 01 00 00 00       	mov    $0x1,%eax
  42ce5c:	eb 05                	jmp    42ce63 <luaH_resize+0x12a>
  42ce5e:	b8 00 00 00 00       	mov    $0x0,%eax
  42ce63:	85 c0                	test   %eax,%eax
  42ce65:	0f 95 c0             	setne  %al
  42ce68:	0f b6 c0             	movzbl %al,%eax
  42ce6b:	48 85 c0             	test   %rax,%rax
  42ce6e:	74 24                	je     42ce94 <luaH_resize+0x15b>
  42ce70:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42ce74:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42ce78:	48 89 d6             	mov    %rdx,%rsi
  42ce7b:	48 89 c7             	mov    %rax,%rdi
  42ce7e:	e8 49 f9 ff ff       	callq  42c7cc <freehash>
  42ce83:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42ce87:	be 04 00 00 00       	mov    $0x4,%esi
  42ce8c:	48 89 c7             	mov    %rax,%rdi
  42ce8f:	e8 e5 42 fe ff       	callq  411179 <luaD_throw>
  42ce94:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42ce98:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ce9c:	48 89 d6             	mov    %rdx,%rsi
  42ce9f:	48 89 c7             	mov    %rax,%rdi
  42cea2:	e8 0e fe ff ff       	callq  42ccb5 <exchangehashpart>
  42cea7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ceab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42ceaf:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42ceb3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42ceb7:	8b 55 9c             	mov    -0x64(%rbp),%edx
  42ceba:	89 50 0c             	mov    %edx,0xc(%rax)
  42cebd:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42cec0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42cec3:	eb 1a                	jmp    42cedf <luaH_resize+0x1a6>
  42cec5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42cec9:	48 8b 40 10          	mov    0x10(%rax),%rax
  42cecd:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42ced0:	48 c1 e2 04          	shl    $0x4,%rdx
  42ced4:	48 01 d0             	add    %rdx,%rax
  42ced7:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  42cedb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42cedf:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cee2:	3b 45 9c             	cmp    -0x64(%rbp),%eax
  42cee5:	72 de                	jb     42cec5 <luaH_resize+0x18c>
  42cee7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  42ceeb:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  42ceef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42cef3:	48 89 ce             	mov    %rcx,%rsi
  42cef6:	48 89 c7             	mov    %rax,%rdi
  42cef9:	e8 f4 fc ff ff       	callq  42cbf2 <reinsert>
  42cefe:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  42cf02:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42cf06:	48 89 d6             	mov    %rdx,%rsi
  42cf09:	48 89 c7             	mov    %rax,%rdi
  42cf0c:	e8 bb f8 ff ff       	callq  42c7cc <freehash>
  42cf11:	90                   	nop
  42cf12:	c9                   	leaveq 
  42cf13:	c3                   	retq   

000000000042cf14 <luaH_resizearray>:
  42cf14:	55                   	push   %rbp
  42cf15:	48 89 e5             	mov    %rsp,%rbp
  42cf18:	48 83 ec 30          	sub    $0x30,%rsp
  42cf1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42cf20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42cf24:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42cf27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cf2b:	48 8b 40 20          	mov    0x20(%rax),%rax
  42cf2f:	48 85 c0             	test   %rax,%rax
  42cf32:	74 18                	je     42cf4c <luaH_resizearray+0x38>
  42cf34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cf38:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42cf3c:	0f b6 c0             	movzbl %al,%eax
  42cf3f:	ba 01 00 00 00       	mov    $0x1,%edx
  42cf44:	89 c1                	mov    %eax,%ecx
  42cf46:	d3 e2                	shl    %cl,%edx
  42cf48:	89 d0                	mov    %edx,%eax
  42cf4a:	eb 05                	jmp    42cf51 <luaH_resizearray+0x3d>
  42cf4c:	b8 00 00 00 00       	mov    $0x0,%eax
  42cf51:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42cf54:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42cf57:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42cf5a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42cf5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cf62:	48 89 c7             	mov    %rax,%rdi
  42cf65:	e8 cf fd ff ff       	callq  42cd39 <luaH_resize>
  42cf6a:	90                   	nop
  42cf6b:	c9                   	leaveq 
  42cf6c:	c3                   	retq   

000000000042cf6d <rehash>:
  42cf6d:	55                   	push   %rbp
  42cf6e:	48 89 e5             	mov    %rsp,%rbp
  42cf71:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  42cf78:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  42cf7f:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  42cf86:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  42cf8d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42cf94:	eb 14                	jmp    42cfaa <rehash+0x3d>
  42cf96:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cf99:	48 98                	cltq   
  42cf9b:	c7 84 85 70 ff ff ff 	movl   $0x0,-0x90(%rbp,%rax,4)
  42cfa2:	00 00 00 00 
  42cfa6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42cfaa:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
  42cfae:	7e e6                	jle    42cf96 <rehash+0x29>
  42cfb0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  42cfb7:	48 89 c7             	mov    %rax,%rdi
  42cfba:	e8 87 f4 ff ff       	callq  42c446 <setlimittosize>
  42cfbf:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  42cfc6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  42cfcd:	48 89 d6             	mov    %rdx,%rsi
  42cfd0:	48 89 c7             	mov    %rax,%rdi
  42cfd3:	e8 33 f9 ff ff       	callq  42c90b <numusearray>
  42cfd8:	89 45 f0             	mov    %eax,-0x10(%rbp)
  42cfdb:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42cfde:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42cfe1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  42cfe5:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  42cfec:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  42cff3:	48 89 ce             	mov    %rcx,%rsi
  42cff6:	48 89 c7             	mov    %rax,%rdi
  42cff9:	e8 f2 f9 ff ff       	callq  42c9f0 <numusehash>
  42cffe:	01 45 f8             	add    %eax,-0x8(%rbp)
  42d001:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42d008:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d00c:	3c 03                	cmp    $0x3,%al
  42d00e:	75 26                	jne    42d036 <rehash+0xc9>
  42d010:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42d017:	48 8b 00             	mov    (%rax),%rax
  42d01a:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  42d021:	48 89 d6             	mov    %rdx,%rsi
  42d024:	48 89 c7             	mov    %rax,%rdi
  42d027:	e8 8a f8 ff ff       	callq  42c8b6 <countint>
  42d02c:	89 c2                	mov    %eax,%edx
  42d02e:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42d031:	01 d0                	add    %edx,%eax
  42d033:	89 45 f0             	mov    %eax,-0x10(%rbp)
  42d036:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  42d03a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  42d03e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  42d045:	48 89 d6             	mov    %rdx,%rsi
  42d048:	48 89 c7             	mov    %rax,%rdi
  42d04b:	e8 dc f7 ff ff       	callq  42c82c <computesizes>
  42d050:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42d053:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42d056:	8b 45 f0             	mov    -0x10(%rbp),%eax
  42d059:	89 d1                	mov    %edx,%ecx
  42d05b:	29 c1                	sub    %eax,%ecx
  42d05d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42d060:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  42d067:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42d06e:	48 89 c7             	mov    %rax,%rdi
  42d071:	e8 c3 fc ff ff       	callq  42cd39 <luaH_resize>
  42d076:	90                   	nop
  42d077:	c9                   	leaveq 
  42d078:	c3                   	retq   

000000000042d079 <luaH_new>:
  42d079:	55                   	push   %rbp
  42d07a:	48 89 e5             	mov    %rsp,%rbp
  42d07d:	48 83 ec 20          	sub    $0x20,%rsp
  42d081:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d085:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d089:	ba 38 00 00 00       	mov    $0x38,%edx
  42d08e:	be 05 00 00 00       	mov    $0x5,%esi
  42d093:	48 89 c7             	mov    %rax,%rdi
  42d096:	e8 fb 7b fe ff       	callq  414c96 <luaC_newobj>
  42d09b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d09f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d0a3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d0a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0ab:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  42d0b2:	00 
  42d0b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0b7:	c6 40 0a 3f          	movb   $0x3f,0xa(%rax)
  42d0bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0bf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  42d0c6:	00 
  42d0c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0cb:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  42d0d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d0d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d0da:	ba 00 00 00 00       	mov    $0x0,%edx
  42d0df:	48 89 ce             	mov    %rcx,%rsi
  42d0e2:	48 89 c7             	mov    %rax,%rdi
  42d0e5:	e8 c4 f9 ff ff       	callq  42caae <setnodevector>
  42d0ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0ee:	c9                   	leaveq 
  42d0ef:	c3                   	retq   

000000000042d0f0 <luaH_free>:
  42d0f0:	55                   	push   %rbp
  42d0f1:	48 89 e5             	mov    %rsp,%rbp
  42d0f4:	48 83 ec 10          	sub    $0x10,%rsp
  42d0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d0fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d100:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42d104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d108:	48 89 d6             	mov    %rdx,%rsi
  42d10b:	48 89 c7             	mov    %rax,%rdi
  42d10e:	e8 b9 f6 ff ff       	callq  42c7cc <freehash>
  42d113:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d117:	48 89 c7             	mov    %rax,%rdi
  42d11a:	e8 7b f2 ff ff       	callq  42c39a <luaH_realasize>
  42d11f:	89 c0                	mov    %eax,%eax
  42d121:	48 c1 e0 04          	shl    $0x4,%rax
  42d125:	48 89 c2             	mov    %rax,%rdx
  42d128:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d12c:	48 8b 48 10          	mov    0x10(%rax),%rcx
  42d130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d134:	48 89 ce             	mov    %rcx,%rsi
  42d137:	48 89 c7             	mov    %rax,%rdi
  42d13a:	e8 40 ff fe ff       	callq  41d07f <luaM_free_>
  42d13f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d147:	ba 38 00 00 00       	mov    $0x38,%edx
  42d14c:	48 89 ce             	mov    %rcx,%rsi
  42d14f:	48 89 c7             	mov    %rax,%rdi
  42d152:	e8 28 ff fe ff       	callq  41d07f <luaM_free_>
  42d157:	90                   	nop
  42d158:	c9                   	leaveq 
  42d159:	c3                   	retq   

000000000042d15a <getfreepos>:
  42d15a:	55                   	push   %rbp
  42d15b:	48 89 e5             	mov    %rsp,%rbp
  42d15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d166:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d16a:	48 85 c0             	test   %rax,%rax
  42d16d:	74 45                	je     42d1b4 <getfreepos+0x5a>
  42d16f:	eb 2e                	jmp    42d19f <getfreepos+0x45>
  42d171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d175:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d179:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
  42d17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d181:	48 89 50 20          	mov    %rdx,0x20(%rax)
  42d185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d189:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d18d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42d191:	84 c0                	test   %al,%al
  42d193:	75 0a                	jne    42d19f <getfreepos+0x45>
  42d195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d199:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d19d:	eb 1a                	jmp    42d1b9 <getfreepos+0x5f>
  42d19f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d1a3:	48 8b 50 20          	mov    0x20(%rax),%rdx
  42d1a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d1ab:	48 8b 40 18          	mov    0x18(%rax),%rax
  42d1af:	48 39 c2             	cmp    %rax,%rdx
  42d1b2:	77 bd                	ja     42d171 <getfreepos+0x17>
  42d1b4:	b8 00 00 00 00       	mov    $0x0,%eax
  42d1b9:	5d                   	pop    %rbp
  42d1ba:	c3                   	retq   

000000000042d1bb <luaH_newkey>:
  42d1bb:	55                   	push   %rbp
  42d1bc:	48 89 e5             	mov    %rsp,%rbp
  42d1bf:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  42d1c6:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  42d1ca:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  42d1ce:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  42d1d5:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
  42d1dc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d1e3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d1e7:	0f b6 c0             	movzbl %al,%eax
  42d1ea:	83 e0 0f             	and    $0xf,%eax
  42d1ed:	85 c0                	test   %eax,%eax
  42d1ef:	0f 94 c0             	sete   %al
  42d1f2:	0f b6 c0             	movzbl %al,%eax
  42d1f5:	48 85 c0             	test   %rax,%rax
  42d1f8:	74 16                	je     42d210 <luaH_newkey+0x55>
  42d1fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42d1fe:	be 2d 22 44 00       	mov    $0x44222d,%esi
  42d203:	48 89 c7             	mov    %rax,%rdi
  42d206:	b8 00 00 00 00       	mov    $0x0,%eax
  42d20b:	e8 69 39 fe ff       	callq  410b79 <luaG_runerror>
  42d210:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d217:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d21b:	3c 13                	cmp    $0x13,%al
  42d21d:	0f 85 92 00 00 00    	jne    42d2b5 <luaH_newkey+0xfa>
  42d223:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d22a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  42d22e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  42d233:	48 8d 45 98          	lea    -0x68(%rbp),%rax
  42d237:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42d23c:	be 00 00 00 00       	mov    $0x0,%esi
  42d241:	48 89 c7             	mov    %rax,%rdi
  42d244:	e8 76 56 00 00       	callq  4328bf <luaV_flttointeger>
  42d249:	85 c0                	test   %eax,%eax
  42d24b:	74 28                	je     42d275 <luaH_newkey+0xba>
  42d24d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  42d251:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d255:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42d259:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d25d:	48 89 10             	mov    %rdx,(%rax)
  42d260:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d264:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42d268:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  42d26c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  42d273:	eb 40                	jmp    42d2b5 <luaH_newkey+0xfa>
  42d275:	b8 01 00 00 00       	mov    $0x1,%eax
  42d27a:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42d27f:	66 0f 2e 45 e8       	ucomisd -0x18(%rbp),%xmm0
  42d284:	7a 11                	jp     42d297 <luaH_newkey+0xdc>
  42d286:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  42d28b:	66 0f 2e 45 e8       	ucomisd -0x18(%rbp),%xmm0
  42d290:	75 05                	jne    42d297 <luaH_newkey+0xdc>
  42d292:	b8 00 00 00 00       	mov    $0x0,%eax
  42d297:	0f b6 c0             	movzbl %al,%eax
  42d29a:	48 85 c0             	test   %rax,%rax
  42d29d:	74 16                	je     42d2b5 <luaH_newkey+0xfa>
  42d29f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42d2a3:	be 40 22 44 00       	mov    $0x442240,%esi
  42d2a8:	48 89 c7             	mov    %rax,%rdi
  42d2ab:	b8 00 00 00 00       	mov    $0x0,%eax
  42d2b0:	e8 c4 38 fe ff       	callq  410b79 <luaG_runerror>
  42d2b5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  42d2bc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d2c0:	0f b6 c0             	movzbl %al,%eax
  42d2c3:	83 e0 0f             	and    $0xf,%eax
  42d2c6:	85 c0                	test   %eax,%eax
  42d2c8:	0f 84 bc 02 00 00    	je     42d58a <luaH_newkey+0x3cf>
  42d2ce:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42d2d5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  42d2d9:	48 89 d6             	mov    %rdx,%rsi
  42d2dc:	48 89 c7             	mov    %rax,%rdi
  42d2df:	e8 5b ec ff ff       	callq  42bf3f <mainpositionTV>
  42d2e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d2ec:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d2f0:	0f b6 c0             	movzbl %al,%eax
  42d2f3:	83 e0 0f             	and    $0xf,%eax
  42d2f6:	85 c0                	test   %eax,%eax
  42d2f8:	75 11                	jne    42d30b <luaH_newkey+0x150>
  42d2fa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  42d2fe:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d302:	48 85 c0             	test   %rax,%rax
  42d305:	0f 85 ca 01 00 00    	jne    42d4d5 <luaH_newkey+0x31a>
  42d30b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  42d30f:	48 89 c7             	mov    %rax,%rdi
  42d312:	e8 43 fe ff ff       	callq  42d15a <getfreepos>
  42d317:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d31b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  42d320:	75 3d                	jne    42d35f <luaH_newkey+0x1a4>
  42d322:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42d329:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  42d32d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42d331:	48 89 ce             	mov    %rcx,%rsi
  42d334:	48 89 c7             	mov    %rax,%rdi
  42d337:	e8 31 fc ff ff       	callq  42cf6d <rehash>
  42d33c:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  42d343:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42d34a:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  42d34e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42d352:	48 89 c7             	mov    %rax,%rdi
  42d355:	e8 a7 05 00 00       	callq  42d901 <luaH_set>
  42d35a:	e9 2c 02 00 00       	jmpq   42d58b <luaH_newkey+0x3d0>
  42d35f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42d363:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  42d367:	48 89 d6             	mov    %rdx,%rsi
  42d36a:	48 89 c7             	mov    %rax,%rdi
  42d36d:	e8 78 ee ff ff       	callq  42c1ea <mainpositionfromnode>
  42d372:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d376:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d37a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  42d37e:	0f 84 d5 00 00 00    	je     42d459 <luaH_newkey+0x29e>
  42d384:	eb 1b                	jmp    42d3a1 <luaH_newkey+0x1e6>
  42d386:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d38a:	8b 40 0c             	mov    0xc(%rax),%eax
  42d38d:	48 63 d0             	movslq %eax,%rdx
  42d390:	48 89 d0             	mov    %rdx,%rax
  42d393:	48 01 c0             	add    %rax,%rax
  42d396:	48 01 d0             	add    %rdx,%rax
  42d399:	48 c1 e0 03          	shl    $0x3,%rax
  42d39d:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  42d3a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d3a5:	8b 40 0c             	mov    0xc(%rax),%eax
  42d3a8:	48 63 d0             	movslq %eax,%rdx
  42d3ab:	48 89 d0             	mov    %rdx,%rax
  42d3ae:	48 01 c0             	add    %rax,%rax
  42d3b1:	48 01 d0             	add    %rdx,%rax
  42d3b4:	48 c1 e0 03          	shl    $0x3,%rax
  42d3b8:	48 89 c2             	mov    %rax,%rdx
  42d3bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d3bf:	48 01 d0             	add    %rdx,%rax
  42d3c2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  42d3c6:	75 be                	jne    42d386 <luaH_newkey+0x1cb>
  42d3c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d3cc:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
  42d3d0:	48 c1 f8 03          	sar    $0x3,%rax
  42d3d4:	48 89 c2             	mov    %rax,%rdx
  42d3d7:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  42d3de:	aa aa aa 
  42d3e1:	48 0f af c2          	imul   %rdx,%rax
  42d3e5:	89 c2                	mov    %eax,%edx
  42d3e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d3eb:	89 50 0c             	mov    %edx,0xc(%rax)
  42d3ee:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42d3f2:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d3f6:	48 8b 06             	mov    (%rsi),%rax
  42d3f9:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  42d3fd:	48 89 01             	mov    %rax,(%rcx)
  42d400:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  42d404:	48 8b 46 10          	mov    0x10(%rsi),%rax
  42d408:	48 89 41 10          	mov    %rax,0x10(%rcx)
  42d40c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d410:	8b 40 0c             	mov    0xc(%rax),%eax
  42d413:	85 c0                	test   %eax,%eax
  42d415:	74 38                	je     42d44f <luaH_newkey+0x294>
  42d417:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d41b:	8b 50 0c             	mov    0xc(%rax),%edx
  42d41e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d422:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  42d426:	48 c1 f8 03          	sar    $0x3,%rax
  42d42a:	48 89 c1             	mov    %rax,%rcx
  42d42d:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  42d434:	aa aa aa 
  42d437:	48 0f af c1          	imul   %rcx,%rax
  42d43b:	01 c2                	add    %eax,%edx
  42d43d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d441:	89 50 0c             	mov    %edx,0xc(%rax)
  42d444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d448:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  42d44f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d453:	c6 40 08 10          	movb   $0x10,0x8(%rax)
  42d457:	eb 7c                	jmp    42d4d5 <luaH_newkey+0x31a>
  42d459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d45d:	8b 40 0c             	mov    0xc(%rax),%eax
  42d460:	85 c0                	test   %eax,%eax
  42d462:	74 43                	je     42d4a7 <luaH_newkey+0x2ec>
  42d464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d468:	8b 40 0c             	mov    0xc(%rax),%eax
  42d46b:	48 63 d0             	movslq %eax,%rdx
  42d46e:	48 89 d0             	mov    %rdx,%rax
  42d471:	48 01 c0             	add    %rax,%rax
  42d474:	48 01 d0             	add    %rdx,%rax
  42d477:	48 c1 e0 03          	shl    $0x3,%rax
  42d47b:	48 89 c2             	mov    %rax,%rdx
  42d47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d482:	48 01 d0             	add    %rdx,%rax
  42d485:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  42d489:	48 c1 f8 03          	sar    $0x3,%rax
  42d48d:	48 89 c2             	mov    %rax,%rdx
  42d490:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  42d497:	aa aa aa 
  42d49a:	48 0f af c2          	imul   %rdx,%rax
  42d49e:	89 c2                	mov    %eax,%edx
  42d4a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d4a4:	89 50 0c             	mov    %edx,0xc(%rax)
  42d4a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d4ab:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  42d4af:	48 c1 f8 03          	sar    $0x3,%rax
  42d4b3:	48 89 c2             	mov    %rax,%rdx
  42d4b6:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  42d4bd:	aa aa aa 
  42d4c0:	48 0f af c2          	imul   %rdx,%rax
  42d4c4:	89 c2                	mov    %eax,%edx
  42d4c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d4ca:	89 50 0c             	mov    %edx,0xc(%rax)
  42d4cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d4d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d4d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42d4dd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d4e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42d4e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d4ec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42d4f0:	48 8b 12             	mov    (%rdx),%rdx
  42d4f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42d4f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42d4fb:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42d4ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d503:	88 50 09             	mov    %dl,0x9(%rax)
  42d506:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d50d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d511:	0f b6 c0             	movzbl %al,%eax
  42d514:	83 e0 40             	and    $0x40,%eax
  42d517:	85 c0                	test   %eax,%eax
  42d519:	74 3d                	je     42d558 <luaH_newkey+0x39d>
  42d51b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  42d51f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42d523:	0f b6 c0             	movzbl %al,%eax
  42d526:	83 e0 20             	and    $0x20,%eax
  42d529:	85 c0                	test   %eax,%eax
  42d52b:	74 2b                	je     42d558 <luaH_newkey+0x39d>
  42d52d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42d534:	48 8b 00             	mov    (%rax),%rax
  42d537:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42d53b:	0f b6 c0             	movzbl %al,%eax
  42d53e:	83 e0 18             	and    $0x18,%eax
  42d541:	85 c0                	test   %eax,%eax
  42d543:	74 13                	je     42d558 <luaH_newkey+0x39d>
  42d545:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  42d549:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42d54d:	48 89 d6             	mov    %rdx,%rsi
  42d550:	48 89 c7             	mov    %rax,%rdi
  42d553:	e8 93 75 fe ff       	callq  414aeb <luaC_barrierback_>
  42d558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d55c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42d560:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  42d567:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42d56b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42d56f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42d573:	48 8b 12             	mov    (%rdx),%rdx
  42d576:	48 89 10             	mov    %rdx,(%rax)
  42d579:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42d57d:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42d581:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42d585:	88 50 08             	mov    %dl,0x8(%rax)
  42d588:	eb 01                	jmp    42d58b <luaH_newkey+0x3d0>
  42d58a:	90                   	nop
  42d58b:	c9                   	leaveq 
  42d58c:	c3                   	retq   

000000000042d58d <luaH_getint>:
  42d58d:	55                   	push   %rbp
  42d58e:	48 89 e5             	mov    %rsp,%rbp
  42d591:	53                   	push   %rbx
  42d592:	48 83 ec 20          	sub    $0x20,%rsp
  42d596:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42d59a:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  42d59e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d5a2:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42d5a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5aa:	8b 40 0c             	mov    0xc(%rax),%eax
  42d5ad:	89 c0                	mov    %eax,%eax
  42d5af:	48 39 c2             	cmp    %rax,%rdx
  42d5b2:	73 1c                	jae    42d5d0 <luaH_getint+0x43>
  42d5b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5b8:	48 8b 40 10          	mov    0x10(%rax),%rax
  42d5bc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d5c0:	48 c1 e2 04          	shl    $0x4,%rdx
  42d5c4:	48 83 ea 10          	sub    $0x10,%rdx
  42d5c8:	48 01 d0             	add    %rdx,%rax
  42d5cb:	e9 df 00 00 00       	jmpq   42d6af <luaH_getint+0x122>
  42d5d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5d4:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42d5d8:	84 c0                	test   %al,%al
  42d5da:	79 6d                	jns    42d649 <luaH_getint+0xbc>
  42d5dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5e0:	8b 50 0c             	mov    0xc(%rax),%edx
  42d5e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5e7:	8b 40 0c             	mov    0xc(%rax),%eax
  42d5ea:	83 e8 01             	sub    $0x1,%eax
  42d5ed:	21 d0                	and    %edx,%eax
  42d5ef:	85 c0                	test   %eax,%eax
  42d5f1:	74 56                	je     42d649 <luaH_getint+0xbc>
  42d5f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d5f7:	8b 40 0c             	mov    0xc(%rax),%eax
  42d5fa:	83 c0 01             	add    $0x1,%eax
  42d5fd:	89 c2                	mov    %eax,%edx
  42d5ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d603:	48 39 c2             	cmp    %rax,%rdx
  42d606:	74 1b                	je     42d623 <luaH_getint+0x96>
  42d608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d60c:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
  42d610:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d614:	48 89 c7             	mov    %rax,%rdi
  42d617:	e8 7e ed ff ff       	callq  42c39a <luaH_realasize>
  42d61c:	89 c0                	mov    %eax,%eax
  42d61e:	48 39 c3             	cmp    %rax,%rbx
  42d621:	73 26                	jae    42d649 <luaH_getint+0xbc>
  42d623:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d627:	89 c2                	mov    %eax,%edx
  42d629:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d62d:	89 50 0c             	mov    %edx,0xc(%rax)
  42d630:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d634:	48 8b 40 10          	mov    0x10(%rax),%rax
  42d638:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d63c:	48 c1 e2 04          	shl    $0x4,%rdx
  42d640:	48 83 ea 10          	sub    $0x10,%rdx
  42d644:	48 01 d0             	add    %rdx,%rax
  42d647:	eb 66                	jmp    42d6af <luaH_getint+0x122>
  42d649:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d64d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d651:	48 89 d6             	mov    %rdx,%rsi
  42d654:	48 89 c7             	mov    %rax,%rdi
  42d657:	e8 9f e7 ff ff       	callq  42bdfb <hashint>
  42d65c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d660:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d664:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42d668:	3c 03                	cmp    $0x3,%al
  42d66a:	75 14                	jne    42d680 <luaH_getint+0xf3>
  42d66c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d670:	48 8b 40 10          	mov    0x10(%rax),%rax
  42d674:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  42d678:	75 06                	jne    42d680 <luaH_getint+0xf3>
  42d67a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d67e:	eb 2f                	jmp    42d6af <luaH_getint+0x122>
  42d680:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d684:	8b 40 0c             	mov    0xc(%rax),%eax
  42d687:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42d68a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  42d68e:	74 19                	je     42d6a9 <luaH_getint+0x11c>
  42d690:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42d693:	48 63 d0             	movslq %eax,%rdx
  42d696:	48 89 d0             	mov    %rdx,%rax
  42d699:	48 01 c0             	add    %rax,%rax
  42d69c:	48 01 d0             	add    %rdx,%rax
  42d69f:	48 c1 e0 03          	shl    $0x3,%rax
  42d6a3:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  42d6a7:	eb b7                	jmp    42d660 <luaH_getint+0xd3>
  42d6a9:	90                   	nop
  42d6aa:	b8 40 21 44 00       	mov    $0x442140,%eax
  42d6af:	48 83 c4 20          	add    $0x20,%rsp
  42d6b3:	5b                   	pop    %rbx
  42d6b4:	5d                   	pop    %rbp
  42d6b5:	c3                   	retq   

000000000042d6b6 <luaH_getshortstr>:
  42d6b6:	55                   	push   %rbp
  42d6b7:	48 89 e5             	mov    %rsp,%rbp
  42d6ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d6be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d6c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d6c6:	48 8b 70 18          	mov    0x18(%rax),%rsi
  42d6ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d6ce:	8b 50 0c             	mov    0xc(%rax),%edx
  42d6d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d6d5:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  42d6d9:	0f b6 c0             	movzbl %al,%eax
  42d6dc:	bf 01 00 00 00       	mov    $0x1,%edi
  42d6e1:	89 c1                	mov    %eax,%ecx
  42d6e3:	d3 e7                	shl    %cl,%edi
  42d6e5:	89 f8                	mov    %edi,%eax
  42d6e7:	83 e8 01             	sub    $0x1,%eax
  42d6ea:	21 d0                	and    %edx,%eax
  42d6ec:	48 63 d0             	movslq %eax,%rdx
  42d6ef:	48 89 d0             	mov    %rdx,%rax
  42d6f2:	48 01 c0             	add    %rax,%rax
  42d6f5:	48 01 d0             	add    %rdx,%rax
  42d6f8:	48 c1 e0 03          	shl    $0x3,%rax
  42d6fc:	48 01 f0             	add    %rsi,%rax
  42d6ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d707:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  42d70b:	3c 44                	cmp    $0x44,%al
  42d70d:	75 14                	jne    42d723 <luaH_getshortstr+0x6d>
  42d70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d713:	48 8b 40 10          	mov    0x10(%rax),%rax
  42d717:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42d71b:	75 06                	jne    42d723 <luaH_getshortstr+0x6d>
  42d71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d721:	eb 30                	jmp    42d753 <luaH_getshortstr+0x9d>
  42d723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d727:	8b 40 0c             	mov    0xc(%rax),%eax
  42d72a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42d72d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42d731:	75 07                	jne    42d73a <luaH_getshortstr+0x84>
  42d733:	b8 40 21 44 00       	mov    $0x442140,%eax
  42d738:	eb 19                	jmp    42d753 <luaH_getshortstr+0x9d>
  42d73a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42d73d:	48 63 d0             	movslq %eax,%rdx
  42d740:	48 89 d0             	mov    %rdx,%rax
  42d743:	48 01 c0             	add    %rax,%rax
  42d746:	48 01 d0             	add    %rdx,%rax
  42d749:	48 c1 e0 03          	shl    $0x3,%rax
  42d74d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  42d751:	eb b0                	jmp    42d703 <luaH_getshortstr+0x4d>
  42d753:	5d                   	pop    %rbp
  42d754:	c3                   	retq   

000000000042d755 <luaH_getstr>:
  42d755:	55                   	push   %rbp
  42d756:	48 89 e5             	mov    %rsp,%rbp
  42d759:	48 83 ec 30          	sub    $0x30,%rsp
  42d75d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42d761:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42d765:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d769:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d76d:	3c 04                	cmp    $0x4,%al
  42d76f:	75 15                	jne    42d786 <luaH_getstr+0x31>
  42d771:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42d775:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d779:	48 89 d6             	mov    %rdx,%rsi
  42d77c:	48 89 c7             	mov    %rax,%rdi
  42d77f:	e8 32 ff ff ff       	callq  42d6b6 <luaH_getshortstr>
  42d784:	eb 47                	jmp    42d7cd <luaH_getstr+0x78>
  42d786:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  42d78a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d78e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d792:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d796:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42d79a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d79e:	48 89 10             	mov    %rdx,(%rax)
  42d7a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d7a5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d7a9:	83 c8 40             	or     $0x40,%eax
  42d7ac:	89 c2                	mov    %eax,%edx
  42d7ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d7b2:	88 50 08             	mov    %dl,0x8(%rax)
  42d7b5:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  42d7b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d7bd:	ba 00 00 00 00       	mov    $0x0,%edx
  42d7c2:	48 89 ce             	mov    %rcx,%rsi
  42d7c5:	48 89 c7             	mov    %rax,%rdi
  42d7c8:	e8 b7 ec ff ff       	callq  42c484 <getgeneric>
  42d7cd:	c9                   	leaveq 
  42d7ce:	c3                   	retq   

000000000042d7cf <luaH_get>:
  42d7cf:	55                   	push   %rbp
  42d7d0:	48 89 e5             	mov    %rsp,%rbp
  42d7d3:	48 83 ec 20          	sub    $0x20,%rsp
  42d7d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d7db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d7df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d7e3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d7e7:	0f b6 c0             	movzbl %al,%eax
  42d7ea:	83 e0 3f             	and    $0x3f,%eax
  42d7ed:	83 f8 03             	cmp    $0x3,%eax
  42d7f0:	74 32                	je     42d824 <luaH_get+0x55>
  42d7f2:	83 f8 03             	cmp    $0x3,%eax
  42d7f5:	7f 06                	jg     42d7fd <luaH_get+0x2e>
  42d7f7:	85 c0                	test   %eax,%eax
  42d7f9:	74 41                	je     42d83c <luaH_get+0x6d>
  42d7fb:	eb 78                	jmp    42d875 <luaH_get+0xa6>
  42d7fd:	83 f8 04             	cmp    $0x4,%eax
  42d800:	74 07                	je     42d809 <luaH_get+0x3a>
  42d802:	83 f8 13             	cmp    $0x13,%eax
  42d805:	74 3c                	je     42d843 <luaH_get+0x74>
  42d807:	eb 6c                	jmp    42d875 <luaH_get+0xa6>
  42d809:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d80d:	48 8b 00             	mov    (%rax),%rax
  42d810:	48 89 c2             	mov    %rax,%rdx
  42d813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d817:	48 89 d6             	mov    %rdx,%rsi
  42d81a:	48 89 c7             	mov    %rax,%rdi
  42d81d:	e8 94 fe ff ff       	callq  42d6b6 <luaH_getshortstr>
  42d822:	eb 69                	jmp    42d88d <luaH_get+0xbe>
  42d824:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d828:	48 8b 10             	mov    (%rax),%rdx
  42d82b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d82f:	48 89 d6             	mov    %rdx,%rsi
  42d832:	48 89 c7             	mov    %rax,%rdi
  42d835:	e8 53 fd ff ff       	callq  42d58d <luaH_getint>
  42d83a:	eb 51                	jmp    42d88d <luaH_get+0xbe>
  42d83c:	b8 40 21 44 00       	mov    $0x442140,%eax
  42d841:	eb 4a                	jmp    42d88d <luaH_get+0xbe>
  42d843:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d847:	f2 0f 10 00          	movsd  (%rax),%xmm0
  42d84b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  42d84f:	be 00 00 00 00       	mov    $0x0,%esi
  42d854:	48 89 c7             	mov    %rax,%rdi
  42d857:	e8 63 50 00 00       	callq  4328bf <luaV_flttointeger>
  42d85c:	85 c0                	test   %eax,%eax
  42d85e:	74 15                	je     42d875 <luaH_get+0xa6>
  42d860:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42d864:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d868:	48 89 d6             	mov    %rdx,%rsi
  42d86b:	48 89 c7             	mov    %rax,%rdi
  42d86e:	e8 1a fd ff ff       	callq  42d58d <luaH_getint>
  42d873:	eb 18                	jmp    42d88d <luaH_get+0xbe>
  42d875:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42d879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d87d:	ba 00 00 00 00       	mov    $0x0,%edx
  42d882:	48 89 ce             	mov    %rcx,%rsi
  42d885:	48 89 c7             	mov    %rax,%rdi
  42d888:	e8 f7 eb ff ff       	callq  42c484 <getgeneric>
  42d88d:	c9                   	leaveq 
  42d88e:	c3                   	retq   

000000000042d88f <luaH_finishset>:
  42d88f:	55                   	push   %rbp
  42d890:	48 89 e5             	mov    %rsp,%rbp
  42d893:	48 83 ec 40          	sub    $0x40,%rsp
  42d897:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d89b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d89f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42d8a3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42d8a7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  42d8ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d8af:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d8b3:	3c 20                	cmp    $0x20,%al
  42d8b5:	75 1a                	jne    42d8d1 <luaH_finishset+0x42>
  42d8b7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42d8bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d8bf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42d8c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d8c7:	48 89 c7             	mov    %rax,%rdi
  42d8ca:	e8 ec f8 ff ff       	callq  42d1bb <luaH_newkey>
  42d8cf:	eb 2d                	jmp    42d8fe <luaH_finishset+0x6f>
  42d8d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42d8d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d8d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42d8dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d8e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d8e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42d8e9:	48 8b 12             	mov    (%rdx),%rdx
  42d8ec:	48 89 10             	mov    %rdx,(%rax)
  42d8ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d8f3:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42d8f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d8fb:	88 50 08             	mov    %dl,0x8(%rax)
  42d8fe:	90                   	nop
  42d8ff:	c9                   	leaveq 
  42d900:	c3                   	retq   

000000000042d901 <luaH_set>:
  42d901:	55                   	push   %rbp
  42d902:	48 89 e5             	mov    %rsp,%rbp
  42d905:	48 83 ec 30          	sub    $0x30,%rsp
  42d909:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d90d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d911:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42d915:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42d919:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d91d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d921:	48 89 d6             	mov    %rdx,%rsi
  42d924:	48 89 c7             	mov    %rax,%rdi
  42d927:	e8 a3 fe ff ff       	callq  42d7cf <luaH_get>
  42d92c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d930:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42d934:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42d938:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42d93c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  42d940:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d944:	49 89 f8             	mov    %rdi,%r8
  42d947:	48 89 c7             	mov    %rax,%rdi
  42d94a:	e8 40 ff ff ff       	callq  42d88f <luaH_finishset>
  42d94f:	90                   	nop
  42d950:	c9                   	leaveq 
  42d951:	c3                   	retq   

000000000042d952 <luaH_setint>:
  42d952:	55                   	push   %rbp
  42d953:	48 89 e5             	mov    %rsp,%rbp
  42d956:	48 83 ec 50          	sub    $0x50,%rsp
  42d95a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42d95e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  42d962:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  42d966:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  42d96a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42d96e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42d972:	48 89 d6             	mov    %rdx,%rsi
  42d975:	48 89 c7             	mov    %rax,%rdi
  42d978:	e8 10 fc ff ff       	callq  42d58d <luaH_getint>
  42d97d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d985:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42d989:	3c 20                	cmp    $0x20,%al
  42d98b:	75 35                	jne    42d9c2 <luaH_setint+0x70>
  42d98d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42d991:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d995:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d999:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42d99d:	48 89 10             	mov    %rdx,(%rax)
  42d9a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d9a4:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42d9a8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  42d9ac:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  42d9b0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  42d9b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42d9b8:	48 89 c7             	mov    %rax,%rdi
  42d9bb:	e8 fb f7 ff ff       	callq  42d1bb <luaH_newkey>
  42d9c0:	eb 2d                	jmp    42d9ef <luaH_setint+0x9d>
  42d9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d9c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d9ca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42d9ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d9d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d9d6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42d9da:	48 8b 12             	mov    (%rdx),%rdx
  42d9dd:	48 89 10             	mov    %rdx,(%rax)
  42d9e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d9e4:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42d9e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d9ec:	88 50 08             	mov    %dl,0x8(%rax)
  42d9ef:	90                   	nop
  42d9f0:	c9                   	leaveq 
  42d9f1:	c3                   	retq   

000000000042d9f2 <hash_search>:
  42d9f2:	55                   	push   %rbp
  42d9f3:	48 89 e5             	mov    %rsp,%rbp
  42d9f6:	48 83 ec 20          	sub    $0x20,%rsp
  42d9fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d9fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42da02:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42da07:	75 05                	jne    42da0e <hash_search+0x1c>
  42da09:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  42da0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42da16:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  42da1d:	ff ff 3f 
  42da20:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42da24:	77 06                	ja     42da2c <hash_search+0x3a>
  42da26:	48 d1 65 e0          	shlq   -0x20(%rbp)
  42da2a:	eb 35                	jmp    42da61 <hash_search+0x6f>
  42da2c:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  42da33:	ff ff 7f 
  42da36:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42da3a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42da3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42da42:	48 89 d6             	mov    %rdx,%rsi
  42da45:	48 89 c7             	mov    %rax,%rdi
  42da48:	e8 40 fb ff ff       	callq  42d58d <luaH_getint>
  42da4d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42da51:	0f b6 c0             	movzbl %al,%eax
  42da54:	83 e0 0f             	and    $0xf,%eax
  42da57:	85 c0                	test   %eax,%eax
  42da59:	74 29                	je     42da84 <hash_search+0x92>
  42da5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da5f:	eb 7d                	jmp    42dade <hash_search+0xec>
  42da61:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42da65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42da69:	48 89 d6             	mov    %rdx,%rsi
  42da6c:	48 89 c7             	mov    %rax,%rdi
  42da6f:	e8 19 fb ff ff       	callq  42d58d <luaH_getint>
  42da74:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42da78:	0f b6 c0             	movzbl %al,%eax
  42da7b:	83 e0 0f             	and    $0xf,%eax
  42da7e:	85 c0                	test   %eax,%eax
  42da80:	75 8c                	jne    42da0e <hash_search+0x1c>
  42da82:	eb 48                	jmp    42dacc <hash_search+0xda>
  42da84:	90                   	nop
  42da85:	eb 45                	jmp    42dacc <hash_search+0xda>
  42da87:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42da8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da8f:	48 01 d0             	add    %rdx,%rax
  42da92:	48 d1 e8             	shr    %rax
  42da95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42da99:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42da9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42daa1:	48 89 d6             	mov    %rdx,%rsi
  42daa4:	48 89 c7             	mov    %rax,%rdi
  42daa7:	e8 e1 fa ff ff       	callq  42d58d <luaH_getint>
  42daac:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42dab0:	0f b6 c0             	movzbl %al,%eax
  42dab3:	83 e0 0f             	and    $0xf,%eax
  42dab6:	85 c0                	test   %eax,%eax
  42dab8:	75 0a                	jne    42dac4 <hash_search+0xd2>
  42daba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42dabe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42dac2:	eb 08                	jmp    42dacc <hash_search+0xda>
  42dac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42dac8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42dacc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42dad0:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  42dad4:	48 83 f8 01          	cmp    $0x1,%rax
  42dad8:	77 ad                	ja     42da87 <hash_search+0x95>
  42dada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42dade:	c9                   	leaveq 
  42dadf:	c3                   	retq   

000000000042dae0 <binsearch>:
  42dae0:	55                   	push   %rbp
  42dae1:	48 89 e5             	mov    %rsp,%rbp
  42dae4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42dae8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42daeb:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42daee:	eb 3f                	jmp    42db2f <binsearch+0x4f>
  42daf0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42daf3:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42daf6:	01 d0                	add    %edx,%eax
  42daf8:	d1 e8                	shr    %eax
  42dafa:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42dafd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42db00:	83 e8 01             	sub    $0x1,%eax
  42db03:	89 c0                	mov    %eax,%eax
  42db05:	48 c1 e0 04          	shl    $0x4,%rax
  42db09:	48 89 c2             	mov    %rax,%rdx
  42db0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db10:	48 01 d0             	add    %rdx,%rax
  42db13:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42db17:	0f b6 c0             	movzbl %al,%eax
  42db1a:	83 e0 0f             	and    $0xf,%eax
  42db1d:	85 c0                	test   %eax,%eax
  42db1f:	75 08                	jne    42db29 <binsearch+0x49>
  42db21:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42db24:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42db27:	eb 06                	jmp    42db2f <binsearch+0x4f>
  42db29:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42db2c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42db2f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42db32:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42db35:	83 f8 01             	cmp    $0x1,%eax
  42db38:	77 b6                	ja     42daf0 <binsearch+0x10>
  42db3a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42db3d:	5d                   	pop    %rbp
  42db3e:	c3                   	retq   

000000000042db3f <luaH_getn>:
  42db3f:	55                   	push   %rbp
  42db40:	48 89 e5             	mov    %rsp,%rbp
  42db43:	48 83 ec 18          	sub    $0x18,%rsp
  42db47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42db4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db4f:	8b 40 0c             	mov    0xc(%rax),%eax
  42db52:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42db55:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42db59:	0f 84 08 01 00 00    	je     42dc67 <luaH_getn+0x128>
  42db5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db63:	48 8b 40 10          	mov    0x10(%rax),%rax
  42db67:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42db6a:	83 ea 01             	sub    $0x1,%edx
  42db6d:	89 d2                	mov    %edx,%edx
  42db6f:	48 c1 e2 04          	shl    $0x4,%rdx
  42db73:	48 01 d0             	add    %rdx,%rax
  42db76:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42db7a:	0f b6 c0             	movzbl %al,%eax
  42db7d:	83 e0 0f             	and    $0xf,%eax
  42db80:	85 c0                	test   %eax,%eax
  42db82:	0f 85 df 00 00 00    	jne    42dc67 <luaH_getn+0x128>
  42db88:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  42db8c:	76 75                	jbe    42dc03 <luaH_getn+0xc4>
  42db8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db92:	48 8b 40 10          	mov    0x10(%rax),%rax
  42db96:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42db99:	83 ea 02             	sub    $0x2,%edx
  42db9c:	89 d2                	mov    %edx,%edx
  42db9e:	48 c1 e2 04          	shl    $0x4,%rdx
  42dba2:	48 01 d0             	add    %rdx,%rax
  42dba5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42dba9:	0f b6 c0             	movzbl %al,%eax
  42dbac:	83 e0 0f             	and    $0xf,%eax
  42dbaf:	85 c0                	test   %eax,%eax
  42dbb1:	74 50                	je     42dc03 <luaH_getn+0xc4>
  42dbb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dbb7:	48 89 c7             	mov    %rax,%rdi
  42dbba:	e8 4e e8 ff ff       	callq  42c40d <ispow2realasize>
  42dbbf:	85 c0                	test   %eax,%eax
  42dbc1:	74 33                	je     42dbf6 <luaH_getn+0xb7>
  42dbc3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dbc6:	8d 50 ff             	lea    -0x1(%rax),%edx
  42dbc9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dbcc:	83 e8 02             	sub    $0x2,%eax
  42dbcf:	21 d0                	and    %edx,%eax
  42dbd1:	85 c0                	test   %eax,%eax
  42dbd3:	74 21                	je     42dbf6 <luaH_getn+0xb7>
  42dbd5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dbd8:	8d 50 ff             	lea    -0x1(%rax),%edx
  42dbdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dbdf:	89 50 0c             	mov    %edx,0xc(%rax)
  42dbe2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dbe6:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42dbea:	83 c8 80             	or     $0xffffff80,%eax
  42dbed:	89 c2                	mov    %eax,%edx
  42dbef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dbf3:	88 50 0a             	mov    %dl,0xa(%rax)
  42dbf6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dbf9:	83 e8 01             	sub    $0x1,%eax
  42dbfc:	89 c0                	mov    %eax,%eax
  42dbfe:	e9 62 01 00 00       	jmpq   42dd65 <luaH_getn+0x226>
  42dc03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc07:	48 8b 40 10          	mov    0x10(%rax),%rax
  42dc0b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42dc0e:	be 00 00 00 00       	mov    $0x0,%esi
  42dc13:	48 89 c7             	mov    %rax,%rdi
  42dc16:	e8 c5 fe ff ff       	callq  42dae0 <binsearch>
  42dc1b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42dc1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc22:	48 89 c7             	mov    %rax,%rdi
  42dc25:	e8 e3 e7 ff ff       	callq  42c40d <ispow2realasize>
  42dc2a:	85 c0                	test   %eax,%eax
  42dc2c:	74 31                	je     42dc5f <luaH_getn+0x120>
  42dc2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc32:	48 89 c7             	mov    %rax,%rdi
  42dc35:	e8 60 e7 ff ff       	callq  42c39a <luaH_realasize>
  42dc3a:	d1 e8                	shr    %eax
  42dc3c:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  42dc3f:	76 1e                	jbe    42dc5f <luaH_getn+0x120>
  42dc41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc45:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42dc48:	89 50 0c             	mov    %edx,0xc(%rax)
  42dc4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc4f:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42dc53:	83 c8 80             	or     $0xffffff80,%eax
  42dc56:	89 c2                	mov    %eax,%edx
  42dc58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc5c:	88 50 0a             	mov    %dl,0xa(%rax)
  42dc5f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42dc62:	e9 fe 00 00 00       	jmpq   42dd65 <luaH_getn+0x226>
  42dc67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc6b:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  42dc6f:	84 c0                	test   %al,%al
  42dc71:	0f 89 a5 00 00 00    	jns    42dd1c <luaH_getn+0x1dd>
  42dc77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc7b:	8b 50 0c             	mov    0xc(%rax),%edx
  42dc7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc82:	8b 40 0c             	mov    0xc(%rax),%eax
  42dc85:	83 e8 01             	sub    $0x1,%eax
  42dc88:	21 d0                	and    %edx,%eax
  42dc8a:	85 c0                	test   %eax,%eax
  42dc8c:	0f 84 8a 00 00 00    	je     42dd1c <luaH_getn+0x1dd>
  42dc92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dc96:	48 8b 40 10          	mov    0x10(%rax),%rax
  42dc9a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42dc9d:	48 c1 e2 04          	shl    $0x4,%rdx
  42dca1:	48 01 d0             	add    %rdx,%rax
  42dca4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42dca8:	0f b6 c0             	movzbl %al,%eax
  42dcab:	83 e0 0f             	and    $0xf,%eax
  42dcae:	85 c0                	test   %eax,%eax
  42dcb0:	75 08                	jne    42dcba <luaH_getn+0x17b>
  42dcb2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dcb5:	e9 ab 00 00 00       	jmpq   42dd65 <luaH_getn+0x226>
  42dcba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dcbe:	48 89 c7             	mov    %rax,%rdi
  42dcc1:	e8 d4 e6 ff ff       	callq  42c39a <luaH_realasize>
  42dcc6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42dcc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dccd:	48 8b 40 10          	mov    0x10(%rax),%rax
  42dcd1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42dcd4:	83 ea 01             	sub    $0x1,%edx
  42dcd7:	89 d2                	mov    %edx,%edx
  42dcd9:	48 c1 e2 04          	shl    $0x4,%rdx
  42dcdd:	48 01 d0             	add    %rdx,%rax
  42dce0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42dce4:	0f b6 c0             	movzbl %al,%eax
  42dce7:	83 e0 0f             	and    $0xf,%eax
  42dcea:	85 c0                	test   %eax,%eax
  42dcec:	75 2e                	jne    42dd1c <luaH_getn+0x1dd>
  42dcee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dcf2:	8b 48 0c             	mov    0xc(%rax),%ecx
  42dcf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dcf9:	48 8b 40 10          	mov    0x10(%rax),%rax
  42dcfd:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42dd00:	89 ce                	mov    %ecx,%esi
  42dd02:	48 89 c7             	mov    %rax,%rdi
  42dd05:	e8 d6 fd ff ff       	callq  42dae0 <binsearch>
  42dd0a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42dd0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dd11:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42dd14:	89 50 0c             	mov    %edx,0xc(%rax)
  42dd17:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42dd1a:	eb 49                	jmp    42dd65 <luaH_getn+0x226>
  42dd1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dd20:	48 8b 40 20          	mov    0x20(%rax),%rax
  42dd24:	48 85 c0             	test   %rax,%rax
  42dd27:	74 25                	je     42dd4e <luaH_getn+0x20f>
  42dd29:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dd2c:	83 c0 01             	add    $0x1,%eax
  42dd2f:	89 c2                	mov    %eax,%edx
  42dd31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dd35:	48 89 d6             	mov    %rdx,%rsi
  42dd38:	48 89 c7             	mov    %rax,%rdi
  42dd3b:	e8 4d f8 ff ff       	callq  42d58d <luaH_getint>
  42dd40:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42dd44:	0f b6 c0             	movzbl %al,%eax
  42dd47:	83 e0 0f             	and    $0xf,%eax
  42dd4a:	85 c0                	test   %eax,%eax
  42dd4c:	75 05                	jne    42dd53 <luaH_getn+0x214>
  42dd4e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42dd51:	eb 12                	jmp    42dd65 <luaH_getn+0x226>
  42dd53:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42dd56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dd5a:	48 89 d6             	mov    %rdx,%rsi
  42dd5d:	48 89 c7             	mov    %rax,%rdi
  42dd60:	e8 8d fc ff ff       	callq  42d9f2 <hash_search>
  42dd65:	c9                   	leaveq 
  42dd66:	c3                   	retq   

000000000042dd67 <checkfield>:
  42dd67:	55                   	push   %rbp
  42dd68:	48 89 e5             	mov    %rsp,%rbp
  42dd6b:	48 83 ec 20          	sub    $0x20,%rsp
  42dd6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42dd73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42dd77:	89 55 ec             	mov    %edx,-0x14(%rbp)
  42dd7a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42dd7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42dd82:	48 89 d6             	mov    %rdx,%rsi
  42dd85:	48 89 c7             	mov    %rax,%rdi
  42dd88:	e8 81 50 fd ff       	callq  402e0e <lua_pushstring>
  42dd8d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42dd90:	f7 d8                	neg    %eax
  42dd92:	89 c2                	mov    %eax,%edx
  42dd94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42dd98:	89 d6                	mov    %edx,%esi
  42dd9a:	48 89 c7             	mov    %rax,%rdi
  42dd9d:	e8 4e 59 fd ff       	callq  4036f0 <lua_rawget>
  42dda2:	85 c0                	test   %eax,%eax
  42dda4:	0f 95 c0             	setne  %al
  42dda7:	0f b6 c0             	movzbl %al,%eax
  42ddaa:	c9                   	leaveq 
  42ddab:	c3                   	retq   

000000000042ddac <checktab>:
  42ddac:	55                   	push   %rbp
  42ddad:	48 89 e5             	mov    %rsp,%rbp
  42ddb0:	48 83 ec 20          	sub    $0x20,%rsp
  42ddb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ddb8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42ddbb:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42ddbe:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42ddc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ddc5:	89 d6                	mov    %edx,%esi
  42ddc7:	48 89 c7             	mov    %rax,%rdi
  42ddca:	e8 a4 45 fd ff       	callq  402373 <lua_type>
  42ddcf:	83 f8 05             	cmp    $0x5,%eax
  42ddd2:	0f 84 bf 00 00 00    	je     42de97 <checktab+0xeb>
  42ddd8:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42dddf:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42dde2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dde6:	89 d6                	mov    %edx,%esi
  42dde8:	48 89 c7             	mov    %rax,%rdi
  42ddeb:	e8 c7 5a fd ff       	callq  4038b7 <lua_getmetatable>
  42ddf0:	85 c0                	test   %eax,%eax
  42ddf2:	0f 84 89 00 00 00    	je     42de81 <checktab+0xd5>
  42ddf8:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ddfb:	83 e0 01             	and    $0x1,%eax
  42ddfe:	85 c0                	test   %eax,%eax
  42de00:	74 1c                	je     42de1e <checktab+0x72>
  42de02:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42de06:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42de09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42de0d:	be 80 22 44 00       	mov    $0x442280,%esi
  42de12:	48 89 c7             	mov    %rax,%rdi
  42de15:	e8 4d ff ff ff       	callq  42dd67 <checkfield>
  42de1a:	85 c0                	test   %eax,%eax
  42de1c:	74 63                	je     42de81 <checktab+0xd5>
  42de1e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42de21:	83 e0 02             	and    $0x2,%eax
  42de24:	85 c0                	test   %eax,%eax
  42de26:	74 1c                	je     42de44 <checktab+0x98>
  42de28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42de2c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42de2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42de33:	be 88 22 44 00       	mov    $0x442288,%esi
  42de38:	48 89 c7             	mov    %rax,%rdi
  42de3b:	e8 27 ff ff ff       	callq  42dd67 <checkfield>
  42de40:	85 c0                	test   %eax,%eax
  42de42:	74 3d                	je     42de81 <checktab+0xd5>
  42de44:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42de47:	83 e0 04             	and    $0x4,%eax
  42de4a:	85 c0                	test   %eax,%eax
  42de4c:	74 1c                	je     42de6a <checktab+0xbe>
  42de4e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42de52:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42de55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42de59:	be 93 22 44 00       	mov    $0x442293,%esi
  42de5e:	48 89 c7             	mov    %rax,%rdi
  42de61:	e8 01 ff ff ff       	callq  42dd67 <checkfield>
  42de66:	85 c0                	test   %eax,%eax
  42de68:	74 17                	je     42de81 <checktab+0xd5>
  42de6a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42de6d:	f7 d0                	not    %eax
  42de6f:	89 c2                	mov    %eax,%edx
  42de71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42de75:	89 d6                	mov    %edx,%esi
  42de77:	48 89 c7             	mov    %rax,%rdi
  42de7a:	e8 05 41 fd ff       	callq  401f84 <lua_settop>
  42de7f:	eb 16                	jmp    42de97 <checktab+0xeb>
  42de81:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  42de84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42de88:	ba 05 00 00 00       	mov    $0x5,%edx
  42de8d:	89 ce                	mov    %ecx,%esi
  42de8f:	48 89 c7             	mov    %rax,%rdi
  42de92:	e8 a6 88 fd ff       	callq  40673d <luaL_checktype>
  42de97:	90                   	nop
  42de98:	c9                   	leaveq 
  42de99:	c3                   	retq   

000000000042de9a <tinsert>:
  42de9a:	55                   	push   %rbp
  42de9b:	48 89 e5             	mov    %rsp,%rbp
  42de9e:	48 83 ec 30          	sub    $0x30,%rsp
  42dea2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42dea6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42deaa:	ba 07 00 00 00       	mov    $0x7,%edx
  42deaf:	be 01 00 00 00       	mov    $0x1,%esi
  42deb4:	48 89 c7             	mov    %rax,%rdi
  42deb7:	e8 f0 fe ff ff       	callq  42ddac <checktab>
  42debc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42dec0:	be 01 00 00 00       	mov    $0x1,%esi
  42dec5:	48 89 c7             	mov    %rax,%rdi
  42dec8:	e8 8d 99 fd ff       	callq  40785a <luaL_len>
  42decd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42ded1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ded5:	48 83 c0 01          	add    $0x1,%rax
  42ded9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42dedd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42dee1:	48 89 c7             	mov    %rax,%rdi
  42dee4:	e8 70 40 fd ff       	callq  401f59 <lua_gettop>
  42dee9:	83 f8 02             	cmp    $0x2,%eax
  42deec:	74 0a                	je     42def8 <tinsert+0x5e>
  42deee:	83 f8 03             	cmp    $0x3,%eax
  42def1:	74 12                	je     42df05 <tinsert+0x6b>
  42def3:	e9 9e 00 00 00       	jmpq   42df96 <tinsert+0xfc>
  42def8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42defc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42df00:	e9 a9 00 00 00       	jmpq   42dfae <tinsert+0x114>
  42df05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42df09:	be 02 00 00 00       	mov    $0x2,%esi
  42df0e:	48 89 c7             	mov    %rax,%rdi
  42df11:	e8 81 8a fd ff       	callq  406997 <luaL_checkinteger>
  42df16:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42df1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42df1e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42df22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42df26:	48 39 c2             	cmp    %rax,%rdx
  42df29:	0f 92 c0             	setb   %al
  42df2c:	0f b6 c0             	movzbl %al,%eax
  42df2f:	48 85 c0             	test   %rax,%rax
  42df32:	75 18                	jne    42df4c <tinsert+0xb2>
  42df34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42df38:	ba 99 22 44 00       	mov    $0x442299,%edx
  42df3d:	be 02 00 00 00       	mov    $0x2,%esi
  42df42:	48 89 c7             	mov    %rax,%rdi
  42df45:	e8 a8 7f fd ff       	callq  405ef2 <luaL_argerror>
  42df4a:	85 c0                	test   %eax,%eax
  42df4c:	90                   	nop
  42df4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42df51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42df55:	eb 33                	jmp    42df8a <tinsert+0xf0>
  42df57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42df5b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42df5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42df63:	be 01 00 00 00       	mov    $0x1,%esi
  42df68:	48 89 c7             	mov    %rax,%rdi
  42df6b:	e8 81 55 fd ff       	callq  4034f1 <lua_geti>
  42df70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42df74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42df78:	be 01 00 00 00       	mov    $0x1,%esi
  42df7d:	48 89 c7             	mov    %rax,%rdi
  42df80:	e8 8a 5e fd ff       	callq  403e0f <lua_seti>
  42df85:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
  42df8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42df8e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  42df92:	7f c3                	jg     42df57 <tinsert+0xbd>
  42df94:	eb 18                	jmp    42dfae <tinsert+0x114>
  42df96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42df9a:	be b0 22 44 00       	mov    $0x4422b0,%esi
  42df9f:	48 89 c7             	mov    %rax,%rdi
  42dfa2:	b8 00 00 00 00       	mov    $0x0,%eax
  42dfa7:	e8 44 82 fd ff       	callq  4061f0 <luaL_error>
  42dfac:	eb 1a                	jmp    42dfc8 <tinsert+0x12e>
  42dfae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42dfb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42dfb6:	be 01 00 00 00       	mov    $0x1,%esi
  42dfbb:	48 89 c7             	mov    %rax,%rdi
  42dfbe:	e8 4c 5e fd ff       	callq  403e0f <lua_seti>
  42dfc3:	b8 00 00 00 00       	mov    $0x0,%eax
  42dfc8:	c9                   	leaveq 
  42dfc9:	c3                   	retq   

000000000042dfca <tremove>:
  42dfca:	55                   	push   %rbp
  42dfcb:	48 89 e5             	mov    %rsp,%rbp
  42dfce:	48 83 ec 20          	sub    $0x20,%rsp
  42dfd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42dfd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dfda:	ba 07 00 00 00       	mov    $0x7,%edx
  42dfdf:	be 01 00 00 00       	mov    $0x1,%esi
  42dfe4:	48 89 c7             	mov    %rax,%rdi
  42dfe7:	e8 c0 fd ff ff       	callq  42ddac <checktab>
  42dfec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dff0:	be 01 00 00 00       	mov    $0x1,%esi
  42dff5:	48 89 c7             	mov    %rax,%rdi
  42dff8:	e8 5d 98 fd ff       	callq  40785a <luaL_len>
  42dffd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e001:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42e005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e009:	be 02 00 00 00       	mov    $0x2,%esi
  42e00e:	48 89 c7             	mov    %rax,%rdi
  42e011:	e8 d0 89 fd ff       	callq  4069e6 <luaL_optinteger>
  42e016:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42e01a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e01e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e022:	74 33                	je     42e057 <tremove+0x8d>
  42e024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e028:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  42e02c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e030:	48 39 c2             	cmp    %rax,%rdx
  42e033:	0f 96 c0             	setbe  %al
  42e036:	0f b6 c0             	movzbl %al,%eax
  42e039:	48 85 c0             	test   %rax,%rax
  42e03c:	75 18                	jne    42e056 <tremove+0x8c>
  42e03e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e042:	ba 99 22 44 00       	mov    $0x442299,%edx
  42e047:	be 02 00 00 00       	mov    $0x2,%esi
  42e04c:	48 89 c7             	mov    %rax,%rdi
  42e04f:	e8 9e 7e fd ff       	callq  405ef2 <luaL_argerror>
  42e054:	85 c0                	test   %eax,%eax
  42e056:	90                   	nop
  42e057:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42e05b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e05f:	be 01 00 00 00       	mov    $0x1,%esi
  42e064:	48 89 c7             	mov    %rax,%rdi
  42e067:	e8 85 54 fd ff       	callq  4034f1 <lua_geti>
  42e06c:	eb 33                	jmp    42e0a1 <tremove+0xd7>
  42e06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e072:	48 8d 50 01          	lea    0x1(%rax),%rdx
  42e076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e07a:	be 01 00 00 00       	mov    $0x1,%esi
  42e07f:	48 89 c7             	mov    %rax,%rdi
  42e082:	e8 6a 54 fd ff       	callq  4034f1 <lua_geti>
  42e087:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42e08b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e08f:	be 01 00 00 00       	mov    $0x1,%esi
  42e094:	48 89 c7             	mov    %rax,%rdi
  42e097:	e8 73 5d fd ff       	callq  403e0f <lua_seti>
  42e09c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42e0a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e0a5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e0a9:	7c c3                	jl     42e06e <tremove+0xa4>
  42e0ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e0af:	48 89 c7             	mov    %rax,%rdi
  42e0b2:	e8 ee 4b fd ff       	callq  402ca5 <lua_pushnil>
  42e0b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42e0bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e0bf:	be 01 00 00 00       	mov    $0x1,%esi
  42e0c4:	48 89 c7             	mov    %rax,%rdi
  42e0c7:	e8 43 5d fd ff       	callq  403e0f <lua_seti>
  42e0cc:	b8 01 00 00 00       	mov    $0x1,%eax
  42e0d1:	c9                   	leaveq 
  42e0d2:	c3                   	retq   

000000000042e0d3 <tmove>:
  42e0d3:	55                   	push   %rbp
  42e0d4:	48 89 e5             	mov    %rsp,%rbp
  42e0d7:	48 83 ec 40          	sub    $0x40,%rsp
  42e0db:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42e0df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e0e3:	be 02 00 00 00       	mov    $0x2,%esi
  42e0e8:	48 89 c7             	mov    %rax,%rdi
  42e0eb:	e8 a7 88 fd ff       	callq  406997 <luaL_checkinteger>
  42e0f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e0f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e0f8:	be 03 00 00 00       	mov    $0x3,%esi
  42e0fd:	48 89 c7             	mov    %rax,%rdi
  42e100:	e8 92 88 fd ff       	callq  406997 <luaL_checkinteger>
  42e105:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42e109:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e10d:	be 04 00 00 00       	mov    $0x4,%esi
  42e112:	48 89 c7             	mov    %rax,%rdi
  42e115:	e8 7d 88 fd ff       	callq  406997 <luaL_checkinteger>
  42e11a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42e11e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e122:	be 05 00 00 00       	mov    $0x5,%esi
  42e127:	48 89 c7             	mov    %rax,%rdi
  42e12a:	e8 44 42 fd ff       	callq  402373 <lua_type>
  42e12f:	85 c0                	test   %eax,%eax
  42e131:	7e 07                	jle    42e13a <tmove+0x67>
  42e133:	b8 05 00 00 00       	mov    $0x5,%eax
  42e138:	eb 05                	jmp    42e13f <tmove+0x6c>
  42e13a:	b8 01 00 00 00       	mov    $0x1,%eax
  42e13f:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42e142:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e146:	ba 01 00 00 00       	mov    $0x1,%edx
  42e14b:	be 01 00 00 00       	mov    $0x1,%esi
  42e150:	48 89 c7             	mov    %rax,%rdi
  42e153:	e8 54 fc ff ff       	callq  42ddac <checktab>
  42e158:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42e15b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e15f:	ba 02 00 00 00       	mov    $0x2,%edx
  42e164:	89 ce                	mov    %ecx,%esi
  42e166:	48 89 c7             	mov    %rax,%rdi
  42e169:	e8 3e fc ff ff       	callq  42ddac <checktab>
  42e16e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e172:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e176:	0f 8c 76 01 00 00    	jl     42e2f2 <tmove+0x21f>
  42e17c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42e181:	7f 17                	jg     42e19a <tmove+0xc7>
  42e183:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
  42e18a:	ff ff 7f 
  42e18d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e191:	48 01 d0             	add    %rdx,%rax
  42e194:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  42e198:	7f 07                	jg     42e1a1 <tmove+0xce>
  42e19a:	b8 01 00 00 00       	mov    $0x1,%eax
  42e19f:	eb 05                	jmp    42e1a6 <tmove+0xd3>
  42e1a1:	b8 00 00 00 00       	mov    $0x0,%eax
  42e1a6:	85 c0                	test   %eax,%eax
  42e1a8:	0f 95 c0             	setne  %al
  42e1ab:	0f b6 c0             	movzbl %al,%eax
  42e1ae:	48 85 c0             	test   %rax,%rax
  42e1b1:	75 18                	jne    42e1cb <tmove+0xf8>
  42e1b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e1b7:	ba d6 22 44 00       	mov    $0x4422d6,%edx
  42e1bc:	be 03 00 00 00       	mov    $0x3,%esi
  42e1c1:	48 89 c7             	mov    %rax,%rdi
  42e1c4:	e8 29 7d fd ff       	callq  405ef2 <luaL_argerror>
  42e1c9:	85 c0                	test   %eax,%eax
  42e1cb:	90                   	nop
  42e1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e1d0:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
  42e1d4:	48 83 c0 01          	add    $0x1,%rax
  42e1d8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42e1dc:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  42e1e3:	ff ff 7f 
  42e1e6:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
  42e1ea:	48 83 c0 01          	add    $0x1,%rax
  42e1ee:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  42e1f2:	0f 9e c0             	setle  %al
  42e1f5:	0f b6 c0             	movzbl %al,%eax
  42e1f8:	48 85 c0             	test   %rax,%rax
  42e1fb:	75 18                	jne    42e215 <tmove+0x142>
  42e1fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e201:	ba f0 22 44 00       	mov    $0x4422f0,%edx
  42e206:	be 04 00 00 00       	mov    $0x4,%esi
  42e20b:	48 89 c7             	mov    %rax,%rdi
  42e20e:	e8 df 7c fd ff       	callq  405ef2 <luaL_argerror>
  42e213:	85 c0                	test   %eax,%eax
  42e215:	90                   	nop
  42e216:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42e21a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  42e21e:	7f 2d                	jg     42e24d <tmove+0x17a>
  42e220:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42e224:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e228:	7e 23                	jle    42e24d <tmove+0x17a>
  42e22a:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  42e22e:	74 70                	je     42e2a0 <tmove+0x1cd>
  42e230:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42e233:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e237:	b9 00 00 00 00       	mov    $0x0,%ecx
  42e23c:	be 01 00 00 00       	mov    $0x1,%esi
  42e241:	48 89 c7             	mov    %rax,%rdi
  42e244:	e8 81 44 fd ff       	callq  4026ca <lua_compare>
  42e249:	85 c0                	test   %eax,%eax
  42e24b:	75 53                	jne    42e2a0 <tmove+0x1cd>
  42e24d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42e254:	00 
  42e255:	eb 3d                	jmp    42e294 <tmove+0x1c1>
  42e257:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42e25b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e25f:	48 01 c2             	add    %rax,%rdx
  42e262:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e266:	be 01 00 00 00       	mov    $0x1,%esi
  42e26b:	48 89 c7             	mov    %rax,%rdi
  42e26e:	e8 7e 52 fd ff       	callq  4034f1 <lua_geti>
  42e273:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42e277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e27b:	48 01 c2             	add    %rax,%rdx
  42e27e:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42e281:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e285:	89 ce                	mov    %ecx,%esi
  42e287:	48 89 c7             	mov    %rax,%rdi
  42e28a:	e8 80 5b fd ff       	callq  403e0f <lua_seti>
  42e28f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42e294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e298:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  42e29c:	7c b9                	jl     42e257 <tmove+0x184>
  42e29e:	eb 52                	jmp    42e2f2 <tmove+0x21f>
  42e2a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42e2a4:	48 83 e8 01          	sub    $0x1,%rax
  42e2a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42e2ac:	eb 3d                	jmp    42e2eb <tmove+0x218>
  42e2ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42e2b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e2b6:	48 01 c2             	add    %rax,%rdx
  42e2b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e2bd:	be 01 00 00 00       	mov    $0x1,%esi
  42e2c2:	48 89 c7             	mov    %rax,%rdi
  42e2c5:	e8 27 52 fd ff       	callq  4034f1 <lua_geti>
  42e2ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42e2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e2d2:	48 01 c2             	add    %rax,%rdx
  42e2d5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42e2d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e2dc:	89 ce                	mov    %ecx,%esi
  42e2de:	48 89 c7             	mov    %rax,%rdi
  42e2e1:	e8 29 5b fd ff       	callq  403e0f <lua_seti>
  42e2e6:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  42e2eb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42e2f0:	79 bc                	jns    42e2ae <tmove+0x1db>
  42e2f2:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42e2f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42e2f9:	89 d6                	mov    %edx,%esi
  42e2fb:	48 89 c7             	mov    %rax,%rdi
  42e2fe:	e8 0c 40 fd ff       	callq  40230f <lua_pushvalue>
  42e303:	b8 01 00 00 00       	mov    $0x1,%eax
  42e308:	c9                   	leaveq 
  42e309:	c3                   	retq   

000000000042e30a <addfield>:
  42e30a:	55                   	push   %rbp
  42e30b:	48 89 e5             	mov    %rsp,%rbp
  42e30e:	48 83 ec 20          	sub    $0x20,%rsp
  42e312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42e316:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42e31a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42e31e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e326:	be 01 00 00 00       	mov    $0x1,%esi
  42e32b:	48 89 c7             	mov    %rax,%rdi
  42e32e:	e8 be 51 fd ff       	callq  4034f1 <lua_geti>
  42e333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e337:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42e33c:	48 89 c7             	mov    %rax,%rdi
  42e33f:	e8 84 41 fd ff       	callq  4024c8 <lua_isstring>
  42e344:	85 c0                	test   %eax,%eax
  42e346:	0f 94 c0             	sete   %al
  42e349:	0f b6 c0             	movzbl %al,%eax
  42e34c:	48 85 c0             	test   %rax,%rax
  42e34f:	74 44                	je     42e395 <addfield+0x8b>
  42e351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e355:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42e35a:	48 89 c7             	mov    %rax,%rdi
  42e35d:	e8 11 40 fd ff       	callq  402373 <lua_type>
  42e362:	89 c2                	mov    %eax,%edx
  42e364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e368:	89 d6                	mov    %edx,%esi
  42e36a:	48 89 c7             	mov    %rax,%rdi
  42e36d:	e8 60 40 fd ff       	callq  4023d2 <lua_typename>
  42e372:	48 89 c6             	mov    %rax,%rsi
  42e375:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e37d:	48 89 d1             	mov    %rdx,%rcx
  42e380:	48 89 f2             	mov    %rsi,%rdx
  42e383:	be 08 23 44 00       	mov    $0x442308,%esi
  42e388:	48 89 c7             	mov    %rax,%rdi
  42e38b:	b8 00 00 00 00       	mov    $0x0,%eax
  42e390:	e8 5b 7e fd ff       	callq  4061f0 <luaL_error>
  42e395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e399:	48 89 c7             	mov    %rax,%rdi
  42e39c:	e8 59 8b fd ff       	callq  406efa <luaL_addvalue>
  42e3a1:	90                   	nop
  42e3a2:	c9                   	leaveq 
  42e3a3:	c3                   	retq   

000000000042e3a4 <tconcat>:
  42e3a4:	55                   	push   %rbp
  42e3a5:	48 89 e5             	mov    %rsp,%rbp
  42e3a8:	48 81 ec 60 04 00 00 	sub    $0x460,%rsp
  42e3af:	48 89 bd a8 fb ff ff 	mov    %rdi,-0x458(%rbp)
  42e3b6:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e3bd:	ba 05 00 00 00       	mov    $0x5,%edx
  42e3c2:	be 01 00 00 00       	mov    $0x1,%esi
  42e3c7:	48 89 c7             	mov    %rax,%rdi
  42e3ca:	e8 dd f9 ff ff       	callq  42ddac <checktab>
  42e3cf:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e3d6:	be 01 00 00 00       	mov    $0x1,%esi
  42e3db:	48 89 c7             	mov    %rax,%rdi
  42e3de:	e8 77 94 fd ff       	callq  40785a <luaL_len>
  42e3e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e3e7:	48 8d 95 b8 fb ff ff 	lea    -0x448(%rbp),%rdx
  42e3ee:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e3f5:	48 89 d1             	mov    %rdx,%rcx
  42e3f8:	ba 3d 23 44 00       	mov    $0x44233d,%edx
  42e3fd:	be 02 00 00 00       	mov    $0x2,%esi
  42e402:	48 89 c7             	mov    %rax,%rdi
  42e405:	e8 1a 84 fd ff       	callq  406824 <luaL_optlstring>
  42e40a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42e40e:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e415:	ba 01 00 00 00       	mov    $0x1,%edx
  42e41a:	be 03 00 00 00       	mov    $0x3,%esi
  42e41f:	48 89 c7             	mov    %rax,%rdi
  42e422:	e8 bf 85 fd ff       	callq  4069e6 <luaL_optinteger>
  42e427:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42e42b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42e42f:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e436:	be 04 00 00 00       	mov    $0x4,%esi
  42e43b:	48 89 c7             	mov    %rax,%rdi
  42e43e:	e8 a3 85 fd ff       	callq  4069e6 <luaL_optinteger>
  42e443:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e447:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
  42e44e:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e455:	48 89 d6             	mov    %rdx,%rsi
  42e458:	48 89 c7             	mov    %rax,%rdi
  42e45b:	e8 29 8b fd ff       	callq  406f89 <luaL_buffinit>
  42e460:	eb 3f                	jmp    42e4a1 <tconcat+0xfd>
  42e462:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42e466:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  42e46d:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e474:	48 89 ce             	mov    %rcx,%rsi
  42e477:	48 89 c7             	mov    %rax,%rdi
  42e47a:	e8 8b fe ff ff       	callq  42e30a <addfield>
  42e47f:	48 8b 95 b8 fb ff ff 	mov    -0x448(%rbp),%rdx
  42e486:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42e48a:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  42e491:	48 89 ce             	mov    %rcx,%rsi
  42e494:	48 89 c7             	mov    %rax,%rdi
  42e497:	e8 06 89 fd ff       	callq  406da2 <luaL_addlstring>
  42e49c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42e4a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e4a5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e4a9:	7c b7                	jl     42e462 <tconcat+0xbe>
  42e4ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e4af:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  42e4b3:	75 1d                	jne    42e4d2 <tconcat+0x12e>
  42e4b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42e4b9:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  42e4c0:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  42e4c7:	48 89 ce             	mov    %rcx,%rsi
  42e4ca:	48 89 c7             	mov    %rax,%rdi
  42e4cd:	e8 38 fe ff ff       	callq  42e30a <addfield>
  42e4d2:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  42e4d9:	48 89 c7             	mov    %rax,%rdi
  42e4dc:	e8 5e 89 fd ff       	callq  406e3f <luaL_pushresult>
  42e4e1:	b8 01 00 00 00       	mov    $0x1,%eax
  42e4e6:	c9                   	leaveq 
  42e4e7:	c3                   	retq   

000000000042e4e8 <tpack>:
  42e4e8:	55                   	push   %rbp
  42e4e9:	48 89 e5             	mov    %rsp,%rbp
  42e4ec:	48 83 ec 20          	sub    $0x20,%rsp
  42e4f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42e4f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e4f8:	48 89 c7             	mov    %rax,%rdi
  42e4fb:	e8 59 3a fd ff       	callq  401f59 <lua_gettop>
  42e500:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42e503:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  42e506:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e50a:	ba 01 00 00 00       	mov    $0x1,%edx
  42e50f:	89 ce                	mov    %ecx,%esi
  42e511:	48 89 c7             	mov    %rax,%rdi
  42e514:	e8 ff 52 fd ff       	callq  403818 <lua_createtable>
  42e519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e51d:	ba 01 00 00 00       	mov    $0x1,%edx
  42e522:	be 01 00 00 00       	mov    $0x1,%esi
  42e527:	48 89 c7             	mov    %rax,%rdi
  42e52a:	e8 3f 3c fd ff       	callq  40216e <lua_rotate>
  42e52f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e532:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42e535:	eb 1b                	jmp    42e552 <tpack+0x6a>
  42e537:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e53a:	48 63 d0             	movslq %eax,%rdx
  42e53d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e541:	be 01 00 00 00       	mov    $0x1,%esi
  42e546:	48 89 c7             	mov    %rax,%rdi
  42e549:	e8 c1 58 fd ff       	callq  403e0f <lua_seti>
  42e54e:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  42e552:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  42e556:	7f df                	jg     42e537 <tpack+0x4f>
  42e558:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e55b:	48 63 d0             	movslq %eax,%rdx
  42e55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e562:	48 89 d6             	mov    %rdx,%rsi
  42e565:	48 89 c7             	mov    %rax,%rdi
  42e568:	e8 a8 47 fd ff       	callq  402d15 <lua_pushinteger>
  42e56d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e571:	ba 3e 23 44 00       	mov    $0x44233e,%edx
  42e576:	be 01 00 00 00       	mov    $0x1,%esi
  42e57b:	48 89 c7             	mov    %rax,%rdi
  42e57e:	e8 4f 58 fd ff       	callq  403dd2 <lua_setfield>
  42e583:	b8 01 00 00 00       	mov    $0x1,%eax
  42e588:	c9                   	leaveq 
  42e589:	c3                   	retq   

000000000042e58a <tunpack>:
  42e58a:	55                   	push   %rbp
  42e58b:	48 89 e5             	mov    %rsp,%rbp
  42e58e:	48 83 ec 30          	sub    $0x30,%rsp
  42e592:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42e596:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e59a:	ba 01 00 00 00       	mov    $0x1,%edx
  42e59f:	be 02 00 00 00       	mov    $0x2,%esi
  42e5a4:	48 89 c7             	mov    %rax,%rdi
  42e5a7:	e8 3a 84 fd ff       	callq  4069e6 <luaL_optinteger>
  42e5ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e5b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e5b4:	be 03 00 00 00       	mov    $0x3,%esi
  42e5b9:	48 89 c7             	mov    %rax,%rdi
  42e5bc:	e8 b2 3d fd ff       	callq  402373 <lua_type>
  42e5c1:	85 c0                	test   %eax,%eax
  42e5c3:	7f 13                	jg     42e5d8 <tunpack+0x4e>
  42e5c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e5c9:	be 01 00 00 00       	mov    $0x1,%esi
  42e5ce:	48 89 c7             	mov    %rax,%rdi
  42e5d1:	e8 84 92 fd ff       	callq  40785a <luaL_len>
  42e5d6:	eb 11                	jmp    42e5e9 <tunpack+0x5f>
  42e5d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e5dc:	be 03 00 00 00       	mov    $0x3,%esi
  42e5e1:	48 89 c7             	mov    %rax,%rdi
  42e5e4:	e8 ae 83 fd ff       	callq  406997 <luaL_checkinteger>
  42e5e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42e5ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e5f1:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  42e5f5:	7e 0a                	jle    42e601 <tunpack+0x77>
  42e5f7:	b8 00 00 00 00       	mov    $0x0,%eax
  42e5fc:	e9 a7 00 00 00       	jmpq   42e6a8 <tunpack+0x11e>
  42e601:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e605:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e609:	48 29 c2             	sub    %rax,%rdx
  42e60c:	48 89 d0             	mov    %rdx,%rax
  42e60f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42e613:	48 81 7d f8 fe ff ff 	cmpq   $0x7ffffffe,-0x8(%rbp)
  42e61a:	7f 
  42e61b:	77 1d                	ja     42e63a <tunpack+0xb0>
  42e61d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42e622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e626:	89 c2                	mov    %eax,%edx
  42e628:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e62c:	89 d6                	mov    %edx,%esi
  42e62e:	48 89 c7             	mov    %rax,%rdi
  42e631:	e8 39 37 fd ff       	callq  401d6f <lua_checkstack>
  42e636:	85 c0                	test   %eax,%eax
  42e638:	75 07                	jne    42e641 <tunpack+0xb7>
  42e63a:	b8 01 00 00 00       	mov    $0x1,%eax
  42e63f:	eb 05                	jmp    42e646 <tunpack+0xbc>
  42e641:	b8 00 00 00 00       	mov    $0x0,%eax
  42e646:	85 c0                	test   %eax,%eax
  42e648:	0f 95 c0             	setne  %al
  42e64b:	0f b6 c0             	movzbl %al,%eax
  42e64e:	48 85 c0             	test   %rax,%rax
  42e651:	74 32                	je     42e685 <tunpack+0xfb>
  42e653:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e657:	be 40 23 44 00       	mov    $0x442340,%esi
  42e65c:	48 89 c7             	mov    %rax,%rdi
  42e65f:	b8 00 00 00 00       	mov    $0x0,%eax
  42e664:	e8 87 7b fd ff       	callq  4061f0 <luaL_error>
  42e669:	eb 3d                	jmp    42e6a8 <tunpack+0x11e>
  42e66b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42e66f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e673:	be 01 00 00 00       	mov    $0x1,%esi
  42e678:	48 89 c7             	mov    %rax,%rdi
  42e67b:	e8 71 4e fd ff       	callq  4034f1 <lua_geti>
  42e680:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  42e685:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e689:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  42e68d:	7c dc                	jl     42e66b <tunpack+0xe1>
  42e68f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e693:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42e697:	be 01 00 00 00       	mov    $0x1,%esi
  42e69c:	48 89 c7             	mov    %rax,%rdi
  42e69f:	e8 4d 4e fd ff       	callq  4034f1 <lua_geti>
  42e6a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e6a8:	c9                   	leaveq 
  42e6a9:	c3                   	retq   

000000000042e6aa <l_randomizePivot>:
  42e6aa:	55                   	push   %rbp
  42e6ab:	48 89 e5             	mov    %rsp,%rbp
  42e6ae:	48 83 ec 30          	sub    $0x30,%rsp
  42e6b2:	e8 39 31 fd ff       	callq  4017f0 <clock@plt>
  42e6b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e6bb:	bf 00 00 00 00       	mov    $0x0,%edi
  42e6c0:	e8 eb 31 fd ff       	callq  4018b0 <time@plt>
  42e6c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42e6c9:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  42e6d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42e6d4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42e6d8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42e6dc:	48 83 c0 08          	add    $0x8,%rax
  42e6e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e6e4:	48 89 10             	mov    %rdx,(%rax)
  42e6e7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42e6ee:	eb 0e                	jmp    42e6fe <l_randomizePivot+0x54>
  42e6f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e6f3:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
  42e6f7:	01 45 f8             	add    %eax,-0x8(%rbp)
  42e6fa:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42e6fe:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  42e702:	76 ec                	jbe    42e6f0 <l_randomizePivot+0x46>
  42e704:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e707:	c9                   	leaveq 
  42e708:	c3                   	retq   

000000000042e709 <set2>:
  42e709:	55                   	push   %rbp
  42e70a:	48 89 e5             	mov    %rsp,%rbp
  42e70d:	48 83 ec 10          	sub    $0x10,%rsp
  42e711:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42e715:	89 75 f4             	mov    %esi,-0xc(%rbp)
  42e718:	89 55 f0             	mov    %edx,-0x10(%rbp)
  42e71b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42e71e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e722:	be 01 00 00 00       	mov    $0x1,%esi
  42e727:	48 89 c7             	mov    %rax,%rdi
  42e72a:	e8 e0 56 fd ff       	callq  403e0f <lua_seti>
  42e72f:	8b 55 f0             	mov    -0x10(%rbp),%edx
  42e732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42e736:	be 01 00 00 00       	mov    $0x1,%esi
  42e73b:	48 89 c7             	mov    %rax,%rdi
  42e73e:	e8 cc 56 fd ff       	callq  403e0f <lua_seti>
  42e743:	90                   	nop
  42e744:	c9                   	leaveq 
  42e745:	c3                   	retq   

000000000042e746 <sort_comp>:
  42e746:	55                   	push   %rbp
  42e747:	48 89 e5             	mov    %rsp,%rbp
  42e74a:	48 83 ec 20          	sub    $0x20,%rsp
  42e74e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42e752:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42e755:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42e758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e75c:	be 02 00 00 00       	mov    $0x2,%esi
  42e761:	48 89 c7             	mov    %rax,%rdi
  42e764:	e8 0a 3c fd ff       	callq  402373 <lua_type>
  42e769:	85 c0                	test   %eax,%eax
  42e76b:	75 1c                	jne    42e789 <sort_comp+0x43>
  42e76d:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42e770:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42e773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e777:	b9 01 00 00 00       	mov    $0x1,%ecx
  42e77c:	48 89 c7             	mov    %rax,%rdi
  42e77f:	e8 46 3f fd ff       	callq  4026ca <lua_compare>
  42e784:	e9 82 00 00 00       	jmpq   42e80b <sort_comp+0xc5>
  42e789:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e78d:	be 02 00 00 00       	mov    $0x2,%esi
  42e792:	48 89 c7             	mov    %rax,%rdi
  42e795:	e8 75 3b fd ff       	callq  40230f <lua_pushvalue>
  42e79a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42e79d:	8d 50 ff             	lea    -0x1(%rax),%edx
  42e7a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e7a4:	89 d6                	mov    %edx,%esi
  42e7a6:	48 89 c7             	mov    %rax,%rdi
  42e7a9:	e8 61 3b fd ff       	callq  40230f <lua_pushvalue>
  42e7ae:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42e7b1:	8d 50 fe             	lea    -0x2(%rax),%edx
  42e7b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e7b8:	89 d6                	mov    %edx,%esi
  42e7ba:	48 89 c7             	mov    %rax,%rdi
  42e7bd:	e8 4d 3b fd ff       	callq  40230f <lua_pushvalue>
  42e7c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e7c6:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42e7cc:	b9 00 00 00 00       	mov    $0x0,%ecx
  42e7d1:	ba 01 00 00 00       	mov    $0x1,%edx
  42e7d6:	be 02 00 00 00       	mov    $0x2,%esi
  42e7db:	48 89 c7             	mov    %rax,%rdi
  42e7de:	e8 cb 5c fd ff       	callq  4044ae <lua_callk>
  42e7e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e7e7:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42e7ec:	48 89 c7             	mov    %rax,%rdi
  42e7ef:	e8 29 41 fd ff       	callq  40291d <lua_toboolean>
  42e7f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42e7f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e7fb:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42e800:	48 89 c7             	mov    %rax,%rdi
  42e803:	e8 7c 37 fd ff       	callq  401f84 <lua_settop>
  42e808:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e80b:	c9                   	leaveq 
  42e80c:	c3                   	retq   

000000000042e80d <partition>:
  42e80d:	55                   	push   %rbp
  42e80e:	48 89 e5             	mov    %rsp,%rbp
  42e811:	48 83 ec 20          	sub    $0x20,%rsp
  42e815:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42e819:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42e81c:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42e81f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42e822:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42e825:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42e828:	83 e8 01             	sub    $0x1,%eax
  42e82b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42e82e:	eb 3b                	jmp    42e86b <partition+0x5e>
  42e830:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42e833:	83 e8 01             	sub    $0x1,%eax
  42e836:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  42e839:	0f 94 c0             	sete   %al
  42e83c:	0f b6 c0             	movzbl %al,%eax
  42e83f:	48 85 c0             	test   %rax,%rax
  42e842:	74 16                	je     42e85a <partition+0x4d>
  42e844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e848:	be 60 23 44 00       	mov    $0x442360,%esi
  42e84d:	48 89 c7             	mov    %rax,%rdi
  42e850:	b8 00 00 00 00       	mov    $0x0,%eax
  42e855:	e8 96 79 fd ff       	callq  4061f0 <luaL_error>
  42e85a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e85e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42e863:	48 89 c7             	mov    %rax,%rdi
  42e866:	e8 19 37 fd ff       	callq  401f84 <lua_settop>
  42e86b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42e86f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42e872:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e876:	be 01 00 00 00       	mov    $0x1,%esi
  42e87b:	48 89 c7             	mov    %rax,%rdi
  42e87e:	e8 6e 4c fd ff       	callq  4034f1 <lua_geti>
  42e883:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e887:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  42e88c:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42e891:	48 89 c7             	mov    %rax,%rdi
  42e894:	e8 ad fe ff ff       	callq  42e746 <sort_comp>
  42e899:	85 c0                	test   %eax,%eax
  42e89b:	75 93                	jne    42e830 <partition+0x23>
  42e89d:	eb 38                	jmp    42e8d7 <partition+0xca>
  42e89f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e8a2:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  42e8a5:	0f 92 c0             	setb   %al
  42e8a8:	0f b6 c0             	movzbl %al,%eax
  42e8ab:	48 85 c0             	test   %rax,%rax
  42e8ae:	74 16                	je     42e8c6 <partition+0xb9>
  42e8b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e8b4:	be 60 23 44 00       	mov    $0x442360,%esi
  42e8b9:	48 89 c7             	mov    %rax,%rdi
  42e8bc:	b8 00 00 00 00       	mov    $0x0,%eax
  42e8c1:	e8 2a 79 fd ff       	callq  4061f0 <luaL_error>
  42e8c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e8ca:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42e8cf:	48 89 c7             	mov    %rax,%rdi
  42e8d2:	e8 ad 36 fd ff       	callq  401f84 <lua_settop>
  42e8d7:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  42e8db:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42e8de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e8e2:	be 01 00 00 00       	mov    $0x1,%esi
  42e8e7:	48 89 c7             	mov    %rax,%rdi
  42e8ea:	e8 02 4c fd ff       	callq  4034f1 <lua_geti>
  42e8ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e8f3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  42e8f8:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  42e8fd:	48 89 c7             	mov    %rax,%rdi
  42e900:	e8 41 fe ff ff       	callq  42e746 <sort_comp>
  42e905:	85 c0                	test   %eax,%eax
  42e907:	75 96                	jne    42e89f <partition+0x92>
  42e909:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e90c:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  42e90f:	73 2d                	jae    42e93e <partition+0x131>
  42e911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e915:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42e91a:	48 89 c7             	mov    %rax,%rdi
  42e91d:	e8 62 36 fd ff       	callq  401f84 <lua_settop>
  42e922:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42e925:	8d 48 ff             	lea    -0x1(%rax),%ecx
  42e928:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42e92b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e92f:	89 ce                	mov    %ecx,%esi
  42e931:	48 89 c7             	mov    %rax,%rdi
  42e934:	e8 d0 fd ff ff       	callq  42e709 <set2>
  42e939:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e93c:	eb 19                	jmp    42e957 <partition+0x14a>
  42e93e:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42e941:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42e944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e948:	89 ce                	mov    %ecx,%esi
  42e94a:	48 89 c7             	mov    %rax,%rdi
  42e94d:	e8 b7 fd ff ff       	callq  42e709 <set2>
  42e952:	e9 14 ff ff ff       	jmpq   42e86b <partition+0x5e>
  42e957:	c9                   	leaveq 
  42e958:	c3                   	retq   

000000000042e959 <choosePivot>:
  42e959:	55                   	push   %rbp
  42e95a:	48 89 e5             	mov    %rsp,%rbp
  42e95d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  42e960:	89 75 e8             	mov    %esi,-0x18(%rbp)
  42e963:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  42e966:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42e969:	2b 45 ec             	sub    -0x14(%rbp),%eax
  42e96c:	c1 e8 02             	shr    $0x2,%eax
  42e96f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42e972:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e975:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
  42e978:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42e97b:	ba 00 00 00 00       	mov    $0x0,%edx
  42e980:	f7 f1                	div    %ecx
  42e982:	89 d1                	mov    %edx,%ecx
  42e984:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42e987:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42e98a:	01 d0                	add    %edx,%eax
  42e98c:	01 c8                	add    %ecx,%eax
  42e98e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42e991:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42e994:	5d                   	pop    %rbp
  42e995:	c3                   	retq   

000000000042e996 <auxsort>:
  42e996:	55                   	push   %rbp
  42e997:	48 89 e5             	mov    %rsp,%rbp
  42e99a:	48 83 ec 30          	sub    $0x30,%rsp
  42e99e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42e9a2:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42e9a5:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42e9a8:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  42e9ab:	e9 68 02 00 00       	jmpq   42ec18 <auxsort+0x282>
  42e9b0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42e9b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e9b7:	be 01 00 00 00       	mov    $0x1,%esi
  42e9bc:	48 89 c7             	mov    %rax,%rdi
  42e9bf:	e8 2d 4b fd ff       	callq  4034f1 <lua_geti>
  42e9c4:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42e9c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e9cb:	be 01 00 00 00       	mov    $0x1,%esi
  42e9d0:	48 89 c7             	mov    %rax,%rdi
  42e9d3:	e8 19 4b fd ff       	callq  4034f1 <lua_geti>
  42e9d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e9dc:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  42e9e1:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42e9e6:	48 89 c7             	mov    %rax,%rdi
  42e9e9:	e8 58 fd ff ff       	callq  42e746 <sort_comp>
  42e9ee:	85 c0                	test   %eax,%eax
  42e9f0:	74 16                	je     42ea08 <auxsort+0x72>
  42e9f2:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42e9f5:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  42e9f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42e9fc:	89 ce                	mov    %ecx,%esi
  42e9fe:	48 89 c7             	mov    %rax,%rdi
  42ea01:	e8 03 fd ff ff       	callq  42e709 <set2>
  42ea06:	eb 11                	jmp    42ea19 <auxsort+0x83>
  42ea08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ea0c:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  42ea11:	48 89 c7             	mov    %rax,%rdi
  42ea14:	e8 6b 35 fd ff       	callq  401f84 <lua_settop>
  42ea19:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ea1c:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42ea1f:	83 f8 01             	cmp    $0x1,%eax
  42ea22:	0f 84 fe 01 00 00    	je     42ec26 <auxsort+0x290>
  42ea28:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ea2b:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42ea2e:	83 f8 63             	cmp    $0x63,%eax
  42ea31:	76 06                	jbe    42ea39 <auxsort+0xa3>
  42ea33:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  42ea37:	75 0f                	jne    42ea48 <auxsort+0xb2>
  42ea39:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42ea3c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ea3f:	01 d0                	add    %edx,%eax
  42ea41:	d1 e8                	shr    %eax
  42ea43:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42ea46:	eb 15                	jmp    42ea5d <auxsort+0xc7>
  42ea48:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42ea4b:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  42ea4e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42ea51:	89 ce                	mov    %ecx,%esi
  42ea53:	89 c7                	mov    %eax,%edi
  42ea55:	e8 ff fe ff ff       	callq  42e959 <choosePivot>
  42ea5a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42ea5d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42ea60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ea64:	be 01 00 00 00       	mov    $0x1,%esi
  42ea69:	48 89 c7             	mov    %rax,%rdi
  42ea6c:	e8 80 4a fd ff       	callq  4034f1 <lua_geti>
  42ea71:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42ea74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ea78:	be 01 00 00 00       	mov    $0x1,%esi
  42ea7d:	48 89 c7             	mov    %rax,%rdi
  42ea80:	e8 6c 4a fd ff       	callq  4034f1 <lua_geti>
  42ea85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ea89:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  42ea8e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42ea93:	48 89 c7             	mov    %rax,%rdi
  42ea96:	e8 ab fc ff ff       	callq  42e746 <sort_comp>
  42ea9b:	85 c0                	test   %eax,%eax
  42ea9d:	74 16                	je     42eab5 <auxsort+0x11f>
  42ea9f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  42eaa2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42eaa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eaa9:	89 ce                	mov    %ecx,%esi
  42eaab:	48 89 c7             	mov    %rax,%rdi
  42eaae:	e8 56 fc ff ff       	callq  42e709 <set2>
  42eab3:	eb 66                	jmp    42eb1b <auxsort+0x185>
  42eab5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eab9:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42eabe:	48 89 c7             	mov    %rax,%rdi
  42eac1:	e8 be 34 fd ff       	callq  401f84 <lua_settop>
  42eac6:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42eac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eacd:	be 01 00 00 00       	mov    $0x1,%esi
  42ead2:	48 89 c7             	mov    %rax,%rdi
  42ead5:	e8 17 4a fd ff       	callq  4034f1 <lua_geti>
  42eada:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eade:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
  42eae3:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42eae8:	48 89 c7             	mov    %rax,%rdi
  42eaeb:	e8 56 fc ff ff       	callq  42e746 <sort_comp>
  42eaf0:	85 c0                	test   %eax,%eax
  42eaf2:	74 16                	je     42eb0a <auxsort+0x174>
  42eaf4:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42eaf7:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42eafa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eafe:	89 ce                	mov    %ecx,%esi
  42eb00:	48 89 c7             	mov    %rax,%rdi
  42eb03:	e8 01 fc ff ff       	callq  42e709 <set2>
  42eb08:	eb 11                	jmp    42eb1b <auxsort+0x185>
  42eb0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb0e:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  42eb13:	48 89 c7             	mov    %rax,%rdi
  42eb16:	e8 69 34 fd ff       	callq  401f84 <lua_settop>
  42eb1b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42eb1e:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42eb21:	83 f8 02             	cmp    $0x2,%eax
  42eb24:	0f 84 ff 00 00 00    	je     42ec29 <auxsort+0x293>
  42eb2a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42eb2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb31:	be 01 00 00 00       	mov    $0x1,%esi
  42eb36:	48 89 c7             	mov    %rax,%rdi
  42eb39:	e8 b3 49 fd ff       	callq  4034f1 <lua_geti>
  42eb3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb42:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42eb47:	48 89 c7             	mov    %rax,%rdi
  42eb4a:	e8 c0 37 fd ff       	callq  40230f <lua_pushvalue>
  42eb4f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42eb52:	83 e8 01             	sub    $0x1,%eax
  42eb55:	89 c2                	mov    %eax,%edx
  42eb57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb5b:	be 01 00 00 00       	mov    $0x1,%esi
  42eb60:	48 89 c7             	mov    %rax,%rdi
  42eb63:	e8 89 49 fd ff       	callq  4034f1 <lua_geti>
  42eb68:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42eb6b:	8d 50 ff             	lea    -0x1(%rax),%edx
  42eb6e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42eb71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb75:	89 ce                	mov    %ecx,%esi
  42eb77:	48 89 c7             	mov    %rax,%rdi
  42eb7a:	e8 8a fb ff ff       	callq  42e709 <set2>
  42eb7f:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42eb82:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  42eb85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eb89:	89 ce                	mov    %ecx,%esi
  42eb8b:	48 89 c7             	mov    %rax,%rdi
  42eb8e:	e8 7a fc ff ff       	callq  42e80d <partition>
  42eb93:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42eb96:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42eb99:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42eb9c:	89 c2                	mov    %eax,%edx
  42eb9e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42eba1:	2b 45 fc             	sub    -0x4(%rbp),%eax
  42eba4:	39 c2                	cmp    %eax,%edx
  42eba6:	73 30                	jae    42ebd8 <auxsort+0x242>
  42eba8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ebab:	8d 78 ff             	lea    -0x1(%rax),%edi
  42ebae:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42ebb1:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42ebb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ebb8:	89 d1                	mov    %edx,%ecx
  42ebba:	89 fa                	mov    %edi,%edx
  42ebbc:	48 89 c7             	mov    %rax,%rdi
  42ebbf:	e8 d2 fd ff ff       	callq  42e996 <auxsort>
  42ebc4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ebc7:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42ebca:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42ebcd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ebd0:	83 c0 01             	add    $0x1,%eax
  42ebd3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42ebd6:	eb 2a                	jmp    42ec02 <auxsort+0x26c>
  42ebd8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ebdb:	8d 70 01             	lea    0x1(%rax),%esi
  42ebde:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42ebe1:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42ebe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ebe8:	48 89 c7             	mov    %rax,%rdi
  42ebeb:	e8 a6 fd ff ff       	callq  42e996 <auxsort>
  42ebf0:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ebf3:	2b 45 fc             	sub    -0x4(%rbp),%eax
  42ebf6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42ebf9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ebfc:	83 e8 01             	sub    $0x1,%eax
  42ebff:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42ec02:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42ec05:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42ec08:	c1 e8 07             	shr    $0x7,%eax
  42ec0b:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  42ec0e:	73 08                	jae    42ec18 <auxsort+0x282>
  42ec10:	e8 95 fa ff ff       	callq  42e6aa <l_randomizePivot>
  42ec15:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42ec18:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42ec1b:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  42ec1e:	0f 82 8c fd ff ff    	jb     42e9b0 <auxsort+0x1a>
  42ec24:	eb 04                	jmp    42ec2a <auxsort+0x294>
  42ec26:	90                   	nop
  42ec27:	eb 01                	jmp    42ec2a <auxsort+0x294>
  42ec29:	90                   	nop
  42ec2a:	c9                   	leaveq 
  42ec2b:	c3                   	retq   

000000000042ec2c <sort>:
  42ec2c:	55                   	push   %rbp
  42ec2d:	48 89 e5             	mov    %rsp,%rbp
  42ec30:	48 83 ec 20          	sub    $0x20,%rsp
  42ec34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ec38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec3c:	ba 07 00 00 00       	mov    $0x7,%edx
  42ec41:	be 01 00 00 00       	mov    $0x1,%esi
  42ec46:	48 89 c7             	mov    %rax,%rdi
  42ec49:	e8 5e f1 ff ff       	callq  42ddac <checktab>
  42ec4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec52:	be 01 00 00 00       	mov    $0x1,%esi
  42ec57:	48 89 c7             	mov    %rax,%rdi
  42ec5a:	e8 fb 8b fd ff       	callq  40785a <luaL_len>
  42ec5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ec63:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
  42ec68:	0f 8e 84 00 00 00    	jle    42ecf2 <sort+0xc6>
  42ec6e:	48 81 7d f8 fe ff ff 	cmpq   $0x7ffffffe,-0x8(%rbp)
  42ec75:	7f 
  42ec76:	0f 9e c0             	setle  %al
  42ec79:	0f b6 c0             	movzbl %al,%eax
  42ec7c:	48 85 c0             	test   %rax,%rax
  42ec7f:	75 18                	jne    42ec99 <sort+0x6d>
  42ec81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec85:	ba 83 23 44 00       	mov    $0x442383,%edx
  42ec8a:	be 01 00 00 00       	mov    $0x1,%esi
  42ec8f:	48 89 c7             	mov    %rax,%rdi
  42ec92:	e8 5b 72 fd ff       	callq  405ef2 <luaL_argerror>
  42ec97:	85 c0                	test   %eax,%eax
  42ec99:	90                   	nop
  42ec9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec9e:	be 02 00 00 00       	mov    $0x2,%esi
  42eca3:	48 89 c7             	mov    %rax,%rdi
  42eca6:	e8 c8 36 fd ff       	callq  402373 <lua_type>
  42ecab:	85 c0                	test   %eax,%eax
  42ecad:	7e 16                	jle    42ecc5 <sort+0x99>
  42ecaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ecb3:	ba 06 00 00 00       	mov    $0x6,%edx
  42ecb8:	be 02 00 00 00       	mov    $0x2,%esi
  42ecbd:	48 89 c7             	mov    %rax,%rdi
  42ecc0:	e8 78 7a fd ff       	callq  40673d <luaL_checktype>
  42ecc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ecc9:	be 02 00 00 00       	mov    $0x2,%esi
  42ecce:	48 89 c7             	mov    %rax,%rdi
  42ecd1:	e8 ae 32 fd ff       	callq  401f84 <lua_settop>
  42ecd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ecda:	89 c2                	mov    %eax,%edx
  42ecdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ece0:	b9 00 00 00 00       	mov    $0x0,%ecx
  42ece5:	be 01 00 00 00       	mov    $0x1,%esi
  42ecea:	48 89 c7             	mov    %rax,%rdi
  42eced:	e8 a4 fc ff ff       	callq  42e996 <auxsort>
  42ecf2:	b8 00 00 00 00       	mov    $0x0,%eax
  42ecf7:	c9                   	leaveq 
  42ecf8:	c3                   	retq   

000000000042ecf9 <luaopen_table>:
  42ecf9:	55                   	push   %rbp
  42ecfa:	48 89 e5             	mov    %rsp,%rbp
  42ecfd:	48 83 ec 10          	sub    $0x10,%rsp
  42ed01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42ed05:	f2 0f 10 05 33 37 01 	movsd  0x13733(%rip),%xmm0        # 442440 <tab_funcs+0x80>
  42ed0c:	00 
  42ed0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ed11:	be 88 00 00 00       	mov    $0x88,%esi
  42ed16:	48 89 c7             	mov    %rax,%rdi
  42ed19:	e8 b3 94 fd ff       	callq  4081d1 <luaL_checkversion_>
  42ed1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ed22:	ba 07 00 00 00       	mov    $0x7,%edx
  42ed27:	be 00 00 00 00       	mov    $0x0,%esi
  42ed2c:	48 89 c7             	mov    %rax,%rdi
  42ed2f:	e8 e4 4a fd ff       	callq  403818 <lua_createtable>
  42ed34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ed38:	ba 00 00 00 00       	mov    $0x0,%edx
  42ed3d:	be c0 23 44 00       	mov    $0x4423c0,%esi
  42ed42:	48 89 c7             	mov    %rax,%rdi
  42ed45:	e8 e0 8d fd ff       	callq  407b2a <luaL_setfuncs>
  42ed4a:	b8 01 00 00 00       	mov    $0x1,%eax
  42ed4f:	c9                   	leaveq 
  42ed50:	c3                   	retq   

000000000042ed51 <luaT_init>:
  42ed51:	55                   	push   %rbp
  42ed52:	48 89 e5             	mov    %rsp,%rbp
  42ed55:	53                   	push   %rbx
  42ed56:	48 83 ec 28          	sub    $0x28,%rsp
  42ed5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42ed5e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  42ed65:	eb 62                	jmp    42edc9 <luaT_init+0x78>
  42ed67:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42ed6a:	48 98                	cltq   
  42ed6c:	48 8b 14 c5 a0 2a 44 	mov    0x442aa0(,%rax,8),%rdx
  42ed73:	00 
  42ed74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ed78:	48 8b 58 18          	mov    0x18(%rax),%rbx
  42ed7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ed80:	48 89 d6             	mov    %rdx,%rsi
  42ed83:	48 89 c7             	mov    %rax,%rdi
  42ed86:	e8 21 83 ff ff       	callq  4270ac <luaS_new>
  42ed8b:	48 89 c2             	mov    %rax,%rdx
  42ed8e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42ed91:	48 98                	cltq   
  42ed93:	48 83 c0 22          	add    $0x22,%rax
  42ed97:	48 89 54 c3 08       	mov    %rdx,0x8(%rbx,%rax,8)
  42ed9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42eda0:	48 8b 40 18          	mov    0x18(%rax),%rax
  42eda4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  42eda7:	48 63 d2             	movslq %edx,%rdx
  42edaa:	48 83 c2 22          	add    $0x22,%rdx
  42edae:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
  42edb3:	48 89 c2             	mov    %rax,%rdx
  42edb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42edba:	48 89 d6             	mov    %rdx,%rsi
  42edbd:	48 89 c7             	mov    %rax,%rdi
  42edc0:	e8 c9 5d fe ff       	callq  414b8e <luaC_fix>
  42edc5:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  42edc9:	83 7d ec 18          	cmpl   $0x18,-0x14(%rbp)
  42edcd:	7e 98                	jle    42ed67 <luaT_init+0x16>
  42edcf:	90                   	nop
  42edd0:	48 83 c4 28          	add    $0x28,%rsp
  42edd4:	5b                   	pop    %rbx
  42edd5:	5d                   	pop    %rbp
  42edd6:	c3                   	retq   

000000000042edd7 <luaT_gettm>:
  42edd7:	55                   	push   %rbp
  42edd8:	48 89 e5             	mov    %rsp,%rbp
  42eddb:	48 83 ec 30          	sub    $0x30,%rsp
  42eddf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ede3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42ede6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42edea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42edee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42edf2:	48 89 d6             	mov    %rdx,%rsi
  42edf5:	48 89 c7             	mov    %rax,%rdi
  42edf8:	e8 b9 e8 ff ff       	callq  42d6b6 <luaH_getshortstr>
  42edfd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ee01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ee05:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ee09:	0f b6 c0             	movzbl %al,%eax
  42ee0c:	83 e0 0f             	and    $0xf,%eax
  42ee0f:	85 c0                	test   %eax,%eax
  42ee11:	75 26                	jne    42ee39 <luaT_gettm+0x62>
  42ee13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ee17:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
  42ee1b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42ee1e:	be 01 00 00 00       	mov    $0x1,%esi
  42ee23:	89 c1                	mov    %eax,%ecx
  42ee25:	d3 e6                	shl    %cl,%esi
  42ee27:	89 f0                	mov    %esi,%eax
  42ee29:	09 c2                	or     %eax,%edx
  42ee2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ee2f:	88 50 0a             	mov    %dl,0xa(%rax)
  42ee32:	b8 00 00 00 00       	mov    $0x0,%eax
  42ee37:	eb 04                	jmp    42ee3d <luaT_gettm+0x66>
  42ee39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ee3d:	c9                   	leaveq 
  42ee3e:	c3                   	retq   

000000000042ee3f <luaT_gettmbyobj>:
  42ee3f:	55                   	push   %rbp
  42ee40:	48 89 e5             	mov    %rsp,%rbp
  42ee43:	48 83 ec 30          	sub    $0x30,%rsp
  42ee47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ee4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42ee4f:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42ee52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ee56:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ee5a:	0f b6 c0             	movzbl %al,%eax
  42ee5d:	83 e0 0f             	and    $0xf,%eax
  42ee60:	83 f8 05             	cmp    $0x5,%eax
  42ee63:	74 07                	je     42ee6c <luaT_gettmbyobj+0x2d>
  42ee65:	83 f8 07             	cmp    $0x7,%eax
  42ee68:	74 13                	je     42ee7d <luaT_gettmbyobj+0x3e>
  42ee6a:	eb 22                	jmp    42ee8e <luaT_gettmbyobj+0x4f>
  42ee6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ee70:	48 8b 00             	mov    (%rax),%rax
  42ee73:	48 8b 40 28          	mov    0x28(%rax),%rax
  42ee77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ee7b:	eb 36                	jmp    42eeb3 <luaT_gettmbyobj+0x74>
  42ee7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ee81:	48 8b 00             	mov    (%rax),%rax
  42ee84:	48 8b 40 18          	mov    0x18(%rax),%rax
  42ee88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ee8c:	eb 25                	jmp    42eeb3 <luaT_gettmbyobj+0x74>
  42ee8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ee92:	48 8b 40 18          	mov    0x18(%rax),%rax
  42ee96:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42ee9a:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
  42ee9e:	0f b6 d2             	movzbl %dl,%edx
  42eea1:	83 e2 0f             	and    $0xf,%edx
  42eea4:	48 63 d2             	movslq %edx,%rdx
  42eea7:	48 83 c2 3c          	add    $0x3c,%rdx
  42eeab:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  42eeaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42eeb3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42eeb8:	74 25                	je     42eedf <luaT_gettmbyobj+0xa0>
  42eeba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eebe:	48 8b 40 18          	mov    0x18(%rax),%rax
  42eec2:	8b 55 dc             	mov    -0x24(%rbp),%edx
  42eec5:	48 83 c2 22          	add    $0x22,%rdx
  42eec9:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
  42eece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42eed2:	48 89 d6             	mov    %rdx,%rsi
  42eed5:	48 89 c7             	mov    %rax,%rdi
  42eed8:	e8 d9 e7 ff ff       	callq  42d6b6 <luaH_getshortstr>
  42eedd:	eb 0c                	jmp    42eeeb <luaT_gettmbyobj+0xac>
  42eedf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42eee3:	48 8b 40 18          	mov    0x18(%rax),%rax
  42eee7:	48 83 c0 50          	add    $0x50,%rax
  42eeeb:	c9                   	leaveq 
  42eeec:	c3                   	retq   

000000000042eeed <luaT_objtypename>:
  42eeed:	55                   	push   %rbp
  42eeee:	48 89 e5             	mov    %rsp,%rbp
  42eef1:	48 83 ec 20          	sub    $0x20,%rsp
  42eef5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42eef9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42eefd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ef01:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ef05:	3c 45                	cmp    $0x45,%al
  42ef07:	75 16                	jne    42ef1f <luaT_objtypename+0x32>
  42ef09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ef0d:	48 8b 00             	mov    (%rax),%rax
  42ef10:	48 8b 40 28          	mov    0x28(%rax),%rax
  42ef14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ef18:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42ef1d:	75 22                	jne    42ef41 <luaT_objtypename+0x54>
  42ef1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ef23:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ef27:	3c 47                	cmp    $0x47,%al
  42ef29:	75 5d                	jne    42ef88 <luaT_objtypename+0x9b>
  42ef2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ef2f:	48 8b 00             	mov    (%rax),%rax
  42ef32:	48 8b 40 18          	mov    0x18(%rax),%rax
  42ef36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ef3a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42ef3f:	74 47                	je     42ef88 <luaT_objtypename+0x9b>
  42ef41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ef45:	be c0 29 44 00       	mov    $0x4429c0,%esi
  42ef4a:	48 89 c7             	mov    %rax,%rdi
  42ef4d:	e8 5a 81 ff ff       	callq  4270ac <luaS_new>
  42ef52:	48 89 c2             	mov    %rax,%rdx
  42ef55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef59:	48 89 d6             	mov    %rdx,%rsi
  42ef5c:	48 89 c7             	mov    %rax,%rdi
  42ef5f:	e8 52 e7 ff ff       	callq  42d6b6 <luaH_getshortstr>
  42ef64:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ef68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ef6c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ef70:	0f b6 c0             	movzbl %al,%eax
  42ef73:	83 e0 0f             	and    $0xf,%eax
  42ef76:	83 f8 04             	cmp    $0x4,%eax
  42ef79:	75 0d                	jne    42ef88 <luaT_objtypename+0x9b>
  42ef7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ef7f:	48 8b 00             	mov    (%rax),%rax
  42ef82:	48 83 c0 18          	add    $0x18,%rax
  42ef86:	eb 1b                	jmp    42efa3 <luaT_objtypename+0xb6>
  42ef88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ef8c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42ef90:	0f b6 c0             	movzbl %al,%eax
  42ef93:	83 e0 0f             	and    $0xf,%eax
  42ef96:	83 c0 01             	add    $0x1,%eax
  42ef99:	48 98                	cltq   
  42ef9b:	48 8b 04 c5 60 29 44 	mov    0x442960(,%rax,8),%rax
  42efa2:	00 
  42efa3:	c9                   	leaveq 
  42efa4:	c3                   	retq   

000000000042efa5 <luaT_callTM>:
  42efa5:	55                   	push   %rbp
  42efa6:	48 89 e5             	mov    %rsp,%rbp
  42efa9:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  42efad:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  42efb1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  42efb5:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  42efb9:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  42efbd:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  42efc1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42efc5:	48 8b 40 10          	mov    0x10(%rax),%rax
  42efc9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42efcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42efd1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42efd5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42efd9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42efdd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42efe1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42efe5:	48 8b 12             	mov    (%rdx),%rdx
  42efe8:	48 89 10             	mov    %rdx,(%rax)
  42efeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42efef:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42eff3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eff7:	88 50 08             	mov    %dl,0x8(%rax)
  42effa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42effe:	48 83 c0 10          	add    $0x10,%rax
  42f002:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f006:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42f00a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42f00e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f012:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42f016:	48 8b 12             	mov    (%rdx),%rdx
  42f019:	48 89 10             	mov    %rdx,(%rax)
  42f01c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f020:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f028:	88 50 08             	mov    %dl,0x8(%rax)
  42f02b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f02f:	48 83 c0 20          	add    $0x20,%rax
  42f033:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42f037:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42f03b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f03f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f043:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f047:	48 8b 12             	mov    (%rdx),%rdx
  42f04a:	48 89 10             	mov    %rdx,(%rax)
  42f04d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f051:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f055:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f059:	88 50 08             	mov    %dl,0x8(%rax)
  42f05c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f060:	48 83 c0 30          	add    $0x30,%rax
  42f064:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42f068:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42f06c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42f070:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42f074:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  42f078:	48 8b 12             	mov    (%rdx),%rdx
  42f07b:	48 89 10             	mov    %rdx,(%rax)
  42f07e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f082:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f086:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42f08a:	88 50 08             	mov    %dl,0x8(%rax)
  42f08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f091:	48 8d 50 40          	lea    0x40(%rax),%rdx
  42f095:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f099:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42f09d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f0a1:	48 8b 40 20          	mov    0x20(%rax),%rax
  42f0a5:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  42f0a9:	0f b7 c0             	movzwl %ax,%eax
  42f0ac:	83 e0 0a             	and    $0xa,%eax
  42f0af:	85 c0                	test   %eax,%eax
  42f0b1:	75 1a                	jne    42f0cd <luaT_callTM+0x128>
  42f0b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42f0b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f0bb:	ba 00 00 00 00       	mov    $0x0,%edx
  42f0c0:	48 89 ce             	mov    %rcx,%rsi
  42f0c3:	48 89 c7             	mov    %rax,%rdi
  42f0c6:	e8 fe 37 fe ff       	callq  4128c9 <luaD_call>
  42f0cb:	eb 18                	jmp    42f0e5 <luaT_callTM+0x140>
  42f0cd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42f0d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f0d5:	ba 00 00 00 00       	mov    $0x0,%edx
  42f0da:	48 89 ce             	mov    %rcx,%rsi
  42f0dd:	48 89 c7             	mov    %rax,%rdi
  42f0e0:	e8 12 38 fe ff       	callq  4128f7 <luaD_callnoyield>
  42f0e5:	90                   	nop
  42f0e6:	c9                   	leaveq 
  42f0e7:	c3                   	retq   

000000000042f0e8 <luaT_callTMres>:
  42f0e8:	55                   	push   %rbp
  42f0e9:	48 89 e5             	mov    %rsp,%rbp
  42f0ec:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  42f0f0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  42f0f4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  42f0f8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  42f0fc:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  42f100:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  42f104:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f108:	48 8b 40 30          	mov    0x30(%rax),%rax
  42f10c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  42f110:	48 29 c2             	sub    %rax,%rdx
  42f113:	48 89 d0             	mov    %rdx,%rax
  42f116:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f11a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f11e:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f122:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f126:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f12a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f12e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42f132:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f13a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42f13e:	48 8b 12             	mov    (%rdx),%rdx
  42f141:	48 89 10             	mov    %rdx,(%rax)
  42f144:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f148:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f14c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f150:	88 50 08             	mov    %dl,0x8(%rax)
  42f153:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f157:	48 83 c0 10          	add    $0x10,%rax
  42f15b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42f15f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42f163:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42f167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f16b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42f16f:	48 8b 12             	mov    (%rdx),%rdx
  42f172:	48 89 10             	mov    %rdx,(%rax)
  42f175:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f179:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f17d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f181:	88 50 08             	mov    %dl,0x8(%rax)
  42f184:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f188:	48 83 c0 20          	add    $0x20,%rax
  42f18c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f190:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42f194:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42f198:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f19c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42f1a0:	48 8b 12             	mov    (%rdx),%rdx
  42f1a3:	48 89 10             	mov    %rdx,(%rax)
  42f1a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42f1aa:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f1ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f1b2:	88 50 08             	mov    %dl,0x8(%rax)
  42f1b5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f1b9:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f1bd:	48 8d 50 30          	lea    0x30(%rax),%rdx
  42f1c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f1c5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42f1c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f1cd:	48 8b 40 20          	mov    0x20(%rax),%rax
  42f1d1:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  42f1d5:	0f b7 c0             	movzwl %ax,%eax
  42f1d8:	83 e0 0a             	and    $0xa,%eax
  42f1db:	85 c0                	test   %eax,%eax
  42f1dd:	75 1a                	jne    42f1f9 <luaT_callTMres+0x111>
  42f1df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f1e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f1e7:	ba 01 00 00 00       	mov    $0x1,%edx
  42f1ec:	48 89 ce             	mov    %rcx,%rsi
  42f1ef:	48 89 c7             	mov    %rax,%rdi
  42f1f2:	e8 d2 36 fe ff       	callq  4128c9 <luaD_call>
  42f1f7:	eb 18                	jmp    42f211 <luaT_callTMres+0x129>
  42f1f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f1fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f201:	ba 01 00 00 00       	mov    $0x1,%edx
  42f206:	48 89 ce             	mov    %rcx,%rsi
  42f209:	48 89 c7             	mov    %rax,%rdi
  42f20c:	e8 e6 36 fe ff       	callq  4128f7 <luaD_callnoyield>
  42f211:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f215:	48 8b 50 30          	mov    0x30(%rax),%rdx
  42f219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f21d:	48 01 d0             	add    %rdx,%rax
  42f220:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  42f224:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42f228:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42f22c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f230:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f234:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  42f238:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f23c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42f240:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42f244:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f248:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42f24c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f250:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  42f254:	48 8b 12             	mov    (%rdx),%rdx
  42f257:	48 89 10             	mov    %rdx,(%rax)
  42f25a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42f25e:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f262:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f266:	88 50 08             	mov    %dl,0x8(%rax)
  42f269:	90                   	nop
  42f26a:	c9                   	leaveq 
  42f26b:	c3                   	retq   

000000000042f26c <callbinTM>:
  42f26c:	55                   	push   %rbp
  42f26d:	48 89 e5             	mov    %rsp,%rbp
  42f270:	48 83 ec 40          	sub    $0x40,%rsp
  42f274:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42f278:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42f27c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42f280:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42f284:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
  42f288:	8b 55 cc             	mov    -0x34(%rbp),%edx
  42f28b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42f28f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f293:	48 89 ce             	mov    %rcx,%rsi
  42f296:	48 89 c7             	mov    %rax,%rdi
  42f299:	e8 a1 fb ff ff       	callq  42ee3f <luaT_gettmbyobj>
  42f29e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f2a6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f2aa:	0f b6 c0             	movzbl %al,%eax
  42f2ad:	83 e0 0f             	and    $0xf,%eax
  42f2b0:	85 c0                	test   %eax,%eax
  42f2b2:	75 1a                	jne    42f2ce <callbinTM+0x62>
  42f2b4:	8b 55 cc             	mov    -0x34(%rbp),%edx
  42f2b7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f2bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f2bf:	48 89 ce             	mov    %rcx,%rsi
  42f2c2:	48 89 c7             	mov    %rax,%rdi
  42f2c5:	e8 75 fb ff ff       	callq  42ee3f <luaT_gettmbyobj>
  42f2ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f2d2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f2d6:	0f b6 c0             	movzbl %al,%eax
  42f2d9:	83 e0 0f             	and    $0xf,%eax
  42f2dc:	85 c0                	test   %eax,%eax
  42f2de:	75 07                	jne    42f2e7 <callbinTM+0x7b>
  42f2e0:	b8 00 00 00 00       	mov    $0x0,%eax
  42f2e5:	eb 24                	jmp    42f30b <callbinTM+0x9f>
  42f2e7:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42f2eb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f2ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42f2f3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42f2f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f2fb:	49 89 f8             	mov    %rdi,%r8
  42f2fe:	48 89 c7             	mov    %rax,%rdi
  42f301:	e8 e2 fd ff ff       	callq  42f0e8 <luaT_callTMres>
  42f306:	b8 01 00 00 00       	mov    $0x1,%eax
  42f30b:	c9                   	leaveq 
  42f30c:	c3                   	retq   

000000000042f30d <luaT_trybinTM>:
  42f30d:	55                   	push   %rbp
  42f30e:	48 89 e5             	mov    %rsp,%rbp
  42f311:	48 83 ec 30          	sub    $0x30,%rsp
  42f315:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f319:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42f31d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42f321:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  42f325:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  42f329:	8b 7d dc             	mov    -0x24(%rbp),%edi
  42f32c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42f330:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f334:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42f338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f33c:	41 89 f8             	mov    %edi,%r8d
  42f33f:	48 89 c7             	mov    %rax,%rdi
  42f342:	e8 25 ff ff ff       	callq  42f26c <callbinTM>
  42f347:	85 c0                	test   %eax,%eax
  42f349:	0f 94 c0             	sete   %al
  42f34c:	0f b6 c0             	movzbl %al,%eax
  42f34f:	48 85 c0             	test   %rax,%rax
  42f352:	0f 84 81 00 00 00    	je     42f3d9 <luaT_trybinTM+0xcc>
  42f358:	83 7d dc 0d          	cmpl   $0xd,-0x24(%rbp)
  42f35c:	72 62                	jb     42f3c0 <luaT_trybinTM+0xb3>
  42f35e:	83 7d dc 11          	cmpl   $0x11,-0x24(%rbp)
  42f362:	76 06                	jbe    42f36a <luaT_trybinTM+0x5d>
  42f364:	83 7d dc 13          	cmpl   $0x13,-0x24(%rbp)
  42f368:	75 56                	jne    42f3c0 <luaT_trybinTM+0xb3>
  42f36a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f36e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f372:	0f b6 c0             	movzbl %al,%eax
  42f375:	83 e0 0f             	and    $0xf,%eax
  42f378:	83 f8 03             	cmp    $0x3,%eax
  42f37b:	75 2a                	jne    42f3a7 <luaT_trybinTM+0x9a>
  42f37d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f381:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f385:	0f b6 c0             	movzbl %al,%eax
  42f388:	83 e0 0f             	and    $0xf,%eax
  42f38b:	83 f8 03             	cmp    $0x3,%eax
  42f38e:	75 17                	jne    42f3a7 <luaT_trybinTM+0x9a>
  42f390:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f394:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f39c:	48 89 ce             	mov    %rcx,%rsi
  42f39f:	48 89 c7             	mov    %rax,%rdi
  42f3a2:	e8 6a 15 fe ff       	callq  410911 <luaG_tointerror>
  42f3a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f3ab:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42f3af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f3b3:	b9 c7 29 44 00       	mov    $0x4429c7,%ecx
  42f3b8:	48 89 c7             	mov    %rax,%rdi
  42f3bb:	e8 07 15 fe ff       	callq  4108c7 <luaG_opinterror>
  42f3c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f3c4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42f3c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f3cc:	b9 e4 29 44 00       	mov    $0x4429e4,%ecx
  42f3d1:	48 89 c7             	mov    %rax,%rdi
  42f3d4:	e8 ee 14 fe ff       	callq  4108c7 <luaG_opinterror>
  42f3d9:	90                   	nop
  42f3da:	c9                   	leaveq 
  42f3db:	c3                   	retq   

000000000042f3dc <luaT_tryconcatTM>:
  42f3dc:	55                   	push   %rbp
  42f3dd:	48 89 e5             	mov    %rsp,%rbp
  42f3e0:	48 83 ec 20          	sub    $0x20,%rsp
  42f3e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42f3e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f3ec:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f3f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f3f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f3f8:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
  42f3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f400:	48 83 e8 10          	sub    $0x10,%rax
  42f404:	48 89 c7             	mov    %rax,%rdi
  42f407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f40b:	48 83 e8 20          	sub    $0x20,%rax
  42f40f:	48 89 c6             	mov    %rax,%rsi
  42f412:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f416:	41 b8 16 00 00 00    	mov    $0x16,%r8d
  42f41c:	48 89 d1             	mov    %rdx,%rcx
  42f41f:	48 89 fa             	mov    %rdi,%rdx
  42f422:	48 89 c7             	mov    %rax,%rdi
  42f425:	e8 42 fe ff ff       	callq  42f26c <callbinTM>
  42f42a:	85 c0                	test   %eax,%eax
  42f42c:	0f 94 c0             	sete   %al
  42f42f:	0f b6 c0             	movzbl %al,%eax
  42f432:	48 85 c0             	test   %rax,%rax
  42f435:	74 25                	je     42f45c <luaT_tryconcatTM+0x80>
  42f437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f43b:	48 83 e8 10          	sub    $0x10,%rax
  42f43f:	48 89 c2             	mov    %rax,%rdx
  42f442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f446:	48 83 e8 20          	sub    $0x20,%rax
  42f44a:	48 89 c1             	mov    %rax,%rcx
  42f44d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f451:	48 89 ce             	mov    %rcx,%rsi
  42f454:	48 89 c7             	mov    %rax,%rdi
  42f457:	e8 11 14 fe ff       	callq  41086d <luaG_concaterror>
  42f45c:	90                   	nop
  42f45d:	c9                   	leaveq 
  42f45e:	c3                   	retq   

000000000042f45f <luaT_trybinassocTM>:
  42f45f:	55                   	push   %rbp
  42f460:	48 89 e5             	mov    %rsp,%rbp
  42f463:	48 83 ec 30          	sub    $0x30,%rsp
  42f467:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f46b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42f46f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42f473:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  42f476:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  42f47a:	44 89 4d e0          	mov    %r9d,-0x20(%rbp)
  42f47e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  42f482:	74 20                	je     42f4a4 <luaT_trybinassocTM+0x45>
  42f484:	8b 7d e0             	mov    -0x20(%rbp),%edi
  42f487:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f48b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42f48f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42f493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f497:	41 89 f8             	mov    %edi,%r8d
  42f49a:	48 89 c7             	mov    %rax,%rdi
  42f49d:	e8 6b fe ff ff       	callq  42f30d <luaT_trybinTM>
  42f4a2:	eb 1e                	jmp    42f4c2 <luaT_trybinassocTM+0x63>
  42f4a4:	8b 7d e0             	mov    -0x20(%rbp),%edi
  42f4a7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f4ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f4af:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42f4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f4b7:	41 89 f8             	mov    %edi,%r8d
  42f4ba:	48 89 c7             	mov    %rax,%rdi
  42f4bd:	e8 4b fe ff ff       	callq  42f30d <luaT_trybinTM>
  42f4c2:	90                   	nop
  42f4c3:	c9                   	leaveq 
  42f4c4:	c3                   	retq   

000000000042f4c5 <luaT_trybiniTM>:
  42f4c5:	55                   	push   %rbp
  42f4c6:	48 89 e5             	mov    %rsp,%rbp
  42f4c9:	48 83 ec 50          	sub    $0x50,%rsp
  42f4cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42f4d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42f4d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42f4d9:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  42f4dc:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  42f4e0:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
  42f4e4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  42f4e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f4f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f4f4:	48 89 10             	mov    %rdx,(%rax)
  42f4f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f4fb:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42f4ff:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
  42f503:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  42f507:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  42f50a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  42f50e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42f512:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f516:	45 89 c1             	mov    %r8d,%r9d
  42f519:	49 89 f8             	mov    %rdi,%r8
  42f51c:	48 89 c7             	mov    %rax,%rdi
  42f51f:	e8 3b ff ff ff       	callq  42f45f <luaT_trybinassocTM>
  42f524:	90                   	nop
  42f525:	c9                   	leaveq 
  42f526:	c3                   	retq   

000000000042f527 <luaT_callorderTM>:
  42f527:	55                   	push   %rbp
  42f528:	48 89 e5             	mov    %rsp,%rbp
  42f52b:	48 83 ec 20          	sub    $0x20,%rsp
  42f52f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f533:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42f537:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42f53b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  42f53e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f542:	48 8b 48 10          	mov    0x10(%rax),%rcx
  42f546:	8b 7d e4             	mov    -0x1c(%rbp),%edi
  42f549:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f54d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42f551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f555:	41 89 f8             	mov    %edi,%r8d
  42f558:	48 89 c7             	mov    %rax,%rdi
  42f55b:	e8 0c fd ff ff       	callq  42f26c <callbinTM>
  42f560:	85 c0                	test   %eax,%eax
  42f562:	74 34                	je     42f598 <luaT_callorderTM+0x71>
  42f564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f568:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f56c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f570:	3c 01                	cmp    $0x1,%al
  42f572:	74 1d                	je     42f591 <luaT_callorderTM+0x6a>
  42f574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f578:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f57c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  42f580:	0f b6 c0             	movzbl %al,%eax
  42f583:	83 e0 0f             	and    $0xf,%eax
  42f586:	85 c0                	test   %eax,%eax
  42f588:	74 07                	je     42f591 <luaT_callorderTM+0x6a>
  42f58a:	b8 01 00 00 00       	mov    $0x1,%eax
  42f58f:	eb 1e                	jmp    42f5af <luaT_callorderTM+0x88>
  42f591:	b8 00 00 00 00       	mov    $0x0,%eax
  42f596:	eb 17                	jmp    42f5af <luaT_callorderTM+0x88>
  42f598:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f59c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f5a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f5a4:	48 89 ce             	mov    %rcx,%rsi
  42f5a7:	48 89 c7             	mov    %rax,%rdi
  42f5aa:	e8 c6 13 fe ff       	callq  410975 <luaG_ordererror>
  42f5af:	c9                   	leaveq 
  42f5b0:	c3                   	retq   

000000000042f5b1 <luaT_callorderiTM>:
  42f5b1:	55                   	push   %rbp
  42f5b2:	48 89 e5             	mov    %rsp,%rbp
  42f5b5:	48 83 ec 50          	sub    $0x50,%rsp
  42f5b9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42f5bd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  42f5c1:	89 55 bc             	mov    %edx,-0x44(%rbp)
  42f5c4:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  42f5c7:	44 89 45 b4          	mov    %r8d,-0x4c(%rbp)
  42f5cb:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
  42f5cf:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  42f5d3:	74 1f                	je     42f5f4 <luaT_callorderiTM+0x43>
  42f5d5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42f5d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f5dd:	f2 0f 2a 45 bc       	cvtsi2sdl -0x44(%rbp),%xmm0
  42f5e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f5e6:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  42f5ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f5ee:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  42f5f2:	eb 1d                	jmp    42f611 <luaT_callorderiTM+0x60>
  42f5f4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42f5f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f5fc:	8b 45 bc             	mov    -0x44(%rbp),%eax
  42f5ff:	48 63 d0             	movslq %eax,%rdx
  42f602:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f606:	48 89 10             	mov    %rdx,(%rax)
  42f609:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f60d:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  42f611:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
  42f615:	74 12                	je     42f629 <luaT_callorderiTM+0x78>
  42f617:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42f61b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f61f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42f623:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42f627:	eb 08                	jmp    42f631 <luaT_callorderiTM+0x80>
  42f629:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  42f62d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f631:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  42f634:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42f638:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  42f63c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f640:	48 89 c7             	mov    %rax,%rdi
  42f643:	e8 df fe ff ff       	callq  42f527 <luaT_callorderTM>
  42f648:	c9                   	leaveq 
  42f649:	c3                   	retq   

000000000042f64a <luaT_adjustvarargs>:
  42f64a:	55                   	push   %rbp
  42f64b:	48 89 e5             	mov    %rsp,%rbp
  42f64e:	48 83 ec 50          	sub    $0x50,%rsp
  42f652:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42f656:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  42f659:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  42f65d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  42f661:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f665:	48 8b 50 10          	mov    0x10(%rax),%rdx
  42f669:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f66d:	48 8b 00             	mov    (%rax),%rax
  42f670:	48 29 c2             	sub    %rax,%rdx
  42f673:	48 89 d0             	mov    %rdx,%rax
  42f676:	48 c1 f8 04          	sar    $0x4,%rax
  42f67a:	83 e8 01             	sub    $0x1,%eax
  42f67d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42f680:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42f683:	2b 45 c4             	sub    -0x3c(%rbp),%eax
  42f686:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42f689:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f68d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42f690:	89 50 2c             	mov    %edx,0x2c(%rax)
  42f693:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f697:	48 8b 50 28          	mov    0x28(%rax),%rdx
  42f69b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f69f:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f6a3:	48 29 c2             	sub    %rax,%rdx
  42f6a6:	48 89 d0             	mov    %rdx,%rax
  42f6a9:	48 c1 f8 04          	sar    $0x4,%rax
  42f6ad:	48 89 c2             	mov    %rax,%rdx
  42f6b0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42f6b4:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  42f6b8:	0f b6 c0             	movzbl %al,%eax
  42f6bb:	83 c0 01             	add    $0x1,%eax
  42f6be:	48 98                	cltq   
  42f6c0:	48 39 c2             	cmp    %rax,%rdx
  42f6c3:	0f 9e c0             	setle  %al
  42f6c6:	0f b6 c0             	movzbl %al,%eax
  42f6c9:	48 85 c0             	test   %rax,%rax
  42f6cc:	74 21                	je     42f6ef <luaT_adjustvarargs+0xa5>
  42f6ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42f6d2:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  42f6d6:	0f b6 c0             	movzbl %al,%eax
  42f6d9:	8d 48 01             	lea    0x1(%rax),%ecx
  42f6dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f6e0:	ba 01 00 00 00       	mov    $0x1,%edx
  42f6e5:	89 ce                	mov    %ecx,%esi
  42f6e7:	48 89 c7             	mov    %rax,%rdi
  42f6ea:	e8 4b 1f fe ff       	callq  41163a <luaD_growstack>
  42f6ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f6f3:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f6f7:	48 8d 48 10          	lea    0x10(%rax),%rcx
  42f6fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f6ff:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  42f703:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f707:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f70b:	48 8b 00             	mov    (%rax),%rax
  42f70e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f716:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42f71a:	48 8b 12             	mov    (%rdx),%rdx
  42f71d:	48 89 10             	mov    %rdx,(%rax)
  42f720:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f724:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f728:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f72c:	88 50 08             	mov    %dl,0x8(%rax)
  42f72f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42f736:	eb 69                	jmp    42f7a1 <luaT_adjustvarargs+0x157>
  42f738:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f73c:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f740:	48 8d 48 10          	lea    0x10(%rax),%rcx
  42f744:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f748:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  42f74c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42f750:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f754:	48 8b 00             	mov    (%rax),%rax
  42f757:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42f75a:	48 63 d2             	movslq %edx,%rdx
  42f75d:	48 c1 e2 04          	shl    $0x4,%rdx
  42f761:	48 01 d0             	add    %rdx,%rax
  42f764:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42f768:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f76c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42f770:	48 8b 12             	mov    (%rdx),%rdx
  42f773:	48 89 10             	mov    %rdx,(%rax)
  42f776:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f77a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f77e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f782:	88 50 08             	mov    %dl,0x8(%rax)
  42f785:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f789:	48 8b 00             	mov    (%rax),%rax
  42f78c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42f78f:	48 63 d2             	movslq %edx,%rdx
  42f792:	48 c1 e2 04          	shl    $0x4,%rdx
  42f796:	48 01 d0             	add    %rdx,%rax
  42f799:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  42f79d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42f7a1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f7a4:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  42f7a7:	7e 8f                	jle    42f738 <luaT_adjustvarargs+0xee>
  42f7a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f7ad:	48 8b 00             	mov    (%rax),%rax
  42f7b0:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42f7b3:	48 63 d2             	movslq %edx,%rdx
  42f7b6:	48 83 c2 01          	add    $0x1,%rdx
  42f7ba:	48 c1 e2 04          	shl    $0x4,%rdx
  42f7be:	48 01 c2             	add    %rax,%rdx
  42f7c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f7c5:	48 89 10             	mov    %rdx,(%rax)
  42f7c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f7cc:	48 8b 40 08          	mov    0x8(%rax),%rax
  42f7d0:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42f7d3:	48 63 d2             	movslq %edx,%rdx
  42f7d6:	48 83 c2 01          	add    $0x1,%rdx
  42f7da:	48 c1 e2 04          	shl    $0x4,%rdx
  42f7de:	48 01 c2             	add    %rax,%rdx
  42f7e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f7e5:	48 89 50 08          	mov    %rdx,0x8(%rax)
  42f7e9:	90                   	nop
  42f7ea:	c9                   	leaveq 
  42f7eb:	c3                   	retq   

000000000042f7ec <luaT_getvarargs>:
  42f7ec:	55                   	push   %rbp
  42f7ed:	48 89 e5             	mov    %rsp,%rbp
  42f7f0:	48 83 ec 40          	sub    $0x40,%rsp
  42f7f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42f7f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  42f7fc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42f800:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  42f803:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f807:	8b 40 2c             	mov    0x2c(%rax),%eax
  42f80a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42f80d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  42f811:	0f 89 ad 00 00 00    	jns    42f8c4 <luaT_getvarargs+0xd8>
  42f817:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42f81a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42f81d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f821:	48 8b 50 28          	mov    0x28(%rax),%rdx
  42f825:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f829:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f82d:	48 29 c2             	sub    %rax,%rdx
  42f830:	48 89 d0             	mov    %rdx,%rax
  42f833:	48 c1 f8 04          	sar    $0x4,%rax
  42f837:	48 89 c2             	mov    %rax,%rdx
  42f83a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42f83d:	48 98                	cltq   
  42f83f:	48 39 c2             	cmp    %rax,%rdx
  42f842:	0f 9e c0             	setle  %al
  42f845:	0f b6 c0             	movzbl %al,%eax
  42f848:	48 85 c0             	test   %rax,%rax
  42f84b:	74 5c                	je     42f8a9 <luaT_getvarargs+0xbd>
  42f84d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f851:	48 8b 40 30          	mov    0x30(%rax),%rax
  42f855:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f859:	48 29 c2             	sub    %rax,%rdx
  42f85c:	48 89 d0             	mov    %rdx,%rax
  42f85f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f863:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f867:	48 8b 40 18          	mov    0x18(%rax),%rax
  42f86b:	48 8b 40 18          	mov    0x18(%rax),%rax
  42f86f:	48 85 c0             	test   %rax,%rax
  42f872:	7e 0c                	jle    42f880 <luaT_getvarargs+0x94>
  42f874:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f878:	48 89 c7             	mov    %rax,%rdi
  42f87b:	e8 d8 8a fe ff       	callq  418358 <luaC_step>
  42f880:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  42f883:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f887:	ba 01 00 00 00       	mov    $0x1,%edx
  42f88c:	89 ce                	mov    %ecx,%esi
  42f88e:	48 89 c7             	mov    %rax,%rdi
  42f891:	e8 a4 1d fe ff       	callq  41163a <luaD_growstack>
  42f896:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f89a:	48 8b 50 30          	mov    0x30(%rax),%rdx
  42f89e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f8a2:	48 01 d0             	add    %rdx,%rax
  42f8a5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f8a9:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42f8ac:	48 98                	cltq   
  42f8ae:	48 c1 e0 04          	shl    $0x4,%rax
  42f8b2:	48 89 c2             	mov    %rax,%rdx
  42f8b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f8b9:	48 01 c2             	add    %rax,%rdx
  42f8bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f8c0:	48 89 50 10          	mov    %rdx,0x10(%rax)
  42f8c4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42f8cb:	eb 5c                	jmp    42f929 <luaT_getvarargs+0x13d>
  42f8cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f8d0:	48 98                	cltq   
  42f8d2:	48 c1 e0 04          	shl    $0x4,%rax
  42f8d6:	48 89 c2             	mov    %rax,%rdx
  42f8d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f8dd:	48 01 d0             	add    %rdx,%rax
  42f8e0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f8e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42f8e8:	48 8b 00             	mov    (%rax),%rax
  42f8eb:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42f8ee:	48 63 ca             	movslq %edx,%rcx
  42f8f1:	8b 55 f8             	mov    -0x8(%rbp),%edx
  42f8f4:	48 63 d2             	movslq %edx,%rdx
  42f8f7:	48 29 d1             	sub    %rdx,%rcx
  42f8fa:	48 89 ca             	mov    %rcx,%rdx
  42f8fd:	48 c1 e2 04          	shl    $0x4,%rdx
  42f901:	48 01 d0             	add    %rdx,%rax
  42f904:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f908:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f90c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42f910:	48 8b 12             	mov    (%rdx),%rdx
  42f913:	48 89 10             	mov    %rdx,(%rax)
  42f916:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f91a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  42f91e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f922:	88 50 08             	mov    %dl,0x8(%rax)
  42f925:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42f929:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f92c:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  42f92f:	7d 25                	jge    42f956 <luaT_getvarargs+0x16a>
  42f931:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f934:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  42f937:	7c 94                	jl     42f8cd <luaT_getvarargs+0xe1>
  42f939:	eb 1b                	jmp    42f956 <luaT_getvarargs+0x16a>
  42f93b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f93e:	48 98                	cltq   
  42f940:	48 c1 e0 04          	shl    $0x4,%rax
  42f944:	48 89 c2             	mov    %rax,%rdx
  42f947:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f94b:	48 01 d0             	add    %rdx,%rax
  42f94e:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  42f952:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42f956:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f959:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  42f95c:	7c dd                	jl     42f93b <luaT_getvarargs+0x14f>
  42f95e:	90                   	nop
  42f95f:	c9                   	leaveq 
  42f960:	c3                   	retq   

000000000042f961 <lstop>:
  42f961:	55                   	push   %rbp
  42f962:	48 89 e5             	mov    %rsp,%rbp
  42f965:	48 83 ec 10          	sub    $0x10,%rsp
  42f969:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f96d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42f971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f975:	b9 00 00 00 00       	mov    $0x0,%ecx
  42f97a:	ba 00 00 00 00       	mov    $0x0,%edx
  42f97f:	be 00 00 00 00       	mov    $0x0,%esi
  42f984:	48 89 c7             	mov    %rax,%rdi
  42f987:	e8 f8 f8 fd ff       	callq  40f284 <lua_sethook>
  42f98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f990:	be 6c 2b 44 00       	mov    $0x442b6c,%esi
  42f995:	48 89 c7             	mov    %rax,%rdi
  42f998:	b8 00 00 00 00       	mov    $0x0,%eax
  42f99d:	e8 4e 68 fd ff       	callq  4061f0 <luaL_error>
  42f9a2:	90                   	nop
  42f9a3:	c9                   	leaveq 
  42f9a4:	c3                   	retq   

000000000042f9a5 <laction>:
  42f9a5:	55                   	push   %rbp
  42f9a6:	48 89 e5             	mov    %rsp,%rbp
  42f9a9:	48 83 ec 20          	sub    $0x20,%rsp
  42f9ad:	89 7d ec             	mov    %edi,-0x14(%rbp)
  42f9b0:	c7 45 fc 0f 00 00 00 	movl   $0xf,-0x4(%rbp)
  42f9b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42f9ba:	be 00 00 00 00       	mov    $0x0,%esi
  42f9bf:	89 c7                	mov    %eax,%edi
  42f9c1:	e8 fa 20 fd ff       	callq  401ac0 <__sysv_signal@plt>
  42f9c6:	48 8b 05 03 f9 21 00 	mov    0x21f903(%rip),%rax        # 64f2d0 <globalL>
  42f9cd:	8b 55 fc             	mov    -0x4(%rbp),%edx
  42f9d0:	b9 01 00 00 00       	mov    $0x1,%ecx
  42f9d5:	be 61 f9 42 00       	mov    $0x42f961,%esi
  42f9da:	48 89 c7             	mov    %rax,%rdi
  42f9dd:	e8 a2 f8 fd ff       	callq  40f284 <lua_sethook>
  42f9e2:	90                   	nop
  42f9e3:	c9                   	leaveq 
  42f9e4:	c3                   	retq   

000000000042f9e5 <print_usage>:
  42f9e5:	55                   	push   %rbp
  42f9e6:	48 89 e5             	mov    %rsp,%rbp
  42f9e9:	48 83 ec 10          	sub    $0x10,%rsp
  42f9ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f9f1:	48 8b 15 88 f8 21 00 	mov    0x21f888(%rip),%rdx        # 64f280 <progname>
  42f9f8:	48 8b 05 c1 f8 21 00 	mov    0x21f8c1(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42f9ff:	be 79 2b 44 00       	mov    $0x442b79,%esi
  42fa04:	48 89 c7             	mov    %rax,%rdi
  42fa07:	b8 00 00 00 00       	mov    $0x0,%eax
  42fa0c:	e8 bf 1f fd ff       	callq  4019d0 <fprintf@plt>
  42fa11:	48 8b 05 a8 f8 21 00 	mov    0x21f8a8(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fa18:	48 89 c7             	mov    %rax,%rdi
  42fa1b:	e8 30 1f fd ff       	callq  401950 <fflush@plt>
  42fa20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fa24:	48 83 c0 01          	add    $0x1,%rax
  42fa28:	0f b6 00             	movzbl (%rax),%eax
  42fa2b:	3c 65                	cmp    $0x65,%al
  42fa2d:	74 0f                	je     42fa3e <print_usage+0x59>
  42fa2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fa33:	48 83 c0 01          	add    $0x1,%rax
  42fa37:	0f b6 00             	movzbl (%rax),%eax
  42fa3a:	3c 6c                	cmp    $0x6c,%al
  42fa3c:	75 2e                	jne    42fa6c <print_usage+0x87>
  42fa3e:	48 8b 05 7b f8 21 00 	mov    0x21f87b(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fa45:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42fa49:	be 7e 2b 44 00       	mov    $0x442b7e,%esi
  42fa4e:	48 89 c7             	mov    %rax,%rdi
  42fa51:	b8 00 00 00 00       	mov    $0x0,%eax
  42fa56:	e8 75 1f fd ff       	callq  4019d0 <fprintf@plt>
  42fa5b:	48 8b 05 5e f8 21 00 	mov    0x21f85e(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fa62:	48 89 c7             	mov    %rax,%rdi
  42fa65:	e8 e6 1e fd ff       	callq  401950 <fflush@plt>
  42fa6a:	eb 2c                	jmp    42fa98 <print_usage+0xb3>
  42fa6c:	48 8b 05 4d f8 21 00 	mov    0x21f84d(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fa73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42fa77:	be 93 2b 44 00       	mov    $0x442b93,%esi
  42fa7c:	48 89 c7             	mov    %rax,%rdi
  42fa7f:	b8 00 00 00 00       	mov    $0x0,%eax
  42fa84:	e8 47 1f fd ff       	callq  4019d0 <fprintf@plt>
  42fa89:	48 8b 05 30 f8 21 00 	mov    0x21f830(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fa90:	48 89 c7             	mov    %rax,%rdi
  42fa93:	e8 b8 1e fd ff       	callq  401950 <fflush@plt>
  42fa98:	48 8b 15 e1 f7 21 00 	mov    0x21f7e1(%rip),%rdx        # 64f280 <progname>
  42fa9f:	48 8b 05 1a f8 21 00 	mov    0x21f81a(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42faa6:	be b0 2b 44 00       	mov    $0x442bb0,%esi
  42faab:	48 89 c7             	mov    %rax,%rdi
  42faae:	b8 00 00 00 00       	mov    $0x0,%eax
  42fab3:	e8 18 1f fd ff       	callq  4019d0 <fprintf@plt>
  42fab8:	48 8b 05 01 f8 21 00 	mov    0x21f801(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fabf:	48 89 c7             	mov    %rax,%rdi
  42fac2:	e8 89 1e fd ff       	callq  401950 <fflush@plt>
  42fac7:	90                   	nop
  42fac8:	c9                   	leaveq 
  42fac9:	c3                   	retq   

000000000042faca <l_message>:
  42faca:	55                   	push   %rbp
  42facb:	48 89 e5             	mov    %rsp,%rbp
  42face:	48 83 ec 10          	sub    $0x10,%rsp
  42fad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42fad6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42fada:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42fadf:	74 2c                	je     42fb0d <l_message+0x43>
  42fae1:	48 8b 05 d8 f7 21 00 	mov    0x21f7d8(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fae8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42faec:	be 79 2b 44 00       	mov    $0x442b79,%esi
  42faf1:	48 89 c7             	mov    %rax,%rdi
  42faf4:	b8 00 00 00 00       	mov    $0x0,%eax
  42faf9:	e8 d2 1e fd ff       	callq  4019d0 <fprintf@plt>
  42fafe:	48 8b 05 bb f7 21 00 	mov    0x21f7bb(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fb05:	48 89 c7             	mov    %rax,%rdi
  42fb08:	e8 43 1e fd ff       	callq  401950 <fflush@plt>
  42fb0d:	48 8b 05 ac f7 21 00 	mov    0x21f7ac(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fb14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42fb18:	be 71 2d 44 00       	mov    $0x442d71,%esi
  42fb1d:	48 89 c7             	mov    %rax,%rdi
  42fb20:	b8 00 00 00 00       	mov    $0x0,%eax
  42fb25:	e8 a6 1e fd ff       	callq  4019d0 <fprintf@plt>
  42fb2a:	48 8b 05 8f f7 21 00 	mov    0x21f78f(%rip),%rax        # 64f2c0 <stderr@@GLIBC_2.2.5>
  42fb31:	48 89 c7             	mov    %rax,%rdi
  42fb34:	e8 17 1e fd ff       	callq  401950 <fflush@plt>
  42fb39:	90                   	nop
  42fb3a:	c9                   	leaveq 
  42fb3b:	c3                   	retq   

000000000042fb3c <report>:
  42fb3c:	55                   	push   %rbp
  42fb3d:	48 89 e5             	mov    %rsp,%rbp
  42fb40:	48 83 ec 20          	sub    $0x20,%rsp
  42fb44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42fb48:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42fb4b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  42fb4f:	74 41                	je     42fb92 <report+0x56>
  42fb51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fb55:	ba 00 00 00 00       	mov    $0x0,%edx
  42fb5a:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42fb5f:	48 89 c7             	mov    %rax,%rdi
  42fb62:	e8 06 2e fd ff       	callq  40296d <lua_tolstring>
  42fb67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42fb6b:	48 8b 05 0e f7 21 00 	mov    0x21f70e(%rip),%rax        # 64f280 <progname>
  42fb72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42fb76:	48 89 d6             	mov    %rdx,%rsi
  42fb79:	48 89 c7             	mov    %rax,%rdi
  42fb7c:	e8 49 ff ff ff       	callq  42faca <l_message>
  42fb81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fb85:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42fb8a:	48 89 c7             	mov    %rax,%rdi
  42fb8d:	e8 f2 23 fd ff       	callq  401f84 <lua_settop>
  42fb92:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42fb95:	c9                   	leaveq 
  42fb96:	c3                   	retq   

000000000042fb97 <msghandler>:
  42fb97:	55                   	push   %rbp
  42fb98:	48 89 e5             	mov    %rsp,%rbp
  42fb9b:	48 83 ec 20          	sub    $0x20,%rsp
  42fb9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42fba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fba7:	ba 00 00 00 00       	mov    $0x0,%edx
  42fbac:	be 01 00 00 00       	mov    $0x1,%esi
  42fbb1:	48 89 c7             	mov    %rax,%rdi
  42fbb4:	e8 b4 2d fd ff       	callq  40296d <lua_tolstring>
  42fbb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42fbbd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42fbc2:	75 75                	jne    42fc39 <msghandler+0xa2>
  42fbc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fbc8:	ba 75 2d 44 00       	mov    $0x442d75,%edx
  42fbcd:	be 01 00 00 00       	mov    $0x1,%esi
  42fbd2:	48 89 c7             	mov    %rax,%rdi
  42fbd5:	e8 00 7c fd ff       	callq  4077da <luaL_callmeta>
  42fbda:	85 c0                	test   %eax,%eax
  42fbdc:	74 1d                	je     42fbfb <msghandler+0x64>
  42fbde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fbe2:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42fbe7:	48 89 c7             	mov    %rax,%rdi
  42fbea:	e8 84 27 fd ff       	callq  402373 <lua_type>
  42fbef:	83 f8 04             	cmp    $0x4,%eax
  42fbf2:	75 07                	jne    42fbfb <msghandler+0x64>
  42fbf4:	b8 01 00 00 00       	mov    $0x1,%eax
  42fbf9:	eb 5c                	jmp    42fc57 <msghandler+0xc0>
  42fbfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fbff:	be 01 00 00 00       	mov    $0x1,%esi
  42fc04:	48 89 c7             	mov    %rax,%rdi
  42fc07:	e8 67 27 fd ff       	callq  402373 <lua_type>
  42fc0c:	89 c2                	mov    %eax,%edx
  42fc0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc12:	89 d6                	mov    %edx,%esi
  42fc14:	48 89 c7             	mov    %rax,%rdi
  42fc17:	e8 b6 27 fd ff       	callq  4023d2 <lua_typename>
  42fc1c:	48 89 c2             	mov    %rax,%rdx
  42fc1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc23:	be 80 2d 44 00       	mov    $0x442d80,%esi
  42fc28:	48 89 c7             	mov    %rax,%rdi
  42fc2b:	b8 00 00 00 00       	mov    $0x0,%eax
  42fc30:	e8 dd 32 fd ff       	callq  402f12 <lua_pushfstring>
  42fc35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42fc39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42fc3d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42fc41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc45:	b9 01 00 00 00       	mov    $0x1,%ecx
  42fc4a:	48 89 c7             	mov    %rax,%rdi
  42fc4d:	e8 46 60 fd ff       	callq  405c98 <luaL_traceback>
  42fc52:	b8 01 00 00 00       	mov    $0x1,%eax
  42fc57:	c9                   	leaveq 
  42fc58:	c3                   	retq   

000000000042fc59 <docall>:
  42fc59:	55                   	push   %rbp
  42fc5a:	48 89 e5             	mov    %rsp,%rbp
  42fc5d:	48 83 ec 20          	sub    $0x20,%rsp
  42fc61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42fc65:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  42fc68:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42fc6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc6f:	48 89 c7             	mov    %rax,%rdi
  42fc72:	e8 e2 22 fd ff       	callq  401f59 <lua_gettop>
  42fc77:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  42fc7a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42fc7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc81:	ba 00 00 00 00       	mov    $0x0,%edx
  42fc86:	be 97 fb 42 00       	mov    $0x42fb97,%esi
  42fc8b:	48 89 c7             	mov    %rax,%rdi
  42fc8e:	e8 58 33 fd ff       	callq  402feb <lua_pushcclosure>
  42fc93:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42fc96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fc9a:	ba 01 00 00 00       	mov    $0x1,%edx
  42fc9f:	89 ce                	mov    %ecx,%esi
  42fca1:	48 89 c7             	mov    %rax,%rdi
  42fca4:	e8 c5 24 fd ff       	callq  40216e <lua_rotate>
  42fca9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fcad:	48 89 05 1c f6 21 00 	mov    %rax,0x21f61c(%rip)        # 64f2d0 <globalL>
  42fcb4:	be a5 f9 42 00       	mov    $0x42f9a5,%esi
  42fcb9:	bf 02 00 00 00       	mov    $0x2,%edi
  42fcbe:	e8 fd 1d fd ff       	callq  401ac0 <__sysv_signal@plt>
  42fcc3:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42fcc6:	8b 55 e0             	mov    -0x20(%rbp),%edx
  42fcc9:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42fccc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fcd0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  42fcd6:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42fcdc:	48 89 c7             	mov    %rax,%rdi
  42fcdf:	e8 df 48 fd ff       	callq  4045c3 <lua_pcallk>
  42fce4:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42fce7:	be 00 00 00 00       	mov    $0x0,%esi
  42fcec:	bf 02 00 00 00       	mov    $0x2,%edi
  42fcf1:	e8 ca 1d fd ff       	callq  401ac0 <__sysv_signal@plt>
  42fcf6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  42fcf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fcfd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  42fd02:	89 ce                	mov    %ecx,%esi
  42fd04:	48 89 c7             	mov    %rax,%rdi
  42fd07:	e8 62 24 fd ff       	callq  40216e <lua_rotate>
  42fd0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fd10:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42fd15:	48 89 c7             	mov    %rax,%rdi
  42fd18:	e8 67 22 fd ff       	callq  401f84 <lua_settop>
  42fd1d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42fd20:	c9                   	leaveq 
  42fd21:	c3                   	retq   

000000000042fd22 <print_version>:
  42fd22:	55                   	push   %rbp
  42fd23:	48 89 e5             	mov    %rsp,%rbp
  42fd26:	48 8b 05 73 f5 21 00 	mov    0x21f573(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  42fd2d:	48 89 c1             	mov    %rax,%rcx
  42fd30:	ba 33 00 00 00       	mov    $0x33,%edx
  42fd35:	be 01 00 00 00       	mov    $0x1,%esi
  42fd3a:	bf a0 2d 44 00       	mov    $0x442da0,%edi
  42fd3f:	e8 dc 1d fd ff       	callq  401b20 <fwrite@plt>
  42fd44:	48 8b 05 55 f5 21 00 	mov    0x21f555(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  42fd4b:	48 89 c1             	mov    %rax,%rcx
  42fd4e:	ba 01 00 00 00       	mov    $0x1,%edx
  42fd53:	be 01 00 00 00       	mov    $0x1,%esi
  42fd58:	bf d4 2d 44 00       	mov    $0x442dd4,%edi
  42fd5d:	e8 be 1d fd ff       	callq  401b20 <fwrite@plt>
  42fd62:	48 8b 05 37 f5 21 00 	mov    0x21f537(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  42fd69:	48 89 c7             	mov    %rax,%rdi
  42fd6c:	e8 df 1b fd ff       	callq  401950 <fflush@plt>
  42fd71:	90                   	nop
  42fd72:	5d                   	pop    %rbp
  42fd73:	c3                   	retq   

000000000042fd74 <createargtable>:
  42fd74:	55                   	push   %rbp
  42fd75:	48 89 e5             	mov    %rsp,%rbp
  42fd78:	48 83 ec 30          	sub    $0x30,%rsp
  42fd7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42fd80:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42fd84:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42fd87:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  42fd8a:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42fd8d:	8d 50 01             	lea    0x1(%rax),%edx
  42fd90:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42fd93:	29 d0                	sub    %edx,%eax
  42fd95:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42fd98:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42fd9b:	8d 50 01             	lea    0x1(%rax),%edx
  42fd9e:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  42fda1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fda5:	89 ce                	mov    %ecx,%esi
  42fda7:	48 89 c7             	mov    %rax,%rdi
  42fdaa:	e8 69 3a fd ff       	callq  403818 <lua_createtable>
  42fdaf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42fdb6:	eb 44                	jmp    42fdfc <createargtable+0x88>
  42fdb8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42fdbb:	48 98                	cltq   
  42fdbd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  42fdc4:	00 
  42fdc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42fdc9:	48 01 d0             	add    %rdx,%rax
  42fdcc:	48 8b 10             	mov    (%rax),%rdx
  42fdcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fdd3:	48 89 d6             	mov    %rdx,%rsi
  42fdd6:	48 89 c7             	mov    %rax,%rdi
  42fdd9:	e8 30 30 fd ff       	callq  402e0e <lua_pushstring>
  42fdde:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42fde1:	2b 45 d8             	sub    -0x28(%rbp),%eax
  42fde4:	48 63 d0             	movslq %eax,%rdx
  42fde7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fdeb:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  42fdf0:	48 89 c7             	mov    %rax,%rdi
  42fdf3:	e8 22 43 fd ff       	callq  40411a <lua_rawseti>
  42fdf8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  42fdfc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42fdff:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  42fe02:	7c b4                	jl     42fdb8 <createargtable+0x44>
  42fe04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42fe08:	be d6 2d 44 00       	mov    $0x442dd6,%esi
  42fe0d:	48 89 c7             	mov    %rax,%rdi
  42fe10:	e8 10 3e fd ff       	callq  403c25 <lua_setglobal>
  42fe15:	90                   	nop
  42fe16:	c9                   	leaveq 
  42fe17:	c3                   	retq   

000000000042fe18 <dochunk>:
  42fe18:	55                   	push   %rbp
  42fe19:	48 89 e5             	mov    %rsp,%rbp
  42fe1c:	48 83 ec 10          	sub    $0x10,%rsp
  42fe20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42fe24:	89 75 f4             	mov    %esi,-0xc(%rbp)
  42fe27:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42fe2b:	75 19                	jne    42fe46 <dochunk+0x2e>
  42fe2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fe31:	ba 00 00 00 00       	mov    $0x0,%edx
  42fe36:	be 00 00 00 00       	mov    $0x0,%esi
  42fe3b:	48 89 c7             	mov    %rax,%rdi
  42fe3e:	e8 16 fe ff ff       	callq  42fc59 <docall>
  42fe43:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42fe46:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42fe49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fe4d:	89 d6                	mov    %edx,%esi
  42fe4f:	48 89 c7             	mov    %rax,%rdi
  42fe52:	e8 e5 fc ff ff       	callq  42fb3c <report>
  42fe57:	c9                   	leaveq 
  42fe58:	c3                   	retq   

000000000042fe59 <dofile>:
  42fe59:	55                   	push   %rbp
  42fe5a:	48 89 e5             	mov    %rsp,%rbp
  42fe5d:	48 83 ec 10          	sub    $0x10,%rsp
  42fe61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42fe65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42fe69:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42fe6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fe71:	ba 00 00 00 00       	mov    $0x0,%edx
  42fe76:	48 89 ce             	mov    %rcx,%rsi
  42fe79:	48 89 c7             	mov    %rax,%rdi
  42fe7c:	e8 4e 75 fd ff       	callq  4073cf <luaL_loadfilex>
  42fe81:	89 c2                	mov    %eax,%edx
  42fe83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fe87:	89 d6                	mov    %edx,%esi
  42fe89:	48 89 c7             	mov    %rax,%rdi
  42fe8c:	e8 87 ff ff ff       	callq  42fe18 <dochunk>
  42fe91:	c9                   	leaveq 
  42fe92:	c3                   	retq   

000000000042fe93 <dostring>:
  42fe93:	55                   	push   %rbp
  42fe94:	48 89 e5             	mov    %rsp,%rbp
  42fe97:	48 83 ec 20          	sub    $0x20,%rsp
  42fe9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42fe9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42fea3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42fea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42feab:	48 89 c7             	mov    %rax,%rdi
  42feae:	e8 bd 18 fd ff       	callq  401770 <strlen@plt>
  42feb3:	48 89 c7             	mov    %rax,%rdi
  42feb6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42feba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42febe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fec2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  42fec8:	48 89 d1             	mov    %rdx,%rcx
  42fecb:	48 89 fa             	mov    %rdi,%rdx
  42fece:	48 89 c7             	mov    %rax,%rdi
  42fed1:	e8 da 77 fd ff       	callq  4076b0 <luaL_loadbufferx>
  42fed6:	89 c2                	mov    %eax,%edx
  42fed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42fedc:	89 d6                	mov    %edx,%esi
  42fede:	48 89 c7             	mov    %rax,%rdi
  42fee1:	e8 32 ff ff ff       	callq  42fe18 <dochunk>
  42fee6:	c9                   	leaveq 
  42fee7:	c3                   	retq   

000000000042fee8 <dolibrary>:
  42fee8:	55                   	push   %rbp
  42fee9:	48 89 e5             	mov    %rsp,%rbp
  42feec:	48 83 ec 20          	sub    $0x20,%rsp
  42fef0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42fef4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42fef8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42fefc:	be 3d 00 00 00       	mov    $0x3d,%esi
  42ff01:	48 89 c7             	mov    %rax,%rdi
  42ff04:	e8 37 18 fd ff       	callq  401740 <strchr@plt>
  42ff09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ff0d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  42ff12:	75 0a                	jne    42ff1e <dolibrary+0x36>
  42ff14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ff18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ff1c:	eb 0c                	jmp    42ff2a <dolibrary+0x42>
  42ff1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ff22:	c6 00 00             	movb   $0x0,(%rax)
  42ff25:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42ff2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ff2e:	be da 2d 44 00       	mov    $0x442dda,%esi
  42ff33:	48 89 c7             	mov    %rax,%rdi
  42ff36:	e8 37 34 fd ff       	callq  403372 <lua_getglobal>
  42ff3b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42ff3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ff43:	48 89 d6             	mov    %rdx,%rsi
  42ff46:	48 89 c7             	mov    %rax,%rdi
  42ff49:	e8 c0 2e fd ff       	callq  402e0e <lua_pushstring>
  42ff4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ff52:	ba 01 00 00 00       	mov    $0x1,%edx
  42ff57:	be 01 00 00 00       	mov    $0x1,%esi
  42ff5c:	48 89 c7             	mov    %rax,%rdi
  42ff5f:	e8 f5 fc ff ff       	callq  42fc59 <docall>
  42ff64:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42ff67:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42ff6b:	75 13                	jne    42ff80 <dolibrary+0x98>
  42ff6d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42ff71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ff75:	48 89 d6             	mov    %rdx,%rsi
  42ff78:	48 89 c7             	mov    %rax,%rdi
  42ff7b:	e8 a5 3c fd ff       	callq  403c25 <lua_setglobal>
  42ff80:	8b 55 f4             	mov    -0xc(%rbp),%edx
  42ff83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ff87:	89 d6                	mov    %edx,%esi
  42ff89:	48 89 c7             	mov    %rax,%rdi
  42ff8c:	e8 ab fb ff ff       	callq  42fb3c <report>
  42ff91:	c9                   	leaveq 
  42ff92:	c3                   	retq   

000000000042ff93 <pushargs>:
  42ff93:	55                   	push   %rbp
  42ff94:	48 89 e5             	mov    %rsp,%rbp
  42ff97:	48 83 ec 20          	sub    $0x20,%rsp
  42ff9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ff9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ffa3:	be d6 2d 44 00       	mov    $0x442dd6,%esi
  42ffa8:	48 89 c7             	mov    %rax,%rdi
  42ffab:	e8 c2 33 fd ff       	callq  403372 <lua_getglobal>
  42ffb0:	83 f8 05             	cmp    $0x5,%eax
  42ffb3:	74 16                	je     42ffcb <pushargs+0x38>
  42ffb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ffb9:	be e2 2d 44 00       	mov    $0x442de2,%esi
  42ffbe:	48 89 c7             	mov    %rax,%rdi
  42ffc1:	b8 00 00 00 00       	mov    $0x0,%eax
  42ffc6:	e8 25 62 fd ff       	callq  4061f0 <luaL_error>
  42ffcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ffcf:	be ff ff ff ff       	mov    $0xffffffff,%esi
  42ffd4:	48 89 c7             	mov    %rax,%rdi
  42ffd7:	e8 7e 78 fd ff       	callq  40785a <luaL_len>
  42ffdc:	89 45 f8             	mov    %eax,-0x8(%rbp)
  42ffdf:	8b 45 f8             	mov    -0x8(%rbp),%eax
  42ffe2:	8d 48 03             	lea    0x3(%rax),%ecx
  42ffe5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ffe9:	ba f7 2d 44 00       	mov    $0x442df7,%edx
  42ffee:	89 ce                	mov    %ecx,%esi
  42fff0:	48 89 c7             	mov    %rax,%rdi
  42fff3:	e8 d8 66 fd ff       	callq  4066d0 <luaL_checkstack>
  42fff8:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  42ffff:	eb 1f                	jmp    430020 <pushargs+0x8d>
  430001:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430004:	48 63 d0             	movslq %eax,%rdx
  430007:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43000a:	f7 d8                	neg    %eax
  43000c:	89 c1                	mov    %eax,%ecx
  43000e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430012:	89 ce                	mov    %ecx,%esi
  430014:	48 89 c7             	mov    %rax,%rdi
  430017:	e8 43 37 fd ff       	callq  40375f <lua_rawgeti>
  43001c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  430020:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430023:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  430026:	7e d9                	jle    430001 <pushargs+0x6e>
  430028:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43002b:	f7 d8                	neg    %eax
  43002d:	89 c1                	mov    %eax,%ecx
  43002f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430033:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  430038:	89 ce                	mov    %ecx,%esi
  43003a:	48 89 c7             	mov    %rax,%rdi
  43003d:	e8 2c 21 fd ff       	callq  40216e <lua_rotate>
  430042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430046:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  43004b:	48 89 c7             	mov    %rax,%rdi
  43004e:	e8 31 1f fd ff       	callq  401f84 <lua_settop>
  430053:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430056:	c9                   	leaveq 
  430057:	c3                   	retq   

0000000000430058 <handle_script>:
  430058:	55                   	push   %rbp
  430059:	48 89 e5             	mov    %rsp,%rbp
  43005c:	48 83 ec 30          	sub    $0x30,%rsp
  430060:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  430064:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  430068:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43006c:	48 8b 00             	mov    (%rax),%rax
  43006f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430073:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430077:	be 14 2e 44 00       	mov    $0x442e14,%esi
  43007c:	48 89 c7             	mov    %rax,%rdi
  43007f:	e8 3c 19 fd ff       	callq  4019c0 <strcmp@plt>
  430084:	85 c0                	test   %eax,%eax
  430086:	75 24                	jne    4300ac <handle_script+0x54>
  430088:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43008c:	48 83 e8 08          	sub    $0x8,%rax
  430090:	48 8b 00             	mov    (%rax),%rax
  430093:	be 16 2e 44 00       	mov    $0x442e16,%esi
  430098:	48 89 c7             	mov    %rax,%rdi
  43009b:	e8 20 19 fd ff       	callq  4019c0 <strcmp@plt>
  4300a0:	85 c0                	test   %eax,%eax
  4300a2:	74 08                	je     4300ac <handle_script+0x54>
  4300a4:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4300ab:	00 
  4300ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4300b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4300b4:	ba 00 00 00 00       	mov    $0x0,%edx
  4300b9:	48 89 ce             	mov    %rcx,%rsi
  4300bc:	48 89 c7             	mov    %rax,%rdi
  4300bf:	e8 0b 73 fd ff       	callq  4073cf <luaL_loadfilex>
  4300c4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4300c7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4300cb:	75 28                	jne    4300f5 <handle_script+0x9d>
  4300cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4300d1:	48 89 c7             	mov    %rax,%rdi
  4300d4:	e8 ba fe ff ff       	callq  42ff93 <pushargs>
  4300d9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4300dc:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4300df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4300e3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4300e8:	89 ce                	mov    %ecx,%esi
  4300ea:	48 89 c7             	mov    %rax,%rdi
  4300ed:	e8 67 fb ff ff       	callq  42fc59 <docall>
  4300f2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4300f5:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4300f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4300fc:	89 d6                	mov    %edx,%esi
  4300fe:	48 89 c7             	mov    %rax,%rdi
  430101:	e8 36 fa ff ff       	callq  42fb3c <report>
  430106:	c9                   	leaveq 
  430107:	c3                   	retq   

0000000000430108 <collectargs>:
  430108:	55                   	push   %rbp
  430109:	48 89 e5             	mov    %rsp,%rbp
  43010c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430110:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  430114:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43011b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43011f:	48 8b 00             	mov    (%rax),%rax
  430122:	48 85 c0             	test   %rax,%rax
  430125:	74 1e                	je     430145 <collectargs+0x3d>
  430127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43012b:	48 8b 00             	mov    (%rax),%rax
  43012e:	0f b6 00             	movzbl (%rax),%eax
  430131:	84 c0                	test   %al,%al
  430133:	74 24                	je     430159 <collectargs+0x51>
  430135:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430139:	48 8b 00             	mov    (%rax),%rax
  43013c:	48 89 05 3d f1 21 00 	mov    %rax,0x21f13d(%rip)        # 64f280 <progname>
  430143:	eb 14                	jmp    430159 <collectargs+0x51>
  430145:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430149:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  43014f:	b8 00 00 00 00       	mov    $0x0,%eax
  430154:	e9 3e 02 00 00       	jmpq   430397 <collectargs+0x28f>
  430159:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  430160:	e9 05 02 00 00       	jmpq   43036a <collectargs+0x262>
  430165:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430169:	8b 55 f8             	mov    -0x8(%rbp),%edx
  43016c:	89 10                	mov    %edx,(%rax)
  43016e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430171:	48 98                	cltq   
  430173:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  43017a:	00 
  43017b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43017f:	48 01 d0             	add    %rdx,%rax
  430182:	48 8b 00             	mov    (%rax),%rax
  430185:	0f b6 00             	movzbl (%rax),%eax
  430188:	3c 2d                	cmp    $0x2d,%al
  43018a:	74 08                	je     430194 <collectargs+0x8c>
  43018c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43018f:	e9 03 02 00 00       	jmpq   430397 <collectargs+0x28f>
  430194:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430197:	48 98                	cltq   
  430199:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4301a0:	00 
  4301a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4301a5:	48 01 d0             	add    %rdx,%rax
  4301a8:	48 8b 00             	mov    (%rax),%rax
  4301ab:	48 83 c0 01          	add    $0x1,%rax
  4301af:	0f b6 00             	movzbl (%rax),%eax
  4301b2:	0f be c0             	movsbl %al,%eax
  4301b5:	83 f8 57             	cmp    $0x57,%eax
  4301b8:	0f 84 cc 00 00 00    	je     43028a <collectargs+0x182>
  4301be:	83 f8 57             	cmp    $0x57,%eax
  4301c1:	7f 17                	jg     4301da <collectargs+0xd2>
  4301c3:	83 f8 2d             	cmp    $0x2d,%eax
  4301c6:	74 45                	je     43020d <collectargs+0x105>
  4301c8:	83 f8 45             	cmp    $0x45,%eax
  4301cb:	0f 84 84 00 00 00    	je     430255 <collectargs+0x14d>
  4301d1:	85 c0                	test   %eax,%eax
  4301d3:	74 78                	je     43024d <collectargs+0x145>
  4301d5:	e9 81 01 00 00       	jmpq   43035b <collectargs+0x253>
  4301da:	83 f8 69             	cmp    $0x69,%eax
  4301dd:	0f 84 d7 00 00 00    	je     4302ba <collectargs+0x1b2>
  4301e3:	83 f8 69             	cmp    $0x69,%eax
  4301e6:	7f 0e                	jg     4301f6 <collectargs+0xee>
  4301e8:	83 f8 65             	cmp    $0x65,%eax
  4301eb:	0f 84 ff 00 00 00    	je     4302f0 <collectargs+0x1e8>
  4301f1:	e9 65 01 00 00       	jmpq   43035b <collectargs+0x253>
  4301f6:	83 f8 6c             	cmp    $0x6c,%eax
  4301f9:	0f 84 f5 00 00 00    	je     4302f4 <collectargs+0x1ec>
  4301ff:	83 f8 76             	cmp    $0x76,%eax
  430202:	0f 84 b6 00 00 00    	je     4302be <collectargs+0x1b6>
  430208:	e9 4e 01 00 00       	jmpq   43035b <collectargs+0x253>
  43020d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430210:	48 98                	cltq   
  430212:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430219:	00 
  43021a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43021e:	48 01 d0             	add    %rdx,%rax
  430221:	48 8b 00             	mov    (%rax),%rax
  430224:	48 83 c0 02          	add    $0x2,%rax
  430228:	0f b6 00             	movzbl (%rax),%eax
  43022b:	84 c0                	test   %al,%al
  43022d:	74 0a                	je     430239 <collectargs+0x131>
  43022f:	b8 01 00 00 00       	mov    $0x1,%eax
  430234:	e9 5e 01 00 00       	jmpq   430397 <collectargs+0x28f>
  430239:	8b 45 f8             	mov    -0x8(%rbp),%eax
  43023c:	8d 50 01             	lea    0x1(%rax),%edx
  43023f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430243:	89 10                	mov    %edx,(%rax)
  430245:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430248:	e9 4a 01 00 00       	jmpq   430397 <collectargs+0x28f>
  43024d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430250:	e9 42 01 00 00       	jmpq   430397 <collectargs+0x28f>
  430255:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430258:	48 98                	cltq   
  43025a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430261:	00 
  430262:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430266:	48 01 d0             	add    %rdx,%rax
  430269:	48 8b 00             	mov    (%rax),%rax
  43026c:	48 83 c0 02          	add    $0x2,%rax
  430270:	0f b6 00             	movzbl (%rax),%eax
  430273:	84 c0                	test   %al,%al
  430275:	74 0a                	je     430281 <collectargs+0x179>
  430277:	b8 01 00 00 00       	mov    $0x1,%eax
  43027c:	e9 16 01 00 00       	jmpq   430397 <collectargs+0x28f>
  430281:	83 4d fc 10          	orl    $0x10,-0x4(%rbp)
  430285:	e9 dc 00 00 00       	jmpq   430366 <collectargs+0x25e>
  43028a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  43028d:	48 98                	cltq   
  43028f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430296:	00 
  430297:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43029b:	48 01 d0             	add    %rdx,%rax
  43029e:	48 8b 00             	mov    (%rax),%rax
  4302a1:	48 83 c0 02          	add    $0x2,%rax
  4302a5:	0f b6 00             	movzbl (%rax),%eax
  4302a8:	84 c0                	test   %al,%al
  4302aa:	0f 84 b2 00 00 00    	je     430362 <collectargs+0x25a>
  4302b0:	b8 01 00 00 00       	mov    $0x1,%eax
  4302b5:	e9 dd 00 00 00       	jmpq   430397 <collectargs+0x28f>
  4302ba:	83 4d fc 02          	orl    $0x2,-0x4(%rbp)
  4302be:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4302c1:	48 98                	cltq   
  4302c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4302ca:	00 
  4302cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4302cf:	48 01 d0             	add    %rdx,%rax
  4302d2:	48 8b 00             	mov    (%rax),%rax
  4302d5:	48 83 c0 02          	add    $0x2,%rax
  4302d9:	0f b6 00             	movzbl (%rax),%eax
  4302dc:	84 c0                	test   %al,%al
  4302de:	74 0a                	je     4302ea <collectargs+0x1e2>
  4302e0:	b8 01 00 00 00       	mov    $0x1,%eax
  4302e5:	e9 ad 00 00 00       	jmpq   430397 <collectargs+0x28f>
  4302ea:	83 4d fc 04          	orl    $0x4,-0x4(%rbp)
  4302ee:	eb 76                	jmp    430366 <collectargs+0x25e>
  4302f0:	83 4d fc 08          	orl    $0x8,-0x4(%rbp)
  4302f4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4302f7:	48 98                	cltq   
  4302f9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430300:	00 
  430301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430305:	48 01 d0             	add    %rdx,%rax
  430308:	48 8b 00             	mov    (%rax),%rax
  43030b:	48 83 c0 02          	add    $0x2,%rax
  43030f:	0f b6 00             	movzbl (%rax),%eax
  430312:	84 c0                	test   %al,%al
  430314:	75 4f                	jne    430365 <collectargs+0x25d>
  430316:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  43031a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  43031d:	48 98                	cltq   
  43031f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430326:	00 
  430327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43032b:	48 01 d0             	add    %rdx,%rax
  43032e:	48 8b 00             	mov    (%rax),%rax
  430331:	48 85 c0             	test   %rax,%rax
  430334:	74 1e                	je     430354 <collectargs+0x24c>
  430336:	8b 45 f8             	mov    -0x8(%rbp),%eax
  430339:	48 98                	cltq   
  43033b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430342:	00 
  430343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430347:	48 01 d0             	add    %rdx,%rax
  43034a:	48 8b 00             	mov    (%rax),%rax
  43034d:	0f b6 00             	movzbl (%rax),%eax
  430350:	3c 2d                	cmp    $0x2d,%al
  430352:	75 11                	jne    430365 <collectargs+0x25d>
  430354:	b8 01 00 00 00       	mov    $0x1,%eax
  430359:	eb 3c                	jmp    430397 <collectargs+0x28f>
  43035b:	b8 01 00 00 00       	mov    $0x1,%eax
  430360:	eb 35                	jmp    430397 <collectargs+0x28f>
  430362:	90                   	nop
  430363:	eb 01                	jmp    430366 <collectargs+0x25e>
  430365:	90                   	nop
  430366:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  43036a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  43036d:	48 98                	cltq   
  43036f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430376:	00 
  430377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43037b:	48 01 d0             	add    %rdx,%rax
  43037e:	48 8b 00             	mov    (%rax),%rax
  430381:	48 85 c0             	test   %rax,%rax
  430384:	0f 85 db fd ff ff    	jne    430165 <collectargs+0x5d>
  43038a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43038e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  430394:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430397:	5d                   	pop    %rbp
  430398:	c3                   	retq   

0000000000430399 <runargs>:
  430399:	55                   	push   %rbp
  43039a:	48 89 e5             	mov    %rsp,%rbp
  43039d:	48 83 ec 40          	sub    $0x40,%rsp
  4303a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4303a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4303a9:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4303ac:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4303b3:	e9 e8 00 00 00       	jmpq   4304a0 <runargs+0x107>
  4303b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4303bb:	48 98                	cltq   
  4303bd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4303c4:	00 
  4303c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4303c9:	48 01 d0             	add    %rdx,%rax
  4303cc:	48 8b 00             	mov    (%rax),%rax
  4303cf:	48 83 c0 01          	add    $0x1,%rax
  4303d3:	0f b6 00             	movzbl (%rax),%eax
  4303d6:	0f be c0             	movsbl %al,%eax
  4303d9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4303dc:	83 7d ec 65          	cmpl   $0x65,-0x14(%rbp)
  4303e0:	74 15                	je     4303f7 <runargs+0x5e>
  4303e2:	83 7d ec 6c          	cmpl   $0x6c,-0x14(%rbp)
  4303e6:	74 0f                	je     4303f7 <runargs+0x5e>
  4303e8:	83 7d ec 57          	cmpl   $0x57,-0x14(%rbp)
  4303ec:	0f 84 91 00 00 00    	je     430483 <runargs+0xea>
  4303f2:	e9 a5 00 00 00       	jmpq   43049c <runargs+0x103>
  4303f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4303fa:	48 98                	cltq   
  4303fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430403:	00 
  430404:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  430408:	48 01 d0             	add    %rdx,%rax
  43040b:	48 8b 00             	mov    (%rax),%rax
  43040e:	48 83 c0 02          	add    $0x2,%rax
  430412:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43041a:	0f b6 00             	movzbl (%rax),%eax
  43041d:	84 c0                	test   %al,%al
  43041f:	75 1f                	jne    430440 <runargs+0xa7>
  430421:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  430425:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430428:	48 98                	cltq   
  43042a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430431:	00 
  430432:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  430436:	48 01 d0             	add    %rdx,%rax
  430439:	48 8b 00             	mov    (%rax),%rax
  43043c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430440:	83 7d ec 65          	cmpl   $0x65,-0x14(%rbp)
  430444:	75 1a                	jne    430460 <runargs+0xc7>
  430446:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  43044a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43044e:	ba 19 2e 44 00       	mov    $0x442e19,%edx
  430453:	48 89 ce             	mov    %rcx,%rsi
  430456:	48 89 c7             	mov    %rax,%rdi
  430459:	e8 35 fa ff ff       	callq  42fe93 <dostring>
  43045e:	eb 13                	jmp    430473 <runargs+0xda>
  430460:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  430464:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430468:	48 89 d6             	mov    %rdx,%rsi
  43046b:	48 89 c7             	mov    %rax,%rdi
  43046e:	e8 75 fa ff ff       	callq  42fee8 <dolibrary>
  430473:	89 45 e8             	mov    %eax,-0x18(%rbp)
  430476:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  43047a:	74 1f                	je     43049b <runargs+0x102>
  43047c:	b8 00 00 00 00       	mov    $0x0,%eax
  430481:	eb 2e                	jmp    4304b1 <runargs+0x118>
  430483:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430487:	ba 00 00 00 00       	mov    $0x0,%edx
  43048c:	be 29 2e 44 00       	mov    $0x442e29,%esi
  430491:	48 89 c7             	mov    %rax,%rdi
  430494:	e8 41 4e fd ff       	callq  4052da <lua_warning>
  430499:	eb 01                	jmp    43049c <runargs+0x103>
  43049b:	90                   	nop
  43049c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4304a0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4304a3:	3b 45 cc             	cmp    -0x34(%rbp),%eax
  4304a6:	0f 8c 0c ff ff ff    	jl     4303b8 <runargs+0x1f>
  4304ac:	b8 01 00 00 00       	mov    $0x1,%eax
  4304b1:	c9                   	leaveq 
  4304b2:	c3                   	retq   

00000000004304b3 <handle_luainit>:
  4304b3:	55                   	push   %rbp
  4304b4:	48 89 e5             	mov    %rsp,%rbp
  4304b7:	48 83 ec 20          	sub    $0x20,%rsp
  4304bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4304bf:	48 c7 45 f8 2d 2e 44 	movq   $0x442e2d,-0x8(%rbp)
  4304c6:	00 
  4304c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4304cb:	48 83 c0 01          	add    $0x1,%rax
  4304cf:	48 89 c7             	mov    %rax,%rdi
  4304d2:	e8 a9 14 fd ff       	callq  401980 <getenv@plt>
  4304d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4304db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4304e0:	75 1c                	jne    4304fe <handle_luainit+0x4b>
  4304e2:	48 c7 45 f8 3b 2e 44 	movq   $0x442e3b,-0x8(%rbp)
  4304e9:	00 
  4304ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4304ee:	48 83 c0 01          	add    $0x1,%rax
  4304f2:	48 89 c7             	mov    %rax,%rdi
  4304f5:	e8 86 14 fd ff       	callq  401980 <getenv@plt>
  4304fa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4304fe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  430503:	75 07                	jne    43050c <handle_luainit+0x59>
  430505:	b8 00 00 00 00       	mov    $0x0,%eax
  43050a:	eb 3b                	jmp    430547 <handle_luainit+0x94>
  43050c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430510:	0f b6 00             	movzbl (%rax),%eax
  430513:	3c 40                	cmp    $0x40,%al
  430515:	75 19                	jne    430530 <handle_luainit+0x7d>
  430517:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43051b:	48 8d 50 01          	lea    0x1(%rax),%rdx
  43051f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430523:	48 89 d6             	mov    %rdx,%rsi
  430526:	48 89 c7             	mov    %rax,%rdi
  430529:	e8 2b f9 ff ff       	callq  42fe59 <dofile>
  43052e:	eb 17                	jmp    430547 <handle_luainit+0x94>
  430530:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  430534:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  430538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43053c:	48 89 ce             	mov    %rcx,%rsi
  43053f:	48 89 c7             	mov    %rax,%rdi
  430542:	e8 4c f9 ff ff       	callq  42fe93 <dostring>
  430547:	c9                   	leaveq 
  430548:	c3                   	retq   

0000000000430549 <get_prompt>:
  430549:	55                   	push   %rbp
  43054a:	48 89 e5             	mov    %rsp,%rbp
  43054d:	48 83 ec 20          	sub    $0x20,%rsp
  430551:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430555:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  430558:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  43055c:	74 07                	je     430565 <get_prompt+0x1c>
  43055e:	ba 45 2e 44 00       	mov    $0x442e45,%edx
  430563:	eb 05                	jmp    43056a <get_prompt+0x21>
  430565:	ba 4d 2e 44 00       	mov    $0x442e4d,%edx
  43056a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43056e:	48 89 d6             	mov    %rdx,%rsi
  430571:	48 89 c7             	mov    %rax,%rdi
  430574:	e8 f9 2d fd ff       	callq  403372 <lua_getglobal>
  430579:	85 c0                	test   %eax,%eax
  43057b:	75 14                	jne    430591 <get_prompt+0x48>
  43057d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  430581:	74 07                	je     43058a <get_prompt+0x41>
  430583:	b8 56 2e 44 00       	mov    $0x442e56,%eax
  430588:	eb 4c                	jmp    4305d6 <get_prompt+0x8d>
  43058a:	b8 59 2e 44 00       	mov    $0x442e59,%eax
  43058f:	eb 45                	jmp    4305d6 <get_prompt+0x8d>
  430591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430595:	ba 00 00 00 00       	mov    $0x0,%edx
  43059a:	be ff ff ff ff       	mov    $0xffffffff,%esi
  43059f:	48 89 c7             	mov    %rax,%rdi
  4305a2:	e8 29 73 fd ff       	callq  4078d0 <luaL_tolstring>
  4305a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4305ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4305af:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4305b4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4305b9:	48 89 c7             	mov    %rax,%rdi
  4305bc:	e8 ad 1b fd ff       	callq  40216e <lua_rotate>
  4305c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4305c5:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4305ca:	48 89 c7             	mov    %rax,%rdi
  4305cd:	e8 b2 19 fd ff       	callq  401f84 <lua_settop>
  4305d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4305d6:	c9                   	leaveq 
  4305d7:	c3                   	retq   

00000000004305d8 <incomplete>:
  4305d8:	55                   	push   %rbp
  4305d9:	48 89 e5             	mov    %rsp,%rbp
  4305dc:	48 83 ec 20          	sub    $0x20,%rsp
  4305e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4305e4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4305e7:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  4305eb:	75 5b                	jne    430648 <incomplete+0x70>
  4305ed:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4305f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4305f5:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4305fa:	48 89 c7             	mov    %rax,%rdi
  4305fd:	e8 6b 23 fd ff       	callq  40296d <lua_tolstring>
  430602:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  430606:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43060a:	48 83 f8 04          	cmp    $0x4,%rax
  43060e:	76 38                	jbe    430648 <incomplete+0x70>
  430610:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430614:	48 8d 50 fb          	lea    -0x5(%rax),%rdx
  430618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43061c:	48 01 d0             	add    %rdx,%rax
  43061f:	be 5d 2e 44 00       	mov    $0x442e5d,%esi
  430624:	48 89 c7             	mov    %rax,%rdi
  430627:	e8 94 13 fd ff       	callq  4019c0 <strcmp@plt>
  43062c:	85 c0                	test   %eax,%eax
  43062e:	75 18                	jne    430648 <incomplete+0x70>
  430630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430634:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  430639:	48 89 c7             	mov    %rax,%rdi
  43063c:	e8 43 19 fd ff       	callq  401f84 <lua_settop>
  430641:	b8 01 00 00 00       	mov    $0x1,%eax
  430646:	eb 05                	jmp    43064d <incomplete+0x75>
  430648:	b8 00 00 00 00       	mov    $0x0,%eax
  43064d:	c9                   	leaveq 
  43064e:	c3                   	retq   

000000000043064f <pushline>:
  43064f:	55                   	push   %rbp
  430650:	48 89 e5             	mov    %rsp,%rbp
  430653:	48 81 ec 30 02 00 00 	sub    $0x230,%rsp
  43065a:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
  430661:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
  430667:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  43066e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430672:	8b 95 d4 fd ff ff    	mov    -0x22c(%rbp),%edx
  430678:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  43067f:	89 d6                	mov    %edx,%esi
  430681:	48 89 c7             	mov    %rax,%rdi
  430684:	e8 c0 fe ff ff       	callq  430549 <get_prompt>
  430689:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43068d:	48 8b 15 0c ec 21 00 	mov    0x21ec0c(%rip),%rdx        # 64f2a0 <stdout@@GLIBC_2.2.5>
  430694:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430698:	48 89 d6             	mov    %rdx,%rsi
  43069b:	48 89 c7             	mov    %rax,%rdi
  43069e:	e8 9d 12 fd ff       	callq  401940 <fputs@plt>
  4306a3:	48 8b 05 f6 eb 21 00 	mov    0x21ebf6(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  4306aa:	48 89 c7             	mov    %rax,%rdi
  4306ad:	e8 9e 12 fd ff       	callq  401950 <fflush@plt>
  4306b2:	48 8b 15 f7 eb 21 00 	mov    0x21ebf7(%rip),%rdx        # 64f2b0 <stdin@@GLIBC_2.2.5>
  4306b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4306bd:	be 00 02 00 00       	mov    $0x200,%esi
  4306c2:	48 89 c7             	mov    %rax,%rdi
  4306c5:	e8 76 13 fd ff       	callq  401a40 <fgets@plt>
  4306ca:	48 85 c0             	test   %rax,%rax
  4306cd:	0f 95 c0             	setne  %al
  4306d0:	0f b6 c0             	movzbl %al,%eax
  4306d3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4306d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4306da:	75 0a                	jne    4306e6 <pushline+0x97>
  4306dc:	b8 00 00 00 00       	mov    $0x0,%eax
  4306e1:	e9 aa 00 00 00       	jmpq   430790 <pushline+0x141>
  4306e6:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  4306ed:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4306f2:	48 89 c7             	mov    %rax,%rdi
  4306f5:	e8 8a 18 fd ff       	callq  401f84 <lua_settop>
  4306fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4306fe:	48 89 c7             	mov    %rax,%rdi
  430701:	e8 6a 10 fd ff       	callq  401770 <strlen@plt>
  430706:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43070a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  43070f:	74 29                	je     43073a <pushline+0xeb>
  430711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430715:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  430719:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43071d:	48 01 d0             	add    %rdx,%rax
  430720:	0f b6 00             	movzbl (%rax),%eax
  430723:	3c 0a                	cmp    $0xa,%al
  430725:	75 13                	jne    43073a <pushline+0xeb>
  430727:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  43072c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  430730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430734:	48 01 d0             	add    %rdx,%rax
  430737:	c6 00 00             	movb   $0x0,(%rax)
  43073a:	83 bd d4 fd ff ff 00 	cmpl   $0x0,-0x22c(%rbp)
  430741:	74 2e                	je     430771 <pushline+0x122>
  430743:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430747:	0f b6 00             	movzbl (%rax),%eax
  43074a:	3c 3d                	cmp    $0x3d,%al
  43074c:	75 23                	jne    430771 <pushline+0x122>
  43074e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430752:	48 8d 50 01          	lea    0x1(%rax),%rdx
  430756:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  43075d:	be 63 2e 44 00       	mov    $0x442e63,%esi
  430762:	48 89 c7             	mov    %rax,%rdi
  430765:	b8 00 00 00 00       	mov    $0x0,%eax
  43076a:	e8 a3 27 fd ff       	callq  402f12 <lua_pushfstring>
  43076f:	eb 1a                	jmp    43078b <pushline+0x13c>
  430771:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  430775:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  430779:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  430780:	48 89 ce             	mov    %rcx,%rsi
  430783:	48 89 c7             	mov    %rax,%rdi
  430786:	e8 cc 25 fd ff       	callq  402d57 <lua_pushlstring>
  43078b:	b8 01 00 00 00       	mov    $0x1,%eax
  430790:	c9                   	leaveq 
  430791:	c3                   	retq   

0000000000430792 <addreturn>:
  430792:	55                   	push   %rbp
  430793:	48 89 e5             	mov    %rsp,%rbp
  430796:	48 83 ec 30          	sub    $0x30,%rsp
  43079a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  43079e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4307a2:	ba 00 00 00 00       	mov    $0x0,%edx
  4307a7:	be ff ff ff ff       	mov    $0xffffffff,%esi
  4307ac:	48 89 c7             	mov    %rax,%rdi
  4307af:	e8 b9 21 fd ff       	callq  40296d <lua_tolstring>
  4307b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4307b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4307bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4307c0:	be 6d 2e 44 00       	mov    $0x442e6d,%esi
  4307c5:	48 89 c7             	mov    %rax,%rdi
  4307c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4307cd:	e8 40 27 fd ff       	callq  402f12 <lua_pushfstring>
  4307d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4307d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4307da:	48 89 c7             	mov    %rax,%rdi
  4307dd:	e8 8e 0f fd ff       	callq  401770 <strlen@plt>
  4307e2:	48 89 c2             	mov    %rax,%rdx
  4307e5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4307e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4307ed:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4307f3:	b9 78 2e 44 00       	mov    $0x442e78,%ecx
  4307f8:	48 89 c7             	mov    %rax,%rdi
  4307fb:	e8 b0 6e fd ff       	callq  4076b0 <luaL_loadbufferx>
  430800:	89 45 ec             	mov    %eax,-0x14(%rbp)
  430803:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  430807:	75 29                	jne    430832 <addreturn+0xa0>
  430809:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43080d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  430812:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  430817:	48 89 c7             	mov    %rax,%rdi
  43081a:	e8 4f 19 fd ff       	callq  40216e <lua_rotate>
  43081f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430823:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  430828:	48 89 c7             	mov    %rax,%rdi
  43082b:	e8 54 17 fd ff       	callq  401f84 <lua_settop>
  430830:	eb 11                	jmp    430843 <addreturn+0xb1>
  430832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430836:	be fd ff ff ff       	mov    $0xfffffffd,%esi
  43083b:	48 89 c7             	mov    %rax,%rdi
  43083e:	e8 41 17 fd ff       	callq  401f84 <lua_settop>
  430843:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430846:	c9                   	leaveq 
  430847:	c3                   	retq   

0000000000430848 <multiline>:
  430848:	55                   	push   %rbp
  430849:	48 89 e5             	mov    %rsp,%rbp
  43084c:	48 83 ec 30          	sub    $0x30,%rsp
  430850:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  430854:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  430858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43085c:	be 01 00 00 00       	mov    $0x1,%esi
  430861:	48 89 c7             	mov    %rax,%rdi
  430864:	e8 04 21 fd ff       	callq  40296d <lua_tolstring>
  430869:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43086d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  430871:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  430875:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430879:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  43087f:	b9 78 2e 44 00       	mov    $0x442e78,%ecx
  430884:	48 89 c7             	mov    %rax,%rdi
  430887:	e8 24 6e fd ff       	callq  4076b0 <luaL_loadbufferx>
  43088c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  43088f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  430892:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430896:	89 d6                	mov    %edx,%esi
  430898:	48 89 c7             	mov    %rax,%rdi
  43089b:	e8 38 fd ff ff       	callq  4305d8 <incomplete>
  4308a0:	85 c0                	test   %eax,%eax
  4308a2:	74 15                	je     4308b9 <multiline+0x71>
  4308a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4308a8:	be 00 00 00 00       	mov    $0x0,%esi
  4308ad:	48 89 c7             	mov    %rax,%rdi
  4308b0:	e8 9a fd ff ff       	callq  43064f <pushline>
  4308b5:	85 c0                	test   %eax,%eax
  4308b7:	75 05                	jne    4308be <multiline+0x76>
  4308b9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4308bc:	eb 3d                	jmp    4308fb <multiline+0xb3>
  4308be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4308c2:	be d4 2d 44 00       	mov    $0x442dd4,%esi
  4308c7:	48 89 c7             	mov    %rax,%rdi
  4308ca:	e8 3f 25 fd ff       	callq  402e0e <lua_pushstring>
  4308cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4308d3:	ba 01 00 00 00       	mov    $0x1,%edx
  4308d8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4308dd:	48 89 c7             	mov    %rax,%rdi
  4308e0:	e8 89 18 fd ff       	callq  40216e <lua_rotate>
  4308e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4308e9:	be 03 00 00 00       	mov    $0x3,%esi
  4308ee:	48 89 c7             	mov    %rax,%rdi
  4308f1:	e8 47 48 fd ff       	callq  40513d <lua_concat>
  4308f6:	e9 59 ff ff ff       	jmpq   430854 <multiline+0xc>
  4308fb:	c9                   	leaveq 
  4308fc:	c3                   	retq   

00000000004308fd <loadline>:
  4308fd:	55                   	push   %rbp
  4308fe:	48 89 e5             	mov    %rsp,%rbp
  430901:	48 83 ec 20          	sub    $0x20,%rsp
  430905:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43090d:	be 00 00 00 00       	mov    $0x0,%esi
  430912:	48 89 c7             	mov    %rax,%rdi
  430915:	e8 6a 16 fd ff       	callq  401f84 <lua_settop>
  43091a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43091e:	be 01 00 00 00       	mov    $0x1,%esi
  430923:	48 89 c7             	mov    %rax,%rdi
  430926:	e8 24 fd ff ff       	callq  43064f <pushline>
  43092b:	85 c0                	test   %eax,%eax
  43092d:	75 07                	jne    430936 <loadline+0x39>
  43092f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  430934:	eb 4e                	jmp    430984 <loadline+0x87>
  430936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43093a:	48 89 c7             	mov    %rax,%rdi
  43093d:	e8 50 fe ff ff       	callq  430792 <addreturn>
  430942:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430945:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  430949:	74 0f                	je     43095a <loadline+0x5d>
  43094b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43094f:	48 89 c7             	mov    %rax,%rdi
  430952:	e8 f1 fe ff ff       	callq  430848 <multiline>
  430957:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43095a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43095e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  430963:	be 01 00 00 00       	mov    $0x1,%esi
  430968:	48 89 c7             	mov    %rax,%rdi
  43096b:	e8 fe 17 fd ff       	callq  40216e <lua_rotate>
  430970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430974:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  430979:	48 89 c7             	mov    %rax,%rdi
  43097c:	e8 03 16 fd ff       	callq  401f84 <lua_settop>
  430981:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430984:	c9                   	leaveq 
  430985:	c3                   	retq   

0000000000430986 <l_print>:
  430986:	55                   	push   %rbp
  430987:	48 89 e5             	mov    %rsp,%rbp
  43098a:	48 83 ec 20          	sub    $0x20,%rsp
  43098e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430996:	48 89 c7             	mov    %rax,%rdi
  430999:	e8 bb 15 fd ff       	callq  401f59 <lua_gettop>
  43099e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4309a1:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4309a5:	0f 8e aa 00 00 00    	jle    430a55 <l_print+0xcf>
  4309ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4309af:	ba 7f 2e 44 00       	mov    $0x442e7f,%edx
  4309b4:	be 14 00 00 00       	mov    $0x14,%esi
  4309b9:	48 89 c7             	mov    %rax,%rdi
  4309bc:	e8 0f 5d fd ff       	callq  4066d0 <luaL_checkstack>
  4309c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4309c5:	be 99 2e 44 00       	mov    $0x442e99,%esi
  4309ca:	48 89 c7             	mov    %rax,%rdi
  4309cd:	e8 a0 29 fd ff       	callq  403372 <lua_getglobal>
  4309d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4309d6:	ba 01 00 00 00       	mov    $0x1,%edx
  4309db:	be 01 00 00 00       	mov    $0x1,%esi
  4309e0:	48 89 c7             	mov    %rax,%rdi
  4309e3:	e8 86 17 fd ff       	callq  40216e <lua_rotate>
  4309e8:	8b 75 fc             	mov    -0x4(%rbp),%esi
  4309eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4309ef:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4309f5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4309fb:	b9 00 00 00 00       	mov    $0x0,%ecx
  430a00:	ba 00 00 00 00       	mov    $0x0,%edx
  430a05:	48 89 c7             	mov    %rax,%rdi
  430a08:	e8 b6 3b fd ff       	callq  4045c3 <lua_pcallk>
  430a0d:	85 c0                	test   %eax,%eax
  430a0f:	74 44                	je     430a55 <l_print+0xcf>
  430a11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430a15:	ba 00 00 00 00       	mov    $0x0,%edx
  430a1a:	be ff ff ff ff       	mov    $0xffffffff,%esi
  430a1f:	48 89 c7             	mov    %rax,%rdi
  430a22:	e8 46 1f fd ff       	callq  40296d <lua_tolstring>
  430a27:	48 89 c2             	mov    %rax,%rdx
  430a2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430a2e:	be 9f 2e 44 00       	mov    $0x442e9f,%esi
  430a33:	48 89 c7             	mov    %rax,%rdi
  430a36:	b8 00 00 00 00       	mov    $0x0,%eax
  430a3b:	e8 d2 24 fd ff       	callq  402f12 <lua_pushfstring>
  430a40:	48 89 c2             	mov    %rax,%rdx
  430a43:	48 8b 05 36 e8 21 00 	mov    0x21e836(%rip),%rax        # 64f280 <progname>
  430a4a:	48 89 d6             	mov    %rdx,%rsi
  430a4d:	48 89 c7             	mov    %rax,%rdi
  430a50:	e8 75 f0 ff ff       	callq  42faca <l_message>
  430a55:	90                   	nop
  430a56:	c9                   	leaveq 
  430a57:	c3                   	retq   

0000000000430a58 <doREPL>:
  430a58:	55                   	push   %rbp
  430a59:	48 89 e5             	mov    %rsp,%rbp
  430a5c:	48 83 ec 20          	sub    $0x20,%rsp
  430a60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430a64:	48 8b 05 15 e8 21 00 	mov    0x21e815(%rip),%rax        # 64f280 <progname>
  430a6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430a6f:	48 c7 05 06 e8 21 00 	movq   $0x0,0x21e806(%rip)        # 64f280 <progname>
  430a76:	00 00 00 00 
  430a7a:	eb 44                	jmp    430ac0 <doREPL+0x68>
  430a7c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  430a80:	75 19                	jne    430a9b <doREPL+0x43>
  430a82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430a86:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  430a8b:	be 00 00 00 00       	mov    $0x0,%esi
  430a90:	48 89 c7             	mov    %rax,%rdi
  430a93:	e8 c1 f1 ff ff       	callq  42fc59 <docall>
  430a98:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430a9b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  430a9f:	75 0e                	jne    430aaf <doREPL+0x57>
  430aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430aa5:	48 89 c7             	mov    %rax,%rdi
  430aa8:	e8 d9 fe ff ff       	callq  430986 <l_print>
  430aad:	eb 11                	jmp    430ac0 <doREPL+0x68>
  430aaf:	8b 55 fc             	mov    -0x4(%rbp),%edx
  430ab2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430ab6:	89 d6                	mov    %edx,%esi
  430ab8:	48 89 c7             	mov    %rax,%rdi
  430abb:	e8 7c f0 ff ff       	callq  42fb3c <report>
  430ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430ac4:	48 89 c7             	mov    %rax,%rdi
  430ac7:	e8 31 fe ff ff       	callq  4308fd <loadline>
  430acc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430acf:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  430ad3:	75 a7                	jne    430a7c <doREPL+0x24>
  430ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430ad9:	be 00 00 00 00       	mov    $0x0,%esi
  430ade:	48 89 c7             	mov    %rax,%rdi
  430ae1:	e8 9e 14 fd ff       	callq  401f84 <lua_settop>
  430ae6:	48 8b 05 b3 e7 21 00 	mov    0x21e7b3(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  430aed:	48 89 c1             	mov    %rax,%rcx
  430af0:	ba 01 00 00 00       	mov    $0x1,%edx
  430af5:	be 01 00 00 00       	mov    $0x1,%esi
  430afa:	bf d4 2d 44 00       	mov    $0x442dd4,%edi
  430aff:	e8 1c 10 fd ff       	callq  401b20 <fwrite@plt>
  430b04:	48 8b 05 95 e7 21 00 	mov    0x21e795(%rip),%rax        # 64f2a0 <stdout@@GLIBC_2.2.5>
  430b0b:	48 89 c7             	mov    %rax,%rdi
  430b0e:	e8 3d 0e fd ff       	callq  401950 <fflush@plt>
  430b13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430b17:	48 89 05 62 e7 21 00 	mov    %rax,0x21e762(%rip)        # 64f280 <progname>
  430b1e:	90                   	nop
  430b1f:	c9                   	leaveq 
  430b20:	c3                   	retq   

0000000000430b21 <pmain>:
  430b21:	55                   	push   %rbp
  430b22:	48 89 e5             	mov    %rsp,%rbp
  430b25:	48 83 ec 30          	sub    $0x30,%rsp
  430b29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  430b2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430b31:	ba 00 00 00 00       	mov    $0x0,%edx
  430b36:	be 01 00 00 00       	mov    $0x1,%esi
  430b3b:	48 89 c7             	mov    %rax,%rdi
  430b3e:	e8 52 1d fd ff       	callq  402895 <lua_tointegerx>
  430b43:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430b46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430b4a:	be 02 00 00 00       	mov    $0x2,%esi
  430b4f:	48 89 c7             	mov    %rax,%rdi
  430b52:	e8 60 20 fd ff       	callq  402bb7 <lua_touserdata>
  430b57:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430b5b:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  430b5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430b63:	48 89 d6             	mov    %rdx,%rsi
  430b66:	48 89 c7             	mov    %rax,%rdi
  430b69:	e8 9a f5 ff ff       	callq  430108 <collectargs>
  430b6e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  430b71:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430b74:	85 c0                	test   %eax,%eax
  430b76:	7e 05                	jle    430b7d <pmain+0x5c>
  430b78:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430b7b:	eb 03                	jmp    430b80 <pmain+0x5f>
  430b7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430b80:	89 45 e8             	mov    %eax,-0x18(%rbp)
  430b83:	f2 0f 10 05 65 23 01 	movsd  0x12365(%rip),%xmm0        # 442ef0 <luaT_eventname.3753+0x450>
  430b8a:	00 
  430b8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430b8f:	be 88 00 00 00       	mov    $0x88,%esi
  430b94:	48 89 c7             	mov    %rax,%rdi
  430b97:	e8 35 76 fd ff       	callq  4081d1 <luaL_checkversion_>
  430b9c:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  430ba0:	75 29                	jne    430bcb <pmain+0xaa>
  430ba2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430ba5:	48 98                	cltq   
  430ba7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430bae:	00 
  430baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430bb3:	48 01 d0             	add    %rdx,%rax
  430bb6:	48 8b 00             	mov    (%rax),%rax
  430bb9:	48 89 c7             	mov    %rax,%rdi
  430bbc:	e8 24 ee ff ff       	callq  42f9e5 <print_usage>
  430bc1:	b8 00 00 00 00       	mov    $0x0,%eax
  430bc6:	e9 65 01 00 00       	jmpq   430d30 <pmain+0x20f>
  430bcb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430bce:	83 e0 04             	and    $0x4,%eax
  430bd1:	85 c0                	test   %eax,%eax
  430bd3:	74 05                	je     430bda <pmain+0xb9>
  430bd5:	e8 48 f1 ff ff       	callq  42fd22 <print_version>
  430bda:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430bdd:	83 e0 10             	and    $0x10,%eax
  430be0:	85 c0                	test   %eax,%eax
  430be2:	74 27                	je     430c0b <pmain+0xea>
  430be4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430be8:	be 01 00 00 00       	mov    $0x1,%esi
  430bed:	48 89 c7             	mov    %rax,%rdi
  430bf0:	e8 43 25 fd ff       	callq  403138 <lua_pushboolean>
  430bf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430bf9:	ba ba 2e 44 00       	mov    $0x442eba,%edx
  430bfe:	be d8 b9 f0 ff       	mov    $0xfff0b9d8,%esi
  430c03:	48 89 c7             	mov    %rax,%rdi
  430c06:	e8 c7 31 fd ff       	callq  403dd2 <lua_setfield>
  430c0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c0f:	48 89 c7             	mov    %rax,%rdi
  430c12:	e8 8e 78 fe ff       	callq  4184a5 <luaL_openlibs>
  430c17:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  430c1a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  430c1d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  430c21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c25:	48 89 c7             	mov    %rax,%rdi
  430c28:	e8 47 f1 ff ff       	callq  42fd74 <createargtable>
  430c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c31:	be 01 00 00 00       	mov    $0x1,%esi
  430c36:	48 89 c7             	mov    %rax,%rdi
  430c39:	b8 00 00 00 00       	mov    $0x0,%eax
  430c3e:	e8 26 3d fd ff       	callq  404969 <lua_gc>
  430c43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c47:	b9 00 00 00 00       	mov    $0x0,%ecx
  430c4c:	ba 00 00 00 00       	mov    $0x0,%edx
  430c51:	be 0a 00 00 00       	mov    $0xa,%esi
  430c56:	48 89 c7             	mov    %rax,%rdi
  430c59:	b8 00 00 00 00       	mov    $0x0,%eax
  430c5e:	e8 06 3d fd ff       	callq  404969 <lua_gc>
  430c63:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430c66:	83 e0 10             	and    $0x10,%eax
  430c69:	85 c0                	test   %eax,%eax
  430c6b:	75 1a                	jne    430c87 <pmain+0x166>
  430c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c71:	48 89 c7             	mov    %rax,%rdi
  430c74:	e8 3a f8 ff ff       	callq  4304b3 <handle_luainit>
  430c79:	85 c0                	test   %eax,%eax
  430c7b:	74 0a                	je     430c87 <pmain+0x166>
  430c7d:	b8 00 00 00 00       	mov    $0x0,%eax
  430c82:	e9 a9 00 00 00       	jmpq   430d30 <pmain+0x20f>
  430c87:	8b 55 e8             	mov    -0x18(%rbp),%edx
  430c8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  430c8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430c92:	48 89 ce             	mov    %rcx,%rsi
  430c95:	48 89 c7             	mov    %rax,%rdi
  430c98:	e8 fc f6 ff ff       	callq  430399 <runargs>
  430c9d:	85 c0                	test   %eax,%eax
  430c9f:	75 0a                	jne    430cab <pmain+0x18a>
  430ca1:	b8 00 00 00 00       	mov    $0x0,%eax
  430ca6:	e9 85 00 00 00       	jmpq   430d30 <pmain+0x20f>
  430cab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430cae:	85 c0                	test   %eax,%eax
  430cb0:	7e 2e                	jle    430ce0 <pmain+0x1bf>
  430cb2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430cb5:	48 98                	cltq   
  430cb7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  430cbe:	00 
  430cbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430cc3:	48 01 c2             	add    %rax,%rdx
  430cc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430cca:	48 89 d6             	mov    %rdx,%rsi
  430ccd:	48 89 c7             	mov    %rax,%rdi
  430cd0:	e8 83 f3 ff ff       	callq  430058 <handle_script>
  430cd5:	85 c0                	test   %eax,%eax
  430cd7:	74 07                	je     430ce0 <pmain+0x1bf>
  430cd9:	b8 00 00 00 00       	mov    $0x0,%eax
  430cde:	eb 50                	jmp    430d30 <pmain+0x20f>
  430ce0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430ce3:	83 e0 02             	and    $0x2,%eax
  430ce6:	85 c0                	test   %eax,%eax
  430ce8:	74 0e                	je     430cf8 <pmain+0x1d7>
  430cea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430cee:	48 89 c7             	mov    %rax,%rdi
  430cf1:	e8 62 fd ff ff       	callq  430a58 <doREPL>
  430cf6:	eb 22                	jmp    430d1a <pmain+0x1f9>
  430cf8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  430cfb:	85 c0                	test   %eax,%eax
  430cfd:	7f 1b                	jg     430d1a <pmain+0x1f9>
  430cff:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430d02:	83 e0 0c             	and    $0xc,%eax
  430d05:	85 c0                	test   %eax,%eax
  430d07:	75 11                	jne    430d1a <pmain+0x1f9>
  430d09:	e8 14 f0 ff ff       	callq  42fd22 <print_version>
  430d0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430d12:	48 89 c7             	mov    %rax,%rdi
  430d15:	e8 3e fd ff ff       	callq  430a58 <doREPL>
  430d1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  430d1e:	be 01 00 00 00       	mov    $0x1,%esi
  430d23:	48 89 c7             	mov    %rax,%rdi
  430d26:	e8 0d 24 fd ff       	callq  403138 <lua_pushboolean>
  430d2b:	b8 01 00 00 00       	mov    $0x1,%eax
  430d30:	c9                   	leaveq 
  430d31:	c3                   	retq   

0000000000430d32 <lua_main>:
  430d32:	55                   	push   %rbp
  430d33:	48 89 e5             	mov    %rsp,%rbp
  430d36:	48 83 ec 20          	sub    $0x20,%rsp
  430d3a:	89 7d ec             	mov    %edi,-0x14(%rbp)
  430d3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  430d41:	e8 34 74 fd ff       	callq  40817a <luaL_newstate>
  430d46:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  430d4a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  430d4f:	75 1e                	jne    430d6f <lua_main+0x3d>
  430d51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430d55:	48 8b 00             	mov    (%rax),%rax
  430d58:	be c8 2e 44 00       	mov    $0x442ec8,%esi
  430d5d:	48 89 c7             	mov    %rax,%rdi
  430d60:	e8 65 ed ff ff       	callq  42faca <l_message>
  430d65:	b8 01 00 00 00       	mov    $0x1,%eax
  430d6a:	e9 c7 00 00 00       	jmpq   430e36 <lua_main+0x104>
  430d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430d73:	be 00 00 00 00       	mov    $0x0,%esi
  430d78:	48 89 c7             	mov    %rax,%rdi
  430d7b:	b8 00 00 00 00       	mov    $0x0,%eax
  430d80:	e8 e4 3b fd ff       	callq  404969 <lua_gc>
  430d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430d89:	ba 00 00 00 00       	mov    $0x0,%edx
  430d8e:	be 21 0b 43 00       	mov    $0x430b21,%esi
  430d93:	48 89 c7             	mov    %rax,%rdi
  430d96:	e8 50 22 fd ff       	callq  402feb <lua_pushcclosure>
  430d9b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430d9e:	48 63 d0             	movslq %eax,%rdx
  430da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430da5:	48 89 d6             	mov    %rdx,%rsi
  430da8:	48 89 c7             	mov    %rax,%rdi
  430dab:	e8 65 1f fd ff       	callq  402d15 <lua_pushinteger>
  430db0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  430db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430db8:	48 89 d6             	mov    %rdx,%rsi
  430dbb:	48 89 c7             	mov    %rax,%rdi
  430dbe:	e8 b7 23 fd ff       	callq  40317a <lua_pushlightuserdata>
  430dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430dc7:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  430dcd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  430dd3:	b9 00 00 00 00       	mov    $0x0,%ecx
  430dd8:	ba 01 00 00 00       	mov    $0x1,%edx
  430ddd:	be 02 00 00 00       	mov    $0x2,%esi
  430de2:	48 89 c7             	mov    %rax,%rdi
  430de5:	e8 d9 37 fd ff       	callq  4045c3 <lua_pcallk>
  430dea:	89 45 f4             	mov    %eax,-0xc(%rbp)
  430ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430df1:	be ff ff ff ff       	mov    $0xffffffff,%esi
  430df6:	48 89 c7             	mov    %rax,%rdi
  430df9:	e8 1f 1b fd ff       	callq  40291d <lua_toboolean>
  430dfe:	89 45 f0             	mov    %eax,-0x10(%rbp)
  430e01:	8b 55 f4             	mov    -0xc(%rbp),%edx
  430e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e08:	89 d6                	mov    %edx,%esi
  430e0a:	48 89 c7             	mov    %rax,%rdi
  430e0d:	e8 2a ed ff ff       	callq  42fb3c <report>
  430e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e16:	48 89 c7             	mov    %rax,%rdi
  430e19:	e8 e5 58 ff ff       	callq  426703 <lua_close>
  430e1e:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  430e22:	74 06                	je     430e2a <lua_main+0xf8>
  430e24:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  430e28:	74 07                	je     430e31 <lua_main+0xff>
  430e2a:	b8 01 00 00 00       	mov    $0x1,%eax
  430e2f:	eb 05                	jmp    430e36 <lua_main+0x104>
  430e31:	b8 00 00 00 00       	mov    $0x0,%eax
  430e36:	c9                   	leaveq 
  430e37:	c3                   	retq   

0000000000430e38 <error>:
  430e38:	55                   	push   %rbp
  430e39:	48 89 e5             	mov    %rsp,%rbp
  430e3c:	48 83 ec 10          	sub    $0x10,%rsp
  430e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  430e44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  430e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e4c:	48 8b 50 10          	mov    0x10(%rax),%rdx
  430e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e54:	48 8b 00             	mov    (%rax),%rax
  430e57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  430e5b:	be f8 2e 44 00       	mov    $0x442ef8,%esi
  430e60:	48 89 c7             	mov    %rax,%rdi
  430e63:	b8 00 00 00 00       	mov    $0x0,%eax
  430e68:	e8 f2 ed fe ff       	callq  41fc5f <luaO_pushfstring>
  430e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e71:	48 8b 00             	mov    (%rax),%rax
  430e74:	be 03 00 00 00       	mov    $0x3,%esi
  430e79:	48 89 c7             	mov    %rax,%rdi
  430e7c:	e8 f8 02 fe ff       	callq  411179 <luaD_throw>

0000000000430e81 <loadBlock>:
  430e81:	55                   	push   %rbp
  430e82:	48 89 e5             	mov    %rsp,%rbp
  430e85:	48 83 ec 20          	sub    $0x20,%rsp
  430e89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  430e8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  430e91:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  430e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430e99:	48 8b 40 08          	mov    0x8(%rax),%rax
  430e9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  430ea1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  430ea5:	48 89 ce             	mov    %rcx,%rsi
  430ea8:	48 89 c7             	mov    %rax,%rdi
  430eab:	e8 ab bc 00 00       	callq  43cb5b <luaZ_read>
  430eb0:	48 85 c0             	test   %rax,%rax
  430eb3:	74 11                	je     430ec6 <loadBlock+0x45>
  430eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430eb9:	be 13 2f 44 00       	mov    $0x442f13,%esi
  430ebe:	48 89 c7             	mov    %rax,%rdi
  430ec1:	e8 72 ff ff ff       	callq  430e38 <error>
  430ec6:	90                   	nop
  430ec7:	c9                   	leaveq 
  430ec8:	c3                   	retq   

0000000000430ec9 <loadByte>:
  430ec9:	55                   	push   %rbp
  430eca:	48 89 e5             	mov    %rsp,%rbp
  430ecd:	48 83 ec 20          	sub    $0x20,%rsp
  430ed1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430ed5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430ed9:	48 8b 50 08          	mov    0x8(%rax),%rdx
  430edd:	48 8b 02             	mov    (%rdx),%rax
  430ee0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  430ee4:	48 89 0a             	mov    %rcx,(%rdx)
  430ee7:	48 85 c0             	test   %rax,%rax
  430eea:	74 1c                	je     430f08 <loadByte+0x3f>
  430eec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430ef0:	48 8b 50 08          	mov    0x8(%rax),%rdx
  430ef4:	48 8b 42 08          	mov    0x8(%rdx),%rax
  430ef8:	48 8d 48 01          	lea    0x1(%rax),%rcx
  430efc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  430f00:	0f b6 00             	movzbl (%rax),%eax
  430f03:	0f b6 c0             	movzbl %al,%eax
  430f06:	eb 10                	jmp    430f18 <loadByte+0x4f>
  430f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430f0c:	48 8b 40 08          	mov    0x8(%rax),%rax
  430f10:	48 89 c7             	mov    %rax,%rdi
  430f13:	e8 6a bb 00 00       	callq  43ca82 <luaZ_fill>
  430f18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430f1b:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  430f1f:	75 11                	jne    430f32 <loadByte+0x69>
  430f21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430f25:	be 13 2f 44 00       	mov    $0x442f13,%esi
  430f2a:	48 89 c7             	mov    %rax,%rdi
  430f2d:	e8 06 ff ff ff       	callq  430e38 <error>
  430f32:	8b 45 fc             	mov    -0x4(%rbp),%eax
  430f35:	c9                   	leaveq 
  430f36:	c3                   	retq   

0000000000430f37 <loadUnsigned>:
  430f37:	55                   	push   %rbp
  430f38:	48 89 e5             	mov    %rsp,%rbp
  430f3b:	48 83 ec 20          	sub    $0x20,%rsp
  430f3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430f43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  430f47:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  430f4e:	00 
  430f4f:	48 c1 6d e0 07       	shrq   $0x7,-0x20(%rbp)
  430f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430f58:	48 89 c7             	mov    %rax,%rdi
  430f5b:	e8 69 ff ff ff       	callq  430ec9 <loadByte>
  430f60:	0f b6 c0             	movzbl %al,%eax
  430f63:	89 45 f4             	mov    %eax,-0xc(%rbp)
  430f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430f6a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  430f6e:	72 11                	jb     430f81 <loadUnsigned+0x4a>
  430f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  430f74:	be 23 2f 44 00       	mov    $0x442f23,%esi
  430f79:	48 89 c7             	mov    %rax,%rdi
  430f7c:	e8 b7 fe ff ff       	callq  430e38 <error>
  430f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430f85:	48 c1 e0 07          	shl    $0x7,%rax
  430f89:	48 89 c2             	mov    %rax,%rdx
  430f8c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  430f8f:	48 98                	cltq   
  430f91:	83 e0 7f             	and    $0x7f,%eax
  430f94:	48 09 d0             	or     %rdx,%rax
  430f97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  430f9b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  430f9e:	25 80 00 00 00       	and    $0x80,%eax
  430fa3:	85 c0                	test   %eax,%eax
  430fa5:	74 ad                	je     430f54 <loadUnsigned+0x1d>
  430fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430fab:	c9                   	leaveq 
  430fac:	c3                   	retq   

0000000000430fad <loadSize>:
  430fad:	55                   	push   %rbp
  430fae:	48 89 e5             	mov    %rsp,%rbp
  430fb1:	48 83 ec 10          	sub    $0x10,%rsp
  430fb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  430fb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430fbd:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
  430fc4:	48 89 c7             	mov    %rax,%rdi
  430fc7:	e8 6b ff ff ff       	callq  430f37 <loadUnsigned>
  430fcc:	c9                   	leaveq 
  430fcd:	c3                   	retq   

0000000000430fce <loadInt>:
  430fce:	55                   	push   %rbp
  430fcf:	48 89 e5             	mov    %rsp,%rbp
  430fd2:	48 83 ec 10          	sub    $0x10,%rsp
  430fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  430fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430fde:	be ff ff ff 7f       	mov    $0x7fffffff,%esi
  430fe3:	48 89 c7             	mov    %rax,%rdi
  430fe6:	e8 4c ff ff ff       	callq  430f37 <loadUnsigned>
  430feb:	c9                   	leaveq 
  430fec:	c3                   	retq   

0000000000430fed <loadNumber>:
  430fed:	55                   	push   %rbp
  430fee:	48 89 e5             	mov    %rsp,%rbp
  430ff1:	48 83 ec 20          	sub    $0x20,%rsp
  430ff5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  430ff9:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  430ffd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  431001:	ba 08 00 00 00       	mov    $0x8,%edx
  431006:	48 89 ce             	mov    %rcx,%rsi
  431009:	48 89 c7             	mov    %rax,%rdi
  43100c:	e8 70 fe ff ff       	callq  430e81 <loadBlock>
  431011:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  431016:	c9                   	leaveq 
  431017:	c3                   	retq   

0000000000431018 <loadInteger>:
  431018:	55                   	push   %rbp
  431019:	48 89 e5             	mov    %rsp,%rbp
  43101c:	48 83 ec 20          	sub    $0x20,%rsp
  431020:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  431024:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  431028:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43102c:	ba 08 00 00 00       	mov    $0x8,%edx
  431031:	48 89 ce             	mov    %rcx,%rsi
  431034:	48 89 c7             	mov    %rax,%rdi
  431037:	e8 45 fe ff ff       	callq  430e81 <loadBlock>
  43103c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431040:	c9                   	leaveq 
  431041:	c3                   	retq   

0000000000431042 <loadStringN>:
  431042:	55                   	push   %rbp
  431043:	48 89 e5             	mov    %rsp,%rbp
  431046:	48 83 ec 60          	sub    $0x60,%rsp
  43104a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  43104e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  431052:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431056:	48 8b 00             	mov    (%rax),%rax
  431059:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  43105d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431061:	48 89 c7             	mov    %rax,%rdi
  431064:	e8 44 ff ff ff       	callq  430fad <loadSize>
  431069:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43106d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  431072:	75 0a                	jne    43107e <loadStringN+0x3c>
  431074:	b8 00 00 00 00       	mov    $0x0,%eax
  431079:	e9 07 01 00 00       	jmpq   431185 <loadStringN+0x143>
  43107e:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
  431083:	48 83 7d e8 28       	cmpq   $0x28,-0x18(%rbp)
  431088:	77 37                	ja     4310c1 <loadStringN+0x7f>
  43108a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  43108e:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  431092:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431096:	48 89 ce             	mov    %rcx,%rsi
  431099:	48 89 c7             	mov    %rax,%rdi
  43109c:	e8 e0 fd ff ff       	callq  430e81 <loadBlock>
  4310a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4310a5:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  4310a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4310ad:	48 89 ce             	mov    %rcx,%rsi
  4310b0:	48 89 c7             	mov    %rax,%rdi
  4310b3:	e8 63 5f ff ff       	callq  42701b <luaS_newlstr>
  4310b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4310bc:	e9 85 00 00 00       	jmpq   431146 <loadStringN+0x104>
  4310c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4310c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4310c9:	48 89 d6             	mov    %rdx,%rsi
  4310cc:	48 89 c7             	mov    %rax,%rdi
  4310cf:	e8 4b 5c ff ff       	callq  426d1f <luaS_createlngstrobj>
  4310d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4310d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4310dc:	48 8b 40 10          	mov    0x10(%rax),%rax
  4310e0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4310e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4310e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4310ec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4310f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4310f4:	48 89 10             	mov    %rdx,(%rax)
  4310f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4310fb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4310ff:	83 c8 40             	or     $0x40,%eax
  431102:	89 c2                	mov    %eax,%edx
  431104:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431108:	88 50 08             	mov    %dl,0x8(%rax)
  43110b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43110f:	48 89 c7             	mov    %rax,%rdi
  431112:	e8 50 07 fe ff       	callq  411867 <luaD_inctop>
  431117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43111b:	48 8d 48 18          	lea    0x18(%rax),%rcx
  43111f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  431123:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431127:	48 89 ce             	mov    %rcx,%rsi
  43112a:	48 89 c7             	mov    %rax,%rdi
  43112d:	e8 4f fd ff ff       	callq  430e81 <loadBlock>
  431132:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431136:	48 8b 40 10          	mov    0x10(%rax),%rax
  43113a:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  43113e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431142:	48 89 50 10          	mov    %rdx,0x10(%rax)
  431146:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  43114a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43114e:	0f b6 c0             	movzbl %al,%eax
  431151:	83 e0 20             	and    $0x20,%eax
  431154:	85 c0                	test   %eax,%eax
  431156:	74 29                	je     431181 <loadStringN+0x13f>
  431158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43115c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  431160:	0f b6 c0             	movzbl %al,%eax
  431163:	83 e0 18             	and    $0x18,%eax
  431166:	85 c0                	test   %eax,%eax
  431168:	74 17                	je     431181 <loadStringN+0x13f>
  43116a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43116e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  431172:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431176:	48 89 ce             	mov    %rcx,%rsi
  431179:	48 89 c7             	mov    %rax,%rdi
  43117c:	e8 ce 38 fe ff       	callq  414a4f <luaC_barrier_>
  431181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431185:	c9                   	leaveq 
  431186:	c3                   	retq   

0000000000431187 <loadString>:
  431187:	55                   	push   %rbp
  431188:	48 89 e5             	mov    %rsp,%rbp
  43118b:	48 83 ec 20          	sub    $0x20,%rsp
  43118f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  431193:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  431197:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  43119b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43119f:	48 89 d6             	mov    %rdx,%rsi
  4311a2:	48 89 c7             	mov    %rax,%rdi
  4311a5:	e8 98 fe ff ff       	callq  431042 <loadStringN>
  4311aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4311ae:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4311b3:	75 11                	jne    4311c6 <loadString+0x3f>
  4311b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4311b9:	be 38 2f 44 00       	mov    $0x442f38,%esi
  4311be:	48 89 c7             	mov    %rax,%rdi
  4311c1:	e8 72 fc ff ff       	callq  430e38 <error>
  4311c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4311ca:	c9                   	leaveq 
  4311cb:	c3                   	retq   

00000000004311cc <loadCode>:
  4311cc:	55                   	push   %rbp
  4311cd:	48 89 e5             	mov    %rsp,%rbp
  4311d0:	48 83 ec 20          	sub    $0x20,%rsp
  4311d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4311d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4311dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4311e0:	48 89 c7             	mov    %rax,%rdi
  4311e3:	e8 e6 fd ff ff       	callq  430fce <loadInt>
  4311e8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4311eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4311ee:	48 98                	cltq   
  4311f0:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  4311f7:	00 
  4311f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4311fc:	48 8b 00             	mov    (%rax),%rax
  4311ff:	ba 00 00 00 00       	mov    $0x0,%edx
  431204:	48 89 ce             	mov    %rcx,%rsi
  431207:	48 89 c7             	mov    %rax,%rdi
  43120a:	e8 70 c0 fe ff       	callq  41d27f <luaM_malloc_>
  43120f:	48 89 c2             	mov    %rax,%rdx
  431212:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431216:	48 89 50 40          	mov    %rdx,0x40(%rax)
  43121a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43121e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  431221:	89 50 18             	mov    %edx,0x18(%rax)
  431224:	8b 45 fc             	mov    -0x4(%rbp),%eax
  431227:	48 98                	cltq   
  431229:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  431230:	00 
  431231:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431235:	48 8b 48 40          	mov    0x40(%rax),%rcx
  431239:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43123d:	48 89 ce             	mov    %rcx,%rsi
  431240:	48 89 c7             	mov    %rax,%rdi
  431243:	e8 39 fc ff ff       	callq  430e81 <loadBlock>
  431248:	90                   	nop
  431249:	c9                   	leaveq 
  43124a:	c3                   	retq   

000000000043124b <loadConstants>:
  43124b:	55                   	push   %rbp
  43124c:	48 89 e5             	mov    %rsp,%rbp
  43124f:	48 83 ec 50          	sub    $0x50,%rsp
  431253:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  431257:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  43125b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43125f:	48 89 c7             	mov    %rax,%rdi
  431262:	e8 67 fd ff ff       	callq  430fce <loadInt>
  431267:	89 45 f8             	mov    %eax,-0x8(%rbp)
  43126a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  43126d:	48 98                	cltq   
  43126f:	48 c1 e0 04          	shl    $0x4,%rax
  431273:	48 89 c1             	mov    %rax,%rcx
  431276:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43127a:	48 8b 00             	mov    (%rax),%rax
  43127d:	ba 00 00 00 00       	mov    $0x0,%edx
  431282:	48 89 ce             	mov    %rcx,%rsi
  431285:	48 89 c7             	mov    %rax,%rdi
  431288:	e8 f2 bf fe ff       	callq  41d27f <luaM_malloc_>
  43128d:	48 89 c2             	mov    %rax,%rdx
  431290:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  431294:	48 89 50 38          	mov    %rdx,0x38(%rax)
  431298:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43129c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  43129f:	89 50 14             	mov    %edx,0x14(%rax)
  4312a2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4312a9:	eb 1d                	jmp    4312c8 <loadConstants+0x7d>
  4312ab:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4312af:	48 8b 40 38          	mov    0x38(%rax),%rax
  4312b3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4312b6:	48 63 d2             	movslq %edx,%rdx
  4312b9:	48 c1 e2 04          	shl    $0x4,%rdx
  4312bd:	48 01 d0             	add    %rdx,%rax
  4312c0:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  4312c4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4312c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4312cb:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4312ce:	7c db                	jl     4312ab <loadConstants+0x60>
  4312d0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4312d7:	e9 fe 00 00 00       	jmpq   4313da <loadConstants+0x18f>
  4312dc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4312e0:	48 8b 40 38          	mov    0x38(%rax),%rax
  4312e4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4312e7:	48 63 d2             	movslq %edx,%rdx
  4312ea:	48 c1 e2 04          	shl    $0x4,%rdx
  4312ee:	48 01 d0             	add    %rdx,%rax
  4312f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4312f5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4312f9:	48 89 c7             	mov    %rax,%rdi
  4312fc:	e8 c8 fb ff ff       	callq  430ec9 <loadByte>
  431301:	0f b6 c0             	movzbl %al,%eax
  431304:	89 45 ec             	mov    %eax,-0x14(%rbp)
  431307:	83 7d ec 14          	cmpl   $0x14,-0x14(%rbp)
  43130b:	0f 87 c5 00 00 00    	ja     4313d6 <loadConstants+0x18b>
  431311:	8b 45 ec             	mov    -0x14(%rbp),%eax
  431314:	48 8b 04 c5 58 2f 44 	mov    0x442f58(,%rax,8),%rax
  43131b:	00 
  43131c:	ff e0                	jmpq   *%rax
  43131e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431322:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  431326:	e9 ab 00 00 00       	jmpq   4313d6 <loadConstants+0x18b>
  43132b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43132f:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  431333:	e9 9e 00 00 00       	jmpq   4313d6 <loadConstants+0x18b>
  431338:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43133c:	c6 40 08 11          	movb   $0x11,0x8(%rax)
  431340:	e9 91 00 00 00       	jmpq   4313d6 <loadConstants+0x18b>
  431345:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431349:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43134d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431351:	48 89 c7             	mov    %rax,%rdi
  431354:	e8 94 fc ff ff       	callq  430fed <loadNumber>
  431359:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  43135e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431362:	48 89 10             	mov    %rdx,(%rax)
  431365:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431369:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  43136d:	eb 67                	jmp    4313d6 <loadConstants+0x18b>
  43136f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431373:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  431377:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43137b:	48 89 c7             	mov    %rax,%rdi
  43137e:	e8 95 fc ff ff       	callq  431018 <loadInteger>
  431383:	48 89 c2             	mov    %rax,%rdx
  431386:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43138a:	48 89 10             	mov    %rdx,(%rax)
  43138d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431391:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  431395:	eb 3f                	jmp    4313d6 <loadConstants+0x18b>
  431397:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43139b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43139f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4313a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4313a7:	48 89 d6             	mov    %rdx,%rsi
  4313aa:	48 89 c7             	mov    %rax,%rdi
  4313ad:	e8 d5 fd ff ff       	callq  431187 <loadString>
  4313b2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4313b6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4313ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4313be:	48 89 10             	mov    %rdx,(%rax)
  4313c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4313c5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4313c9:	83 c8 40             	or     $0x40,%eax
  4313cc:	89 c2                	mov    %eax,%edx
  4313ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4313d2:	88 50 08             	mov    %dl,0x8(%rax)
  4313d5:	90                   	nop
  4313d6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4313da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4313dd:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4313e0:	0f 8c f6 fe ff ff    	jl     4312dc <loadConstants+0x91>
  4313e6:	90                   	nop
  4313e7:	c9                   	leaveq 
  4313e8:	c3                   	retq   

00000000004313e9 <loadProtos>:
  4313e9:	55                   	push   %rbp
  4313ea:	48 89 e5             	mov    %rsp,%rbp
  4313ed:	53                   	push   %rbx
  4313ee:	48 83 ec 28          	sub    $0x28,%rsp
  4313f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4313f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4313fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4313fe:	48 89 c7             	mov    %rax,%rdi
  431401:	e8 c8 fb ff ff       	callq  430fce <loadInt>
  431406:	89 45 e8             	mov    %eax,-0x18(%rbp)
  431409:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43140c:	48 98                	cltq   
  43140e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  431415:	00 
  431416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43141a:	48 8b 00             	mov    (%rax),%rax
  43141d:	ba 00 00 00 00       	mov    $0x0,%edx
  431422:	48 89 ce             	mov    %rcx,%rsi
  431425:	48 89 c7             	mov    %rax,%rdi
  431428:	e8 52 be fe ff       	callq  41d27f <luaM_malloc_>
  43142d:	48 89 c2             	mov    %rax,%rdx
  431430:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431434:	48 89 50 48          	mov    %rdx,0x48(%rax)
  431438:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43143c:	8b 55 e8             	mov    -0x18(%rbp),%edx
  43143f:	89 50 20             	mov    %edx,0x20(%rax)
  431442:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  431449:	eb 20                	jmp    43146b <loadProtos+0x82>
  43144b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43144f:	48 8b 40 48          	mov    0x48(%rax),%rax
  431453:	8b 55 ec             	mov    -0x14(%rbp),%edx
  431456:	48 63 d2             	movslq %edx,%rdx
  431459:	48 c1 e2 03          	shl    $0x3,%rdx
  43145d:	48 01 d0             	add    %rdx,%rax
  431460:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  431467:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  43146b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43146e:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  431471:	7c d8                	jl     43144b <loadProtos+0x62>
  431473:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  43147a:	e9 c4 00 00 00       	jmpq   431543 <loadProtos+0x15a>
  43147f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431483:	48 8b 00             	mov    (%rax),%rax
  431486:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  43148a:	48 8b 52 48          	mov    0x48(%rdx),%rdx
  43148e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  431491:	48 63 c9             	movslq %ecx,%rcx
  431494:	48 c1 e1 03          	shl    $0x3,%rcx
  431498:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
  43149c:	48 89 c7             	mov    %rax,%rdi
  43149f:	e8 8f 31 fe ff       	callq  414633 <luaF_newproto>
  4314a4:	48 89 03             	mov    %rax,(%rbx)
  4314a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4314ab:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4314af:	0f b6 c0             	movzbl %al,%eax
  4314b2:	83 e0 20             	and    $0x20,%eax
  4314b5:	85 c0                	test   %eax,%eax
  4314b7:	74 57                	je     431510 <loadProtos+0x127>
  4314b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4314bd:	48 8b 40 48          	mov    0x48(%rax),%rax
  4314c1:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4314c4:	48 63 d2             	movslq %edx,%rdx
  4314c7:	48 c1 e2 03          	shl    $0x3,%rdx
  4314cb:	48 01 d0             	add    %rdx,%rax
  4314ce:	48 8b 00             	mov    (%rax),%rax
  4314d1:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4314d5:	0f b6 c0             	movzbl %al,%eax
  4314d8:	83 e0 18             	and    $0x18,%eax
  4314db:	85 c0                	test   %eax,%eax
  4314dd:	74 31                	je     431510 <loadProtos+0x127>
  4314df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4314e3:	48 8b 40 48          	mov    0x48(%rax),%rax
  4314e7:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4314ea:	48 63 d2             	movslq %edx,%rdx
  4314ed:	48 c1 e2 03          	shl    $0x3,%rdx
  4314f1:	48 01 d0             	add    %rdx,%rax
  4314f4:	48 8b 00             	mov    (%rax),%rax
  4314f7:	48 89 c2             	mov    %rax,%rdx
  4314fa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4314fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431502:	48 8b 00             	mov    (%rax),%rax
  431505:	48 89 ce             	mov    %rcx,%rsi
  431508:	48 89 c7             	mov    %rax,%rdi
  43150b:	e8 3f 35 fe ff       	callq  414a4f <luaC_barrier_>
  431510:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431514:	48 8b 50 70          	mov    0x70(%rax),%rdx
  431518:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43151c:	48 8b 40 48          	mov    0x48(%rax),%rax
  431520:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  431523:	48 63 c9             	movslq %ecx,%rcx
  431526:	48 c1 e1 03          	shl    $0x3,%rcx
  43152a:	48 01 c8             	add    %rcx,%rax
  43152d:	48 8b 08             	mov    (%rax),%rcx
  431530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431534:	48 89 ce             	mov    %rcx,%rsi
  431537:	48 89 c7             	mov    %rax,%rdi
  43153a:	e8 b1 03 00 00       	callq  4318f0 <loadFunction>
  43153f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  431543:	8b 45 ec             	mov    -0x14(%rbp),%eax
  431546:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  431549:	0f 8c 30 ff ff ff    	jl     43147f <loadProtos+0x96>
  43154f:	90                   	nop
  431550:	48 83 c4 28          	add    $0x28,%rsp
  431554:	5b                   	pop    %rbx
  431555:	5d                   	pop    %rbp
  431556:	c3                   	retq   

0000000000431557 <loadUpvalues>:
  431557:	55                   	push   %rbp
  431558:	48 89 e5             	mov    %rsp,%rbp
  43155b:	53                   	push   %rbx
  43155c:	48 83 ec 28          	sub    $0x28,%rsp
  431560:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  431564:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  431568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43156c:	48 89 c7             	mov    %rax,%rdi
  43156f:	e8 5a fa ff ff       	callq  430fce <loadInt>
  431574:	89 45 e8             	mov    %eax,-0x18(%rbp)
  431577:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43157a:	48 98                	cltq   
  43157c:	48 c1 e0 04          	shl    $0x4,%rax
  431580:	48 89 c1             	mov    %rax,%rcx
  431583:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431587:	48 8b 00             	mov    (%rax),%rax
  43158a:	ba 00 00 00 00       	mov    $0x0,%edx
  43158f:	48 89 ce             	mov    %rcx,%rsi
  431592:	48 89 c7             	mov    %rax,%rdi
  431595:	e8 e5 bc fe ff       	callq  41d27f <luaM_malloc_>
  43159a:	48 89 c2             	mov    %rax,%rdx
  43159d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4315a1:	48 89 50 50          	mov    %rdx,0x50(%rax)
  4315a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4315a9:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4315ac:	89 50 10             	mov    %edx,0x10(%rax)
  4315af:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4315b6:	eb 20                	jmp    4315d8 <loadUpvalues+0x81>
  4315b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4315bc:	48 8b 40 50          	mov    0x50(%rax),%rax
  4315c0:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4315c3:	48 63 d2             	movslq %edx,%rdx
  4315c6:	48 c1 e2 04          	shl    $0x4,%rdx
  4315ca:	48 01 d0             	add    %rdx,%rax
  4315cd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4315d4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4315d8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4315db:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  4315de:	7c d8                	jl     4315b8 <loadUpvalues+0x61>
  4315e0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4315e7:	eb 73                	jmp    43165c <loadUpvalues+0x105>
  4315e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4315ed:	48 8b 40 50          	mov    0x50(%rax),%rax
  4315f1:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4315f4:	48 63 d2             	movslq %edx,%rdx
  4315f7:	48 c1 e2 04          	shl    $0x4,%rdx
  4315fb:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  4315ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431603:	48 89 c7             	mov    %rax,%rdi
  431606:	e8 be f8 ff ff       	callq  430ec9 <loadByte>
  43160b:	88 43 08             	mov    %al,0x8(%rbx)
  43160e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431612:	48 8b 40 50          	mov    0x50(%rax),%rax
  431616:	8b 55 ec             	mov    -0x14(%rbp),%edx
  431619:	48 63 d2             	movslq %edx,%rdx
  43161c:	48 c1 e2 04          	shl    $0x4,%rdx
  431620:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431628:	48 89 c7             	mov    %rax,%rdi
  43162b:	e8 99 f8 ff ff       	callq  430ec9 <loadByte>
  431630:	88 43 09             	mov    %al,0x9(%rbx)
  431633:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431637:	48 8b 40 50          	mov    0x50(%rax),%rax
  43163b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43163e:	48 63 d2             	movslq %edx,%rdx
  431641:	48 c1 e2 04          	shl    $0x4,%rdx
  431645:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431649:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43164d:	48 89 c7             	mov    %rax,%rdi
  431650:	e8 74 f8 ff ff       	callq  430ec9 <loadByte>
  431655:	88 43 0a             	mov    %al,0xa(%rbx)
  431658:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  43165c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43165f:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  431662:	7c 85                	jl     4315e9 <loadUpvalues+0x92>
  431664:	90                   	nop
  431665:	48 83 c4 28          	add    $0x28,%rsp
  431669:	5b                   	pop    %rbx
  43166a:	5d                   	pop    %rbp
  43166b:	c3                   	retq   

000000000043166c <loadDebug>:
  43166c:	55                   	push   %rbp
  43166d:	48 89 e5             	mov    %rsp,%rbp
  431670:	53                   	push   %rbx
  431671:	48 83 ec 28          	sub    $0x28,%rsp
  431675:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  431679:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  43167d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431681:	48 89 c7             	mov    %rax,%rdi
  431684:	e8 45 f9 ff ff       	callq  430fce <loadInt>
  431689:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43168c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43168f:	48 63 c8             	movslq %eax,%rcx
  431692:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431696:	48 8b 00             	mov    (%rax),%rax
  431699:	ba 00 00 00 00       	mov    $0x0,%edx
  43169e:	48 89 ce             	mov    %rcx,%rsi
  4316a1:	48 89 c7             	mov    %rax,%rdi
  4316a4:	e8 d6 bb fe ff       	callq  41d27f <luaM_malloc_>
  4316a9:	48 89 c2             	mov    %rax,%rdx
  4316ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4316b0:	48 89 50 58          	mov    %rdx,0x58(%rax)
  4316b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4316b8:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4316bb:	89 50 1c             	mov    %edx,0x1c(%rax)
  4316be:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4316c1:	48 63 d0             	movslq %eax,%rdx
  4316c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4316c8:	48 8b 48 58          	mov    0x58(%rax),%rcx
  4316cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4316d0:	48 89 ce             	mov    %rcx,%rsi
  4316d3:	48 89 c7             	mov    %rax,%rdi
  4316d6:	e8 a6 f7 ff ff       	callq  430e81 <loadBlock>
  4316db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4316df:	48 89 c7             	mov    %rax,%rdi
  4316e2:	e8 e7 f8 ff ff       	callq  430fce <loadInt>
  4316e7:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4316ea:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4316ed:	48 98                	cltq   
  4316ef:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  4316f6:	00 
  4316f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4316fb:	48 8b 00             	mov    (%rax),%rax
  4316fe:	ba 00 00 00 00       	mov    $0x0,%edx
  431703:	48 89 ce             	mov    %rcx,%rsi
  431706:	48 89 c7             	mov    %rax,%rdi
  431709:	e8 71 bb fe ff       	callq  41d27f <luaM_malloc_>
  43170e:	48 89 c2             	mov    %rax,%rdx
  431711:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431715:	48 89 50 60          	mov    %rdx,0x60(%rax)
  431719:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43171d:	8b 55 e8             	mov    -0x18(%rbp),%edx
  431720:	89 50 28             	mov    %edx,0x28(%rax)
  431723:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  43172a:	eb 4d                	jmp    431779 <loadDebug+0x10d>
  43172c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431730:	48 8b 40 60          	mov    0x60(%rax),%rax
  431734:	8b 55 ec             	mov    -0x14(%rbp),%edx
  431737:	48 63 d2             	movslq %edx,%rdx
  43173a:	48 c1 e2 03          	shl    $0x3,%rdx
  43173e:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431742:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431746:	48 89 c7             	mov    %rax,%rdi
  431749:	e8 80 f8 ff ff       	callq  430fce <loadInt>
  43174e:	89 03                	mov    %eax,(%rbx)
  431750:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431754:	48 8b 40 60          	mov    0x60(%rax),%rax
  431758:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43175b:	48 63 d2             	movslq %edx,%rdx
  43175e:	48 c1 e2 03          	shl    $0x3,%rdx
  431762:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431766:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43176a:	48 89 c7             	mov    %rax,%rdi
  43176d:	e8 5c f8 ff ff       	callq  430fce <loadInt>
  431772:	89 43 04             	mov    %eax,0x4(%rbx)
  431775:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  431779:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43177c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  43177f:	7c ab                	jl     43172c <loadDebug+0xc0>
  431781:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431785:	48 89 c7             	mov    %rax,%rdi
  431788:	e8 41 f8 ff ff       	callq  430fce <loadInt>
  43178d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  431790:	8b 45 e8             	mov    -0x18(%rbp),%eax
  431793:	48 98                	cltq   
  431795:	48 c1 e0 04          	shl    $0x4,%rax
  431799:	48 89 c1             	mov    %rax,%rcx
  43179c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4317a0:	48 8b 00             	mov    (%rax),%rax
  4317a3:	ba 00 00 00 00       	mov    $0x0,%edx
  4317a8:	48 89 ce             	mov    %rcx,%rsi
  4317ab:	48 89 c7             	mov    %rax,%rdi
  4317ae:	e8 cc ba fe ff       	callq  41d27f <luaM_malloc_>
  4317b3:	48 89 c2             	mov    %rax,%rdx
  4317b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4317ba:	48 89 50 68          	mov    %rdx,0x68(%rax)
  4317be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4317c2:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4317c5:	89 50 24             	mov    %edx,0x24(%rax)
  4317c8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4317cf:	eb 20                	jmp    4317f1 <loadDebug+0x185>
  4317d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4317d5:	48 8b 40 68          	mov    0x68(%rax),%rax
  4317d9:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4317dc:	48 63 d2             	movslq %edx,%rdx
  4317df:	48 c1 e2 04          	shl    $0x4,%rdx
  4317e3:	48 01 d0             	add    %rdx,%rax
  4317e6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4317ed:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4317f1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4317f4:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  4317f7:	7c d8                	jl     4317d1 <loadDebug+0x165>
  4317f9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  431800:	eb 7a                	jmp    43187c <loadDebug+0x210>
  431802:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431806:	48 8b 40 68          	mov    0x68(%rax),%rax
  43180a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43180d:	48 63 d2             	movslq %edx,%rdx
  431810:	48 c1 e2 04          	shl    $0x4,%rdx
  431814:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431818:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  43181c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431820:	48 89 d6             	mov    %rdx,%rsi
  431823:	48 89 c7             	mov    %rax,%rdi
  431826:	e8 17 f8 ff ff       	callq  431042 <loadStringN>
  43182b:	48 89 03             	mov    %rax,(%rbx)
  43182e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431832:	48 8b 40 68          	mov    0x68(%rax),%rax
  431836:	8b 55 ec             	mov    -0x14(%rbp),%edx
  431839:	48 63 d2             	movslq %edx,%rdx
  43183c:	48 c1 e2 04          	shl    $0x4,%rdx
  431840:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431844:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431848:	48 89 c7             	mov    %rax,%rdi
  43184b:	e8 7e f7 ff ff       	callq  430fce <loadInt>
  431850:	89 43 08             	mov    %eax,0x8(%rbx)
  431853:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431857:	48 8b 40 68          	mov    0x68(%rax),%rax
  43185b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43185e:	48 63 d2             	movslq %edx,%rdx
  431861:	48 c1 e2 04          	shl    $0x4,%rdx
  431865:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  431869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43186d:	48 89 c7             	mov    %rax,%rdi
  431870:	e8 59 f7 ff ff       	callq  430fce <loadInt>
  431875:	89 43 0c             	mov    %eax,0xc(%rbx)
  431878:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  43187c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43187f:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  431882:	0f 8c 7a ff ff ff    	jl     431802 <loadDebug+0x196>
  431888:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43188c:	48 89 c7             	mov    %rax,%rdi
  43188f:	e8 3a f7 ff ff       	callq  430fce <loadInt>
  431894:	89 45 e8             	mov    %eax,-0x18(%rbp)
  431897:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  43189b:	74 0a                	je     4318a7 <loadDebug+0x23b>
  43189d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4318a1:	8b 40 10             	mov    0x10(%rax),%eax
  4318a4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4318a7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4318ae:	eb 30                	jmp    4318e0 <loadDebug+0x274>
  4318b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4318b4:	48 8b 40 50          	mov    0x50(%rax),%rax
  4318b8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4318bb:	48 63 d2             	movslq %edx,%rdx
  4318be:	48 c1 e2 04          	shl    $0x4,%rdx
  4318c2:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  4318c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4318ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4318ce:	48 89 d6             	mov    %rdx,%rsi
  4318d1:	48 89 c7             	mov    %rax,%rdi
  4318d4:	e8 69 f7 ff ff       	callq  431042 <loadStringN>
  4318d9:	48 89 03             	mov    %rax,(%rbx)
  4318dc:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4318e0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4318e3:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  4318e6:	7c c8                	jl     4318b0 <loadDebug+0x244>
  4318e8:	90                   	nop
  4318e9:	48 83 c4 28          	add    $0x28,%rsp
  4318ed:	5b                   	pop    %rbx
  4318ee:	5d                   	pop    %rbp
  4318ef:	c3                   	retq   

00000000004318f0 <loadFunction>:
  4318f0:	55                   	push   %rbp
  4318f1:	48 89 e5             	mov    %rsp,%rbp
  4318f4:	48 83 ec 20          	sub    $0x20,%rsp
  4318f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4318fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  431900:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  431904:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  431908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43190c:	48 89 d6             	mov    %rdx,%rsi
  43190f:	48 89 c7             	mov    %rax,%rdi
  431912:	e8 2b f7 ff ff       	callq  431042 <loadStringN>
  431917:	48 89 c2             	mov    %rax,%rdx
  43191a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43191e:	48 89 50 70          	mov    %rdx,0x70(%rax)
  431922:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431926:	48 8b 40 70          	mov    0x70(%rax),%rax
  43192a:	48 85 c0             	test   %rax,%rax
  43192d:	75 0c                	jne    43193b <loadFunction+0x4b>
  43192f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431933:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  431937:	48 89 50 70          	mov    %rdx,0x70(%rax)
  43193b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43193f:	48 89 c7             	mov    %rax,%rdi
  431942:	e8 87 f6 ff ff       	callq  430fce <loadInt>
  431947:	89 c2                	mov    %eax,%edx
  431949:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43194d:	89 50 2c             	mov    %edx,0x2c(%rax)
  431950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431954:	48 89 c7             	mov    %rax,%rdi
  431957:	e8 72 f6 ff ff       	callq  430fce <loadInt>
  43195c:	89 c2                	mov    %eax,%edx
  43195e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431962:	89 50 30             	mov    %edx,0x30(%rax)
  431965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431969:	48 89 c7             	mov    %rax,%rdi
  43196c:	e8 58 f5 ff ff       	callq  430ec9 <loadByte>
  431971:	89 c2                	mov    %eax,%edx
  431973:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431977:	88 50 0a             	mov    %dl,0xa(%rax)
  43197a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43197e:	48 89 c7             	mov    %rax,%rdi
  431981:	e8 43 f5 ff ff       	callq  430ec9 <loadByte>
  431986:	89 c2                	mov    %eax,%edx
  431988:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43198c:	88 50 0b             	mov    %dl,0xb(%rax)
  43198f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431993:	48 89 c7             	mov    %rax,%rdi
  431996:	e8 2e f5 ff ff       	callq  430ec9 <loadByte>
  43199b:	89 c2                	mov    %eax,%edx
  43199d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4319a1:	88 50 0c             	mov    %dl,0xc(%rax)
  4319a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4319a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4319ac:	48 89 d6             	mov    %rdx,%rsi
  4319af:	48 89 c7             	mov    %rax,%rdi
  4319b2:	e8 15 f8 ff ff       	callq  4311cc <loadCode>
  4319b7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4319bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4319bf:	48 89 d6             	mov    %rdx,%rsi
  4319c2:	48 89 c7             	mov    %rax,%rdi
  4319c5:	e8 81 f8 ff ff       	callq  43124b <loadConstants>
  4319ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4319ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4319d2:	48 89 d6             	mov    %rdx,%rsi
  4319d5:	48 89 c7             	mov    %rax,%rdi
  4319d8:	e8 7a fb ff ff       	callq  431557 <loadUpvalues>
  4319dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4319e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4319e5:	48 89 d6             	mov    %rdx,%rsi
  4319e8:	48 89 c7             	mov    %rax,%rdi
  4319eb:	e8 f9 f9 ff ff       	callq  4313e9 <loadProtos>
  4319f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4319f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4319f8:	48 89 d6             	mov    %rdx,%rsi
  4319fb:	48 89 c7             	mov    %rax,%rdi
  4319fe:	e8 69 fc ff ff       	callq  43166c <loadDebug>
  431a03:	90                   	nop
  431a04:	c9                   	leaveq 
  431a05:	c3                   	retq   

0000000000431a06 <checkliteral>:
  431a06:	55                   	push   %rbp
  431a07:	48 89 e5             	mov    %rsp,%rbp
  431a0a:	48 83 ec 40          	sub    $0x40,%rsp
  431a0e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  431a12:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  431a16:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  431a1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431a1e:	48 89 c7             	mov    %rax,%rdi
  431a21:	e8 4a fd fc ff       	callq  401770 <strlen@plt>
  431a26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  431a2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  431a2e:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  431a32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431a36:	48 89 ce             	mov    %rcx,%rsi
  431a39:	48 89 c7             	mov    %rax,%rdi
  431a3c:	e8 40 f4 ff ff       	callq  430e81 <loadBlock>
  431a41:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  431a45:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  431a49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  431a4d:	48 89 ce             	mov    %rcx,%rsi
  431a50:	48 89 c7             	mov    %rax,%rdi
  431a53:	e8 28 fd fc ff       	callq  401780 <memcmp@plt>
  431a58:	85 c0                	test   %eax,%eax
  431a5a:	74 13                	je     431a6f <checkliteral+0x69>
  431a5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  431a60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  431a64:	48 89 d6             	mov    %rdx,%rsi
  431a67:	48 89 c7             	mov    %rax,%rdi
  431a6a:	e8 c9 f3 ff ff       	callq  430e38 <error>
  431a6f:	90                   	nop
  431a70:	c9                   	leaveq 
  431a71:	c3                   	retq   

0000000000431a72 <fchecksize>:
  431a72:	55                   	push   %rbp
  431a73:	48 89 e5             	mov    %rsp,%rbp
  431a76:	48 83 ec 20          	sub    $0x20,%rsp
  431a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  431a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  431a82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  431a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431a8a:	48 89 c7             	mov    %rax,%rdi
  431a8d:	e8 37 f4 ff ff       	callq  430ec9 <loadByte>
  431a92:	0f b6 c0             	movzbl %al,%eax
  431a95:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  431a99:	74 2f                	je     431aca <fchecksize+0x58>
  431a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431a9f:	48 8b 00             	mov    (%rax),%rax
  431aa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  431aa6:	be 00 30 44 00       	mov    $0x443000,%esi
  431aab:	48 89 c7             	mov    %rax,%rdi
  431aae:	b8 00 00 00 00       	mov    $0x0,%eax
  431ab3:	e8 a7 e1 fe ff       	callq  41fc5f <luaO_pushfstring>
  431ab8:	48 89 c2             	mov    %rax,%rdx
  431abb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431abf:	48 89 d6             	mov    %rdx,%rsi
  431ac2:	48 89 c7             	mov    %rax,%rdi
  431ac5:	e8 6e f3 ff ff       	callq  430e38 <error>
  431aca:	90                   	nop
  431acb:	c9                   	leaveq 
  431acc:	c3                   	retq   

0000000000431acd <checkHeader>:
  431acd:	55                   	push   %rbp
  431ace:	48 89 e5             	mov    %rsp,%rbp
  431ad1:	48 83 ec 10          	sub    $0x10,%rsp
  431ad5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  431ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431add:	ba 11 30 44 00       	mov    $0x443011,%edx
  431ae2:	be 25 30 44 00       	mov    $0x443025,%esi
  431ae7:	48 89 c7             	mov    %rax,%rdi
  431aea:	e8 17 ff ff ff       	callq  431a06 <checkliteral>
  431aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431af3:	48 89 c7             	mov    %rax,%rdi
  431af6:	e8 ce f3 ff ff       	callq  430ec9 <loadByte>
  431afb:	0f b6 c0             	movzbl %al,%eax
  431afe:	ba 35 00 00 00       	mov    $0x35,%edx
  431b03:	0f be d2             	movsbl %dl,%edx
  431b06:	83 ea 30             	sub    $0x30,%edx
  431b09:	89 d1                	mov    %edx,%ecx
  431b0b:	c1 e1 04             	shl    $0x4,%ecx
  431b0e:	ba 34 00 00 00       	mov    $0x34,%edx
  431b13:	0f be d2             	movsbl %dl,%edx
  431b16:	83 ea 30             	sub    $0x30,%edx
  431b19:	01 ca                	add    %ecx,%edx
  431b1b:	39 d0                	cmp    %edx,%eax
  431b1d:	74 11                	je     431b30 <checkHeader+0x63>
  431b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b23:	be 29 30 44 00       	mov    $0x443029,%esi
  431b28:	48 89 c7             	mov    %rax,%rdi
  431b2b:	e8 08 f3 ff ff       	callq  430e38 <error>
  431b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b34:	48 89 c7             	mov    %rax,%rdi
  431b37:	e8 8d f3 ff ff       	callq  430ec9 <loadByte>
  431b3c:	84 c0                	test   %al,%al
  431b3e:	74 11                	je     431b51 <checkHeader+0x84>
  431b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b44:	be 3a 30 44 00       	mov    $0x44303a,%esi
  431b49:	48 89 c7             	mov    %rax,%rdi
  431b4c:	e8 e7 f2 ff ff       	callq  430e38 <error>
  431b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b55:	ba 4a 30 44 00       	mov    $0x44304a,%edx
  431b5a:	be 5a 30 44 00       	mov    $0x44305a,%esi
  431b5f:	48 89 c7             	mov    %rax,%rdi
  431b62:	e8 9f fe ff ff       	callq  431a06 <checkliteral>
  431b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b6b:	ba 61 30 44 00       	mov    $0x443061,%edx
  431b70:	be 04 00 00 00       	mov    $0x4,%esi
  431b75:	48 89 c7             	mov    %rax,%rdi
  431b78:	e8 f5 fe ff ff       	callq  431a72 <fchecksize>
  431b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b81:	ba 6d 30 44 00       	mov    $0x44306d,%edx
  431b86:	be 08 00 00 00       	mov    $0x8,%esi
  431b8b:	48 89 c7             	mov    %rax,%rdi
  431b8e:	e8 df fe ff ff       	callq  431a72 <fchecksize>
  431b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431b97:	ba 79 30 44 00       	mov    $0x443079,%edx
  431b9c:	be 08 00 00 00       	mov    $0x8,%esi
  431ba1:	48 89 c7             	mov    %rax,%rdi
  431ba4:	e8 c9 fe ff ff       	callq  431a72 <fchecksize>
  431ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431bad:	48 89 c7             	mov    %rax,%rdi
  431bb0:	e8 63 f4 ff ff       	callq  431018 <loadInteger>
  431bb5:	48 3d 78 56 00 00    	cmp    $0x5678,%rax
  431bbb:	74 11                	je     431bce <checkHeader+0x101>
  431bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431bc1:	be 84 30 44 00       	mov    $0x443084,%esi
  431bc6:	48 89 c7             	mov    %rax,%rdi
  431bc9:	e8 6a f2 ff ff       	callq  430e38 <error>
  431bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431bd2:	48 89 c7             	mov    %rax,%rdi
  431bd5:	e8 13 f4 ff ff       	callq  430fed <loadNumber>
  431bda:	66 0f 2e 05 de 14 01 	ucomisd 0x114de(%rip),%xmm0        # 4430c0 <luaT_eventname.3753+0x620>
  431be1:	00 
  431be2:	7a 0c                	jp     431bf0 <checkHeader+0x123>
  431be4:	66 0f 2e 05 d4 14 01 	ucomisd 0x114d4(%rip),%xmm0        # 4430c0 <luaT_eventname.3753+0x620>
  431beb:	00 
  431bec:	75 02                	jne    431bf0 <checkHeader+0x123>
  431bee:	eb 11                	jmp    431c01 <checkHeader+0x134>
  431bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431bf4:	be 9c 30 44 00       	mov    $0x44309c,%esi
  431bf9:	48 89 c7             	mov    %rax,%rdi
  431bfc:	e8 37 f2 ff ff       	callq  430e38 <error>
  431c01:	c9                   	leaveq 
  431c02:	c3                   	retq   

0000000000431c03 <luaU_undump>:
  431c03:	55                   	push   %rbp
  431c04:	48 89 e5             	mov    %rsp,%rbp
  431c07:	48 83 ec 50          	sub    $0x50,%rsp
  431c0b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  431c0f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  431c13:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  431c17:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431c1b:	0f b6 00             	movzbl (%rax),%eax
  431c1e:	3c 40                	cmp    $0x40,%al
  431c20:	74 0b                	je     431c2d <luaU_undump+0x2a>
  431c22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431c26:	0f b6 00             	movzbl (%rax),%eax
  431c29:	3c 3d                	cmp    $0x3d,%al
  431c2b:	75 0e                	jne    431c3b <luaU_undump+0x38>
  431c2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431c31:	48 83 c0 01          	add    $0x1,%rax
  431c35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  431c39:	eb 22                	jmp    431c5d <luaU_undump+0x5a>
  431c3b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431c3f:	0f b6 00             	movzbl (%rax),%eax
  431c42:	ba 1b 00 00 00       	mov    $0x1b,%edx
  431c47:	38 d0                	cmp    %dl,%al
  431c49:	75 0a                	jne    431c55 <luaU_undump+0x52>
  431c4b:	48 c7 45 e0 b2 30 44 	movq   $0x4430b2,-0x20(%rbp)
  431c52:	00 
  431c53:	eb 08                	jmp    431c5d <luaU_undump+0x5a>
  431c55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431c59:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  431c5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431c61:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  431c65:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  431c69:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  431c6d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  431c71:	48 89 c7             	mov    %rax,%rdi
  431c74:	e8 54 fe ff ff       	callq  431acd <checkHeader>
  431c79:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  431c7d:	48 89 c7             	mov    %rax,%rdi
  431c80:	e8 44 f2 ff ff       	callq  430ec9 <loadByte>
  431c85:	0f b6 d0             	movzbl %al,%edx
  431c88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431c8c:	89 d6                	mov    %edx,%esi
  431c8e:	48 89 c7             	mov    %rax,%rdi
  431c91:	e8 e5 21 fe ff       	callq  413e7b <luaF_newLclosure>
  431c96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  431c9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431c9e:	48 8b 40 10          	mov    0x10(%rax),%rax
  431ca2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  431ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431caa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  431cae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  431cb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431cb6:	48 89 10             	mov    %rdx,(%rax)
  431cb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  431cbd:	c6 40 08 46          	movb   $0x46,0x8(%rax)
  431cc1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431cc5:	48 89 c7             	mov    %rax,%rdi
  431cc8:	e8 9a fb fd ff       	callq  411867 <luaD_inctop>
  431ccd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431cd1:	48 89 c7             	mov    %rax,%rdi
  431cd4:	e8 5a 29 fe ff       	callq  414633 <luaF_newproto>
  431cd9:	48 89 c2             	mov    %rax,%rdx
  431cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431ce0:	48 89 50 18          	mov    %rdx,0x18(%rax)
  431ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431ce8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  431cec:	0f b6 c0             	movzbl %al,%eax
  431cef:	83 e0 20             	and    $0x20,%eax
  431cf2:	85 c0                	test   %eax,%eax
  431cf4:	74 34                	je     431d2a <luaU_undump+0x127>
  431cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431cfa:	48 8b 40 18          	mov    0x18(%rax),%rax
  431cfe:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  431d02:	0f b6 c0             	movzbl %al,%eax
  431d05:	83 e0 18             	and    $0x18,%eax
  431d08:	85 c0                	test   %eax,%eax
  431d0a:	74 1e                	je     431d2a <luaU_undump+0x127>
  431d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d10:	48 8b 40 18          	mov    0x18(%rax),%rax
  431d14:	48 89 c2             	mov    %rax,%rdx
  431d17:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  431d1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  431d1f:	48 89 ce             	mov    %rcx,%rsi
  431d22:	48 89 c7             	mov    %rax,%rdi
  431d25:	e8 25 2d fe ff       	callq  414a4f <luaC_barrier_>
  431d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d2e:	48 8b 48 18          	mov    0x18(%rax),%rcx
  431d32:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  431d36:	ba 00 00 00 00       	mov    $0x0,%edx
  431d3b:	48 89 ce             	mov    %rcx,%rsi
  431d3e:	48 89 c7             	mov    %rax,%rdi
  431d41:	e8 aa fb ff ff       	callq  4318f0 <loadFunction>
  431d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d4a:	c9                   	leaveq 
  431d4b:	c3                   	retq   

0000000000431d4c <u_posrelat>:
  431d4c:	55                   	push   %rbp
  431d4d:	48 89 e5             	mov    %rsp,%rbp
  431d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  431d54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  431d58:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  431d5d:	78 06                	js     431d65 <u_posrelat+0x19>
  431d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d63:	eb 23                	jmp    431d88 <u_posrelat+0x3c>
  431d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d69:	48 f7 d8             	neg    %rax
  431d6c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  431d70:	73 07                	jae    431d79 <u_posrelat+0x2d>
  431d72:	b8 00 00 00 00       	mov    $0x0,%eax
  431d77:	eb 0f                	jmp    431d88 <u_posrelat+0x3c>
  431d79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  431d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  431d81:	48 01 d0             	add    %rdx,%rax
  431d84:	48 83 c0 01          	add    $0x1,%rax
  431d88:	5d                   	pop    %rbp
  431d89:	c3                   	retq   

0000000000431d8a <utf8_decode>:
  431d8a:	55                   	push   %rbp
  431d8b:	48 89 e5             	mov    %rsp,%rbp
  431d8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  431d92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  431d96:	89 55 dc             	mov    %edx,-0x24(%rbp)
  431d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  431d9d:	0f b6 00             	movzbl (%rax),%eax
  431da0:	0f b6 c0             	movzbl %al,%eax
  431da3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  431da6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  431dad:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%rbp)
  431db1:	77 0b                	ja     431dbe <utf8_decode+0x34>
  431db3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  431db6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  431db9:	e9 a5 00 00 00       	jmpq   431e63 <utf8_decode+0xd9>
  431dbe:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  431dc5:	eb 49                	jmp    431e10 <utf8_decode+0x86>
  431dc7:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  431dcb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  431dce:	48 63 d0             	movslq %eax,%rdx
  431dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  431dd5:	48 01 d0             	add    %rdx,%rax
  431dd8:	0f b6 00             	movzbl (%rax),%eax
  431ddb:	0f b6 c0             	movzbl %al,%eax
  431dde:	89 45 f0             	mov    %eax,-0x10(%rbp)
  431de1:	8b 45 f0             	mov    -0x10(%rbp),%eax
  431de4:	25 c0 00 00 00       	and    $0xc0,%eax
  431de9:	3d 80 00 00 00       	cmp    $0x80,%eax
  431dee:	74 0a                	je     431dfa <utf8_decode+0x70>
  431df0:	b8 00 00 00 00       	mov    $0x0,%eax
  431df5:	e9 a9 00 00 00       	jmpq   431ea3 <utf8_decode+0x119>
  431dfa:	8b 45 f8             	mov    -0x8(%rbp),%eax
  431dfd:	c1 e0 06             	shl    $0x6,%eax
  431e00:	89 c2                	mov    %eax,%edx
  431e02:	8b 45 f0             	mov    -0x10(%rbp),%eax
  431e05:	83 e0 3f             	and    $0x3f,%eax
  431e08:	09 d0                	or     %edx,%eax
  431e0a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  431e0d:	d1 65 fc             	shll   -0x4(%rbp)
  431e10:	8b 45 fc             	mov    -0x4(%rbp),%eax
  431e13:	83 e0 40             	and    $0x40,%eax
  431e16:	85 c0                	test   %eax,%eax
  431e18:	75 ad                	jne    431dc7 <utf8_decode+0x3d>
  431e1a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  431e1d:	83 e0 7f             	and    $0x7f,%eax
  431e20:	89 c6                	mov    %eax,%esi
  431e22:	8b 55 f4             	mov    -0xc(%rbp),%edx
  431e25:	89 d0                	mov    %edx,%eax
  431e27:	c1 e0 02             	shl    $0x2,%eax
  431e2a:	01 d0                	add    %edx,%eax
  431e2c:	89 c1                	mov    %eax,%ecx
  431e2e:	d3 e6                	shl    %cl,%esi
  431e30:	89 f0                	mov    %esi,%eax
  431e32:	09 45 f8             	or     %eax,-0x8(%rbp)
  431e35:	83 7d f4 05          	cmpl   $0x5,-0xc(%rbp)
  431e39:	7f 18                	jg     431e53 <utf8_decode+0xc9>
  431e3b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  431e3e:	85 c0                	test   %eax,%eax
  431e40:	78 11                	js     431e53 <utf8_decode+0xc9>
  431e42:	8b 45 f4             	mov    -0xc(%rbp),%eax
  431e45:	48 98                	cltq   
  431e47:	8b 04 85 60 32 44 00 	mov    0x443260(,%rax,4),%eax
  431e4e:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  431e51:	73 07                	jae    431e5a <utf8_decode+0xd0>
  431e53:	b8 00 00 00 00       	mov    $0x0,%eax
  431e58:	eb 49                	jmp    431ea3 <utf8_decode+0x119>
  431e5a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  431e5d:	48 98                	cltq   
  431e5f:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  431e63:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  431e67:	74 22                	je     431e8b <utf8_decode+0x101>
  431e69:	81 7d f8 ff ff 10 00 	cmpl   $0x10ffff,-0x8(%rbp)
  431e70:	77 12                	ja     431e84 <utf8_decode+0xfa>
  431e72:	81 7d f8 ff d7 00 00 	cmpl   $0xd7ff,-0x8(%rbp)
  431e79:	76 10                	jbe    431e8b <utf8_decode+0x101>
  431e7b:	81 7d f8 ff df 00 00 	cmpl   $0xdfff,-0x8(%rbp)
  431e82:	77 07                	ja     431e8b <utf8_decode+0x101>
  431e84:	b8 00 00 00 00       	mov    $0x0,%eax
  431e89:	eb 18                	jmp    431ea3 <utf8_decode+0x119>
  431e8b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  431e90:	74 09                	je     431e9b <utf8_decode+0x111>
  431e92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431e96:	8b 55 f8             	mov    -0x8(%rbp),%edx
  431e99:	89 10                	mov    %edx,(%rax)
  431e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  431e9f:	48 83 c0 01          	add    $0x1,%rax
  431ea3:	5d                   	pop    %rbp
  431ea4:	c3                   	retq   

0000000000431ea5 <utflen>:
  431ea5:	55                   	push   %rbp
  431ea6:	48 89 e5             	mov    %rsp,%rbp
  431ea9:	53                   	push   %rbx
  431eaa:	48 83 ec 58          	sub    $0x58,%rsp
  431eae:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  431eb2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  431eb9:	00 
  431eba:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  431ebe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431ec2:	be 01 00 00 00       	mov    $0x1,%esi
  431ec7:	48 89 c7             	mov    %rax,%rdi
  431eca:	e8 fd 48 fd ff       	callq  4067cc <luaL_checklstring>
  431ecf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  431ed3:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
  431ed7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431edb:	ba 01 00 00 00       	mov    $0x1,%edx
  431ee0:	be 02 00 00 00       	mov    $0x2,%esi
  431ee5:	48 89 c7             	mov    %rax,%rdi
  431ee8:	e8 f9 4a fd ff       	callq  4069e6 <luaL_optinteger>
  431eed:	48 89 de             	mov    %rbx,%rsi
  431ef0:	48 89 c7             	mov    %rax,%rdi
  431ef3:	e8 54 fe ff ff       	callq  431d4c <u_posrelat>
  431ef8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  431efc:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
  431f00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431f04:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  431f0b:	be 03 00 00 00       	mov    $0x3,%esi
  431f10:	48 89 c7             	mov    %rax,%rdi
  431f13:	e8 ce 4a fd ff       	callq  4069e6 <luaL_optinteger>
  431f18:	48 89 de             	mov    %rbx,%rsi
  431f1b:	48 89 c7             	mov    %rax,%rdi
  431f1e:	e8 29 fe ff ff       	callq  431d4c <u_posrelat>
  431f23:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  431f27:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431f2b:	be 04 00 00 00       	mov    $0x4,%esi
  431f30:	48 89 c7             	mov    %rax,%rdi
  431f33:	e8 e5 09 fd ff       	callq  40291d <lua_toboolean>
  431f38:	89 45 cc             	mov    %eax,-0x34(%rbp)
  431f3b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  431f40:	7e 16                	jle    431f58 <utflen+0xb3>
  431f42:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  431f47:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431f4b:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  431f4f:	7f 07                	jg     431f58 <utflen+0xb3>
  431f51:	b8 01 00 00 00       	mov    $0x1,%eax
  431f56:	eb 05                	jmp    431f5d <utflen+0xb8>
  431f58:	b8 00 00 00 00       	mov    $0x0,%eax
  431f5d:	85 c0                	test   %eax,%eax
  431f5f:	0f 95 c0             	setne  %al
  431f62:	0f b6 c0             	movzbl %al,%eax
  431f65:	48 85 c0             	test   %rax,%rax
  431f68:	75 18                	jne    431f82 <utflen+0xdd>
  431f6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431f6e:	ba e0 30 44 00       	mov    $0x4430e0,%edx
  431f73:	be 02 00 00 00       	mov    $0x2,%esi
  431f78:	48 89 c7             	mov    %rax,%rdi
  431f7b:	e8 72 3f fd ff       	callq  405ef2 <luaL_argerror>
  431f80:	85 c0                	test   %eax,%eax
  431f82:	90                   	nop
  431f83:	48 83 6d d0 01       	subq   $0x1,-0x30(%rbp)
  431f88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  431f8c:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  431f90:	0f 9c c0             	setl   %al
  431f93:	0f b6 c0             	movzbl %al,%eax
  431f96:	48 85 c0             	test   %rax,%rax
  431f99:	75 18                	jne    431fb3 <utflen+0x10e>
  431f9b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431f9f:	ba ff 30 44 00       	mov    $0x4430ff,%edx
  431fa4:	be 03 00 00 00       	mov    $0x3,%esi
  431fa9:	48 89 c7             	mov    %rax,%rdi
  431fac:	e8 41 3f fd ff       	callq  405ef2 <luaL_argerror>
  431fb1:	85 c0                	test   %eax,%eax
  431fb3:	90                   	nop
  431fb4:	eb 6a                	jmp    432020 <utflen+0x17b>
  431fb6:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  431fba:	0f 94 c0             	sete   %al
  431fbd:	0f b6 c0             	movzbl %al,%eax
  431fc0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  431fc4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  431fc8:	48 01 d1             	add    %rdx,%rcx
  431fcb:	89 c2                	mov    %eax,%edx
  431fcd:	be 00 00 00 00       	mov    $0x0,%esi
  431fd2:	48 89 cf             	mov    %rcx,%rdi
  431fd5:	e8 b0 fd ff ff       	callq  431d8a <utf8_decode>
  431fda:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  431fde:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  431fe3:	75 2a                	jne    43200f <utflen+0x16a>
  431fe5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431fe9:	48 89 c7             	mov    %rax,%rdi
  431fec:	e8 b4 0c fd ff       	callq  402ca5 <lua_pushnil>
  431ff1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  431ff5:	48 8d 50 01          	lea    0x1(%rax),%rdx
  431ff9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  431ffd:	48 89 d6             	mov    %rdx,%rsi
  432000:	48 89 c7             	mov    %rax,%rdi
  432003:	e8 0d 0d fd ff       	callq  402d15 <lua_pushinteger>
  432008:	b8 02 00 00 00       	mov    $0x2,%eax
  43200d:	eb 33                	jmp    432042 <utflen+0x19d>
  43200f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  432013:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  432017:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43201b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  432020:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432024:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  432028:	7e 8c                	jle    431fb6 <utflen+0x111>
  43202a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  43202e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432032:	48 89 d6             	mov    %rdx,%rsi
  432035:	48 89 c7             	mov    %rax,%rdi
  432038:	e8 d8 0c fd ff       	callq  402d15 <lua_pushinteger>
  43203d:	b8 01 00 00 00       	mov    $0x1,%eax
  432042:	48 83 c4 58          	add    $0x58,%rsp
  432046:	5b                   	pop    %rbx
  432047:	5d                   	pop    %rbp
  432048:	c3                   	retq   

0000000000432049 <codepoint>:
  432049:	55                   	push   %rbp
  43204a:	48 89 e5             	mov    %rsp,%rbp
  43204d:	53                   	push   %rbx
  43204e:	48 83 ec 58          	sub    $0x58,%rsp
  432052:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  432056:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  43205a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  43205e:	be 01 00 00 00       	mov    $0x1,%esi
  432063:	48 89 c7             	mov    %rax,%rdi
  432066:	e8 61 47 fd ff       	callq  4067cc <luaL_checklstring>
  43206b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43206f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
  432073:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432077:	ba 01 00 00 00       	mov    $0x1,%edx
  43207c:	be 02 00 00 00       	mov    $0x2,%esi
  432081:	48 89 c7             	mov    %rax,%rdi
  432084:	e8 5d 49 fd ff       	callq  4069e6 <luaL_optinteger>
  432089:	48 89 de             	mov    %rbx,%rsi
  43208c:	48 89 c7             	mov    %rax,%rdi
  43208f:	e8 b8 fc ff ff       	callq  431d4c <u_posrelat>
  432094:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  432098:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
  43209c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4320a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4320a4:	be 03 00 00 00       	mov    $0x3,%esi
  4320a9:	48 89 c7             	mov    %rax,%rdi
  4320ac:	e8 35 49 fd ff       	callq  4069e6 <luaL_optinteger>
  4320b1:	48 89 de             	mov    %rbx,%rsi
  4320b4:	48 89 c7             	mov    %rax,%rdi
  4320b7:	e8 90 fc ff ff       	callq  431d4c <u_posrelat>
  4320bc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4320c0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4320c4:	be 04 00 00 00       	mov    $0x4,%esi
  4320c9:	48 89 c7             	mov    %rax,%rdi
  4320cc:	e8 4c 08 fd ff       	callq  40291d <lua_toboolean>
  4320d1:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4320d4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4320d9:	0f 9f c0             	setg   %al
  4320dc:	0f b6 c0             	movzbl %al,%eax
  4320df:	48 85 c0             	test   %rax,%rax
  4320e2:	75 18                	jne    4320fc <codepoint+0xb3>
  4320e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4320e8:	ba 1c 31 44 00       	mov    $0x44311c,%edx
  4320ed:	be 02 00 00 00       	mov    $0x2,%esi
  4320f2:	48 89 c7             	mov    %rax,%rdi
  4320f5:	e8 f8 3d fd ff       	callq  405ef2 <luaL_argerror>
  4320fa:	85 c0                	test   %eax,%eax
  4320fc:	90                   	nop
  4320fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  432101:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  432105:	0f 9e c0             	setle  %al
  432108:	0f b6 c0             	movzbl %al,%eax
  43210b:	48 85 c0             	test   %rax,%rax
  43210e:	75 18                	jne    432128 <codepoint+0xdf>
  432110:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432114:	ba 1c 31 44 00       	mov    $0x44311c,%edx
  432119:	be 03 00 00 00       	mov    $0x3,%esi
  43211e:	48 89 c7             	mov    %rax,%rdi
  432121:	e8 cc 3d fd ff       	callq  405ef2 <luaL_argerror>
  432126:	85 c0                	test   %eax,%eax
  432128:	90                   	nop
  432129:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43212d:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  432131:	7e 0a                	jle    43213d <codepoint+0xf4>
  432133:	b8 00 00 00 00       	mov    $0x0,%eax
  432138:	e9 de 00 00 00       	jmpq   43221b <codepoint+0x1d2>
  43213d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432141:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  432145:	48 3d fe ff ff 7f    	cmp    $0x7ffffffe,%rax
  43214b:	7e 1b                	jle    432168 <codepoint+0x11f>
  43214d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432151:	be 2a 31 44 00       	mov    $0x44312a,%esi
  432156:	48 89 c7             	mov    %rax,%rdi
  432159:	b8 00 00 00 00       	mov    $0x0,%eax
  43215e:	e8 8d 40 fd ff       	callq  4061f0 <luaL_error>
  432163:	e9 b3 00 00 00       	jmpq   43221b <codepoint+0x1d2>
  432168:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43216c:	89 c2                	mov    %eax,%edx
  43216e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432172:	29 c2                	sub    %eax,%edx
  432174:	89 d0                	mov    %edx,%eax
  432176:	83 c0 01             	add    $0x1,%eax
  432179:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  43217c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  43217f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432183:	ba 2a 31 44 00       	mov    $0x44312a,%edx
  432188:	89 ce                	mov    %ecx,%esi
  43218a:	48 89 c7             	mov    %rax,%rdi
  43218d:	e8 3e 45 fd ff       	callq  4066d0 <luaL_checkstack>
  432192:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  432199:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  43219d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4321a1:	48 01 d0             	add    %rdx,%rax
  4321a4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4321a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4321ac:	48 83 e8 01          	sub    $0x1,%rax
  4321b0:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  4321b4:	eb 58                	jmp    43220e <codepoint+0x1c5>
  4321b6:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  4321ba:	0f 94 c0             	sete   %al
  4321bd:	0f b6 d0             	movzbl %al,%edx
  4321c0:	48 8d 4d b4          	lea    -0x4c(%rbp),%rcx
  4321c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4321c8:	48 89 ce             	mov    %rcx,%rsi
  4321cb:	48 89 c7             	mov    %rax,%rdi
  4321ce:	e8 b7 fb ff ff       	callq  431d8a <utf8_decode>
  4321d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4321d7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4321dc:	75 18                	jne    4321f6 <codepoint+0x1ad>
  4321de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4321e2:	be 40 31 44 00       	mov    $0x443140,%esi
  4321e7:	48 89 c7             	mov    %rax,%rdi
  4321ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4321ef:	e8 fc 3f fd ff       	callq  4061f0 <luaL_error>
  4321f4:	eb 25                	jmp    43221b <codepoint+0x1d2>
  4321f6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4321f9:	89 c2                	mov    %eax,%edx
  4321fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4321ff:	48 89 d6             	mov    %rdx,%rsi
  432202:	48 89 c7             	mov    %rax,%rdi
  432205:	e8 0b 0b fd ff       	callq  402d15 <lua_pushinteger>
  43220a:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  43220e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432212:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  432216:	72 9e                	jb     4321b6 <codepoint+0x16d>
  432218:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  43221b:	48 83 c4 58          	add    $0x58,%rsp
  43221f:	5b                   	pop    %rbx
  432220:	5d                   	pop    %rbp
  432221:	c3                   	retq   

0000000000432222 <pushutfchar>:
  432222:	55                   	push   %rbp
  432223:	48 89 e5             	mov    %rsp,%rbp
  432226:	48 83 ec 20          	sub    $0x20,%rsp
  43222a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43222e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  432231:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  432234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432238:	89 d6                	mov    %edx,%esi
  43223a:	48 89 c7             	mov    %rax,%rdi
  43223d:	e8 55 47 fd ff       	callq  406997 <luaL_checkinteger>
  432242:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432246:	48 81 7d f8 ff ff ff 	cmpq   $0x7fffffff,-0x8(%rbp)
  43224d:	7f 
  43224e:	0f 96 c0             	setbe  %al
  432251:	0f b6 c0             	movzbl %al,%eax
  432254:	48 85 c0             	test   %rax,%rax
  432257:	75 18                	jne    432271 <pushutfchar+0x4f>
  432259:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  43225c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432260:	ba 53 31 44 00       	mov    $0x443153,%edx
  432265:	89 ce                	mov    %ecx,%esi
  432267:	48 89 c7             	mov    %rax,%rdi
  43226a:	e8 83 3c fd ff       	callq  405ef2 <luaL_argerror>
  43226f:	85 c0                	test   %eax,%eax
  432271:	90                   	nop
  432272:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  432276:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43227a:	be 66 31 44 00       	mov    $0x443166,%esi
  43227f:	48 89 c7             	mov    %rax,%rdi
  432282:	b8 00 00 00 00       	mov    $0x0,%eax
  432287:	e8 86 0c fd ff       	callq  402f12 <lua_pushfstring>
  43228c:	90                   	nop
  43228d:	c9                   	leaveq 
  43228e:	c3                   	retq   

000000000043228f <utfchar>:
  43228f:	55                   	push   %rbp
  432290:	48 89 e5             	mov    %rsp,%rbp
  432293:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  43229a:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  4322a1:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4322a8:	48 89 c7             	mov    %rax,%rdi
  4322ab:	e8 a9 fc fc ff       	callq  401f59 <lua_gettop>
  4322b0:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4322b3:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  4322b7:	75 16                	jne    4322cf <utfchar+0x40>
  4322b9:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4322c0:	be 01 00 00 00       	mov    $0x1,%esi
  4322c5:	48 89 c7             	mov    %rax,%rdi
  4322c8:	e8 55 ff ff ff       	callq  432222 <pushutfchar>
  4322cd:	eb 60                	jmp    43232f <utfchar+0xa0>
  4322cf:	48 8d 95 d0 fb ff ff 	lea    -0x430(%rbp),%rdx
  4322d6:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4322dd:	48 89 d6             	mov    %rdx,%rsi
  4322e0:	48 89 c7             	mov    %rax,%rdi
  4322e3:	e8 a1 4c fd ff       	callq  406f89 <luaL_buffinit>
  4322e8:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4322ef:	eb 27                	jmp    432318 <utfchar+0x89>
  4322f1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4322f4:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4322fb:	89 d6                	mov    %edx,%esi
  4322fd:	48 89 c7             	mov    %rax,%rdi
  432300:	e8 1d ff ff ff       	callq  432222 <pushutfchar>
  432305:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  43230c:	48 89 c7             	mov    %rax,%rdi
  43230f:	e8 e6 4b fd ff       	callq  406efa <luaL_addvalue>
  432314:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  432318:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43231b:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  43231e:	7e d1                	jle    4322f1 <utfchar+0x62>
  432320:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  432327:	48 89 c7             	mov    %rax,%rdi
  43232a:	e8 10 4b fd ff       	callq  406e3f <luaL_pushresult>
  43232f:	b8 01 00 00 00       	mov    $0x1,%eax
  432334:	c9                   	leaveq 
  432335:	c3                   	retq   

0000000000432336 <byteoffset>:
  432336:	55                   	push   %rbp
  432337:	48 89 e5             	mov    %rsp,%rbp
  43233a:	53                   	push   %rbx
  43233b:	48 83 ec 38          	sub    $0x38,%rsp
  43233f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  432343:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  432347:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43234b:	be 01 00 00 00       	mov    $0x1,%esi
  432350:	48 89 c7             	mov    %rax,%rdi
  432353:	e8 74 44 fd ff       	callq  4067cc <luaL_checklstring>
  432358:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43235c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432360:	be 02 00 00 00       	mov    $0x2,%esi
  432365:	48 89 c7             	mov    %rax,%rdi
  432368:	e8 2a 46 fd ff       	callq  406997 <luaL_checkinteger>
  43236d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  432371:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  432376:	79 0a                	jns    432382 <byteoffset+0x4c>
  432378:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43237c:	48 83 c0 01          	add    $0x1,%rax
  432380:	eb 05                	jmp    432387 <byteoffset+0x51>
  432382:	b8 01 00 00 00       	mov    $0x1,%eax
  432387:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43238b:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
  43238f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  432393:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432397:	be 03 00 00 00       	mov    $0x3,%esi
  43239c:	48 89 c7             	mov    %rax,%rdi
  43239f:	e8 42 46 fd ff       	callq  4069e6 <luaL_optinteger>
  4323a4:	48 89 de             	mov    %rbx,%rsi
  4323a7:	48 89 c7             	mov    %rax,%rdi
  4323aa:	e8 9d f9 ff ff       	callq  431d4c <u_posrelat>
  4323af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4323b3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4323b8:	7e 16                	jle    4323d0 <byteoffset+0x9a>
  4323ba:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4323bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4323c3:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4323c7:	7f 07                	jg     4323d0 <byteoffset+0x9a>
  4323c9:	b8 01 00 00 00       	mov    $0x1,%eax
  4323ce:	eb 05                	jmp    4323d5 <byteoffset+0x9f>
  4323d0:	b8 00 00 00 00       	mov    $0x0,%eax
  4323d5:	85 c0                	test   %eax,%eax
  4323d7:	0f 95 c0             	setne  %al
  4323da:	0f b6 c0             	movzbl %al,%eax
  4323dd:	48 85 c0             	test   %rax,%rax
  4323e0:	75 18                	jne    4323fa <byteoffset+0xc4>
  4323e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4323e6:	ba 69 31 44 00       	mov    $0x443169,%edx
  4323eb:	be 03 00 00 00       	mov    $0x3,%esi
  4323f0:	48 89 c7             	mov    %rax,%rdi
  4323f3:	e8 fa 3a fd ff       	callq  405ef2 <luaL_argerror>
  4323f8:	85 c0                	test   %eax,%eax
  4323fa:	90                   	nop
  4323fb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  432400:	75 34                	jne    432436 <byteoffset+0x100>
  432402:	eb 05                	jmp    432409 <byteoffset+0xd3>
  432404:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  432409:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  43240e:	0f 8e e0 00 00 00    	jle    4324f4 <byteoffset+0x1be>
  432414:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  432418:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43241c:	48 01 d0             	add    %rdx,%rax
  43241f:	0f b6 00             	movzbl (%rax),%eax
  432422:	0f be c0             	movsbl %al,%eax
  432425:	25 c0 00 00 00       	and    $0xc0,%eax
  43242a:	3d 80 00 00 00       	cmp    $0x80,%eax
  43242f:	74 d3                	je     432404 <byteoffset+0xce>
  432431:	e9 be 00 00 00       	jmpq   4324f4 <byteoffset+0x1be>
  432436:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  43243a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43243e:	48 01 d0             	add    %rdx,%rax
  432441:	0f b6 00             	movzbl (%rax),%eax
  432444:	0f be c0             	movsbl %al,%eax
  432447:	25 c0 00 00 00       	and    $0xc0,%eax
  43244c:	3d 80 00 00 00       	cmp    $0x80,%eax
  432451:	75 1b                	jne    43246e <byteoffset+0x138>
  432453:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432457:	be 80 31 44 00       	mov    $0x443180,%esi
  43245c:	48 89 c7             	mov    %rax,%rdi
  43245f:	b8 00 00 00 00       	mov    $0x0,%eax
  432464:	e8 87 3d fd ff       	callq  4061f0 <luaL_error>
  432469:	e9 b7 00 00 00       	jmpq   432525 <byteoffset+0x1ef>
  43246e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  432473:	79 40                	jns    4324b5 <byteoffset+0x17f>
  432475:	eb 2e                	jmp    4324a5 <byteoffset+0x16f>
  432477:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  43247c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  432481:	7e 1d                	jle    4324a0 <byteoffset+0x16a>
  432483:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  432487:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43248b:	48 01 d0             	add    %rdx,%rax
  43248e:	0f b6 00             	movzbl (%rax),%eax
  432491:	0f be c0             	movsbl %al,%eax
  432494:	25 c0 00 00 00       	and    $0xc0,%eax
  432499:	3d 80 00 00 00       	cmp    $0x80,%eax
  43249e:	74 d7                	je     432477 <byteoffset+0x141>
  4324a0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  4324a5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4324aa:	79 48                	jns    4324f4 <byteoffset+0x1be>
  4324ac:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4324b1:	7f c4                	jg     432477 <byteoffset+0x141>
  4324b3:	eb 3f                	jmp    4324f4 <byteoffset+0x1be>
  4324b5:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
  4324ba:	eb 27                	jmp    4324e3 <byteoffset+0x1ad>
  4324bc:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  4324c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4324c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4324c9:	48 01 d0             	add    %rdx,%rax
  4324cc:	0f b6 00             	movzbl (%rax),%eax
  4324cf:	0f be c0             	movsbl %al,%eax
  4324d2:	25 c0 00 00 00       	and    $0xc0,%eax
  4324d7:	3d 80 00 00 00       	cmp    $0x80,%eax
  4324dc:	74 de                	je     4324bc <byteoffset+0x186>
  4324de:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
  4324e3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4324e8:	7e 0a                	jle    4324f4 <byteoffset+0x1be>
  4324ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4324ee:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4324f2:	7c c8                	jl     4324bc <byteoffset+0x186>
  4324f4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4324f9:	75 19                	jne    432514 <byteoffset+0x1de>
  4324fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4324ff:	48 8d 50 01          	lea    0x1(%rax),%rdx
  432503:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432507:	48 89 d6             	mov    %rdx,%rsi
  43250a:	48 89 c7             	mov    %rax,%rdi
  43250d:	e8 03 08 fd ff       	callq  402d15 <lua_pushinteger>
  432512:	eb 0c                	jmp    432520 <byteoffset+0x1ea>
  432514:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432518:	48 89 c7             	mov    %rax,%rdi
  43251b:	e8 85 07 fd ff       	callq  402ca5 <lua_pushnil>
  432520:	b8 01 00 00 00       	mov    $0x1,%eax
  432525:	48 83 c4 38          	add    $0x38,%rsp
  432529:	5b                   	pop    %rbx
  43252a:	5d                   	pop    %rbp
  43252b:	c3                   	retq   

000000000043252c <iter_aux>:
  43252c:	55                   	push   %rbp
  43252d:	48 89 e5             	mov    %rsp,%rbp
  432530:	48 83 ec 40          	sub    $0x40,%rsp
  432534:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  432538:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  43253b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  43253f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432543:	be 01 00 00 00       	mov    $0x1,%esi
  432548:	48 89 c7             	mov    %rax,%rdi
  43254b:	e8 7c 42 fd ff       	callq  4067cc <luaL_checklstring>
  432550:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  432554:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432558:	ba 00 00 00 00       	mov    $0x0,%edx
  43255d:	be 02 00 00 00       	mov    $0x2,%esi
  432562:	48 89 c7             	mov    %rax,%rdi
  432565:	e8 2b 03 fd ff       	callq  402895 <lua_tointegerx>
  43256a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43256e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432572:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  432576:	73 24                	jae    43259c <iter_aux+0x70>
  432578:	eb 05                	jmp    43257f <iter_aux+0x53>
  43257a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  43257f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  432583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432587:	48 01 d0             	add    %rdx,%rax
  43258a:	0f b6 00             	movzbl (%rax),%eax
  43258d:	0f be c0             	movsbl %al,%eax
  432590:	25 c0 00 00 00       	and    $0xc0,%eax
  432595:	3d 80 00 00 00       	cmp    $0x80,%eax
  43259a:	74 de                	je     43257a <iter_aux+0x4e>
  43259c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4325a0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4325a4:	72 0a                	jb     4325b0 <iter_aux+0x84>
  4325a6:	b8 00 00 00 00       	mov    $0x0,%eax
  4325ab:	e9 8a 00 00 00       	jmpq   43263a <iter_aux+0x10e>
  4325b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4325b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4325b8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  4325bc:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4325bf:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
  4325c3:	48 89 c6             	mov    %rax,%rsi
  4325c6:	48 89 cf             	mov    %rcx,%rdi
  4325c9:	e8 bc f7 ff ff       	callq  431d8a <utf8_decode>
  4325ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4325d2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4325d7:	74 16                	je     4325ef <iter_aux+0xc3>
  4325d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4325dd:	0f b6 00             	movzbl (%rax),%eax
  4325e0:	0f be c0             	movsbl %al,%eax
  4325e3:	25 c0 00 00 00       	and    $0xc0,%eax
  4325e8:	3d 80 00 00 00       	cmp    $0x80,%eax
  4325ed:	75 18                	jne    432607 <iter_aux+0xdb>
  4325ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4325f3:	be 40 31 44 00       	mov    $0x443140,%esi
  4325f8:	48 89 c7             	mov    %rax,%rdi
  4325fb:	b8 00 00 00 00       	mov    $0x0,%eax
  432600:	e8 eb 3b fd ff       	callq  4061f0 <luaL_error>
  432605:	eb 33                	jmp    43263a <iter_aux+0x10e>
  432607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43260b:	48 83 c0 01          	add    $0x1,%rax
  43260f:	48 89 c2             	mov    %rax,%rdx
  432612:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432616:	48 89 d6             	mov    %rdx,%rsi
  432619:	48 89 c7             	mov    %rax,%rdi
  43261c:	e8 f4 06 fd ff       	callq  402d15 <lua_pushinteger>
  432621:	8b 45 dc             	mov    -0x24(%rbp),%eax
  432624:	89 c2                	mov    %eax,%edx
  432626:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43262a:	48 89 d6             	mov    %rdx,%rsi
  43262d:	48 89 c7             	mov    %rax,%rdi
  432630:	e8 e0 06 fd ff       	callq  402d15 <lua_pushinteger>
  432635:	b8 02 00 00 00       	mov    $0x2,%eax
  43263a:	c9                   	leaveq 
  43263b:	c3                   	retq   

000000000043263c <iter_auxstrict>:
  43263c:	55                   	push   %rbp
  43263d:	48 89 e5             	mov    %rsp,%rbp
  432640:	48 83 ec 10          	sub    $0x10,%rsp
  432644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  432648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43264c:	be 01 00 00 00       	mov    $0x1,%esi
  432651:	48 89 c7             	mov    %rax,%rdi
  432654:	e8 d3 fe ff ff       	callq  43252c <iter_aux>
  432659:	c9                   	leaveq 
  43265a:	c3                   	retq   

000000000043265b <iter_auxlax>:
  43265b:	55                   	push   %rbp
  43265c:	48 89 e5             	mov    %rsp,%rbp
  43265f:	48 83 ec 10          	sub    $0x10,%rsp
  432663:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  432667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43266b:	be 00 00 00 00       	mov    $0x0,%esi
  432670:	48 89 c7             	mov    %rax,%rdi
  432673:	e8 b4 fe ff ff       	callq  43252c <iter_aux>
  432678:	c9                   	leaveq 
  432679:	c3                   	retq   

000000000043267a <iter_codes>:
  43267a:	55                   	push   %rbp
  43267b:	48 89 e5             	mov    %rsp,%rbp
  43267e:	48 83 ec 20          	sub    $0x20,%rsp
  432682:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  432686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43268a:	be 02 00 00 00       	mov    $0x2,%esi
  43268f:	48 89 c7             	mov    %rax,%rdi
  432692:	e8 86 02 fd ff       	callq  40291d <lua_toboolean>
  432697:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43269a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43269e:	ba 00 00 00 00       	mov    $0x0,%edx
  4326a3:	be 01 00 00 00       	mov    $0x1,%esi
  4326a8:	48 89 c7             	mov    %rax,%rdi
  4326ab:	e8 1c 41 fd ff       	callq  4067cc <luaL_checklstring>
  4326b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4326b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4326b8:	0f b6 00             	movzbl (%rax),%eax
  4326bb:	0f be c0             	movsbl %al,%eax
  4326be:	25 c0 00 00 00       	and    $0xc0,%eax
  4326c3:	3d 80 00 00 00       	cmp    $0x80,%eax
  4326c8:	0f 95 c0             	setne  %al
  4326cb:	0f b6 c0             	movzbl %al,%eax
  4326ce:	48 85 c0             	test   %rax,%rax
  4326d1:	75 18                	jne    4326eb <iter_codes+0x71>
  4326d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4326d7:	ba 40 31 44 00       	mov    $0x443140,%edx
  4326dc:	be 01 00 00 00       	mov    $0x1,%esi
  4326e1:	48 89 c7             	mov    %rax,%rdi
  4326e4:	e8 09 38 fd ff       	callq  405ef2 <luaL_argerror>
  4326e9:	85 c0                	test   %eax,%eax
  4326eb:	90                   	nop
  4326ec:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4326f0:	74 07                	je     4326f9 <iter_codes+0x7f>
  4326f2:	b9 5b 26 43 00       	mov    $0x43265b,%ecx
  4326f7:	eb 05                	jmp    4326fe <iter_codes+0x84>
  4326f9:	b9 3c 26 43 00       	mov    $0x43263c,%ecx
  4326fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432702:	ba 00 00 00 00       	mov    $0x0,%edx
  432707:	48 89 ce             	mov    %rcx,%rsi
  43270a:	48 89 c7             	mov    %rax,%rdi
  43270d:	e8 d9 08 fd ff       	callq  402feb <lua_pushcclosure>
  432712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432716:	be 01 00 00 00       	mov    $0x1,%esi
  43271b:	48 89 c7             	mov    %rax,%rdi
  43271e:	e8 ec fb fc ff       	callq  40230f <lua_pushvalue>
  432723:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432727:	be 00 00 00 00       	mov    $0x0,%esi
  43272c:	48 89 c7             	mov    %rax,%rdi
  43272f:	e8 e1 05 fd ff       	callq  402d15 <lua_pushinteger>
  432734:	b8 03 00 00 00       	mov    $0x3,%eax
  432739:	c9                   	leaveq 
  43273a:	c3                   	retq   

000000000043273b <luaopen_utf8>:
  43273b:	55                   	push   %rbp
  43273c:	48 89 e5             	mov    %rsp,%rbp
  43273f:	48 83 ec 10          	sub    $0x10,%rsp
  432743:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  432747:	f2 0f 10 05 29 0b 01 	movsd  0x10b29(%rip),%xmm0        # 443278 <limits.3357+0x18>
  43274e:	00 
  43274f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432753:	be 88 00 00 00       	mov    $0x88,%esi
  432758:	48 89 c7             	mov    %rax,%rdi
  43275b:	e8 71 5a fd ff       	callq  4081d1 <luaL_checkversion_>
  432760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432764:	ba 06 00 00 00       	mov    $0x6,%edx
  432769:	be 00 00 00 00       	mov    $0x0,%esi
  43276e:	48 89 c7             	mov    %rax,%rdi
  432771:	e8 a2 10 fd ff       	callq  403818 <lua_createtable>
  432776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43277a:	ba 00 00 00 00       	mov    $0x0,%edx
  43277f:	be e0 31 44 00       	mov    $0x4431e0,%esi
  432784:	48 89 c7             	mov    %rax,%rdi
  432787:	e8 9e 53 fd ff       	callq  407b2a <luaL_setfuncs>
  43278c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432790:	ba 0e 00 00 00       	mov    $0xe,%edx
  432795:	be 50 32 44 00       	mov    $0x443250,%esi
  43279a:	48 89 c7             	mov    %rax,%rdi
  43279d:	e8 b5 05 fd ff       	callq  402d57 <lua_pushlstring>
  4327a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4327a6:	ba c8 31 44 00       	mov    $0x4431c8,%edx
  4327ab:	be fe ff ff ff       	mov    $0xfffffffe,%esi
  4327b0:	48 89 c7             	mov    %rax,%rdi
  4327b3:	e8 1a 16 fd ff       	callq  403dd2 <lua_setfield>
  4327b8:	b8 01 00 00 00       	mov    $0x1,%eax
  4327bd:	c9                   	leaveq 
  4327be:	c3                   	retq   

00000000004327bf <l_strton>:
  4327bf:	55                   	push   %rbp
  4327c0:	48 89 e5             	mov    %rsp,%rbp
  4327c3:	48 83 ec 10          	sub    $0x10,%rsp
  4327c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4327cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4327cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4327d3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4327d7:	0f b6 c0             	movzbl %al,%eax
  4327da:	83 e0 0f             	and    $0xf,%eax
  4327dd:	83 f8 04             	cmp    $0x4,%eax
  4327e0:	74 07                	je     4327e9 <l_strton+0x2a>
  4327e2:	b8 00 00 00 00       	mov    $0x0,%eax
  4327e7:	eb 58                	jmp    432841 <l_strton+0x82>
  4327e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4327ed:	48 8b 00             	mov    (%rax),%rax
  4327f0:	48 8d 50 18          	lea    0x18(%rax),%rdx
  4327f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4327f8:	48 89 c6             	mov    %rax,%rsi
  4327fb:	48 89 d7             	mov    %rdx,%rdi
  4327fe:	e8 53 ca fe ff       	callq  41f256 <luaO_str2num>
  432803:	48 89 c2             	mov    %rax,%rdx
  432806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43280a:	48 8b 00             	mov    (%rax),%rax
  43280d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432811:	3c 04                	cmp    $0x4,%al
  432813:	75 14                	jne    432829 <l_strton+0x6a>
  432815:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432819:	48 8b 00             	mov    (%rax),%rax
  43281c:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  432820:	0f b6 c0             	movzbl %al,%eax
  432823:	48 83 c0 01          	add    $0x1,%rax
  432827:	eb 0f                	jmp    432838 <l_strton+0x79>
  432829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43282d:	48 8b 00             	mov    (%rax),%rax
  432830:	48 8b 40 10          	mov    0x10(%rax),%rax
  432834:	48 83 c0 01          	add    $0x1,%rax
  432838:	48 39 d0             	cmp    %rdx,%rax
  43283b:	0f 94 c0             	sete   %al
  43283e:	0f b6 c0             	movzbl %al,%eax
  432841:	c9                   	leaveq 
  432842:	c3                   	retq   

0000000000432843 <luaV_tonumber_>:
  432843:	55                   	push   %rbp
  432844:	48 89 e5             	mov    %rsp,%rbp
  432847:	48 83 ec 20          	sub    $0x20,%rsp
  43284b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43284f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  432853:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432857:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43285b:	3c 03                	cmp    $0x3,%al
  43285d:	75 1b                	jne    43287a <luaV_tonumber_+0x37>
  43285f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432863:	48 8b 00             	mov    (%rax),%rax
  432866:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43286b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43286f:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432873:	b8 01 00 00 00       	mov    $0x1,%eax
  432878:	eb 43                	jmp    4328bd <luaV_tonumber_+0x7a>
  43287a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  43287e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432882:	48 89 d6             	mov    %rdx,%rsi
  432885:	48 89 c7             	mov    %rax,%rdi
  432888:	e8 32 ff ff ff       	callq  4327bf <l_strton>
  43288d:	85 c0                	test   %eax,%eax
  43288f:	74 27                	je     4328b8 <luaV_tonumber_+0x75>
  432891:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
  432895:	3c 03                	cmp    $0x3,%al
  432897:	75 0b                	jne    4328a4 <luaV_tonumber_+0x61>
  432899:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43289d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4328a2:	eb 05                	jmp    4328a9 <luaV_tonumber_+0x66>
  4328a4:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  4328a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4328ad:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  4328b1:	b8 01 00 00 00       	mov    $0x1,%eax
  4328b6:	eb 05                	jmp    4328bd <luaV_tonumber_+0x7a>
  4328b8:	b8 00 00 00 00       	mov    $0x0,%eax
  4328bd:	c9                   	leaveq 
  4328be:	c3                   	retq   

00000000004328bf <luaV_flttointeger>:
  4328bf:	55                   	push   %rbp
  4328c0:	48 89 e5             	mov    %rsp,%rbp
  4328c3:	48 83 ec 30          	sub    $0x30,%rsp
  4328c7:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  4328cc:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4328d0:	89 75 dc             	mov    %esi,-0x24(%rbp)
  4328d3:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4328d8:	e8 a3 f1 fc ff       	callq  401a80 <floor@plt>
  4328dd:	66 48 0f 7e c0       	movq   %xmm0,%rax
  4328e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4328e6:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4328eb:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  4328f0:	7a 0c                	jp     4328fe <luaV_flttointeger+0x3f>
  4328f2:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4328f7:	66 0f 2e 45 f8       	ucomisd -0x8(%rbp),%xmm0
  4328fc:	74 29                	je     432927 <luaV_flttointeger+0x68>
  4328fe:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  432902:	75 07                	jne    43290b <luaV_flttointeger+0x4c>
  432904:	b8 00 00 00 00       	mov    $0x0,%eax
  432909:	eb 57                	jmp    432962 <luaV_flttointeger+0xa3>
  43290b:	83 7d dc 02          	cmpl   $0x2,-0x24(%rbp)
  43290f:	75 16                	jne    432927 <luaV_flttointeger+0x68>
  432911:	f2 0f 10 4d f8       	movsd  -0x8(%rbp),%xmm1
  432916:	f2 0f 10 05 9a 0f 01 	movsd  0x10f9a(%rip),%xmm0        # 4438b8 <disptab.5580+0x298>
  43291d:	00 
  43291e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  432922:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  432927:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  43292c:	66 0f 2f 05 8c 0f 01 	comisd 0x10f8c(%rip),%xmm0        # 4438c0 <disptab.5580+0x2a0>
  432933:	00 
  432934:	72 27                	jb     43295d <luaV_flttointeger+0x9e>
  432936:	f2 0f 10 05 8a 0f 01 	movsd  0x10f8a(%rip),%xmm0        # 4438c8 <disptab.5580+0x2a8>
  43293d:	00 
  43293e:	66 0f 2f 45 f8       	comisd -0x8(%rbp),%xmm0
  432943:	76 18                	jbe    43295d <luaV_flttointeger+0x9e>
  432945:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  43294a:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
  43294f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432953:	48 89 10             	mov    %rdx,(%rax)
  432956:	b8 01 00 00 00       	mov    $0x1,%eax
  43295b:	eb 05                	jmp    432962 <luaV_flttointeger+0xa3>
  43295d:	b8 00 00 00 00       	mov    $0x0,%eax
  432962:	c9                   	leaveq 
  432963:	c3                   	retq   

0000000000432964 <luaV_tointegerns>:
  432964:	55                   	push   %rbp
  432965:	48 89 e5             	mov    %rsp,%rbp
  432968:	48 83 ec 20          	sub    $0x20,%rsp
  43296c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  432970:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  432974:	89 55 ec             	mov    %edx,-0x14(%rbp)
  432977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43297b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43297f:	3c 13                	cmp    $0x13,%al
  432981:	75 1b                	jne    43299e <luaV_tointegerns+0x3a>
  432983:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432987:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43298b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43298e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432992:	89 d6                	mov    %edx,%esi
  432994:	48 89 c7             	mov    %rax,%rdi
  432997:	e8 23 ff ff ff       	callq  4328bf <luaV_flttointeger>
  43299c:	eb 26                	jmp    4329c4 <luaV_tointegerns+0x60>
  43299e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4329a2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4329a6:	3c 03                	cmp    $0x3,%al
  4329a8:	75 15                	jne    4329bf <luaV_tointegerns+0x5b>
  4329aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4329ae:	48 8b 10             	mov    (%rax),%rdx
  4329b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4329b5:	48 89 10             	mov    %rdx,(%rax)
  4329b8:	b8 01 00 00 00       	mov    $0x1,%eax
  4329bd:	eb 05                	jmp    4329c4 <luaV_tointegerns+0x60>
  4329bf:	b8 00 00 00 00       	mov    $0x0,%eax
  4329c4:	c9                   	leaveq 
  4329c5:	c3                   	retq   

00000000004329c6 <luaV_tointeger>:
  4329c6:	55                   	push   %rbp
  4329c7:	48 89 e5             	mov    %rsp,%rbp
  4329ca:	48 83 ec 30          	sub    $0x30,%rsp
  4329ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4329d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4329d6:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4329d9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4329dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4329e1:	48 89 d6             	mov    %rdx,%rsi
  4329e4:	48 89 c7             	mov    %rax,%rdi
  4329e7:	e8 d3 fd ff ff       	callq  4327bf <l_strton>
  4329ec:	85 c0                	test   %eax,%eax
  4329ee:	74 08                	je     4329f8 <luaV_tointeger+0x32>
  4329f0:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4329f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4329f8:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4329fb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4329ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432a03:	48 89 ce             	mov    %rcx,%rsi
  432a06:	48 89 c7             	mov    %rax,%rdi
  432a09:	e8 56 ff ff ff       	callq  432964 <luaV_tointegerns>
  432a0e:	c9                   	leaveq 
  432a0f:	c3                   	retq   

0000000000432a10 <forlimit>:
  432a10:	55                   	push   %rbp
  432a11:	48 89 e5             	mov    %rsp,%rbp
  432a14:	48 83 ec 40          	sub    $0x40,%rsp
  432a18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  432a1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  432a20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  432a24:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  432a28:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  432a2c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  432a31:	79 07                	jns    432a3a <forlimit+0x2a>
  432a33:	ba 02 00 00 00       	mov    $0x2,%edx
  432a38:	eb 05                	jmp    432a3f <forlimit+0x2f>
  432a3a:	ba 01 00 00 00       	mov    $0x1,%edx
  432a3f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  432a43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432a47:	48 89 ce             	mov    %rcx,%rsi
  432a4a:	48 89 c7             	mov    %rax,%rdi
  432a4d:	e8 74 ff ff ff       	callq  4329c6 <luaV_tointeger>
  432a52:	85 c0                	test   %eax,%eax
  432a54:	0f 85 a3 00 00 00    	jne    432afd <forlimit+0xed>
  432a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432a5e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432a62:	3c 13                	cmp    $0x13,%al
  432a64:	75 14                	jne    432a7a <forlimit+0x6a>
  432a66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432a6a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432a6e:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  432a73:	b8 00 00 00 00       	mov    $0x0,%eax
  432a78:	eb 18                	jmp    432a92 <forlimit+0x82>
  432a7a:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  432a7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432a82:	48 89 d6             	mov    %rdx,%rsi
  432a85:	48 89 c7             	mov    %rax,%rdi
  432a88:	e8 b6 fd ff ff       	callq  432843 <luaV_tonumber_>
  432a8d:	85 c0                	test   %eax,%eax
  432a8f:	0f 94 c0             	sete   %al
  432a92:	84 c0                	test   %al,%al
  432a94:	74 18                	je     432aae <forlimit+0x9e>
  432a96:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  432a9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432a9e:	ba 80 32 44 00       	mov    $0x443280,%edx
  432aa3:	48 89 ce             	mov    %rcx,%rsi
  432aa6:	48 89 c7             	mov    %rax,%rdi
  432aa9:	e8 7b dd fd ff       	callq  410829 <luaG_forerror>
  432aae:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  432ab3:	66 0f ef c9          	pxor   %xmm1,%xmm1
  432ab7:	66 0f 2f c1          	comisd %xmm1,%xmm0
  432abb:	76 21                	jbe    432ade <forlimit+0xce>
  432abd:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  432ac2:	79 07                	jns    432acb <forlimit+0xbb>
  432ac4:	b8 01 00 00 00       	mov    $0x1,%eax
  432ac9:	eb 5d                	jmp    432b28 <forlimit+0x118>
  432acb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432acf:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
  432ad6:	ff ff 7f 
  432ad9:	48 89 30             	mov    %rsi,(%rax)
  432adc:	eb 1f                	jmp    432afd <forlimit+0xed>
  432ade:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  432ae3:	7e 07                	jle    432aec <forlimit+0xdc>
  432ae5:	b8 01 00 00 00       	mov    $0x1,%eax
  432aea:	eb 3c                	jmp    432b28 <forlimit+0x118>
  432aec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432af0:	48 bf 00 00 00 00 00 	movabs $0x8000000000000000,%rdi
  432af7:	00 00 80 
  432afa:	48 89 38             	mov    %rdi,(%rax)
  432afd:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  432b02:	7e 13                	jle    432b17 <forlimit+0x107>
  432b04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432b08:	48 8b 00             	mov    (%rax),%rax
  432b0b:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  432b0f:	0f 9f c0             	setg   %al
  432b12:	0f b6 c0             	movzbl %al,%eax
  432b15:	eb 11                	jmp    432b28 <forlimit+0x118>
  432b17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432b1b:	48 8b 00             	mov    (%rax),%rax
  432b1e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  432b22:	0f 9c c0             	setl   %al
  432b25:	0f b6 c0             	movzbl %al,%eax
  432b28:	c9                   	leaveq 
  432b29:	c3                   	retq   

0000000000432b2a <forprep>:
  432b2a:	55                   	push   %rbp
  432b2b:	48 89 e5             	mov    %rsp,%rbp
  432b2e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  432b35:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  432b3c:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  432b43:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432b4a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  432b4e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432b55:	48 83 c0 10          	add    $0x10,%rax
  432b59:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  432b5d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432b64:	48 83 c0 20          	add    $0x20,%rax
  432b68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  432b6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432b70:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432b74:	3c 03                	cmp    $0x3,%al
  432b76:	0f 85 1a 01 00 00    	jne    432c96 <forprep+0x16c>
  432b7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432b80:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432b84:	3c 03                	cmp    $0x3,%al
  432b86:	0f 85 0a 01 00 00    	jne    432c96 <forprep+0x16c>
  432b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432b90:	48 8b 00             	mov    (%rax),%rax
  432b93:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  432b97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432b9b:	48 8b 00             	mov    (%rax),%rax
  432b9e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  432ba2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  432ba7:	75 19                	jne    432bc2 <forprep+0x98>
  432ba9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432bb0:	be 86 32 44 00       	mov    $0x443286,%esi
  432bb5:	48 89 c7             	mov    %rax,%rdi
  432bb8:	b8 00 00 00 00       	mov    $0x0,%eax
  432bbd:	e8 b7 df fd ff       	callq  410b79 <luaG_runerror>
  432bc2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432bc9:	48 83 c0 30          	add    $0x30,%rax
  432bcd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  432bd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432bd5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  432bd9:	48 89 10             	mov    %rdx,(%rax)
  432bdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432be0:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  432be4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  432be8:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
  432bec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  432bf0:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  432bf4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432bfb:	49 89 f8             	mov    %rdi,%r8
  432bfe:	48 89 c7             	mov    %rax,%rdi
  432c01:	e8 0a fe ff ff       	callq  432a10 <forlimit>
  432c06:	85 c0                	test   %eax,%eax
  432c08:	74 0a                	je     432c14 <forprep+0xea>
  432c0a:	b8 01 00 00 00       	mov    $0x1,%eax
  432c0f:	e9 8f 02 00 00       	jmpq   432ea3 <forprep+0x379>
  432c14:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  432c19:	7e 32                	jle    432c4d <forprep+0x123>
  432c1b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  432c1f:	48 89 c2             	mov    %rax,%rdx
  432c22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432c26:	48 29 c2             	sub    %rax,%rdx
  432c29:	48 89 d0             	mov    %rdx,%rax
  432c2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432c30:	48 83 7d d0 01       	cmpq   $0x1,-0x30(%rbp)
  432c35:	74 3f                	je     432c76 <forprep+0x14c>
  432c37:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  432c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432c3f:	ba 00 00 00 00       	mov    $0x0,%edx
  432c44:	48 f7 f1             	div    %rcx
  432c47:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432c4b:	eb 29                	jmp    432c76 <forprep+0x14c>
  432c4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432c51:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  432c55:	48 29 d0             	sub    %rdx,%rax
  432c58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432c5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432c60:	48 f7 d8             	neg    %rax
  432c63:	48 89 c1             	mov    %rax,%rcx
  432c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  432c6a:	ba 00 00 00 00       	mov    $0x0,%edx
  432c6f:	48 f7 f1             	div    %rcx
  432c72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432c76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432c7a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  432c7e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  432c82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  432c86:	48 89 10             	mov    %rdx,(%rax)
  432c89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  432c8d:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  432c91:	e9 08 02 00 00       	jmpq   432e9e <forprep+0x374>
  432c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432c9a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432c9e:	3c 13                	cmp    $0x13,%al
  432ca0:	75 14                	jne    432cb6 <forprep+0x18c>
  432ca2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432ca6:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432caa:	f2 0f 11 45 88       	movsd  %xmm0,-0x78(%rbp)
  432caf:	b8 00 00 00 00       	mov    $0x0,%eax
  432cb4:	eb 1d                	jmp    432cd3 <forprep+0x1a9>
  432cb6:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
  432cba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432cbe:	48 89 d6             	mov    %rdx,%rsi
  432cc1:	48 89 c7             	mov    %rax,%rdi
  432cc4:	e8 7a fb ff ff       	callq  432843 <luaV_tonumber_>
  432cc9:	85 c0                	test   %eax,%eax
  432ccb:	0f 94 c0             	sete   %al
  432cce:	0f b6 c0             	movzbl %al,%eax
  432cd1:	48 98                	cltq   
  432cd3:	48 85 c0             	test   %rax,%rax
  432cd6:	74 1b                	je     432cf3 <forprep+0x1c9>
  432cd8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  432cdc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432ce3:	ba 80 32 44 00       	mov    $0x443280,%edx
  432ce8:	48 89 ce             	mov    %rcx,%rsi
  432ceb:	48 89 c7             	mov    %rax,%rdi
  432cee:	e8 36 db fd ff       	callq  410829 <luaG_forerror>
  432cf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432cf7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432cfb:	3c 13                	cmp    $0x13,%al
  432cfd:	75 14                	jne    432d13 <forprep+0x1e9>
  432cff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432d03:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432d07:	f2 0f 11 45 80       	movsd  %xmm0,-0x80(%rbp)
  432d0c:	b8 00 00 00 00       	mov    $0x0,%eax
  432d11:	eb 1d                	jmp    432d30 <forprep+0x206>
  432d13:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
  432d17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432d1b:	48 89 d6             	mov    %rdx,%rsi
  432d1e:	48 89 c7             	mov    %rax,%rdi
  432d21:	e8 1d fb ff ff       	callq  432843 <luaV_tonumber_>
  432d26:	85 c0                	test   %eax,%eax
  432d28:	0f 94 c0             	sete   %al
  432d2b:	0f b6 c0             	movzbl %al,%eax
  432d2e:	48 98                	cltq   
  432d30:	48 85 c0             	test   %rax,%rax
  432d33:	74 1b                	je     432d50 <forprep+0x226>
  432d35:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  432d39:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432d40:	ba 99 32 44 00       	mov    $0x443299,%edx
  432d45:	48 89 ce             	mov    %rcx,%rsi
  432d48:	48 89 c7             	mov    %rax,%rdi
  432d4b:	e8 d9 da fd ff       	callq  410829 <luaG_forerror>
  432d50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432d54:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432d58:	3c 13                	cmp    $0x13,%al
  432d5a:	75 14                	jne    432d70 <forprep+0x246>
  432d5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432d60:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432d64:	f2 0f 11 45 90       	movsd  %xmm0,-0x70(%rbp)
  432d69:	b8 00 00 00 00       	mov    $0x0,%eax
  432d6e:	eb 1d                	jmp    432d8d <forprep+0x263>
  432d70:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  432d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432d78:	48 89 d6             	mov    %rdx,%rsi
  432d7b:	48 89 c7             	mov    %rax,%rdi
  432d7e:	e8 c0 fa ff ff       	callq  432843 <luaV_tonumber_>
  432d83:	85 c0                	test   %eax,%eax
  432d85:	0f 94 c0             	sete   %al
  432d88:	0f b6 c0             	movzbl %al,%eax
  432d8b:	48 98                	cltq   
  432d8d:	48 85 c0             	test   %rax,%rax
  432d90:	74 1b                	je     432dad <forprep+0x283>
  432d92:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  432d96:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432d9d:	ba 9e 32 44 00       	mov    $0x44329e,%edx
  432da2:	48 89 ce             	mov    %rcx,%rsi
  432da5:	48 89 c7             	mov    %rax,%rdi
  432da8:	e8 7c da fd ff       	callq  410829 <luaG_forerror>
  432dad:	f2 0f 10 45 80       	movsd  -0x80(%rbp),%xmm0
  432db2:	66 0f ef c9          	pxor   %xmm1,%xmm1
  432db6:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  432dba:	7a 23                	jp     432ddf <forprep+0x2b5>
  432dbc:	66 0f ef c9          	pxor   %xmm1,%xmm1
  432dc0:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  432dc4:	75 19                	jne    432ddf <forprep+0x2b5>
  432dc6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  432dcd:	be 86 32 44 00       	mov    $0x443286,%esi
  432dd2:	48 89 c7             	mov    %rax,%rdi
  432dd5:	b8 00 00 00 00       	mov    $0x0,%eax
  432dda:	e8 9a dd fd ff       	callq  410b79 <luaG_runerror>
  432ddf:	f2 0f 10 45 80       	movsd  -0x80(%rbp),%xmm0
  432de4:	66 0f ef c9          	pxor   %xmm1,%xmm1
  432de8:	66 0f 2f c1          	comisd %xmm1,%xmm0
  432dec:	76 13                	jbe    432e01 <forprep+0x2d7>
  432dee:	f2 0f 10 4d 88       	movsd  -0x78(%rbp),%xmm1
  432df3:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  432df8:	66 0f 2f c1          	comisd %xmm1,%xmm0
  432dfc:	0f 97 c0             	seta   %al
  432dff:	eb 11                	jmp    432e12 <forprep+0x2e8>
  432e01:	f2 0f 10 4d 90       	movsd  -0x70(%rbp),%xmm1
  432e06:	f2 0f 10 45 88       	movsd  -0x78(%rbp),%xmm0
  432e0b:	66 0f 2f c1          	comisd %xmm1,%xmm0
  432e0f:	0f 97 c0             	seta   %al
  432e12:	84 c0                	test   %al,%al
  432e14:	74 0a                	je     432e20 <forprep+0x2f6>
  432e16:	b8 01 00 00 00       	mov    $0x1,%eax
  432e1b:	e9 83 00 00 00       	jmpq   432ea3 <forprep+0x379>
  432e20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432e24:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  432e28:	f2 0f 10 45 88       	movsd  -0x78(%rbp),%xmm0
  432e2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  432e31:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432e35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  432e39:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  432e3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432e41:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  432e45:	f2 0f 10 45 80       	movsd  -0x80(%rbp),%xmm0
  432e4a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  432e4e:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432e52:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  432e56:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  432e5a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432e61:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  432e65:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  432e6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432e6e:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432e72:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  432e76:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  432e7a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  432e81:	48 83 c0 30          	add    $0x30,%rax
  432e85:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  432e89:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
  432e8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  432e92:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432e96:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  432e9a:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  432e9e:	b8 00 00 00 00       	mov    $0x0,%eax
  432ea3:	c9                   	leaveq 
  432ea4:	c3                   	retq   

0000000000432ea5 <floatforloop>:
  432ea5:	55                   	push   %rbp
  432ea6:	48 89 e5             	mov    %rsp,%rbp
  432ea9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  432ead:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432eb1:	48 83 c0 20          	add    $0x20,%rax
  432eb5:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432eb9:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  432ebe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432ec2:	48 83 c0 10          	add    $0x10,%rax
  432ec6:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432eca:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  432ecf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432ed3:	f2 0f 10 00          	movsd  (%rax),%xmm0
  432ed7:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  432edc:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  432ee1:	f2 0f 58 45 f8       	addsd  -0x8(%rbp),%xmm0
  432ee6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  432eeb:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  432ef0:	66 0f ef c9          	pxor   %xmm1,%xmm1
  432ef4:	66 0f 2f c1          	comisd %xmm1,%xmm0
  432ef8:	76 0f                	jbe    432f09 <floatforloop+0x64>
  432efa:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  432eff:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  432f04:	0f 93 c0             	setae  %al
  432f07:	eb 0d                	jmp    432f16 <floatforloop+0x71>
  432f09:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  432f0e:	66 0f 2f 45 f0       	comisd -0x10(%rbp),%xmm0
  432f13:	0f 93 c0             	setae  %al
  432f16:	84 c0                	test   %al,%al
  432f18:	74 3d                	je     432f57 <floatforloop+0xb2>
  432f1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432f1e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  432f22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  432f26:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  432f2b:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432f2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432f33:	48 83 c0 30          	add    $0x30,%rax
  432f37:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  432f3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432f3f:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  432f44:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  432f48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432f4c:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  432f50:	b8 01 00 00 00       	mov    $0x1,%eax
  432f55:	eb 05                	jmp    432f5c <floatforloop+0xb7>
  432f57:	b8 00 00 00 00       	mov    $0x0,%eax
  432f5c:	5d                   	pop    %rbp
  432f5d:	c3                   	retq   

0000000000432f5e <luaV_finishget>:
  432f5e:	55                   	push   %rbp
  432f5f:	48 89 e5             	mov    %rsp,%rbp
  432f62:	48 83 ec 50          	sub    $0x50,%rsp
  432f66:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  432f6a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  432f6e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  432f72:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  432f76:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  432f7a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  432f81:	e9 91 01 00 00       	jmpq   433117 <luaV_finishget+0x1b9>
  432f86:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  432f8b:	75 53                	jne    432fe0 <luaV_finishget+0x82>
  432f8d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  432f91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432f95:	ba 00 00 00 00       	mov    $0x0,%edx
  432f9a:	48 89 ce             	mov    %rcx,%rsi
  432f9d:	48 89 c7             	mov    %rax,%rdi
  432fa0:	e8 9a be ff ff       	callq  42ee3f <luaT_gettmbyobj>
  432fa5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  432fa9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  432fad:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  432fb1:	0f b6 c0             	movzbl %al,%eax
  432fb4:	83 e0 0f             	and    $0xf,%eax
  432fb7:	85 c0                	test   %eax,%eax
  432fb9:	0f 94 c0             	sete   %al
  432fbc:	0f b6 c0             	movzbl %al,%eax
  432fbf:	48 85 c0             	test   %rax,%rax
  432fc2:	0f 84 8e 00 00 00    	je     433056 <luaV_finishget+0xf8>
  432fc8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  432fcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432fd0:	ba ac 32 44 00       	mov    $0x4432ac,%edx
  432fd5:	48 89 ce             	mov    %rcx,%rsi
  432fd8:	48 89 c7             	mov    %rax,%rdi
  432fdb:	e8 79 d7 fd ff       	callq  410759 <luaG_typeerror>
  432fe0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432fe4:	48 8b 00             	mov    (%rax),%rax
  432fe7:	48 8b 40 28          	mov    0x28(%rax),%rax
  432feb:	48 85 c0             	test   %rax,%rax
  432fee:	74 49                	je     433039 <luaV_finishget+0xdb>
  432ff0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  432ff4:	48 8b 00             	mov    (%rax),%rax
  432ff7:	48 8b 40 28          	mov    0x28(%rax),%rax
  432ffb:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  432fff:	0f b6 c0             	movzbl %al,%eax
  433002:	83 e0 01             	and    $0x1,%eax
  433005:	85 c0                	test   %eax,%eax
  433007:	75 29                	jne    433032 <luaV_finishget+0xd4>
  433009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43300d:	48 8b 40 18          	mov    0x18(%rax),%rax
  433011:	48 8b 90 18 01 00 00 	mov    0x118(%rax),%rdx
  433018:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43301c:	48 8b 00             	mov    (%rax),%rax
  43301f:	48 8b 40 28          	mov    0x28(%rax),%rax
  433023:	be 00 00 00 00       	mov    $0x0,%esi
  433028:	48 89 c7             	mov    %rax,%rdi
  43302b:	e8 a7 bd ff ff       	callq  42edd7 <luaT_gettm>
  433030:	eb 0c                	jmp    43303e <luaV_finishget+0xe0>
  433032:	b8 00 00 00 00       	mov    $0x0,%eax
  433037:	eb 05                	jmp    43303e <luaV_finishget+0xe0>
  433039:	b8 00 00 00 00       	mov    $0x0,%eax
  43303e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  433042:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  433047:	75 0d                	jne    433056 <luaV_finishget+0xf8>
  433049:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43304d:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  433051:	e9 e4 00 00 00       	jmpq   43313a <luaV_finishget+0x1dc>
  433056:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43305a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43305e:	0f b6 c0             	movzbl %al,%eax
  433061:	83 e0 0f             	and    $0xf,%eax
  433064:	83 f8 06             	cmp    $0x6,%eax
  433067:	75 24                	jne    43308d <luaV_finishget+0x12f>
  433069:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  43306d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  433071:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  433075:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  433079:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43307d:	49 89 f8             	mov    %rdi,%r8
  433080:	48 89 c7             	mov    %rax,%rdi
  433083:	e8 60 c0 ff ff       	callq  42f0e8 <luaT_callTMres>
  433088:	e9 ad 00 00 00       	jmpq   43313a <luaV_finishget+0x1dc>
  43308d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  433091:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  433095:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433099:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43309d:	3c 45                	cmp    $0x45,%al
  43309f:	74 0f                	je     4330b0 <luaV_finishget+0x152>
  4330a1:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  4330a8:	00 
  4330a9:	b8 00 00 00 00       	mov    $0x0,%eax
  4330ae:	eb 30                	jmp    4330e0 <luaV_finishget+0x182>
  4330b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4330b4:	48 8b 00             	mov    (%rax),%rax
  4330b7:	48 89 c2             	mov    %rax,%rdx
  4330ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4330be:	48 89 c6             	mov    %rax,%rsi
  4330c1:	48 89 d7             	mov    %rdx,%rdi
  4330c4:	e8 06 a7 ff ff       	callq  42d7cf <luaH_get>
  4330c9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4330cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4330d1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4330d5:	0f b6 c0             	movzbl %al,%eax
  4330d8:	83 e0 0f             	and    $0xf,%eax
  4330db:	85 c0                	test   %eax,%eax
  4330dd:	0f 95 c0             	setne  %al
  4330e0:	84 c0                	test   %al,%al
  4330e2:	74 2f                	je     433113 <luaV_finishget+0x1b5>
  4330e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4330e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4330ec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4330f0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4330f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4330f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4330fc:	48 8b 12             	mov    (%rdx),%rdx
  4330ff:	48 89 10             	mov    %rdx,(%rax)
  433102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433106:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43310a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43310e:	88 50 08             	mov    %dl,0x8(%rax)
  433111:	eb 27                	jmp    43313a <luaV_finishget+0x1dc>
  433113:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  433117:	81 7d fc cf 07 00 00 	cmpl   $0x7cf,-0x4(%rbp)
  43311e:	0f 8e 62 fe ff ff    	jle    432f86 <luaV_finishget+0x28>
  433124:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433128:	be b8 32 44 00       	mov    $0x4432b8,%esi
  43312d:	48 89 c7             	mov    %rax,%rdi
  433130:	b8 00 00 00 00       	mov    $0x0,%eax
  433135:	e8 3f da fd ff       	callq  410b79 <luaG_runerror>
  43313a:	c9                   	leaveq 
  43313b:	c3                   	retq   

000000000043313c <luaV_finishset>:
  43313c:	55                   	push   %rbp
  43313d:	48 89 e5             	mov    %rsp,%rbp
  433140:	48 83 ec 60          	sub    $0x60,%rsp
  433144:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  433148:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  43314c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  433150:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  433154:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
  433158:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43315f:	e9 70 02 00 00       	jmpq   4333d4 <luaV_finishset+0x298>
  433164:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  433169:	0f 84 ff 00 00 00    	je     43326e <luaV_finishset+0x132>
  43316f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  433173:	48 8b 00             	mov    (%rax),%rax
  433176:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43317a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43317e:	48 8b 40 28          	mov    0x28(%rax),%rax
  433182:	48 85 c0             	test   %rax,%rax
  433185:	74 43                	je     4331ca <luaV_finishset+0x8e>
  433187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43318b:	48 8b 40 28          	mov    0x28(%rax),%rax
  43318f:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433193:	0f b6 c0             	movzbl %al,%eax
  433196:	83 e0 02             	and    $0x2,%eax
  433199:	85 c0                	test   %eax,%eax
  43319b:	75 26                	jne    4331c3 <luaV_finishset+0x87>
  43319d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4331a1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4331a5:	48 8b 90 20 01 00 00 	mov    0x120(%rax),%rdx
  4331ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4331b0:	48 8b 40 28          	mov    0x28(%rax),%rax
  4331b4:	be 01 00 00 00       	mov    $0x1,%esi
  4331b9:	48 89 c7             	mov    %rax,%rdi
  4331bc:	e8 16 bc ff ff       	callq  42edd7 <luaT_gettm>
  4331c1:	eb 0c                	jmp    4331cf <luaV_finishset+0x93>
  4331c3:	b8 00 00 00 00       	mov    $0x0,%eax
  4331c8:	eb 05                	jmp    4331cf <luaV_finishset+0x93>
  4331ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4331cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4331d3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4331d8:	0f 85 df 00 00 00    	jne    4332bd <luaV_finishset+0x181>
  4331de:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4331e2:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4331e6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4331ea:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4331ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4331f2:	49 89 f8             	mov    %rdi,%r8
  4331f5:	48 89 c7             	mov    %rax,%rdi
  4331f8:	e8 92 a6 ff ff       	callq  42d88f <luaH_finishset>
  4331fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433201:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433205:	83 e0 c0             	and    $0xffffffc0,%eax
  433208:	89 c2                	mov    %eax,%edx
  43320a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43320e:	88 50 0a             	mov    %dl,0xa(%rax)
  433211:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  433215:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433219:	0f b6 c0             	movzbl %al,%eax
  43321c:	83 e0 40             	and    $0x40,%eax
  43321f:	85 c0                	test   %eax,%eax
  433221:	0f 84 d0 01 00 00    	je     4333f7 <luaV_finishset+0x2bb>
  433227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43322b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43322f:	0f b6 c0             	movzbl %al,%eax
  433232:	83 e0 20             	and    $0x20,%eax
  433235:	85 c0                	test   %eax,%eax
  433237:	0f 84 ba 01 00 00    	je     4333f7 <luaV_finishset+0x2bb>
  43323d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  433241:	48 8b 00             	mov    (%rax),%rax
  433244:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  433248:	0f b6 c0             	movzbl %al,%eax
  43324b:	83 e0 18             	and    $0x18,%eax
  43324e:	85 c0                	test   %eax,%eax
  433250:	0f 84 a1 01 00 00    	je     4333f7 <luaV_finishset+0x2bb>
  433256:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  43325a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43325e:	48 89 d6             	mov    %rdx,%rsi
  433261:	48 89 c7             	mov    %rax,%rdi
  433264:	e8 82 18 fe ff       	callq  414aeb <luaC_barrierback_>
  433269:	e9 89 01 00 00       	jmpq   4333f7 <luaV_finishset+0x2bb>
  43326e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  433272:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433276:	ba 01 00 00 00       	mov    $0x1,%edx
  43327b:	48 89 ce             	mov    %rcx,%rsi
  43327e:	48 89 c7             	mov    %rax,%rdi
  433281:	e8 b9 bb ff ff       	callq  42ee3f <luaT_gettmbyobj>
  433286:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  43328a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43328e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433292:	0f b6 c0             	movzbl %al,%eax
  433295:	83 e0 0f             	and    $0xf,%eax
  433298:	85 c0                	test   %eax,%eax
  43329a:	0f 94 c0             	sete   %al
  43329d:	0f b6 c0             	movzbl %al,%eax
  4332a0:	48 85 c0             	test   %rax,%rax
  4332a3:	74 18                	je     4332bd <luaV_finishset+0x181>
  4332a5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4332a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4332ad:	ba ac 32 44 00       	mov    $0x4432ac,%edx
  4332b2:	48 89 ce             	mov    %rcx,%rsi
  4332b5:	48 89 c7             	mov    %rax,%rdi
  4332b8:	e8 9c d4 fd ff       	callq  410759 <luaG_typeerror>
  4332bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4332c1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4332c5:	0f b6 c0             	movzbl %al,%eax
  4332c8:	83 e0 0f             	and    $0xf,%eax
  4332cb:	83 f8 06             	cmp    $0x6,%eax
  4332ce:	75 24                	jne    4332f4 <luaV_finishset+0x1b8>
  4332d0:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4332d4:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4332d8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4332dc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4332e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4332e4:	49 89 f8             	mov    %rdi,%r8
  4332e7:	48 89 c7             	mov    %rax,%rdi
  4332ea:	e8 b6 bc ff ff       	callq  42efa5 <luaT_callTM>
  4332ef:	e9 07 01 00 00       	jmpq   4333fb <luaV_finishset+0x2bf>
  4332f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4332f8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4332fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  433300:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433304:	3c 45                	cmp    $0x45,%al
  433306:	74 0f                	je     433317 <luaV_finishset+0x1db>
  433308:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  43330f:	00 
  433310:	b8 00 00 00 00       	mov    $0x0,%eax
  433315:	eb 30                	jmp    433347 <luaV_finishset+0x20b>
  433317:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43331b:	48 8b 00             	mov    (%rax),%rax
  43331e:	48 89 c2             	mov    %rax,%rdx
  433321:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  433325:	48 89 c6             	mov    %rax,%rsi
  433328:	48 89 d7             	mov    %rdx,%rdi
  43332b:	e8 9f a4 ff ff       	callq  42d7cf <luaH_get>
  433330:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  433334:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  433338:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43333c:	0f b6 c0             	movzbl %al,%eax
  43333f:	83 e0 0f             	and    $0xf,%eax
  433342:	85 c0                	test   %eax,%eax
  433344:	0f 95 c0             	setne  %al
  433347:	84 c0                	test   %al,%al
  433349:	0f 84 81 00 00 00    	je     4333d0 <luaV_finishset+0x294>
  43334f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  433353:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  433357:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43335b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43335f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433363:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  433367:	48 8b 12             	mov    (%rdx),%rdx
  43336a:	48 89 10             	mov    %rdx,(%rax)
  43336d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433371:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  433375:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433379:	88 50 08             	mov    %dl,0x8(%rax)
  43337c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  433380:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433384:	0f b6 c0             	movzbl %al,%eax
  433387:	83 e0 40             	and    $0x40,%eax
  43338a:	85 c0                	test   %eax,%eax
  43338c:	74 6c                	je     4333fa <luaV_finishset+0x2be>
  43338e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  433392:	48 8b 00             	mov    (%rax),%rax
  433395:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  433399:	0f b6 c0             	movzbl %al,%eax
  43339c:	83 e0 20             	and    $0x20,%eax
  43339f:	85 c0                	test   %eax,%eax
  4333a1:	74 57                	je     4333fa <luaV_finishset+0x2be>
  4333a3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4333a7:	48 8b 00             	mov    (%rax),%rax
  4333aa:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4333ae:	0f b6 c0             	movzbl %al,%eax
  4333b1:	83 e0 18             	and    $0x18,%eax
  4333b4:	85 c0                	test   %eax,%eax
  4333b6:	74 42                	je     4333fa <luaV_finishset+0x2be>
  4333b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4333bc:	48 8b 10             	mov    (%rax),%rdx
  4333bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4333c3:	48 89 d6             	mov    %rdx,%rsi
  4333c6:	48 89 c7             	mov    %rax,%rdi
  4333c9:	e8 1d 17 fe ff       	callq  414aeb <luaC_barrierback_>
  4333ce:	eb 2a                	jmp    4333fa <luaV_finishset+0x2be>
  4333d0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4333d4:	81 7d fc cf 07 00 00 	cmpl   $0x7cf,-0x4(%rbp)
  4333db:	0f 8e 83 fd ff ff    	jle    433164 <luaV_finishset+0x28>
  4333e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4333e5:	be e0 32 44 00       	mov    $0x4432e0,%esi
  4333ea:	48 89 c7             	mov    %rax,%rdi
  4333ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4333f2:	e8 82 d7 fd ff       	callq  410b79 <luaG_runerror>
  4333f7:	90                   	nop
  4333f8:	eb 01                	jmp    4333fb <luaV_finishset+0x2bf>
  4333fa:	90                   	nop
  4333fb:	c9                   	leaveq 
  4333fc:	c3                   	retq   

00000000004333fd <l_strcmp>:
  4333fd:	55                   	push   %rbp
  4333fe:	48 89 e5             	mov    %rsp,%rbp
  433401:	48 83 ec 40          	sub    $0x40,%rsp
  433405:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  433409:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  43340d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433411:	48 83 c0 18          	add    $0x18,%rax
  433415:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433419:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43341d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433421:	3c 04                	cmp    $0x4,%al
  433423:	75 0d                	jne    433432 <l_strcmp+0x35>
  433425:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433429:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  43342d:	0f b6 c0             	movzbl %al,%eax
  433430:	eb 08                	jmp    43343a <l_strcmp+0x3d>
  433432:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433436:	48 8b 40 10          	mov    0x10(%rax),%rax
  43343a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  43343e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  433442:	48 83 c0 18          	add    $0x18,%rax
  433446:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43344a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43344e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433452:	3c 04                	cmp    $0x4,%al
  433454:	75 0d                	jne    433463 <l_strcmp+0x66>
  433456:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43345a:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  43345e:	0f b6 c0             	movzbl %al,%eax
  433461:	eb 08                	jmp    43346b <l_strcmp+0x6e>
  433463:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  433467:	48 8b 40 10          	mov    0x10(%rax),%rax
  43346b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43346f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  433473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433477:	48 89 d6             	mov    %rdx,%rsi
  43347a:	48 89 c7             	mov    %rax,%rdi
  43347d:	e8 7e e2 fc ff       	callq  401700 <strcoll@plt>
  433482:	89 45 dc             	mov    %eax,-0x24(%rbp)
  433485:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  433489:	74 05                	je     433490 <l_strcmp+0x93>
  43348b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43348e:	eb 65                	jmp    4334f5 <l_strcmp+0xf8>
  433490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433494:	48 89 c7             	mov    %rax,%rdi
  433497:	e8 d4 e2 fc ff       	callq  401770 <strlen@plt>
  43349c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4334a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334a4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  4334a8:	75 10                	jne    4334ba <l_strcmp+0xbd>
  4334aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  4334b2:	0f 95 c0             	setne  %al
  4334b5:	0f b6 c0             	movzbl %al,%eax
  4334b8:	eb 3b                	jmp    4334f5 <l_strcmp+0xf8>
  4334ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  4334c2:	75 07                	jne    4334cb <l_strcmp+0xce>
  4334c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4334c9:	eb 2a                	jmp    4334f5 <l_strcmp+0xf8>
  4334cb:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
  4334d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334d4:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  4334d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334dc:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
  4334e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334e4:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  4334e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4334ec:	48 29 45 e0          	sub    %rax,-0x20(%rbp)
  4334f0:	e9 7a ff ff ff       	jmpq   43346f <l_strcmp+0x72>
  4334f5:	c9                   	leaveq 
  4334f6:	c3                   	retq   

00000000004334f7 <LTintfloat>:
  4334f7:	55                   	push   %rbp
  4334f8:	48 89 e5             	mov    %rsp,%rbp
  4334fb:	48 83 ec 20          	sub    $0x20,%rsp
  4334ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  433503:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  433508:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43350c:	48 ba 00 00 00 00 00 	movabs $0x20000000000000,%rdx
  433513:	00 20 00 
  433516:	48 01 c2             	add    %rax,%rdx
  433519:	48 b8 00 00 00 00 00 	movabs $0x40000000000000,%rax
  433520:	00 40 00 
  433523:	48 39 c2             	cmp    %rax,%rdx
  433526:	77 17                	ja     43353f <LTintfloat+0x48>
  433528:	f2 48 0f 2a 4d e8    	cvtsi2sdq -0x18(%rbp),%xmm1
  43352e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  433533:	66 0f 2f c1          	comisd %xmm1,%xmm0
  433537:	0f 97 c0             	seta   %al
  43353a:	0f b6 c0             	movzbl %al,%eax
  43353d:	eb 3d                	jmp    43357c <LTintfloat+0x85>
  43353f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  433543:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  433548:	be 02 00 00 00       	mov    $0x2,%esi
  43354d:	48 89 c7             	mov    %rax,%rdi
  433550:	e8 6a f3 ff ff       	callq  4328bf <luaV_flttointeger>
  433555:	85 c0                	test   %eax,%eax
  433557:	74 10                	je     433569 <LTintfloat+0x72>
  433559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43355d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  433561:	0f 9c c0             	setl   %al
  433564:	0f b6 c0             	movzbl %al,%eax
  433567:	eb 13                	jmp    43357c <LTintfloat+0x85>
  433569:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  43356e:	66 0f ef c9          	pxor   %xmm1,%xmm1
  433572:	66 0f 2f c1          	comisd %xmm1,%xmm0
  433576:	0f 97 c0             	seta   %al
  433579:	0f b6 c0             	movzbl %al,%eax
  43357c:	c9                   	leaveq 
  43357d:	c3                   	retq   

000000000043357e <LEintfloat>:
  43357e:	55                   	push   %rbp
  43357f:	48 89 e5             	mov    %rsp,%rbp
  433582:	48 83 ec 20          	sub    $0x20,%rsp
  433586:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43358a:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  43358f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433593:	48 ba 00 00 00 00 00 	movabs $0x20000000000000,%rdx
  43359a:	00 20 00 
  43359d:	48 01 c2             	add    %rax,%rdx
  4335a0:	48 b8 00 00 00 00 00 	movabs $0x40000000000000,%rax
  4335a7:	00 40 00 
  4335aa:	48 39 c2             	cmp    %rax,%rdx
  4335ad:	77 17                	ja     4335c6 <LEintfloat+0x48>
  4335af:	f2 48 0f 2a 4d e8    	cvtsi2sdq -0x18(%rbp),%xmm1
  4335b5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  4335ba:	66 0f 2f c1          	comisd %xmm1,%xmm0
  4335be:	0f 93 c0             	setae  %al
  4335c1:	0f b6 c0             	movzbl %al,%eax
  4335c4:	eb 3d                	jmp    433603 <LEintfloat+0x85>
  4335c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4335ca:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  4335cf:	be 01 00 00 00       	mov    $0x1,%esi
  4335d4:	48 89 c7             	mov    %rax,%rdi
  4335d7:	e8 e3 f2 ff ff       	callq  4328bf <luaV_flttointeger>
  4335dc:	85 c0                	test   %eax,%eax
  4335de:	74 10                	je     4335f0 <LEintfloat+0x72>
  4335e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4335e4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  4335e8:	0f 9e c0             	setle  %al
  4335eb:	0f b6 c0             	movzbl %al,%eax
  4335ee:	eb 13                	jmp    433603 <LEintfloat+0x85>
  4335f0:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  4335f5:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4335f9:	66 0f 2f c1          	comisd %xmm1,%xmm0
  4335fd:	0f 97 c0             	seta   %al
  433600:	0f b6 c0             	movzbl %al,%eax
  433603:	c9                   	leaveq 
  433604:	c3                   	retq   

0000000000433605 <LTfloatint>:
  433605:	55                   	push   %rbp
  433606:	48 89 e5             	mov    %rsp,%rbp
  433609:	48 83 ec 20          	sub    $0x20,%rsp
  43360d:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  433612:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  433616:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43361a:	48 ba 00 00 00 00 00 	movabs $0x20000000000000,%rdx
  433621:	00 20 00 
  433624:	48 01 c2             	add    %rax,%rdx
  433627:	48 b8 00 00 00 00 00 	movabs $0x40000000000000,%rax
  43362e:	00 40 00 
  433631:	48 39 c2             	cmp    %rax,%rdx
  433634:	77 13                	ja     433649 <LTfloatint+0x44>
  433636:	f2 48 0f 2a 45 e0    	cvtsi2sdq -0x20(%rbp),%xmm0
  43363c:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  433641:	0f 97 c0             	seta   %al
  433644:	0f b6 c0             	movzbl %al,%eax
  433647:	eb 39                	jmp    433682 <LTfloatint+0x7d>
  433649:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  43364d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  433652:	be 01 00 00 00       	mov    $0x1,%esi
  433657:	48 89 c7             	mov    %rax,%rdi
  43365a:	e8 60 f2 ff ff       	callq  4328bf <luaV_flttointeger>
  43365f:	85 c0                	test   %eax,%eax
  433661:	74 10                	je     433673 <LTfloatint+0x6e>
  433663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433667:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  43366b:	0f 9f c0             	setg   %al
  43366e:	0f b6 c0             	movzbl %al,%eax
  433671:	eb 0f                	jmp    433682 <LTfloatint+0x7d>
  433673:	66 0f ef c0          	pxor   %xmm0,%xmm0
  433677:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  43367c:	0f 97 c0             	seta   %al
  43367f:	0f b6 c0             	movzbl %al,%eax
  433682:	c9                   	leaveq 
  433683:	c3                   	retq   

0000000000433684 <LEfloatint>:
  433684:	55                   	push   %rbp
  433685:	48 89 e5             	mov    %rsp,%rbp
  433688:	48 83 ec 20          	sub    $0x20,%rsp
  43368c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  433691:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  433695:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433699:	48 ba 00 00 00 00 00 	movabs $0x20000000000000,%rdx
  4336a0:	00 20 00 
  4336a3:	48 01 c2             	add    %rax,%rdx
  4336a6:	48 b8 00 00 00 00 00 	movabs $0x40000000000000,%rax
  4336ad:	00 40 00 
  4336b0:	48 39 c2             	cmp    %rax,%rdx
  4336b3:	77 13                	ja     4336c8 <LEfloatint+0x44>
  4336b5:	f2 48 0f 2a 45 e0    	cvtsi2sdq -0x20(%rbp),%xmm0
  4336bb:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  4336c0:	0f 93 c0             	setae  %al
  4336c3:	0f b6 c0             	movzbl %al,%eax
  4336c6:	eb 39                	jmp    433701 <LEfloatint+0x7d>
  4336c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4336cc:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4336d1:	be 02 00 00 00       	mov    $0x2,%esi
  4336d6:	48 89 c7             	mov    %rax,%rdi
  4336d9:	e8 e1 f1 ff ff       	callq  4328bf <luaV_flttointeger>
  4336de:	85 c0                	test   %eax,%eax
  4336e0:	74 10                	je     4336f2 <LEfloatint+0x6e>
  4336e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4336e6:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4336ea:	0f 9d c0             	setge  %al
  4336ed:	0f b6 c0             	movzbl %al,%eax
  4336f0:	eb 0f                	jmp    433701 <LEfloatint+0x7d>
  4336f2:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4336f6:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
  4336fb:	0f 97 c0             	seta   %al
  4336fe:	0f b6 c0             	movzbl %al,%eax
  433701:	c9                   	leaveq 
  433702:	c3                   	retq   

0000000000433703 <LTnum>:
  433703:	55                   	push   %rbp
  433704:	48 89 e5             	mov    %rsp,%rbp
  433707:	48 83 ec 20          	sub    $0x20,%rsp
  43370b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43370f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  433713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433717:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43371b:	3c 03                	cmp    $0x3,%al
  43371d:	75 40                	jne    43375f <LTnum+0x5c>
  43371f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433723:	48 8b 00             	mov    (%rax),%rax
  433726:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43372a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43372e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433732:	3c 03                	cmp    $0x3,%al
  433734:	75 13                	jne    433749 <LTnum+0x46>
  433736:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43373a:	48 8b 00             	mov    (%rax),%rax
  43373d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  433741:	0f 9c c0             	setl   %al
  433744:	0f b6 c0             	movzbl %al,%eax
  433747:	eb 58                	jmp    4337a1 <LTnum+0x9e>
  433749:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43374d:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433755:	48 89 c7             	mov    %rax,%rdi
  433758:	e8 9a fd ff ff       	callq  4334f7 <LTintfloat>
  43375d:	eb 42                	jmp    4337a1 <LTnum+0x9e>
  43375f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433763:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433767:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  43376c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433770:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433774:	3c 13                	cmp    $0x13,%al
  433776:	75 15                	jne    43378d <LTnum+0x8a>
  433778:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43377c:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433780:	66 0f 2f 45 f0       	comisd -0x10(%rbp),%xmm0
  433785:	0f 97 c0             	seta   %al
  433788:	0f b6 c0             	movzbl %al,%eax
  43378b:	eb 14                	jmp    4337a1 <LTnum+0x9e>
  43378d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433791:	48 8b 00             	mov    (%rax),%rax
  433794:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  433799:	48 89 c7             	mov    %rax,%rdi
  43379c:	e8 64 fe ff ff       	callq  433605 <LTfloatint>
  4337a1:	c9                   	leaveq 
  4337a2:	c3                   	retq   

00000000004337a3 <LEnum>:
  4337a3:	55                   	push   %rbp
  4337a4:	48 89 e5             	mov    %rsp,%rbp
  4337a7:	48 83 ec 20          	sub    $0x20,%rsp
  4337ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4337af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4337b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4337b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4337bb:	3c 03                	cmp    $0x3,%al
  4337bd:	75 40                	jne    4337ff <LEnum+0x5c>
  4337bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4337c3:	48 8b 00             	mov    (%rax),%rax
  4337c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4337ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4337ce:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4337d2:	3c 03                	cmp    $0x3,%al
  4337d4:	75 13                	jne    4337e9 <LEnum+0x46>
  4337d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4337da:	48 8b 00             	mov    (%rax),%rax
  4337dd:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4337e1:	0f 9e c0             	setle  %al
  4337e4:	0f b6 c0             	movzbl %al,%eax
  4337e7:	eb 58                	jmp    433841 <LEnum+0x9e>
  4337e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4337ed:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4337f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4337f5:	48 89 c7             	mov    %rax,%rdi
  4337f8:	e8 81 fd ff ff       	callq  43357e <LEintfloat>
  4337fd:	eb 42                	jmp    433841 <LEnum+0x9e>
  4337ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433803:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433807:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  43380c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433810:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433814:	3c 13                	cmp    $0x13,%al
  433816:	75 15                	jne    43382d <LEnum+0x8a>
  433818:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43381c:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433820:	66 0f 2f 45 f0       	comisd -0x10(%rbp),%xmm0
  433825:	0f 93 c0             	setae  %al
  433828:	0f b6 c0             	movzbl %al,%eax
  43382b:	eb 14                	jmp    433841 <LEnum+0x9e>
  43382d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433831:	48 8b 00             	mov    (%rax),%rax
  433834:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  433839:	48 89 c7             	mov    %rax,%rdi
  43383c:	e8 43 fe ff ff       	callq  433684 <LEfloatint>
  433841:	c9                   	leaveq 
  433842:	c3                   	retq   

0000000000433843 <lessthanothers>:
  433843:	55                   	push   %rbp
  433844:	48 89 e5             	mov    %rsp,%rbp
  433847:	48 83 ec 20          	sub    $0x20,%rsp
  43384b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43384f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  433853:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  433857:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43385b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43385f:	0f b6 c0             	movzbl %al,%eax
  433862:	83 e0 0f             	and    $0xf,%eax
  433865:	83 f8 04             	cmp    $0x4,%eax
  433868:	75 37                	jne    4338a1 <lessthanothers+0x5e>
  43386a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43386e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433872:	0f b6 c0             	movzbl %al,%eax
  433875:	83 e0 0f             	and    $0xf,%eax
  433878:	83 f8 04             	cmp    $0x4,%eax
  43387b:	75 24                	jne    4338a1 <lessthanothers+0x5e>
  43387d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433881:	48 8b 00             	mov    (%rax),%rax
  433884:	48 89 c2             	mov    %rax,%rdx
  433887:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43388b:	48 8b 00             	mov    (%rax),%rax
  43388e:	48 89 d6             	mov    %rdx,%rsi
  433891:	48 89 c7             	mov    %rax,%rdi
  433894:	e8 64 fb ff ff       	callq  4333fd <l_strcmp>
  433899:	c1 e8 1f             	shr    $0x1f,%eax
  43389c:	0f b6 c0             	movzbl %al,%eax
  43389f:	eb 19                	jmp    4338ba <lessthanothers+0x77>
  4338a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4338a5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4338a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4338ad:	b9 14 00 00 00       	mov    $0x14,%ecx
  4338b2:	48 89 c7             	mov    %rax,%rdi
  4338b5:	e8 6d bc ff ff       	callq  42f527 <luaT_callorderTM>
  4338ba:	c9                   	leaveq 
  4338bb:	c3                   	retq   

00000000004338bc <luaV_lessthan>:
  4338bc:	55                   	push   %rbp
  4338bd:	48 89 e5             	mov    %rsp,%rbp
  4338c0:	48 83 ec 20          	sub    $0x20,%rsp
  4338c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4338c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4338cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4338d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4338d4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4338d8:	0f b6 c0             	movzbl %al,%eax
  4338db:	83 e0 0f             	and    $0xf,%eax
  4338de:	83 f8 03             	cmp    $0x3,%eax
  4338e1:	75 28                	jne    43390b <luaV_lessthan+0x4f>
  4338e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4338e7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4338eb:	0f b6 c0             	movzbl %al,%eax
  4338ee:	83 e0 0f             	and    $0xf,%eax
  4338f1:	83 f8 03             	cmp    $0x3,%eax
  4338f4:	75 15                	jne    43390b <luaV_lessthan+0x4f>
  4338f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4338fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4338fe:	48 89 d6             	mov    %rdx,%rsi
  433901:	48 89 c7             	mov    %rax,%rdi
  433904:	e8 fa fd ff ff       	callq  433703 <LTnum>
  433909:	eb 17                	jmp    433922 <luaV_lessthan+0x66>
  43390b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  43390f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  433913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433917:	48 89 ce             	mov    %rcx,%rsi
  43391a:	48 89 c7             	mov    %rax,%rdi
  43391d:	e8 21 ff ff ff       	callq  433843 <lessthanothers>
  433922:	c9                   	leaveq 
  433923:	c3                   	retq   

0000000000433924 <lessequalothers>:
  433924:	55                   	push   %rbp
  433925:	48 89 e5             	mov    %rsp,%rbp
  433928:	48 83 ec 20          	sub    $0x20,%rsp
  43392c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  433930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  433934:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  433938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43393c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433940:	0f b6 c0             	movzbl %al,%eax
  433943:	83 e0 0f             	and    $0xf,%eax
  433946:	83 f8 04             	cmp    $0x4,%eax
  433949:	75 39                	jne    433984 <lessequalothers+0x60>
  43394b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43394f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433953:	0f b6 c0             	movzbl %al,%eax
  433956:	83 e0 0f             	and    $0xf,%eax
  433959:	83 f8 04             	cmp    $0x4,%eax
  43395c:	75 26                	jne    433984 <lessequalothers+0x60>
  43395e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433962:	48 8b 00             	mov    (%rax),%rax
  433965:	48 89 c2             	mov    %rax,%rdx
  433968:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43396c:	48 8b 00             	mov    (%rax),%rax
  43396f:	48 89 d6             	mov    %rdx,%rsi
  433972:	48 89 c7             	mov    %rax,%rdi
  433975:	e8 83 fa ff ff       	callq  4333fd <l_strcmp>
  43397a:	85 c0                	test   %eax,%eax
  43397c:	0f 9e c0             	setle  %al
  43397f:	0f b6 c0             	movzbl %al,%eax
  433982:	eb 19                	jmp    43399d <lessequalothers+0x79>
  433984:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  433988:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  43398c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433990:	b9 15 00 00 00       	mov    $0x15,%ecx
  433995:	48 89 c7             	mov    %rax,%rdi
  433998:	e8 8a bb ff ff       	callq  42f527 <luaT_callorderTM>
  43399d:	c9                   	leaveq 
  43399e:	c3                   	retq   

000000000043399f <luaV_lessequal>:
  43399f:	55                   	push   %rbp
  4339a0:	48 89 e5             	mov    %rsp,%rbp
  4339a3:	48 83 ec 20          	sub    $0x20,%rsp
  4339a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4339ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4339af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4339b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4339b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4339bb:	0f b6 c0             	movzbl %al,%eax
  4339be:	83 e0 0f             	and    $0xf,%eax
  4339c1:	83 f8 03             	cmp    $0x3,%eax
  4339c4:	75 28                	jne    4339ee <luaV_lessequal+0x4f>
  4339c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4339ca:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4339ce:	0f b6 c0             	movzbl %al,%eax
  4339d1:	83 e0 0f             	and    $0xf,%eax
  4339d4:	83 f8 03             	cmp    $0x3,%eax
  4339d7:	75 15                	jne    4339ee <luaV_lessequal+0x4f>
  4339d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4339dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4339e1:	48 89 d6             	mov    %rdx,%rsi
  4339e4:	48 89 c7             	mov    %rax,%rdi
  4339e7:	e8 b7 fd ff ff       	callq  4337a3 <LEnum>
  4339ec:	eb 17                	jmp    433a05 <luaV_lessequal+0x66>
  4339ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4339f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4339f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4339fa:	48 89 ce             	mov    %rcx,%rsi
  4339fd:	48 89 c7             	mov    %rax,%rdi
  433a00:	e8 1f ff ff ff       	callq  433924 <lessequalothers>
  433a05:	c9                   	leaveq 
  433a06:	c3                   	retq   

0000000000433a07 <luaV_equalobj>:
  433a07:	55                   	push   %rbp
  433a08:	48 89 e5             	mov    %rsp,%rbp
  433a0b:	48 83 ec 40          	sub    $0x40,%rsp
  433a0f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  433a13:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  433a17:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  433a1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433a1f:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  433a23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433a27:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433a2b:	31 d0                	xor    %edx,%eax
  433a2d:	0f b6 c0             	movzbl %al,%eax
  433a30:	83 e0 3f             	and    $0x3f,%eax
  433a33:	85 c0                	test   %eax,%eax
  433a35:	0f 84 92 00 00 00    	je     433acd <luaV_equalobj+0xc6>
  433a3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433a3f:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  433a43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433a47:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433a4b:	31 d0                	xor    %edx,%eax
  433a4d:	0f b6 c0             	movzbl %al,%eax
  433a50:	83 e0 0f             	and    $0xf,%eax
  433a53:	85 c0                	test   %eax,%eax
  433a55:	75 13                	jne    433a6a <luaV_equalobj+0x63>
  433a57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433a5b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433a5f:	0f b6 c0             	movzbl %al,%eax
  433a62:	83 e0 0f             	and    $0xf,%eax
  433a65:	83 f8 03             	cmp    $0x3,%eax
  433a68:	74 0a                	je     433a74 <luaV_equalobj+0x6d>
  433a6a:	b8 00 00 00 00       	mov    $0x0,%eax
  433a6f:	e9 c3 03 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433a74:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  433a78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433a7c:	ba 00 00 00 00       	mov    $0x0,%edx
  433a81:	48 89 ce             	mov    %rcx,%rsi
  433a84:	48 89 c7             	mov    %rax,%rdi
  433a87:	e8 d8 ee ff ff       	callq  432964 <luaV_tointegerns>
  433a8c:	85 c0                	test   %eax,%eax
  433a8e:	74 33                	je     433ac3 <luaV_equalobj+0xbc>
  433a90:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
  433a94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433a98:	ba 00 00 00 00       	mov    $0x0,%edx
  433a9d:	48 89 ce             	mov    %rcx,%rsi
  433aa0:	48 89 c7             	mov    %rax,%rdi
  433aa3:	e8 bc ee ff ff       	callq  432964 <luaV_tointegerns>
  433aa8:	85 c0                	test   %eax,%eax
  433aaa:	74 17                	je     433ac3 <luaV_equalobj+0xbc>
  433aac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  433ab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433ab4:	48 39 c2             	cmp    %rax,%rdx
  433ab7:	75 0a                	jne    433ac3 <luaV_equalobj+0xbc>
  433ab9:	b8 01 00 00 00       	mov    $0x1,%eax
  433abe:	e9 74 03 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433ac3:	b8 00 00 00 00       	mov    $0x0,%eax
  433ac8:	e9 6a 03 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433acd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433ad1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433ad5:	0f b6 c0             	movzbl %al,%eax
  433ad8:	83 e0 3f             	and    $0x3f,%eax
  433adb:	83 f8 16             	cmp    $0x16,%eax
  433ade:	0f 87 d3 02 00 00    	ja     433db7 <luaV_equalobj+0x3b0>
  433ae4:	89 c0                	mov    %eax,%eax
  433ae6:	48 8b 04 c5 10 33 44 	mov    0x443310(,%rax,8),%rax
  433aed:	00 
  433aee:	ff e0                	jmpq   *%rax
  433af0:	b8 01 00 00 00       	mov    $0x1,%eax
  433af5:	e9 3d 03 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433afa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433afe:	48 8b 10             	mov    (%rax),%rdx
  433b01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b05:	48 8b 00             	mov    (%rax),%rax
  433b08:	48 39 c2             	cmp    %rax,%rdx
  433b0b:	0f 94 c0             	sete   %al
  433b0e:	0f b6 c0             	movzbl %al,%eax
  433b11:	e9 21 03 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433b16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433b1a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  433b1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b22:	f2 0f 10 08          	movsd  (%rax),%xmm1
  433b26:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  433b2a:	0f 9b c0             	setnp  %al
  433b2d:	ba 00 00 00 00       	mov    $0x0,%edx
  433b32:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  433b36:	0f 45 c2             	cmovne %edx,%eax
  433b39:	0f b6 c0             	movzbl %al,%eax
  433b3c:	e9 f6 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433b41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433b45:	48 8b 10             	mov    (%rax),%rdx
  433b48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b4c:	48 8b 00             	mov    (%rax),%rax
  433b4f:	48 39 c2             	cmp    %rax,%rdx
  433b52:	0f 94 c0             	sete   %al
  433b55:	0f b6 c0             	movzbl %al,%eax
  433b58:	e9 da 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433b5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433b61:	48 8b 10             	mov    (%rax),%rdx
  433b64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b68:	48 8b 00             	mov    (%rax),%rax
  433b6b:	48 39 c2             	cmp    %rax,%rdx
  433b6e:	0f 94 c0             	sete   %al
  433b71:	0f b6 c0             	movzbl %al,%eax
  433b74:	e9 be 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433b79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433b7d:	48 8b 10             	mov    (%rax),%rdx
  433b80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b84:	48 8b 00             	mov    (%rax),%rax
  433b87:	48 39 c2             	cmp    %rax,%rdx
  433b8a:	0f 94 c0             	sete   %al
  433b8d:	0f b6 c0             	movzbl %al,%eax
  433b90:	e9 a2 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433b95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433b99:	48 8b 00             	mov    (%rax),%rax
  433b9c:	48 89 c2             	mov    %rax,%rdx
  433b9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433ba3:	48 8b 00             	mov    (%rax),%rax
  433ba6:	48 89 d6             	mov    %rdx,%rsi
  433ba9:	48 89 c7             	mov    %rax,%rdi
  433bac:	e8 8d 2c ff ff       	callq  42683e <luaS_eqlngstr>
  433bb1:	e9 81 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433bb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433bba:	48 8b 10             	mov    (%rax),%rdx
  433bbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433bc1:	48 8b 00             	mov    (%rax),%rax
  433bc4:	48 39 c2             	cmp    %rax,%rdx
  433bc7:	75 0a                	jne    433bd3 <luaV_equalobj+0x1cc>
  433bc9:	b8 01 00 00 00       	mov    $0x1,%eax
  433bce:	e9 64 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433bd3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  433bd8:	75 0a                	jne    433be4 <luaV_equalobj+0x1dd>
  433bda:	b8 00 00 00 00       	mov    $0x0,%eax
  433bdf:	e9 53 02 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433be4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433be8:	48 8b 00             	mov    (%rax),%rax
  433beb:	48 8b 40 18          	mov    0x18(%rax),%rax
  433bef:	48 85 c0             	test   %rax,%rax
  433bf2:	74 49                	je     433c3d <luaV_equalobj+0x236>
  433bf4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433bf8:	48 8b 00             	mov    (%rax),%rax
  433bfb:	48 8b 40 18          	mov    0x18(%rax),%rax
  433bff:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433c03:	0f b6 c0             	movzbl %al,%eax
  433c06:	83 e0 20             	and    $0x20,%eax
  433c09:	85 c0                	test   %eax,%eax
  433c0b:	75 29                	jne    433c36 <luaV_equalobj+0x22f>
  433c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433c11:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c15:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
  433c1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433c20:	48 8b 00             	mov    (%rax),%rax
  433c23:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c27:	be 05 00 00 00       	mov    $0x5,%esi
  433c2c:	48 89 c7             	mov    %rax,%rdi
  433c2f:	e8 a3 b1 ff ff       	callq  42edd7 <luaT_gettm>
  433c34:	eb 0c                	jmp    433c42 <luaV_equalobj+0x23b>
  433c36:	b8 00 00 00 00       	mov    $0x0,%eax
  433c3b:	eb 05                	jmp    433c42 <luaV_equalobj+0x23b>
  433c3d:	b8 00 00 00 00       	mov    $0x0,%eax
  433c42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433c46:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  433c4b:	0f 85 7f 01 00 00    	jne    433dd0 <luaV_equalobj+0x3c9>
  433c51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433c55:	48 8b 00             	mov    (%rax),%rax
  433c58:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c5c:	48 85 c0             	test   %rax,%rax
  433c5f:	74 49                	je     433caa <luaV_equalobj+0x2a3>
  433c61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433c65:	48 8b 00             	mov    (%rax),%rax
  433c68:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c6c:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433c70:	0f b6 c0             	movzbl %al,%eax
  433c73:	83 e0 20             	and    $0x20,%eax
  433c76:	85 c0                	test   %eax,%eax
  433c78:	75 29                	jne    433ca3 <luaV_equalobj+0x29c>
  433c7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433c7e:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c82:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
  433c89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433c8d:	48 8b 00             	mov    (%rax),%rax
  433c90:	48 8b 40 18          	mov    0x18(%rax),%rax
  433c94:	be 05 00 00 00       	mov    $0x5,%esi
  433c99:	48 89 c7             	mov    %rax,%rdi
  433c9c:	e8 36 b1 ff ff       	callq  42edd7 <luaT_gettm>
  433ca1:	eb 0c                	jmp    433caf <luaV_equalobj+0x2a8>
  433ca3:	b8 00 00 00 00       	mov    $0x0,%eax
  433ca8:	eb 05                	jmp    433caf <luaV_equalobj+0x2a8>
  433caa:	b8 00 00 00 00       	mov    $0x0,%eax
  433caf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433cb3:	e9 18 01 00 00       	jmpq   433dd0 <luaV_equalobj+0x3c9>
  433cb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433cbc:	48 8b 10             	mov    (%rax),%rdx
  433cbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433cc3:	48 8b 00             	mov    (%rax),%rax
  433cc6:	48 39 c2             	cmp    %rax,%rdx
  433cc9:	75 0a                	jne    433cd5 <luaV_equalobj+0x2ce>
  433ccb:	b8 01 00 00 00       	mov    $0x1,%eax
  433cd0:	e9 62 01 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433cd5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  433cda:	75 0a                	jne    433ce6 <luaV_equalobj+0x2df>
  433cdc:	b8 00 00 00 00       	mov    $0x0,%eax
  433ce1:	e9 51 01 00 00       	jmpq   433e37 <luaV_equalobj+0x430>
  433ce6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433cea:	48 8b 00             	mov    (%rax),%rax
  433ced:	48 8b 40 28          	mov    0x28(%rax),%rax
  433cf1:	48 85 c0             	test   %rax,%rax
  433cf4:	74 49                	je     433d3f <luaV_equalobj+0x338>
  433cf6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433cfa:	48 8b 00             	mov    (%rax),%rax
  433cfd:	48 8b 40 28          	mov    0x28(%rax),%rax
  433d01:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433d05:	0f b6 c0             	movzbl %al,%eax
  433d08:	83 e0 20             	and    $0x20,%eax
  433d0b:	85 c0                	test   %eax,%eax
  433d0d:	75 29                	jne    433d38 <luaV_equalobj+0x331>
  433d0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433d13:	48 8b 40 18          	mov    0x18(%rax),%rax
  433d17:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
  433d1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433d22:	48 8b 00             	mov    (%rax),%rax
  433d25:	48 8b 40 28          	mov    0x28(%rax),%rax
  433d29:	be 05 00 00 00       	mov    $0x5,%esi
  433d2e:	48 89 c7             	mov    %rax,%rdi
  433d31:	e8 a1 b0 ff ff       	callq  42edd7 <luaT_gettm>
  433d36:	eb 0c                	jmp    433d44 <luaV_equalobj+0x33d>
  433d38:	b8 00 00 00 00       	mov    $0x0,%eax
  433d3d:	eb 05                	jmp    433d44 <luaV_equalobj+0x33d>
  433d3f:	b8 00 00 00 00       	mov    $0x0,%eax
  433d44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433d48:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  433d4d:	0f 85 80 00 00 00    	jne    433dd3 <luaV_equalobj+0x3cc>
  433d53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433d57:	48 8b 00             	mov    (%rax),%rax
  433d5a:	48 8b 40 28          	mov    0x28(%rax),%rax
  433d5e:	48 85 c0             	test   %rax,%rax
  433d61:	74 49                	je     433dac <luaV_equalobj+0x3a5>
  433d63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433d67:	48 8b 00             	mov    (%rax),%rax
  433d6a:	48 8b 40 28          	mov    0x28(%rax),%rax
  433d6e:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  433d72:	0f b6 c0             	movzbl %al,%eax
  433d75:	83 e0 20             	and    $0x20,%eax
  433d78:	85 c0                	test   %eax,%eax
  433d7a:	75 29                	jne    433da5 <luaV_equalobj+0x39e>
  433d7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433d80:	48 8b 40 18          	mov    0x18(%rax),%rax
  433d84:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
  433d8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433d8f:	48 8b 00             	mov    (%rax),%rax
  433d92:	48 8b 40 28          	mov    0x28(%rax),%rax
  433d96:	be 05 00 00 00       	mov    $0x5,%esi
  433d9b:	48 89 c7             	mov    %rax,%rdi
  433d9e:	e8 34 b0 ff ff       	callq  42edd7 <luaT_gettm>
  433da3:	eb 0c                	jmp    433db1 <luaV_equalobj+0x3aa>
  433da5:	b8 00 00 00 00       	mov    $0x0,%eax
  433daa:	eb 05                	jmp    433db1 <luaV_equalobj+0x3aa>
  433dac:	b8 00 00 00 00       	mov    $0x0,%eax
  433db1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433db5:	eb 1c                	jmp    433dd3 <luaV_equalobj+0x3cc>
  433db7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433dbb:	48 8b 10             	mov    (%rax),%rdx
  433dbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  433dc2:	48 8b 00             	mov    (%rax),%rax
  433dc5:	48 39 c2             	cmp    %rax,%rdx
  433dc8:	0f 94 c0             	sete   %al
  433dcb:	0f b6 c0             	movzbl %al,%eax
  433dce:	eb 67                	jmp    433e37 <luaV_equalobj+0x430>
  433dd0:	90                   	nop
  433dd1:	eb 01                	jmp    433dd4 <luaV_equalobj+0x3cd>
  433dd3:	90                   	nop
  433dd4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  433dd9:	75 07                	jne    433de2 <luaV_equalobj+0x3db>
  433ddb:	b8 00 00 00 00       	mov    $0x0,%eax
  433de0:	eb 55                	jmp    433e37 <luaV_equalobj+0x430>
  433de2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433de6:	48 8b 78 10          	mov    0x10(%rax),%rdi
  433dea:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  433dee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  433df2:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  433df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433dfa:	49 89 f8             	mov    %rdi,%r8
  433dfd:	48 89 c7             	mov    %rax,%rdi
  433e00:	e8 e3 b2 ff ff       	callq  42f0e8 <luaT_callTMres>
  433e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433e09:	48 8b 40 10          	mov    0x10(%rax),%rax
  433e0d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433e11:	3c 01                	cmp    $0x1,%al
  433e13:	74 1d                	je     433e32 <luaV_equalobj+0x42b>
  433e15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433e19:	48 8b 40 10          	mov    0x10(%rax),%rax
  433e1d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433e21:	0f b6 c0             	movzbl %al,%eax
  433e24:	83 e0 0f             	and    $0xf,%eax
  433e27:	85 c0                	test   %eax,%eax
  433e29:	74 07                	je     433e32 <luaV_equalobj+0x42b>
  433e2b:	b8 01 00 00 00       	mov    $0x1,%eax
  433e30:	eb 05                	jmp    433e37 <luaV_equalobj+0x430>
  433e32:	b8 00 00 00 00       	mov    $0x0,%eax
  433e37:	c9                   	leaveq 
  433e38:	c3                   	retq   

0000000000433e39 <copy2buff>:
  433e39:	55                   	push   %rbp
  433e3a:	48 89 e5             	mov    %rsp,%rbp
  433e3d:	48 83 ec 30          	sub    $0x30,%rsp
  433e41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  433e45:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  433e48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  433e4c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  433e53:	00 
  433e54:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  433e57:	48 98                	cltq   
  433e59:	48 c1 e0 04          	shl    $0x4,%rax
  433e5d:	48 f7 d8             	neg    %rax
  433e60:	48 89 c2             	mov    %rax,%rdx
  433e63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433e67:	48 01 d0             	add    %rdx,%rax
  433e6a:	48 8b 00             	mov    (%rax),%rax
  433e6d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433e71:	3c 04                	cmp    $0x4,%al
  433e73:	75 22                	jne    433e97 <copy2buff+0x5e>
  433e75:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  433e78:	48 98                	cltq   
  433e7a:	48 c1 e0 04          	shl    $0x4,%rax
  433e7e:	48 f7 d8             	neg    %rax
  433e81:	48 89 c2             	mov    %rax,%rdx
  433e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433e88:	48 01 d0             	add    %rdx,%rax
  433e8b:	48 8b 00             	mov    (%rax),%rax
  433e8e:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  433e92:	0f b6 c0             	movzbl %al,%eax
  433e95:	eb 1d                	jmp    433eb4 <copy2buff+0x7b>
  433e97:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  433e9a:	48 98                	cltq   
  433e9c:	48 c1 e0 04          	shl    $0x4,%rax
  433ea0:	48 f7 d8             	neg    %rax
  433ea3:	48 89 c2             	mov    %rax,%rdx
  433ea6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433eaa:	48 01 d0             	add    %rdx,%rax
  433ead:	48 8b 00             	mov    (%rax),%rax
  433eb0:	48 8b 40 10          	mov    0x10(%rax),%rax
  433eb4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  433eb8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  433ebb:	48 98                	cltq   
  433ebd:	48 c1 e0 04          	shl    $0x4,%rax
  433ec1:	48 f7 d8             	neg    %rax
  433ec4:	48 89 c2             	mov    %rax,%rdx
  433ec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433ecb:	48 01 d0             	add    %rdx,%rax
  433ece:	48 8b 00             	mov    (%rax),%rax
  433ed1:	48 8d 70 18          	lea    0x18(%rax),%rsi
  433ed5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  433ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433edd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  433ee1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  433ee5:	48 89 c2             	mov    %rax,%rdx
  433ee8:	48 89 cf             	mov    %rcx,%rdi
  433eeb:	e8 70 d9 fc ff       	callq  401860 <memcpy@plt>
  433ef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  433ef4:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  433ef8:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  433efc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  433f00:	0f 8f 4e ff ff ff    	jg     433e54 <copy2buff+0x1b>
  433f06:	90                   	nop
  433f07:	c9                   	leaveq 
  433f08:	c3                   	retq   

0000000000433f09 <luaV_concat>:
  433f09:	55                   	push   %rbp
  433f0a:	48 89 e5             	mov    %rsp,%rbp
  433f0d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  433f11:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  433f15:	89 75 84             	mov    %esi,-0x7c(%rbp)
  433f18:	83 7d 84 01          	cmpl   $0x1,-0x7c(%rbp)
  433f1c:	0f 84 02 04 00 00    	je     434324 <luaV_concat+0x41b>
  433f22:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  433f26:	48 8b 40 10          	mov    0x10(%rax),%rax
  433f2a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  433f2e:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
  433f35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433f39:	48 83 e8 20          	sub    $0x20,%rax
  433f3d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433f41:	0f b6 c0             	movzbl %al,%eax
  433f44:	83 e0 0f             	and    $0xf,%eax
  433f47:	83 f8 04             	cmp    $0x4,%eax
  433f4a:	74 17                	je     433f63 <luaV_concat+0x5a>
  433f4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433f50:	48 83 e8 20          	sub    $0x20,%rax
  433f54:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433f58:	0f b6 c0             	movzbl %al,%eax
  433f5b:	83 e0 0f             	and    $0xf,%eax
  433f5e:	83 f8 03             	cmp    $0x3,%eax
  433f61:	75 4a                	jne    433fad <luaV_concat+0xa4>
  433f63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433f67:	48 83 e8 10          	sub    $0x10,%rax
  433f6b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433f6f:	0f b6 c0             	movzbl %al,%eax
  433f72:	83 e0 0f             	and    $0xf,%eax
  433f75:	83 f8 04             	cmp    $0x4,%eax
  433f78:	74 44                	je     433fbe <luaV_concat+0xb5>
  433f7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433f7e:	48 83 e8 10          	sub    $0x10,%rax
  433f82:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433f86:	0f b6 c0             	movzbl %al,%eax
  433f89:	83 e0 0f             	and    $0xf,%eax
  433f8c:	83 f8 03             	cmp    $0x3,%eax
  433f8f:	75 1c                	jne    433fad <luaV_concat+0xa4>
  433f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433f95:	48 83 e8 10          	sub    $0x10,%rax
  433f99:	48 89 c2             	mov    %rax,%rdx
  433f9c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  433fa0:	48 89 d6             	mov    %rdx,%rsi
  433fa3:	48 89 c7             	mov    %rax,%rdi
  433fa6:	e8 aa b4 fe ff       	callq  41f455 <luaO_tostring>
  433fab:	eb 11                	jmp    433fbe <luaV_concat+0xb5>
  433fad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  433fb1:	48 89 c7             	mov    %rax,%rdi
  433fb4:	e8 23 b4 ff ff       	callq  42f3dc <luaT_tryconcatTM>
  433fb9:	e9 28 03 00 00       	jmpq   4342e6 <luaV_concat+0x3dd>
  433fbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433fc2:	48 83 e8 10          	sub    $0x10,%rax
  433fc6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433fca:	3c 44                	cmp    $0x44,%al
  433fcc:	75 68                	jne    434036 <luaV_concat+0x12d>
  433fce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433fd2:	48 83 e8 10          	sub    $0x10,%rax
  433fd6:	48 8b 00             	mov    (%rax),%rax
  433fd9:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  433fdd:	84 c0                	test   %al,%al
  433fdf:	75 55                	jne    434036 <luaV_concat+0x12d>
  433fe1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433fe5:	48 83 e8 20          	sub    $0x20,%rax
  433fe9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  433fed:	0f b6 c0             	movzbl %al,%eax
  433ff0:	83 e0 0f             	and    $0xf,%eax
  433ff3:	83 f8 04             	cmp    $0x4,%eax
  433ff6:	0f 84 e9 02 00 00    	je     4342e5 <luaV_concat+0x3dc>
  433ffc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434000:	48 83 e8 20          	sub    $0x20,%rax
  434004:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434008:	0f b6 c0             	movzbl %al,%eax
  43400b:	83 e0 0f             	and    $0xf,%eax
  43400e:	83 f8 03             	cmp    $0x3,%eax
  434011:	0f 85 ce 02 00 00    	jne    4342e5 <luaV_concat+0x3dc>
  434017:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43401b:	48 83 e8 20          	sub    $0x20,%rax
  43401f:	48 89 c2             	mov    %rax,%rdx
  434022:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434026:	48 89 d6             	mov    %rdx,%rsi
  434029:	48 89 c7             	mov    %rax,%rdi
  43402c:	e8 24 b4 fe ff       	callq  41f455 <luaO_tostring>
  434031:	e9 af 02 00 00       	jmpq   4342e5 <luaV_concat+0x3dc>
  434036:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43403a:	48 83 e8 20          	sub    $0x20,%rax
  43403e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434042:	3c 44                	cmp    $0x44,%al
  434044:	75 4d                	jne    434093 <luaV_concat+0x18a>
  434046:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43404a:	48 83 e8 20          	sub    $0x20,%rax
  43404e:	48 8b 00             	mov    (%rax),%rax
  434051:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  434055:	84 c0                	test   %al,%al
  434057:	75 3a                	jne    434093 <luaV_concat+0x18a>
  434059:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43405d:	48 83 e8 20          	sub    $0x20,%rax
  434061:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  434065:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434069:	48 83 e8 10          	sub    $0x10,%rax
  43406d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  434071:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  434075:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  434079:	48 8b 12             	mov    (%rdx),%rdx
  43407c:	48 89 10             	mov    %rdx,(%rax)
  43407f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  434083:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434087:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43408b:	88 50 08             	mov    %dl,0x8(%rax)
  43408e:	e9 53 02 00 00       	jmpq   4342e6 <luaV_concat+0x3dd>
  434093:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434097:	48 83 e8 10          	sub    $0x10,%rax
  43409b:	48 8b 00             	mov    (%rax),%rax
  43409e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4340a2:	3c 04                	cmp    $0x4,%al
  4340a4:	75 14                	jne    4340ba <luaV_concat+0x1b1>
  4340a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4340aa:	48 83 e8 10          	sub    $0x10,%rax
  4340ae:	48 8b 00             	mov    (%rax),%rax
  4340b1:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  4340b5:	0f b6 c0             	movzbl %al,%eax
  4340b8:	eb 0f                	jmp    4340c9 <luaV_concat+0x1c0>
  4340ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4340be:	48 83 e8 10          	sub    $0x10,%rax
  4340c2:	48 8b 00             	mov    (%rax),%rax
  4340c5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4340c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4340cd:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4340d4:	e9 cd 00 00 00       	jmpq   4341a6 <luaV_concat+0x29d>
  4340d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4340dc:	48 98                	cltq   
  4340de:	48 c1 e0 04          	shl    $0x4,%rax
  4340e2:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  4340e9:	48 29 c2             	sub    %rax,%rdx
  4340ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4340f0:	48 01 d0             	add    %rdx,%rax
  4340f3:	48 8b 00             	mov    (%rax),%rax
  4340f6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4340fa:	3c 04                	cmp    $0x4,%al
  4340fc:	75 26                	jne    434124 <luaV_concat+0x21b>
  4340fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
  434101:	48 98                	cltq   
  434103:	48 c1 e0 04          	shl    $0x4,%rax
  434107:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  43410e:	48 29 c2             	sub    %rax,%rdx
  434111:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434115:	48 01 d0             	add    %rdx,%rax
  434118:	48 8b 00             	mov    (%rax),%rax
  43411b:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  43411f:	0f b6 c0             	movzbl %al,%eax
  434122:	eb 21                	jmp    434145 <luaV_concat+0x23c>
  434124:	8b 45 fc             	mov    -0x4(%rbp),%eax
  434127:	48 98                	cltq   
  434129:	48 c1 e0 04          	shl    $0x4,%rax
  43412d:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  434134:	48 29 c2             	sub    %rax,%rdx
  434137:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43413b:	48 01 d0             	add    %rdx,%rax
  43413e:	48 8b 00             	mov    (%rax),%rax
  434141:	48 8b 40 10          	mov    0x10(%rax),%rax
  434145:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  434149:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  434150:	ff ff 7f 
  434153:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
  434157:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
  43415b:	0f 93 c0             	setae  %al
  43415e:	0f b6 c0             	movzbl %al,%eax
  434161:	48 85 c0             	test   %rax,%rax
  434164:	74 34                	je     43419a <luaV_concat+0x291>
  434166:	8b 45 84             	mov    -0x7c(%rbp),%eax
  434169:	48 98                	cltq   
  43416b:	48 c1 e0 04          	shl    $0x4,%rax
  43416f:	48 f7 d8             	neg    %rax
  434172:	48 89 c2             	mov    %rax,%rdx
  434175:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434179:	48 01 c2             	add    %rax,%rdx
  43417c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434180:	48 89 50 10          	mov    %rdx,0x10(%rax)
  434184:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434188:	be c8 33 44 00       	mov    $0x4433c8,%esi
  43418d:	48 89 c7             	mov    %rax,%rdi
  434190:	b8 00 00 00 00       	mov    $0x0,%eax
  434195:	e8 df c9 fd ff       	callq  410b79 <luaG_runerror>
  43419a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43419e:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  4341a2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4341a6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4341a9:	3b 45 84             	cmp    -0x7c(%rbp),%eax
  4341ac:	0f 8d 87 00 00 00    	jge    434239 <luaV_concat+0x330>
  4341b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4341b5:	48 98                	cltq   
  4341b7:	48 c1 e0 04          	shl    $0x4,%rax
  4341bb:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  4341c2:	48 29 c2             	sub    %rax,%rdx
  4341c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4341c9:	48 01 d0             	add    %rdx,%rax
  4341cc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4341d0:	0f b6 c0             	movzbl %al,%eax
  4341d3:	83 e0 0f             	and    $0xf,%eax
  4341d6:	83 f8 04             	cmp    $0x4,%eax
  4341d9:	0f 84 fa fe ff ff    	je     4340d9 <luaV_concat+0x1d0>
  4341df:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4341e2:	48 98                	cltq   
  4341e4:	48 c1 e0 04          	shl    $0x4,%rax
  4341e8:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  4341ef:	48 29 c2             	sub    %rax,%rdx
  4341f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4341f6:	48 01 d0             	add    %rdx,%rax
  4341f9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4341fd:	0f b6 c0             	movzbl %al,%eax
  434200:	83 e0 0f             	and    $0xf,%eax
  434203:	83 f8 03             	cmp    $0x3,%eax
  434206:	75 31                	jne    434239 <luaV_concat+0x330>
  434208:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43420b:	48 98                	cltq   
  43420d:	48 c1 e0 04          	shl    $0x4,%rax
  434211:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx
  434218:	48 29 c2             	sub    %rax,%rdx
  43421b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43421f:	48 01 d0             	add    %rdx,%rax
  434222:	48 89 c2             	mov    %rax,%rdx
  434225:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434229:	48 89 d6             	mov    %rdx,%rsi
  43422c:	48 89 c7             	mov    %rax,%rdi
  43422f:	e8 21 b2 fe ff       	callq  41f455 <luaO_tostring>
  434234:	e9 a0 fe ff ff       	jmpq   4340d9 <luaV_concat+0x1d0>
  434239:	48 83 7d f0 28       	cmpq   $0x28,-0x10(%rbp)
  43423e:	77 32                	ja     434272 <luaV_concat+0x369>
  434240:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  434244:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  434247:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43424b:	89 ce                	mov    %ecx,%esi
  43424d:	48 89 c7             	mov    %rax,%rdi
  434250:	e8 e4 fb ff ff       	callq  433e39 <copy2buff>
  434255:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434259:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
  43425d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434261:	48 89 ce             	mov    %rcx,%rsi
  434264:	48 89 c7             	mov    %rax,%rdi
  434267:	e8 af 2d ff ff       	callq  42701b <luaS_newlstr>
  43426c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  434270:	eb 30                	jmp    4342a2 <luaV_concat+0x399>
  434272:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434276:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43427a:	48 89 d6             	mov    %rdx,%rsi
  43427d:	48 89 c7             	mov    %rax,%rdi
  434280:	e8 9a 2a ff ff       	callq  426d1f <luaS_createlngstrobj>
  434285:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  434289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43428d:	48 8d 50 18          	lea    0x18(%rax),%rdx
  434291:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  434294:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434298:	89 ce                	mov    %ecx,%esi
  43429a:	48 89 c7             	mov    %rax,%rdi
  43429d:	e8 97 fb ff ff       	callq  433e39 <copy2buff>
  4342a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4342a5:	48 98                	cltq   
  4342a7:	48 c1 e0 04          	shl    $0x4,%rax
  4342ab:	48 f7 d8             	neg    %rax
  4342ae:	48 89 c2             	mov    %rax,%rdx
  4342b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4342b5:	48 01 d0             	add    %rdx,%rax
  4342b8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4342bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4342c0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4342c4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4342c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4342cc:	48 89 10             	mov    %rdx,(%rax)
  4342cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4342d3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4342d7:	83 c8 40             	or     $0x40,%eax
  4342da:	89 c2                	mov    %eax,%edx
  4342dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4342e0:	88 50 08             	mov    %dl,0x8(%rax)
  4342e3:	eb 01                	jmp    4342e6 <luaV_concat+0x3dd>
  4342e5:	90                   	nop
  4342e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4342e9:	83 e8 01             	sub    $0x1,%eax
  4342ec:	29 45 84             	sub    %eax,-0x7c(%rbp)
  4342ef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4342f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4342f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4342fa:	48 63 c8             	movslq %eax,%rcx
  4342fd:	b8 00 00 00 00       	mov    $0x0,%eax
  434302:	48 29 c8             	sub    %rcx,%rax
  434305:	48 c1 e0 04          	shl    $0x4,%rax
  434309:	48 83 c0 10          	add    $0x10,%rax
  43430d:	48 01 c2             	add    %rax,%rdx
  434310:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434314:	48 89 50 10          	mov    %rdx,0x10(%rax)
  434318:	83 7d 84 01          	cmpl   $0x1,-0x7c(%rbp)
  43431c:	0f 8f 00 fc ff ff    	jg     433f22 <luaV_concat+0x19>
  434322:	eb 01                	jmp    434325 <luaV_concat+0x41c>
  434324:	90                   	nop
  434325:	c9                   	leaveq 
  434326:	c3                   	retq   

0000000000434327 <luaV_objlen>:
  434327:	55                   	push   %rbp
  434328:	48 89 e5             	mov    %rsp,%rbp
  43432b:	48 83 ec 50          	sub    $0x50,%rsp
  43432f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  434333:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  434337:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  43433b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43433f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434343:	0f b6 c0             	movzbl %al,%eax
  434346:	83 e0 3f             	and    $0x3f,%eax
  434349:	83 f8 05             	cmp    $0x5,%eax
  43434c:	74 17                	je     434365 <luaV_objlen+0x3e>
  43434e:	83 f8 14             	cmp    $0x14,%eax
  434351:	0f 84 d2 00 00 00    	je     434429 <luaV_objlen+0x102>
  434357:	83 f8 04             	cmp    $0x4,%eax
  43435a:	0f 84 9f 00 00 00    	je     4343ff <luaV_objlen+0xd8>
  434360:	e9 eb 00 00 00       	jmpq   434450 <luaV_objlen+0x129>
  434365:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434369:	48 8b 00             	mov    (%rax),%rax
  43436c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  434370:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434374:	48 8b 40 28          	mov    0x28(%rax),%rax
  434378:	48 85 c0             	test   %rax,%rax
  43437b:	74 43                	je     4343c0 <luaV_objlen+0x99>
  43437d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434381:	48 8b 40 28          	mov    0x28(%rax),%rax
  434385:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  434389:	0f b6 c0             	movzbl %al,%eax
  43438c:	83 e0 10             	and    $0x10,%eax
  43438f:	85 c0                	test   %eax,%eax
  434391:	75 26                	jne    4343b9 <luaV_objlen+0x92>
  434393:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434397:	48 8b 40 18          	mov    0x18(%rax),%rax
  43439b:	48 8b 90 38 01 00 00 	mov    0x138(%rax),%rdx
  4343a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4343a6:	48 8b 40 28          	mov    0x28(%rax),%rax
  4343aa:	be 04 00 00 00       	mov    $0x4,%esi
  4343af:	48 89 c7             	mov    %rax,%rdi
  4343b2:	e8 20 aa ff ff       	callq  42edd7 <luaT_gettm>
  4343b7:	eb 0c                	jmp    4343c5 <luaV_objlen+0x9e>
  4343b9:	b8 00 00 00 00       	mov    $0x0,%eax
  4343be:	eb 05                	jmp    4343c5 <luaV_objlen+0x9e>
  4343c0:	b8 00 00 00 00       	mov    $0x0,%eax
  4343c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4343c9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4343ce:	0f 85 cb 00 00 00    	jne    43449f <luaV_objlen+0x178>
  4343d4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4343d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4343dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4343e0:	48 89 c7             	mov    %rax,%rdi
  4343e3:	e8 57 97 ff ff       	callq  42db3f <luaH_getn>
  4343e8:	48 89 c2             	mov    %rax,%rdx
  4343eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4343ef:	48 89 10             	mov    %rdx,(%rax)
  4343f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4343f6:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4343fa:	e9 c3 00 00 00       	jmpq   4344c2 <luaV_objlen+0x19b>
  4343ff:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  434403:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  434407:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43440b:	48 8b 00             	mov    (%rax),%rax
  43440e:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  434412:	0f b6 d0             	movzbl %al,%edx
  434415:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434419:	48 89 10             	mov    %rdx,(%rax)
  43441c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434420:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  434424:	e9 99 00 00 00       	jmpq   4344c2 <luaV_objlen+0x19b>
  434429:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43442d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  434431:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434435:	48 8b 00             	mov    (%rax),%rax
  434438:	48 8b 40 10          	mov    0x10(%rax),%rax
  43443c:	48 89 c2             	mov    %rax,%rdx
  43443f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  434443:	48 89 10             	mov    %rdx,(%rax)
  434446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43444a:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  43444e:	eb 72                	jmp    4344c2 <luaV_objlen+0x19b>
  434450:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  434454:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434458:	ba 04 00 00 00       	mov    $0x4,%edx
  43445d:	48 89 ce             	mov    %rcx,%rsi
  434460:	48 89 c7             	mov    %rax,%rdi
  434463:	e8 d7 a9 ff ff       	callq  42ee3f <luaT_gettmbyobj>
  434468:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43446c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434470:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434474:	0f b6 c0             	movzbl %al,%eax
  434477:	83 e0 0f             	and    $0xf,%eax
  43447a:	85 c0                	test   %eax,%eax
  43447c:	0f 94 c0             	sete   %al
  43447f:	0f b6 c0             	movzbl %al,%eax
  434482:	48 85 c0             	test   %rax,%rax
  434485:	74 1b                	je     4344a2 <luaV_objlen+0x17b>
  434487:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  43448b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  43448f:	ba df 33 44 00       	mov    $0x4433df,%edx
  434494:	48 89 ce             	mov    %rcx,%rsi
  434497:	48 89 c7             	mov    %rax,%rdi
  43449a:	e8 ba c2 fd ff       	callq  410759 <luaG_typeerror>
  43449f:	90                   	nop
  4344a0:	eb 01                	jmp    4344a3 <luaV_objlen+0x17c>
  4344a2:	90                   	nop
  4344a3:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4344a7:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4344ab:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4344af:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  4344b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4344b7:	49 89 f8             	mov    %rdi,%r8
  4344ba:	48 89 c7             	mov    %rax,%rdi
  4344bd:	e8 26 ac ff ff       	callq  42f0e8 <luaT_callTMres>
  4344c2:	c9                   	leaveq 
  4344c3:	c3                   	retq   

00000000004344c4 <luaV_idiv>:
  4344c4:	55                   	push   %rbp
  4344c5:	48 89 e5             	mov    %rsp,%rbp
  4344c8:	48 83 ec 30          	sub    $0x30,%rsp
  4344cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4344d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4344d4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4344d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4344dc:	48 83 c0 01          	add    $0x1,%rax
  4344e0:	48 83 f8 01          	cmp    $0x1,%rax
  4344e4:	0f 96 c0             	setbe  %al
  4344e7:	0f b6 c0             	movzbl %al,%eax
  4344ea:	48 85 c0             	test   %rax,%rax
  4344ed:	74 26                	je     434515 <luaV_idiv+0x51>
  4344ef:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4344f4:	75 16                	jne    43450c <luaV_idiv+0x48>
  4344f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4344fa:	be ed 33 44 00       	mov    $0x4433ed,%esi
  4344ff:	48 89 c7             	mov    %rax,%rdi
  434502:	b8 00 00 00 00       	mov    $0x0,%eax
  434507:	e8 6d c6 fd ff       	callq  410b79 <luaG_runerror>
  43450c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434510:	48 f7 d8             	neg    %rax
  434513:	eb 36                	jmp    43454b <luaV_idiv+0x87>
  434515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434519:	48 99                	cqto   
  43451b:	48 f7 7d d8          	idivq  -0x28(%rbp)
  43451f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434523:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434527:	48 33 45 d8          	xor    -0x28(%rbp),%rax
  43452b:	48 85 c0             	test   %rax,%rax
  43452e:	79 17                	jns    434547 <luaV_idiv+0x83>
  434530:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434534:	48 99                	cqto   
  434536:	48 f7 7d d8          	idivq  -0x28(%rbp)
  43453a:	48 89 d0             	mov    %rdx,%rax
  43453d:	48 85 c0             	test   %rax,%rax
  434540:	74 05                	je     434547 <luaV_idiv+0x83>
  434542:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  434547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43454b:	c9                   	leaveq 
  43454c:	c3                   	retq   

000000000043454d <luaV_mod>:
  43454d:	55                   	push   %rbp
  43454e:	48 89 e5             	mov    %rsp,%rbp
  434551:	48 83 ec 30          	sub    $0x30,%rsp
  434555:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  434559:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  43455d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  434561:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  434565:	48 83 c0 01          	add    $0x1,%rax
  434569:	48 83 f8 01          	cmp    $0x1,%rax
  43456d:	0f 96 c0             	setbe  %al
  434570:	0f b6 c0             	movzbl %al,%eax
  434573:	48 85 c0             	test   %rax,%rax
  434576:	74 24                	je     43459c <luaV_mod+0x4f>
  434578:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  43457d:	75 16                	jne    434595 <luaV_mod+0x48>
  43457f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  434583:	be 07 34 44 00       	mov    $0x443407,%esi
  434588:	48 89 c7             	mov    %rax,%rdi
  43458b:	b8 00 00 00 00       	mov    $0x0,%eax
  434590:	e8 e4 c5 fd ff       	callq  410b79 <luaG_runerror>
  434595:	b8 00 00 00 00       	mov    $0x0,%eax
  43459a:	eb 2e                	jmp    4345ca <luaV_mod+0x7d>
  43459c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4345a0:	48 99                	cqto   
  4345a2:	48 f7 7d d8          	idivq  -0x28(%rbp)
  4345a6:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  4345aa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4345af:	74 15                	je     4345c6 <luaV_mod+0x79>
  4345b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4345b5:	48 33 45 d8          	xor    -0x28(%rbp),%rax
  4345b9:	48 85 c0             	test   %rax,%rax
  4345bc:	79 08                	jns    4345c6 <luaV_mod+0x79>
  4345be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4345c2:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  4345c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4345ca:	c9                   	leaveq 
  4345cb:	c3                   	retq   

00000000004345cc <luaV_modf>:
  4345cc:	55                   	push   %rbp
  4345cd:	48 89 e5             	mov    %rsp,%rbp
  4345d0:	48 83 ec 30          	sub    $0x30,%rsp
  4345d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4345d8:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  4345dd:	f2 0f 11 4d d8       	movsd  %xmm1,-0x28(%rbp)
  4345e2:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
  4345e7:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
  4345ec:	e8 bf d3 fc ff       	callq  4019b0 <fmod@plt>
  4345f1:	66 48 0f 7e c0       	movq   %xmm0,%rax
  4345f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4345fa:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  4345ff:	66 0f ef c9          	pxor   %xmm1,%xmm1
  434603:	66 0f 2f c1          	comisd %xmm1,%xmm0
  434607:	76 0e                	jbe    434617 <luaV_modf+0x4b>
  434609:	66 0f ef c0          	pxor   %xmm0,%xmm0
  43460d:	66 0f 2f 45 d8       	comisd -0x28(%rbp),%xmm0
  434612:	0f 97 c0             	seta   %al
  434615:	eb 29                	jmp    434640 <luaV_modf+0x74>
  434617:	66 0f ef c0          	pxor   %xmm0,%xmm0
  43461b:	66 0f 2f 45 f8       	comisd -0x8(%rbp),%xmm0
  434620:	76 16                	jbe    434638 <luaV_modf+0x6c>
  434622:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
  434627:	66 0f ef c9          	pxor   %xmm1,%xmm1
  43462b:	66 0f 2f c1          	comisd %xmm1,%xmm0
  43462f:	76 07                	jbe    434638 <luaV_modf+0x6c>
  434631:	b8 01 00 00 00       	mov    $0x1,%eax
  434636:	eb 05                	jmp    43463d <luaV_modf+0x71>
  434638:	b8 00 00 00 00       	mov    $0x0,%eax
  43463d:	83 e0 01             	and    $0x1,%eax
  434640:	84 c0                	test   %al,%al
  434642:	74 0f                	je     434653 <luaV_modf+0x87>
  434644:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  434649:	f2 0f 58 45 d8       	addsd  -0x28(%rbp),%xmm0
  43464e:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  434653:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  434658:	c9                   	leaveq 
  434659:	c3                   	retq   

000000000043465a <luaV_shiftl>:
  43465a:	55                   	push   %rbp
  43465b:	48 89 e5             	mov    %rsp,%rbp
  43465e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  434662:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  434666:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  43466b:	79 22                	jns    43468f <luaV_shiftl+0x35>
  43466d:	48 83 7d f0 c1       	cmpq   $0xffffffffffffffc1,-0x10(%rbp)
  434672:	7d 07                	jge    43467b <luaV_shiftl+0x21>
  434674:	b8 00 00 00 00       	mov    $0x0,%eax
  434679:	eb 2f                	jmp    4346aa <luaV_shiftl+0x50>
  43467b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43467f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434683:	f7 d8                	neg    %eax
  434685:	89 c1                	mov    %eax,%ecx
  434687:	48 d3 ea             	shr    %cl,%rdx
  43468a:	48 89 d0             	mov    %rdx,%rax
  43468d:	eb 1b                	jmp    4346aa <luaV_shiftl+0x50>
  43468f:	48 83 7d f0 3f       	cmpq   $0x3f,-0x10(%rbp)
  434694:	7e 07                	jle    43469d <luaV_shiftl+0x43>
  434696:	b8 00 00 00 00       	mov    $0x0,%eax
  43469b:	eb 0d                	jmp    4346aa <luaV_shiftl+0x50>
  43469d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4346a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4346a5:	89 d1                	mov    %edx,%ecx
  4346a7:	48 d3 e0             	shl    %cl,%rax
  4346aa:	5d                   	pop    %rbp
  4346ab:	c3                   	retq   

00000000004346ac <pushclosure>:
  4346ac:	55                   	push   %rbp
  4346ad:	48 89 e5             	mov    %rsp,%rbp
  4346b0:	48 83 ec 60          	sub    $0x60,%rsp
  4346b4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4346b8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4346bc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  4346c0:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  4346c4:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
  4346c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4346cc:	8b 40 10             	mov    0x10(%rax),%eax
  4346cf:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4346d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4346d6:	48 8b 40 50          	mov    0x50(%rax),%rax
  4346da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4346de:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4346e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4346e5:	89 d6                	mov    %edx,%esi
  4346e7:	48 89 c7             	mov    %rax,%rdi
  4346ea:	e8 8c f7 fd ff       	callq  413e7b <luaF_newLclosure>
  4346ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4346f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4346f7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4346fb:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4346ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  434703:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  434707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43470b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43470f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  434713:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  434717:	48 89 10             	mov    %rdx,(%rax)
  43471a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43471e:	c6 40 08 46          	movb   $0x46,0x8(%rax)
  434722:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  434729:	e9 05 01 00 00       	jmpq   434833 <pushclosure+0x187>
  43472e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  434731:	48 98                	cltq   
  434733:	48 c1 e0 04          	shl    $0x4,%rax
  434737:	48 89 c2             	mov    %rax,%rdx
  43473a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43473e:	48 01 d0             	add    %rdx,%rax
  434741:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434745:	84 c0                	test   %al,%al
  434747:	74 4e                	je     434797 <pushclosure+0xeb>
  434749:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43474c:	48 98                	cltq   
  43474e:	48 c1 e0 04          	shl    $0x4,%rax
  434752:	48 89 c2             	mov    %rax,%rdx
  434755:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434759:	48 01 d0             	add    %rdx,%rax
  43475c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  434760:	0f b6 c0             	movzbl %al,%eax
  434763:	48 c1 e0 04          	shl    $0x4,%rax
  434767:	48 89 c2             	mov    %rax,%rdx
  43476a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43476e:	48 01 c2             	add    %rax,%rdx
  434771:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434775:	48 89 d6             	mov    %rdx,%rsi
  434778:	48 89 c7             	mov    %rax,%rdi
  43477b:	e8 01 f9 fd ff       	callq  414081 <luaF_findupval>
  434780:	48 89 c1             	mov    %rax,%rcx
  434783:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  434787:	8b 55 fc             	mov    -0x4(%rbp),%edx
  43478a:	48 63 d2             	movslq %edx,%rdx
  43478d:	48 83 c2 04          	add    $0x4,%rdx
  434791:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
  434795:	eb 3e                	jmp    4347d5 <pushclosure+0x129>
  434797:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43479a:	48 98                	cltq   
  43479c:	48 c1 e0 04          	shl    $0x4,%rax
  4347a0:	48 89 c2             	mov    %rax,%rdx
  4347a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4347a7:	48 01 d0             	add    %rdx,%rax
  4347aa:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4347ae:	0f b6 c0             	movzbl %al,%eax
  4347b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4347b8:	00 
  4347b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4347bd:	48 01 d0             	add    %rdx,%rax
  4347c0:	48 8b 10             	mov    (%rax),%rdx
  4347c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4347c7:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4347ca:	48 63 c9             	movslq %ecx,%rcx
  4347cd:	48 83 c1 04          	add    $0x4,%rcx
  4347d1:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
  4347d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4347d9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4347dd:	0f b6 c0             	movzbl %al,%eax
  4347e0:	83 e0 20             	and    $0x20,%eax
  4347e3:	85 c0                	test   %eax,%eax
  4347e5:	74 48                	je     43482f <pushclosure+0x183>
  4347e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4347eb:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4347ee:	48 63 d2             	movslq %edx,%rdx
  4347f1:	48 83 c2 04          	add    $0x4,%rdx
  4347f5:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4347f9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4347fd:	0f b6 c0             	movzbl %al,%eax
  434800:	83 e0 18             	and    $0x18,%eax
  434803:	85 c0                	test   %eax,%eax
  434805:	74 28                	je     43482f <pushclosure+0x183>
  434807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43480b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  43480e:	48 63 d2             	movslq %edx,%rdx
  434811:	48 83 c2 04          	add    $0x4,%rdx
  434815:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  434819:	48 89 c2             	mov    %rax,%rdx
  43481c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  434820:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434824:	48 89 ce             	mov    %rcx,%rsi
  434827:	48 89 c7             	mov    %rax,%rdi
  43482a:	e8 20 02 fe ff       	callq  414a4f <luaC_barrier_>
  43482f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  434833:	8b 45 fc             	mov    -0x4(%rbp),%eax
  434836:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  434839:	0f 8c ef fe ff ff    	jl     43472e <pushclosure+0x82>
  43483f:	90                   	nop
  434840:	c9                   	leaveq 
  434841:	c3                   	retq   

0000000000434842 <luaV_finishOp>:
  434842:	55                   	push   %rbp
  434843:	48 89 e5             	mov    %rsp,%rbp
  434846:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  43484a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  43484e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434852:	48 8b 40 20          	mov    0x20(%rax),%rax
  434856:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43485a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43485e:	48 8b 00             	mov    (%rax),%rax
  434861:	48 83 c0 10          	add    $0x10,%rax
  434865:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  434869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43486d:	48 8b 40 20          	mov    0x20(%rax),%rax
  434871:	8b 40 fc             	mov    -0x4(%rax),%eax
  434874:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434877:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43487a:	83 e0 7f             	and    $0x7f,%eax
  43487d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434880:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434883:	83 e8 0b             	sub    $0xb,%eax
  434886:	83 f8 3b             	cmp    $0x3b,%eax
  434889:	0f 87 53 02 00 00    	ja     434ae2 <luaV_finishOp+0x2a0>
  43488f:	89 c0                	mov    %eax,%eax
  434891:	48 8b 04 c5 28 34 44 	mov    0x443428(,%rax,8),%rax
  434898:	00 
  434899:	ff e0                	jmpq   *%rax
  43489b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43489f:	48 8b 40 20          	mov    0x20(%rax),%rax
  4348a3:	48 83 e8 08          	sub    $0x8,%rax
  4348a7:	8b 00                	mov    (%rax),%eax
  4348a9:	c1 e8 07             	shr    $0x7,%eax
  4348ac:	48 98                	cltq   
  4348ae:	0f b6 c0             	movzbl %al,%eax
  4348b1:	48 c1 e0 04          	shl    $0x4,%rax
  4348b5:	48 89 c2             	mov    %rax,%rdx
  4348b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4348bc:	48 01 d0             	add    %rdx,%rax
  4348bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4348c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4348c7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4348cb:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4348cf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4348d3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4348d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4348db:	48 8b 40 10          	mov    0x10(%rax),%rax
  4348df:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4348e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4348e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4348eb:	48 8b 12             	mov    (%rdx),%rdx
  4348ee:	48 89 10             	mov    %rdx,(%rax)
  4348f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4348f5:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4348f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4348fd:	88 50 08             	mov    %dl,0x8(%rax)
  434900:	e9 e1 01 00 00       	jmpq   434ae6 <luaV_finishOp+0x2a4>
  434905:	8b 45 ec             	mov    -0x14(%rbp),%eax
  434908:	c1 e8 07             	shr    $0x7,%eax
  43490b:	48 98                	cltq   
  43490d:	0f b6 c0             	movzbl %al,%eax
  434910:	48 c1 e0 04          	shl    $0x4,%rax
  434914:	48 89 c2             	mov    %rax,%rdx
  434917:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43491b:	48 01 d0             	add    %rdx,%rax
  43491e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  434922:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434926:	48 8b 40 10          	mov    0x10(%rax),%rax
  43492a:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  43492e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434932:	48 89 50 10          	mov    %rdx,0x10(%rax)
  434936:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43493a:	48 8b 40 10          	mov    0x10(%rax),%rax
  43493e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  434942:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  434946:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  43494a:	48 8b 12             	mov    (%rdx),%rdx
  43494d:	48 89 10             	mov    %rdx,(%rax)
  434950:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434954:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434958:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43495c:	88 50 08             	mov    %dl,0x8(%rax)
  43495f:	e9 82 01 00 00       	jmpq   434ae6 <luaV_finishOp+0x2a4>
  434964:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434968:	48 8b 40 10          	mov    0x10(%rax),%rax
  43496c:	48 83 e8 10          	sub    $0x10,%rax
  434970:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434974:	3c 01                	cmp    $0x1,%al
  434976:	74 21                	je     434999 <luaV_finishOp+0x157>
  434978:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43497c:	48 8b 40 10          	mov    0x10(%rax),%rax
  434980:	48 83 e8 10          	sub    $0x10,%rax
  434984:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  434988:	0f b6 c0             	movzbl %al,%eax
  43498b:	83 e0 0f             	and    $0xf,%eax
  43498e:	85 c0                	test   %eax,%eax
  434990:	74 07                	je     434999 <luaV_finishOp+0x157>
  434992:	b8 01 00 00 00       	mov    $0x1,%eax
  434997:	eb 05                	jmp    43499e <luaV_finishOp+0x15c>
  434999:	b8 00 00 00 00       	mov    $0x0,%eax
  43499e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4349a1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4349a5:	48 8b 40 10          	mov    0x10(%rax),%rax
  4349a9:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  4349ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4349b1:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4349b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4349b8:	c1 e8 0f             	shr    $0xf,%eax
  4349bb:	83 e0 01             	and    $0x1,%eax
  4349be:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
  4349c1:	0f 84 1e 01 00 00    	je     434ae5 <luaV_finishOp+0x2a3>
  4349c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4349cb:	48 8b 40 20          	mov    0x20(%rax),%rax
  4349cf:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4349d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4349d7:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4349db:	e9 05 01 00 00       	jmpq   434ae5 <luaV_finishOp+0x2a3>
  4349e0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4349e4:	48 8b 40 10          	mov    0x10(%rax),%rax
  4349e8:	48 83 e8 10          	sub    $0x10,%rax
  4349ec:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4349f0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4349f3:	c1 e8 07             	shr    $0x7,%eax
  4349f6:	25 ff 00 00 00       	and    $0xff,%eax
  4349fb:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  4349fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434a02:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  434a06:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  434a09:	48 98                	cltq   
  434a0b:	48 c1 e0 04          	shl    $0x4,%rax
  434a0f:	48 89 c1             	mov    %rax,%rcx
  434a12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434a16:	48 01 c8             	add    %rcx,%rax
  434a19:	48 29 c2             	sub    %rax,%rdx
  434a1c:	48 89 d0             	mov    %rdx,%rax
  434a1f:	48 c1 f8 04          	sar    $0x4,%rax
  434a23:	89 45 b0             	mov    %eax,-0x50(%rbp)
  434a26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434a2a:	48 83 e8 20          	sub    $0x20,%rax
  434a2e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  434a32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434a36:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  434a3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  434a3e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  434a42:	48 8b 12             	mov    (%rdx),%rdx
  434a45:	48 89 10             	mov    %rdx,(%rax)
  434a48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  434a4c:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434a50:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  434a54:	88 50 08             	mov    %dl,0x8(%rax)
  434a57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  434a5b:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  434a5f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434a63:	48 89 50 10          	mov    %rdx,0x10(%rax)
  434a67:	8b 55 b0             	mov    -0x50(%rbp),%edx
  434a6a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434a6e:	89 d6                	mov    %edx,%esi
  434a70:	48 89 c7             	mov    %rax,%rdi
  434a73:	e8 91 f4 ff ff       	callq  433f09 <luaV_concat>
  434a78:	eb 6c                	jmp    434ae6 <luaV_finishOp+0x2a4>
  434a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434a7e:	48 8b 40 20          	mov    0x20(%rax),%rax
  434a82:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
  434a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434a8a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  434a8e:	eb 56                	jmp    434ae6 <luaV_finishOp+0x2a4>
  434a90:	8b 45 ec             	mov    -0x14(%rbp),%eax
  434a93:	c1 e8 07             	shr    $0x7,%eax
  434a96:	48 98                	cltq   
  434a98:	0f b6 c0             	movzbl %al,%eax
  434a9b:	48 c1 e0 04          	shl    $0x4,%rax
  434a9f:	48 89 c2             	mov    %rax,%rdx
  434aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434aa6:	48 01 d0             	add    %rdx,%rax
  434aa9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  434aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434ab1:	8b 40 38             	mov    0x38(%rax),%eax
  434ab4:	48 98                	cltq   
  434ab6:	48 c1 e0 04          	shl    $0x4,%rax
  434aba:	48 89 c2             	mov    %rax,%rdx
  434abd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  434ac1:	48 01 c2             	add    %rax,%rdx
  434ac4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434ac8:	48 89 50 10          	mov    %rdx,0x10(%rax)
  434acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434ad0:	48 8b 40 20          	mov    0x20(%rax),%rax
  434ad4:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
  434ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434adc:	48 89 50 20          	mov    %rdx,0x20(%rax)
  434ae0:	eb 04                	jmp    434ae6 <luaV_finishOp+0x2a4>
  434ae2:	90                   	nop
  434ae3:	eb 01                	jmp    434ae6 <luaV_finishOp+0x2a4>
  434ae5:	90                   	nop
  434ae6:	90                   	nop
  434ae7:	c9                   	leaveq 
  434ae8:	c3                   	retq   

0000000000434ae9 <luaV_execute>:
  434ae9:	55                   	push   %rbp
  434aea:	48 89 e5             	mov    %rsp,%rbp
  434aed:	48 81 ec c0 0c 00 00 	sub    $0xcc0,%rsp
  434af4:	48 89 bd 48 f3 ff ff 	mov    %rdi,-0xcb8(%rbp)
  434afb:	48 89 b5 40 f3 ff ff 	mov    %rsi,-0xcc0(%rbp)
  434b02:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434b09:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  434b0f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434b12:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434b19:	48 8b 00             	mov    (%rax),%rax
  434b1c:	48 8b 00             	mov    (%rax),%rax
  434b1f:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  434b26:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  434b2d:	48 8b 40 18          	mov    0x18(%rax),%rax
  434b31:	48 8b 40 38          	mov    0x38(%rax),%rax
  434b35:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  434b3c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434b43:	48 8b 40 20          	mov    0x20(%rax),%rax
  434b47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  434b4b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434b4f:	0f 95 c0             	setne  %al
  434b52:	0f b6 c0             	movzbl %al,%eax
  434b55:	48 85 c0             	test   %rax,%rax
  434b58:	74 58                	je     434bb2 <luaV_execute+0xc9>
  434b5a:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  434b61:	48 8b 40 18          	mov    0x18(%rax),%rax
  434b65:	48 8b 40 40          	mov    0x40(%rax),%rax
  434b69:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  434b6d:	75 35                	jne    434ba4 <luaV_execute+0xbb>
  434b6f:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  434b76:	48 8b 40 18          	mov    0x18(%rax),%rax
  434b7a:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  434b7e:	84 c0                	test   %al,%al
  434b80:	74 09                	je     434b8b <luaV_execute+0xa2>
  434b82:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  434b89:	eb 19                	jmp    434ba4 <luaV_execute+0xbb>
  434b8b:	48 8b 95 40 f3 ff ff 	mov    -0xcc0(%rbp),%rdx
  434b92:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434b99:	48 89 d6             	mov    %rdx,%rsi
  434b9c:	48 89 c7             	mov    %rax,%rdi
  434b9f:	e8 75 cf fd ff       	callq  411b19 <luaD_hookcall>
  434ba4:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434bab:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
  434bb2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434bb9:	48 8b 00             	mov    (%rax),%rax
  434bbc:	48 83 c0 10          	add    $0x10,%rax
  434bc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434bc4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434bc8:	0f 95 c0             	setne  %al
  434bcb:	0f b6 c0             	movzbl %al,%eax
  434bce:	48 85 c0             	test   %rax,%rax
  434bd1:	74 2b                	je     434bfe <luaV_execute+0x115>
  434bd3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434bd7:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434bde:	48 89 d6             	mov    %rdx,%rsi
  434be1:	48 89 c7             	mov    %rax,%rdi
  434be4:	e8 f8 c1 fd ff       	callq  410de1 <luaG_traceexec>
  434be9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434bec:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434bf3:	48 8b 00             	mov    (%rax),%rax
  434bf6:	48 83 c0 10          	add    $0x10,%rax
  434bfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434bfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434c02:	48 8d 50 04          	lea    0x4(%rax),%rdx
  434c06:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  434c0a:	8b 00                	mov    (%rax),%eax
  434c0c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434c0f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434c12:	83 e0 7f             	and    $0x7f,%eax
  434c15:	89 c0                	mov    %eax,%eax
  434c17:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  434c1e:	00 
  434c1f:	e9 88 00 00 00       	jmpq   434cac <luaV_execute+0x1c3>
  434c24:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434c27:	c1 e8 07             	shr    $0x7,%eax
  434c2a:	48 98                	cltq   
  434c2c:	0f b6 c0             	movzbl %al,%eax
  434c2f:	48 c1 e0 04          	shl    $0x4,%rax
  434c33:	48 89 c2             	mov    %rax,%rdx
  434c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434c3a:	48 01 d0             	add    %rdx,%rax
  434c3d:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  434c44:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  434c4b:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  434c52:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434c55:	c1 e8 10             	shr    $0x10,%eax
  434c58:	48 98                	cltq   
  434c5a:	0f b6 c0             	movzbl %al,%eax
  434c5d:	48 c1 e0 04          	shl    $0x4,%rax
  434c61:	48 89 c2             	mov    %rax,%rdx
  434c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434c68:	48 01 d0             	add    %rdx,%rax
  434c6b:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  434c72:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  434c79:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  434c80:	48 8b 12             	mov    (%rdx),%rdx
  434c83:	48 89 10             	mov    %rdx,(%rax)
  434c86:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  434c8d:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434c91:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  434c98:	88 50 08             	mov    %dl,0x8(%rax)
  434c9b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434c9f:	0f 95 c0             	setne  %al
  434ca2:	0f b6 c0             	movzbl %al,%eax
  434ca5:	48 85 c0             	test   %rax,%rax
  434ca8:	75 04                	jne    434cae <luaV_execute+0x1c5>
  434caa:	eb 2d                	jmp    434cd9 <luaV_execute+0x1f0>
  434cac:	ff e0                	jmpq   *%rax
  434cae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434cb2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434cb9:	48 89 d6             	mov    %rdx,%rsi
  434cbc:	48 89 c7             	mov    %rax,%rdi
  434cbf:	e8 1d c1 fd ff       	callq  410de1 <luaG_traceexec>
  434cc4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434cc7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434cce:	48 8b 00             	mov    (%rax),%rax
  434cd1:	48 83 c0 10          	add    $0x10,%rax
  434cd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434cd9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434cdd:	48 8d 50 04          	lea    0x4(%rax),%rdx
  434ce1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  434ce5:	8b 00                	mov    (%rax),%eax
  434ce7:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434cea:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434ced:	83 e0 7f             	and    $0x7f,%eax
  434cf0:	89 c0                	mov    %eax,%eax
  434cf2:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  434cf9:	00 
  434cfa:	eb b0                	jmp    434cac <luaV_execute+0x1c3>
  434cfc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434cff:	c1 e8 07             	shr    $0x7,%eax
  434d02:	48 98                	cltq   
  434d04:	0f b6 c0             	movzbl %al,%eax
  434d07:	48 c1 e0 04          	shl    $0x4,%rax
  434d0b:	48 89 c2             	mov    %rax,%rdx
  434d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434d12:	48 01 d0             	add    %rdx,%rax
  434d15:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  434d1c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434d1f:	c1 e8 0f             	shr    $0xf,%eax
  434d22:	2d ff ff 00 00       	sub    $0xffff,%eax
  434d27:	48 98                	cltq   
  434d29:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  434d30:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  434d37:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  434d3e:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  434d45:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
  434d4c:	48 89 10             	mov    %rdx,(%rax)
  434d4f:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  434d56:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  434d5a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434d5e:	0f 95 c0             	setne  %al
  434d61:	0f b6 c0             	movzbl %al,%eax
  434d64:	48 85 c0             	test   %rax,%rax
  434d67:	74 2b                	je     434d94 <luaV_execute+0x2ab>
  434d69:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434d6d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434d74:	48 89 d6             	mov    %rdx,%rsi
  434d77:	48 89 c7             	mov    %rax,%rdi
  434d7a:	e8 62 c0 fd ff       	callq  410de1 <luaG_traceexec>
  434d7f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434d82:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434d89:	48 8b 00             	mov    (%rax),%rax
  434d8c:	48 83 c0 10          	add    $0x10,%rax
  434d90:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434d94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434d98:	48 8d 50 04          	lea    0x4(%rax),%rdx
  434d9c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  434da0:	8b 00                	mov    (%rax),%eax
  434da2:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434da5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434da8:	83 e0 7f             	and    $0x7f,%eax
  434dab:	89 c0                	mov    %eax,%eax
  434dad:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  434db4:	00 
  434db5:	e9 f2 fe ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  434dba:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434dbd:	c1 e8 07             	shr    $0x7,%eax
  434dc0:	48 98                	cltq   
  434dc2:	0f b6 c0             	movzbl %al,%eax
  434dc5:	48 c1 e0 04          	shl    $0x4,%rax
  434dc9:	48 89 c2             	mov    %rax,%rdx
  434dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434dd0:	48 01 d0             	add    %rdx,%rax
  434dd3:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  434dda:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434ddd:	c1 e8 0f             	shr    $0xf,%eax
  434de0:	2d ff ff 00 00       	sub    $0xffff,%eax
  434de5:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%rbp)
  434deb:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  434df2:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  434df9:	f2 0f 2a 85 14 fe ff 	cvtsi2sdl -0x1ec(%rbp),%xmm0
  434e00:	ff 
  434e01:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  434e08:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  434e0c:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  434e13:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  434e17:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434e1b:	0f 95 c0             	setne  %al
  434e1e:	0f b6 c0             	movzbl %al,%eax
  434e21:	48 85 c0             	test   %rax,%rax
  434e24:	74 2b                	je     434e51 <luaV_execute+0x368>
  434e26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434e2a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434e31:	48 89 d6             	mov    %rdx,%rsi
  434e34:	48 89 c7             	mov    %rax,%rdi
  434e37:	e8 a5 bf fd ff       	callq  410de1 <luaG_traceexec>
  434e3c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434e3f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434e46:	48 8b 00             	mov    (%rax),%rax
  434e49:	48 83 c0 10          	add    $0x10,%rax
  434e4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434e51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434e55:	48 8d 50 04          	lea    0x4(%rax),%rdx
  434e59:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  434e5d:	8b 00                	mov    (%rax),%eax
  434e5f:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434e62:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434e65:	83 e0 7f             	and    $0x7f,%eax
  434e68:	89 c0                	mov    %eax,%eax
  434e6a:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  434e71:	00 
  434e72:	e9 35 fe ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  434e77:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434e7a:	c1 e8 07             	shr    $0x7,%eax
  434e7d:	48 98                	cltq   
  434e7f:	0f b6 c0             	movzbl %al,%eax
  434e82:	48 c1 e0 04          	shl    $0x4,%rax
  434e86:	48 89 c2             	mov    %rax,%rdx
  434e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434e8d:	48 01 d0             	add    %rdx,%rax
  434e90:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  434e97:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434e9a:	c1 e8 0f             	shr    $0xf,%eax
  434e9d:	48 98                	cltq   
  434e9f:	48 c1 e0 04          	shl    $0x4,%rax
  434ea3:	48 89 c2             	mov    %rax,%rdx
  434ea6:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  434ead:	48 01 d0             	add    %rdx,%rax
  434eb0:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  434eb7:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  434ebe:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  434ec5:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  434ecc:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  434ed3:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  434eda:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
  434ee1:	48 8b 12             	mov    (%rdx),%rdx
  434ee4:	48 89 10             	mov    %rdx,(%rax)
  434ee7:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
  434eee:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434ef2:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  434ef9:	88 50 08             	mov    %dl,0x8(%rax)
  434efc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434f00:	0f 95 c0             	setne  %al
  434f03:	0f b6 c0             	movzbl %al,%eax
  434f06:	48 85 c0             	test   %rax,%rax
  434f09:	74 2b                	je     434f36 <luaV_execute+0x44d>
  434f0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434f0f:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  434f16:	48 89 d6             	mov    %rdx,%rsi
  434f19:	48 89 c7             	mov    %rax,%rdi
  434f1c:	e8 c0 be fd ff       	callq  410de1 <luaG_traceexec>
  434f21:	89 45 ec             	mov    %eax,-0x14(%rbp)
  434f24:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  434f2b:	48 8b 00             	mov    (%rax),%rax
  434f2e:	48 83 c0 10          	add    $0x10,%rax
  434f32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  434f36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434f3a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  434f3e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  434f42:	8b 00                	mov    (%rax),%eax
  434f44:	89 45 e8             	mov    %eax,-0x18(%rbp)
  434f47:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434f4a:	83 e0 7f             	and    $0x7f,%eax
  434f4d:	89 c0                	mov    %eax,%eax
  434f4f:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  434f56:	00 
  434f57:	e9 50 fd ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  434f5c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  434f5f:	c1 e8 07             	shr    $0x7,%eax
  434f62:	48 98                	cltq   
  434f64:	0f b6 c0             	movzbl %al,%eax
  434f67:	48 c1 e0 04          	shl    $0x4,%rax
  434f6b:	48 89 c2             	mov    %rax,%rdx
  434f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  434f72:	48 01 d0             	add    %rdx,%rax
  434f75:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  434f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434f80:	8b 00                	mov    (%rax),%eax
  434f82:	c1 e8 07             	shr    $0x7,%eax
  434f85:	48 98                	cltq   
  434f87:	48 c1 e0 04          	shl    $0x4,%rax
  434f8b:	48 89 c2             	mov    %rax,%rdx
  434f8e:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  434f95:	48 01 d0             	add    %rdx,%rax
  434f98:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  434f9f:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  434fa4:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  434fab:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  434fb2:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  434fb9:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  434fc0:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434fc7:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
  434fce:	48 8b 12             	mov    (%rdx),%rdx
  434fd1:	48 89 10             	mov    %rdx,(%rax)
  434fd4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  434fdb:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  434fdf:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434fe6:	88 50 08             	mov    %dl,0x8(%rax)
  434fe9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  434fed:	0f 95 c0             	setne  %al
  434ff0:	0f b6 c0             	movzbl %al,%eax
  434ff3:	48 85 c0             	test   %rax,%rax
  434ff6:	74 2b                	je     435023 <luaV_execute+0x53a>
  434ff8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  434ffc:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435003:	48 89 d6             	mov    %rdx,%rsi
  435006:	48 89 c7             	mov    %rax,%rdi
  435009:	e8 d3 bd fd ff       	callq  410de1 <luaG_traceexec>
  43500e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435011:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435018:	48 8b 00             	mov    (%rax),%rax
  43501b:	48 83 c0 10          	add    $0x10,%rax
  43501f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435023:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435027:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43502b:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43502f:	8b 00                	mov    (%rax),%eax
  435031:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435034:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435037:	83 e0 7f             	and    $0x7f,%eax
  43503a:	89 c0                	mov    %eax,%eax
  43503c:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435043:	00 
  435044:	e9 63 fc ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435049:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43504c:	c1 e8 07             	shr    $0x7,%eax
  43504f:	48 98                	cltq   
  435051:	0f b6 c0             	movzbl %al,%eax
  435054:	48 c1 e0 04          	shl    $0x4,%rax
  435058:	48 89 c2             	mov    %rax,%rdx
  43505b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43505f:	48 01 d0             	add    %rdx,%rax
  435062:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  435069:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  435070:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  435074:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435078:	0f 95 c0             	setne  %al
  43507b:	0f b6 c0             	movzbl %al,%eax
  43507e:	48 85 c0             	test   %rax,%rax
  435081:	74 2b                	je     4350ae <luaV_execute+0x5c5>
  435083:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435087:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43508e:	48 89 d6             	mov    %rdx,%rsi
  435091:	48 89 c7             	mov    %rax,%rdi
  435094:	e8 48 bd fd ff       	callq  410de1 <luaG_traceexec>
  435099:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43509c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4350a3:	48 8b 00             	mov    (%rax),%rax
  4350a6:	48 83 c0 10          	add    $0x10,%rax
  4350aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4350ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4350b2:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4350b6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4350ba:	8b 00                	mov    (%rax),%eax
  4350bc:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4350bf:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4350c2:	83 e0 7f             	and    $0x7f,%eax
  4350c5:	89 c0                	mov    %eax,%eax
  4350c7:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4350ce:	00 
  4350cf:	e9 d8 fb ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4350d4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4350d7:	c1 e8 07             	shr    $0x7,%eax
  4350da:	48 98                	cltq   
  4350dc:	0f b6 c0             	movzbl %al,%eax
  4350df:	48 c1 e0 04          	shl    $0x4,%rax
  4350e3:	48 89 c2             	mov    %rax,%rdx
  4350e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4350ea:	48 01 d0             	add    %rdx,%rax
  4350ed:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  4350f4:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  4350fb:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  4350ff:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  435104:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435108:	0f 95 c0             	setne  %al
  43510b:	0f b6 c0             	movzbl %al,%eax
  43510e:	48 85 c0             	test   %rax,%rax
  435111:	74 2b                	je     43513e <luaV_execute+0x655>
  435113:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435117:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43511e:	48 89 d6             	mov    %rdx,%rsi
  435121:	48 89 c7             	mov    %rax,%rdi
  435124:	e8 b8 bc fd ff       	callq  410de1 <luaG_traceexec>
  435129:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43512c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435133:	48 8b 00             	mov    (%rax),%rax
  435136:	48 83 c0 10          	add    $0x10,%rax
  43513a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43513e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435142:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435146:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43514a:	8b 00                	mov    (%rax),%eax
  43514c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43514f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435152:	83 e0 7f             	and    $0x7f,%eax
  435155:	89 c0                	mov    %eax,%eax
  435157:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43515e:	00 
  43515f:	e9 48 fb ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435164:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435167:	c1 e8 07             	shr    $0x7,%eax
  43516a:	48 98                	cltq   
  43516c:	0f b6 c0             	movzbl %al,%eax
  43516f:	48 c1 e0 04          	shl    $0x4,%rax
  435173:	48 89 c2             	mov    %rax,%rdx
  435176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43517a:	48 01 d0             	add    %rdx,%rax
  43517d:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  435184:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
  43518b:	c6 40 08 11          	movb   $0x11,0x8(%rax)
  43518f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435193:	0f 95 c0             	setne  %al
  435196:	0f b6 c0             	movzbl %al,%eax
  435199:	48 85 c0             	test   %rax,%rax
  43519c:	74 2b                	je     4351c9 <luaV_execute+0x6e0>
  43519e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4351a2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4351a9:	48 89 d6             	mov    %rdx,%rsi
  4351ac:	48 89 c7             	mov    %rax,%rdi
  4351af:	e8 2d bc fd ff       	callq  410de1 <luaG_traceexec>
  4351b4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4351b7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4351be:	48 8b 00             	mov    (%rax),%rax
  4351c1:	48 83 c0 10          	add    $0x10,%rax
  4351c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4351c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4351cd:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4351d1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4351d5:	8b 00                	mov    (%rax),%eax
  4351d7:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4351da:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4351dd:	83 e0 7f             	and    $0x7f,%eax
  4351e0:	89 c0                	mov    %eax,%eax
  4351e2:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4351e9:	00 
  4351ea:	e9 bd fa ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4351ef:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4351f2:	c1 e8 07             	shr    $0x7,%eax
  4351f5:	48 98                	cltq   
  4351f7:	0f b6 c0             	movzbl %al,%eax
  4351fa:	48 c1 e0 04          	shl    $0x4,%rax
  4351fe:	48 89 c2             	mov    %rax,%rdx
  435201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435205:	48 01 d0             	add    %rdx,%rax
  435208:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43520c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43520f:	c1 e8 10             	shr    $0x10,%eax
  435212:	25 ff 00 00 00       	and    $0xff,%eax
  435217:	89 45 dc             	mov    %eax,-0x24(%rbp)
  43521a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43521e:	48 8d 50 10          	lea    0x10(%rax),%rdx
  435222:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  435226:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  43522a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43522d:	8d 50 ff             	lea    -0x1(%rax),%edx
  435230:	89 55 dc             	mov    %edx,-0x24(%rbp)
  435233:	85 c0                	test   %eax,%eax
  435235:	75 e3                	jne    43521a <luaV_execute+0x731>
  435237:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43523b:	0f 95 c0             	setne  %al
  43523e:	0f b6 c0             	movzbl %al,%eax
  435241:	48 85 c0             	test   %rax,%rax
  435244:	74 2b                	je     435271 <luaV_execute+0x788>
  435246:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43524a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435251:	48 89 d6             	mov    %rdx,%rsi
  435254:	48 89 c7             	mov    %rax,%rdi
  435257:	e8 85 bb fd ff       	callq  410de1 <luaG_traceexec>
  43525c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43525f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435266:	48 8b 00             	mov    (%rax),%rax
  435269:	48 83 c0 10          	add    $0x10,%rax
  43526d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435271:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435275:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435279:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43527d:	8b 00                	mov    (%rax),%eax
  43527f:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435282:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435285:	83 e0 7f             	and    $0x7f,%eax
  435288:	89 c0                	mov    %eax,%eax
  43528a:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435291:	00 
  435292:	e9 15 fa ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435297:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43529a:	c1 e8 07             	shr    $0x7,%eax
  43529d:	48 98                	cltq   
  43529f:	0f b6 c0             	movzbl %al,%eax
  4352a2:	48 c1 e0 04          	shl    $0x4,%rax
  4352a6:	48 89 c2             	mov    %rax,%rdx
  4352a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4352ad:	48 01 d0             	add    %rdx,%rax
  4352b0:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  4352b7:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4352ba:	c1 e8 10             	shr    $0x10,%eax
  4352bd:	25 ff 00 00 00       	and    $0xff,%eax
  4352c2:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
  4352c8:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4352cf:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  4352d6:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4352dd:	8b 95 a4 fd ff ff    	mov    -0x25c(%rbp),%edx
  4352e3:	48 63 d2             	movslq %edx,%rdx
  4352e6:	48 83 c2 04          	add    $0x4,%rdx
  4352ea:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4352ee:	48 8b 40 10          	mov    0x10(%rax),%rax
  4352f2:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  4352f9:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  435300:	48 8b 95 90 fd ff ff 	mov    -0x270(%rbp),%rdx
  435307:	48 8b 12             	mov    (%rdx),%rdx
  43530a:	48 89 10             	mov    %rdx,(%rax)
  43530d:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
  435314:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  435318:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  43531f:	88 50 08             	mov    %dl,0x8(%rax)
  435322:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435326:	0f 95 c0             	setne  %al
  435329:	0f b6 c0             	movzbl %al,%eax
  43532c:	48 85 c0             	test   %rax,%rax
  43532f:	74 2b                	je     43535c <luaV_execute+0x873>
  435331:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435335:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43533c:	48 89 d6             	mov    %rdx,%rsi
  43533f:	48 89 c7             	mov    %rax,%rdi
  435342:	e8 9a ba fd ff       	callq  410de1 <luaG_traceexec>
  435347:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43534a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435351:	48 8b 00             	mov    (%rax),%rax
  435354:	48 83 c0 10          	add    $0x10,%rax
  435358:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43535c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435360:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435364:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  435368:	8b 00                	mov    (%rax),%eax
  43536a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43536d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435370:	83 e0 7f             	and    $0x7f,%eax
  435373:	89 c0                	mov    %eax,%eax
  435375:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43537c:	00 
  43537d:	e9 2a f9 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435382:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435385:	c1 e8 07             	shr    $0x7,%eax
  435388:	48 98                	cltq   
  43538a:	0f b6 c0             	movzbl %al,%eax
  43538d:	48 c1 e0 04          	shl    $0x4,%rax
  435391:	48 89 c2             	mov    %rax,%rdx
  435394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435398:	48 01 d0             	add    %rdx,%rax
  43539b:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  4353a2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4353a5:	c1 e8 10             	shr    $0x10,%eax
  4353a8:	0f b6 d0             	movzbl %al,%edx
  4353ab:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4353b2:	48 63 d2             	movslq %edx,%rdx
  4353b5:	48 83 c2 04          	add    $0x4,%rdx
  4353b9:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4353bd:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  4353c4:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  4353cb:	48 8b 40 10          	mov    0x10(%rax),%rax
  4353cf:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  4353d6:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  4353dd:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  4353e4:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4353eb:	48 8b 95 70 fd ff ff 	mov    -0x290(%rbp),%rdx
  4353f2:	48 8b 12             	mov    (%rdx),%rdx
  4353f5:	48 89 10             	mov    %rdx,(%rax)
  4353f8:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  4353ff:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  435403:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  43540a:	88 50 08             	mov    %dl,0x8(%rax)
  43540d:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  435414:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435418:	0f b6 c0             	movzbl %al,%eax
  43541b:	83 e0 40             	and    $0x40,%eax
  43541e:	85 c0                	test   %eax,%eax
  435420:	74 53                	je     435475 <luaV_execute+0x98c>
  435422:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  435429:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43542d:	0f b6 c0             	movzbl %al,%eax
  435430:	83 e0 20             	and    $0x20,%eax
  435433:	85 c0                	test   %eax,%eax
  435435:	74 3e                	je     435475 <luaV_execute+0x98c>
  435437:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  43543e:	48 8b 00             	mov    (%rax),%rax
  435441:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  435445:	0f b6 c0             	movzbl %al,%eax
  435448:	83 e0 18             	and    $0x18,%eax
  43544b:	85 c0                	test   %eax,%eax
  43544d:	74 26                	je     435475 <luaV_execute+0x98c>
  43544f:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  435456:	48 8b 00             	mov    (%rax),%rax
  435459:	48 89 c2             	mov    %rax,%rdx
  43545c:	48 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%rcx
  435463:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43546a:	48 89 ce             	mov    %rcx,%rsi
  43546d:	48 89 c7             	mov    %rax,%rdi
  435470:	e8 da f5 fd ff       	callq  414a4f <luaC_barrier_>
  435475:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435479:	0f 95 c0             	setne  %al
  43547c:	0f b6 c0             	movzbl %al,%eax
  43547f:	48 85 c0             	test   %rax,%rax
  435482:	74 2b                	je     4354af <luaV_execute+0x9c6>
  435484:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435488:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43548f:	48 89 d6             	mov    %rdx,%rsi
  435492:	48 89 c7             	mov    %rax,%rdi
  435495:	e8 47 b9 fd ff       	callq  410de1 <luaG_traceexec>
  43549a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43549d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4354a4:	48 8b 00             	mov    (%rax),%rax
  4354a7:	48 83 c0 10          	add    $0x10,%rax
  4354ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4354af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4354b3:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4354b7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4354bb:	8b 00                	mov    (%rax),%eax
  4354bd:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4354c0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4354c3:	83 e0 7f             	and    $0x7f,%eax
  4354c6:	89 c0                	mov    %eax,%eax
  4354c8:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4354cf:	00 
  4354d0:	e9 d7 f7 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4354d5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4354d8:	c1 e8 07             	shr    $0x7,%eax
  4354db:	48 98                	cltq   
  4354dd:	0f b6 c0             	movzbl %al,%eax
  4354e0:	48 c1 e0 04          	shl    $0x4,%rax
  4354e4:	48 89 c2             	mov    %rax,%rdx
  4354e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4354eb:	48 01 d0             	add    %rdx,%rax
  4354ee:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  4354f5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4354f8:	c1 e8 10             	shr    $0x10,%eax
  4354fb:	0f b6 d0             	movzbl %al,%edx
  4354fe:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  435505:	48 63 d2             	movslq %edx,%rdx
  435508:	48 83 c2 04          	add    $0x4,%rdx
  43550c:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  435510:	48 8b 40 10          	mov    0x10(%rax),%rax
  435514:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  43551b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43551e:	c1 e8 18             	shr    $0x18,%eax
  435521:	48 98                	cltq   
  435523:	48 c1 e0 04          	shl    $0x4,%rax
  435527:	48 89 c2             	mov    %rax,%rdx
  43552a:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  435531:	48 01 d0             	add    %rdx,%rax
  435534:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  43553b:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  435542:	48 8b 00             	mov    (%rax),%rax
  435545:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  43554c:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
  435553:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435557:	3c 45                	cmp    $0x45,%al
  435559:	74 0f                	je     43556a <luaV_execute+0xa81>
  43555b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  435562:	00 
  435563:	b8 00 00 00 00       	mov    $0x0,%eax
  435568:	eb 36                	jmp    4355a0 <luaV_execute+0xab7>
  43556a:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
  435571:	48 8b 00             	mov    (%rax),%rax
  435574:	48 89 c2             	mov    %rax,%rdx
  435577:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  43557e:	48 89 c6             	mov    %rax,%rsi
  435581:	48 89 d7             	mov    %rdx,%rdi
  435584:	e8 2d 81 ff ff       	callq  42d6b6 <luaH_getshortstr>
  435589:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43558d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  435591:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435595:	0f b6 c0             	movzbl %al,%eax
  435598:	83 e0 0f             	and    $0xf,%eax
  43559b:	85 c0                	test   %eax,%eax
  43559d:	0f 95 c0             	setne  %al
  4355a0:	84 c0                	test   %al,%al
  4355a2:	74 44                	je     4355e8 <luaV_execute+0xaff>
  4355a4:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4355ab:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  4355b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4355b6:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  4355bd:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4355c4:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  4355cb:	48 8b 12             	mov    (%rdx),%rdx
  4355ce:	48 89 10             	mov    %rdx,(%rax)
  4355d1:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  4355d8:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4355dc:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4355e3:	88 50 08             	mov    %dl,0x8(%rax)
  4355e6:	eb 5d                	jmp    435645 <luaV_execute+0xb5c>
  4355e8:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4355ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4355f3:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4355f7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4355fe:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435602:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435609:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43560d:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  435611:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
  435618:	48 8b 95 58 fd ff ff 	mov    -0x2a8(%rbp),%rdx
  43561f:	48 8b b5 60 fd ff ff 	mov    -0x2a0(%rbp),%rsi
  435626:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43562d:	49 89 f8             	mov    %rdi,%r8
  435630:	48 89 c7             	mov    %rax,%rdi
  435633:	e8 26 d9 ff ff       	callq  432f5e <luaV_finishget>
  435638:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43563f:	8b 40 28             	mov    0x28(%rax),%eax
  435642:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435645:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435649:	0f 95 c0             	setne  %al
  43564c:	0f b6 c0             	movzbl %al,%eax
  43564f:	48 85 c0             	test   %rax,%rax
  435652:	74 2b                	je     43567f <luaV_execute+0xb96>
  435654:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435658:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43565f:	48 89 d6             	mov    %rdx,%rsi
  435662:	48 89 c7             	mov    %rax,%rdi
  435665:	e8 77 b7 fd ff       	callq  410de1 <luaG_traceexec>
  43566a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43566d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435674:	48 8b 00             	mov    (%rax),%rax
  435677:	48 83 c0 10          	add    $0x10,%rax
  43567b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43567f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435683:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435687:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43568b:	8b 00                	mov    (%rax),%eax
  43568d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435690:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435693:	83 e0 7f             	and    $0x7f,%eax
  435696:	89 c0                	mov    %eax,%eax
  435698:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43569f:	00 
  4356a0:	e9 07 f6 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4356a5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4356a8:	c1 e8 07             	shr    $0x7,%eax
  4356ab:	48 98                	cltq   
  4356ad:	0f b6 c0             	movzbl %al,%eax
  4356b0:	48 c1 e0 04          	shl    $0x4,%rax
  4356b4:	48 89 c2             	mov    %rax,%rdx
  4356b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4356bb:	48 01 d0             	add    %rdx,%rax
  4356be:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  4356c5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4356c8:	c1 e8 10             	shr    $0x10,%eax
  4356cb:	48 98                	cltq   
  4356cd:	0f b6 c0             	movzbl %al,%eax
  4356d0:	48 c1 e0 04          	shl    $0x4,%rax
  4356d4:	48 89 c2             	mov    %rax,%rdx
  4356d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4356db:	48 01 d0             	add    %rdx,%rax
  4356de:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  4356e5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4356e8:	c1 e8 18             	shr    $0x18,%eax
  4356eb:	48 98                	cltq   
  4356ed:	48 c1 e0 04          	shl    $0x4,%rax
  4356f1:	48 89 c2             	mov    %rax,%rdx
  4356f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4356f8:	48 01 d0             	add    %rdx,%rax
  4356fb:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  435702:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  435709:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43570d:	3c 03                	cmp    $0x3,%al
  43570f:	0f 85 a8 00 00 00    	jne    4357bd <luaV_execute+0xcd4>
  435715:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  43571c:	48 8b 00             	mov    (%rax),%rax
  43571f:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  435726:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  43572d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435731:	3c 45                	cmp    $0x45,%al
  435733:	74 12                	je     435747 <luaV_execute+0xc5e>
  435735:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  43573c:	00 
  43573d:	b8 00 00 00 00       	mov    $0x0,%eax
  435742:	e9 ca 00 00 00       	jmpq   435811 <luaV_execute+0xd28>
  435747:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  43574e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  435752:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  435759:	48 8b 00             	mov    (%rax),%rax
  43575c:	8b 40 0c             	mov    0xc(%rax),%eax
  43575f:	89 c0                	mov    %eax,%eax
  435761:	48 39 c2             	cmp    %rax,%rdx
  435764:	73 22                	jae    435788 <luaV_execute+0xc9f>
  435766:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  43576d:	48 8b 00             	mov    (%rax),%rax
  435770:	48 8b 40 10          	mov    0x10(%rax),%rax
  435774:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  43577b:	48 c1 e2 04          	shl    $0x4,%rdx
  43577f:	48 83 ea 10          	sub    $0x10,%rdx
  435783:	48 01 d0             	add    %rdx,%rax
  435786:	eb 1c                	jmp    4357a4 <luaV_execute+0xcbb>
  435788:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  43578f:	48 8b 95 30 fd ff ff 	mov    -0x2d0(%rbp),%rdx
  435796:	48 8b 12             	mov    (%rdx),%rdx
  435799:	48 89 c6             	mov    %rax,%rsi
  43579c:	48 89 d7             	mov    %rdx,%rdi
  43579f:	e8 e9 7d ff ff       	callq  42d58d <luaH_getint>
  4357a4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4357a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4357ac:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4357b0:	0f b6 c0             	movzbl %al,%eax
  4357b3:	83 e0 0f             	and    $0xf,%eax
  4357b6:	85 c0                	test   %eax,%eax
  4357b8:	0f 95 c0             	setne  %al
  4357bb:	eb 54                	jmp    435811 <luaV_execute+0xd28>
  4357bd:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  4357c4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4357c8:	3c 45                	cmp    $0x45,%al
  4357ca:	74 0f                	je     4357db <luaV_execute+0xcf2>
  4357cc:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  4357d3:	00 
  4357d4:	b8 00 00 00 00       	mov    $0x0,%eax
  4357d9:	eb 36                	jmp    435811 <luaV_execute+0xd28>
  4357db:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  4357e2:	48 8b 00             	mov    (%rax),%rax
  4357e5:	48 89 c2             	mov    %rax,%rdx
  4357e8:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  4357ef:	48 89 c6             	mov    %rax,%rsi
  4357f2:	48 89 d7             	mov    %rdx,%rdi
  4357f5:	e8 d5 7f ff ff       	callq  42d7cf <luaH_get>
  4357fa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4357fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  435802:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435806:	0f b6 c0             	movzbl %al,%eax
  435809:	83 e0 0f             	and    $0xf,%eax
  43580c:	85 c0                	test   %eax,%eax
  43580e:	0f 95 c0             	setne  %al
  435811:	84 c0                	test   %al,%al
  435813:	74 44                	je     435859 <luaV_execute+0xd70>
  435815:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  43581c:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  435823:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  435827:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  43582e:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  435835:	48 8b 95 10 fd ff ff 	mov    -0x2f0(%rbp),%rdx
  43583c:	48 8b 12             	mov    (%rdx),%rdx
  43583f:	48 89 10             	mov    %rdx,(%rax)
  435842:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  435849:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43584d:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  435854:	88 50 08             	mov    %dl,0x8(%rax)
  435857:	eb 5d                	jmp    4358b6 <luaV_execute+0xdcd>
  435859:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435860:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435864:	48 89 50 20          	mov    %rdx,0x20(%rax)
  435868:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43586f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435873:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43587a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43587e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  435882:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  435889:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  435890:	48 8b b5 30 fd ff ff 	mov    -0x2d0(%rbp),%rsi
  435897:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43589e:	49 89 f8             	mov    %rdi,%r8
  4358a1:	48 89 c7             	mov    %rax,%rdi
  4358a4:	e8 b5 d6 ff ff       	callq  432f5e <luaV_finishget>
  4358a9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4358b0:	8b 40 28             	mov    0x28(%rax),%eax
  4358b3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4358b6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4358ba:	0f 95 c0             	setne  %al
  4358bd:	0f b6 c0             	movzbl %al,%eax
  4358c0:	48 85 c0             	test   %rax,%rax
  4358c3:	74 2b                	je     4358f0 <luaV_execute+0xe07>
  4358c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4358c9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4358d0:	48 89 d6             	mov    %rdx,%rsi
  4358d3:	48 89 c7             	mov    %rax,%rdi
  4358d6:	e8 06 b5 fd ff       	callq  410de1 <luaG_traceexec>
  4358db:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4358de:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4358e5:	48 8b 00             	mov    (%rax),%rax
  4358e8:	48 83 c0 10          	add    $0x10,%rax
  4358ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4358f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4358f4:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4358f8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4358fc:	8b 00                	mov    (%rax),%eax
  4358fe:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435901:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435904:	83 e0 7f             	and    $0x7f,%eax
  435907:	89 c0                	mov    %eax,%eax
  435909:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435910:	00 
  435911:	e9 96 f3 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435916:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435919:	c1 e8 07             	shr    $0x7,%eax
  43591c:	48 98                	cltq   
  43591e:	0f b6 c0             	movzbl %al,%eax
  435921:	48 c1 e0 04          	shl    $0x4,%rax
  435925:	48 89 c2             	mov    %rax,%rdx
  435928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43592c:	48 01 d0             	add    %rdx,%rax
  43592f:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  435936:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435939:	c1 e8 10             	shr    $0x10,%eax
  43593c:	48 98                	cltq   
  43593e:	0f b6 c0             	movzbl %al,%eax
  435941:	48 c1 e0 04          	shl    $0x4,%rax
  435945:	48 89 c2             	mov    %rax,%rdx
  435948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43594c:	48 01 d0             	add    %rdx,%rax
  43594f:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  435956:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435959:	c1 e8 18             	shr    $0x18,%eax
  43595c:	89 85 fc fc ff ff    	mov    %eax,-0x304(%rbp)
  435962:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  435969:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43596d:	3c 45                	cmp    $0x45,%al
  43596f:	74 0f                	je     435980 <luaV_execute+0xe97>
  435971:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  435978:	00 
  435979:	b8 00 00 00 00       	mov    $0x0,%eax
  43597e:	eb 78                	jmp    4359f8 <luaV_execute+0xf0f>
  435980:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  435986:	48 98                	cltq   
  435988:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  43598c:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  435993:	48 8b 00             	mov    (%rax),%rax
  435996:	8b 40 0c             	mov    0xc(%rax),%eax
  435999:	89 c0                	mov    %eax,%eax
  43599b:	48 39 c2             	cmp    %rax,%rdx
  43599e:	73 24                	jae    4359c4 <luaV_execute+0xedb>
  4359a0:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4359a7:	48 8b 00             	mov    (%rax),%rax
  4359aa:	48 8b 40 10          	mov    0x10(%rax),%rax
  4359ae:	8b 95 fc fc ff ff    	mov    -0x304(%rbp),%edx
  4359b4:	48 63 d2             	movslq %edx,%rdx
  4359b7:	48 c1 e2 04          	shl    $0x4,%rdx
  4359bb:	48 83 ea 10          	sub    $0x10,%rdx
  4359bf:	48 01 d0             	add    %rdx,%rax
  4359c2:	eb 1d                	jmp    4359e1 <luaV_execute+0xef8>
  4359c4:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  4359ca:	48 98                	cltq   
  4359cc:	48 8b 95 00 fd ff ff 	mov    -0x300(%rbp),%rdx
  4359d3:	48 8b 12             	mov    (%rdx),%rdx
  4359d6:	48 89 c6             	mov    %rax,%rsi
  4359d9:	48 89 d7             	mov    %rdx,%rdi
  4359dc:	e8 ac 7b ff ff       	callq  42d58d <luaH_getint>
  4359e1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4359e5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4359e9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4359ed:	0f b6 c0             	movzbl %al,%eax
  4359f0:	83 e0 0f             	and    $0xf,%eax
  4359f3:	85 c0                	test   %eax,%eax
  4359f5:	0f 95 c0             	setne  %al
  4359f8:	84 c0                	test   %al,%al
  4359fa:	74 47                	je     435a43 <luaV_execute+0xf5a>
  4359fc:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  435a03:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  435a0a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  435a0e:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  435a15:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  435a1c:	48 8b 95 e8 fc ff ff 	mov    -0x318(%rbp),%rdx
  435a23:	48 8b 12             	mov    (%rdx),%rdx
  435a26:	48 89 10             	mov    %rdx,(%rax)
  435a29:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
  435a30:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  435a34:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  435a3b:	88 50 08             	mov    %dl,0x8(%rax)
  435a3e:	e9 89 00 00 00       	jmpq   435acc <luaV_execute+0xfe3>
  435a43:	48 8d 85 e0 f3 ff ff 	lea    -0xc20(%rbp),%rax
  435a4a:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  435a51:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  435a57:	48 63 d0             	movslq %eax,%rdx
  435a5a:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  435a61:	48 89 10             	mov    %rdx,(%rax)
  435a64:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  435a6b:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  435a6f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435a76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435a7a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  435a7e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435a85:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435a89:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435a90:	48 89 50 10          	mov    %rdx,0x10(%rax)
  435a94:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  435a98:	48 8b 8d 08 fd ff ff 	mov    -0x2f8(%rbp),%rcx
  435a9f:	48 8d 95 e0 f3 ff ff 	lea    -0xc20(%rbp),%rdx
  435aa6:	48 8b b5 00 fd ff ff 	mov    -0x300(%rbp),%rsi
  435aad:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435ab4:	49 89 f8             	mov    %rdi,%r8
  435ab7:	48 89 c7             	mov    %rax,%rdi
  435aba:	e8 9f d4 ff ff       	callq  432f5e <luaV_finishget>
  435abf:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435ac6:	8b 40 28             	mov    0x28(%rax),%eax
  435ac9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435acc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435ad0:	0f 95 c0             	setne  %al
  435ad3:	0f b6 c0             	movzbl %al,%eax
  435ad6:	48 85 c0             	test   %rax,%rax
  435ad9:	74 2b                	je     435b06 <luaV_execute+0x101d>
  435adb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435adf:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435ae6:	48 89 d6             	mov    %rdx,%rsi
  435ae9:	48 89 c7             	mov    %rax,%rdi
  435aec:	e8 f0 b2 fd ff       	callq  410de1 <luaG_traceexec>
  435af1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435af4:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435afb:	48 8b 00             	mov    (%rax),%rax
  435afe:	48 83 c0 10          	add    $0x10,%rax
  435b02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435b0a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435b0e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  435b12:	8b 00                	mov    (%rax),%eax
  435b14:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435b17:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435b1a:	83 e0 7f             	and    $0x7f,%eax
  435b1d:	89 c0                	mov    %eax,%eax
  435b1f:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435b26:	00 
  435b27:	e9 80 f1 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435b2c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435b2f:	c1 e8 07             	shr    $0x7,%eax
  435b32:	48 98                	cltq   
  435b34:	0f b6 c0             	movzbl %al,%eax
  435b37:	48 c1 e0 04          	shl    $0x4,%rax
  435b3b:	48 89 c2             	mov    %rax,%rdx
  435b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435b42:	48 01 d0             	add    %rdx,%rax
  435b45:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  435b4c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435b4f:	c1 e8 10             	shr    $0x10,%eax
  435b52:	48 98                	cltq   
  435b54:	0f b6 c0             	movzbl %al,%eax
  435b57:	48 c1 e0 04          	shl    $0x4,%rax
  435b5b:	48 89 c2             	mov    %rax,%rdx
  435b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435b62:	48 01 d0             	add    %rdx,%rax
  435b65:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  435b6c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435b6f:	c1 e8 18             	shr    $0x18,%eax
  435b72:	48 98                	cltq   
  435b74:	48 c1 e0 04          	shl    $0x4,%rax
  435b78:	48 89 c2             	mov    %rax,%rdx
  435b7b:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  435b82:	48 01 d0             	add    %rdx,%rax
  435b85:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  435b8c:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  435b93:	48 8b 00             	mov    (%rax),%rax
  435b96:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  435b9d:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  435ba4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435ba8:	3c 45                	cmp    $0x45,%al
  435baa:	74 0f                	je     435bbb <luaV_execute+0x10d2>
  435bac:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  435bb3:	00 
  435bb4:	b8 00 00 00 00       	mov    $0x0,%eax
  435bb9:	eb 36                	jmp    435bf1 <luaV_execute+0x1108>
  435bbb:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  435bc2:	48 8b 00             	mov    (%rax),%rax
  435bc5:	48 89 c2             	mov    %rax,%rdx
  435bc8:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  435bcf:	48 89 c6             	mov    %rax,%rsi
  435bd2:	48 89 d7             	mov    %rdx,%rdi
  435bd5:	e8 dc 7a ff ff       	callq  42d6b6 <luaH_getshortstr>
  435bda:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  435bde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  435be2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435be6:	0f b6 c0             	movzbl %al,%eax
  435be9:	83 e0 0f             	and    $0xf,%eax
  435bec:	85 c0                	test   %eax,%eax
  435bee:	0f 95 c0             	setne  %al
  435bf1:	84 c0                	test   %al,%al
  435bf3:	74 44                	je     435c39 <luaV_execute+0x1150>
  435bf5:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  435bfc:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  435c03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  435c07:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  435c0e:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
  435c15:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  435c1c:	48 8b 12             	mov    (%rdx),%rdx
  435c1f:	48 89 10             	mov    %rdx,(%rax)
  435c22:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  435c29:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  435c2d:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
  435c34:	88 50 08             	mov    %dl,0x8(%rax)
  435c37:	eb 5d                	jmp    435c96 <luaV_execute+0x11ad>
  435c39:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435c40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435c44:	48 89 50 20          	mov    %rdx,0x20(%rax)
  435c48:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435c4f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435c53:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435c5a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  435c5e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  435c62:	48 8b 8d d8 fc ff ff 	mov    -0x328(%rbp),%rcx
  435c69:	48 8b 95 c8 fc ff ff 	mov    -0x338(%rbp),%rdx
  435c70:	48 8b b5 d0 fc ff ff 	mov    -0x330(%rbp),%rsi
  435c77:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435c7e:	49 89 f8             	mov    %rdi,%r8
  435c81:	48 89 c7             	mov    %rax,%rdi
  435c84:	e8 d5 d2 ff ff       	callq  432f5e <luaV_finishget>
  435c89:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435c90:	8b 40 28             	mov    0x28(%rax),%eax
  435c93:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435c96:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435c9a:	0f 95 c0             	setne  %al
  435c9d:	0f b6 c0             	movzbl %al,%eax
  435ca0:	48 85 c0             	test   %rax,%rax
  435ca3:	74 2b                	je     435cd0 <luaV_execute+0x11e7>
  435ca5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435ca9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435cb0:	48 89 d6             	mov    %rdx,%rsi
  435cb3:	48 89 c7             	mov    %rax,%rdi
  435cb6:	e8 26 b1 fd ff       	callq  410de1 <luaG_traceexec>
  435cbb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435cbe:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435cc5:	48 8b 00             	mov    (%rax),%rax
  435cc8:	48 83 c0 10          	add    $0x10,%rax
  435ccc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435cd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435cd4:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435cd8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  435cdc:	8b 00                	mov    (%rax),%eax
  435cde:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435ce1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435ce4:	83 e0 7f             	and    $0x7f,%eax
  435ce7:	89 c0                	mov    %eax,%eax
  435ce9:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435cf0:	00 
  435cf1:	e9 b6 ef ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435cf6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435cf9:	c1 e8 07             	shr    $0x7,%eax
  435cfc:	0f b6 d0             	movzbl %al,%edx
  435cff:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  435d06:	48 63 d2             	movslq %edx,%rdx
  435d09:	48 83 c2 04          	add    $0x4,%rdx
  435d0d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  435d11:	48 8b 40 10          	mov    0x10(%rax),%rax
  435d15:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  435d1c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435d1f:	c1 e8 10             	shr    $0x10,%eax
  435d22:	48 98                	cltq   
  435d24:	0f b6 c0             	movzbl %al,%eax
  435d27:	48 c1 e0 04          	shl    $0x4,%rax
  435d2b:	48 89 c2             	mov    %rax,%rdx
  435d2e:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  435d35:	48 01 d0             	add    %rdx,%rax
  435d38:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  435d3f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435d42:	25 00 80 00 00       	and    $0x8000,%eax
  435d47:	85 c0                	test   %eax,%eax
  435d49:	74 1b                	je     435d66 <luaV_execute+0x127d>
  435d4b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435d4e:	c1 e8 18             	shr    $0x18,%eax
  435d51:	48 98                	cltq   
  435d53:	48 c1 e0 04          	shl    $0x4,%rax
  435d57:	48 89 c2             	mov    %rax,%rdx
  435d5a:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  435d61:	48 01 d0             	add    %rdx,%rax
  435d64:	eb 16                	jmp    435d7c <luaV_execute+0x1293>
  435d66:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435d69:	c1 e8 18             	shr    $0x18,%eax
  435d6c:	48 98                	cltq   
  435d6e:	48 c1 e0 04          	shl    $0x4,%rax
  435d72:	48 89 c2             	mov    %rax,%rdx
  435d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435d79:	48 01 d0             	add    %rdx,%rax
  435d7c:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  435d83:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
  435d8a:	48 8b 00             	mov    (%rax),%rax
  435d8d:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  435d94:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  435d9b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435d9f:	3c 45                	cmp    $0x45,%al
  435da1:	74 0f                	je     435db2 <luaV_execute+0x12c9>
  435da3:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  435daa:	00 
  435dab:	b8 00 00 00 00       	mov    $0x0,%eax
  435db0:	eb 36                	jmp    435de8 <luaV_execute+0x12ff>
  435db2:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  435db9:	48 8b 00             	mov    (%rax),%rax
  435dbc:	48 89 c2             	mov    %rax,%rdx
  435dbf:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  435dc6:	48 89 c6             	mov    %rax,%rsi
  435dc9:	48 89 d7             	mov    %rdx,%rdi
  435dcc:	e8 e5 78 ff ff       	callq  42d6b6 <luaH_getshortstr>
  435dd1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  435dd5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  435dd9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435ddd:	0f b6 c0             	movzbl %al,%eax
  435de0:	83 e0 0f             	and    $0xf,%eax
  435de3:	85 c0                	test   %eax,%eax
  435de5:	0f 95 c0             	setne  %al
  435de8:	84 c0                	test   %al,%al
  435dea:	0f 84 ad 00 00 00    	je     435e9d <luaV_execute+0x13b4>
  435df0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  435df4:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  435dfb:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  435e02:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  435e09:	48 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%rax
  435e10:	48 8b 95 80 fc ff ff 	mov    -0x380(%rbp),%rdx
  435e17:	48 8b 12             	mov    (%rdx),%rdx
  435e1a:	48 89 10             	mov    %rdx,(%rax)
  435e1d:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  435e24:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  435e28:	48 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%rax
  435e2f:	88 50 08             	mov    %dl,0x8(%rax)
  435e32:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  435e39:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435e3d:	0f b6 c0             	movzbl %al,%eax
  435e40:	83 e0 40             	and    $0x40,%eax
  435e43:	85 c0                	test   %eax,%eax
  435e45:	0f 84 af 00 00 00    	je     435efa <luaV_execute+0x1411>
  435e4b:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  435e52:	48 8b 00             	mov    (%rax),%rax
  435e55:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  435e59:	0f b6 c0             	movzbl %al,%eax
  435e5c:	83 e0 20             	and    $0x20,%eax
  435e5f:	85 c0                	test   %eax,%eax
  435e61:	0f 84 93 00 00 00    	je     435efa <luaV_execute+0x1411>
  435e67:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  435e6e:	48 8b 00             	mov    (%rax),%rax
  435e71:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  435e75:	0f b6 c0             	movzbl %al,%eax
  435e78:	83 e0 18             	and    $0x18,%eax
  435e7b:	85 c0                	test   %eax,%eax
  435e7d:	74 7b                	je     435efa <luaV_execute+0x1411>
  435e7f:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  435e86:	48 8b 10             	mov    (%rax),%rdx
  435e89:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435e90:	48 89 d6             	mov    %rdx,%rsi
  435e93:	48 89 c7             	mov    %rax,%rdi
  435e96:	e8 50 ec fd ff       	callq  414aeb <luaC_barrierback_>
  435e9b:	eb 5d                	jmp    435efa <luaV_execute+0x1411>
  435e9d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435ea4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435ea8:	48 89 50 20          	mov    %rdx,0x20(%rax)
  435eac:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435eb3:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435eb7:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435ebe:	48 89 50 10          	mov    %rdx,0x10(%rax)
  435ec2:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  435ec6:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  435ecd:	48 8b 95 a0 fc ff ff 	mov    -0x360(%rbp),%rdx
  435ed4:	48 8b b5 a8 fc ff ff 	mov    -0x358(%rbp),%rsi
  435edb:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435ee2:	49 89 f8             	mov    %rdi,%r8
  435ee5:	48 89 c7             	mov    %rax,%rdi
  435ee8:	e8 4f d2 ff ff       	callq  43313c <luaV_finishset>
  435eed:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435ef4:	8b 40 28             	mov    0x28(%rax),%eax
  435ef7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435efa:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  435efe:	0f 95 c0             	setne  %al
  435f01:	0f b6 c0             	movzbl %al,%eax
  435f04:	48 85 c0             	test   %rax,%rax
  435f07:	74 2b                	je     435f34 <luaV_execute+0x144b>
  435f09:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435f0d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  435f14:	48 89 d6             	mov    %rdx,%rsi
  435f17:	48 89 c7             	mov    %rax,%rdi
  435f1a:	e8 c2 ae fd ff       	callq  410de1 <luaG_traceexec>
  435f1f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  435f22:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  435f29:	48 8b 00             	mov    (%rax),%rax
  435f2c:	48 83 c0 10          	add    $0x10,%rax
  435f30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435f34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435f38:	48 8d 50 04          	lea    0x4(%rax),%rdx
  435f3c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  435f40:	8b 00                	mov    (%rax),%eax
  435f42:	89 45 e8             	mov    %eax,-0x18(%rbp)
  435f45:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435f48:	83 e0 7f             	and    $0x7f,%eax
  435f4b:	89 c0                	mov    %eax,%eax
  435f4d:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  435f54:	00 
  435f55:	e9 52 ed ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  435f5a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435f5d:	c1 e8 07             	shr    $0x7,%eax
  435f60:	48 98                	cltq   
  435f62:	0f b6 c0             	movzbl %al,%eax
  435f65:	48 c1 e0 04          	shl    $0x4,%rax
  435f69:	48 89 c2             	mov    %rax,%rdx
  435f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435f70:	48 01 d0             	add    %rdx,%rax
  435f73:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  435f7a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435f7d:	c1 e8 10             	shr    $0x10,%eax
  435f80:	48 98                	cltq   
  435f82:	0f b6 c0             	movzbl %al,%eax
  435f85:	48 c1 e0 04          	shl    $0x4,%rax
  435f89:	48 89 c2             	mov    %rax,%rdx
  435f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435f90:	48 01 d0             	add    %rdx,%rax
  435f93:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
  435f9a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435f9d:	25 00 80 00 00       	and    $0x8000,%eax
  435fa2:	85 c0                	test   %eax,%eax
  435fa4:	74 1b                	je     435fc1 <luaV_execute+0x14d8>
  435fa6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435fa9:	c1 e8 18             	shr    $0x18,%eax
  435fac:	48 98                	cltq   
  435fae:	48 c1 e0 04          	shl    $0x4,%rax
  435fb2:	48 89 c2             	mov    %rax,%rdx
  435fb5:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  435fbc:	48 01 d0             	add    %rdx,%rax
  435fbf:	eb 16                	jmp    435fd7 <luaV_execute+0x14ee>
  435fc1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  435fc4:	c1 e8 18             	shr    $0x18,%eax
  435fc7:	48 98                	cltq   
  435fc9:	48 c1 e0 04          	shl    $0x4,%rax
  435fcd:	48 89 c2             	mov    %rax,%rdx
  435fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435fd4:	48 01 d0             	add    %rdx,%rax
  435fd7:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  435fde:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  435fe5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  435fe9:	3c 03                	cmp    $0x3,%al
  435feb:	0f 85 a8 00 00 00    	jne    436099 <luaV_execute+0x15b0>
  435ff1:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  435ff8:	48 8b 00             	mov    (%rax),%rax
  435ffb:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  436002:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  436009:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43600d:	3c 45                	cmp    $0x45,%al
  43600f:	74 12                	je     436023 <luaV_execute+0x153a>
  436011:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  436018:	00 
  436019:	b8 00 00 00 00       	mov    $0x0,%eax
  43601e:	e9 ca 00 00 00       	jmpq   4360ed <luaV_execute+0x1604>
  436023:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  43602a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  43602e:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  436035:	48 8b 00             	mov    (%rax),%rax
  436038:	8b 40 0c             	mov    0xc(%rax),%eax
  43603b:	89 c0                	mov    %eax,%eax
  43603d:	48 39 c2             	cmp    %rax,%rdx
  436040:	73 22                	jae    436064 <luaV_execute+0x157b>
  436042:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  436049:	48 8b 00             	mov    (%rax),%rax
  43604c:	48 8b 40 10          	mov    0x10(%rax),%rax
  436050:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
  436057:	48 c1 e2 04          	shl    $0x4,%rdx
  43605b:	48 83 ea 10          	sub    $0x10,%rdx
  43605f:	48 01 d0             	add    %rdx,%rax
  436062:	eb 1c                	jmp    436080 <luaV_execute+0x1597>
  436064:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  43606b:	48 8b 95 78 fc ff ff 	mov    -0x388(%rbp),%rdx
  436072:	48 8b 12             	mov    (%rdx),%rdx
  436075:	48 89 c6             	mov    %rax,%rsi
  436078:	48 89 d7             	mov    %rdx,%rdi
  43607b:	e8 0d 75 ff ff       	callq  42d58d <luaH_getint>
  436080:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  436084:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  436088:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43608c:	0f b6 c0             	movzbl %al,%eax
  43608f:	83 e0 0f             	and    $0xf,%eax
  436092:	85 c0                	test   %eax,%eax
  436094:	0f 95 c0             	setne  %al
  436097:	eb 54                	jmp    4360ed <luaV_execute+0x1604>
  436099:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  4360a0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4360a4:	3c 45                	cmp    $0x45,%al
  4360a6:	74 0f                	je     4360b7 <luaV_execute+0x15ce>
  4360a8:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  4360af:	00 
  4360b0:	b8 00 00 00 00       	mov    $0x0,%eax
  4360b5:	eb 36                	jmp    4360ed <luaV_execute+0x1604>
  4360b7:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  4360be:	48 8b 00             	mov    (%rax),%rax
  4360c1:	48 89 c2             	mov    %rax,%rdx
  4360c4:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  4360cb:	48 89 c6             	mov    %rax,%rsi
  4360ce:	48 89 d7             	mov    %rdx,%rdi
  4360d1:	e8 f9 76 ff ff       	callq  42d7cf <luaH_get>
  4360d6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4360da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4360de:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4360e2:	0f b6 c0             	movzbl %al,%eax
  4360e5:	83 e0 0f             	and    $0xf,%eax
  4360e8:	85 c0                	test   %eax,%eax
  4360ea:	0f 95 c0             	setne  %al
  4360ed:	84 c0                	test   %al,%al
  4360ef:	0f 84 ad 00 00 00    	je     4361a2 <luaV_execute+0x16b9>
  4360f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4360f9:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
  436100:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  436107:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  43610e:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  436115:	48 8b 95 50 fc ff ff 	mov    -0x3b0(%rbp),%rdx
  43611c:	48 8b 12             	mov    (%rdx),%rdx
  43611f:	48 89 10             	mov    %rdx,(%rax)
  436122:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  436129:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43612d:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  436134:	88 50 08             	mov    %dl,0x8(%rax)
  436137:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  43613e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436142:	0f b6 c0             	movzbl %al,%eax
  436145:	83 e0 40             	and    $0x40,%eax
  436148:	85 c0                	test   %eax,%eax
  43614a:	0f 84 af 00 00 00    	je     4361ff <luaV_execute+0x1716>
  436150:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  436157:	48 8b 00             	mov    (%rax),%rax
  43615a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43615e:	0f b6 c0             	movzbl %al,%eax
  436161:	83 e0 20             	and    $0x20,%eax
  436164:	85 c0                	test   %eax,%eax
  436166:	0f 84 93 00 00 00    	je     4361ff <luaV_execute+0x1716>
  43616c:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  436173:	48 8b 00             	mov    (%rax),%rax
  436176:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43617a:	0f b6 c0             	movzbl %al,%eax
  43617d:	83 e0 18             	and    $0x18,%eax
  436180:	85 c0                	test   %eax,%eax
  436182:	74 7b                	je     4361ff <luaV_execute+0x1716>
  436184:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  43618b:	48 8b 10             	mov    (%rax),%rdx
  43618e:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436195:	48 89 d6             	mov    %rdx,%rsi
  436198:	48 89 c7             	mov    %rax,%rdi
  43619b:	e8 4b e9 fd ff       	callq  414aeb <luaC_barrierback_>
  4361a0:	eb 5d                	jmp    4361ff <luaV_execute+0x1716>
  4361a2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4361a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4361ad:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4361b1:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4361b8:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4361bc:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4361c3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4361c7:	48 8b b5 78 fc ff ff 	mov    -0x388(%rbp),%rsi
  4361ce:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  4361d2:	48 8b 8d 68 fc ff ff 	mov    -0x398(%rbp),%rcx
  4361d9:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
  4361e0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4361e7:	49 89 f8             	mov    %rdi,%r8
  4361ea:	48 89 c7             	mov    %rax,%rdi
  4361ed:	e8 4a cf ff ff       	callq  43313c <luaV_finishset>
  4361f2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4361f9:	8b 40 28             	mov    0x28(%rax),%eax
  4361fc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4361ff:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  436203:	0f 95 c0             	setne  %al
  436206:	0f b6 c0             	movzbl %al,%eax
  436209:	48 85 c0             	test   %rax,%rax
  43620c:	74 2b                	je     436239 <luaV_execute+0x1750>
  43620e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436212:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436219:	48 89 d6             	mov    %rdx,%rsi
  43621c:	48 89 c7             	mov    %rax,%rdi
  43621f:	e8 bd ab fd ff       	callq  410de1 <luaG_traceexec>
  436224:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436227:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43622e:	48 8b 00             	mov    (%rax),%rax
  436231:	48 83 c0 10          	add    $0x10,%rax
  436235:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  436239:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43623d:	48 8d 50 04          	lea    0x4(%rax),%rdx
  436241:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436245:	8b 00                	mov    (%rax),%eax
  436247:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43624a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43624d:	83 e0 7f             	and    $0x7f,%eax
  436250:	89 c0                	mov    %eax,%eax
  436252:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436259:	00 
  43625a:	e9 4d ea ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43625f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436262:	c1 e8 07             	shr    $0x7,%eax
  436265:	48 98                	cltq   
  436267:	0f b6 c0             	movzbl %al,%eax
  43626a:	48 c1 e0 04          	shl    $0x4,%rax
  43626e:	48 89 c2             	mov    %rax,%rdx
  436271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436275:	48 01 d0             	add    %rdx,%rax
  436278:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
  43627f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436282:	c1 e8 10             	shr    $0x10,%eax
  436285:	25 ff 00 00 00       	and    $0xff,%eax
  43628a:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%rbp)
  436290:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436293:	25 00 80 00 00       	and    $0x8000,%eax
  436298:	85 c0                	test   %eax,%eax
  43629a:	74 1b                	je     4362b7 <luaV_execute+0x17ce>
  43629c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43629f:	c1 e8 18             	shr    $0x18,%eax
  4362a2:	48 98                	cltq   
  4362a4:	48 c1 e0 04          	shl    $0x4,%rax
  4362a8:	48 89 c2             	mov    %rax,%rdx
  4362ab:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  4362b2:	48 01 d0             	add    %rdx,%rax
  4362b5:	eb 16                	jmp    4362cd <luaV_execute+0x17e4>
  4362b7:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4362ba:	c1 e8 18             	shr    $0x18,%eax
  4362bd:	48 98                	cltq   
  4362bf:	48 c1 e0 04          	shl    $0x4,%rax
  4362c3:	48 89 c2             	mov    %rax,%rdx
  4362c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4362ca:	48 01 d0             	add    %rdx,%rax
  4362cd:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
  4362d4:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
  4362db:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4362df:	3c 45                	cmp    $0x45,%al
  4362e1:	74 0f                	je     4362f2 <luaV_execute+0x1809>
  4362e3:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
  4362ea:	00 
  4362eb:	b8 00 00 00 00       	mov    $0x0,%eax
  4362f0:	eb 78                	jmp    43636a <luaV_execute+0x1881>
  4362f2:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
  4362f8:	48 98                	cltq   
  4362fa:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4362fe:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
  436305:	48 8b 00             	mov    (%rax),%rax
  436308:	8b 40 0c             	mov    0xc(%rax),%eax
  43630b:	89 c0                	mov    %eax,%eax
  43630d:	48 39 c2             	cmp    %rax,%rdx
  436310:	73 24                	jae    436336 <luaV_execute+0x184d>
  436312:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
  436319:	48 8b 00             	mov    (%rax),%rax
  43631c:	48 8b 40 10          	mov    0x10(%rax),%rax
  436320:	8b 95 44 fc ff ff    	mov    -0x3bc(%rbp),%edx
  436326:	48 63 d2             	movslq %edx,%rdx
  436329:	48 c1 e2 04          	shl    $0x4,%rdx
  43632d:	48 83 ea 10          	sub    $0x10,%rdx
  436331:	48 01 d0             	add    %rdx,%rax
  436334:	eb 1d                	jmp    436353 <luaV_execute+0x186a>
  436336:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
  43633c:	48 98                	cltq   
  43633e:	48 8b 95 48 fc ff ff 	mov    -0x3b8(%rbp),%rdx
  436345:	48 8b 12             	mov    (%rdx),%rdx
  436348:	48 89 c6             	mov    %rax,%rsi
  43634b:	48 89 d7             	mov    %rdx,%rdi
  43634e:	e8 3a 72 ff ff       	callq  42d58d <luaH_getint>
  436353:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  436357:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  43635b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43635f:	0f b6 c0             	movzbl %al,%eax
  436362:	83 e0 0f             	and    $0xf,%eax
  436365:	85 c0                	test   %eax,%eax
  436367:	0f 95 c0             	setne  %al
  43636a:	84 c0                	test   %al,%al
  43636c:	0f 84 b4 00 00 00    	je     436426 <luaV_execute+0x193d>
  436372:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  436376:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  43637d:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  436384:	48 89 85 28 fc ff ff 	mov    %rax,-0x3d8(%rbp)
  43638b:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
  436392:	48 8b 95 28 fc ff ff 	mov    -0x3d8(%rbp),%rdx
  436399:	48 8b 12             	mov    (%rdx),%rdx
  43639c:	48 89 10             	mov    %rdx,(%rax)
  43639f:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4363a6:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4363aa:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
  4363b1:	88 50 08             	mov    %dl,0x8(%rax)
  4363b4:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  4363bb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4363bf:	0f b6 c0             	movzbl %al,%eax
  4363c2:	83 e0 40             	and    $0x40,%eax
  4363c5:	85 c0                	test   %eax,%eax
  4363c7:	0f 84 e2 00 00 00    	je     4364af <luaV_execute+0x19c6>
  4363cd:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
  4363d4:	48 8b 00             	mov    (%rax),%rax
  4363d7:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4363db:	0f b6 c0             	movzbl %al,%eax
  4363de:	83 e0 20             	and    $0x20,%eax
  4363e1:	85 c0                	test   %eax,%eax
  4363e3:	0f 84 c6 00 00 00    	je     4364af <luaV_execute+0x19c6>
  4363e9:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  4363f0:	48 8b 00             	mov    (%rax),%rax
  4363f3:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  4363f7:	0f b6 c0             	movzbl %al,%eax
  4363fa:	83 e0 18             	and    $0x18,%eax
  4363fd:	85 c0                	test   %eax,%eax
  4363ff:	0f 84 aa 00 00 00    	je     4364af <luaV_execute+0x19c6>
  436405:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
  43640c:	48 8b 10             	mov    (%rax),%rdx
  43640f:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436416:	48 89 d6             	mov    %rdx,%rsi
  436419:	48 89 c7             	mov    %rax,%rdi
  43641c:	e8 ca e6 fd ff       	callq  414aeb <luaC_barrierback_>
  436421:	e9 89 00 00 00       	jmpq   4364af <luaV_execute+0x19c6>
  436426:	48 8d 85 d0 f3 ff ff 	lea    -0xc30(%rbp),%rax
  43642d:	48 89 85 20 fc ff ff 	mov    %rax,-0x3e0(%rbp)
  436434:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
  43643a:	48 63 d0             	movslq %eax,%rdx
  43643d:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  436444:	48 89 10             	mov    %rdx,(%rax)
  436447:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  43644e:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  436452:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436459:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43645d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  436461:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436468:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43646c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436473:	48 89 50 10          	mov    %rdx,0x10(%rax)
  436477:	48 8b b5 48 fc ff ff 	mov    -0x3b8(%rbp),%rsi
  43647e:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  436482:	48 8b 8d 38 fc ff ff 	mov    -0x3c8(%rbp),%rcx
  436489:	48 8d 95 d0 f3 ff ff 	lea    -0xc30(%rbp),%rdx
  436490:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436497:	49 89 f8             	mov    %rdi,%r8
  43649a:	48 89 c7             	mov    %rax,%rdi
  43649d:	e8 9a cc ff ff       	callq  43313c <luaV_finishset>
  4364a2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4364a9:	8b 40 28             	mov    0x28(%rax),%eax
  4364ac:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4364af:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4364b3:	0f 95 c0             	setne  %al
  4364b6:	0f b6 c0             	movzbl %al,%eax
  4364b9:	48 85 c0             	test   %rax,%rax
  4364bc:	74 2b                	je     4364e9 <luaV_execute+0x1a00>
  4364be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4364c2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4364c9:	48 89 d6             	mov    %rdx,%rsi
  4364cc:	48 89 c7             	mov    %rax,%rdi
  4364cf:	e8 0d a9 fd ff       	callq  410de1 <luaG_traceexec>
  4364d4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4364d7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4364de:	48 8b 00             	mov    (%rax),%rax
  4364e1:	48 83 c0 10          	add    $0x10,%rax
  4364e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4364e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4364ed:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4364f1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4364f5:	8b 00                	mov    (%rax),%eax
  4364f7:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4364fa:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4364fd:	83 e0 7f             	and    $0x7f,%eax
  436500:	89 c0                	mov    %eax,%eax
  436502:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436509:	00 
  43650a:	e9 9d e7 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43650f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436512:	c1 e8 07             	shr    $0x7,%eax
  436515:	48 98                	cltq   
  436517:	0f b6 c0             	movzbl %al,%eax
  43651a:	48 c1 e0 04          	shl    $0x4,%rax
  43651e:	48 89 c2             	mov    %rax,%rdx
  436521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436525:	48 01 d0             	add    %rdx,%rax
  436528:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
  43652f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436532:	c1 e8 10             	shr    $0x10,%eax
  436535:	48 98                	cltq   
  436537:	0f b6 c0             	movzbl %al,%eax
  43653a:	48 c1 e0 04          	shl    $0x4,%rax
  43653e:	48 89 c2             	mov    %rax,%rdx
  436541:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  436548:	48 01 d0             	add    %rdx,%rax
  43654b:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
  436552:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436555:	25 00 80 00 00       	and    $0x8000,%eax
  43655a:	85 c0                	test   %eax,%eax
  43655c:	74 1b                	je     436579 <luaV_execute+0x1a90>
  43655e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436561:	c1 e8 18             	shr    $0x18,%eax
  436564:	48 98                	cltq   
  436566:	48 c1 e0 04          	shl    $0x4,%rax
  43656a:	48 89 c2             	mov    %rax,%rdx
  43656d:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  436574:	48 01 d0             	add    %rdx,%rax
  436577:	eb 16                	jmp    43658f <luaV_execute+0x1aa6>
  436579:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43657c:	c1 e8 18             	shr    $0x18,%eax
  43657f:	48 98                	cltq   
  436581:	48 c1 e0 04          	shl    $0x4,%rax
  436585:	48 89 c2             	mov    %rax,%rdx
  436588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43658c:	48 01 d0             	add    %rdx,%rax
  43658f:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
  436596:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
  43659d:	48 8b 00             	mov    (%rax),%rax
  4365a0:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
  4365a7:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  4365ae:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4365b2:	3c 45                	cmp    $0x45,%al
  4365b4:	74 0f                	je     4365c5 <luaV_execute+0x1adc>
  4365b6:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
  4365bd:	00 
  4365be:	b8 00 00 00 00       	mov    $0x0,%eax
  4365c3:	eb 36                	jmp    4365fb <luaV_execute+0x1b12>
  4365c5:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  4365cc:	48 8b 00             	mov    (%rax),%rax
  4365cf:	48 89 c2             	mov    %rax,%rdx
  4365d2:	48 8b 85 00 fc ff ff 	mov    -0x400(%rbp),%rax
  4365d9:	48 89 c6             	mov    %rax,%rsi
  4365dc:	48 89 d7             	mov    %rdx,%rdi
  4365df:	e8 d2 70 ff ff       	callq  42d6b6 <luaH_getshortstr>
  4365e4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  4365e8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4365ec:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4365f0:	0f b6 c0             	movzbl %al,%eax
  4365f3:	83 e0 0f             	and    $0xf,%eax
  4365f6:	85 c0                	test   %eax,%eax
  4365f8:	0f 95 c0             	setne  %al
  4365fb:	84 c0                	test   %al,%al
  4365fd:	0f 84 ad 00 00 00    	je     4366b0 <luaV_execute+0x1bc7>
  436603:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  436607:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  43660e:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  436615:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  43661c:	48 8b 85 f8 fb ff ff 	mov    -0x408(%rbp),%rax
  436623:	48 8b 95 f0 fb ff ff 	mov    -0x410(%rbp),%rdx
  43662a:	48 8b 12             	mov    (%rdx),%rdx
  43662d:	48 89 10             	mov    %rdx,(%rax)
  436630:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  436637:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43663b:	48 8b 85 f8 fb ff ff 	mov    -0x408(%rbp),%rax
  436642:	88 50 08             	mov    %dl,0x8(%rax)
  436645:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  43664c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436650:	0f b6 c0             	movzbl %al,%eax
  436653:	83 e0 40             	and    $0x40,%eax
  436656:	85 c0                	test   %eax,%eax
  436658:	0f 84 af 00 00 00    	je     43670d <luaV_execute+0x1c24>
  43665e:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  436665:	48 8b 00             	mov    (%rax),%rax
  436668:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43666c:	0f b6 c0             	movzbl %al,%eax
  43666f:	83 e0 20             	and    $0x20,%eax
  436672:	85 c0                	test   %eax,%eax
  436674:	0f 84 93 00 00 00    	je     43670d <luaV_execute+0x1c24>
  43667a:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  436681:	48 8b 00             	mov    (%rax),%rax
  436684:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  436688:	0f b6 c0             	movzbl %al,%eax
  43668b:	83 e0 18             	and    $0x18,%eax
  43668e:	85 c0                	test   %eax,%eax
  436690:	74 7b                	je     43670d <luaV_execute+0x1c24>
  436692:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  436699:	48 8b 10             	mov    (%rax),%rdx
  43669c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4366a3:	48 89 d6             	mov    %rdx,%rsi
  4366a6:	48 89 c7             	mov    %rax,%rdi
  4366a9:	e8 3d e4 fd ff       	callq  414aeb <luaC_barrierback_>
  4366ae:	eb 5d                	jmp    43670d <luaV_execute+0x1c24>
  4366b0:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4366b7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4366bb:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4366bf:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4366c6:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4366ca:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4366d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4366d5:	48 8b b5 18 fc ff ff 	mov    -0x3e8(%rbp),%rsi
  4366dc:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  4366e0:	48 8b 8d 08 fc ff ff 	mov    -0x3f8(%rbp),%rcx
  4366e7:	48 8b 95 10 fc ff ff 	mov    -0x3f0(%rbp),%rdx
  4366ee:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4366f5:	49 89 f8             	mov    %rdi,%r8
  4366f8:	48 89 c7             	mov    %rax,%rdi
  4366fb:	e8 3c ca ff ff       	callq  43313c <luaV_finishset>
  436700:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436707:	8b 40 28             	mov    0x28(%rax),%eax
  43670a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43670d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  436711:	0f 95 c0             	setne  %al
  436714:	0f b6 c0             	movzbl %al,%eax
  436717:	48 85 c0             	test   %rax,%rax
  43671a:	74 2b                	je     436747 <luaV_execute+0x1c5e>
  43671c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436720:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436727:	48 89 d6             	mov    %rdx,%rsi
  43672a:	48 89 c7             	mov    %rax,%rdi
  43672d:	e8 af a6 fd ff       	callq  410de1 <luaG_traceexec>
  436732:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436735:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43673c:	48 8b 00             	mov    (%rax),%rax
  43673f:	48 83 c0 10          	add    $0x10,%rax
  436743:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  436747:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43674b:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43674f:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436753:	8b 00                	mov    (%rax),%eax
  436755:	89 45 e8             	mov    %eax,-0x18(%rbp)
  436758:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43675b:	83 e0 7f             	and    $0x7f,%eax
  43675e:	89 c0                	mov    %eax,%eax
  436760:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436767:	00 
  436768:	e9 3f e5 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43676d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436770:	c1 e8 07             	shr    $0x7,%eax
  436773:	48 98                	cltq   
  436775:	0f b6 c0             	movzbl %al,%eax
  436778:	48 c1 e0 04          	shl    $0x4,%rax
  43677c:	48 89 c2             	mov    %rax,%rdx
  43677f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436783:	48 01 d0             	add    %rdx,%rax
  436786:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  43678d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436790:	c1 e8 10             	shr    $0x10,%eax
  436793:	25 ff 00 00 00       	and    $0xff,%eax
  436798:	89 45 94             	mov    %eax,-0x6c(%rbp)
  43679b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43679e:	c1 e8 18             	shr    $0x18,%eax
  4367a1:	89 45 90             	mov    %eax,-0x70(%rbp)
  4367a4:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
  4367a8:	7e 14                	jle    4367be <luaV_execute+0x1cd5>
  4367aa:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4367ad:	83 e8 01             	sub    $0x1,%eax
  4367b0:	ba 01 00 00 00       	mov    $0x1,%edx
  4367b5:	89 c1                	mov    %eax,%ecx
  4367b7:	d3 e2                	shl    %cl,%edx
  4367b9:	89 d0                	mov    %edx,%eax
  4367bb:	89 45 94             	mov    %eax,-0x6c(%rbp)
  4367be:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4367c1:	25 00 80 00 00       	and    $0x8000,%eax
  4367c6:	85 c0                	test   %eax,%eax
  4367c8:	74 0f                	je     4367d9 <luaV_execute+0x1cf0>
  4367ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4367ce:	8b 00                	mov    (%rax),%eax
  4367d0:	c1 e8 07             	shr    $0x7,%eax
  4367d3:	c1 e0 08             	shl    $0x8,%eax
  4367d6:	01 45 90             	add    %eax,-0x70(%rbp)
  4367d9:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4367de:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
  4367e5:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4367e9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4367f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4367f4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4367fb:	48 89 c7             	mov    %rax,%rdi
  4367fe:	e8 76 68 ff ff       	callq  42d079 <luaH_new>
  436803:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  43680a:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
  436811:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
  436818:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  43681f:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
  436826:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
  43682d:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  436834:	48 89 10             	mov    %rdx,(%rax)
  436837:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  43683e:	c6 40 08 45          	movb   $0x45,0x8(%rax)
  436842:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
  436846:	75 06                	jne    43684e <luaV_execute+0x1d65>
  436848:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
  43684c:	74 1c                	je     43686a <luaV_execute+0x1d81>
  43684e:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  436851:	8b 55 90             	mov    -0x70(%rbp),%edx
  436854:	48 8b b5 e0 fb ff ff 	mov    -0x420(%rbp),%rsi
  43685b:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436862:	48 89 c7             	mov    %rax,%rdi
  436865:	e8 cf 64 ff ff       	callq  42cd39 <luaH_resize>
  43686a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436871:	48 8b 40 18          	mov    0x18(%rax),%rax
  436875:	48 8b 40 18          	mov    0x18(%rax),%rax
  436879:	48 85 c0             	test   %rax,%rax
  43687c:	7e 41                	jle    4368bf <luaV_execute+0x1dd6>
  43687e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436885:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436889:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43688d:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
  436894:	48 8d 50 10          	lea    0x10(%rax),%rdx
  436898:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43689f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4368a3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4368aa:	48 89 c7             	mov    %rax,%rdi
  4368ad:	e8 a6 1a fe ff       	callq  418358 <luaC_step>
  4368b2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4368b9:	8b 40 28             	mov    0x28(%rax),%eax
  4368bc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4368bf:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4368c3:	0f 95 c0             	setne  %al
  4368c6:	0f b6 c0             	movzbl %al,%eax
  4368c9:	48 85 c0             	test   %rax,%rax
  4368cc:	74 2b                	je     4368f9 <luaV_execute+0x1e10>
  4368ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4368d2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4368d9:	48 89 d6             	mov    %rdx,%rsi
  4368dc:	48 89 c7             	mov    %rax,%rdi
  4368df:	e8 fd a4 fd ff       	callq  410de1 <luaG_traceexec>
  4368e4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4368e7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4368ee:	48 8b 00             	mov    (%rax),%rax
  4368f1:	48 83 c0 10          	add    $0x10,%rax
  4368f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4368f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4368fd:	48 8d 50 04          	lea    0x4(%rax),%rdx
  436901:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436905:	8b 00                	mov    (%rax),%eax
  436907:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43690a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43690d:	83 e0 7f             	and    $0x7f,%eax
  436910:	89 c0                	mov    %eax,%eax
  436912:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436919:	00 
  43691a:	e9 8d e3 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43691f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436922:	c1 e8 07             	shr    $0x7,%eax
  436925:	48 98                	cltq   
  436927:	0f b6 c0             	movzbl %al,%eax
  43692a:	48 c1 e0 04          	shl    $0x4,%rax
  43692e:	48 89 c2             	mov    %rax,%rdx
  436931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436935:	48 01 d0             	add    %rdx,%rax
  436938:	48 89 85 c8 fb ff ff 	mov    %rax,-0x438(%rbp)
  43693f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436942:	c1 e8 10             	shr    $0x10,%eax
  436945:	48 98                	cltq   
  436947:	0f b6 c0             	movzbl %al,%eax
  43694a:	48 c1 e0 04          	shl    $0x4,%rax
  43694e:	48 89 c2             	mov    %rax,%rdx
  436951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436955:	48 01 d0             	add    %rdx,%rax
  436958:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
  43695f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436962:	25 00 80 00 00       	and    $0x8000,%eax
  436967:	85 c0                	test   %eax,%eax
  436969:	74 1b                	je     436986 <luaV_execute+0x1e9d>
  43696b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43696e:	c1 e8 18             	shr    $0x18,%eax
  436971:	48 98                	cltq   
  436973:	48 c1 e0 04          	shl    $0x4,%rax
  436977:	48 89 c2             	mov    %rax,%rdx
  43697a:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  436981:	48 01 d0             	add    %rdx,%rax
  436984:	eb 16                	jmp    43699c <luaV_execute+0x1eb3>
  436986:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436989:	c1 e8 18             	shr    $0x18,%eax
  43698c:	48 98                	cltq   
  43698e:	48 c1 e0 04          	shl    $0x4,%rax
  436992:	48 89 c2             	mov    %rax,%rdx
  436995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436999:	48 01 d0             	add    %rdx,%rax
  43699c:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  4369a3:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  4369aa:	48 8b 00             	mov    (%rax),%rax
  4369ad:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
  4369b4:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  4369bb:	48 83 c0 10          	add    $0x10,%rax
  4369bf:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  4369c6:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  4369cd:	48 89 85 a0 fb ff ff 	mov    %rax,-0x460(%rbp)
  4369d4:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  4369db:	48 8b 95 a0 fb ff ff 	mov    -0x460(%rbp),%rdx
  4369e2:	48 8b 12             	mov    (%rdx),%rdx
  4369e5:	48 89 10             	mov    %rdx,(%rax)
  4369e8:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
  4369ef:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  4369f3:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  4369fa:	88 50 08             	mov    %dl,0x8(%rax)
  4369fd:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  436a04:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436a08:	3c 45                	cmp    $0x45,%al
  436a0a:	74 0f                	je     436a1b <luaV_execute+0x1f32>
  436a0c:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  436a13:	00 
  436a14:	b8 00 00 00 00       	mov    $0x0,%eax
  436a19:	eb 36                	jmp    436a51 <luaV_execute+0x1f68>
  436a1b:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  436a22:	48 8b 00             	mov    (%rax),%rax
  436a25:	48 89 c2             	mov    %rax,%rdx
  436a28:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  436a2f:	48 89 c6             	mov    %rax,%rsi
  436a32:	48 89 d7             	mov    %rdx,%rdi
  436a35:	e8 1b 6d ff ff       	callq  42d755 <luaH_getstr>
  436a3a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  436a3e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  436a42:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436a46:	0f b6 c0             	movzbl %al,%eax
  436a49:	83 e0 0f             	and    $0xf,%eax
  436a4c:	85 c0                	test   %eax,%eax
  436a4e:	0f 95 c0             	setne  %al
  436a51:	84 c0                	test   %al,%al
  436a53:	74 44                	je     436a99 <luaV_execute+0x1fb0>
  436a55:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
  436a5c:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  436a63:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  436a67:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  436a6e:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  436a75:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  436a7c:	48 8b 12             	mov    (%rdx),%rdx
  436a7f:	48 89 10             	mov    %rdx,(%rax)
  436a82:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  436a89:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  436a8d:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  436a94:	88 50 08             	mov    %dl,0x8(%rax)
  436a97:	eb 5d                	jmp    436af6 <luaV_execute+0x200d>
  436a99:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436aa0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436aa4:	48 89 50 20          	mov    %rdx,0x20(%rax)
  436aa8:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436aaf:	48 8b 50 08          	mov    0x8(%rax),%rdx
  436ab3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436aba:	48 89 50 10          	mov    %rdx,0x10(%rax)
  436abe:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  436ac2:	48 8b 8d c8 fb ff ff 	mov    -0x438(%rbp),%rcx
  436ac9:	48 8b 95 b8 fb ff ff 	mov    -0x448(%rbp),%rdx
  436ad0:	48 8b b5 c0 fb ff ff 	mov    -0x440(%rbp),%rsi
  436ad7:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436ade:	49 89 f8             	mov    %rdi,%r8
  436ae1:	48 89 c7             	mov    %rax,%rdi
  436ae4:	e8 75 c4 ff ff       	callq  432f5e <luaV_finishget>
  436ae9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436af0:	8b 40 28             	mov    0x28(%rax),%eax
  436af3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436af6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  436afa:	0f 95 c0             	setne  %al
  436afd:	0f b6 c0             	movzbl %al,%eax
  436b00:	48 85 c0             	test   %rax,%rax
  436b03:	74 2b                	je     436b30 <luaV_execute+0x2047>
  436b05:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436b09:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436b10:	48 89 d6             	mov    %rdx,%rsi
  436b13:	48 89 c7             	mov    %rax,%rdi
  436b16:	e8 c6 a2 fd ff       	callq  410de1 <luaG_traceexec>
  436b1b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436b1e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436b25:	48 8b 00             	mov    (%rax),%rax
  436b28:	48 83 c0 10          	add    $0x10,%rax
  436b2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  436b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  436b34:	48 8d 50 04          	lea    0x4(%rax),%rdx
  436b38:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436b3c:	8b 00                	mov    (%rax),%eax
  436b3e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  436b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436b44:	83 e0 7f             	and    $0x7f,%eax
  436b47:	89 c0                	mov    %eax,%eax
  436b49:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436b50:	00 
  436b51:	e9 56 e1 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  436b56:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436b59:	c1 e8 07             	shr    $0x7,%eax
  436b5c:	48 98                	cltq   
  436b5e:	0f b6 c0             	movzbl %al,%eax
  436b61:	48 c1 e0 04          	shl    $0x4,%rax
  436b65:	48 89 c2             	mov    %rax,%rdx
  436b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436b6c:	48 01 d0             	add    %rdx,%rax
  436b6f:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  436b76:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436b79:	c1 e8 10             	shr    $0x10,%eax
  436b7c:	48 98                	cltq   
  436b7e:	0f b6 c0             	movzbl %al,%eax
  436b81:	48 c1 e0 04          	shl    $0x4,%rax
  436b85:	48 89 c2             	mov    %rax,%rdx
  436b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436b8c:	48 01 d0             	add    %rdx,%rax
  436b8f:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
  436b96:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436b99:	c1 e8 18             	shr    $0x18,%eax
  436b9c:	83 e8 7f             	sub    $0x7f,%eax
  436b9f:	89 85 7c fb ff ff    	mov    %eax,-0x484(%rbp)
  436ba5:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  436bac:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436bb0:	3c 03                	cmp    $0x3,%al
  436bb2:	75 51                	jne    436c05 <luaV_execute+0x211c>
  436bb4:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  436bbb:	48 8b 00             	mov    (%rax),%rax
  436bbe:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  436bc5:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  436bca:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  436bd1:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  436bd8:	8b 85 7c fb ff ff    	mov    -0x484(%rbp),%eax
  436bde:	48 63 d0             	movslq %eax,%rdx
  436be1:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  436be8:	48 01 d0             	add    %rdx,%rax
  436beb:	48 89 c2             	mov    %rax,%rdx
  436bee:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  436bf5:	48 89 10             	mov    %rdx,(%rax)
  436bf8:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  436bff:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  436c03:	eb 6b                	jmp    436c70 <luaV_execute+0x2187>
  436c05:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  436c0c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436c10:	3c 13                	cmp    $0x13,%al
  436c12:	75 5c                	jne    436c70 <luaV_execute+0x2187>
  436c14:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  436c1b:	f2 0f 10 00          	movsd  (%rax),%xmm0
  436c1f:	f2 0f 11 85 60 fb ff 	movsd  %xmm0,-0x4a0(%rbp)
  436c26:	ff 
  436c27:	f2 0f 2a 85 7c fb ff 	cvtsi2sdl -0x484(%rbp),%xmm0
  436c2e:	ff 
  436c2f:	f2 0f 11 85 58 fb ff 	movsd  %xmm0,-0x4a8(%rbp)
  436c36:	ff 
  436c37:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  436c3c:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
  436c43:	48 89 85 50 fb ff ff 	mov    %rax,-0x4b0(%rbp)
  436c4a:	f2 0f 10 85 60 fb ff 	movsd  -0x4a0(%rbp),%xmm0
  436c51:	ff 
  436c52:	f2 0f 58 85 58 fb ff 	addsd  -0x4a8(%rbp),%xmm0
  436c59:	ff 
  436c5a:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
  436c61:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  436c65:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
  436c6c:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  436c70:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  436c74:	0f 95 c0             	setne  %al
  436c77:	0f b6 c0             	movzbl %al,%eax
  436c7a:	48 85 c0             	test   %rax,%rax
  436c7d:	74 2b                	je     436caa <luaV_execute+0x21c1>
  436c7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436c83:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436c8a:	48 89 d6             	mov    %rdx,%rsi
  436c8d:	48 89 c7             	mov    %rax,%rdi
  436c90:	e8 4c a1 fd ff       	callq  410de1 <luaG_traceexec>
  436c95:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436c98:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436c9f:	48 8b 00             	mov    (%rax),%rax
  436ca2:	48 83 c0 10          	add    $0x10,%rax
  436ca6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  436caa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  436cae:	48 8d 50 04          	lea    0x4(%rax),%rdx
  436cb2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436cb6:	8b 00                	mov    (%rax),%eax
  436cb8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  436cbb:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436cbe:	83 e0 7f             	and    $0x7f,%eax
  436cc1:	89 c0                	mov    %eax,%eax
  436cc3:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436cca:	00 
  436ccb:	e9 dc df ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  436cd0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436cd3:	c1 e8 10             	shr    $0x10,%eax
  436cd6:	48 98                	cltq   
  436cd8:	0f b6 c0             	movzbl %al,%eax
  436cdb:	48 c1 e0 04          	shl    $0x4,%rax
  436cdf:	48 89 c2             	mov    %rax,%rdx
  436ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436ce6:	48 01 d0             	add    %rdx,%rax
  436ce9:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  436cf0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436cf3:	c1 e8 18             	shr    $0x18,%eax
  436cf6:	48 98                	cltq   
  436cf8:	48 c1 e0 04          	shl    $0x4,%rax
  436cfc:	48 89 c2             	mov    %rax,%rdx
  436cff:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  436d06:	48 01 d0             	add    %rdx,%rax
  436d09:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  436d10:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436d13:	c1 e8 07             	shr    $0x7,%eax
  436d16:	48 98                	cltq   
  436d18:	0f b6 c0             	movzbl %al,%eax
  436d1b:	48 c1 e0 04          	shl    $0x4,%rax
  436d1f:	48 89 c2             	mov    %rax,%rdx
  436d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436d26:	48 01 d0             	add    %rdx,%rax
  436d29:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  436d30:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436d37:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436d3b:	3c 03                	cmp    $0x3,%al
  436d3d:	75 72                	jne    436db1 <luaV_execute+0x22c8>
  436d3f:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436d46:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436d4a:	3c 03                	cmp    $0x3,%al
  436d4c:	75 63                	jne    436db1 <luaV_execute+0x22c8>
  436d4e:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436d55:	48 8b 00             	mov    (%rax),%rax
  436d58:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  436d5f:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436d66:	48 8b 00             	mov    (%rax),%rax
  436d69:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  436d70:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  436d75:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  436d7c:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  436d83:	48 8b 95 30 fb ff ff 	mov    -0x4d0(%rbp),%rdx
  436d8a:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  436d91:	48 01 d0             	add    %rdx,%rax
  436d94:	48 89 c2             	mov    %rax,%rdx
  436d97:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  436d9e:	48 89 10             	mov    %rdx,(%rax)
  436da1:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  436da8:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  436dac:	e9 f2 00 00 00       	jmpq   436ea3 <luaV_execute+0x23ba>
  436db1:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436db8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436dbc:	3c 13                	cmp    $0x13,%al
  436dbe:	75 17                	jne    436dd7 <luaV_execute+0x22ee>
  436dc0:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436dc7:	f2 0f 10 00          	movsd  (%rax),%xmm0
  436dcb:	f2 0f 11 45 80       	movsd  %xmm0,-0x80(%rbp)
  436dd0:	b8 01 00 00 00       	mov    $0x1,%eax
  436dd5:	eb 2f                	jmp    436e06 <luaV_execute+0x231d>
  436dd7:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436dde:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436de2:	3c 03                	cmp    $0x3,%al
  436de4:	75 1b                	jne    436e01 <luaV_execute+0x2318>
  436de6:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
  436ded:	48 8b 00             	mov    (%rax),%rax
  436df0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  436df5:	f2 0f 11 45 80       	movsd  %xmm0,-0x80(%rbp)
  436dfa:	b8 01 00 00 00       	mov    $0x1,%eax
  436dff:	eb 05                	jmp    436e06 <luaV_execute+0x231d>
  436e01:	b8 00 00 00 00       	mov    $0x0,%eax
  436e06:	84 c0                	test   %al,%al
  436e08:	0f 84 95 00 00 00    	je     436ea3 <luaV_execute+0x23ba>
  436e0e:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436e15:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436e19:	3c 13                	cmp    $0x13,%al
  436e1b:	75 1a                	jne    436e37 <luaV_execute+0x234e>
  436e1d:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436e24:	f2 0f 10 00          	movsd  (%rax),%xmm0
  436e28:	f2 0f 11 85 78 ff ff 	movsd  %xmm0,-0x88(%rbp)
  436e2f:	ff 
  436e30:	b8 01 00 00 00       	mov    $0x1,%eax
  436e35:	eb 32                	jmp    436e69 <luaV_execute+0x2380>
  436e37:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436e3e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436e42:	3c 03                	cmp    $0x3,%al
  436e44:	75 1e                	jne    436e64 <luaV_execute+0x237b>
  436e46:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  436e4d:	48 8b 00             	mov    (%rax),%rax
  436e50:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  436e55:	f2 0f 11 85 78 ff ff 	movsd  %xmm0,-0x88(%rbp)
  436e5c:	ff 
  436e5d:	b8 01 00 00 00       	mov    $0x1,%eax
  436e62:	eb 05                	jmp    436e69 <luaV_execute+0x2380>
  436e64:	b8 00 00 00 00       	mov    $0x0,%eax
  436e69:	84 c0                	test   %al,%al
  436e6b:	74 36                	je     436ea3 <luaV_execute+0x23ba>
  436e6d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  436e72:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  436e79:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  436e80:	f2 0f 10 45 80       	movsd  -0x80(%rbp),%xmm0
  436e85:	f2 0f 58 85 78 ff ff 	addsd  -0x88(%rbp),%xmm0
  436e8c:	ff 
  436e8d:	48 8b 85 18 fb ff ff 	mov    -0x4e8(%rbp),%rax
  436e94:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  436e98:	48 8b 85 18 fb ff ff 	mov    -0x4e8(%rbp),%rax
  436e9f:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  436ea3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  436ea7:	0f 95 c0             	setne  %al
  436eaa:	0f b6 c0             	movzbl %al,%eax
  436ead:	48 85 c0             	test   %rax,%rax
  436eb0:	74 2b                	je     436edd <luaV_execute+0x23f4>
  436eb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436eb6:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  436ebd:	48 89 d6             	mov    %rdx,%rsi
  436ec0:	48 89 c7             	mov    %rax,%rdi
  436ec3:	e8 19 9f fd ff       	callq  410de1 <luaG_traceexec>
  436ec8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  436ecb:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  436ed2:	48 8b 00             	mov    (%rax),%rax
  436ed5:	48 83 c0 10          	add    $0x10,%rax
  436ed9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  436edd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  436ee1:	48 8d 50 04          	lea    0x4(%rax),%rdx
  436ee5:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  436ee9:	8b 00                	mov    (%rax),%eax
  436eeb:	89 45 e8             	mov    %eax,-0x18(%rbp)
  436eee:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436ef1:	83 e0 7f             	and    $0x7f,%eax
  436ef4:	89 c0                	mov    %eax,%eax
  436ef6:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  436efd:	00 
  436efe:	e9 a9 dd ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  436f03:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436f06:	c1 e8 10             	shr    $0x10,%eax
  436f09:	48 98                	cltq   
  436f0b:	0f b6 c0             	movzbl %al,%eax
  436f0e:	48 c1 e0 04          	shl    $0x4,%rax
  436f12:	48 89 c2             	mov    %rax,%rdx
  436f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436f19:	48 01 d0             	add    %rdx,%rax
  436f1c:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  436f23:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436f26:	c1 e8 18             	shr    $0x18,%eax
  436f29:	48 98                	cltq   
  436f2b:	48 c1 e0 04          	shl    $0x4,%rax
  436f2f:	48 89 c2             	mov    %rax,%rdx
  436f32:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  436f39:	48 01 d0             	add    %rdx,%rax
  436f3c:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  436f43:	8b 45 e8             	mov    -0x18(%rbp),%eax
  436f46:	c1 e8 07             	shr    $0x7,%eax
  436f49:	48 98                	cltq   
  436f4b:	0f b6 c0             	movzbl %al,%eax
  436f4e:	48 c1 e0 04          	shl    $0x4,%rax
  436f52:	48 89 c2             	mov    %rax,%rdx
  436f55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  436f59:	48 01 d0             	add    %rdx,%rax
  436f5c:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  436f63:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  436f6a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436f6e:	3c 03                	cmp    $0x3,%al
  436f70:	75 75                	jne    436fe7 <luaV_execute+0x24fe>
  436f72:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  436f79:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436f7d:	3c 03                	cmp    $0x3,%al
  436f7f:	75 66                	jne    436fe7 <luaV_execute+0x24fe>
  436f81:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  436f88:	48 8b 00             	mov    (%rax),%rax
  436f8b:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  436f92:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  436f99:	48 8b 00             	mov    (%rax),%rax
  436f9c:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  436fa3:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  436fa8:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  436faf:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  436fb6:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
  436fbd:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  436fc4:	48 29 c2             	sub    %rax,%rdx
  436fc7:	48 89 d0             	mov    %rdx,%rax
  436fca:	48 89 c2             	mov    %rax,%rdx
  436fcd:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  436fd4:	48 89 10             	mov    %rdx,(%rax)
  436fd7:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  436fde:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  436fe2:	e9 fb 00 00 00       	jmpq   4370e2 <luaV_execute+0x25f9>
  436fe7:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  436fee:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  436ff2:	3c 13                	cmp    $0x13,%al
  436ff4:	75 1a                	jne    437010 <luaV_execute+0x2527>
  436ff6:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  436ffd:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437001:	f2 0f 11 85 70 ff ff 	movsd  %xmm0,-0x90(%rbp)
  437008:	ff 
  437009:	b8 01 00 00 00       	mov    $0x1,%eax
  43700e:	eb 32                	jmp    437042 <luaV_execute+0x2559>
  437010:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  437017:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43701b:	3c 03                	cmp    $0x3,%al
  43701d:	75 1e                	jne    43703d <luaV_execute+0x2554>
  43701f:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  437026:	48 8b 00             	mov    (%rax),%rax
  437029:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43702e:	f2 0f 11 85 70 ff ff 	movsd  %xmm0,-0x90(%rbp)
  437035:	ff 
  437036:	b8 01 00 00 00       	mov    $0x1,%eax
  43703b:	eb 05                	jmp    437042 <luaV_execute+0x2559>
  43703d:	b8 00 00 00 00       	mov    $0x0,%eax
  437042:	84 c0                	test   %al,%al
  437044:	0f 84 98 00 00 00    	je     4370e2 <luaV_execute+0x25f9>
  43704a:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  437051:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437055:	3c 13                	cmp    $0x13,%al
  437057:	75 1a                	jne    437073 <luaV_execute+0x258a>
  437059:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  437060:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437064:	f2 0f 11 85 68 ff ff 	movsd  %xmm0,-0x98(%rbp)
  43706b:	ff 
  43706c:	b8 01 00 00 00       	mov    $0x1,%eax
  437071:	eb 32                	jmp    4370a5 <luaV_execute+0x25bc>
  437073:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  43707a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43707e:	3c 03                	cmp    $0x3,%al
  437080:	75 1e                	jne    4370a0 <luaV_execute+0x25b7>
  437082:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  437089:	48 8b 00             	mov    (%rax),%rax
  43708c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  437091:	f2 0f 11 85 68 ff ff 	movsd  %xmm0,-0x98(%rbp)
  437098:	ff 
  437099:	b8 01 00 00 00       	mov    $0x1,%eax
  43709e:	eb 05                	jmp    4370a5 <luaV_execute+0x25bc>
  4370a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4370a5:	84 c0                	test   %al,%al
  4370a7:	74 39                	je     4370e2 <luaV_execute+0x25f9>
  4370a9:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4370ae:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  4370b5:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  4370bc:	f2 0f 10 85 70 ff ff 	movsd  -0x90(%rbp),%xmm0
  4370c3:	ff 
  4370c4:	f2 0f 5c 85 68 ff ff 	subsd  -0x98(%rbp),%xmm0
  4370cb:	ff 
  4370cc:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
  4370d3:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  4370d7:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
  4370de:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  4370e2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4370e6:	0f 95 c0             	setne  %al
  4370e9:	0f b6 c0             	movzbl %al,%eax
  4370ec:	48 85 c0             	test   %rax,%rax
  4370ef:	74 2b                	je     43711c <luaV_execute+0x2633>
  4370f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4370f5:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4370fc:	48 89 d6             	mov    %rdx,%rsi
  4370ff:	48 89 c7             	mov    %rax,%rdi
  437102:	e8 da 9c fd ff       	callq  410de1 <luaG_traceexec>
  437107:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43710a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437111:	48 8b 00             	mov    (%rax),%rax
  437114:	48 83 c0 10          	add    $0x10,%rax
  437118:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43711c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  437120:	48 8d 50 04          	lea    0x4(%rax),%rdx
  437124:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  437128:	8b 00                	mov    (%rax),%eax
  43712a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43712d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437130:	83 e0 7f             	and    $0x7f,%eax
  437133:	89 c0                	mov    %eax,%eax
  437135:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43713c:	00 
  43713d:	e9 6a db ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437142:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437145:	c1 e8 10             	shr    $0x10,%eax
  437148:	48 98                	cltq   
  43714a:	0f b6 c0             	movzbl %al,%eax
  43714d:	48 c1 e0 04          	shl    $0x4,%rax
  437151:	48 89 c2             	mov    %rax,%rdx
  437154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437158:	48 01 d0             	add    %rdx,%rax
  43715b:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  437162:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437165:	c1 e8 18             	shr    $0x18,%eax
  437168:	48 98                	cltq   
  43716a:	48 c1 e0 04          	shl    $0x4,%rax
  43716e:	48 89 c2             	mov    %rax,%rdx
  437171:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  437178:	48 01 d0             	add    %rdx,%rax
  43717b:	48 89 85 d0 fa ff ff 	mov    %rax,-0x530(%rbp)
  437182:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437185:	c1 e8 07             	shr    $0x7,%eax
  437188:	48 98                	cltq   
  43718a:	0f b6 c0             	movzbl %al,%eax
  43718d:	48 c1 e0 04          	shl    $0x4,%rax
  437191:	48 89 c2             	mov    %rax,%rdx
  437194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437198:	48 01 d0             	add    %rdx,%rax
  43719b:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  4371a2:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  4371a9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4371ad:	3c 03                	cmp    $0x3,%al
  4371af:	75 73                	jne    437224 <luaV_execute+0x273b>
  4371b1:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  4371b8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4371bc:	3c 03                	cmp    $0x3,%al
  4371be:	75 64                	jne    437224 <luaV_execute+0x273b>
  4371c0:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  4371c7:	48 8b 00             	mov    (%rax),%rax
  4371ca:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  4371d1:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  4371d8:	48 8b 00             	mov    (%rax),%rax
  4371db:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  4371e2:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4371e7:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
  4371ee:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  4371f5:	48 8b 95 c0 fa ff ff 	mov    -0x540(%rbp),%rdx
  4371fc:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  437203:	48 0f af c2          	imul   %rdx,%rax
  437207:	48 89 c2             	mov    %rax,%rdx
  43720a:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  437211:	48 89 10             	mov    %rdx,(%rax)
  437214:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  43721b:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  43721f:	e9 fb 00 00 00       	jmpq   43731f <luaV_execute+0x2836>
  437224:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  43722b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43722f:	3c 13                	cmp    $0x13,%al
  437231:	75 1a                	jne    43724d <luaV_execute+0x2764>
  437233:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  43723a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43723e:	f2 0f 11 85 60 ff ff 	movsd  %xmm0,-0xa0(%rbp)
  437245:	ff 
  437246:	b8 01 00 00 00       	mov    $0x1,%eax
  43724b:	eb 32                	jmp    43727f <luaV_execute+0x2796>
  43724d:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  437254:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437258:	3c 03                	cmp    $0x3,%al
  43725a:	75 1e                	jne    43727a <luaV_execute+0x2791>
  43725c:	48 8b 85 d8 fa ff ff 	mov    -0x528(%rbp),%rax
  437263:	48 8b 00             	mov    (%rax),%rax
  437266:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43726b:	f2 0f 11 85 60 ff ff 	movsd  %xmm0,-0xa0(%rbp)
  437272:	ff 
  437273:	b8 01 00 00 00       	mov    $0x1,%eax
  437278:	eb 05                	jmp    43727f <luaV_execute+0x2796>
  43727a:	b8 00 00 00 00       	mov    $0x0,%eax
  43727f:	84 c0                	test   %al,%al
  437281:	0f 84 98 00 00 00    	je     43731f <luaV_execute+0x2836>
  437287:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  43728e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437292:	3c 13                	cmp    $0x13,%al
  437294:	75 1a                	jne    4372b0 <luaV_execute+0x27c7>
  437296:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  43729d:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4372a1:	f2 0f 11 85 58 ff ff 	movsd  %xmm0,-0xa8(%rbp)
  4372a8:	ff 
  4372a9:	b8 01 00 00 00       	mov    $0x1,%eax
  4372ae:	eb 32                	jmp    4372e2 <luaV_execute+0x27f9>
  4372b0:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  4372b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4372bb:	3c 03                	cmp    $0x3,%al
  4372bd:	75 1e                	jne    4372dd <luaV_execute+0x27f4>
  4372bf:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  4372c6:	48 8b 00             	mov    (%rax),%rax
  4372c9:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4372ce:	f2 0f 11 85 58 ff ff 	movsd  %xmm0,-0xa8(%rbp)
  4372d5:	ff 
  4372d6:	b8 01 00 00 00       	mov    $0x1,%eax
  4372db:	eb 05                	jmp    4372e2 <luaV_execute+0x27f9>
  4372dd:	b8 00 00 00 00       	mov    $0x0,%eax
  4372e2:	84 c0                	test   %al,%al
  4372e4:	74 39                	je     43731f <luaV_execute+0x2836>
  4372e6:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4372eb:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
  4372f2:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  4372f9:	f2 0f 10 85 60 ff ff 	movsd  -0xa0(%rbp),%xmm0
  437300:	ff 
  437301:	f2 0f 59 85 58 ff ff 	mulsd  -0xa8(%rbp),%xmm0
  437308:	ff 
  437309:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
  437310:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  437314:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
  43731b:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  43731f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  437323:	0f 95 c0             	setne  %al
  437326:	0f b6 c0             	movzbl %al,%eax
  437329:	48 85 c0             	test   %rax,%rax
  43732c:	74 2b                	je     437359 <luaV_execute+0x2870>
  43732e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  437332:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437339:	48 89 d6             	mov    %rdx,%rsi
  43733c:	48 89 c7             	mov    %rax,%rdi
  43733f:	e8 9d 9a fd ff       	callq  410de1 <luaG_traceexec>
  437344:	89 45 ec             	mov    %eax,-0x14(%rbp)
  437347:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43734e:	48 8b 00             	mov    (%rax),%rax
  437351:	48 83 c0 10          	add    $0x10,%rax
  437355:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  437359:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43735d:	48 8d 50 04          	lea    0x4(%rax),%rdx
  437361:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  437365:	8b 00                	mov    (%rax),%eax
  437367:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43736a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43736d:	83 e0 7f             	and    $0x7f,%eax
  437370:	89 c0                	mov    %eax,%eax
  437372:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  437379:	00 
  43737a:	e9 2d d9 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43737f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437386:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43738a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43738e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437395:	48 8b 50 08          	mov    0x8(%rax),%rdx
  437399:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4373a0:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4373a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4373a7:	c1 e8 10             	shr    $0x10,%eax
  4373aa:	48 98                	cltq   
  4373ac:	0f b6 c0             	movzbl %al,%eax
  4373af:	48 c1 e0 04          	shl    $0x4,%rax
  4373b3:	48 89 c2             	mov    %rax,%rdx
  4373b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4373ba:	48 01 d0             	add    %rdx,%rax
  4373bd:	48 89 85 a0 fa ff ff 	mov    %rax,-0x560(%rbp)
  4373c4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4373c7:	c1 e8 18             	shr    $0x18,%eax
  4373ca:	48 98                	cltq   
  4373cc:	48 c1 e0 04          	shl    $0x4,%rax
  4373d0:	48 89 c2             	mov    %rax,%rdx
  4373d3:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  4373da:	48 01 d0             	add    %rdx,%rax
  4373dd:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  4373e4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4373e7:	c1 e8 07             	shr    $0x7,%eax
  4373ea:	48 98                	cltq   
  4373ec:	0f b6 c0             	movzbl %al,%eax
  4373ef:	48 c1 e0 04          	shl    $0x4,%rax
  4373f3:	48 89 c2             	mov    %rax,%rdx
  4373f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4373fa:	48 01 d0             	add    %rdx,%rax
  4373fd:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  437404:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  43740b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43740f:	3c 03                	cmp    $0x3,%al
  437411:	0f 85 81 00 00 00    	jne    437498 <luaV_execute+0x29af>
  437417:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  43741e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437422:	3c 03                	cmp    $0x3,%al
  437424:	75 72                	jne    437498 <luaV_execute+0x29af>
  437426:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  43742d:	48 8b 00             	mov    (%rax),%rax
  437430:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  437437:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  43743e:	48 8b 00             	mov    (%rax),%rax
  437441:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  437448:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43744d:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  437454:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
  43745b:	48 8b 95 80 fa ff ff 	mov    -0x580(%rbp),%rdx
  437462:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  437469:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437470:	48 89 ce             	mov    %rcx,%rsi
  437473:	48 89 c7             	mov    %rax,%rdi
  437476:	e8 d2 d0 ff ff       	callq  43454d <luaV_mod>
  43747b:	48 89 c2             	mov    %rax,%rdx
  43747e:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
  437485:	48 89 10             	mov    %rdx,(%rax)
  437488:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
  43748f:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  437493:	e9 0e 01 00 00       	jmpq   4375a6 <luaV_execute+0x2abd>
  437498:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  43749f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4374a3:	3c 13                	cmp    $0x13,%al
  4374a5:	75 1a                	jne    4374c1 <luaV_execute+0x29d8>
  4374a7:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  4374ae:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4374b2:	f2 0f 11 85 50 ff ff 	movsd  %xmm0,-0xb0(%rbp)
  4374b9:	ff 
  4374ba:	b8 01 00 00 00       	mov    $0x1,%eax
  4374bf:	eb 32                	jmp    4374f3 <luaV_execute+0x2a0a>
  4374c1:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  4374c8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4374cc:	3c 03                	cmp    $0x3,%al
  4374ce:	75 1e                	jne    4374ee <luaV_execute+0x2a05>
  4374d0:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  4374d7:	48 8b 00             	mov    (%rax),%rax
  4374da:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4374df:	f2 0f 11 85 50 ff ff 	movsd  %xmm0,-0xb0(%rbp)
  4374e6:	ff 
  4374e7:	b8 01 00 00 00       	mov    $0x1,%eax
  4374ec:	eb 05                	jmp    4374f3 <luaV_execute+0x2a0a>
  4374ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4374f3:	84 c0                	test   %al,%al
  4374f5:	0f 84 ab 00 00 00    	je     4375a6 <luaV_execute+0x2abd>
  4374fb:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  437502:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437506:	3c 13                	cmp    $0x13,%al
  437508:	75 1a                	jne    437524 <luaV_execute+0x2a3b>
  43750a:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  437511:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437515:	f2 0f 11 85 48 ff ff 	movsd  %xmm0,-0xb8(%rbp)
  43751c:	ff 
  43751d:	b8 01 00 00 00       	mov    $0x1,%eax
  437522:	eb 32                	jmp    437556 <luaV_execute+0x2a6d>
  437524:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  43752b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43752f:	3c 03                	cmp    $0x3,%al
  437531:	75 1e                	jne    437551 <luaV_execute+0x2a68>
  437533:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  43753a:	48 8b 00             	mov    (%rax),%rax
  43753d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  437542:	f2 0f 11 85 48 ff ff 	movsd  %xmm0,-0xb8(%rbp)
  437549:	ff 
  43754a:	b8 01 00 00 00       	mov    $0x1,%eax
  43754f:	eb 05                	jmp    437556 <luaV_execute+0x2a6d>
  437551:	b8 00 00 00 00       	mov    $0x0,%eax
  437556:	84 c0                	test   %al,%al
  437558:	74 4c                	je     4375a6 <luaV_execute+0x2abd>
  43755a:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43755f:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  437566:	48 89 85 70 fa ff ff 	mov    %rax,-0x590(%rbp)
  43756d:	f2 0f 10 8d 48 ff ff 	movsd  -0xb8(%rbp),%xmm1
  437574:	ff 
  437575:	f2 0f 10 85 50 ff ff 	movsd  -0xb0(%rbp),%xmm0
  43757c:	ff 
  43757d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437584:	48 89 c7             	mov    %rax,%rdi
  437587:	e8 40 d0 ff ff       	callq  4345cc <luaV_modf>
  43758c:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  437591:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  437598:	48 89 10             	mov    %rdx,(%rax)
  43759b:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  4375a2:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  4375a6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4375aa:	0f 95 c0             	setne  %al
  4375ad:	0f b6 c0             	movzbl %al,%eax
  4375b0:	48 85 c0             	test   %rax,%rax
  4375b3:	74 2b                	je     4375e0 <luaV_execute+0x2af7>
  4375b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4375b9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4375c0:	48 89 d6             	mov    %rdx,%rsi
  4375c3:	48 89 c7             	mov    %rax,%rdi
  4375c6:	e8 16 98 fd ff       	callq  410de1 <luaG_traceexec>
  4375cb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4375ce:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4375d5:	48 8b 00             	mov    (%rax),%rax
  4375d8:	48 83 c0 10          	add    $0x10,%rax
  4375dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4375e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4375e4:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4375e8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4375ec:	8b 00                	mov    (%rax),%eax
  4375ee:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4375f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4375f4:	83 e0 7f             	and    $0x7f,%eax
  4375f7:	89 c0                	mov    %eax,%eax
  4375f9:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  437600:	00 
  437601:	e9 a6 d6 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437606:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437609:	c1 e8 07             	shr    $0x7,%eax
  43760c:	48 98                	cltq   
  43760e:	0f b6 c0             	movzbl %al,%eax
  437611:	48 c1 e0 04          	shl    $0x4,%rax
  437615:	48 89 c2             	mov    %rax,%rdx
  437618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43761c:	48 01 d0             	add    %rdx,%rax
  43761f:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  437626:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437629:	c1 e8 10             	shr    $0x10,%eax
  43762c:	48 98                	cltq   
  43762e:	0f b6 c0             	movzbl %al,%eax
  437631:	48 c1 e0 04          	shl    $0x4,%rax
  437635:	48 89 c2             	mov    %rax,%rdx
  437638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43763c:	48 01 d0             	add    %rdx,%rax
  43763f:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  437646:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437649:	c1 e8 18             	shr    $0x18,%eax
  43764c:	48 98                	cltq   
  43764e:	48 c1 e0 04          	shl    $0x4,%rax
  437652:	48 89 c2             	mov    %rax,%rdx
  437655:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  43765c:	48 01 d0             	add    %rdx,%rax
  43765f:	48 89 85 58 fa ff ff 	mov    %rax,-0x5a8(%rbp)
  437666:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  43766d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437671:	3c 13                	cmp    $0x13,%al
  437673:	75 1a                	jne    43768f <luaV_execute+0x2ba6>
  437675:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  43767c:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437680:	f2 0f 11 85 40 ff ff 	movsd  %xmm0,-0xc0(%rbp)
  437687:	ff 
  437688:	b8 01 00 00 00       	mov    $0x1,%eax
  43768d:	eb 32                	jmp    4376c1 <luaV_execute+0x2bd8>
  43768f:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  437696:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43769a:	3c 03                	cmp    $0x3,%al
  43769c:	75 1e                	jne    4376bc <luaV_execute+0x2bd3>
  43769e:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  4376a5:	48 8b 00             	mov    (%rax),%rax
  4376a8:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4376ad:	f2 0f 11 85 40 ff ff 	movsd  %xmm0,-0xc0(%rbp)
  4376b4:	ff 
  4376b5:	b8 01 00 00 00       	mov    $0x1,%eax
  4376ba:	eb 05                	jmp    4376c1 <luaV_execute+0x2bd8>
  4376bc:	b8 00 00 00 00       	mov    $0x0,%eax
  4376c1:	84 c0                	test   %al,%al
  4376c3:	0f 84 dc 00 00 00    	je     4377a5 <luaV_execute+0x2cbc>
  4376c9:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  4376d0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4376d4:	3c 13                	cmp    $0x13,%al
  4376d6:	75 1a                	jne    4376f2 <luaV_execute+0x2c09>
  4376d8:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  4376df:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4376e3:	f2 0f 11 85 38 ff ff 	movsd  %xmm0,-0xc8(%rbp)
  4376ea:	ff 
  4376eb:	b8 01 00 00 00       	mov    $0x1,%eax
  4376f0:	eb 32                	jmp    437724 <luaV_execute+0x2c3b>
  4376f2:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  4376f9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4376fd:	3c 03                	cmp    $0x3,%al
  4376ff:	75 1e                	jne    43771f <luaV_execute+0x2c36>
  437701:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  437708:	48 8b 00             	mov    (%rax),%rax
  43770b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  437710:	f2 0f 11 85 38 ff ff 	movsd  %xmm0,-0xc8(%rbp)
  437717:	ff 
  437718:	b8 01 00 00 00       	mov    $0x1,%eax
  43771d:	eb 05                	jmp    437724 <luaV_execute+0x2c3b>
  43771f:	b8 00 00 00 00       	mov    $0x0,%eax
  437724:	84 c0                	test   %al,%al
  437726:	74 7d                	je     4377a5 <luaV_execute+0x2cbc>
  437728:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43772d:	48 8b 85 68 fa ff ff 	mov    -0x598(%rbp),%rax
  437734:	48 89 85 50 fa ff ff 	mov    %rax,-0x5b0(%rbp)
  43773b:	f2 0f 10 85 38 ff ff 	movsd  -0xc8(%rbp),%xmm0
  437742:	ff 
  437743:	66 0f 2e 05 85 c1 00 	ucomisd 0xc185(%rip),%xmm0        # 4438d0 <disptab.5580+0x2b0>
  43774a:	00 
  43774b:	7a 29                	jp     437776 <luaV_execute+0x2c8d>
  43774d:	f2 0f 10 85 38 ff ff 	movsd  -0xc8(%rbp),%xmm0
  437754:	ff 
  437755:	66 0f 2e 05 73 c1 00 	ucomisd 0xc173(%rip),%xmm0        # 4438d0 <disptab.5580+0x2b0>
  43775c:	00 
  43775d:	75 17                	jne    437776 <luaV_execute+0x2c8d>
  43775f:	f2 0f 10 85 40 ff ff 	movsd  -0xc0(%rbp),%xmm0
  437766:	ff 
  437767:	f2 0f 59 85 40 ff ff 	mulsd  -0xc0(%rbp),%xmm0
  43776e:	ff 
  43776f:	66 48 0f 7e c0       	movq   %xmm0,%rax
  437774:	eb 1a                	jmp    437790 <luaV_execute+0x2ca7>
  437776:	f2 0f 10 8d 38 ff ff 	movsd  -0xc8(%rbp),%xmm1
  43777d:	ff 
  43777e:	f2 0f 10 85 40 ff ff 	movsd  -0xc0(%rbp),%xmm0
  437785:	ff 
  437786:	e8 15 a1 fc ff       	callq  4018a0 <pow@plt>
  43778b:	66 48 0f 7e c0       	movq   %xmm0,%rax
  437790:	48 8b 95 50 fa ff ff 	mov    -0x5b0(%rbp),%rdx
  437797:	48 89 02             	mov    %rax,(%rdx)
  43779a:	48 8b 85 50 fa ff ff 	mov    -0x5b0(%rbp),%rax
  4377a1:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  4377a5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4377a9:	0f 95 c0             	setne  %al
  4377ac:	0f b6 c0             	movzbl %al,%eax
  4377af:	48 85 c0             	test   %rax,%rax
  4377b2:	74 2b                	je     4377df <luaV_execute+0x2cf6>
  4377b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4377b8:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4377bf:	48 89 d6             	mov    %rdx,%rsi
  4377c2:	48 89 c7             	mov    %rax,%rdi
  4377c5:	e8 17 96 fd ff       	callq  410de1 <luaG_traceexec>
  4377ca:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4377cd:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4377d4:	48 8b 00             	mov    (%rax),%rax
  4377d7:	48 83 c0 10          	add    $0x10,%rax
  4377db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4377df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4377e3:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4377e7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4377eb:	8b 00                	mov    (%rax),%eax
  4377ed:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4377f0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4377f3:	83 e0 7f             	and    $0x7f,%eax
  4377f6:	89 c0                	mov    %eax,%eax
  4377f8:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4377ff:	00 
  437800:	e9 a7 d4 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437805:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437808:	c1 e8 07             	shr    $0x7,%eax
  43780b:	48 98                	cltq   
  43780d:	0f b6 c0             	movzbl %al,%eax
  437810:	48 c1 e0 04          	shl    $0x4,%rax
  437814:	48 89 c2             	mov    %rax,%rdx
  437817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43781b:	48 01 d0             	add    %rdx,%rax
  43781e:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
  437825:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437828:	c1 e8 10             	shr    $0x10,%eax
  43782b:	48 98                	cltq   
  43782d:	0f b6 c0             	movzbl %al,%eax
  437830:	48 c1 e0 04          	shl    $0x4,%rax
  437834:	48 89 c2             	mov    %rax,%rdx
  437837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43783b:	48 01 d0             	add    %rdx,%rax
  43783e:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  437845:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437848:	c1 e8 18             	shr    $0x18,%eax
  43784b:	48 98                	cltq   
  43784d:	48 c1 e0 04          	shl    $0x4,%rax
  437851:	48 89 c2             	mov    %rax,%rdx
  437854:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  43785b:	48 01 d0             	add    %rdx,%rax
  43785e:	48 89 85 38 fa ff ff 	mov    %rax,-0x5c8(%rbp)
  437865:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  43786c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437870:	3c 13                	cmp    $0x13,%al
  437872:	75 1a                	jne    43788e <luaV_execute+0x2da5>
  437874:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  43787b:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43787f:	f2 0f 11 85 30 ff ff 	movsd  %xmm0,-0xd0(%rbp)
  437886:	ff 
  437887:	b8 01 00 00 00       	mov    $0x1,%eax
  43788c:	eb 32                	jmp    4378c0 <luaV_execute+0x2dd7>
  43788e:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  437895:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437899:	3c 03                	cmp    $0x3,%al
  43789b:	75 1e                	jne    4378bb <luaV_execute+0x2dd2>
  43789d:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  4378a4:	48 8b 00             	mov    (%rax),%rax
  4378a7:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4378ac:	f2 0f 11 85 30 ff ff 	movsd  %xmm0,-0xd0(%rbp)
  4378b3:	ff 
  4378b4:	b8 01 00 00 00       	mov    $0x1,%eax
  4378b9:	eb 05                	jmp    4378c0 <luaV_execute+0x2dd7>
  4378bb:	b8 00 00 00 00       	mov    $0x0,%eax
  4378c0:	84 c0                	test   %al,%al
  4378c2:	0f 84 98 00 00 00    	je     437960 <luaV_execute+0x2e77>
  4378c8:	48 8b 85 38 fa ff ff 	mov    -0x5c8(%rbp),%rax
  4378cf:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4378d3:	3c 13                	cmp    $0x13,%al
  4378d5:	75 1a                	jne    4378f1 <luaV_execute+0x2e08>
  4378d7:	48 8b 85 38 fa ff ff 	mov    -0x5c8(%rbp),%rax
  4378de:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4378e2:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
  4378e9:	ff 
  4378ea:	b8 01 00 00 00       	mov    $0x1,%eax
  4378ef:	eb 32                	jmp    437923 <luaV_execute+0x2e3a>
  4378f1:	48 8b 85 38 fa ff ff 	mov    -0x5c8(%rbp),%rax
  4378f8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4378fc:	3c 03                	cmp    $0x3,%al
  4378fe:	75 1e                	jne    43791e <luaV_execute+0x2e35>
  437900:	48 8b 85 38 fa ff ff 	mov    -0x5c8(%rbp),%rax
  437907:	48 8b 00             	mov    (%rax),%rax
  43790a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43790f:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
  437916:	ff 
  437917:	b8 01 00 00 00       	mov    $0x1,%eax
  43791c:	eb 05                	jmp    437923 <luaV_execute+0x2e3a>
  43791e:	b8 00 00 00 00       	mov    $0x0,%eax
  437923:	84 c0                	test   %al,%al
  437925:	74 39                	je     437960 <luaV_execute+0x2e77>
  437927:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43792c:	48 8b 85 48 fa ff ff 	mov    -0x5b8(%rbp),%rax
  437933:	48 89 85 30 fa ff ff 	mov    %rax,-0x5d0(%rbp)
  43793a:	f2 0f 10 85 30 ff ff 	movsd  -0xd0(%rbp),%xmm0
  437941:	ff 
  437942:	f2 0f 5e 85 28 ff ff 	divsd  -0xd8(%rbp),%xmm0
  437949:	ff 
  43794a:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
  437951:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  437955:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
  43795c:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  437960:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  437964:	0f 95 c0             	setne  %al
  437967:	0f b6 c0             	movzbl %al,%eax
  43796a:	48 85 c0             	test   %rax,%rax
  43796d:	74 2b                	je     43799a <luaV_execute+0x2eb1>
  43796f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  437973:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43797a:	48 89 d6             	mov    %rdx,%rsi
  43797d:	48 89 c7             	mov    %rax,%rdi
  437980:	e8 5c 94 fd ff       	callq  410de1 <luaG_traceexec>
  437985:	89 45 ec             	mov    %eax,-0x14(%rbp)
  437988:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43798f:	48 8b 00             	mov    (%rax),%rax
  437992:	48 83 c0 10          	add    $0x10,%rax
  437996:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43799a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43799e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4379a2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4379a6:	8b 00                	mov    (%rax),%eax
  4379a8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4379ab:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4379ae:	83 e0 7f             	and    $0x7f,%eax
  4379b1:	89 c0                	mov    %eax,%eax
  4379b3:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4379ba:	00 
  4379bb:	e9 ec d2 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4379c0:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4379c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4379cb:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4379cf:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4379d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4379da:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4379e1:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4379e5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4379e8:	c1 e8 10             	shr    $0x10,%eax
  4379eb:	48 98                	cltq   
  4379ed:	0f b6 c0             	movzbl %al,%eax
  4379f0:	48 c1 e0 04          	shl    $0x4,%rax
  4379f4:	48 89 c2             	mov    %rax,%rdx
  4379f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4379fb:	48 01 d0             	add    %rdx,%rax
  4379fe:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  437a05:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437a08:	c1 e8 18             	shr    $0x18,%eax
  437a0b:	48 98                	cltq   
  437a0d:	48 c1 e0 04          	shl    $0x4,%rax
  437a11:	48 89 c2             	mov    %rax,%rdx
  437a14:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  437a1b:	48 01 d0             	add    %rdx,%rax
  437a1e:	48 89 85 20 fa ff ff 	mov    %rax,-0x5e0(%rbp)
  437a25:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437a28:	c1 e8 07             	shr    $0x7,%eax
  437a2b:	48 98                	cltq   
  437a2d:	0f b6 c0             	movzbl %al,%eax
  437a30:	48 c1 e0 04          	shl    $0x4,%rax
  437a34:	48 89 c2             	mov    %rax,%rdx
  437a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437a3b:	48 01 d0             	add    %rdx,%rax
  437a3e:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  437a45:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437a4c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437a50:	3c 03                	cmp    $0x3,%al
  437a52:	0f 85 81 00 00 00    	jne    437ad9 <luaV_execute+0x2ff0>
  437a58:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437a5f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437a63:	3c 03                	cmp    $0x3,%al
  437a65:	75 72                	jne    437ad9 <luaV_execute+0x2ff0>
  437a67:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437a6e:	48 8b 00             	mov    (%rax),%rax
  437a71:	48 89 85 10 fa ff ff 	mov    %rax,-0x5f0(%rbp)
  437a78:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437a7f:	48 8b 00             	mov    (%rax),%rax
  437a82:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
  437a89:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  437a8e:	48 8b 85 18 fa ff ff 	mov    -0x5e8(%rbp),%rax
  437a95:	48 89 85 00 fa ff ff 	mov    %rax,-0x600(%rbp)
  437a9c:	48 8b 95 08 fa ff ff 	mov    -0x5f8(%rbp),%rdx
  437aa3:	48 8b 8d 10 fa ff ff 	mov    -0x5f0(%rbp),%rcx
  437aaa:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437ab1:	48 89 ce             	mov    %rcx,%rsi
  437ab4:	48 89 c7             	mov    %rax,%rdi
  437ab7:	e8 08 ca ff ff       	callq  4344c4 <luaV_idiv>
  437abc:	48 89 c2             	mov    %rax,%rdx
  437abf:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
  437ac6:	48 89 10             	mov    %rdx,(%rax)
  437ac9:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
  437ad0:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  437ad4:	e9 04 01 00 00       	jmpq   437bdd <luaV_execute+0x30f4>
  437ad9:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437ae0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437ae4:	3c 13                	cmp    $0x13,%al
  437ae6:	75 1a                	jne    437b02 <luaV_execute+0x3019>
  437ae8:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437aef:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437af3:	f2 0f 11 85 20 ff ff 	movsd  %xmm0,-0xe0(%rbp)
  437afa:	ff 
  437afb:	b8 01 00 00 00       	mov    $0x1,%eax
  437b00:	eb 32                	jmp    437b34 <luaV_execute+0x304b>
  437b02:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437b09:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437b0d:	3c 03                	cmp    $0x3,%al
  437b0f:	75 1e                	jne    437b2f <luaV_execute+0x3046>
  437b11:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  437b18:	48 8b 00             	mov    (%rax),%rax
  437b1b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  437b20:	f2 0f 11 85 20 ff ff 	movsd  %xmm0,-0xe0(%rbp)
  437b27:	ff 
  437b28:	b8 01 00 00 00       	mov    $0x1,%eax
  437b2d:	eb 05                	jmp    437b34 <luaV_execute+0x304b>
  437b2f:	b8 00 00 00 00       	mov    $0x0,%eax
  437b34:	84 c0                	test   %al,%al
  437b36:	0f 84 a1 00 00 00    	je     437bdd <luaV_execute+0x30f4>
  437b3c:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437b43:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437b47:	3c 13                	cmp    $0x13,%al
  437b49:	75 1a                	jne    437b65 <luaV_execute+0x307c>
  437b4b:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437b52:	f2 0f 10 00          	movsd  (%rax),%xmm0
  437b56:	f2 0f 11 85 18 ff ff 	movsd  %xmm0,-0xe8(%rbp)
  437b5d:	ff 
  437b5e:	b8 01 00 00 00       	mov    $0x1,%eax
  437b63:	eb 32                	jmp    437b97 <luaV_execute+0x30ae>
  437b65:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437b6c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437b70:	3c 03                	cmp    $0x3,%al
  437b72:	75 1e                	jne    437b92 <luaV_execute+0x30a9>
  437b74:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437b7b:	48 8b 00             	mov    (%rax),%rax
  437b7e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  437b83:	f2 0f 11 85 18 ff ff 	movsd  %xmm0,-0xe8(%rbp)
  437b8a:	ff 
  437b8b:	b8 01 00 00 00       	mov    $0x1,%eax
  437b90:	eb 05                	jmp    437b97 <luaV_execute+0x30ae>
  437b92:	b8 00 00 00 00       	mov    $0x0,%eax
  437b97:	84 c0                	test   %al,%al
  437b99:	74 42                	je     437bdd <luaV_execute+0x30f4>
  437b9b:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  437ba0:	48 8b 85 18 fa ff ff 	mov    -0x5e8(%rbp),%rax
  437ba7:	48 89 85 f8 f9 ff ff 	mov    %rax,-0x608(%rbp)
  437bae:	f2 0f 10 85 20 ff ff 	movsd  -0xe0(%rbp),%xmm0
  437bb5:	ff 
  437bb6:	f2 0f 5e 85 18 ff ff 	divsd  -0xe8(%rbp),%xmm0
  437bbd:	ff 
  437bbe:	e8 bd 9e fc ff       	callq  401a80 <floor@plt>
  437bc3:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  437bc8:	48 8b 85 f8 f9 ff ff 	mov    -0x608(%rbp),%rax
  437bcf:	48 89 10             	mov    %rdx,(%rax)
  437bd2:	48 8b 85 f8 f9 ff ff 	mov    -0x608(%rbp),%rax
  437bd9:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  437bdd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  437be1:	0f 95 c0             	setne  %al
  437be4:	0f b6 c0             	movzbl %al,%eax
  437be7:	48 85 c0             	test   %rax,%rax
  437bea:	74 2b                	je     437c17 <luaV_execute+0x312e>
  437bec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  437bf0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437bf7:	48 89 d6             	mov    %rdx,%rsi
  437bfa:	48 89 c7             	mov    %rax,%rdi
  437bfd:	e8 df 91 fd ff       	callq  410de1 <luaG_traceexec>
  437c02:	89 45 ec             	mov    %eax,-0x14(%rbp)
  437c05:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437c0c:	48 8b 00             	mov    (%rax),%rax
  437c0f:	48 83 c0 10          	add    $0x10,%rax
  437c13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  437c17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  437c1b:	48 8d 50 04          	lea    0x4(%rax),%rdx
  437c1f:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  437c23:	8b 00                	mov    (%rax),%eax
  437c25:	89 45 e8             	mov    %eax,-0x18(%rbp)
  437c28:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437c2b:	83 e0 7f             	and    $0x7f,%eax
  437c2e:	89 c0                	mov    %eax,%eax
  437c30:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  437c37:	00 
  437c38:	e9 6f d0 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437c3d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437c40:	c1 e8 07             	shr    $0x7,%eax
  437c43:	48 98                	cltq   
  437c45:	0f b6 c0             	movzbl %al,%eax
  437c48:	48 c1 e0 04          	shl    $0x4,%rax
  437c4c:	48 89 c2             	mov    %rax,%rdx
  437c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437c53:	48 01 d0             	add    %rdx,%rax
  437c56:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  437c5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437c60:	c1 e8 10             	shr    $0x10,%eax
  437c63:	48 98                	cltq   
  437c65:	0f b6 c0             	movzbl %al,%eax
  437c68:	48 c1 e0 04          	shl    $0x4,%rax
  437c6c:	48 89 c2             	mov    %rax,%rdx
  437c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437c73:	48 01 d0             	add    %rdx,%rax
  437c76:	48 89 85 e8 f9 ff ff 	mov    %rax,-0x618(%rbp)
  437c7d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437c80:	c1 e8 18             	shr    $0x18,%eax
  437c83:	48 98                	cltq   
  437c85:	48 c1 e0 04          	shl    $0x4,%rax
  437c89:	48 89 c2             	mov    %rax,%rdx
  437c8c:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  437c93:	48 01 d0             	add    %rdx,%rax
  437c96:	48 89 85 e0 f9 ff ff 	mov    %rax,-0x620(%rbp)
  437c9d:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  437ca4:	48 8b 00             	mov    (%rax),%rax
  437ca7:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  437cae:	48 8b 85 e8 f9 ff ff 	mov    -0x618(%rbp),%rax
  437cb5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437cb9:	3c 03                	cmp    $0x3,%al
  437cbb:	0f 94 c0             	sete   %al
  437cbe:	0f b6 c0             	movzbl %al,%eax
  437cc1:	48 85 c0             	test   %rax,%rax
  437cc4:	74 18                	je     437cde <luaV_execute+0x31f5>
  437cc6:	48 8b 85 e8 f9 ff ff 	mov    -0x618(%rbp),%rax
  437ccd:	48 8b 00             	mov    (%rax),%rax
  437cd0:	48 89 85 c8 f3 ff ff 	mov    %rax,-0xc38(%rbp)
  437cd7:	b8 01 00 00 00       	mov    $0x1,%eax
  437cdc:	eb 23                	jmp    437d01 <luaV_execute+0x3218>
  437cde:	48 8d 8d c8 f3 ff ff 	lea    -0xc38(%rbp),%rcx
  437ce5:	48 8b 85 e8 f9 ff ff 	mov    -0x618(%rbp),%rax
  437cec:	ba 00 00 00 00       	mov    $0x0,%edx
  437cf1:	48 89 ce             	mov    %rcx,%rsi
  437cf4:	48 89 c7             	mov    %rax,%rdi
  437cf7:	e8 68 ac ff ff       	callq  432964 <luaV_tointegerns>
  437cfc:	85 c0                	test   %eax,%eax
  437cfe:	0f 95 c0             	setne  %al
  437d01:	84 c0                	test   %al,%al
  437d03:	74 3f                	je     437d44 <luaV_execute+0x325b>
  437d05:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  437d0a:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
  437d11:	48 89 85 d0 f9 ff ff 	mov    %rax,-0x630(%rbp)
  437d18:	48 8b 85 c8 f3 ff ff 	mov    -0xc38(%rbp),%rax
  437d1f:	48 89 c2             	mov    %rax,%rdx
  437d22:	48 8b 85 d8 f9 ff ff 	mov    -0x628(%rbp),%rax
  437d29:	48 21 d0             	and    %rdx,%rax
  437d2c:	48 89 c2             	mov    %rax,%rdx
  437d2f:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  437d36:	48 89 10             	mov    %rdx,(%rax)
  437d39:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  437d40:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  437d44:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  437d48:	0f 95 c0             	setne  %al
  437d4b:	0f b6 c0             	movzbl %al,%eax
  437d4e:	48 85 c0             	test   %rax,%rax
  437d51:	74 2b                	je     437d7e <luaV_execute+0x3295>
  437d53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  437d57:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437d5e:	48 89 d6             	mov    %rdx,%rsi
  437d61:	48 89 c7             	mov    %rax,%rdi
  437d64:	e8 78 90 fd ff       	callq  410de1 <luaG_traceexec>
  437d69:	89 45 ec             	mov    %eax,-0x14(%rbp)
  437d6c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437d73:	48 8b 00             	mov    (%rax),%rax
  437d76:	48 83 c0 10          	add    $0x10,%rax
  437d7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  437d7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  437d82:	48 8d 50 04          	lea    0x4(%rax),%rdx
  437d86:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  437d8a:	8b 00                	mov    (%rax),%eax
  437d8c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  437d8f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437d92:	83 e0 7f             	and    $0x7f,%eax
  437d95:	89 c0                	mov    %eax,%eax
  437d97:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  437d9e:	00 
  437d9f:	e9 08 cf ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437da4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437da7:	c1 e8 07             	shr    $0x7,%eax
  437daa:	48 98                	cltq   
  437dac:	0f b6 c0             	movzbl %al,%eax
  437daf:	48 c1 e0 04          	shl    $0x4,%rax
  437db3:	48 89 c2             	mov    %rax,%rdx
  437db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437dba:	48 01 d0             	add    %rdx,%rax
  437dbd:	48 89 85 c8 f9 ff ff 	mov    %rax,-0x638(%rbp)
  437dc4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437dc7:	c1 e8 10             	shr    $0x10,%eax
  437dca:	48 98                	cltq   
  437dcc:	0f b6 c0             	movzbl %al,%eax
  437dcf:	48 c1 e0 04          	shl    $0x4,%rax
  437dd3:	48 89 c2             	mov    %rax,%rdx
  437dd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437dda:	48 01 d0             	add    %rdx,%rax
  437ddd:	48 89 85 c0 f9 ff ff 	mov    %rax,-0x640(%rbp)
  437de4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437de7:	c1 e8 18             	shr    $0x18,%eax
  437dea:	48 98                	cltq   
  437dec:	48 c1 e0 04          	shl    $0x4,%rax
  437df0:	48 89 c2             	mov    %rax,%rdx
  437df3:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  437dfa:	48 01 d0             	add    %rdx,%rax
  437dfd:	48 89 85 b8 f9 ff ff 	mov    %rax,-0x648(%rbp)
  437e04:	48 8b 85 b8 f9 ff ff 	mov    -0x648(%rbp),%rax
  437e0b:	48 8b 00             	mov    (%rax),%rax
  437e0e:	48 89 85 b0 f9 ff ff 	mov    %rax,-0x650(%rbp)
  437e15:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  437e1c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437e20:	3c 03                	cmp    $0x3,%al
  437e22:	0f 94 c0             	sete   %al
  437e25:	0f b6 c0             	movzbl %al,%eax
  437e28:	48 85 c0             	test   %rax,%rax
  437e2b:	74 18                	je     437e45 <luaV_execute+0x335c>
  437e2d:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  437e34:	48 8b 00             	mov    (%rax),%rax
  437e37:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
  437e3e:	b8 01 00 00 00       	mov    $0x1,%eax
  437e43:	eb 23                	jmp    437e68 <luaV_execute+0x337f>
  437e45:	48 8d 8d c0 f3 ff ff 	lea    -0xc40(%rbp),%rcx
  437e4c:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  437e53:	ba 00 00 00 00       	mov    $0x0,%edx
  437e58:	48 89 ce             	mov    %rcx,%rsi
  437e5b:	48 89 c7             	mov    %rax,%rdi
  437e5e:	e8 01 ab ff ff       	callq  432964 <luaV_tointegerns>
  437e63:	85 c0                	test   %eax,%eax
  437e65:	0f 95 c0             	setne  %al
  437e68:	84 c0                	test   %al,%al
  437e6a:	74 3f                	je     437eab <luaV_execute+0x33c2>
  437e6c:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  437e71:	48 8b 85 c8 f9 ff ff 	mov    -0x638(%rbp),%rax
  437e78:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  437e7f:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  437e86:	48 89 c2             	mov    %rax,%rdx
  437e89:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  437e90:	48 09 d0             	or     %rdx,%rax
  437e93:	48 89 c2             	mov    %rax,%rdx
  437e96:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  437e9d:	48 89 10             	mov    %rdx,(%rax)
  437ea0:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  437ea7:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  437eab:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  437eaf:	0f 95 c0             	setne  %al
  437eb2:	0f b6 c0             	movzbl %al,%eax
  437eb5:	48 85 c0             	test   %rax,%rax
  437eb8:	74 2b                	je     437ee5 <luaV_execute+0x33fc>
  437eba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  437ebe:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  437ec5:	48 89 d6             	mov    %rdx,%rsi
  437ec8:	48 89 c7             	mov    %rax,%rdi
  437ecb:	e8 11 8f fd ff       	callq  410de1 <luaG_traceexec>
  437ed0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  437ed3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  437eda:	48 8b 00             	mov    (%rax),%rax
  437edd:	48 83 c0 10          	add    $0x10,%rax
  437ee1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  437ee5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  437ee9:	48 8d 50 04          	lea    0x4(%rax),%rdx
  437eed:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  437ef1:	8b 00                	mov    (%rax),%eax
  437ef3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  437ef6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437ef9:	83 e0 7f             	and    $0x7f,%eax
  437efc:	89 c0                	mov    %eax,%eax
  437efe:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  437f05:	00 
  437f06:	e9 a1 cd ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  437f0b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437f0e:	c1 e8 07             	shr    $0x7,%eax
  437f11:	48 98                	cltq   
  437f13:	0f b6 c0             	movzbl %al,%eax
  437f16:	48 c1 e0 04          	shl    $0x4,%rax
  437f1a:	48 89 c2             	mov    %rax,%rdx
  437f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437f21:	48 01 d0             	add    %rdx,%rax
  437f24:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  437f2b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437f2e:	c1 e8 10             	shr    $0x10,%eax
  437f31:	48 98                	cltq   
  437f33:	0f b6 c0             	movzbl %al,%eax
  437f36:	48 c1 e0 04          	shl    $0x4,%rax
  437f3a:	48 89 c2             	mov    %rax,%rdx
  437f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  437f41:	48 01 d0             	add    %rdx,%rax
  437f44:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  437f4b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  437f4e:	c1 e8 18             	shr    $0x18,%eax
  437f51:	48 98                	cltq   
  437f53:	48 c1 e0 04          	shl    $0x4,%rax
  437f57:	48 89 c2             	mov    %rax,%rdx
  437f5a:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  437f61:	48 01 d0             	add    %rdx,%rax
  437f64:	48 89 85 90 f9 ff ff 	mov    %rax,-0x670(%rbp)
  437f6b:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  437f72:	48 8b 00             	mov    (%rax),%rax
  437f75:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  437f7c:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  437f83:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  437f87:	3c 03                	cmp    $0x3,%al
  437f89:	0f 94 c0             	sete   %al
  437f8c:	0f b6 c0             	movzbl %al,%eax
  437f8f:	48 85 c0             	test   %rax,%rax
  437f92:	74 18                	je     437fac <luaV_execute+0x34c3>
  437f94:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  437f9b:	48 8b 00             	mov    (%rax),%rax
  437f9e:	48 89 85 b8 f3 ff ff 	mov    %rax,-0xc48(%rbp)
  437fa5:	b8 01 00 00 00       	mov    $0x1,%eax
  437faa:	eb 23                	jmp    437fcf <luaV_execute+0x34e6>
  437fac:	48 8d 8d b8 f3 ff ff 	lea    -0xc48(%rbp),%rcx
  437fb3:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  437fba:	ba 00 00 00 00       	mov    $0x0,%edx
  437fbf:	48 89 ce             	mov    %rcx,%rsi
  437fc2:	48 89 c7             	mov    %rax,%rdi
  437fc5:	e8 9a a9 ff ff       	callq  432964 <luaV_tointegerns>
  437fca:	85 c0                	test   %eax,%eax
  437fcc:	0f 95 c0             	setne  %al
  437fcf:	84 c0                	test   %al,%al
  437fd1:	74 3f                	je     438012 <luaV_execute+0x3529>
  437fd3:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  437fd8:	48 8b 85 a0 f9 ff ff 	mov    -0x660(%rbp),%rax
  437fdf:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  437fe6:	48 8b 85 b8 f3 ff ff 	mov    -0xc48(%rbp),%rax
  437fed:	48 89 c2             	mov    %rax,%rdx
  437ff0:	48 8b 85 88 f9 ff ff 	mov    -0x678(%rbp),%rax
  437ff7:	48 31 d0             	xor    %rdx,%rax
  437ffa:	48 89 c2             	mov    %rax,%rdx
  437ffd:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  438004:	48 89 10             	mov    %rdx,(%rax)
  438007:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43800e:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  438012:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438016:	0f 95 c0             	setne  %al
  438019:	0f b6 c0             	movzbl %al,%eax
  43801c:	48 85 c0             	test   %rax,%rax
  43801f:	74 2b                	je     43804c <luaV_execute+0x3563>
  438021:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438025:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43802c:	48 89 d6             	mov    %rdx,%rsi
  43802f:	48 89 c7             	mov    %rax,%rdi
  438032:	e8 aa 8d fd ff       	callq  410de1 <luaG_traceexec>
  438037:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43803a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438041:	48 8b 00             	mov    (%rax),%rax
  438044:	48 83 c0 10          	add    $0x10,%rax
  438048:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43804c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438050:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438054:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  438058:	8b 00                	mov    (%rax),%eax
  43805a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43805d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438060:	83 e0 7f             	and    $0x7f,%eax
  438063:	89 c0                	mov    %eax,%eax
  438065:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43806c:	00 
  43806d:	e9 3a cc ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438072:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438075:	c1 e8 07             	shr    $0x7,%eax
  438078:	48 98                	cltq   
  43807a:	0f b6 c0             	movzbl %al,%eax
  43807d:	48 c1 e0 04          	shl    $0x4,%rax
  438081:	48 89 c2             	mov    %rax,%rdx
  438084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438088:	48 01 d0             	add    %rdx,%rax
  43808b:	48 89 85 78 f9 ff ff 	mov    %rax,-0x688(%rbp)
  438092:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438095:	c1 e8 10             	shr    $0x10,%eax
  438098:	48 98                	cltq   
  43809a:	0f b6 c0             	movzbl %al,%eax
  43809d:	48 c1 e0 04          	shl    $0x4,%rax
  4380a1:	48 89 c2             	mov    %rax,%rdx
  4380a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4380a8:	48 01 d0             	add    %rdx,%rax
  4380ab:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  4380b2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4380b5:	c1 e8 18             	shr    $0x18,%eax
  4380b8:	83 e8 7f             	sub    $0x7f,%eax
  4380bb:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  4380c1:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4380c8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4380cc:	3c 03                	cmp    $0x3,%al
  4380ce:	0f 94 c0             	sete   %al
  4380d1:	0f b6 c0             	movzbl %al,%eax
  4380d4:	48 85 c0             	test   %rax,%rax
  4380d7:	74 18                	je     4380f1 <luaV_execute+0x3608>
  4380d9:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4380e0:	48 8b 00             	mov    (%rax),%rax
  4380e3:	48 89 85 b0 f3 ff ff 	mov    %rax,-0xc50(%rbp)
  4380ea:	b8 01 00 00 00       	mov    $0x1,%eax
  4380ef:	eb 23                	jmp    438114 <luaV_execute+0x362b>
  4380f1:	48 8d 8d b0 f3 ff ff 	lea    -0xc50(%rbp),%rcx
  4380f8:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4380ff:	ba 00 00 00 00       	mov    $0x0,%edx
  438104:	48 89 ce             	mov    %rcx,%rsi
  438107:	48 89 c7             	mov    %rax,%rdi
  43810a:	e8 55 a8 ff ff       	callq  432964 <luaV_tointegerns>
  43810f:	85 c0                	test   %eax,%eax
  438111:	0f 95 c0             	setne  %al
  438114:	84 c0                	test   %al,%al
  438116:	74 48                	je     438160 <luaV_execute+0x3677>
  438118:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43811d:	48 8b 85 78 f9 ff ff 	mov    -0x688(%rbp),%rax
  438124:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
  43812b:	8b 85 6c f9 ff ff    	mov    -0x694(%rbp),%eax
  438131:	f7 d8                	neg    %eax
  438133:	48 63 d0             	movslq %eax,%rdx
  438136:	48 8b 85 b0 f3 ff ff 	mov    -0xc50(%rbp),%rax
  43813d:	48 89 d6             	mov    %rdx,%rsi
  438140:	48 89 c7             	mov    %rax,%rdi
  438143:	e8 12 c5 ff ff       	callq  43465a <luaV_shiftl>
  438148:	48 89 c2             	mov    %rax,%rdx
  43814b:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  438152:	48 89 10             	mov    %rdx,(%rax)
  438155:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  43815c:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  438160:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438164:	0f 95 c0             	setne  %al
  438167:	0f b6 c0             	movzbl %al,%eax
  43816a:	48 85 c0             	test   %rax,%rax
  43816d:	74 2b                	je     43819a <luaV_execute+0x36b1>
  43816f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438173:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43817a:	48 89 d6             	mov    %rdx,%rsi
  43817d:	48 89 c7             	mov    %rax,%rdi
  438180:	e8 5c 8c fd ff       	callq  410de1 <luaG_traceexec>
  438185:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438188:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43818f:	48 8b 00             	mov    (%rax),%rax
  438192:	48 83 c0 10          	add    $0x10,%rax
  438196:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43819a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43819e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4381a2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4381a6:	8b 00                	mov    (%rax),%eax
  4381a8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4381ab:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4381ae:	83 e0 7f             	and    $0x7f,%eax
  4381b1:	89 c0                	mov    %eax,%eax
  4381b3:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4381ba:	00 
  4381bb:	e9 ec ca ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4381c0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4381c3:	c1 e8 07             	shr    $0x7,%eax
  4381c6:	48 98                	cltq   
  4381c8:	0f b6 c0             	movzbl %al,%eax
  4381cb:	48 c1 e0 04          	shl    $0x4,%rax
  4381cf:	48 89 c2             	mov    %rax,%rdx
  4381d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4381d6:	48 01 d0             	add    %rdx,%rax
  4381d9:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  4381e0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4381e3:	c1 e8 10             	shr    $0x10,%eax
  4381e6:	48 98                	cltq   
  4381e8:	0f b6 c0             	movzbl %al,%eax
  4381eb:	48 c1 e0 04          	shl    $0x4,%rax
  4381ef:	48 89 c2             	mov    %rax,%rdx
  4381f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4381f6:	48 01 d0             	add    %rdx,%rax
  4381f9:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  438200:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438203:	c1 e8 18             	shr    $0x18,%eax
  438206:	83 e8 7f             	sub    $0x7f,%eax
  438209:	89 85 4c f9 ff ff    	mov    %eax,-0x6b4(%rbp)
  43820f:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  438216:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43821a:	3c 03                	cmp    $0x3,%al
  43821c:	0f 94 c0             	sete   %al
  43821f:	0f b6 c0             	movzbl %al,%eax
  438222:	48 85 c0             	test   %rax,%rax
  438225:	74 18                	je     43823f <luaV_execute+0x3756>
  438227:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  43822e:	48 8b 00             	mov    (%rax),%rax
  438231:	48 89 85 a8 f3 ff ff 	mov    %rax,-0xc58(%rbp)
  438238:	b8 01 00 00 00       	mov    $0x1,%eax
  43823d:	eb 23                	jmp    438262 <luaV_execute+0x3779>
  43823f:	48 8d 8d a8 f3 ff ff 	lea    -0xc58(%rbp),%rcx
  438246:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  43824d:	ba 00 00 00 00       	mov    $0x0,%edx
  438252:	48 89 ce             	mov    %rcx,%rsi
  438255:	48 89 c7             	mov    %rax,%rdi
  438258:	e8 07 a7 ff ff       	callq  432964 <luaV_tointegerns>
  43825d:	85 c0                	test   %eax,%eax
  43825f:	0f 95 c0             	setne  %al
  438262:	84 c0                	test   %al,%al
  438264:	74 45                	je     4382ab <luaV_execute+0x37c2>
  438266:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43826b:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  438272:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  438279:	48 8b 95 a8 f3 ff ff 	mov    -0xc58(%rbp),%rdx
  438280:	8b 85 4c f9 ff ff    	mov    -0x6b4(%rbp),%eax
  438286:	48 98                	cltq   
  438288:	48 89 d6             	mov    %rdx,%rsi
  43828b:	48 89 c7             	mov    %rax,%rdi
  43828e:	e8 c7 c3 ff ff       	callq  43465a <luaV_shiftl>
  438293:	48 89 c2             	mov    %rax,%rdx
  438296:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  43829d:	48 89 10             	mov    %rdx,(%rax)
  4382a0:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4382a7:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4382ab:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4382af:	0f 95 c0             	setne  %al
  4382b2:	0f b6 c0             	movzbl %al,%eax
  4382b5:	48 85 c0             	test   %rax,%rax
  4382b8:	74 2b                	je     4382e5 <luaV_execute+0x37fc>
  4382ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4382be:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4382c5:	48 89 d6             	mov    %rdx,%rsi
  4382c8:	48 89 c7             	mov    %rax,%rdi
  4382cb:	e8 11 8b fd ff       	callq  410de1 <luaG_traceexec>
  4382d0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4382d3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4382da:	48 8b 00             	mov    (%rax),%rax
  4382dd:	48 83 c0 10          	add    $0x10,%rax
  4382e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4382e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4382e9:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4382ed:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4382f1:	8b 00                	mov    (%rax),%eax
  4382f3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4382f6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4382f9:	83 e0 7f             	and    $0x7f,%eax
  4382fc:	89 c0                	mov    %eax,%eax
  4382fe:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  438305:	00 
  438306:	e9 a1 c9 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43830b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43830e:	c1 e8 10             	shr    $0x10,%eax
  438311:	48 98                	cltq   
  438313:	0f b6 c0             	movzbl %al,%eax
  438316:	48 c1 e0 04          	shl    $0x4,%rax
  43831a:	48 89 c2             	mov    %rax,%rdx
  43831d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438321:	48 01 d0             	add    %rdx,%rax
  438324:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  43832b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43832e:	c1 e8 18             	shr    $0x18,%eax
  438331:	48 98                	cltq   
  438333:	48 c1 e0 04          	shl    $0x4,%rax
  438337:	48 89 c2             	mov    %rax,%rdx
  43833a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43833e:	48 01 d0             	add    %rdx,%rax
  438341:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
  438348:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43834b:	c1 e8 07             	shr    $0x7,%eax
  43834e:	48 98                	cltq   
  438350:	0f b6 c0             	movzbl %al,%eax
  438353:	48 c1 e0 04          	shl    $0x4,%rax
  438357:	48 89 c2             	mov    %rax,%rdx
  43835a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43835e:	48 01 d0             	add    %rdx,%rax
  438361:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  438368:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43836f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438373:	3c 03                	cmp    $0x3,%al
  438375:	75 72                	jne    4383e9 <luaV_execute+0x3900>
  438377:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  43837e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438382:	3c 03                	cmp    $0x3,%al
  438384:	75 63                	jne    4383e9 <luaV_execute+0x3900>
  438386:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43838d:	48 8b 00             	mov    (%rax),%rax
  438390:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
  438397:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  43839e:	48 8b 00             	mov    (%rax),%rax
  4383a1:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  4383a8:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4383ad:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4383b4:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)
  4383bb:	48 8b 95 20 f9 ff ff 	mov    -0x6e0(%rbp),%rdx
  4383c2:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  4383c9:	48 01 d0             	add    %rdx,%rax
  4383cc:	48 89 c2             	mov    %rax,%rdx
  4383cf:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
  4383d6:	48 89 10             	mov    %rdx,(%rax)
  4383d9:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
  4383e0:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4383e4:	e9 fb 00 00 00       	jmpq   4384e4 <luaV_execute+0x39fb>
  4383e9:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  4383f0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4383f4:	3c 13                	cmp    $0x13,%al
  4383f6:	75 1a                	jne    438412 <luaV_execute+0x3929>
  4383f8:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  4383ff:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438403:	f2 0f 11 85 10 ff ff 	movsd  %xmm0,-0xf0(%rbp)
  43840a:	ff 
  43840b:	b8 01 00 00 00       	mov    $0x1,%eax
  438410:	eb 32                	jmp    438444 <luaV_execute+0x395b>
  438412:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  438419:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43841d:	3c 03                	cmp    $0x3,%al
  43841f:	75 1e                	jne    43843f <luaV_execute+0x3956>
  438421:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  438428:	48 8b 00             	mov    (%rax),%rax
  43842b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438430:	f2 0f 11 85 10 ff ff 	movsd  %xmm0,-0xf0(%rbp)
  438437:	ff 
  438438:	b8 01 00 00 00       	mov    $0x1,%eax
  43843d:	eb 05                	jmp    438444 <luaV_execute+0x395b>
  43843f:	b8 00 00 00 00       	mov    $0x0,%eax
  438444:	84 c0                	test   %al,%al
  438446:	0f 84 98 00 00 00    	je     4384e4 <luaV_execute+0x39fb>
  43844c:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  438453:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438457:	3c 13                	cmp    $0x13,%al
  438459:	75 1a                	jne    438475 <luaV_execute+0x398c>
  43845b:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  438462:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438466:	f2 0f 11 85 08 ff ff 	movsd  %xmm0,-0xf8(%rbp)
  43846d:	ff 
  43846e:	b8 01 00 00 00       	mov    $0x1,%eax
  438473:	eb 32                	jmp    4384a7 <luaV_execute+0x39be>
  438475:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  43847c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438480:	3c 03                	cmp    $0x3,%al
  438482:	75 1e                	jne    4384a2 <luaV_execute+0x39b9>
  438484:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  43848b:	48 8b 00             	mov    (%rax),%rax
  43848e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438493:	f2 0f 11 85 08 ff ff 	movsd  %xmm0,-0xf8(%rbp)
  43849a:	ff 
  43849b:	b8 01 00 00 00       	mov    $0x1,%eax
  4384a0:	eb 05                	jmp    4384a7 <luaV_execute+0x39be>
  4384a2:	b8 00 00 00 00       	mov    $0x0,%eax
  4384a7:	84 c0                	test   %al,%al
  4384a9:	74 39                	je     4384e4 <luaV_execute+0x39fb>
  4384ab:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4384b0:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4384b7:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  4384be:	f2 0f 10 85 10 ff ff 	movsd  -0xf0(%rbp),%xmm0
  4384c5:	ff 
  4384c6:	f2 0f 58 85 08 ff ff 	addsd  -0xf8(%rbp),%xmm0
  4384cd:	ff 
  4384ce:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  4384d5:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  4384d9:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  4384e0:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  4384e4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4384e8:	0f 95 c0             	setne  %al
  4384eb:	0f b6 c0             	movzbl %al,%eax
  4384ee:	48 85 c0             	test   %rax,%rax
  4384f1:	74 2b                	je     43851e <luaV_execute+0x3a35>
  4384f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4384f7:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4384fe:	48 89 d6             	mov    %rdx,%rsi
  438501:	48 89 c7             	mov    %rax,%rdi
  438504:	e8 d8 88 fd ff       	callq  410de1 <luaG_traceexec>
  438509:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43850c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438513:	48 8b 00             	mov    (%rax),%rax
  438516:	48 83 c0 10          	add    $0x10,%rax
  43851a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43851e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438522:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438526:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43852a:	8b 00                	mov    (%rax),%eax
  43852c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43852f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438532:	83 e0 7f             	and    $0x7f,%eax
  438535:	89 c0                	mov    %eax,%eax
  438537:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43853e:	00 
  43853f:	e9 68 c7 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438544:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438547:	c1 e8 10             	shr    $0x10,%eax
  43854a:	48 98                	cltq   
  43854c:	0f b6 c0             	movzbl %al,%eax
  43854f:	48 c1 e0 04          	shl    $0x4,%rax
  438553:	48 89 c2             	mov    %rax,%rdx
  438556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43855a:	48 01 d0             	add    %rdx,%rax
  43855d:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  438564:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438567:	c1 e8 18             	shr    $0x18,%eax
  43856a:	48 98                	cltq   
  43856c:	48 c1 e0 04          	shl    $0x4,%rax
  438570:	48 89 c2             	mov    %rax,%rdx
  438573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438577:	48 01 d0             	add    %rdx,%rax
  43857a:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
  438581:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438584:	c1 e8 07             	shr    $0x7,%eax
  438587:	48 98                	cltq   
  438589:	0f b6 c0             	movzbl %al,%eax
  43858c:	48 c1 e0 04          	shl    $0x4,%rax
  438590:	48 89 c2             	mov    %rax,%rdx
  438593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438597:	48 01 d0             	add    %rdx,%rax
  43859a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  4385a1:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  4385a8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4385ac:	3c 03                	cmp    $0x3,%al
  4385ae:	75 75                	jne    438625 <luaV_execute+0x3b3c>
  4385b0:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  4385b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4385bb:	3c 03                	cmp    $0x3,%al
  4385bd:	75 66                	jne    438625 <luaV_execute+0x3b3c>
  4385bf:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  4385c6:	48 8b 00             	mov    (%rax),%rax
  4385c9:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  4385d0:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  4385d7:	48 8b 00             	mov    (%rax),%rax
  4385da:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  4385e1:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4385e6:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  4385ed:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
  4385f4:	48 8b 95 e8 f8 ff ff 	mov    -0x718(%rbp),%rdx
  4385fb:	48 8b 85 e0 f8 ff ff 	mov    -0x720(%rbp),%rax
  438602:	48 29 c2             	sub    %rax,%rdx
  438605:	48 89 d0             	mov    %rdx,%rax
  438608:	48 89 c2             	mov    %rax,%rdx
  43860b:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  438612:	48 89 10             	mov    %rdx,(%rax)
  438615:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  43861c:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  438620:	e9 fb 00 00 00       	jmpq   438720 <luaV_execute+0x3c37>
  438625:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43862c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438630:	3c 13                	cmp    $0x13,%al
  438632:	75 1a                	jne    43864e <luaV_execute+0x3b65>
  438634:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43863b:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43863f:	f2 0f 11 85 00 ff ff 	movsd  %xmm0,-0x100(%rbp)
  438646:	ff 
  438647:	b8 01 00 00 00       	mov    $0x1,%eax
  43864c:	eb 32                	jmp    438680 <luaV_execute+0x3b97>
  43864e:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  438655:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438659:	3c 03                	cmp    $0x3,%al
  43865b:	75 1e                	jne    43867b <luaV_execute+0x3b92>
  43865d:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  438664:	48 8b 00             	mov    (%rax),%rax
  438667:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43866c:	f2 0f 11 85 00 ff ff 	movsd  %xmm0,-0x100(%rbp)
  438673:	ff 
  438674:	b8 01 00 00 00       	mov    $0x1,%eax
  438679:	eb 05                	jmp    438680 <luaV_execute+0x3b97>
  43867b:	b8 00 00 00 00       	mov    $0x0,%eax
  438680:	84 c0                	test   %al,%al
  438682:	0f 84 98 00 00 00    	je     438720 <luaV_execute+0x3c37>
  438688:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  43868f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438693:	3c 13                	cmp    $0x13,%al
  438695:	75 1a                	jne    4386b1 <luaV_execute+0x3bc8>
  438697:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  43869e:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4386a2:	f2 0f 11 85 f8 fe ff 	movsd  %xmm0,-0x108(%rbp)
  4386a9:	ff 
  4386aa:	b8 01 00 00 00       	mov    $0x1,%eax
  4386af:	eb 32                	jmp    4386e3 <luaV_execute+0x3bfa>
  4386b1:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  4386b8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4386bc:	3c 03                	cmp    $0x3,%al
  4386be:	75 1e                	jne    4386de <luaV_execute+0x3bf5>
  4386c0:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  4386c7:	48 8b 00             	mov    (%rax),%rax
  4386ca:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4386cf:	f2 0f 11 85 f8 fe ff 	movsd  %xmm0,-0x108(%rbp)
  4386d6:	ff 
  4386d7:	b8 01 00 00 00       	mov    $0x1,%eax
  4386dc:	eb 05                	jmp    4386e3 <luaV_execute+0x3bfa>
  4386de:	b8 00 00 00 00       	mov    $0x0,%eax
  4386e3:	84 c0                	test   %al,%al
  4386e5:	74 39                	je     438720 <luaV_execute+0x3c37>
  4386e7:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4386ec:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  4386f3:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  4386fa:	f2 0f 10 85 00 ff ff 	movsd  -0x100(%rbp),%xmm0
  438701:	ff 
  438702:	f2 0f 5c 85 f8 fe ff 	subsd  -0x108(%rbp),%xmm0
  438709:	ff 
  43870a:	48 8b 85 d0 f8 ff ff 	mov    -0x730(%rbp),%rax
  438711:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  438715:	48 8b 85 d0 f8 ff ff 	mov    -0x730(%rbp),%rax
  43871c:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  438720:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438724:	0f 95 c0             	setne  %al
  438727:	0f b6 c0             	movzbl %al,%eax
  43872a:	48 85 c0             	test   %rax,%rax
  43872d:	74 2b                	je     43875a <luaV_execute+0x3c71>
  43872f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438733:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43873a:	48 89 d6             	mov    %rdx,%rsi
  43873d:	48 89 c7             	mov    %rax,%rdi
  438740:	e8 9c 86 fd ff       	callq  410de1 <luaG_traceexec>
  438745:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438748:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43874f:	48 8b 00             	mov    (%rax),%rax
  438752:	48 83 c0 10          	add    $0x10,%rax
  438756:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43875a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43875e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438762:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  438766:	8b 00                	mov    (%rax),%eax
  438768:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43876b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43876e:	83 e0 7f             	and    $0x7f,%eax
  438771:	89 c0                	mov    %eax,%eax
  438773:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43877a:	00 
  43877b:	e9 2c c5 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438780:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438783:	c1 e8 10             	shr    $0x10,%eax
  438786:	48 98                	cltq   
  438788:	0f b6 c0             	movzbl %al,%eax
  43878b:	48 c1 e0 04          	shl    $0x4,%rax
  43878f:	48 89 c2             	mov    %rax,%rdx
  438792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438796:	48 01 d0             	add    %rdx,%rax
  438799:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  4387a0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4387a3:	c1 e8 18             	shr    $0x18,%eax
  4387a6:	48 98                	cltq   
  4387a8:	48 c1 e0 04          	shl    $0x4,%rax
  4387ac:	48 89 c2             	mov    %rax,%rdx
  4387af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4387b3:	48 01 d0             	add    %rdx,%rax
  4387b6:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  4387bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4387c0:	c1 e8 07             	shr    $0x7,%eax
  4387c3:	48 98                	cltq   
  4387c5:	0f b6 c0             	movzbl %al,%eax
  4387c8:	48 c1 e0 04          	shl    $0x4,%rax
  4387cc:	48 89 c2             	mov    %rax,%rdx
  4387cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4387d3:	48 01 d0             	add    %rdx,%rax
  4387d6:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  4387dd:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4387e4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4387e8:	3c 03                	cmp    $0x3,%al
  4387ea:	75 73                	jne    43885f <luaV_execute+0x3d76>
  4387ec:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  4387f3:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4387f7:	3c 03                	cmp    $0x3,%al
  4387f9:	75 64                	jne    43885f <luaV_execute+0x3d76>
  4387fb:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  438802:	48 8b 00             	mov    (%rax),%rax
  438805:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  43880c:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  438813:	48 8b 00             	mov    (%rax),%rax
  438816:	48 89 85 a8 f8 ff ff 	mov    %rax,-0x758(%rbp)
  43881d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438822:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  438829:	48 89 85 a0 f8 ff ff 	mov    %rax,-0x760(%rbp)
  438830:	48 8b 95 b0 f8 ff ff 	mov    -0x750(%rbp),%rdx
  438837:	48 8b 85 a8 f8 ff ff 	mov    -0x758(%rbp),%rax
  43883e:	48 0f af c2          	imul   %rdx,%rax
  438842:	48 89 c2             	mov    %rax,%rdx
  438845:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  43884c:	48 89 10             	mov    %rdx,(%rax)
  43884f:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  438856:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  43885a:	e9 fb 00 00 00       	jmpq   43895a <luaV_execute+0x3e71>
  43885f:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  438866:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43886a:	3c 13                	cmp    $0x13,%al
  43886c:	75 1a                	jne    438888 <luaV_execute+0x3d9f>
  43886e:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  438875:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438879:	f2 0f 11 85 f0 fe ff 	movsd  %xmm0,-0x110(%rbp)
  438880:	ff 
  438881:	b8 01 00 00 00       	mov    $0x1,%eax
  438886:	eb 32                	jmp    4388ba <luaV_execute+0x3dd1>
  438888:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43888f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438893:	3c 03                	cmp    $0x3,%al
  438895:	75 1e                	jne    4388b5 <luaV_execute+0x3dcc>
  438897:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43889e:	48 8b 00             	mov    (%rax),%rax
  4388a1:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4388a6:	f2 0f 11 85 f0 fe ff 	movsd  %xmm0,-0x110(%rbp)
  4388ad:	ff 
  4388ae:	b8 01 00 00 00       	mov    $0x1,%eax
  4388b3:	eb 05                	jmp    4388ba <luaV_execute+0x3dd1>
  4388b5:	b8 00 00 00 00       	mov    $0x0,%eax
  4388ba:	84 c0                	test   %al,%al
  4388bc:	0f 84 98 00 00 00    	je     43895a <luaV_execute+0x3e71>
  4388c2:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  4388c9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4388cd:	3c 13                	cmp    $0x13,%al
  4388cf:	75 1a                	jne    4388eb <luaV_execute+0x3e02>
  4388d1:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  4388d8:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4388dc:	f2 0f 11 85 e8 fe ff 	movsd  %xmm0,-0x118(%rbp)
  4388e3:	ff 
  4388e4:	b8 01 00 00 00       	mov    $0x1,%eax
  4388e9:	eb 32                	jmp    43891d <luaV_execute+0x3e34>
  4388eb:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  4388f2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4388f6:	3c 03                	cmp    $0x3,%al
  4388f8:	75 1e                	jne    438918 <luaV_execute+0x3e2f>
  4388fa:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  438901:	48 8b 00             	mov    (%rax),%rax
  438904:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438909:	f2 0f 11 85 e8 fe ff 	movsd  %xmm0,-0x118(%rbp)
  438910:	ff 
  438911:	b8 01 00 00 00       	mov    $0x1,%eax
  438916:	eb 05                	jmp    43891d <luaV_execute+0x3e34>
  438918:	b8 00 00 00 00       	mov    $0x0,%eax
  43891d:	84 c0                	test   %al,%al
  43891f:	74 39                	je     43895a <luaV_execute+0x3e71>
  438921:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438926:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  43892d:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
  438934:	f2 0f 10 85 f0 fe ff 	movsd  -0x110(%rbp),%xmm0
  43893b:	ff 
  43893c:	f2 0f 59 85 e8 fe ff 	mulsd  -0x118(%rbp),%xmm0
  438943:	ff 
  438944:	48 8b 85 98 f8 ff ff 	mov    -0x768(%rbp),%rax
  43894b:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  43894f:	48 8b 85 98 f8 ff ff 	mov    -0x768(%rbp),%rax
  438956:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  43895a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43895e:	0f 95 c0             	setne  %al
  438961:	0f b6 c0             	movzbl %al,%eax
  438964:	48 85 c0             	test   %rax,%rax
  438967:	74 2b                	je     438994 <luaV_execute+0x3eab>
  438969:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43896d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438974:	48 89 d6             	mov    %rdx,%rsi
  438977:	48 89 c7             	mov    %rax,%rdi
  43897a:	e8 62 84 fd ff       	callq  410de1 <luaG_traceexec>
  43897f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438982:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438989:	48 8b 00             	mov    (%rax),%rax
  43898c:	48 83 c0 10          	add    $0x10,%rax
  438990:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  438994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438998:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43899c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4389a0:	8b 00                	mov    (%rax),%eax
  4389a2:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4389a5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4389a8:	83 e0 7f             	and    $0x7f,%eax
  4389ab:	89 c0                	mov    %eax,%eax
  4389ad:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4389b4:	00 
  4389b5:	e9 f2 c2 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4389ba:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4389c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4389c5:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4389c9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4389d0:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4389d4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4389db:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4389df:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4389e2:	c1 e8 10             	shr    $0x10,%eax
  4389e5:	48 98                	cltq   
  4389e7:	0f b6 c0             	movzbl %al,%eax
  4389ea:	48 c1 e0 04          	shl    $0x4,%rax
  4389ee:	48 89 c2             	mov    %rax,%rdx
  4389f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4389f5:	48 01 d0             	add    %rdx,%rax
  4389f8:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  4389ff:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438a02:	c1 e8 18             	shr    $0x18,%eax
  438a05:	48 98                	cltq   
  438a07:	48 c1 e0 04          	shl    $0x4,%rax
  438a0b:	48 89 c2             	mov    %rax,%rdx
  438a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438a12:	48 01 d0             	add    %rdx,%rax
  438a15:	48 89 85 88 f8 ff ff 	mov    %rax,-0x778(%rbp)
  438a1c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438a1f:	c1 e8 07             	shr    $0x7,%eax
  438a22:	48 98                	cltq   
  438a24:	0f b6 c0             	movzbl %al,%eax
  438a27:	48 c1 e0 04          	shl    $0x4,%rax
  438a2b:	48 89 c2             	mov    %rax,%rdx
  438a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438a32:	48 01 d0             	add    %rdx,%rax
  438a35:	48 89 85 80 f8 ff ff 	mov    %rax,-0x780(%rbp)
  438a3c:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438a43:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438a47:	3c 03                	cmp    $0x3,%al
  438a49:	0f 85 81 00 00 00    	jne    438ad0 <luaV_execute+0x3fe7>
  438a4f:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438a56:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438a5a:	3c 03                	cmp    $0x3,%al
  438a5c:	75 72                	jne    438ad0 <luaV_execute+0x3fe7>
  438a5e:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438a65:	48 8b 00             	mov    (%rax),%rax
  438a68:	48 89 85 78 f8 ff ff 	mov    %rax,-0x788(%rbp)
  438a6f:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438a76:	48 8b 00             	mov    (%rax),%rax
  438a79:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
  438a80:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438a85:	48 8b 85 80 f8 ff ff 	mov    -0x780(%rbp),%rax
  438a8c:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
  438a93:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
  438a9a:	48 8b 8d 78 f8 ff ff 	mov    -0x788(%rbp),%rcx
  438aa1:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438aa8:	48 89 ce             	mov    %rcx,%rsi
  438aab:	48 89 c7             	mov    %rax,%rdi
  438aae:	e8 9a ba ff ff       	callq  43454d <luaV_mod>
  438ab3:	48 89 c2             	mov    %rax,%rdx
  438ab6:	48 8b 85 68 f8 ff ff 	mov    -0x798(%rbp),%rax
  438abd:	48 89 10             	mov    %rdx,(%rax)
  438ac0:	48 8b 85 68 f8 ff ff 	mov    -0x798(%rbp),%rax
  438ac7:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  438acb:	e9 0e 01 00 00       	jmpq   438bde <luaV_execute+0x40f5>
  438ad0:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438ad7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438adb:	3c 13                	cmp    $0x13,%al
  438add:	75 1a                	jne    438af9 <luaV_execute+0x4010>
  438adf:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438ae6:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438aea:	f2 0f 11 85 e0 fe ff 	movsd  %xmm0,-0x120(%rbp)
  438af1:	ff 
  438af2:	b8 01 00 00 00       	mov    $0x1,%eax
  438af7:	eb 32                	jmp    438b2b <luaV_execute+0x4042>
  438af9:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438b00:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438b04:	3c 03                	cmp    $0x3,%al
  438b06:	75 1e                	jne    438b26 <luaV_execute+0x403d>
  438b08:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  438b0f:	48 8b 00             	mov    (%rax),%rax
  438b12:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438b17:	f2 0f 11 85 e0 fe ff 	movsd  %xmm0,-0x120(%rbp)
  438b1e:	ff 
  438b1f:	b8 01 00 00 00       	mov    $0x1,%eax
  438b24:	eb 05                	jmp    438b2b <luaV_execute+0x4042>
  438b26:	b8 00 00 00 00       	mov    $0x0,%eax
  438b2b:	84 c0                	test   %al,%al
  438b2d:	0f 84 ab 00 00 00    	je     438bde <luaV_execute+0x40f5>
  438b33:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438b3a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438b3e:	3c 13                	cmp    $0x13,%al
  438b40:	75 1a                	jne    438b5c <luaV_execute+0x4073>
  438b42:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438b49:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438b4d:	f2 0f 11 85 d8 fe ff 	movsd  %xmm0,-0x128(%rbp)
  438b54:	ff 
  438b55:	b8 01 00 00 00       	mov    $0x1,%eax
  438b5a:	eb 32                	jmp    438b8e <luaV_execute+0x40a5>
  438b5c:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438b63:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438b67:	3c 03                	cmp    $0x3,%al
  438b69:	75 1e                	jne    438b89 <luaV_execute+0x40a0>
  438b6b:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  438b72:	48 8b 00             	mov    (%rax),%rax
  438b75:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438b7a:	f2 0f 11 85 d8 fe ff 	movsd  %xmm0,-0x128(%rbp)
  438b81:	ff 
  438b82:	b8 01 00 00 00       	mov    $0x1,%eax
  438b87:	eb 05                	jmp    438b8e <luaV_execute+0x40a5>
  438b89:	b8 00 00 00 00       	mov    $0x0,%eax
  438b8e:	84 c0                	test   %al,%al
  438b90:	74 4c                	je     438bde <luaV_execute+0x40f5>
  438b92:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438b97:	48 8b 85 80 f8 ff ff 	mov    -0x780(%rbp),%rax
  438b9e:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  438ba5:	f2 0f 10 8d d8 fe ff 	movsd  -0x128(%rbp),%xmm1
  438bac:	ff 
  438bad:	f2 0f 10 85 e0 fe ff 	movsd  -0x120(%rbp),%xmm0
  438bb4:	ff 
  438bb5:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438bbc:	48 89 c7             	mov    %rax,%rdi
  438bbf:	e8 08 ba ff ff       	callq  4345cc <luaV_modf>
  438bc4:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  438bc9:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  438bd0:	48 89 10             	mov    %rdx,(%rax)
  438bd3:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  438bda:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  438bde:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438be2:	0f 95 c0             	setne  %al
  438be5:	0f b6 c0             	movzbl %al,%eax
  438be8:	48 85 c0             	test   %rax,%rax
  438beb:	74 2b                	je     438c18 <luaV_execute+0x412f>
  438bed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438bf1:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438bf8:	48 89 d6             	mov    %rdx,%rsi
  438bfb:	48 89 c7             	mov    %rax,%rdi
  438bfe:	e8 de 81 fd ff       	callq  410de1 <luaG_traceexec>
  438c03:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438c06:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438c0d:	48 8b 00             	mov    (%rax),%rax
  438c10:	48 83 c0 10          	add    $0x10,%rax
  438c14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  438c18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438c1c:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438c20:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  438c24:	8b 00                	mov    (%rax),%eax
  438c26:	89 45 e8             	mov    %eax,-0x18(%rbp)
  438c29:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438c2c:	83 e0 7f             	and    $0x7f,%eax
  438c2f:	89 c0                	mov    %eax,%eax
  438c31:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  438c38:	00 
  438c39:	e9 6e c0 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438c3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438c41:	c1 e8 07             	shr    $0x7,%eax
  438c44:	48 98                	cltq   
  438c46:	0f b6 c0             	movzbl %al,%eax
  438c49:	48 c1 e0 04          	shl    $0x4,%rax
  438c4d:	48 89 c2             	mov    %rax,%rdx
  438c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438c54:	48 01 d0             	add    %rdx,%rax
  438c57:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  438c5e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438c61:	c1 e8 10             	shr    $0x10,%eax
  438c64:	48 98                	cltq   
  438c66:	0f b6 c0             	movzbl %al,%eax
  438c69:	48 c1 e0 04          	shl    $0x4,%rax
  438c6d:	48 89 c2             	mov    %rax,%rdx
  438c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438c74:	48 01 d0             	add    %rdx,%rax
  438c77:	48 89 85 50 f8 ff ff 	mov    %rax,-0x7b0(%rbp)
  438c7e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438c81:	c1 e8 18             	shr    $0x18,%eax
  438c84:	48 98                	cltq   
  438c86:	48 c1 e0 04          	shl    $0x4,%rax
  438c8a:	48 89 c2             	mov    %rax,%rdx
  438c8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438c91:	48 01 d0             	add    %rdx,%rax
  438c94:	48 89 85 48 f8 ff ff 	mov    %rax,-0x7b8(%rbp)
  438c9b:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  438ca2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438ca6:	3c 13                	cmp    $0x13,%al
  438ca8:	75 1a                	jne    438cc4 <luaV_execute+0x41db>
  438caa:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  438cb1:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438cb5:	f2 0f 11 85 d0 fe ff 	movsd  %xmm0,-0x130(%rbp)
  438cbc:	ff 
  438cbd:	b8 01 00 00 00       	mov    $0x1,%eax
  438cc2:	eb 32                	jmp    438cf6 <luaV_execute+0x420d>
  438cc4:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  438ccb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438ccf:	3c 03                	cmp    $0x3,%al
  438cd1:	75 1e                	jne    438cf1 <luaV_execute+0x4208>
  438cd3:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  438cda:	48 8b 00             	mov    (%rax),%rax
  438cdd:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438ce2:	f2 0f 11 85 d0 fe ff 	movsd  %xmm0,-0x130(%rbp)
  438ce9:	ff 
  438cea:	b8 01 00 00 00       	mov    $0x1,%eax
  438cef:	eb 05                	jmp    438cf6 <luaV_execute+0x420d>
  438cf1:	b8 00 00 00 00       	mov    $0x0,%eax
  438cf6:	84 c0                	test   %al,%al
  438cf8:	0f 84 dc 00 00 00    	je     438dda <luaV_execute+0x42f1>
  438cfe:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  438d05:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438d09:	3c 13                	cmp    $0x13,%al
  438d0b:	75 1a                	jne    438d27 <luaV_execute+0x423e>
  438d0d:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  438d14:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438d18:	f2 0f 11 85 c8 fe ff 	movsd  %xmm0,-0x138(%rbp)
  438d1f:	ff 
  438d20:	b8 01 00 00 00       	mov    $0x1,%eax
  438d25:	eb 32                	jmp    438d59 <luaV_execute+0x4270>
  438d27:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  438d2e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438d32:	3c 03                	cmp    $0x3,%al
  438d34:	75 1e                	jne    438d54 <luaV_execute+0x426b>
  438d36:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  438d3d:	48 8b 00             	mov    (%rax),%rax
  438d40:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438d45:	f2 0f 11 85 c8 fe ff 	movsd  %xmm0,-0x138(%rbp)
  438d4c:	ff 
  438d4d:	b8 01 00 00 00       	mov    $0x1,%eax
  438d52:	eb 05                	jmp    438d59 <luaV_execute+0x4270>
  438d54:	b8 00 00 00 00       	mov    $0x0,%eax
  438d59:	84 c0                	test   %al,%al
  438d5b:	74 7d                	je     438dda <luaV_execute+0x42f1>
  438d5d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438d62:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  438d69:	48 89 85 40 f8 ff ff 	mov    %rax,-0x7c0(%rbp)
  438d70:	f2 0f 10 85 c8 fe ff 	movsd  -0x138(%rbp),%xmm0
  438d77:	ff 
  438d78:	66 0f 2e 05 50 ab 00 	ucomisd 0xab50(%rip),%xmm0        # 4438d0 <disptab.5580+0x2b0>
  438d7f:	00 
  438d80:	7a 29                	jp     438dab <luaV_execute+0x42c2>
  438d82:	f2 0f 10 85 c8 fe ff 	movsd  -0x138(%rbp),%xmm0
  438d89:	ff 
  438d8a:	66 0f 2e 05 3e ab 00 	ucomisd 0xab3e(%rip),%xmm0        # 4438d0 <disptab.5580+0x2b0>
  438d91:	00 
  438d92:	75 17                	jne    438dab <luaV_execute+0x42c2>
  438d94:	f2 0f 10 85 d0 fe ff 	movsd  -0x130(%rbp),%xmm0
  438d9b:	ff 
  438d9c:	f2 0f 59 85 d0 fe ff 	mulsd  -0x130(%rbp),%xmm0
  438da3:	ff 
  438da4:	66 48 0f 7e c0       	movq   %xmm0,%rax
  438da9:	eb 1a                	jmp    438dc5 <luaV_execute+0x42dc>
  438dab:	f2 0f 10 8d c8 fe ff 	movsd  -0x138(%rbp),%xmm1
  438db2:	ff 
  438db3:	f2 0f 10 85 d0 fe ff 	movsd  -0x130(%rbp),%xmm0
  438dba:	ff 
  438dbb:	e8 e0 8a fc ff       	callq  4018a0 <pow@plt>
  438dc0:	66 48 0f 7e c0       	movq   %xmm0,%rax
  438dc5:	48 8b 95 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdx
  438dcc:	48 89 02             	mov    %rax,(%rdx)
  438dcf:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  438dd6:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  438dda:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438dde:	0f 95 c0             	setne  %al
  438de1:	0f b6 c0             	movzbl %al,%eax
  438de4:	48 85 c0             	test   %rax,%rax
  438de7:	74 2b                	je     438e14 <luaV_execute+0x432b>
  438de9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438ded:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438df4:	48 89 d6             	mov    %rdx,%rsi
  438df7:	48 89 c7             	mov    %rax,%rdi
  438dfa:	e8 e2 7f fd ff       	callq  410de1 <luaG_traceexec>
  438dff:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438e02:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438e09:	48 8b 00             	mov    (%rax),%rax
  438e0c:	48 83 c0 10          	add    $0x10,%rax
  438e10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  438e14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438e18:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438e1c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  438e20:	8b 00                	mov    (%rax),%eax
  438e22:	89 45 e8             	mov    %eax,-0x18(%rbp)
  438e25:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438e28:	83 e0 7f             	and    $0x7f,%eax
  438e2b:	89 c0                	mov    %eax,%eax
  438e2d:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  438e34:	00 
  438e35:	e9 72 be ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438e3a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438e3d:	c1 e8 07             	shr    $0x7,%eax
  438e40:	48 98                	cltq   
  438e42:	0f b6 c0             	movzbl %al,%eax
  438e45:	48 c1 e0 04          	shl    $0x4,%rax
  438e49:	48 89 c2             	mov    %rax,%rdx
  438e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438e50:	48 01 d0             	add    %rdx,%rax
  438e53:	48 89 85 38 f8 ff ff 	mov    %rax,-0x7c8(%rbp)
  438e5a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438e5d:	c1 e8 10             	shr    $0x10,%eax
  438e60:	48 98                	cltq   
  438e62:	0f b6 c0             	movzbl %al,%eax
  438e65:	48 c1 e0 04          	shl    $0x4,%rax
  438e69:	48 89 c2             	mov    %rax,%rdx
  438e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438e70:	48 01 d0             	add    %rdx,%rax
  438e73:	48 89 85 30 f8 ff ff 	mov    %rax,-0x7d0(%rbp)
  438e7a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438e7d:	c1 e8 18             	shr    $0x18,%eax
  438e80:	48 98                	cltq   
  438e82:	48 c1 e0 04          	shl    $0x4,%rax
  438e86:	48 89 c2             	mov    %rax,%rdx
  438e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  438e8d:	48 01 d0             	add    %rdx,%rax
  438e90:	48 89 85 28 f8 ff ff 	mov    %rax,-0x7d8(%rbp)
  438e97:	48 8b 85 30 f8 ff ff 	mov    -0x7d0(%rbp),%rax
  438e9e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438ea2:	3c 13                	cmp    $0x13,%al
  438ea4:	75 1a                	jne    438ec0 <luaV_execute+0x43d7>
  438ea6:	48 8b 85 30 f8 ff ff 	mov    -0x7d0(%rbp),%rax
  438ead:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438eb1:	f2 0f 11 85 c0 fe ff 	movsd  %xmm0,-0x140(%rbp)
  438eb8:	ff 
  438eb9:	b8 01 00 00 00       	mov    $0x1,%eax
  438ebe:	eb 32                	jmp    438ef2 <luaV_execute+0x4409>
  438ec0:	48 8b 85 30 f8 ff ff 	mov    -0x7d0(%rbp),%rax
  438ec7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438ecb:	3c 03                	cmp    $0x3,%al
  438ecd:	75 1e                	jne    438eed <luaV_execute+0x4404>
  438ecf:	48 8b 85 30 f8 ff ff 	mov    -0x7d0(%rbp),%rax
  438ed6:	48 8b 00             	mov    (%rax),%rax
  438ed9:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438ede:	f2 0f 11 85 c0 fe ff 	movsd  %xmm0,-0x140(%rbp)
  438ee5:	ff 
  438ee6:	b8 01 00 00 00       	mov    $0x1,%eax
  438eeb:	eb 05                	jmp    438ef2 <luaV_execute+0x4409>
  438eed:	b8 00 00 00 00       	mov    $0x0,%eax
  438ef2:	84 c0                	test   %al,%al
  438ef4:	0f 84 98 00 00 00    	je     438f92 <luaV_execute+0x44a9>
  438efa:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  438f01:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438f05:	3c 13                	cmp    $0x13,%al
  438f07:	75 1a                	jne    438f23 <luaV_execute+0x443a>
  438f09:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  438f10:	f2 0f 10 00          	movsd  (%rax),%xmm0
  438f14:	f2 0f 11 85 b8 fe ff 	movsd  %xmm0,-0x148(%rbp)
  438f1b:	ff 
  438f1c:	b8 01 00 00 00       	mov    $0x1,%eax
  438f21:	eb 32                	jmp    438f55 <luaV_execute+0x446c>
  438f23:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  438f2a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  438f2e:	3c 03                	cmp    $0x3,%al
  438f30:	75 1e                	jne    438f50 <luaV_execute+0x4467>
  438f32:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  438f39:	48 8b 00             	mov    (%rax),%rax
  438f3c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  438f41:	f2 0f 11 85 b8 fe ff 	movsd  %xmm0,-0x148(%rbp)
  438f48:	ff 
  438f49:	b8 01 00 00 00       	mov    $0x1,%eax
  438f4e:	eb 05                	jmp    438f55 <luaV_execute+0x446c>
  438f50:	b8 00 00 00 00       	mov    $0x0,%eax
  438f55:	84 c0                	test   %al,%al
  438f57:	74 39                	je     438f92 <luaV_execute+0x44a9>
  438f59:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  438f5e:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
  438f65:	48 89 85 20 f8 ff ff 	mov    %rax,-0x7e0(%rbp)
  438f6c:	f2 0f 10 85 c0 fe ff 	movsd  -0x140(%rbp),%xmm0
  438f73:	ff 
  438f74:	f2 0f 5e 85 b8 fe ff 	divsd  -0x148(%rbp),%xmm0
  438f7b:	ff 
  438f7c:	48 8b 85 20 f8 ff ff 	mov    -0x7e0(%rbp),%rax
  438f83:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  438f87:	48 8b 85 20 f8 ff ff 	mov    -0x7e0(%rbp),%rax
  438f8e:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  438f92:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  438f96:	0f 95 c0             	setne  %al
  438f99:	0f b6 c0             	movzbl %al,%eax
  438f9c:	48 85 c0             	test   %rax,%rax
  438f9f:	74 2b                	je     438fcc <luaV_execute+0x44e3>
  438fa1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438fa5:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  438fac:	48 89 d6             	mov    %rdx,%rsi
  438faf:	48 89 c7             	mov    %rax,%rdi
  438fb2:	e8 2a 7e fd ff       	callq  410de1 <luaG_traceexec>
  438fb7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  438fba:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438fc1:	48 8b 00             	mov    (%rax),%rax
  438fc4:	48 83 c0 10          	add    $0x10,%rax
  438fc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  438fcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  438fd0:	48 8d 50 04          	lea    0x4(%rax),%rdx
  438fd4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  438fd8:	8b 00                	mov    (%rax),%eax
  438fda:	89 45 e8             	mov    %eax,-0x18(%rbp)
  438fdd:	8b 45 e8             	mov    -0x18(%rbp),%eax
  438fe0:	83 e0 7f             	and    $0x7f,%eax
  438fe3:	89 c0                	mov    %eax,%eax
  438fe5:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  438fec:	00 
  438fed:	e9 ba bc ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  438ff2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  438ff9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  438ffd:	48 89 50 20          	mov    %rdx,0x20(%rax)
  439001:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439008:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43900c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439013:	48 89 50 10          	mov    %rdx,0x10(%rax)
  439017:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43901a:	c1 e8 10             	shr    $0x10,%eax
  43901d:	48 98                	cltq   
  43901f:	0f b6 c0             	movzbl %al,%eax
  439022:	48 c1 e0 04          	shl    $0x4,%rax
  439026:	48 89 c2             	mov    %rax,%rdx
  439029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43902d:	48 01 d0             	add    %rdx,%rax
  439030:	48 89 85 18 f8 ff ff 	mov    %rax,-0x7e8(%rbp)
  439037:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43903a:	c1 e8 18             	shr    $0x18,%eax
  43903d:	48 98                	cltq   
  43903f:	48 c1 e0 04          	shl    $0x4,%rax
  439043:	48 89 c2             	mov    %rax,%rdx
  439046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43904a:	48 01 d0             	add    %rdx,%rax
  43904d:	48 89 85 10 f8 ff ff 	mov    %rax,-0x7f0(%rbp)
  439054:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439057:	c1 e8 07             	shr    $0x7,%eax
  43905a:	48 98                	cltq   
  43905c:	0f b6 c0             	movzbl %al,%eax
  43905f:	48 c1 e0 04          	shl    $0x4,%rax
  439063:	48 89 c2             	mov    %rax,%rdx
  439066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43906a:	48 01 d0             	add    %rdx,%rax
  43906d:	48 89 85 08 f8 ff ff 	mov    %rax,-0x7f8(%rbp)
  439074:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  43907b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43907f:	3c 03                	cmp    $0x3,%al
  439081:	0f 85 81 00 00 00    	jne    439108 <luaV_execute+0x461f>
  439087:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  43908e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439092:	3c 03                	cmp    $0x3,%al
  439094:	75 72                	jne    439108 <luaV_execute+0x461f>
  439096:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  43909d:	48 8b 00             	mov    (%rax),%rax
  4390a0:	48 89 85 00 f8 ff ff 	mov    %rax,-0x800(%rbp)
  4390a7:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  4390ae:	48 8b 00             	mov    (%rax),%rax
  4390b1:	48 89 85 f8 f7 ff ff 	mov    %rax,-0x808(%rbp)
  4390b8:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4390bd:	48 8b 85 08 f8 ff ff 	mov    -0x7f8(%rbp),%rax
  4390c4:	48 89 85 f0 f7 ff ff 	mov    %rax,-0x810(%rbp)
  4390cb:	48 8b 95 f8 f7 ff ff 	mov    -0x808(%rbp),%rdx
  4390d2:	48 8b 8d 00 f8 ff ff 	mov    -0x800(%rbp),%rcx
  4390d9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4390e0:	48 89 ce             	mov    %rcx,%rsi
  4390e3:	48 89 c7             	mov    %rax,%rdi
  4390e6:	e8 d9 b3 ff ff       	callq  4344c4 <luaV_idiv>
  4390eb:	48 89 c2             	mov    %rax,%rdx
  4390ee:	48 8b 85 f0 f7 ff ff 	mov    -0x810(%rbp),%rax
  4390f5:	48 89 10             	mov    %rdx,(%rax)
  4390f8:	48 8b 85 f0 f7 ff ff 	mov    -0x810(%rbp),%rax
  4390ff:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  439103:	e9 04 01 00 00       	jmpq   43920c <luaV_execute+0x4723>
  439108:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  43910f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439113:	3c 13                	cmp    $0x13,%al
  439115:	75 1a                	jne    439131 <luaV_execute+0x4648>
  439117:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  43911e:	f2 0f 10 00          	movsd  (%rax),%xmm0
  439122:	f2 0f 11 85 b0 fe ff 	movsd  %xmm0,-0x150(%rbp)
  439129:	ff 
  43912a:	b8 01 00 00 00       	mov    $0x1,%eax
  43912f:	eb 32                	jmp    439163 <luaV_execute+0x467a>
  439131:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  439138:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43913c:	3c 03                	cmp    $0x3,%al
  43913e:	75 1e                	jne    43915e <luaV_execute+0x4675>
  439140:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  439147:	48 8b 00             	mov    (%rax),%rax
  43914a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  43914f:	f2 0f 11 85 b0 fe ff 	movsd  %xmm0,-0x150(%rbp)
  439156:	ff 
  439157:	b8 01 00 00 00       	mov    $0x1,%eax
  43915c:	eb 05                	jmp    439163 <luaV_execute+0x467a>
  43915e:	b8 00 00 00 00       	mov    $0x0,%eax
  439163:	84 c0                	test   %al,%al
  439165:	0f 84 a1 00 00 00    	je     43920c <luaV_execute+0x4723>
  43916b:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  439172:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439176:	3c 13                	cmp    $0x13,%al
  439178:	75 1a                	jne    439194 <luaV_execute+0x46ab>
  43917a:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  439181:	f2 0f 10 00          	movsd  (%rax),%xmm0
  439185:	f2 0f 11 85 a8 fe ff 	movsd  %xmm0,-0x158(%rbp)
  43918c:	ff 
  43918d:	b8 01 00 00 00       	mov    $0x1,%eax
  439192:	eb 32                	jmp    4391c6 <luaV_execute+0x46dd>
  439194:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  43919b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43919f:	3c 03                	cmp    $0x3,%al
  4391a1:	75 1e                	jne    4391c1 <luaV_execute+0x46d8>
  4391a3:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  4391aa:	48 8b 00             	mov    (%rax),%rax
  4391ad:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4391b2:	f2 0f 11 85 a8 fe ff 	movsd  %xmm0,-0x158(%rbp)
  4391b9:	ff 
  4391ba:	b8 01 00 00 00       	mov    $0x1,%eax
  4391bf:	eb 05                	jmp    4391c6 <luaV_execute+0x46dd>
  4391c1:	b8 00 00 00 00       	mov    $0x0,%eax
  4391c6:	84 c0                	test   %al,%al
  4391c8:	74 42                	je     43920c <luaV_execute+0x4723>
  4391ca:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4391cf:	48 8b 85 08 f8 ff ff 	mov    -0x7f8(%rbp),%rax
  4391d6:	48 89 85 e8 f7 ff ff 	mov    %rax,-0x818(%rbp)
  4391dd:	f2 0f 10 85 b0 fe ff 	movsd  -0x150(%rbp),%xmm0
  4391e4:	ff 
  4391e5:	f2 0f 5e 85 a8 fe ff 	divsd  -0x158(%rbp),%xmm0
  4391ec:	ff 
  4391ed:	e8 8e 88 fc ff       	callq  401a80 <floor@plt>
  4391f2:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  4391f7:	48 8b 85 e8 f7 ff ff 	mov    -0x818(%rbp),%rax
  4391fe:	48 89 10             	mov    %rdx,(%rax)
  439201:	48 8b 85 e8 f7 ff ff 	mov    -0x818(%rbp),%rax
  439208:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  43920c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  439210:	0f 95 c0             	setne  %al
  439213:	0f b6 c0             	movzbl %al,%eax
  439216:	48 85 c0             	test   %rax,%rax
  439219:	74 2b                	je     439246 <luaV_execute+0x475d>
  43921b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43921f:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439226:	48 89 d6             	mov    %rdx,%rsi
  439229:	48 89 c7             	mov    %rax,%rdi
  43922c:	e8 b0 7b fd ff       	callq  410de1 <luaG_traceexec>
  439231:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439234:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43923b:	48 8b 00             	mov    (%rax),%rax
  43923e:	48 83 c0 10          	add    $0x10,%rax
  439242:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439246:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43924a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43924e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439252:	8b 00                	mov    (%rax),%eax
  439254:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439257:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43925a:	83 e0 7f             	and    $0x7f,%eax
  43925d:	89 c0                	mov    %eax,%eax
  43925f:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439266:	00 
  439267:	e9 40 ba ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43926c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43926f:	c1 e8 07             	shr    $0x7,%eax
  439272:	48 98                	cltq   
  439274:	0f b6 c0             	movzbl %al,%eax
  439277:	48 c1 e0 04          	shl    $0x4,%rax
  43927b:	48 89 c2             	mov    %rax,%rdx
  43927e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439282:	48 01 d0             	add    %rdx,%rax
  439285:	48 89 85 e0 f7 ff ff 	mov    %rax,-0x820(%rbp)
  43928c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43928f:	c1 e8 10             	shr    $0x10,%eax
  439292:	48 98                	cltq   
  439294:	0f b6 c0             	movzbl %al,%eax
  439297:	48 c1 e0 04          	shl    $0x4,%rax
  43929b:	48 89 c2             	mov    %rax,%rdx
  43929e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4392a2:	48 01 d0             	add    %rdx,%rax
  4392a5:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
  4392ac:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4392af:	c1 e8 18             	shr    $0x18,%eax
  4392b2:	48 98                	cltq   
  4392b4:	48 c1 e0 04          	shl    $0x4,%rax
  4392b8:	48 89 c2             	mov    %rax,%rdx
  4392bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4392bf:	48 01 d0             	add    %rdx,%rax
  4392c2:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
  4392c9:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  4392d0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4392d4:	3c 03                	cmp    $0x3,%al
  4392d6:	0f 94 c0             	sete   %al
  4392d9:	0f b6 c0             	movzbl %al,%eax
  4392dc:	48 85 c0             	test   %rax,%rax
  4392df:	74 18                	je     4392f9 <luaV_execute+0x4810>
  4392e1:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  4392e8:	48 8b 00             	mov    (%rax),%rax
  4392eb:	48 89 85 a0 f3 ff ff 	mov    %rax,-0xc60(%rbp)
  4392f2:	b8 01 00 00 00       	mov    $0x1,%eax
  4392f7:	eb 23                	jmp    43931c <luaV_execute+0x4833>
  4392f9:	48 8d 8d a0 f3 ff ff 	lea    -0xc60(%rbp),%rcx
  439300:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  439307:	ba 00 00 00 00       	mov    $0x0,%edx
  43930c:	48 89 ce             	mov    %rcx,%rsi
  43930f:	48 89 c7             	mov    %rax,%rdi
  439312:	e8 4d 96 ff ff       	callq  432964 <luaV_tointegerns>
  439317:	85 c0                	test   %eax,%eax
  439319:	0f 95 c0             	setne  %al
  43931c:	84 c0                	test   %al,%al
  43931e:	0f 84 96 00 00 00    	je     4393ba <luaV_execute+0x48d1>
  439324:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  43932b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43932f:	3c 03                	cmp    $0x3,%al
  439331:	0f 94 c0             	sete   %al
  439334:	0f b6 c0             	movzbl %al,%eax
  439337:	48 85 c0             	test   %rax,%rax
  43933a:	74 18                	je     439354 <luaV_execute+0x486b>
  43933c:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  439343:	48 8b 00             	mov    (%rax),%rax
  439346:	48 89 85 98 f3 ff ff 	mov    %rax,-0xc68(%rbp)
  43934d:	b8 01 00 00 00       	mov    $0x1,%eax
  439352:	eb 23                	jmp    439377 <luaV_execute+0x488e>
  439354:	48 8d 8d 98 f3 ff ff 	lea    -0xc68(%rbp),%rcx
  43935b:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  439362:	ba 00 00 00 00       	mov    $0x0,%edx
  439367:	48 89 ce             	mov    %rcx,%rsi
  43936a:	48 89 c7             	mov    %rax,%rdi
  43936d:	e8 f2 95 ff ff       	callq  432964 <luaV_tointegerns>
  439372:	85 c0                	test   %eax,%eax
  439374:	0f 95 c0             	setne  %al
  439377:	84 c0                	test   %al,%al
  439379:	74 3f                	je     4393ba <luaV_execute+0x48d1>
  43937b:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  439380:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  439387:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
  43938e:	48 8b 85 a0 f3 ff ff 	mov    -0xc60(%rbp),%rax
  439395:	48 89 c2             	mov    %rax,%rdx
  439398:	48 8b 85 98 f3 ff ff 	mov    -0xc68(%rbp),%rax
  43939f:	48 21 d0             	and    %rdx,%rax
  4393a2:	48 89 c2             	mov    %rax,%rdx
  4393a5:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4393ac:	48 89 10             	mov    %rdx,(%rax)
  4393af:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4393b6:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4393ba:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4393be:	0f 95 c0             	setne  %al
  4393c1:	0f b6 c0             	movzbl %al,%eax
  4393c4:	48 85 c0             	test   %rax,%rax
  4393c7:	74 2b                	je     4393f4 <luaV_execute+0x490b>
  4393c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4393cd:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4393d4:	48 89 d6             	mov    %rdx,%rsi
  4393d7:	48 89 c7             	mov    %rax,%rdi
  4393da:	e8 02 7a fd ff       	callq  410de1 <luaG_traceexec>
  4393df:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4393e2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4393e9:	48 8b 00             	mov    (%rax),%rax
  4393ec:	48 83 c0 10          	add    $0x10,%rax
  4393f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4393f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4393f8:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4393fc:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439400:	8b 00                	mov    (%rax),%eax
  439402:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439405:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439408:	83 e0 7f             	and    $0x7f,%eax
  43940b:	89 c0                	mov    %eax,%eax
  43940d:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439414:	00 
  439415:	e9 92 b8 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43941a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43941d:	c1 e8 07             	shr    $0x7,%eax
  439420:	48 98                	cltq   
  439422:	0f b6 c0             	movzbl %al,%eax
  439425:	48 c1 e0 04          	shl    $0x4,%rax
  439429:	48 89 c2             	mov    %rax,%rdx
  43942c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439430:	48 01 d0             	add    %rdx,%rax
  439433:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
  43943a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43943d:	c1 e8 10             	shr    $0x10,%eax
  439440:	48 98                	cltq   
  439442:	0f b6 c0             	movzbl %al,%eax
  439445:	48 c1 e0 04          	shl    $0x4,%rax
  439449:	48 89 c2             	mov    %rax,%rdx
  43944c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439450:	48 01 d0             	add    %rdx,%rax
  439453:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
  43945a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43945d:	c1 e8 18             	shr    $0x18,%eax
  439460:	48 98                	cltq   
  439462:	48 c1 e0 04          	shl    $0x4,%rax
  439466:	48 89 c2             	mov    %rax,%rdx
  439469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43946d:	48 01 d0             	add    %rdx,%rax
  439470:	48 89 85 b0 f7 ff ff 	mov    %rax,-0x850(%rbp)
  439477:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  43947e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439482:	3c 03                	cmp    $0x3,%al
  439484:	0f 94 c0             	sete   %al
  439487:	0f b6 c0             	movzbl %al,%eax
  43948a:	48 85 c0             	test   %rax,%rax
  43948d:	74 18                	je     4394a7 <luaV_execute+0x49be>
  43948f:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  439496:	48 8b 00             	mov    (%rax),%rax
  439499:	48 89 85 90 f3 ff ff 	mov    %rax,-0xc70(%rbp)
  4394a0:	b8 01 00 00 00       	mov    $0x1,%eax
  4394a5:	eb 23                	jmp    4394ca <luaV_execute+0x49e1>
  4394a7:	48 8d 8d 90 f3 ff ff 	lea    -0xc70(%rbp),%rcx
  4394ae:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  4394b5:	ba 00 00 00 00       	mov    $0x0,%edx
  4394ba:	48 89 ce             	mov    %rcx,%rsi
  4394bd:	48 89 c7             	mov    %rax,%rdi
  4394c0:	e8 9f 94 ff ff       	callq  432964 <luaV_tointegerns>
  4394c5:	85 c0                	test   %eax,%eax
  4394c7:	0f 95 c0             	setne  %al
  4394ca:	84 c0                	test   %al,%al
  4394cc:	0f 84 96 00 00 00    	je     439568 <luaV_execute+0x4a7f>
  4394d2:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
  4394d9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4394dd:	3c 03                	cmp    $0x3,%al
  4394df:	0f 94 c0             	sete   %al
  4394e2:	0f b6 c0             	movzbl %al,%eax
  4394e5:	48 85 c0             	test   %rax,%rax
  4394e8:	74 18                	je     439502 <luaV_execute+0x4a19>
  4394ea:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
  4394f1:	48 8b 00             	mov    (%rax),%rax
  4394f4:	48 89 85 88 f3 ff ff 	mov    %rax,-0xc78(%rbp)
  4394fb:	b8 01 00 00 00       	mov    $0x1,%eax
  439500:	eb 23                	jmp    439525 <luaV_execute+0x4a3c>
  439502:	48 8d 8d 88 f3 ff ff 	lea    -0xc78(%rbp),%rcx
  439509:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
  439510:	ba 00 00 00 00       	mov    $0x0,%edx
  439515:	48 89 ce             	mov    %rcx,%rsi
  439518:	48 89 c7             	mov    %rax,%rdi
  43951b:	e8 44 94 ff ff       	callq  432964 <luaV_tointegerns>
  439520:	85 c0                	test   %eax,%eax
  439522:	0f 95 c0             	setne  %al
  439525:	84 c0                	test   %al,%al
  439527:	74 3f                	je     439568 <luaV_execute+0x4a7f>
  439529:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43952e:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
  439535:	48 89 85 a8 f7 ff ff 	mov    %rax,-0x858(%rbp)
  43953c:	48 8b 85 90 f3 ff ff 	mov    -0xc70(%rbp),%rax
  439543:	48 89 c2             	mov    %rax,%rdx
  439546:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  43954d:	48 09 d0             	or     %rdx,%rax
  439550:	48 89 c2             	mov    %rax,%rdx
  439553:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
  43955a:	48 89 10             	mov    %rdx,(%rax)
  43955d:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
  439564:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  439568:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43956c:	0f 95 c0             	setne  %al
  43956f:	0f b6 c0             	movzbl %al,%eax
  439572:	48 85 c0             	test   %rax,%rax
  439575:	74 2b                	je     4395a2 <luaV_execute+0x4ab9>
  439577:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43957b:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439582:	48 89 d6             	mov    %rdx,%rsi
  439585:	48 89 c7             	mov    %rax,%rdi
  439588:	e8 54 78 fd ff       	callq  410de1 <luaG_traceexec>
  43958d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439590:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439597:	48 8b 00             	mov    (%rax),%rax
  43959a:	48 83 c0 10          	add    $0x10,%rax
  43959e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4395a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4395a6:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4395aa:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4395ae:	8b 00                	mov    (%rax),%eax
  4395b0:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4395b3:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4395b6:	83 e0 7f             	and    $0x7f,%eax
  4395b9:	89 c0                	mov    %eax,%eax
  4395bb:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  4395c2:	00 
  4395c3:	e9 e4 b6 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  4395c8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4395cb:	c1 e8 07             	shr    $0x7,%eax
  4395ce:	48 98                	cltq   
  4395d0:	0f b6 c0             	movzbl %al,%eax
  4395d3:	48 c1 e0 04          	shl    $0x4,%rax
  4395d7:	48 89 c2             	mov    %rax,%rdx
  4395da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4395de:	48 01 d0             	add    %rdx,%rax
  4395e1:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
  4395e8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4395eb:	c1 e8 10             	shr    $0x10,%eax
  4395ee:	48 98                	cltq   
  4395f0:	0f b6 c0             	movzbl %al,%eax
  4395f3:	48 c1 e0 04          	shl    $0x4,%rax
  4395f7:	48 89 c2             	mov    %rax,%rdx
  4395fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4395fe:	48 01 d0             	add    %rdx,%rax
  439601:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
  439608:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43960b:	c1 e8 18             	shr    $0x18,%eax
  43960e:	48 98                	cltq   
  439610:	48 c1 e0 04          	shl    $0x4,%rax
  439614:	48 89 c2             	mov    %rax,%rdx
  439617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43961b:	48 01 d0             	add    %rdx,%rax
  43961e:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
  439625:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
  43962c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439630:	3c 03                	cmp    $0x3,%al
  439632:	0f 94 c0             	sete   %al
  439635:	0f b6 c0             	movzbl %al,%eax
  439638:	48 85 c0             	test   %rax,%rax
  43963b:	74 18                	je     439655 <luaV_execute+0x4b6c>
  43963d:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
  439644:	48 8b 00             	mov    (%rax),%rax
  439647:	48 89 85 80 f3 ff ff 	mov    %rax,-0xc80(%rbp)
  43964e:	b8 01 00 00 00       	mov    $0x1,%eax
  439653:	eb 23                	jmp    439678 <luaV_execute+0x4b8f>
  439655:	48 8d 8d 80 f3 ff ff 	lea    -0xc80(%rbp),%rcx
  43965c:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
  439663:	ba 00 00 00 00       	mov    $0x0,%edx
  439668:	48 89 ce             	mov    %rcx,%rsi
  43966b:	48 89 c7             	mov    %rax,%rdi
  43966e:	e8 f1 92 ff ff       	callq  432964 <luaV_tointegerns>
  439673:	85 c0                	test   %eax,%eax
  439675:	0f 95 c0             	setne  %al
  439678:	84 c0                	test   %al,%al
  43967a:	0f 84 96 00 00 00    	je     439716 <luaV_execute+0x4c2d>
  439680:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
  439687:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43968b:	3c 03                	cmp    $0x3,%al
  43968d:	0f 94 c0             	sete   %al
  439690:	0f b6 c0             	movzbl %al,%eax
  439693:	48 85 c0             	test   %rax,%rax
  439696:	74 18                	je     4396b0 <luaV_execute+0x4bc7>
  439698:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
  43969f:	48 8b 00             	mov    (%rax),%rax
  4396a2:	48 89 85 78 f3 ff ff 	mov    %rax,-0xc88(%rbp)
  4396a9:	b8 01 00 00 00       	mov    $0x1,%eax
  4396ae:	eb 23                	jmp    4396d3 <luaV_execute+0x4bea>
  4396b0:	48 8d 8d 78 f3 ff ff 	lea    -0xc88(%rbp),%rcx
  4396b7:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
  4396be:	ba 00 00 00 00       	mov    $0x0,%edx
  4396c3:	48 89 ce             	mov    %rcx,%rsi
  4396c6:	48 89 c7             	mov    %rax,%rdi
  4396c9:	e8 96 92 ff ff       	callq  432964 <luaV_tointegerns>
  4396ce:	85 c0                	test   %eax,%eax
  4396d0:	0f 95 c0             	setne  %al
  4396d3:	84 c0                	test   %al,%al
  4396d5:	74 3f                	je     439716 <luaV_execute+0x4c2d>
  4396d7:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  4396dc:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
  4396e3:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
  4396ea:	48 8b 85 80 f3 ff ff 	mov    -0xc80(%rbp),%rax
  4396f1:	48 89 c2             	mov    %rax,%rdx
  4396f4:	48 8b 85 78 f3 ff ff 	mov    -0xc88(%rbp),%rax
  4396fb:	48 31 d0             	xor    %rdx,%rax
  4396fe:	48 89 c2             	mov    %rax,%rdx
  439701:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  439708:	48 89 10             	mov    %rdx,(%rax)
  43970b:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  439712:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  439716:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43971a:	0f 95 c0             	setne  %al
  43971d:	0f b6 c0             	movzbl %al,%eax
  439720:	48 85 c0             	test   %rax,%rax
  439723:	74 2b                	je     439750 <luaV_execute+0x4c67>
  439725:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439729:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439730:	48 89 d6             	mov    %rdx,%rsi
  439733:	48 89 c7             	mov    %rax,%rdi
  439736:	e8 a6 76 fd ff       	callq  410de1 <luaG_traceexec>
  43973b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43973e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439745:	48 8b 00             	mov    (%rax),%rax
  439748:	48 83 c0 10          	add    $0x10,%rax
  43974c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439750:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439754:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439758:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43975c:	8b 00                	mov    (%rax),%eax
  43975e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439761:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439764:	83 e0 7f             	and    $0x7f,%eax
  439767:	89 c0                	mov    %eax,%eax
  439769:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439770:	00 
  439771:	e9 36 b5 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  439776:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439779:	c1 e8 07             	shr    $0x7,%eax
  43977c:	48 98                	cltq   
  43977e:	0f b6 c0             	movzbl %al,%eax
  439781:	48 c1 e0 04          	shl    $0x4,%rax
  439785:	48 89 c2             	mov    %rax,%rdx
  439788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43978c:	48 01 d0             	add    %rdx,%rax
  43978f:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
  439796:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439799:	c1 e8 10             	shr    $0x10,%eax
  43979c:	48 98                	cltq   
  43979e:	0f b6 c0             	movzbl %al,%eax
  4397a1:	48 c1 e0 04          	shl    $0x4,%rax
  4397a5:	48 89 c2             	mov    %rax,%rdx
  4397a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4397ac:	48 01 d0             	add    %rdx,%rax
  4397af:	48 89 85 78 f7 ff ff 	mov    %rax,-0x888(%rbp)
  4397b6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4397b9:	c1 e8 18             	shr    $0x18,%eax
  4397bc:	48 98                	cltq   
  4397be:	48 c1 e0 04          	shl    $0x4,%rax
  4397c2:	48 89 c2             	mov    %rax,%rdx
  4397c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4397c9:	48 01 d0             	add    %rdx,%rax
  4397cc:	48 89 85 70 f7 ff ff 	mov    %rax,-0x890(%rbp)
  4397d3:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
  4397da:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4397de:	3c 03                	cmp    $0x3,%al
  4397e0:	0f 94 c0             	sete   %al
  4397e3:	0f b6 c0             	movzbl %al,%eax
  4397e6:	48 85 c0             	test   %rax,%rax
  4397e9:	74 18                	je     439803 <luaV_execute+0x4d1a>
  4397eb:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
  4397f2:	48 8b 00             	mov    (%rax),%rax
  4397f5:	48 89 85 70 f3 ff ff 	mov    %rax,-0xc90(%rbp)
  4397fc:	b8 01 00 00 00       	mov    $0x1,%eax
  439801:	eb 23                	jmp    439826 <luaV_execute+0x4d3d>
  439803:	48 8d 8d 70 f3 ff ff 	lea    -0xc90(%rbp),%rcx
  43980a:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
  439811:	ba 00 00 00 00       	mov    $0x0,%edx
  439816:	48 89 ce             	mov    %rcx,%rsi
  439819:	48 89 c7             	mov    %rax,%rdi
  43981c:	e8 43 91 ff ff       	callq  432964 <luaV_tointegerns>
  439821:	85 c0                	test   %eax,%eax
  439823:	0f 95 c0             	setne  %al
  439826:	84 c0                	test   %al,%al
  439828:	0f 84 a1 00 00 00    	je     4398cf <luaV_execute+0x4de6>
  43982e:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
  439835:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439839:	3c 03                	cmp    $0x3,%al
  43983b:	0f 94 c0             	sete   %al
  43983e:	0f b6 c0             	movzbl %al,%eax
  439841:	48 85 c0             	test   %rax,%rax
  439844:	74 18                	je     43985e <luaV_execute+0x4d75>
  439846:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
  43984d:	48 8b 00             	mov    (%rax),%rax
  439850:	48 89 85 68 f3 ff ff 	mov    %rax,-0xc98(%rbp)
  439857:	b8 01 00 00 00       	mov    $0x1,%eax
  43985c:	eb 23                	jmp    439881 <luaV_execute+0x4d98>
  43985e:	48 8d 8d 68 f3 ff ff 	lea    -0xc98(%rbp),%rcx
  439865:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
  43986c:	ba 00 00 00 00       	mov    $0x0,%edx
  439871:	48 89 ce             	mov    %rcx,%rsi
  439874:	48 89 c7             	mov    %rax,%rdi
  439877:	e8 e8 90 ff ff       	callq  432964 <luaV_tointegerns>
  43987c:	85 c0                	test   %eax,%eax
  43987e:	0f 95 c0             	setne  %al
  439881:	84 c0                	test   %al,%al
  439883:	74 4a                	je     4398cf <luaV_execute+0x4de6>
  439885:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43988a:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
  439891:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
  439898:	48 8b 85 68 f3 ff ff 	mov    -0xc98(%rbp),%rax
  43989f:	48 f7 d8             	neg    %rax
  4398a2:	48 89 c2             	mov    %rax,%rdx
  4398a5:	48 8b 85 70 f3 ff ff 	mov    -0xc90(%rbp),%rax
  4398ac:	48 89 d6             	mov    %rdx,%rsi
  4398af:	48 89 c7             	mov    %rax,%rdi
  4398b2:	e8 a3 ad ff ff       	callq  43465a <luaV_shiftl>
  4398b7:	48 89 c2             	mov    %rax,%rdx
  4398ba:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
  4398c1:	48 89 10             	mov    %rdx,(%rax)
  4398c4:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
  4398cb:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  4398cf:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4398d3:	0f 95 c0             	setne  %al
  4398d6:	0f b6 c0             	movzbl %al,%eax
  4398d9:	48 85 c0             	test   %rax,%rax
  4398dc:	74 2b                	je     439909 <luaV_execute+0x4e20>
  4398de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4398e2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  4398e9:	48 89 d6             	mov    %rdx,%rsi
  4398ec:	48 89 c7             	mov    %rax,%rdi
  4398ef:	e8 ed 74 fd ff       	callq  410de1 <luaG_traceexec>
  4398f4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4398f7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  4398fe:	48 8b 00             	mov    (%rax),%rax
  439901:	48 83 c0 10          	add    $0x10,%rax
  439905:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439909:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43990d:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439911:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439915:	8b 00                	mov    (%rax),%eax
  439917:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43991a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43991d:	83 e0 7f             	and    $0x7f,%eax
  439920:	89 c0                	mov    %eax,%eax
  439922:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439929:	00 
  43992a:	e9 7d b3 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43992f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439932:	c1 e8 07             	shr    $0x7,%eax
  439935:	48 98                	cltq   
  439937:	0f b6 c0             	movzbl %al,%eax
  43993a:	48 c1 e0 04          	shl    $0x4,%rax
  43993e:	48 89 c2             	mov    %rax,%rdx
  439941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439945:	48 01 d0             	add    %rdx,%rax
  439948:	48 89 85 60 f7 ff ff 	mov    %rax,-0x8a0(%rbp)
  43994f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439952:	c1 e8 10             	shr    $0x10,%eax
  439955:	48 98                	cltq   
  439957:	0f b6 c0             	movzbl %al,%eax
  43995a:	48 c1 e0 04          	shl    $0x4,%rax
  43995e:	48 89 c2             	mov    %rax,%rdx
  439961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439965:	48 01 d0             	add    %rdx,%rax
  439968:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
  43996f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439972:	c1 e8 18             	shr    $0x18,%eax
  439975:	48 98                	cltq   
  439977:	48 c1 e0 04          	shl    $0x4,%rax
  43997b:	48 89 c2             	mov    %rax,%rdx
  43997e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439982:	48 01 d0             	add    %rdx,%rax
  439985:	48 89 85 50 f7 ff ff 	mov    %rax,-0x8b0(%rbp)
  43998c:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  439993:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439997:	3c 03                	cmp    $0x3,%al
  439999:	0f 94 c0             	sete   %al
  43999c:	0f b6 c0             	movzbl %al,%eax
  43999f:	48 85 c0             	test   %rax,%rax
  4399a2:	74 18                	je     4399bc <luaV_execute+0x4ed3>
  4399a4:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  4399ab:	48 8b 00             	mov    (%rax),%rax
  4399ae:	48 89 85 60 f3 ff ff 	mov    %rax,-0xca0(%rbp)
  4399b5:	b8 01 00 00 00       	mov    $0x1,%eax
  4399ba:	eb 23                	jmp    4399df <luaV_execute+0x4ef6>
  4399bc:	48 8d 8d 60 f3 ff ff 	lea    -0xca0(%rbp),%rcx
  4399c3:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  4399ca:	ba 00 00 00 00       	mov    $0x0,%edx
  4399cf:	48 89 ce             	mov    %rcx,%rsi
  4399d2:	48 89 c7             	mov    %rax,%rdi
  4399d5:	e8 8a 8f ff ff       	callq  432964 <luaV_tointegerns>
  4399da:	85 c0                	test   %eax,%eax
  4399dc:	0f 95 c0             	setne  %al
  4399df:	84 c0                	test   %al,%al
  4399e1:	0f 84 9b 00 00 00    	je     439a82 <luaV_execute+0x4f99>
  4399e7:	48 8b 85 50 f7 ff ff 	mov    -0x8b0(%rbp),%rax
  4399ee:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4399f2:	3c 03                	cmp    $0x3,%al
  4399f4:	0f 94 c0             	sete   %al
  4399f7:	0f b6 c0             	movzbl %al,%eax
  4399fa:	48 85 c0             	test   %rax,%rax
  4399fd:	74 18                	je     439a17 <luaV_execute+0x4f2e>
  4399ff:	48 8b 85 50 f7 ff ff 	mov    -0x8b0(%rbp),%rax
  439a06:	48 8b 00             	mov    (%rax),%rax
  439a09:	48 89 85 58 f3 ff ff 	mov    %rax,-0xca8(%rbp)
  439a10:	b8 01 00 00 00       	mov    $0x1,%eax
  439a15:	eb 23                	jmp    439a3a <luaV_execute+0x4f51>
  439a17:	48 8d 8d 58 f3 ff ff 	lea    -0xca8(%rbp),%rcx
  439a1e:	48 8b 85 50 f7 ff ff 	mov    -0x8b0(%rbp),%rax
  439a25:	ba 00 00 00 00       	mov    $0x0,%edx
  439a2a:	48 89 ce             	mov    %rcx,%rsi
  439a2d:	48 89 c7             	mov    %rax,%rdi
  439a30:	e8 2f 8f ff ff       	callq  432964 <luaV_tointegerns>
  439a35:	85 c0                	test   %eax,%eax
  439a37:	0f 95 c0             	setne  %al
  439a3a:	84 c0                	test   %al,%al
  439a3c:	74 44                	je     439a82 <luaV_execute+0x4f99>
  439a3e:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  439a43:	48 8b 85 60 f7 ff ff 	mov    -0x8a0(%rbp),%rax
  439a4a:	48 89 85 48 f7 ff ff 	mov    %rax,-0x8b8(%rbp)
  439a51:	48 8b 95 58 f3 ff ff 	mov    -0xca8(%rbp),%rdx
  439a58:	48 8b 85 60 f3 ff ff 	mov    -0xca0(%rbp),%rax
  439a5f:	48 89 d6             	mov    %rdx,%rsi
  439a62:	48 89 c7             	mov    %rax,%rdi
  439a65:	e8 f0 ab ff ff       	callq  43465a <luaV_shiftl>
  439a6a:	48 89 c2             	mov    %rax,%rdx
  439a6d:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
  439a74:	48 89 10             	mov    %rdx,(%rax)
  439a77:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
  439a7e:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  439a82:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  439a86:	0f 95 c0             	setne  %al
  439a89:	0f b6 c0             	movzbl %al,%eax
  439a8c:	48 85 c0             	test   %rax,%rax
  439a8f:	74 2b                	je     439abc <luaV_execute+0x4fd3>
  439a91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439a95:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439a9c:	48 89 d6             	mov    %rdx,%rsi
  439a9f:	48 89 c7             	mov    %rax,%rdi
  439aa2:	e8 3a 73 fd ff       	callq  410de1 <luaG_traceexec>
  439aa7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439aaa:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439ab1:	48 8b 00             	mov    (%rax),%rax
  439ab4:	48 83 c0 10          	add    $0x10,%rax
  439ab8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439abc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439ac0:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439ac4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439ac8:	8b 00                	mov    (%rax),%eax
  439aca:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439acd:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439ad0:	83 e0 7f             	and    $0x7f,%eax
  439ad3:	89 c0                	mov    %eax,%eax
  439ad5:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439adc:	00 
  439add:	e9 ca b1 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  439ae2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439ae5:	c1 e8 07             	shr    $0x7,%eax
  439ae8:	48 98                	cltq   
  439aea:	0f b6 c0             	movzbl %al,%eax
  439aed:	48 c1 e0 04          	shl    $0x4,%rax
  439af1:	48 89 c2             	mov    %rax,%rdx
  439af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439af8:	48 01 d0             	add    %rdx,%rax
  439afb:	48 89 85 40 f7 ff ff 	mov    %rax,-0x8c0(%rbp)
  439b02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439b06:	8b 40 f8             	mov    -0x8(%rax),%eax
  439b09:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%rbp)
  439b0f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439b12:	c1 e8 10             	shr    $0x10,%eax
  439b15:	48 98                	cltq   
  439b17:	0f b6 c0             	movzbl %al,%eax
  439b1a:	48 c1 e0 04          	shl    $0x4,%rax
  439b1e:	48 89 c2             	mov    %rax,%rdx
  439b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439b25:	48 01 d0             	add    %rdx,%rax
  439b28:	48 89 85 30 f7 ff ff 	mov    %rax,-0x8d0(%rbp)
  439b2f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439b32:	c1 e8 18             	shr    $0x18,%eax
  439b35:	89 85 2c f7 ff ff    	mov    %eax,-0x8d4(%rbp)
  439b3b:	8b 85 3c f7 ff ff    	mov    -0x8c4(%rbp),%eax
  439b41:	c1 e8 07             	shr    $0x7,%eax
  439b44:	48 98                	cltq   
  439b46:	0f b6 c0             	movzbl %al,%eax
  439b49:	48 c1 e0 04          	shl    $0x4,%rax
  439b4d:	48 89 c2             	mov    %rax,%rdx
  439b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439b54:	48 01 d0             	add    %rdx,%rax
  439b57:	48 89 85 20 f7 ff ff 	mov    %rax,-0x8e0(%rbp)
  439b5e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439b65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439b69:	48 89 50 20          	mov    %rdx,0x20(%rax)
  439b6d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439b74:	48 8b 50 08          	mov    0x8(%rax),%rdx
  439b78:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439b7f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  439b83:	48 8b b5 40 f7 ff ff 	mov    -0x8c0(%rbp),%rsi
  439b8a:	8b bd 2c f7 ff ff    	mov    -0x8d4(%rbp),%edi
  439b90:	48 8b 8d 20 f7 ff ff 	mov    -0x8e0(%rbp),%rcx
  439b97:	48 8b 95 30 f7 ff ff 	mov    -0x8d0(%rbp),%rdx
  439b9e:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439ba5:	41 89 f8             	mov    %edi,%r8d
  439ba8:	48 89 c7             	mov    %rax,%rdi
  439bab:	e8 5d 57 ff ff       	callq  42f30d <luaT_trybinTM>
  439bb0:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439bb7:	8b 40 28             	mov    0x28(%rax),%eax
  439bba:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439bbd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  439bc1:	0f 95 c0             	setne  %al
  439bc4:	0f b6 c0             	movzbl %al,%eax
  439bc7:	48 85 c0             	test   %rax,%rax
  439bca:	74 2b                	je     439bf7 <luaV_execute+0x510e>
  439bcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439bd0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439bd7:	48 89 d6             	mov    %rdx,%rsi
  439bda:	48 89 c7             	mov    %rax,%rdi
  439bdd:	e8 ff 71 fd ff       	callq  410de1 <luaG_traceexec>
  439be2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439be5:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439bec:	48 8b 00             	mov    (%rax),%rax
  439bef:	48 83 c0 10          	add    $0x10,%rax
  439bf3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439bf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439bfb:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439bff:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439c03:	8b 00                	mov    (%rax),%eax
  439c05:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439c08:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439c0b:	83 e0 7f             	and    $0x7f,%eax
  439c0e:	89 c0                	mov    %eax,%eax
  439c10:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439c17:	00 
  439c18:	e9 8f b0 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  439c1d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439c20:	c1 e8 07             	shr    $0x7,%eax
  439c23:	48 98                	cltq   
  439c25:	0f b6 c0             	movzbl %al,%eax
  439c28:	48 c1 e0 04          	shl    $0x4,%rax
  439c2c:	48 89 c2             	mov    %rax,%rdx
  439c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439c33:	48 01 d0             	add    %rdx,%rax
  439c36:	48 89 85 18 f7 ff ff 	mov    %rax,-0x8e8(%rbp)
  439c3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439c41:	8b 40 f8             	mov    -0x8(%rax),%eax
  439c44:	89 85 14 f7 ff ff    	mov    %eax,-0x8ec(%rbp)
  439c4a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439c4d:	c1 e8 10             	shr    $0x10,%eax
  439c50:	0f b6 c0             	movzbl %al,%eax
  439c53:	83 e8 7f             	sub    $0x7f,%eax
  439c56:	89 85 10 f7 ff ff    	mov    %eax,-0x8f0(%rbp)
  439c5c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439c5f:	c1 e8 18             	shr    $0x18,%eax
  439c62:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  439c68:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439c6b:	c1 e8 0f             	shr    $0xf,%eax
  439c6e:	83 e0 01             	and    $0x1,%eax
  439c71:	89 85 08 f7 ff ff    	mov    %eax,-0x8f8(%rbp)
  439c77:	8b 85 14 f7 ff ff    	mov    -0x8ec(%rbp),%eax
  439c7d:	c1 e8 07             	shr    $0x7,%eax
  439c80:	48 98                	cltq   
  439c82:	0f b6 c0             	movzbl %al,%eax
  439c85:	48 c1 e0 04          	shl    $0x4,%rax
  439c89:	48 89 c2             	mov    %rax,%rdx
  439c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439c90:	48 01 d0             	add    %rdx,%rax
  439c93:	48 89 85 00 f7 ff ff 	mov    %rax,-0x900(%rbp)
  439c9a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439ca1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439ca5:	48 89 50 20          	mov    %rdx,0x20(%rax)
  439ca9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439cb0:	48 8b 50 08          	mov    0x8(%rax),%rdx
  439cb4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439cbb:	48 89 50 10          	mov    %rdx,0x10(%rax)
  439cbf:	8b 85 10 f7 ff ff    	mov    -0x8f0(%rbp),%eax
  439cc5:	48 63 d0             	movslq %eax,%rdx
  439cc8:	48 8b b5 18 f7 ff ff 	mov    -0x8e8(%rbp),%rsi
  439ccf:	44 8b 85 0c f7 ff ff 	mov    -0x8f4(%rbp),%r8d
  439cd6:	48 8b bd 00 f7 ff ff 	mov    -0x900(%rbp),%rdi
  439cdd:	8b 8d 08 f7 ff ff    	mov    -0x8f8(%rbp),%ecx
  439ce3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439cea:	45 89 c1             	mov    %r8d,%r9d
  439ced:	49 89 f8             	mov    %rdi,%r8
  439cf0:	48 89 c7             	mov    %rax,%rdi
  439cf3:	e8 cd 57 ff ff       	callq  42f4c5 <luaT_trybiniTM>
  439cf8:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439cff:	8b 40 28             	mov    0x28(%rax),%eax
  439d02:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439d05:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  439d09:	0f 95 c0             	setne  %al
  439d0c:	0f b6 c0             	movzbl %al,%eax
  439d0f:	48 85 c0             	test   %rax,%rax
  439d12:	74 2b                	je     439d3f <luaV_execute+0x5256>
  439d14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439d18:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439d1f:	48 89 d6             	mov    %rdx,%rsi
  439d22:	48 89 c7             	mov    %rax,%rdi
  439d25:	e8 b7 70 fd ff       	callq  410de1 <luaG_traceexec>
  439d2a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439d2d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439d34:	48 8b 00             	mov    (%rax),%rax
  439d37:	48 83 c0 10          	add    $0x10,%rax
  439d3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439d3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439d43:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439d47:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439d4b:	8b 00                	mov    (%rax),%eax
  439d4d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439d50:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439d53:	83 e0 7f             	and    $0x7f,%eax
  439d56:	89 c0                	mov    %eax,%eax
  439d58:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439d5f:	00 
  439d60:	e9 47 af ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  439d65:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439d68:	c1 e8 07             	shr    $0x7,%eax
  439d6b:	48 98                	cltq   
  439d6d:	0f b6 c0             	movzbl %al,%eax
  439d70:	48 c1 e0 04          	shl    $0x4,%rax
  439d74:	48 89 c2             	mov    %rax,%rdx
  439d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439d7b:	48 01 d0             	add    %rdx,%rax
  439d7e:	48 89 85 f8 f6 ff ff 	mov    %rax,-0x908(%rbp)
  439d85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439d89:	8b 40 f8             	mov    -0x8(%rax),%eax
  439d8c:	89 85 f4 f6 ff ff    	mov    %eax,-0x90c(%rbp)
  439d92:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439d95:	c1 e8 10             	shr    $0x10,%eax
  439d98:	48 98                	cltq   
  439d9a:	0f b6 c0             	movzbl %al,%eax
  439d9d:	48 c1 e0 04          	shl    $0x4,%rax
  439da1:	48 89 c2             	mov    %rax,%rdx
  439da4:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  439dab:	48 01 d0             	add    %rdx,%rax
  439dae:	48 89 85 e8 f6 ff ff 	mov    %rax,-0x918(%rbp)
  439db5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439db8:	c1 e8 18             	shr    $0x18,%eax
  439dbb:	89 85 e4 f6 ff ff    	mov    %eax,-0x91c(%rbp)
  439dc1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439dc4:	c1 e8 0f             	shr    $0xf,%eax
  439dc7:	83 e0 01             	and    $0x1,%eax
  439dca:	89 85 e0 f6 ff ff    	mov    %eax,-0x920(%rbp)
  439dd0:	8b 85 f4 f6 ff ff    	mov    -0x90c(%rbp),%eax
  439dd6:	c1 e8 07             	shr    $0x7,%eax
  439dd9:	48 98                	cltq   
  439ddb:	0f b6 c0             	movzbl %al,%eax
  439dde:	48 c1 e0 04          	shl    $0x4,%rax
  439de2:	48 89 c2             	mov    %rax,%rdx
  439de5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439de9:	48 01 d0             	add    %rdx,%rax
  439dec:	48 89 85 d8 f6 ff ff 	mov    %rax,-0x928(%rbp)
  439df3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439dfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439dfe:	48 89 50 20          	mov    %rdx,0x20(%rax)
  439e02:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439e09:	48 8b 50 08          	mov    0x8(%rax),%rdx
  439e0d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439e14:	48 89 50 10          	mov    %rdx,0x10(%rax)
  439e18:	48 8b b5 f8 f6 ff ff 	mov    -0x908(%rbp),%rsi
  439e1f:	44 8b 85 e4 f6 ff ff 	mov    -0x91c(%rbp),%r8d
  439e26:	48 8b bd d8 f6 ff ff 	mov    -0x928(%rbp),%rdi
  439e2d:	8b 8d e0 f6 ff ff    	mov    -0x920(%rbp),%ecx
  439e33:	48 8b 95 e8 f6 ff ff 	mov    -0x918(%rbp),%rdx
  439e3a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439e41:	45 89 c1             	mov    %r8d,%r9d
  439e44:	49 89 f8             	mov    %rdi,%r8
  439e47:	48 89 c7             	mov    %rax,%rdi
  439e4a:	e8 10 56 ff ff       	callq  42f45f <luaT_trybinassocTM>
  439e4f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439e56:	8b 40 28             	mov    0x28(%rax),%eax
  439e59:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439e5c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  439e60:	0f 95 c0             	setne  %al
  439e63:	0f b6 c0             	movzbl %al,%eax
  439e66:	48 85 c0             	test   %rax,%rax
  439e69:	74 2b                	je     439e96 <luaV_execute+0x53ad>
  439e6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439e6f:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  439e76:	48 89 d6             	mov    %rdx,%rsi
  439e79:	48 89 c7             	mov    %rax,%rdi
  439e7c:	e8 60 6f fd ff       	callq  410de1 <luaG_traceexec>
  439e81:	89 45 ec             	mov    %eax,-0x14(%rbp)
  439e84:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439e8b:	48 8b 00             	mov    (%rax),%rax
  439e8e:	48 83 c0 10          	add    $0x10,%rax
  439e92:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  439e96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439e9a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  439e9e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  439ea2:	8b 00                	mov    (%rax),%eax
  439ea4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  439ea7:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439eaa:	83 e0 7f             	and    $0x7f,%eax
  439ead:	89 c0                	mov    %eax,%eax
  439eaf:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  439eb6:	00 
  439eb7:	e9 f0 ad ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  439ebc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439ebf:	c1 e8 07             	shr    $0x7,%eax
  439ec2:	48 98                	cltq   
  439ec4:	0f b6 c0             	movzbl %al,%eax
  439ec7:	48 c1 e0 04          	shl    $0x4,%rax
  439ecb:	48 89 c2             	mov    %rax,%rdx
  439ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439ed2:	48 01 d0             	add    %rdx,%rax
  439ed5:	48 89 85 d0 f6 ff ff 	mov    %rax,-0x930(%rbp)
  439edc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  439edf:	c1 e8 10             	shr    $0x10,%eax
  439ee2:	48 98                	cltq   
  439ee4:	0f b6 c0             	movzbl %al,%eax
  439ee7:	48 c1 e0 04          	shl    $0x4,%rax
  439eeb:	48 89 c2             	mov    %rax,%rdx
  439eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  439ef2:	48 01 d0             	add    %rdx,%rax
  439ef5:	48 89 85 c8 f6 ff ff 	mov    %rax,-0x938(%rbp)
  439efc:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f03:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439f07:	3c 03                	cmp    $0x3,%al
  439f09:	75 46                	jne    439f51 <luaV_execute+0x5468>
  439f0b:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f12:	48 8b 00             	mov    (%rax),%rax
  439f15:	48 89 85 c0 f6 ff ff 	mov    %rax,-0x940(%rbp)
  439f1c:	48 8b 85 d0 f6 ff ff 	mov    -0x930(%rbp),%rax
  439f23:	48 89 85 b8 f6 ff ff 	mov    %rax,-0x948(%rbp)
  439f2a:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  439f31:	48 f7 d8             	neg    %rax
  439f34:	48 89 c2             	mov    %rax,%rdx
  439f37:	48 8b 85 b8 f6 ff ff 	mov    -0x948(%rbp),%rax
  439f3e:	48 89 10             	mov    %rdx,(%rax)
  439f41:	48 8b 85 b8 f6 ff ff 	mov    -0x948(%rbp),%rax
  439f48:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  439f4c:	e9 f5 00 00 00       	jmpq   43a046 <luaV_execute+0x555d>
  439f51:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f58:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439f5c:	3c 13                	cmp    $0x13,%al
  439f5e:	75 1a                	jne    439f7a <luaV_execute+0x5491>
  439f60:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f67:	f2 0f 10 00          	movsd  (%rax),%xmm0
  439f6b:	f2 0f 11 85 a0 fe ff 	movsd  %xmm0,-0x160(%rbp)
  439f72:	ff 
  439f73:	b8 01 00 00 00       	mov    $0x1,%eax
  439f78:	eb 32                	jmp    439fac <luaV_execute+0x54c3>
  439f7a:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f81:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  439f85:	3c 03                	cmp    $0x3,%al
  439f87:	75 1e                	jne    439fa7 <luaV_execute+0x54be>
  439f89:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  439f90:	48 8b 00             	mov    (%rax),%rax
  439f93:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  439f98:	f2 0f 11 85 a0 fe ff 	movsd  %xmm0,-0x160(%rbp)
  439f9f:	ff 
  439fa0:	b8 01 00 00 00       	mov    $0x1,%eax
  439fa5:	eb 05                	jmp    439fac <luaV_execute+0x54c3>
  439fa7:	b8 00 00 00 00       	mov    $0x0,%eax
  439fac:	84 c0                	test   %al,%al
  439fae:	74 3a                	je     439fea <luaV_execute+0x5501>
  439fb0:	48 8b 85 d0 f6 ff ff 	mov    -0x930(%rbp),%rax
  439fb7:	48 89 85 b0 f6 ff ff 	mov    %rax,-0x950(%rbp)
  439fbe:	f2 0f 10 85 a0 fe ff 	movsd  -0x160(%rbp),%xmm0
  439fc5:	ff 
  439fc6:	f3 0f 7e 0d 12 99 00 	movq   0x9912(%rip),%xmm1        # 4438e0 <disptab.5580+0x2c0>
  439fcd:	00 
  439fce:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
  439fd2:	48 8b 85 b0 f6 ff ff 	mov    -0x950(%rbp),%rax
  439fd9:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  439fdd:	48 8b 85 b0 f6 ff ff 	mov    -0x950(%rbp),%rax
  439fe4:	c6 40 08 13          	movb   $0x13,0x8(%rax)
  439fe8:	eb 5c                	jmp    43a046 <luaV_execute+0x555d>
  439fea:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  439ff1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  439ff5:	48 89 50 20          	mov    %rdx,0x20(%rax)
  439ff9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a000:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a004:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a00b:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a00f:	48 8b 8d d0 f6 ff ff 	mov    -0x930(%rbp),%rcx
  43a016:	48 8b 95 c8 f6 ff ff 	mov    -0x938(%rbp),%rdx
  43a01d:	48 8b b5 c8 f6 ff ff 	mov    -0x938(%rbp),%rsi
  43a024:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a02b:	41 b8 12 00 00 00    	mov    $0x12,%r8d
  43a031:	48 89 c7             	mov    %rax,%rdi
  43a034:	e8 d4 52 ff ff       	callq  42f30d <luaT_trybinTM>
  43a039:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a040:	8b 40 28             	mov    0x28(%rax),%eax
  43a043:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a046:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a04a:	0f 95 c0             	setne  %al
  43a04d:	0f b6 c0             	movzbl %al,%eax
  43a050:	48 85 c0             	test   %rax,%rax
  43a053:	74 2b                	je     43a080 <luaV_execute+0x5597>
  43a055:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a059:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a060:	48 89 d6             	mov    %rdx,%rsi
  43a063:	48 89 c7             	mov    %rax,%rdi
  43a066:	e8 76 6d fd ff       	callq  410de1 <luaG_traceexec>
  43a06b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a06e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a075:	48 8b 00             	mov    (%rax),%rax
  43a078:	48 83 c0 10          	add    $0x10,%rax
  43a07c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a080:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a084:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a088:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a08c:	8b 00                	mov    (%rax),%eax
  43a08e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a091:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a094:	83 e0 7f             	and    $0x7f,%eax
  43a097:	89 c0                	mov    %eax,%eax
  43a099:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a0a0:	00 
  43a0a1:	e9 06 ac ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a0a6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a0a9:	c1 e8 07             	shr    $0x7,%eax
  43a0ac:	48 98                	cltq   
  43a0ae:	0f b6 c0             	movzbl %al,%eax
  43a0b1:	48 c1 e0 04          	shl    $0x4,%rax
  43a0b5:	48 89 c2             	mov    %rax,%rdx
  43a0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a0bc:	48 01 d0             	add    %rdx,%rax
  43a0bf:	48 89 85 a8 f6 ff ff 	mov    %rax,-0x958(%rbp)
  43a0c6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a0c9:	c1 e8 10             	shr    $0x10,%eax
  43a0cc:	48 98                	cltq   
  43a0ce:	0f b6 c0             	movzbl %al,%eax
  43a0d1:	48 c1 e0 04          	shl    $0x4,%rax
  43a0d5:	48 89 c2             	mov    %rax,%rdx
  43a0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a0dc:	48 01 d0             	add    %rdx,%rax
  43a0df:	48 89 85 a0 f6 ff ff 	mov    %rax,-0x960(%rbp)
  43a0e6:	48 8b 85 a0 f6 ff ff 	mov    -0x960(%rbp),%rax
  43a0ed:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a0f1:	3c 03                	cmp    $0x3,%al
  43a0f3:	0f 94 c0             	sete   %al
  43a0f6:	0f b6 c0             	movzbl %al,%eax
  43a0f9:	48 85 c0             	test   %rax,%rax
  43a0fc:	74 18                	je     43a116 <luaV_execute+0x562d>
  43a0fe:	48 8b 85 a0 f6 ff ff 	mov    -0x960(%rbp),%rax
  43a105:	48 8b 00             	mov    (%rax),%rax
  43a108:	48 89 85 50 f3 ff ff 	mov    %rax,-0xcb0(%rbp)
  43a10f:	b8 01 00 00 00       	mov    $0x1,%eax
  43a114:	eb 23                	jmp    43a139 <luaV_execute+0x5650>
  43a116:	48 8d 8d 50 f3 ff ff 	lea    -0xcb0(%rbp),%rcx
  43a11d:	48 8b 85 a0 f6 ff ff 	mov    -0x960(%rbp),%rax
  43a124:	ba 00 00 00 00       	mov    $0x0,%edx
  43a129:	48 89 ce             	mov    %rcx,%rsi
  43a12c:	48 89 c7             	mov    %rax,%rdi
  43a12f:	e8 30 88 ff ff       	callq  432964 <luaV_tointegerns>
  43a134:	85 c0                	test   %eax,%eax
  43a136:	0f 95 c0             	setne  %al
  43a139:	84 c0                	test   %al,%al
  43a13b:	74 32                	je     43a16f <luaV_execute+0x5686>
  43a13d:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  43a144:	48 89 85 98 f6 ff ff 	mov    %rax,-0x968(%rbp)
  43a14b:	48 8b 85 50 f3 ff ff 	mov    -0xcb0(%rbp),%rax
  43a152:	48 f7 d0             	not    %rax
  43a155:	48 89 c2             	mov    %rax,%rdx
  43a158:	48 8b 85 98 f6 ff ff 	mov    -0x968(%rbp),%rax
  43a15f:	48 89 10             	mov    %rdx,(%rax)
  43a162:	48 8b 85 98 f6 ff ff 	mov    -0x968(%rbp),%rax
  43a169:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  43a16d:	eb 5c                	jmp    43a1cb <luaV_execute+0x56e2>
  43a16f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a17a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a17e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a185:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a189:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a190:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a194:	48 8b 8d a8 f6 ff ff 	mov    -0x958(%rbp),%rcx
  43a19b:	48 8b 95 a0 f6 ff ff 	mov    -0x960(%rbp),%rdx
  43a1a2:	48 8b b5 a0 f6 ff ff 	mov    -0x960(%rbp),%rsi
  43a1a9:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a1b0:	41 b8 13 00 00 00    	mov    $0x13,%r8d
  43a1b6:	48 89 c7             	mov    %rax,%rdi
  43a1b9:	e8 4f 51 ff ff       	callq  42f30d <luaT_trybinTM>
  43a1be:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a1c5:	8b 40 28             	mov    0x28(%rax),%eax
  43a1c8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a1cb:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a1cf:	0f 95 c0             	setne  %al
  43a1d2:	0f b6 c0             	movzbl %al,%eax
  43a1d5:	48 85 c0             	test   %rax,%rax
  43a1d8:	74 2b                	je     43a205 <luaV_execute+0x571c>
  43a1da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a1de:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a1e5:	48 89 d6             	mov    %rdx,%rsi
  43a1e8:	48 89 c7             	mov    %rax,%rdi
  43a1eb:	e8 f1 6b fd ff       	callq  410de1 <luaG_traceexec>
  43a1f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a1f3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a1fa:	48 8b 00             	mov    (%rax),%rax
  43a1fd:	48 83 c0 10          	add    $0x10,%rax
  43a201:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a209:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a20d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a211:	8b 00                	mov    (%rax),%eax
  43a213:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a216:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a219:	83 e0 7f             	and    $0x7f,%eax
  43a21c:	89 c0                	mov    %eax,%eax
  43a21e:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a225:	00 
  43a226:	e9 81 aa ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a22b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a22e:	c1 e8 07             	shr    $0x7,%eax
  43a231:	48 98                	cltq   
  43a233:	0f b6 c0             	movzbl %al,%eax
  43a236:	48 c1 e0 04          	shl    $0x4,%rax
  43a23a:	48 89 c2             	mov    %rax,%rdx
  43a23d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a241:	48 01 d0             	add    %rdx,%rax
  43a244:	48 89 85 90 f6 ff ff 	mov    %rax,-0x970(%rbp)
  43a24b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a24e:	c1 e8 10             	shr    $0x10,%eax
  43a251:	48 98                	cltq   
  43a253:	0f b6 c0             	movzbl %al,%eax
  43a256:	48 c1 e0 04          	shl    $0x4,%rax
  43a25a:	48 89 c2             	mov    %rax,%rdx
  43a25d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a261:	48 01 d0             	add    %rdx,%rax
  43a264:	48 89 85 88 f6 ff ff 	mov    %rax,-0x978(%rbp)
  43a26b:	48 8b 85 88 f6 ff ff 	mov    -0x978(%rbp),%rax
  43a272:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a276:	3c 01                	cmp    $0x1,%al
  43a278:	74 15                	je     43a28f <luaV_execute+0x57a6>
  43a27a:	48 8b 85 88 f6 ff ff 	mov    -0x978(%rbp),%rax
  43a281:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a285:	0f b6 c0             	movzbl %al,%eax
  43a288:	83 e0 0f             	and    $0xf,%eax
  43a28b:	85 c0                	test   %eax,%eax
  43a28d:	75 0d                	jne    43a29c <luaV_execute+0x57b3>
  43a28f:	48 8b 85 90 f6 ff ff 	mov    -0x970(%rbp),%rax
  43a296:	c6 40 08 11          	movb   $0x11,0x8(%rax)
  43a29a:	eb 0b                	jmp    43a2a7 <luaV_execute+0x57be>
  43a29c:	48 8b 85 90 f6 ff ff 	mov    -0x970(%rbp),%rax
  43a2a3:	c6 40 08 01          	movb   $0x1,0x8(%rax)
  43a2a7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a2ab:	0f 95 c0             	setne  %al
  43a2ae:	0f b6 c0             	movzbl %al,%eax
  43a2b1:	48 85 c0             	test   %rax,%rax
  43a2b4:	74 2b                	je     43a2e1 <luaV_execute+0x57f8>
  43a2b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a2ba:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a2c1:	48 89 d6             	mov    %rdx,%rsi
  43a2c4:	48 89 c7             	mov    %rax,%rdi
  43a2c7:	e8 15 6b fd ff       	callq  410de1 <luaG_traceexec>
  43a2cc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a2cf:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a2d6:	48 8b 00             	mov    (%rax),%rax
  43a2d9:	48 83 c0 10          	add    $0x10,%rax
  43a2dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a2e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a2e5:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a2e9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a2ed:	8b 00                	mov    (%rax),%eax
  43a2ef:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a2f2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a2f5:	83 e0 7f             	and    $0x7f,%eax
  43a2f8:	89 c0                	mov    %eax,%eax
  43a2fa:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a301:	00 
  43a302:	e9 a5 a9 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a307:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a30a:	c1 e8 07             	shr    $0x7,%eax
  43a30d:	48 98                	cltq   
  43a30f:	0f b6 c0             	movzbl %al,%eax
  43a312:	48 c1 e0 04          	shl    $0x4,%rax
  43a316:	48 89 c2             	mov    %rax,%rdx
  43a319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a31d:	48 01 d0             	add    %rdx,%rax
  43a320:	48 89 85 80 f6 ff ff 	mov    %rax,-0x980(%rbp)
  43a327:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a32e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a332:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a336:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a33d:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a341:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a348:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a34c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a34f:	c1 e8 10             	shr    $0x10,%eax
  43a352:	48 98                	cltq   
  43a354:	0f b6 c0             	movzbl %al,%eax
  43a357:	48 c1 e0 04          	shl    $0x4,%rax
  43a35b:	48 89 c2             	mov    %rax,%rdx
  43a35e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a362:	48 01 d0             	add    %rdx,%rax
  43a365:	48 89 c2             	mov    %rax,%rdx
  43a368:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  43a36f:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a376:	48 89 ce             	mov    %rcx,%rsi
  43a379:	48 89 c7             	mov    %rax,%rdi
  43a37c:	e8 a6 9f ff ff       	callq  434327 <luaV_objlen>
  43a381:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a388:	8b 40 28             	mov    0x28(%rax),%eax
  43a38b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a38e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a392:	0f 95 c0             	setne  %al
  43a395:	0f b6 c0             	movzbl %al,%eax
  43a398:	48 85 c0             	test   %rax,%rax
  43a39b:	74 2b                	je     43a3c8 <luaV_execute+0x58df>
  43a39d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a3a1:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a3a8:	48 89 d6             	mov    %rdx,%rsi
  43a3ab:	48 89 c7             	mov    %rax,%rdi
  43a3ae:	e8 2e 6a fd ff       	callq  410de1 <luaG_traceexec>
  43a3b3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a3b6:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a3bd:	48 8b 00             	mov    (%rax),%rax
  43a3c0:	48 83 c0 10          	add    $0x10,%rax
  43a3c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a3c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a3cc:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a3d0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a3d4:	8b 00                	mov    (%rax),%eax
  43a3d6:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a3d9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a3dc:	83 e0 7f             	and    $0x7f,%eax
  43a3df:	89 c0                	mov    %eax,%eax
  43a3e1:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a3e8:	00 
  43a3e9:	e9 be a8 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a3ee:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a3f1:	c1 e8 07             	shr    $0x7,%eax
  43a3f4:	48 98                	cltq   
  43a3f6:	0f b6 c0             	movzbl %al,%eax
  43a3f9:	48 c1 e0 04          	shl    $0x4,%rax
  43a3fd:	48 89 c2             	mov    %rax,%rdx
  43a400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a404:	48 01 d0             	add    %rdx,%rax
  43a407:	48 89 85 78 f6 ff ff 	mov    %rax,-0x988(%rbp)
  43a40e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a411:	c1 e8 10             	shr    $0x10,%eax
  43a414:	25 ff 00 00 00       	and    $0xff,%eax
  43a419:	89 85 74 f6 ff ff    	mov    %eax,-0x98c(%rbp)
  43a41f:	8b 85 74 f6 ff ff    	mov    -0x98c(%rbp),%eax
  43a425:	48 98                	cltq   
  43a427:	48 c1 e0 04          	shl    $0x4,%rax
  43a42b:	48 89 c2             	mov    %rax,%rdx
  43a42e:	48 8b 85 78 f6 ff ff 	mov    -0x988(%rbp),%rax
  43a435:	48 01 c2             	add    %rax,%rdx
  43a438:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a43f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a443:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a44a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a44e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a452:	8b 95 74 f6 ff ff    	mov    -0x98c(%rbp),%edx
  43a458:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a45f:	89 d6                	mov    %edx,%esi
  43a461:	48 89 c7             	mov    %rax,%rdi
  43a464:	e8 a0 9a ff ff       	callq  433f09 <luaV_concat>
  43a469:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a470:	8b 40 28             	mov    0x28(%rax),%eax
  43a473:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a476:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a47d:	48 8b 40 18          	mov    0x18(%rax),%rax
  43a481:	48 8b 40 18          	mov    0x18(%rax),%rax
  43a485:	48 85 c0             	test   %rax,%rax
  43a488:	7e 41                	jle    43a4cb <luaV_execute+0x59e2>
  43a48a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a491:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a495:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a499:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a4a0:	48 8b 50 10          	mov    0x10(%rax),%rdx
  43a4a4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a4ab:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a4af:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a4b6:	48 89 c7             	mov    %rax,%rdi
  43a4b9:	e8 9a de fd ff       	callq  418358 <luaC_step>
  43a4be:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a4c5:	8b 40 28             	mov    0x28(%rax),%eax
  43a4c8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a4cb:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a4cf:	0f 95 c0             	setne  %al
  43a4d2:	0f b6 c0             	movzbl %al,%eax
  43a4d5:	48 85 c0             	test   %rax,%rax
  43a4d8:	74 2b                	je     43a505 <luaV_execute+0x5a1c>
  43a4da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a4de:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a4e5:	48 89 d6             	mov    %rdx,%rsi
  43a4e8:	48 89 c7             	mov    %rax,%rdi
  43a4eb:	e8 f1 68 fd ff       	callq  410de1 <luaG_traceexec>
  43a4f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a4f3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a4fa:	48 8b 00             	mov    (%rax),%rax
  43a4fd:	48 83 c0 10          	add    $0x10,%rax
  43a501:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a505:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a509:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a50d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a511:	8b 00                	mov    (%rax),%eax
  43a513:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a516:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a519:	83 e0 7f             	and    $0x7f,%eax
  43a51c:	89 c0                	mov    %eax,%eax
  43a51e:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a525:	00 
  43a526:	e9 81 a7 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a52b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a52e:	c1 e8 07             	shr    $0x7,%eax
  43a531:	48 98                	cltq   
  43a533:	0f b6 c0             	movzbl %al,%eax
  43a536:	48 c1 e0 04          	shl    $0x4,%rax
  43a53a:	48 89 c2             	mov    %rax,%rdx
  43a53d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a541:	48 01 d0             	add    %rdx,%rax
  43a544:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  43a54b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a552:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a556:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a55a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a561:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a565:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a56c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a570:	48 8b b5 68 f6 ff ff 	mov    -0x998(%rbp),%rsi
  43a577:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a57e:	b9 01 00 00 00       	mov    $0x1,%ecx
  43a583:	ba 00 00 00 00       	mov    $0x0,%edx
  43a588:	48 89 c7             	mov    %rax,%rdi
  43a58b:	e8 0d a0 fd ff       	callq  41459d <luaF_close>
  43a590:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a597:	8b 40 28             	mov    0x28(%rax),%eax
  43a59a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a59d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a5a1:	0f 95 c0             	setne  %al
  43a5a4:	0f b6 c0             	movzbl %al,%eax
  43a5a7:	48 85 c0             	test   %rax,%rax
  43a5aa:	74 2b                	je     43a5d7 <luaV_execute+0x5aee>
  43a5ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a5b0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a5b7:	48 89 d6             	mov    %rdx,%rsi
  43a5ba:	48 89 c7             	mov    %rax,%rdi
  43a5bd:	e8 1f 68 fd ff       	callq  410de1 <luaG_traceexec>
  43a5c2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a5c5:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a5cc:	48 8b 00             	mov    (%rax),%rax
  43a5cf:	48 83 c0 10          	add    $0x10,%rax
  43a5d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a5d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a5db:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a5df:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a5e3:	8b 00                	mov    (%rax),%eax
  43a5e5:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a5e8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a5eb:	83 e0 7f             	and    $0x7f,%eax
  43a5ee:	89 c0                	mov    %eax,%eax
  43a5f0:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a5f7:	00 
  43a5f8:	e9 af a6 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a5fd:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a600:	c1 e8 07             	shr    $0x7,%eax
  43a603:	48 98                	cltq   
  43a605:	0f b6 c0             	movzbl %al,%eax
  43a608:	48 c1 e0 04          	shl    $0x4,%rax
  43a60c:	48 89 c2             	mov    %rax,%rdx
  43a60f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a613:	48 01 d0             	add    %rdx,%rax
  43a616:	48 89 85 60 f6 ff ff 	mov    %rax,-0x9a0(%rbp)
  43a61d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a624:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a628:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a62c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a633:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a637:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a63e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a642:	48 8b 95 60 f6 ff ff 	mov    -0x9a0(%rbp),%rdx
  43a649:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a650:	48 89 d6             	mov    %rdx,%rsi
  43a653:	48 89 c7             	mov    %rax,%rdi
  43a656:	e8 d1 9c fd ff       	callq  41432c <luaF_newtbcupval>
  43a65b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a65f:	0f 95 c0             	setne  %al
  43a662:	0f b6 c0             	movzbl %al,%eax
  43a665:	48 85 c0             	test   %rax,%rax
  43a668:	74 2b                	je     43a695 <luaV_execute+0x5bac>
  43a66a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a66e:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a675:	48 89 d6             	mov    %rdx,%rsi
  43a678:	48 89 c7             	mov    %rax,%rdi
  43a67b:	e8 61 67 fd ff       	callq  410de1 <luaG_traceexec>
  43a680:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a683:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a68a:	48 8b 00             	mov    (%rax),%rax
  43a68d:	48 83 c0 10          	add    $0x10,%rax
  43a691:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a695:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a699:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a69d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a6a1:	8b 00                	mov    (%rax),%eax
  43a6a3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a6a6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a6a9:	83 e0 7f             	and    $0x7f,%eax
  43a6ac:	89 c0                	mov    %eax,%eax
  43a6ae:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a6b5:	00 
  43a6b6:	e9 f1 a5 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a6bb:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a6be:	c1 e8 07             	shr    $0x7,%eax
  43a6c1:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43a6c6:	48 98                	cltq   
  43a6c8:	48 c1 e0 02          	shl    $0x2,%rax
  43a6cc:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43a6d0:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a6d7:	8b 40 28             	mov    0x28(%rax),%eax
  43a6da:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a6dd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a6e1:	0f 95 c0             	setne  %al
  43a6e4:	0f b6 c0             	movzbl %al,%eax
  43a6e7:	48 85 c0             	test   %rax,%rax
  43a6ea:	74 2b                	je     43a717 <luaV_execute+0x5c2e>
  43a6ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a6f0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a6f7:	48 89 d6             	mov    %rdx,%rsi
  43a6fa:	48 89 c7             	mov    %rax,%rdi
  43a6fd:	e8 df 66 fd ff       	callq  410de1 <luaG_traceexec>
  43a702:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a705:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a70c:	48 8b 00             	mov    (%rax),%rax
  43a70f:	48 83 c0 10          	add    $0x10,%rax
  43a713:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a717:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a71b:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a71f:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a723:	8b 00                	mov    (%rax),%eax
  43a725:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a728:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a72b:	83 e0 7f             	and    $0x7f,%eax
  43a72e:	89 c0                	mov    %eax,%eax
  43a730:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a737:	00 
  43a738:	e9 6f a5 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a73d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a740:	c1 e8 07             	shr    $0x7,%eax
  43a743:	48 98                	cltq   
  43a745:	0f b6 c0             	movzbl %al,%eax
  43a748:	48 c1 e0 04          	shl    $0x4,%rax
  43a74c:	48 89 c2             	mov    %rax,%rdx
  43a74f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a753:	48 01 d0             	add    %rdx,%rax
  43a756:	48 89 85 58 f6 ff ff 	mov    %rax,-0x9a8(%rbp)
  43a75d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a760:	c1 e8 10             	shr    $0x10,%eax
  43a763:	48 98                	cltq   
  43a765:	0f b6 c0             	movzbl %al,%eax
  43a768:	48 c1 e0 04          	shl    $0x4,%rax
  43a76c:	48 89 c2             	mov    %rax,%rdx
  43a76f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a773:	48 01 d0             	add    %rdx,%rax
  43a776:	48 89 85 50 f6 ff ff 	mov    %rax,-0x9b0(%rbp)
  43a77d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a788:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a78c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a793:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a797:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a79e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a7a2:	48 8b 8d 58 f6 ff ff 	mov    -0x9a8(%rbp),%rcx
  43a7a9:	48 8b 95 50 f6 ff ff 	mov    -0x9b0(%rbp),%rdx
  43a7b0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a7b7:	48 89 ce             	mov    %rcx,%rsi
  43a7ba:	48 89 c7             	mov    %rax,%rdi
  43a7bd:	e8 45 92 ff ff       	callq  433a07 <luaV_equalobj>
  43a7c2:	89 85 4c f6 ff ff    	mov    %eax,-0x9b4(%rbp)
  43a7c8:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a7cf:	8b 40 28             	mov    0x28(%rax),%eax
  43a7d2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a7d5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a7d8:	c1 e8 0f             	shr    $0xf,%eax
  43a7db:	83 e0 01             	and    $0x1,%eax
  43a7de:	39 85 4c f6 ff ff    	cmp    %eax,-0x9b4(%rbp)
  43a7e4:	74 07                	je     43a7ed <luaV_execute+0x5d04>
  43a7e6:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43a7eb:	eb 35                	jmp    43a822 <luaV_execute+0x5d39>
  43a7ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a7f1:	8b 00                	mov    (%rax),%eax
  43a7f3:	89 85 48 f6 ff ff    	mov    %eax,-0x9b8(%rbp)
  43a7f9:	8b 85 48 f6 ff ff    	mov    -0x9b8(%rbp),%eax
  43a7ff:	c1 e8 07             	shr    $0x7,%eax
  43a802:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43a807:	48 98                	cltq   
  43a809:	48 83 c0 01          	add    $0x1,%rax
  43a80d:	48 c1 e0 02          	shl    $0x2,%rax
  43a811:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43a815:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a81c:	8b 40 28             	mov    0x28(%rax),%eax
  43a81f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a822:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43a826:	0f 95 c0             	setne  %al
  43a829:	0f b6 c0             	movzbl %al,%eax
  43a82c:	48 85 c0             	test   %rax,%rax
  43a82f:	74 2b                	je     43a85c <luaV_execute+0x5d73>
  43a831:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a835:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a83c:	48 89 d6             	mov    %rdx,%rsi
  43a83f:	48 89 c7             	mov    %rax,%rdi
  43a842:	e8 9a 65 fd ff       	callq  410de1 <luaG_traceexec>
  43a847:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a84a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a851:	48 8b 00             	mov    (%rax),%rax
  43a854:	48 83 c0 10          	add    $0x10,%rax
  43a858:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a85c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a860:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43a864:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43a868:	8b 00                	mov    (%rax),%eax
  43a86a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43a86d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a870:	83 e0 7f             	and    $0x7f,%eax
  43a873:	89 c0                	mov    %eax,%eax
  43a875:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43a87c:	00 
  43a87d:	e9 2a a4 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43a882:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a885:	c1 e8 07             	shr    $0x7,%eax
  43a888:	48 98                	cltq   
  43a88a:	0f b6 c0             	movzbl %al,%eax
  43a88d:	48 c1 e0 04          	shl    $0x4,%rax
  43a891:	48 89 c2             	mov    %rax,%rdx
  43a894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a898:	48 01 d0             	add    %rdx,%rax
  43a89b:	48 89 85 40 f6 ff ff 	mov    %rax,-0x9c0(%rbp)
  43a8a2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a8a5:	c1 e8 10             	shr    $0x10,%eax
  43a8a8:	48 98                	cltq   
  43a8aa:	0f b6 c0             	movzbl %al,%eax
  43a8ad:	48 c1 e0 04          	shl    $0x4,%rax
  43a8b1:	48 89 c2             	mov    %rax,%rdx
  43a8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43a8b8:	48 01 d0             	add    %rdx,%rax
  43a8bb:	48 89 85 38 f6 ff ff 	mov    %rax,-0x9c8(%rbp)
  43a8c2:	48 8b 85 40 f6 ff ff 	mov    -0x9c0(%rbp),%rax
  43a8c9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a8cd:	3c 03                	cmp    $0x3,%al
  43a8cf:	75 50                	jne    43a921 <luaV_execute+0x5e38>
  43a8d1:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  43a8d8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a8dc:	3c 03                	cmp    $0x3,%al
  43a8de:	75 41                	jne    43a921 <luaV_execute+0x5e38>
  43a8e0:	48 8b 85 40 f6 ff ff 	mov    -0x9c0(%rbp),%rax
  43a8e7:	48 8b 00             	mov    (%rax),%rax
  43a8ea:	48 89 85 30 f6 ff ff 	mov    %rax,-0x9d0(%rbp)
  43a8f1:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  43a8f8:	48 8b 00             	mov    (%rax),%rax
  43a8fb:	48 89 85 28 f6 ff ff 	mov    %rax,-0x9d8(%rbp)
  43a902:	48 8b 85 30 f6 ff ff 	mov    -0x9d0(%rbp),%rax
  43a909:	48 3b 85 28 f6 ff ff 	cmp    -0x9d8(%rbp),%rax
  43a910:	0f 9c c0             	setl   %al
  43a913:	0f b6 c0             	movzbl %al,%eax
  43a916:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  43a91c:	e9 a5 00 00 00       	jmpq   43a9c6 <luaV_execute+0x5edd>
  43a921:	48 8b 85 40 f6 ff ff 	mov    -0x9c0(%rbp),%rax
  43a928:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a92c:	0f b6 c0             	movzbl %al,%eax
  43a92f:	83 e0 0f             	and    $0xf,%eax
  43a932:	83 f8 03             	cmp    $0x3,%eax
  43a935:	75 37                	jne    43a96e <luaV_execute+0x5e85>
  43a937:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  43a93e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43a942:	0f b6 c0             	movzbl %al,%eax
  43a945:	83 e0 0f             	and    $0xf,%eax
  43a948:	83 f8 03             	cmp    $0x3,%eax
  43a94b:	75 21                	jne    43a96e <luaV_execute+0x5e85>
  43a94d:	48 8b 85 40 f6 ff ff 	mov    -0x9c0(%rbp),%rax
  43a954:	48 8b 95 38 f6 ff ff 	mov    -0x9c8(%rbp),%rdx
  43a95b:	48 89 d6             	mov    %rdx,%rsi
  43a95e:	48 89 c7             	mov    %rax,%rdi
  43a961:	e8 9d 8d ff ff       	callq  433703 <LTnum>
  43a966:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  43a96c:	eb 58                	jmp    43a9c6 <luaV_execute+0x5edd>
  43a96e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a975:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a979:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43a97d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a984:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43a988:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a98f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43a993:	48 8b 8d 40 f6 ff ff 	mov    -0x9c0(%rbp),%rcx
  43a99a:	48 8b 95 38 f6 ff ff 	mov    -0x9c8(%rbp),%rdx
  43a9a1:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43a9a8:	48 89 ce             	mov    %rcx,%rsi
  43a9ab:	48 89 c7             	mov    %rax,%rdi
  43a9ae:	e8 90 8e ff ff       	callq  433843 <lessthanothers>
  43a9b3:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  43a9b9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43a9c0:	8b 40 28             	mov    0x28(%rax),%eax
  43a9c3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43a9c6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43a9c9:	c1 e8 0f             	shr    $0xf,%eax
  43a9cc:	83 e0 01             	and    $0x1,%eax
  43a9cf:	39 85 9c fe ff ff    	cmp    %eax,-0x164(%rbp)
  43a9d5:	74 07                	je     43a9de <luaV_execute+0x5ef5>
  43a9d7:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43a9dc:	eb 35                	jmp    43aa13 <luaV_execute+0x5f2a>
  43a9de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43a9e2:	8b 00                	mov    (%rax),%eax
  43a9e4:	89 85 24 f6 ff ff    	mov    %eax,-0x9dc(%rbp)
  43a9ea:	8b 85 24 f6 ff ff    	mov    -0x9dc(%rbp),%eax
  43a9f0:	c1 e8 07             	shr    $0x7,%eax
  43a9f3:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43a9f8:	48 98                	cltq   
  43a9fa:	48 83 c0 01          	add    $0x1,%rax
  43a9fe:	48 c1 e0 02          	shl    $0x2,%rax
  43aa02:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43aa06:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43aa0d:	8b 40 28             	mov    0x28(%rax),%eax
  43aa10:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43aa13:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43aa17:	0f 95 c0             	setne  %al
  43aa1a:	0f b6 c0             	movzbl %al,%eax
  43aa1d:	48 85 c0             	test   %rax,%rax
  43aa20:	74 2b                	je     43aa4d <luaV_execute+0x5f64>
  43aa22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43aa26:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43aa2d:	48 89 d6             	mov    %rdx,%rsi
  43aa30:	48 89 c7             	mov    %rax,%rdi
  43aa33:	e8 a9 63 fd ff       	callq  410de1 <luaG_traceexec>
  43aa38:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43aa3b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43aa42:	48 8b 00             	mov    (%rax),%rax
  43aa45:	48 83 c0 10          	add    $0x10,%rax
  43aa49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43aa4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43aa51:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43aa55:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43aa59:	8b 00                	mov    (%rax),%eax
  43aa5b:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43aa5e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aa61:	83 e0 7f             	and    $0x7f,%eax
  43aa64:	89 c0                	mov    %eax,%eax
  43aa66:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43aa6d:	00 
  43aa6e:	e9 39 a2 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43aa73:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aa76:	c1 e8 07             	shr    $0x7,%eax
  43aa79:	48 98                	cltq   
  43aa7b:	0f b6 c0             	movzbl %al,%eax
  43aa7e:	48 c1 e0 04          	shl    $0x4,%rax
  43aa82:	48 89 c2             	mov    %rax,%rdx
  43aa85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43aa89:	48 01 d0             	add    %rdx,%rax
  43aa8c:	48 89 85 18 f6 ff ff 	mov    %rax,-0x9e8(%rbp)
  43aa93:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aa96:	c1 e8 10             	shr    $0x10,%eax
  43aa99:	48 98                	cltq   
  43aa9b:	0f b6 c0             	movzbl %al,%eax
  43aa9e:	48 c1 e0 04          	shl    $0x4,%rax
  43aaa2:	48 89 c2             	mov    %rax,%rdx
  43aaa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43aaa9:	48 01 d0             	add    %rdx,%rax
  43aaac:	48 89 85 10 f6 ff ff 	mov    %rax,-0x9f0(%rbp)
  43aab3:	48 8b 85 18 f6 ff ff 	mov    -0x9e8(%rbp),%rax
  43aaba:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43aabe:	3c 03                	cmp    $0x3,%al
  43aac0:	75 50                	jne    43ab12 <luaV_execute+0x6029>
  43aac2:	48 8b 85 10 f6 ff ff 	mov    -0x9f0(%rbp),%rax
  43aac9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43aacd:	3c 03                	cmp    $0x3,%al
  43aacf:	75 41                	jne    43ab12 <luaV_execute+0x6029>
  43aad1:	48 8b 85 18 f6 ff ff 	mov    -0x9e8(%rbp),%rax
  43aad8:	48 8b 00             	mov    (%rax),%rax
  43aadb:	48 89 85 08 f6 ff ff 	mov    %rax,-0x9f8(%rbp)
  43aae2:	48 8b 85 10 f6 ff ff 	mov    -0x9f0(%rbp),%rax
  43aae9:	48 8b 00             	mov    (%rax),%rax
  43aaec:	48 89 85 00 f6 ff ff 	mov    %rax,-0xa00(%rbp)
  43aaf3:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  43aafa:	48 3b 85 00 f6 ff ff 	cmp    -0xa00(%rbp),%rax
  43ab01:	0f 9e c0             	setle  %al
  43ab04:	0f b6 c0             	movzbl %al,%eax
  43ab07:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  43ab0d:	e9 a5 00 00 00       	jmpq   43abb7 <luaV_execute+0x60ce>
  43ab12:	48 8b 85 18 f6 ff ff 	mov    -0x9e8(%rbp),%rax
  43ab19:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43ab1d:	0f b6 c0             	movzbl %al,%eax
  43ab20:	83 e0 0f             	and    $0xf,%eax
  43ab23:	83 f8 03             	cmp    $0x3,%eax
  43ab26:	75 37                	jne    43ab5f <luaV_execute+0x6076>
  43ab28:	48 8b 85 10 f6 ff ff 	mov    -0x9f0(%rbp),%rax
  43ab2f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43ab33:	0f b6 c0             	movzbl %al,%eax
  43ab36:	83 e0 0f             	and    $0xf,%eax
  43ab39:	83 f8 03             	cmp    $0x3,%eax
  43ab3c:	75 21                	jne    43ab5f <luaV_execute+0x6076>
  43ab3e:	48 8b 85 18 f6 ff ff 	mov    -0x9e8(%rbp),%rax
  43ab45:	48 8b 95 10 f6 ff ff 	mov    -0x9f0(%rbp),%rdx
  43ab4c:	48 89 d6             	mov    %rdx,%rsi
  43ab4f:	48 89 c7             	mov    %rax,%rdi
  43ab52:	e8 4c 8c ff ff       	callq  4337a3 <LEnum>
  43ab57:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  43ab5d:	eb 58                	jmp    43abb7 <luaV_execute+0x60ce>
  43ab5f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ab66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ab6a:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43ab6e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ab75:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43ab79:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ab80:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43ab84:	48 8b 8d 18 f6 ff ff 	mov    -0x9e8(%rbp),%rcx
  43ab8b:	48 8b 95 10 f6 ff ff 	mov    -0x9f0(%rbp),%rdx
  43ab92:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ab99:	48 89 ce             	mov    %rcx,%rsi
  43ab9c:	48 89 c7             	mov    %rax,%rdi
  43ab9f:	e8 80 8d ff ff       	callq  433924 <lessequalothers>
  43aba4:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  43abaa:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43abb1:	8b 40 28             	mov    0x28(%rax),%eax
  43abb4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43abb7:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43abba:	c1 e8 0f             	shr    $0xf,%eax
  43abbd:	83 e0 01             	and    $0x1,%eax
  43abc0:	39 85 98 fe ff ff    	cmp    %eax,-0x168(%rbp)
  43abc6:	74 07                	je     43abcf <luaV_execute+0x60e6>
  43abc8:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43abcd:	eb 35                	jmp    43ac04 <luaV_execute+0x611b>
  43abcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43abd3:	8b 00                	mov    (%rax),%eax
  43abd5:	89 85 fc f5 ff ff    	mov    %eax,-0xa04(%rbp)
  43abdb:	8b 85 fc f5 ff ff    	mov    -0xa04(%rbp),%eax
  43abe1:	c1 e8 07             	shr    $0x7,%eax
  43abe4:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43abe9:	48 98                	cltq   
  43abeb:	48 83 c0 01          	add    $0x1,%rax
  43abef:	48 c1 e0 02          	shl    $0x2,%rax
  43abf3:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43abf7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43abfe:	8b 40 28             	mov    0x28(%rax),%eax
  43ac01:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ac04:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43ac08:	0f 95 c0             	setne  %al
  43ac0b:	0f b6 c0             	movzbl %al,%eax
  43ac0e:	48 85 c0             	test   %rax,%rax
  43ac11:	74 2b                	je     43ac3e <luaV_execute+0x6155>
  43ac13:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ac17:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ac1e:	48 89 d6             	mov    %rdx,%rsi
  43ac21:	48 89 c7             	mov    %rax,%rdi
  43ac24:	e8 b8 61 fd ff       	callq  410de1 <luaG_traceexec>
  43ac29:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ac2c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ac33:	48 8b 00             	mov    (%rax),%rax
  43ac36:	48 83 c0 10          	add    $0x10,%rax
  43ac3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43ac3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ac42:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43ac46:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43ac4a:	8b 00                	mov    (%rax),%eax
  43ac4c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43ac4f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ac52:	83 e0 7f             	and    $0x7f,%eax
  43ac55:	89 c0                	mov    %eax,%eax
  43ac57:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43ac5e:	00 
  43ac5f:	e9 48 a0 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43ac64:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ac67:	c1 e8 07             	shr    $0x7,%eax
  43ac6a:	48 98                	cltq   
  43ac6c:	0f b6 c0             	movzbl %al,%eax
  43ac6f:	48 c1 e0 04          	shl    $0x4,%rax
  43ac73:	48 89 c2             	mov    %rax,%rdx
  43ac76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43ac7a:	48 01 d0             	add    %rdx,%rax
  43ac7d:	48 89 85 f0 f5 ff ff 	mov    %rax,-0xa10(%rbp)
  43ac84:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ac87:	c1 e8 10             	shr    $0x10,%eax
  43ac8a:	48 98                	cltq   
  43ac8c:	0f b6 c0             	movzbl %al,%eax
  43ac8f:	48 c1 e0 04          	shl    $0x4,%rax
  43ac93:	48 89 c2             	mov    %rax,%rdx
  43ac96:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  43ac9d:	48 01 d0             	add    %rdx,%rax
  43aca0:	48 89 85 e8 f5 ff ff 	mov    %rax,-0xa18(%rbp)
  43aca7:	48 8b 85 f0 f5 ff ff 	mov    -0xa10(%rbp),%rax
  43acae:	48 8b 95 e8 f5 ff ff 	mov    -0xa18(%rbp),%rdx
  43acb5:	48 89 c6             	mov    %rax,%rsi
  43acb8:	bf 00 00 00 00       	mov    $0x0,%edi
  43acbd:	e8 45 8d ff ff       	callq  433a07 <luaV_equalobj>
  43acc2:	89 85 e4 f5 ff ff    	mov    %eax,-0xa1c(%rbp)
  43acc8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43accb:	c1 e8 0f             	shr    $0xf,%eax
  43acce:	83 e0 01             	and    $0x1,%eax
  43acd1:	39 85 e4 f5 ff ff    	cmp    %eax,-0xa1c(%rbp)
  43acd7:	74 07                	je     43ace0 <luaV_execute+0x61f7>
  43acd9:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43acde:	eb 35                	jmp    43ad15 <luaV_execute+0x622c>
  43ace0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ace4:	8b 00                	mov    (%rax),%eax
  43ace6:	89 85 e0 f5 ff ff    	mov    %eax,-0xa20(%rbp)
  43acec:	8b 85 e0 f5 ff ff    	mov    -0xa20(%rbp),%eax
  43acf2:	c1 e8 07             	shr    $0x7,%eax
  43acf5:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43acfa:	48 98                	cltq   
  43acfc:	48 83 c0 01          	add    $0x1,%rax
  43ad00:	48 c1 e0 02          	shl    $0x2,%rax
  43ad04:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43ad08:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ad0f:	8b 40 28             	mov    0x28(%rax),%eax
  43ad12:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ad15:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43ad19:	0f 95 c0             	setne  %al
  43ad1c:	0f b6 c0             	movzbl %al,%eax
  43ad1f:	48 85 c0             	test   %rax,%rax
  43ad22:	74 2b                	je     43ad4f <luaV_execute+0x6266>
  43ad24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ad28:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ad2f:	48 89 d6             	mov    %rdx,%rsi
  43ad32:	48 89 c7             	mov    %rax,%rdi
  43ad35:	e8 a7 60 fd ff       	callq  410de1 <luaG_traceexec>
  43ad3a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ad3d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ad44:	48 8b 00             	mov    (%rax),%rax
  43ad47:	48 83 c0 10          	add    $0x10,%rax
  43ad4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43ad4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ad53:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43ad57:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43ad5b:	8b 00                	mov    (%rax),%eax
  43ad5d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43ad60:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ad63:	83 e0 7f             	and    $0x7f,%eax
  43ad66:	89 c0                	mov    %eax,%eax
  43ad68:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43ad6f:	00 
  43ad70:	e9 37 9f ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43ad75:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ad78:	c1 e8 07             	shr    $0x7,%eax
  43ad7b:	48 98                	cltq   
  43ad7d:	0f b6 c0             	movzbl %al,%eax
  43ad80:	48 c1 e0 04          	shl    $0x4,%rax
  43ad84:	48 89 c2             	mov    %rax,%rdx
  43ad87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43ad8b:	48 01 d0             	add    %rdx,%rax
  43ad8e:	48 89 85 d8 f5 ff ff 	mov    %rax,-0xa28(%rbp)
  43ad95:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ad98:	c1 e8 10             	shr    $0x10,%eax
  43ad9b:	0f b6 c0             	movzbl %al,%eax
  43ad9e:	83 e8 7f             	sub    $0x7f,%eax
  43ada1:	89 85 d4 f5 ff ff    	mov    %eax,-0xa2c(%rbp)
  43ada7:	48 8b 85 d8 f5 ff ff 	mov    -0xa28(%rbp),%rax
  43adae:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43adb2:	3c 03                	cmp    $0x3,%al
  43adb4:	75 23                	jne    43add9 <luaV_execute+0x62f0>
  43adb6:	48 8b 85 d8 f5 ff ff 	mov    -0xa28(%rbp),%rax
  43adbd:	48 8b 10             	mov    (%rax),%rdx
  43adc0:	8b 85 d4 f5 ff ff    	mov    -0xa2c(%rbp),%eax
  43adc6:	48 98                	cltq   
  43adc8:	48 39 c2             	cmp    %rax,%rdx
  43adcb:	0f 94 c0             	sete   %al
  43adce:	0f b6 c0             	movzbl %al,%eax
  43add1:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  43add7:	eb 4a                	jmp    43ae23 <luaV_execute+0x633a>
  43add9:	48 8b 85 d8 f5 ff ff 	mov    -0xa28(%rbp),%rax
  43ade0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43ade4:	3c 13                	cmp    $0x13,%al
  43ade6:	75 31                	jne    43ae19 <luaV_execute+0x6330>
  43ade8:	48 8b 85 d8 f5 ff ff 	mov    -0xa28(%rbp),%rax
  43adef:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43adf3:	f2 0f 2a 8d d4 f5 ff 	cvtsi2sdl -0xa2c(%rbp),%xmm1
  43adfa:	ff 
  43adfb:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  43adff:	0f 9b c0             	setnp  %al
  43ae02:	ba 00 00 00 00       	mov    $0x0,%edx
  43ae07:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  43ae0b:	0f 45 c2             	cmovne %edx,%eax
  43ae0e:	0f b6 c0             	movzbl %al,%eax
  43ae11:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  43ae17:	eb 0a                	jmp    43ae23 <luaV_execute+0x633a>
  43ae19:	c7 85 94 fe ff ff 00 	movl   $0x0,-0x16c(%rbp)
  43ae20:	00 00 00 
  43ae23:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ae26:	c1 e8 0f             	shr    $0xf,%eax
  43ae29:	83 e0 01             	and    $0x1,%eax
  43ae2c:	39 85 94 fe ff ff    	cmp    %eax,-0x16c(%rbp)
  43ae32:	74 07                	je     43ae3b <luaV_execute+0x6352>
  43ae34:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43ae39:	eb 35                	jmp    43ae70 <luaV_execute+0x6387>
  43ae3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ae3f:	8b 00                	mov    (%rax),%eax
  43ae41:	89 85 d0 f5 ff ff    	mov    %eax,-0xa30(%rbp)
  43ae47:	8b 85 d0 f5 ff ff    	mov    -0xa30(%rbp),%eax
  43ae4d:	c1 e8 07             	shr    $0x7,%eax
  43ae50:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43ae55:	48 98                	cltq   
  43ae57:	48 83 c0 01          	add    $0x1,%rax
  43ae5b:	48 c1 e0 02          	shl    $0x2,%rax
  43ae5f:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43ae63:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ae6a:	8b 40 28             	mov    0x28(%rax),%eax
  43ae6d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ae70:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43ae74:	0f 95 c0             	setne  %al
  43ae77:	0f b6 c0             	movzbl %al,%eax
  43ae7a:	48 85 c0             	test   %rax,%rax
  43ae7d:	74 2b                	je     43aeaa <luaV_execute+0x63c1>
  43ae7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ae83:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ae8a:	48 89 d6             	mov    %rdx,%rsi
  43ae8d:	48 89 c7             	mov    %rax,%rdi
  43ae90:	e8 4c 5f fd ff       	callq  410de1 <luaG_traceexec>
  43ae95:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ae98:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ae9f:	48 8b 00             	mov    (%rax),%rax
  43aea2:	48 83 c0 10          	add    $0x10,%rax
  43aea6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43aeaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43aeae:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43aeb2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43aeb6:	8b 00                	mov    (%rax),%eax
  43aeb8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43aebb:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aebe:	83 e0 7f             	and    $0x7f,%eax
  43aec1:	89 c0                	mov    %eax,%eax
  43aec3:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43aeca:	00 
  43aecb:	e9 dc 9d ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43aed0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aed3:	c1 e8 07             	shr    $0x7,%eax
  43aed6:	48 98                	cltq   
  43aed8:	0f b6 c0             	movzbl %al,%eax
  43aedb:	48 c1 e0 04          	shl    $0x4,%rax
  43aedf:	48 89 c2             	mov    %rax,%rdx
  43aee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43aee6:	48 01 d0             	add    %rdx,%rax
  43aee9:	48 89 85 c8 f5 ff ff 	mov    %rax,-0xa38(%rbp)
  43aef0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43aef3:	c1 e8 10             	shr    $0x10,%eax
  43aef6:	0f b6 c0             	movzbl %al,%eax
  43aef9:	83 e8 7f             	sub    $0x7f,%eax
  43aefc:	89 85 c4 f5 ff ff    	mov    %eax,-0xa3c(%rbp)
  43af02:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  43af09:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43af0d:	3c 03                	cmp    $0x3,%al
  43af0f:	75 26                	jne    43af37 <luaV_execute+0x644e>
  43af11:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  43af18:	48 8b 10             	mov    (%rax),%rdx
  43af1b:	8b 85 c4 f5 ff ff    	mov    -0xa3c(%rbp),%eax
  43af21:	48 98                	cltq   
  43af23:	48 39 c2             	cmp    %rax,%rdx
  43af26:	0f 9c c0             	setl   %al
  43af29:	0f b6 c0             	movzbl %al,%eax
  43af2c:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  43af32:	e9 c4 00 00 00       	jmpq   43affb <luaV_execute+0x6512>
  43af37:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  43af3e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43af42:	3c 13                	cmp    $0x13,%al
  43af44:	75 41                	jne    43af87 <luaV_execute+0x649e>
  43af46:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  43af4d:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43af51:	f2 0f 11 85 b8 f5 ff 	movsd  %xmm0,-0xa48(%rbp)
  43af58:	ff 
  43af59:	f2 0f 2a 85 c4 f5 ff 	cvtsi2sdl -0xa3c(%rbp),%xmm0
  43af60:	ff 
  43af61:	f2 0f 11 85 b0 f5 ff 	movsd  %xmm0,-0xa50(%rbp)
  43af68:	ff 
  43af69:	f2 0f 10 85 b0 f5 ff 	movsd  -0xa50(%rbp),%xmm0
  43af70:	ff 
  43af71:	66 0f 2f 85 b8 f5 ff 	comisd -0xa48(%rbp),%xmm0
  43af78:	ff 
  43af79:	0f 97 c0             	seta   %al
  43af7c:	0f b6 c0             	movzbl %al,%eax
  43af7f:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  43af85:	eb 74                	jmp    43affb <luaV_execute+0x6512>
  43af87:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43af8a:	c1 e8 18             	shr    $0x18,%eax
  43af8d:	89 85 ac f5 ff ff    	mov    %eax,-0xa54(%rbp)
  43af93:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43af9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43af9e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43afa2:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43afa9:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43afad:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43afb4:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43afb8:	48 8b b5 c8 f5 ff ff 	mov    -0xa38(%rbp),%rsi
  43afbf:	8b 8d ac f5 ff ff    	mov    -0xa54(%rbp),%ecx
  43afc5:	8b 95 c4 f5 ff ff    	mov    -0xa3c(%rbp),%edx
  43afcb:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43afd2:	41 b9 14 00 00 00    	mov    $0x14,%r9d
  43afd8:	41 89 c8             	mov    %ecx,%r8d
  43afdb:	b9 00 00 00 00       	mov    $0x0,%ecx
  43afe0:	48 89 c7             	mov    %rax,%rdi
  43afe3:	e8 c9 45 ff ff       	callq  42f5b1 <luaT_callorderiTM>
  43afe8:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  43afee:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43aff5:	8b 40 28             	mov    0x28(%rax),%eax
  43aff8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43affb:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43affe:	c1 e8 0f             	shr    $0xf,%eax
  43b001:	83 e0 01             	and    $0x1,%eax
  43b004:	39 85 90 fe ff ff    	cmp    %eax,-0x170(%rbp)
  43b00a:	74 07                	je     43b013 <luaV_execute+0x652a>
  43b00c:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b011:	eb 35                	jmp    43b048 <luaV_execute+0x655f>
  43b013:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b017:	8b 00                	mov    (%rax),%eax
  43b019:	89 85 a8 f5 ff ff    	mov    %eax,-0xa58(%rbp)
  43b01f:	8b 85 a8 f5 ff ff    	mov    -0xa58(%rbp),%eax
  43b025:	c1 e8 07             	shr    $0x7,%eax
  43b028:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b02d:	48 98                	cltq   
  43b02f:	48 83 c0 01          	add    $0x1,%rax
  43b033:	48 c1 e0 02          	shl    $0x2,%rax
  43b037:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b03b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b042:	8b 40 28             	mov    0x28(%rax),%eax
  43b045:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b048:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b04c:	0f 95 c0             	setne  %al
  43b04f:	0f b6 c0             	movzbl %al,%eax
  43b052:	48 85 c0             	test   %rax,%rax
  43b055:	74 2b                	je     43b082 <luaV_execute+0x6599>
  43b057:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b05b:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b062:	48 89 d6             	mov    %rdx,%rsi
  43b065:	48 89 c7             	mov    %rax,%rdi
  43b068:	e8 74 5d fd ff       	callq  410de1 <luaG_traceexec>
  43b06d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b070:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b077:	48 8b 00             	mov    (%rax),%rax
  43b07a:	48 83 c0 10          	add    $0x10,%rax
  43b07e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b082:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b086:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b08a:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b08e:	8b 00                	mov    (%rax),%eax
  43b090:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b093:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b096:	83 e0 7f             	and    $0x7f,%eax
  43b099:	89 c0                	mov    %eax,%eax
  43b09b:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b0a2:	00 
  43b0a3:	e9 04 9c ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b0a8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b0ab:	c1 e8 07             	shr    $0x7,%eax
  43b0ae:	48 98                	cltq   
  43b0b0:	0f b6 c0             	movzbl %al,%eax
  43b0b3:	48 c1 e0 04          	shl    $0x4,%rax
  43b0b7:	48 89 c2             	mov    %rax,%rdx
  43b0ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b0be:	48 01 d0             	add    %rdx,%rax
  43b0c1:	48 89 85 a0 f5 ff ff 	mov    %rax,-0xa60(%rbp)
  43b0c8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b0cb:	c1 e8 10             	shr    $0x10,%eax
  43b0ce:	0f b6 c0             	movzbl %al,%eax
  43b0d1:	83 e8 7f             	sub    $0x7f,%eax
  43b0d4:	89 85 9c f5 ff ff    	mov    %eax,-0xa64(%rbp)
  43b0da:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  43b0e1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b0e5:	3c 03                	cmp    $0x3,%al
  43b0e7:	75 26                	jne    43b10f <luaV_execute+0x6626>
  43b0e9:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  43b0f0:	48 8b 10             	mov    (%rax),%rdx
  43b0f3:	8b 85 9c f5 ff ff    	mov    -0xa64(%rbp),%eax
  43b0f9:	48 98                	cltq   
  43b0fb:	48 39 c2             	cmp    %rax,%rdx
  43b0fe:	0f 9e c0             	setle  %al
  43b101:	0f b6 c0             	movzbl %al,%eax
  43b104:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
  43b10a:	e9 c4 00 00 00       	jmpq   43b1d3 <luaV_execute+0x66ea>
  43b10f:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  43b116:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b11a:	3c 13                	cmp    $0x13,%al
  43b11c:	75 41                	jne    43b15f <luaV_execute+0x6676>
  43b11e:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  43b125:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43b129:	f2 0f 11 85 90 f5 ff 	movsd  %xmm0,-0xa70(%rbp)
  43b130:	ff 
  43b131:	f2 0f 2a 85 9c f5 ff 	cvtsi2sdl -0xa64(%rbp),%xmm0
  43b138:	ff 
  43b139:	f2 0f 11 85 88 f5 ff 	movsd  %xmm0,-0xa78(%rbp)
  43b140:	ff 
  43b141:	f2 0f 10 85 88 f5 ff 	movsd  -0xa78(%rbp),%xmm0
  43b148:	ff 
  43b149:	66 0f 2f 85 90 f5 ff 	comisd -0xa70(%rbp),%xmm0
  43b150:	ff 
  43b151:	0f 93 c0             	setae  %al
  43b154:	0f b6 c0             	movzbl %al,%eax
  43b157:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
  43b15d:	eb 74                	jmp    43b1d3 <luaV_execute+0x66ea>
  43b15f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b162:	c1 e8 18             	shr    $0x18,%eax
  43b165:	89 85 84 f5 ff ff    	mov    %eax,-0xa7c(%rbp)
  43b16b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b172:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b176:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43b17a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b181:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43b185:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b18c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43b190:	48 8b b5 a0 f5 ff ff 	mov    -0xa60(%rbp),%rsi
  43b197:	8b 8d 84 f5 ff ff    	mov    -0xa7c(%rbp),%ecx
  43b19d:	8b 95 9c f5 ff ff    	mov    -0xa64(%rbp),%edx
  43b1a3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b1aa:	41 b9 15 00 00 00    	mov    $0x15,%r9d
  43b1b0:	41 89 c8             	mov    %ecx,%r8d
  43b1b3:	b9 00 00 00 00       	mov    $0x0,%ecx
  43b1b8:	48 89 c7             	mov    %rax,%rdi
  43b1bb:	e8 f1 43 ff ff       	callq  42f5b1 <luaT_callorderiTM>
  43b1c0:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
  43b1c6:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b1cd:	8b 40 28             	mov    0x28(%rax),%eax
  43b1d0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b1d3:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b1d6:	c1 e8 0f             	shr    $0xf,%eax
  43b1d9:	83 e0 01             	and    $0x1,%eax
  43b1dc:	39 85 8c fe ff ff    	cmp    %eax,-0x174(%rbp)
  43b1e2:	74 07                	je     43b1eb <luaV_execute+0x6702>
  43b1e4:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b1e9:	eb 35                	jmp    43b220 <luaV_execute+0x6737>
  43b1eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b1ef:	8b 00                	mov    (%rax),%eax
  43b1f1:	89 85 80 f5 ff ff    	mov    %eax,-0xa80(%rbp)
  43b1f7:	8b 85 80 f5 ff ff    	mov    -0xa80(%rbp),%eax
  43b1fd:	c1 e8 07             	shr    $0x7,%eax
  43b200:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b205:	48 98                	cltq   
  43b207:	48 83 c0 01          	add    $0x1,%rax
  43b20b:	48 c1 e0 02          	shl    $0x2,%rax
  43b20f:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b213:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b21a:	8b 40 28             	mov    0x28(%rax),%eax
  43b21d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b220:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b224:	0f 95 c0             	setne  %al
  43b227:	0f b6 c0             	movzbl %al,%eax
  43b22a:	48 85 c0             	test   %rax,%rax
  43b22d:	74 2b                	je     43b25a <luaV_execute+0x6771>
  43b22f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b233:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b23a:	48 89 d6             	mov    %rdx,%rsi
  43b23d:	48 89 c7             	mov    %rax,%rdi
  43b240:	e8 9c 5b fd ff       	callq  410de1 <luaG_traceexec>
  43b245:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b248:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b24f:	48 8b 00             	mov    (%rax),%rax
  43b252:	48 83 c0 10          	add    $0x10,%rax
  43b256:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b25a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b25e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b262:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b266:	8b 00                	mov    (%rax),%eax
  43b268:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b26b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b26e:	83 e0 7f             	and    $0x7f,%eax
  43b271:	89 c0                	mov    %eax,%eax
  43b273:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b27a:	00 
  43b27b:	e9 2c 9a ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b280:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b283:	c1 e8 07             	shr    $0x7,%eax
  43b286:	48 98                	cltq   
  43b288:	0f b6 c0             	movzbl %al,%eax
  43b28b:	48 c1 e0 04          	shl    $0x4,%rax
  43b28f:	48 89 c2             	mov    %rax,%rdx
  43b292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b296:	48 01 d0             	add    %rdx,%rax
  43b299:	48 89 85 78 f5 ff ff 	mov    %rax,-0xa88(%rbp)
  43b2a0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b2a3:	c1 e8 10             	shr    $0x10,%eax
  43b2a6:	0f b6 c0             	movzbl %al,%eax
  43b2a9:	83 e8 7f             	sub    $0x7f,%eax
  43b2ac:	89 85 74 f5 ff ff    	mov    %eax,-0xa8c(%rbp)
  43b2b2:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  43b2b9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b2bd:	3c 03                	cmp    $0x3,%al
  43b2bf:	75 26                	jne    43b2e7 <luaV_execute+0x67fe>
  43b2c1:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  43b2c8:	48 8b 10             	mov    (%rax),%rdx
  43b2cb:	8b 85 74 f5 ff ff    	mov    -0xa8c(%rbp),%eax
  43b2d1:	48 98                	cltq   
  43b2d3:	48 39 c2             	cmp    %rax,%rdx
  43b2d6:	0f 9f c0             	setg   %al
  43b2d9:	0f b6 c0             	movzbl %al,%eax
  43b2dc:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
  43b2e2:	e9 c4 00 00 00       	jmpq   43b3ab <luaV_execute+0x68c2>
  43b2e7:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  43b2ee:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b2f2:	3c 13                	cmp    $0x13,%al
  43b2f4:	75 41                	jne    43b337 <luaV_execute+0x684e>
  43b2f6:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  43b2fd:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43b301:	f2 0f 11 85 68 f5 ff 	movsd  %xmm0,-0xa98(%rbp)
  43b308:	ff 
  43b309:	f2 0f 2a 85 74 f5 ff 	cvtsi2sdl -0xa8c(%rbp),%xmm0
  43b310:	ff 
  43b311:	f2 0f 11 85 60 f5 ff 	movsd  %xmm0,-0xaa0(%rbp)
  43b318:	ff 
  43b319:	f2 0f 10 85 68 f5 ff 	movsd  -0xa98(%rbp),%xmm0
  43b320:	ff 
  43b321:	66 0f 2f 85 60 f5 ff 	comisd -0xaa0(%rbp),%xmm0
  43b328:	ff 
  43b329:	0f 97 c0             	seta   %al
  43b32c:	0f b6 c0             	movzbl %al,%eax
  43b32f:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
  43b335:	eb 74                	jmp    43b3ab <luaV_execute+0x68c2>
  43b337:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b33a:	c1 e8 18             	shr    $0x18,%eax
  43b33d:	89 85 5c f5 ff ff    	mov    %eax,-0xaa4(%rbp)
  43b343:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b34a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b34e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43b352:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b359:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43b35d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b364:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43b368:	48 8b b5 78 f5 ff ff 	mov    -0xa88(%rbp),%rsi
  43b36f:	8b 8d 5c f5 ff ff    	mov    -0xaa4(%rbp),%ecx
  43b375:	8b 95 74 f5 ff ff    	mov    -0xa8c(%rbp),%edx
  43b37b:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b382:	41 b9 14 00 00 00    	mov    $0x14,%r9d
  43b388:	41 89 c8             	mov    %ecx,%r8d
  43b38b:	b9 01 00 00 00       	mov    $0x1,%ecx
  43b390:	48 89 c7             	mov    %rax,%rdi
  43b393:	e8 19 42 ff ff       	callq  42f5b1 <luaT_callorderiTM>
  43b398:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
  43b39e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b3a5:	8b 40 28             	mov    0x28(%rax),%eax
  43b3a8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b3ab:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b3ae:	c1 e8 0f             	shr    $0xf,%eax
  43b3b1:	83 e0 01             	and    $0x1,%eax
  43b3b4:	39 85 88 fe ff ff    	cmp    %eax,-0x178(%rbp)
  43b3ba:	74 07                	je     43b3c3 <luaV_execute+0x68da>
  43b3bc:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b3c1:	eb 35                	jmp    43b3f8 <luaV_execute+0x690f>
  43b3c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b3c7:	8b 00                	mov    (%rax),%eax
  43b3c9:	89 85 58 f5 ff ff    	mov    %eax,-0xaa8(%rbp)
  43b3cf:	8b 85 58 f5 ff ff    	mov    -0xaa8(%rbp),%eax
  43b3d5:	c1 e8 07             	shr    $0x7,%eax
  43b3d8:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b3dd:	48 98                	cltq   
  43b3df:	48 83 c0 01          	add    $0x1,%rax
  43b3e3:	48 c1 e0 02          	shl    $0x2,%rax
  43b3e7:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b3eb:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b3f2:	8b 40 28             	mov    0x28(%rax),%eax
  43b3f5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b3f8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b3fc:	0f 95 c0             	setne  %al
  43b3ff:	0f b6 c0             	movzbl %al,%eax
  43b402:	48 85 c0             	test   %rax,%rax
  43b405:	74 2b                	je     43b432 <luaV_execute+0x6949>
  43b407:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b40b:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b412:	48 89 d6             	mov    %rdx,%rsi
  43b415:	48 89 c7             	mov    %rax,%rdi
  43b418:	e8 c4 59 fd ff       	callq  410de1 <luaG_traceexec>
  43b41d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b420:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b427:	48 8b 00             	mov    (%rax),%rax
  43b42a:	48 83 c0 10          	add    $0x10,%rax
  43b42e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b432:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b436:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b43a:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b43e:	8b 00                	mov    (%rax),%eax
  43b440:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b443:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b446:	83 e0 7f             	and    $0x7f,%eax
  43b449:	89 c0                	mov    %eax,%eax
  43b44b:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b452:	00 
  43b453:	e9 54 98 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b458:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b45b:	c1 e8 07             	shr    $0x7,%eax
  43b45e:	48 98                	cltq   
  43b460:	0f b6 c0             	movzbl %al,%eax
  43b463:	48 c1 e0 04          	shl    $0x4,%rax
  43b467:	48 89 c2             	mov    %rax,%rdx
  43b46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b46e:	48 01 d0             	add    %rdx,%rax
  43b471:	48 89 85 50 f5 ff ff 	mov    %rax,-0xab0(%rbp)
  43b478:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b47b:	c1 e8 10             	shr    $0x10,%eax
  43b47e:	0f b6 c0             	movzbl %al,%eax
  43b481:	83 e8 7f             	sub    $0x7f,%eax
  43b484:	89 85 4c f5 ff ff    	mov    %eax,-0xab4(%rbp)
  43b48a:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  43b491:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b495:	3c 03                	cmp    $0x3,%al
  43b497:	75 26                	jne    43b4bf <luaV_execute+0x69d6>
  43b499:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  43b4a0:	48 8b 10             	mov    (%rax),%rdx
  43b4a3:	8b 85 4c f5 ff ff    	mov    -0xab4(%rbp),%eax
  43b4a9:	48 98                	cltq   
  43b4ab:	48 39 c2             	cmp    %rax,%rdx
  43b4ae:	0f 9d c0             	setge  %al
  43b4b1:	0f b6 c0             	movzbl %al,%eax
  43b4b4:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  43b4ba:	e9 c4 00 00 00       	jmpq   43b583 <luaV_execute+0x6a9a>
  43b4bf:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  43b4c6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b4ca:	3c 13                	cmp    $0x13,%al
  43b4cc:	75 41                	jne    43b50f <luaV_execute+0x6a26>
  43b4ce:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  43b4d5:	f2 0f 10 00          	movsd  (%rax),%xmm0
  43b4d9:	f2 0f 11 85 40 f5 ff 	movsd  %xmm0,-0xac0(%rbp)
  43b4e0:	ff 
  43b4e1:	f2 0f 2a 85 4c f5 ff 	cvtsi2sdl -0xab4(%rbp),%xmm0
  43b4e8:	ff 
  43b4e9:	f2 0f 11 85 38 f5 ff 	movsd  %xmm0,-0xac8(%rbp)
  43b4f0:	ff 
  43b4f1:	f2 0f 10 85 40 f5 ff 	movsd  -0xac0(%rbp),%xmm0
  43b4f8:	ff 
  43b4f9:	66 0f 2f 85 38 f5 ff 	comisd -0xac8(%rbp),%xmm0
  43b500:	ff 
  43b501:	0f 93 c0             	setae  %al
  43b504:	0f b6 c0             	movzbl %al,%eax
  43b507:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  43b50d:	eb 74                	jmp    43b583 <luaV_execute+0x6a9a>
  43b50f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b512:	c1 e8 18             	shr    $0x18,%eax
  43b515:	89 85 34 f5 ff ff    	mov    %eax,-0xacc(%rbp)
  43b51b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b522:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b526:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43b52a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b531:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43b535:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b53c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43b540:	48 8b b5 50 f5 ff ff 	mov    -0xab0(%rbp),%rsi
  43b547:	8b 8d 34 f5 ff ff    	mov    -0xacc(%rbp),%ecx
  43b54d:	8b 95 4c f5 ff ff    	mov    -0xab4(%rbp),%edx
  43b553:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b55a:	41 b9 15 00 00 00    	mov    $0x15,%r9d
  43b560:	41 89 c8             	mov    %ecx,%r8d
  43b563:	b9 01 00 00 00       	mov    $0x1,%ecx
  43b568:	48 89 c7             	mov    %rax,%rdi
  43b56b:	e8 41 40 ff ff       	callq  42f5b1 <luaT_callorderiTM>
  43b570:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  43b576:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b57d:	8b 40 28             	mov    0x28(%rax),%eax
  43b580:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b583:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b586:	c1 e8 0f             	shr    $0xf,%eax
  43b589:	83 e0 01             	and    $0x1,%eax
  43b58c:	39 85 84 fe ff ff    	cmp    %eax,-0x17c(%rbp)
  43b592:	74 07                	je     43b59b <luaV_execute+0x6ab2>
  43b594:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b599:	eb 35                	jmp    43b5d0 <luaV_execute+0x6ae7>
  43b59b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b59f:	8b 00                	mov    (%rax),%eax
  43b5a1:	89 85 30 f5 ff ff    	mov    %eax,-0xad0(%rbp)
  43b5a7:	8b 85 30 f5 ff ff    	mov    -0xad0(%rbp),%eax
  43b5ad:	c1 e8 07             	shr    $0x7,%eax
  43b5b0:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b5b5:	48 98                	cltq   
  43b5b7:	48 83 c0 01          	add    $0x1,%rax
  43b5bb:	48 c1 e0 02          	shl    $0x2,%rax
  43b5bf:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b5c3:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b5ca:	8b 40 28             	mov    0x28(%rax),%eax
  43b5cd:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b5d0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b5d4:	0f 95 c0             	setne  %al
  43b5d7:	0f b6 c0             	movzbl %al,%eax
  43b5da:	48 85 c0             	test   %rax,%rax
  43b5dd:	74 2b                	je     43b60a <luaV_execute+0x6b21>
  43b5df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b5e3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b5ea:	48 89 d6             	mov    %rdx,%rsi
  43b5ed:	48 89 c7             	mov    %rax,%rdi
  43b5f0:	e8 ec 57 fd ff       	callq  410de1 <luaG_traceexec>
  43b5f5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b5f8:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b5ff:	48 8b 00             	mov    (%rax),%rax
  43b602:	48 83 c0 10          	add    $0x10,%rax
  43b606:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b60a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b60e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b612:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b616:	8b 00                	mov    (%rax),%eax
  43b618:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b61b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b61e:	83 e0 7f             	and    $0x7f,%eax
  43b621:	89 c0                	mov    %eax,%eax
  43b623:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b62a:	00 
  43b62b:	e9 7c 96 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b630:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b633:	c1 e8 07             	shr    $0x7,%eax
  43b636:	48 98                	cltq   
  43b638:	0f b6 c0             	movzbl %al,%eax
  43b63b:	48 c1 e0 04          	shl    $0x4,%rax
  43b63f:	48 89 c2             	mov    %rax,%rdx
  43b642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b646:	48 01 d0             	add    %rdx,%rax
  43b649:	48 89 85 28 f5 ff ff 	mov    %rax,-0xad8(%rbp)
  43b650:	48 8b 85 28 f5 ff ff 	mov    -0xad8(%rbp),%rax
  43b657:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b65b:	3c 01                	cmp    $0x1,%al
  43b65d:	74 1c                	je     43b67b <luaV_execute+0x6b92>
  43b65f:	48 8b 85 28 f5 ff ff 	mov    -0xad8(%rbp),%rax
  43b666:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b66a:	0f b6 c0             	movzbl %al,%eax
  43b66d:	83 e0 0f             	and    $0xf,%eax
  43b670:	85 c0                	test   %eax,%eax
  43b672:	74 07                	je     43b67b <luaV_execute+0x6b92>
  43b674:	b8 01 00 00 00       	mov    $0x1,%eax
  43b679:	eb 05                	jmp    43b680 <luaV_execute+0x6b97>
  43b67b:	b8 00 00 00 00       	mov    $0x0,%eax
  43b680:	89 85 24 f5 ff ff    	mov    %eax,-0xadc(%rbp)
  43b686:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b689:	c1 e8 0f             	shr    $0xf,%eax
  43b68c:	83 e0 01             	and    $0x1,%eax
  43b68f:	39 85 24 f5 ff ff    	cmp    %eax,-0xadc(%rbp)
  43b695:	74 07                	je     43b69e <luaV_execute+0x6bb5>
  43b697:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b69c:	eb 35                	jmp    43b6d3 <luaV_execute+0x6bea>
  43b69e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b6a2:	8b 00                	mov    (%rax),%eax
  43b6a4:	89 85 20 f5 ff ff    	mov    %eax,-0xae0(%rbp)
  43b6aa:	8b 85 20 f5 ff ff    	mov    -0xae0(%rbp),%eax
  43b6b0:	c1 e8 07             	shr    $0x7,%eax
  43b6b3:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b6b8:	48 98                	cltq   
  43b6ba:	48 83 c0 01          	add    $0x1,%rax
  43b6be:	48 c1 e0 02          	shl    $0x2,%rax
  43b6c2:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b6c6:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b6cd:	8b 40 28             	mov    0x28(%rax),%eax
  43b6d0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b6d3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b6d7:	0f 95 c0             	setne  %al
  43b6da:	0f b6 c0             	movzbl %al,%eax
  43b6dd:	48 85 c0             	test   %rax,%rax
  43b6e0:	74 2b                	je     43b70d <luaV_execute+0x6c24>
  43b6e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b6e6:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b6ed:	48 89 d6             	mov    %rdx,%rsi
  43b6f0:	48 89 c7             	mov    %rax,%rdi
  43b6f3:	e8 e9 56 fd ff       	callq  410de1 <luaG_traceexec>
  43b6f8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b6fb:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b702:	48 8b 00             	mov    (%rax),%rax
  43b705:	48 83 c0 10          	add    $0x10,%rax
  43b709:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b70d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b711:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b715:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b719:	8b 00                	mov    (%rax),%eax
  43b71b:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b71e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b721:	83 e0 7f             	and    $0x7f,%eax
  43b724:	89 c0                	mov    %eax,%eax
  43b726:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b72d:	00 
  43b72e:	e9 79 95 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b733:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b736:	c1 e8 07             	shr    $0x7,%eax
  43b739:	48 98                	cltq   
  43b73b:	0f b6 c0             	movzbl %al,%eax
  43b73e:	48 c1 e0 04          	shl    $0x4,%rax
  43b742:	48 89 c2             	mov    %rax,%rdx
  43b745:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b749:	48 01 d0             	add    %rdx,%rax
  43b74c:	48 89 85 18 f5 ff ff 	mov    %rax,-0xae8(%rbp)
  43b753:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b756:	c1 e8 10             	shr    $0x10,%eax
  43b759:	48 98                	cltq   
  43b75b:	0f b6 c0             	movzbl %al,%eax
  43b75e:	48 c1 e0 04          	shl    $0x4,%rax
  43b762:	48 89 c2             	mov    %rax,%rdx
  43b765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b769:	48 01 d0             	add    %rdx,%rax
  43b76c:	48 89 85 10 f5 ff ff 	mov    %rax,-0xaf0(%rbp)
  43b773:	48 8b 85 10 f5 ff ff 	mov    -0xaf0(%rbp),%rax
  43b77a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b77e:	3c 01                	cmp    $0x1,%al
  43b780:	74 15                	je     43b797 <luaV_execute+0x6cae>
  43b782:	48 8b 85 10 f5 ff ff 	mov    -0xaf0(%rbp),%rax
  43b789:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43b78d:	0f b6 c0             	movzbl %al,%eax
  43b790:	83 e0 0f             	and    $0xf,%eax
  43b793:	85 c0                	test   %eax,%eax
  43b795:	75 07                	jne    43b79e <luaV_execute+0x6cb5>
  43b797:	b8 01 00 00 00       	mov    $0x1,%eax
  43b79c:	eb 05                	jmp    43b7a3 <luaV_execute+0x6cba>
  43b79e:	b8 00 00 00 00       	mov    $0x0,%eax
  43b7a3:	83 e0 01             	and    $0x1,%eax
  43b7a6:	83 f0 01             	xor    $0x1,%eax
  43b7a9:	89 c2                	mov    %eax,%edx
  43b7ab:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b7ae:	c1 e8 0f             	shr    $0xf,%eax
  43b7b1:	83 e0 01             	and    $0x1,%eax
  43b7b4:	31 d0                	xor    %edx,%eax
  43b7b6:	84 c0                	test   %al,%al
  43b7b8:	74 07                	je     43b7c1 <luaV_execute+0x6cd8>
  43b7ba:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43b7bf:	eb 7a                	jmp    43b83b <luaV_execute+0x6d52>
  43b7c1:	48 8b 85 18 f5 ff ff 	mov    -0xae8(%rbp),%rax
  43b7c8:	48 89 85 08 f5 ff ff 	mov    %rax,-0xaf8(%rbp)
  43b7cf:	48 8b 85 10 f5 ff ff 	mov    -0xaf0(%rbp),%rax
  43b7d6:	48 89 85 00 f5 ff ff 	mov    %rax,-0xb00(%rbp)
  43b7dd:	48 8b 85 08 f5 ff ff 	mov    -0xaf8(%rbp),%rax
  43b7e4:	48 8b 95 00 f5 ff ff 	mov    -0xb00(%rbp),%rdx
  43b7eb:	48 8b 12             	mov    (%rdx),%rdx
  43b7ee:	48 89 10             	mov    %rdx,(%rax)
  43b7f1:	48 8b 85 00 f5 ff ff 	mov    -0xb00(%rbp),%rax
  43b7f8:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43b7fc:	48 8b 85 08 f5 ff ff 	mov    -0xaf8(%rbp),%rax
  43b803:	88 50 08             	mov    %dl,0x8(%rax)
  43b806:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b80a:	8b 00                	mov    (%rax),%eax
  43b80c:	89 85 fc f4 ff ff    	mov    %eax,-0xb04(%rbp)
  43b812:	8b 85 fc f4 ff ff    	mov    -0xb04(%rbp),%eax
  43b818:	c1 e8 07             	shr    $0x7,%eax
  43b81b:	2d ff ff ff 00       	sub    $0xffffff,%eax
  43b820:	48 98                	cltq   
  43b822:	48 83 c0 01          	add    $0x1,%rax
  43b826:	48 c1 e0 02          	shl    $0x2,%rax
  43b82a:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43b82e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b835:	8b 40 28             	mov    0x28(%rax),%eax
  43b838:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b83b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b83f:	0f 95 c0             	setne  %al
  43b842:	0f b6 c0             	movzbl %al,%eax
  43b845:	48 85 c0             	test   %rax,%rax
  43b848:	74 2b                	je     43b875 <luaV_execute+0x6d8c>
  43b84a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b84e:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b855:	48 89 d6             	mov    %rdx,%rsi
  43b858:	48 89 c7             	mov    %rax,%rdi
  43b85b:	e8 81 55 fd ff       	callq  410de1 <luaG_traceexec>
  43b860:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b863:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b86a:	48 8b 00             	mov    (%rax),%rax
  43b86d:	48 83 c0 10          	add    $0x10,%rax
  43b871:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b875:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b879:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b87d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b881:	8b 00                	mov    (%rax),%eax
  43b883:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b886:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b889:	83 e0 7f             	and    $0x7f,%eax
  43b88c:	89 c0                	mov    %eax,%eax
  43b88e:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b895:	00 
  43b896:	e9 11 94 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b89b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b89e:	c1 e8 07             	shr    $0x7,%eax
  43b8a1:	48 98                	cltq   
  43b8a3:	0f b6 c0             	movzbl %al,%eax
  43b8a6:	48 c1 e0 04          	shl    $0x4,%rax
  43b8aa:	48 89 c2             	mov    %rax,%rdx
  43b8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b8b1:	48 01 d0             	add    %rdx,%rax
  43b8b4:	48 89 85 f0 f4 ff ff 	mov    %rax,-0xb10(%rbp)
  43b8bb:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b8be:	c1 e8 10             	shr    $0x10,%eax
  43b8c1:	25 ff 00 00 00       	and    $0xff,%eax
  43b8c6:	89 85 ec f4 ff ff    	mov    %eax,-0xb14(%rbp)
  43b8cc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b8cf:	c1 e8 18             	shr    $0x18,%eax
  43b8d2:	83 e8 01             	sub    $0x1,%eax
  43b8d5:	89 85 e8 f4 ff ff    	mov    %eax,-0xb18(%rbp)
  43b8db:	83 bd ec f4 ff ff 00 	cmpl   $0x0,-0xb14(%rbp)
  43b8e2:	74 24                	je     43b908 <luaV_execute+0x6e1f>
  43b8e4:	8b 85 ec f4 ff ff    	mov    -0xb14(%rbp),%eax
  43b8ea:	48 98                	cltq   
  43b8ec:	48 c1 e0 04          	shl    $0x4,%rax
  43b8f0:	48 89 c2             	mov    %rax,%rdx
  43b8f3:	48 8b 85 f0 f4 ff ff 	mov    -0xb10(%rbp),%rax
  43b8fa:	48 01 c2             	add    %rax,%rdx
  43b8fd:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b904:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43b908:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b90f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b913:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43b917:	8b 95 e8 f4 ff ff    	mov    -0xb18(%rbp),%edx
  43b91d:	48 8b 8d f0 f4 ff ff 	mov    -0xb10(%rbp),%rcx
  43b924:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b92b:	48 89 ce             	mov    %rcx,%rsi
  43b92e:	48 89 c7             	mov    %rax,%rdi
  43b931:	e8 93 6c fd ff       	callq  4125c9 <luaD_precall>
  43b936:	48 89 85 e0 f4 ff ff 	mov    %rax,-0xb20(%rbp)
  43b93d:	48 83 bd e0 f4 ff ff 	cmpq   $0x0,-0xb20(%rbp)
  43b944:	00 
  43b945:	75 1e                	jne    43b965 <luaV_execute+0x6e7c>
  43b947:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b94e:	8b 40 28             	mov    0x28(%rax),%eax
  43b951:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b954:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43b958:	0f 95 c0             	setne  %al
  43b95b:	0f b6 c0             	movzbl %al,%eax
  43b95e:	48 85 c0             	test   %rax,%rax
  43b961:	74 40                	je     43b9a3 <luaV_execute+0x6eba>
  43b963:	eb 13                	jmp    43b978 <luaV_execute+0x6e8f>
  43b965:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  43b96c:	48 89 85 40 f3 ff ff 	mov    %rax,-0xcc0(%rbp)
  43b973:	e9 8a 91 ff ff       	jmpq   434b02 <luaV_execute+0x19>
  43b978:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43b97c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43b983:	48 89 d6             	mov    %rdx,%rsi
  43b986:	48 89 c7             	mov    %rax,%rdi
  43b989:	e8 53 54 fd ff       	callq  410de1 <luaG_traceexec>
  43b98e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43b991:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43b998:	48 8b 00             	mov    (%rax),%rax
  43b99b:	48 83 c0 10          	add    $0x10,%rax
  43b99f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43b9a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43b9a7:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43b9ab:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43b9af:	8b 00                	mov    (%rax),%eax
  43b9b1:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43b9b4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b9b7:	83 e0 7f             	and    $0x7f,%eax
  43b9ba:	89 c0                	mov    %eax,%eax
  43b9bc:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43b9c3:	00 
  43b9c4:	e9 e3 92 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43b9c9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b9cc:	c1 e8 07             	shr    $0x7,%eax
  43b9cf:	48 98                	cltq   
  43b9d1:	0f b6 c0             	movzbl %al,%eax
  43b9d4:	48 c1 e0 04          	shl    $0x4,%rax
  43b9d8:	48 89 c2             	mov    %rax,%rdx
  43b9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43b9df:	48 01 d0             	add    %rdx,%rax
  43b9e2:	48 89 85 d8 f4 ff ff 	mov    %rax,-0xb28(%rbp)
  43b9e9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b9ec:	c1 e8 10             	shr    $0x10,%eax
  43b9ef:	25 ff 00 00 00       	and    $0xff,%eax
  43b9f4:	89 85 80 fe ff ff    	mov    %eax,-0x180(%rbp)
  43b9fa:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43b9fd:	c1 e8 18             	shr    $0x18,%eax
  43ba00:	89 85 d4 f4 ff ff    	mov    %eax,-0xb2c(%rbp)
  43ba06:	83 bd d4 f4 ff ff 00 	cmpl   $0x0,-0xb2c(%rbp)
  43ba0d:	74 14                	je     43ba23 <luaV_execute+0x6f3a>
  43ba0f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ba16:	8b 50 2c             	mov    0x2c(%rax),%edx
  43ba19:	8b 85 d4 f4 ff ff    	mov    -0xb2c(%rbp),%eax
  43ba1f:	01 d0                	add    %edx,%eax
  43ba21:	eb 05                	jmp    43ba28 <luaV_execute+0x6f3f>
  43ba23:	b8 00 00 00 00       	mov    $0x0,%eax
  43ba28:	89 85 d0 f4 ff ff    	mov    %eax,-0xb30(%rbp)
  43ba2e:	83 bd 80 fe ff ff 00 	cmpl   $0x0,-0x180(%rbp)
  43ba35:	74 26                	je     43ba5d <luaV_execute+0x6f74>
  43ba37:	8b 85 80 fe ff ff    	mov    -0x180(%rbp),%eax
  43ba3d:	48 98                	cltq   
  43ba3f:	48 c1 e0 04          	shl    $0x4,%rax
  43ba43:	48 89 c2             	mov    %rax,%rdx
  43ba46:	48 8b 85 d8 f4 ff ff 	mov    -0xb28(%rbp),%rax
  43ba4d:	48 01 c2             	add    %rax,%rdx
  43ba50:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ba57:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43ba5b:	eb 1c                	jmp    43ba79 <luaV_execute+0x6f90>
  43ba5d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ba64:	48 8b 40 10          	mov    0x10(%rax),%rax
  43ba68:	48 2b 85 d8 f4 ff ff 	sub    -0xb28(%rbp),%rax
  43ba6f:	48 c1 f8 04          	sar    $0x4,%rax
  43ba73:	89 85 80 fe ff ff    	mov    %eax,-0x180(%rbp)
  43ba79:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ba80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ba84:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43ba88:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ba8b:	25 00 80 00 00       	and    $0x8000,%eax
  43ba90:	85 c0                	test   %eax,%eax
  43ba92:	74 16                	je     43baaa <luaV_execute+0x6fc1>
  43ba94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43ba98:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ba9f:	48 89 d6             	mov    %rdx,%rsi
  43baa2:	48 89 c7             	mov    %rax,%rdi
  43baa5:	e8 7f 89 fd ff       	callq  414429 <luaF_closeupval>
  43baaa:	8b bd d0 f4 ff ff    	mov    -0xb30(%rbp),%edi
  43bab0:	8b 8d 80 fe ff ff    	mov    -0x180(%rbp),%ecx
  43bab6:	48 8b 95 d8 f4 ff ff 	mov    -0xb28(%rbp),%rdx
  43babd:	48 8b b5 40 f3 ff ff 	mov    -0xcc0(%rbp),%rsi
  43bac4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bacb:	41 89 f8             	mov    %edi,%r8d
  43bace:	48 89 c7             	mov    %rax,%rdi
  43bad1:	e8 74 68 fd ff       	callq  41234a <luaD_pretailcall>
  43bad6:	89 85 cc f4 ff ff    	mov    %eax,-0xb34(%rbp)
  43badc:	83 bd cc f4 ff ff 00 	cmpl   $0x0,-0xb34(%rbp)
  43bae3:	79 05                	jns    43baea <luaV_execute+0x7001>
  43bae5:	e9 18 90 ff ff       	jmpq   434b02 <luaV_execute+0x19>
  43baea:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43baf1:	48 8b 00             	mov    (%rax),%rax
  43baf4:	8b 95 d0 f4 ff ff    	mov    -0xb30(%rbp),%edx
  43bafa:	48 63 d2             	movslq %edx,%rdx
  43bafd:	48 c1 e2 04          	shl    $0x4,%rdx
  43bb01:	48 f7 da             	neg    %rdx
  43bb04:	48 01 c2             	add    %rax,%rdx
  43bb07:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bb0e:	48 89 10             	mov    %rdx,(%rax)
  43bb11:	8b 95 cc f4 ff ff    	mov    -0xb34(%rbp),%edx
  43bb17:	48 8b 8d 40 f3 ff ff 	mov    -0xcc0(%rbp),%rcx
  43bb1e:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bb25:	48 89 ce             	mov    %rcx,%rsi
  43bb28:	48 89 c7             	mov    %rax,%rdi
  43bb2b:	e8 ac 65 fd ff       	callq  4120dc <luaD_poscall>
  43bb30:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bb37:	8b 40 28             	mov    0x28(%rax),%eax
  43bb3a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43bb3d:	e9 3d 04 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43bb42:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bb45:	c1 e8 07             	shr    $0x7,%eax
  43bb48:	48 98                	cltq   
  43bb4a:	0f b6 c0             	movzbl %al,%eax
  43bb4d:	48 c1 e0 04          	shl    $0x4,%rax
  43bb51:	48 89 c2             	mov    %rax,%rdx
  43bb54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bb58:	48 01 d0             	add    %rdx,%rax
  43bb5b:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  43bb62:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bb65:	c1 e8 10             	shr    $0x10,%eax
  43bb68:	0f b6 c0             	movzbl %al,%eax
  43bb6b:	83 e8 01             	sub    $0x1,%eax
  43bb6e:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
  43bb74:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bb77:	c1 e8 18             	shr    $0x18,%eax
  43bb7a:	89 85 c8 f4 ff ff    	mov    %eax,-0xb38(%rbp)
  43bb80:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
  43bb87:	79 1c                	jns    43bba5 <luaV_execute+0x70bc>
  43bb89:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bb90:	48 8b 40 10          	mov    0x10(%rax),%rax
  43bb94:	48 2b 85 78 fe ff ff 	sub    -0x188(%rbp),%rax
  43bb9b:	48 c1 f8 04          	sar    $0x4,%rax
  43bb9f:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
  43bba5:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bbac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43bbb0:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43bbb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bbb7:	25 00 80 00 00       	and    $0x8000,%eax
  43bbbc:	85 c0                	test   %eax,%eax
  43bbbe:	0f 84 ac 00 00 00    	je     43bc70 <luaV_execute+0x7187>
  43bbc4:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bbcb:	8b 95 74 fe ff ff    	mov    -0x18c(%rbp),%edx
  43bbd1:	89 50 38             	mov    %edx,0x38(%rax)
  43bbd4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bbdb:	48 8b 50 10          	mov    0x10(%rax),%rdx
  43bbdf:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bbe6:	48 8b 40 08          	mov    0x8(%rax),%rax
  43bbea:	48 39 c2             	cmp    %rax,%rdx
  43bbed:	73 16                	jae    43bc05 <luaV_execute+0x711c>
  43bbef:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bbf6:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43bbfa:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bc01:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43bc05:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  43bc09:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bc10:	b9 01 00 00 00       	mov    $0x1,%ecx
  43bc15:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43bc1a:	48 89 c7             	mov    %rax,%rdi
  43bc1d:	e8 7b 89 fd ff       	callq  41459d <luaF_close>
  43bc22:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bc29:	8b 40 28             	mov    0x28(%rax),%eax
  43bc2c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43bc2f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43bc33:	0f 95 c0             	setne  %al
  43bc36:	0f b6 c0             	movzbl %al,%eax
  43bc39:	48 85 c0             	test   %rax,%rax
  43bc3c:	74 32                	je     43bc70 <luaV_execute+0x7187>
  43bc3e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bc45:	48 8b 00             	mov    (%rax),%rax
  43bc48:	48 83 c0 10          	add    $0x10,%rax
  43bc4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43bc50:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bc53:	c1 e8 07             	shr    $0x7,%eax
  43bc56:	48 98                	cltq   
  43bc58:	0f b6 c0             	movzbl %al,%eax
  43bc5b:	48 c1 e0 04          	shl    $0x4,%rax
  43bc5f:	48 89 c2             	mov    %rax,%rdx
  43bc62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bc66:	48 01 d0             	add    %rdx,%rax
  43bc69:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  43bc70:	83 bd c8 f4 ff ff 00 	cmpl   $0x0,-0xb38(%rbp)
  43bc77:	74 32                	je     43bcab <luaV_execute+0x71c2>
  43bc79:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bc80:	48 8b 10             	mov    (%rax),%rdx
  43bc83:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bc8a:	8b 48 2c             	mov    0x2c(%rax),%ecx
  43bc8d:	8b 85 c8 f4 ff ff    	mov    -0xb38(%rbp),%eax
  43bc93:	01 c8                	add    %ecx,%eax
  43bc95:	48 98                	cltq   
  43bc97:	48 c1 e0 04          	shl    $0x4,%rax
  43bc9b:	48 f7 d8             	neg    %rax
  43bc9e:	48 01 c2             	add    %rax,%rdx
  43bca1:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bca8:	48 89 10             	mov    %rdx,(%rax)
  43bcab:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
  43bcb1:	48 98                	cltq   
  43bcb3:	48 c1 e0 04          	shl    $0x4,%rax
  43bcb7:	48 89 c2             	mov    %rax,%rdx
  43bcba:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  43bcc1:	48 01 c2             	add    %rax,%rdx
  43bcc4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bccb:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43bccf:	8b 95 74 fe ff ff    	mov    -0x18c(%rbp),%edx
  43bcd5:	48 8b 8d 40 f3 ff ff 	mov    -0xcc0(%rbp),%rcx
  43bcdc:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bce3:	48 89 ce             	mov    %rcx,%rsi
  43bce6:	48 89 c7             	mov    %rax,%rdi
  43bce9:	e8 ee 63 fd ff       	callq  4120dc <luaD_poscall>
  43bcee:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bcf5:	8b 40 28             	mov    0x28(%rax),%eax
  43bcf8:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43bcfb:	e9 7f 02 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43bd00:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bd07:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  43bd0d:	85 c0                	test   %eax,%eax
  43bd0f:	0f 95 c0             	setne  %al
  43bd12:	0f b6 c0             	movzbl %al,%eax
  43bd15:	48 85 c0             	test   %rax,%rax
  43bd18:	74 6b                	je     43bd85 <luaV_execute+0x729c>
  43bd1a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bd1d:	c1 e8 07             	shr    $0x7,%eax
  43bd20:	48 98                	cltq   
  43bd22:	0f b6 c0             	movzbl %al,%eax
  43bd25:	48 c1 e0 04          	shl    $0x4,%rax
  43bd29:	48 89 c2             	mov    %rax,%rdx
  43bd2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bd30:	48 01 d0             	add    %rdx,%rax
  43bd33:	48 89 85 c0 f4 ff ff 	mov    %rax,-0xb40(%rbp)
  43bd3a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bd41:	48 8b 95 c0 f4 ff ff 	mov    -0xb40(%rbp),%rdx
  43bd48:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43bd4c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bd53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43bd57:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43bd5b:	48 8b 8d 40 f3 ff ff 	mov    -0xcc0(%rbp),%rcx
  43bd62:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bd69:	ba 00 00 00 00       	mov    $0x0,%edx
  43bd6e:	48 89 ce             	mov    %rcx,%rsi
  43bd71:	48 89 c7             	mov    %rax,%rdi
  43bd74:	e8 63 63 fd ff       	callq  4120dc <luaD_poscall>
  43bd79:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  43bd80:	e9 fa 01 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43bd85:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bd8c:	48 8b 50 10          	mov    0x10(%rax),%rdx
  43bd90:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bd97:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43bd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bd9f:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  43bda3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bdaa:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43bdae:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bdb5:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
  43bdb9:	98                   	cwtl   
  43bdba:	89 85 70 fe ff ff    	mov    %eax,-0x190(%rbp)
  43bdc0:	eb 25                	jmp    43bde7 <luaV_execute+0x72fe>
  43bdc2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bdc9:	48 8b 40 10          	mov    0x10(%rax),%rax
  43bdcd:	48 8d 48 10          	lea    0x10(%rax),%rcx
  43bdd1:	48 8b 95 48 f3 ff ff 	mov    -0xcb8(%rbp),%rdx
  43bdd8:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  43bddc:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  43bde0:	83 ad 70 fe ff ff 01 	subl   $0x1,-0x190(%rbp)
  43bde7:	83 bd 70 fe ff ff 00 	cmpl   $0x0,-0x190(%rbp)
  43bdee:	0f 9f c0             	setg   %al
  43bdf1:	0f b6 c0             	movzbl %al,%eax
  43bdf4:	48 85 c0             	test   %rax,%rax
  43bdf7:	75 c9                	jne    43bdc2 <luaV_execute+0x72d9>
  43bdf9:	e9 81 01 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43bdfe:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43be05:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
  43be0b:	85 c0                	test   %eax,%eax
  43be0d:	0f 95 c0             	setne  %al
  43be10:	0f b6 c0             	movzbl %al,%eax
  43be13:	48 85 c0             	test   %rax,%rax
  43be16:	74 6f                	je     43be87 <luaV_execute+0x739e>
  43be18:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43be1b:	c1 e8 07             	shr    $0x7,%eax
  43be1e:	48 98                	cltq   
  43be20:	0f b6 c0             	movzbl %al,%eax
  43be23:	48 c1 e0 04          	shl    $0x4,%rax
  43be27:	48 89 c2             	mov    %rax,%rdx
  43be2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43be2e:	48 01 d0             	add    %rdx,%rax
  43be31:	48 89 85 b8 f4 ff ff 	mov    %rax,-0xb48(%rbp)
  43be38:	48 8b 85 b8 f4 ff ff 	mov    -0xb48(%rbp),%rax
  43be3f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  43be43:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43be4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43be4e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43be55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43be59:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43be5d:	48 8b 8d 40 f3 ff ff 	mov    -0xcc0(%rbp),%rcx
  43be64:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43be6b:	ba 01 00 00 00       	mov    $0x1,%edx
  43be70:	48 89 ce             	mov    %rcx,%rsi
  43be73:	48 89 c7             	mov    %rax,%rdi
  43be76:	e8 61 62 fd ff       	callq  4120dc <luaD_poscall>
  43be7b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  43be82:	e9 f8 00 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43be87:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43be8e:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
  43be92:	98                   	cwtl   
  43be93:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  43be99:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bea0:	48 8b 50 10          	mov    0x10(%rax),%rdx
  43bea4:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43beab:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43beaf:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
  43beb6:	75 18                	jne    43bed0 <luaV_execute+0x73e7>
  43beb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bebc:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  43bec0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bec7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43becb:	e9 af 00 00 00       	jmpq   43bf7f <luaV_execute+0x7496>
  43bed0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bed3:	c1 e8 07             	shr    $0x7,%eax
  43bed6:	48 98                	cltq   
  43bed8:	0f b6 c0             	movzbl %al,%eax
  43bedb:	48 c1 e0 04          	shl    $0x4,%rax
  43bedf:	48 89 c2             	mov    %rax,%rdx
  43bee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bee6:	48 01 d0             	add    %rdx,%rax
  43bee9:	48 89 85 b0 f4 ff ff 	mov    %rax,-0xb50(%rbp)
  43bef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bef4:	48 83 e8 10          	sub    $0x10,%rax
  43bef8:	48 89 85 a8 f4 ff ff 	mov    %rax,-0xb58(%rbp)
  43beff:	48 8b 85 b0 f4 ff ff 	mov    -0xb50(%rbp),%rax
  43bf06:	48 89 85 a0 f4 ff ff 	mov    %rax,-0xb60(%rbp)
  43bf0d:	48 8b 85 a8 f4 ff ff 	mov    -0xb58(%rbp),%rax
  43bf14:	48 8b 95 a0 f4 ff ff 	mov    -0xb60(%rbp),%rdx
  43bf1b:	48 8b 12             	mov    (%rdx),%rdx
  43bf1e:	48 89 10             	mov    %rdx,(%rax)
  43bf21:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  43bf28:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43bf2c:	48 8b 85 a8 f4 ff ff 	mov    -0xb58(%rbp),%rax
  43bf33:	88 50 08             	mov    %dl,0x8(%rax)
  43bf36:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bf3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43bf41:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43bf45:	eb 25                	jmp    43bf6c <luaV_execute+0x7483>
  43bf47:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43bf4e:	48 8b 40 10          	mov    0x10(%rax),%rax
  43bf52:	48 8d 48 10          	lea    0x10(%rax),%rcx
  43bf56:	48 8b 95 48 f3 ff ff 	mov    -0xcb8(%rbp),%rdx
  43bf5d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  43bf61:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  43bf65:	83 ad 6c fe ff ff 01 	subl   $0x1,-0x194(%rbp)
  43bf6c:	83 bd 6c fe ff ff 01 	cmpl   $0x1,-0x194(%rbp)
  43bf73:	0f 9f c0             	setg   %al
  43bf76:	0f b6 c0             	movzbl %al,%eax
  43bf79:	48 85 c0             	test   %rax,%rax
  43bf7c:	75 c9                	jne    43bf47 <luaV_execute+0x745e>
  43bf7e:	90                   	nop
  43bf7f:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bf86:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
  43bf8a:	0f b7 c0             	movzwl %ax,%eax
  43bf8d:	83 e0 04             	and    $0x4,%eax
  43bf90:	85 c0                	test   %eax,%eax
  43bf92:	0f 85 e7 0a 00 00    	jne    43ca7f <luaV_execute+0x7f96>
  43bf98:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43bf9f:	48 8b 40 10          	mov    0x10(%rax),%rax
  43bfa3:	48 89 85 40 f3 ff ff 	mov    %rax,-0xcc0(%rbp)
  43bfaa:	e9 63 8b ff ff       	jmpq   434b12 <luaV_execute+0x29>
  43bfaf:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43bfb2:	c1 e8 07             	shr    $0x7,%eax
  43bfb5:	48 98                	cltq   
  43bfb7:	0f b6 c0             	movzbl %al,%eax
  43bfba:	48 c1 e0 04          	shl    $0x4,%rax
  43bfbe:	48 89 c2             	mov    %rax,%rdx
  43bfc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43bfc5:	48 01 d0             	add    %rdx,%rax
  43bfc8:	48 89 85 98 f4 ff ff 	mov    %rax,-0xb68(%rbp)
  43bfcf:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43bfd6:	48 83 c0 20          	add    $0x20,%rax
  43bfda:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43bfde:	3c 03                	cmp    $0x3,%al
  43bfe0:	0f 85 ed 00 00 00    	jne    43c0d3 <luaV_execute+0x75ea>
  43bfe6:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43bfed:	48 83 c0 10          	add    $0x10,%rax
  43bff1:	48 8b 00             	mov    (%rax),%rax
  43bff4:	48 89 85 90 f4 ff ff 	mov    %rax,-0xb70(%rbp)
  43bffb:	48 83 bd 90 f4 ff ff 	cmpq   $0x0,-0xb70(%rbp)
  43c002:	00 
  43c003:	0f 84 f0 00 00 00    	je     43c0f9 <luaV_execute+0x7610>
  43c009:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c010:	48 83 c0 20          	add    $0x20,%rax
  43c014:	48 8b 00             	mov    (%rax),%rax
  43c017:	48 89 85 88 f4 ff ff 	mov    %rax,-0xb78(%rbp)
  43c01e:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c025:	48 8b 00             	mov    (%rax),%rax
  43c028:	48 89 85 80 f4 ff ff 	mov    %rax,-0xb80(%rbp)
  43c02f:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c036:	48 83 c0 10          	add    $0x10,%rax
  43c03a:	48 89 85 78 f4 ff ff 	mov    %rax,-0xb88(%rbp)
  43c041:	48 8b 85 90 f4 ff ff 	mov    -0xb70(%rbp),%rax
  43c048:	48 83 e8 01          	sub    $0x1,%rax
  43c04c:	48 89 c2             	mov    %rax,%rdx
  43c04f:	48 8b 85 78 f4 ff ff 	mov    -0xb88(%rbp),%rax
  43c056:	48 89 10             	mov    %rdx,(%rax)
  43c059:	48 8b 95 80 f4 ff ff 	mov    -0xb80(%rbp),%rdx
  43c060:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  43c067:	48 01 d0             	add    %rdx,%rax
  43c06a:	48 89 85 80 f4 ff ff 	mov    %rax,-0xb80(%rbp)
  43c071:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c078:	48 89 85 70 f4 ff ff 	mov    %rax,-0xb90(%rbp)
  43c07f:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  43c086:	48 8b 95 80 f4 ff ff 	mov    -0xb80(%rbp),%rdx
  43c08d:	48 89 10             	mov    %rdx,(%rax)
  43c090:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c097:	48 83 c0 30          	add    $0x30,%rax
  43c09b:	48 89 85 68 f4 ff ff 	mov    %rax,-0xb98(%rbp)
  43c0a2:	48 8b 85 68 f4 ff ff 	mov    -0xb98(%rbp),%rax
  43c0a9:	48 8b 95 80 f4 ff ff 	mov    -0xb80(%rbp),%rdx
  43c0b0:	48 89 10             	mov    %rdx,(%rax)
  43c0b3:	48 8b 85 68 f4 ff ff 	mov    -0xb98(%rbp),%rax
  43c0ba:	c6 40 08 03          	movb   $0x3,0x8(%rax)
  43c0be:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c0c1:	c1 e8 0f             	shr    $0xf,%eax
  43c0c4:	48 98                	cltq   
  43c0c6:	48 c1 e0 02          	shl    $0x2,%rax
  43c0ca:	48 f7 d8             	neg    %rax
  43c0cd:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43c0d1:	eb 26                	jmp    43c0f9 <luaV_execute+0x7610>
  43c0d3:	48 8b 85 98 f4 ff ff 	mov    -0xb68(%rbp),%rax
  43c0da:	48 89 c7             	mov    %rax,%rdi
  43c0dd:	e8 c3 6d ff ff       	callq  432ea5 <floatforloop>
  43c0e2:	85 c0                	test   %eax,%eax
  43c0e4:	74 13                	je     43c0f9 <luaV_execute+0x7610>
  43c0e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c0e9:	c1 e8 0f             	shr    $0xf,%eax
  43c0ec:	48 98                	cltq   
  43c0ee:	48 c1 e0 02          	shl    $0x2,%rax
  43c0f2:	48 f7 d8             	neg    %rax
  43c0f5:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43c0f9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c100:	8b 40 28             	mov    0x28(%rax),%eax
  43c103:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c106:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c10a:	0f 95 c0             	setne  %al
  43c10d:	0f b6 c0             	movzbl %al,%eax
  43c110:	48 85 c0             	test   %rax,%rax
  43c113:	74 2b                	je     43c140 <luaV_execute+0x7657>
  43c115:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c119:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c120:	48 89 d6             	mov    %rdx,%rsi
  43c123:	48 89 c7             	mov    %rax,%rdi
  43c126:	e8 b6 4c fd ff       	callq  410de1 <luaG_traceexec>
  43c12b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c12e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c135:	48 8b 00             	mov    (%rax),%rax
  43c138:	48 83 c0 10          	add    $0x10,%rax
  43c13c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c140:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c144:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c148:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c14c:	8b 00                	mov    (%rax),%eax
  43c14e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c151:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c154:	83 e0 7f             	and    $0x7f,%eax
  43c157:	89 c0                	mov    %eax,%eax
  43c159:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c160:	00 
  43c161:	e9 46 8b ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c166:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c169:	c1 e8 07             	shr    $0x7,%eax
  43c16c:	48 98                	cltq   
  43c16e:	0f b6 c0             	movzbl %al,%eax
  43c171:	48 c1 e0 04          	shl    $0x4,%rax
  43c175:	48 89 c2             	mov    %rax,%rdx
  43c178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c17c:	48 01 d0             	add    %rdx,%rax
  43c17f:	48 89 85 60 f4 ff ff 	mov    %rax,-0xba0(%rbp)
  43c186:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c18d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c191:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c195:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c19c:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43c1a0:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c1a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c1ab:	48 8b 95 60 f4 ff ff 	mov    -0xba0(%rbp),%rdx
  43c1b2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c1b9:	48 89 d6             	mov    %rdx,%rsi
  43c1bc:	48 89 c7             	mov    %rax,%rdi
  43c1bf:	e8 66 69 ff ff       	callq  432b2a <forprep>
  43c1c4:	85 c0                	test   %eax,%eax
  43c1c6:	74 14                	je     43c1dc <luaV_execute+0x76f3>
  43c1c8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c1cb:	c1 e8 0f             	shr    $0xf,%eax
  43c1ce:	48 98                	cltq   
  43c1d0:	48 83 c0 01          	add    $0x1,%rax
  43c1d4:	48 c1 e0 02          	shl    $0x2,%rax
  43c1d8:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43c1dc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c1e0:	0f 95 c0             	setne  %al
  43c1e3:	0f b6 c0             	movzbl %al,%eax
  43c1e6:	48 85 c0             	test   %rax,%rax
  43c1e9:	74 2b                	je     43c216 <luaV_execute+0x772d>
  43c1eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c1ef:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c1f6:	48 89 d6             	mov    %rdx,%rsi
  43c1f9:	48 89 c7             	mov    %rax,%rdi
  43c1fc:	e8 e0 4b fd ff       	callq  410de1 <luaG_traceexec>
  43c201:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c204:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c20b:	48 8b 00             	mov    (%rax),%rax
  43c20e:	48 83 c0 10          	add    $0x10,%rax
  43c212:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c21a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c21e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c222:	8b 00                	mov    (%rax),%eax
  43c224:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c227:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c22a:	83 e0 7f             	and    $0x7f,%eax
  43c22d:	89 c0                	mov    %eax,%eax
  43c22f:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c236:	00 
  43c237:	e9 70 8a ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c23c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c23f:	c1 e8 07             	shr    $0x7,%eax
  43c242:	48 98                	cltq   
  43c244:	0f b6 c0             	movzbl %al,%eax
  43c247:	48 c1 e0 04          	shl    $0x4,%rax
  43c24b:	48 89 c2             	mov    %rax,%rdx
  43c24e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c252:	48 01 d0             	add    %rdx,%rax
  43c255:	48 89 85 58 f4 ff ff 	mov    %rax,-0xba8(%rbp)
  43c25c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c263:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c267:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c26b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c272:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43c276:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c27d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c281:	48 8b 85 58 f4 ff ff 	mov    -0xba8(%rbp),%rax
  43c288:	48 8d 50 30          	lea    0x30(%rax),%rdx
  43c28c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c293:	48 89 d6             	mov    %rdx,%rsi
  43c296:	48 89 c7             	mov    %rax,%rdi
  43c299:	e8 8e 80 fd ff       	callq  41432c <luaF_newtbcupval>
  43c29e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c2a1:	c1 e8 0f             	shr    $0xf,%eax
  43c2a4:	48 98                	cltq   
  43c2a6:	48 c1 e0 02          	shl    $0x2,%rax
  43c2aa:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43c2ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c2b2:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c2b6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c2ba:	8b 00                	mov    (%rax),%eax
  43c2bc:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c2bf:	90                   	nop
  43c2c0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c2c3:	c1 e8 07             	shr    $0x7,%eax
  43c2c6:	48 98                	cltq   
  43c2c8:	0f b6 c0             	movzbl %al,%eax
  43c2cb:	48 c1 e0 04          	shl    $0x4,%rax
  43c2cf:	48 89 c2             	mov    %rax,%rdx
  43c2d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c2d6:	48 01 d0             	add    %rdx,%rax
  43c2d9:	48 89 85 50 f4 ff ff 	mov    %rax,-0xbb0(%rbp)
  43c2e0:	48 8b 85 50 f4 ff ff 	mov    -0xbb0(%rbp),%rax
  43c2e7:	48 8d 48 40          	lea    0x40(%rax),%rcx
  43c2eb:	48 8b 85 50 f4 ff ff 	mov    -0xbb0(%rbp),%rax
  43c2f2:	ba 30 00 00 00       	mov    $0x30,%edx
  43c2f7:	48 89 c6             	mov    %rax,%rsi
  43c2fa:	48 89 cf             	mov    %rcx,%rdi
  43c2fd:	e8 5e 55 fc ff       	callq  401860 <memcpy@plt>
  43c302:	48 8b 85 50 f4 ff ff 	mov    -0xbb0(%rbp),%rax
  43c309:	48 8d 50 70          	lea    0x70(%rax),%rdx
  43c30d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c314:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c318:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c31f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c323:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c327:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c32a:	c1 e8 18             	shr    $0x18,%eax
  43c32d:	89 c2                	mov    %eax,%edx
  43c32f:	48 8b 85 50 f4 ff ff 	mov    -0xbb0(%rbp),%rax
  43c336:	48 8d 48 40          	lea    0x40(%rax),%rcx
  43c33a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c341:	48 89 ce             	mov    %rcx,%rsi
  43c344:	48 89 c7             	mov    %rax,%rdi
  43c347:	e8 7d 65 fd ff       	callq  4128c9 <luaD_call>
  43c34c:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c353:	8b 40 28             	mov    0x28(%rax),%eax
  43c356:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c359:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c35d:	0f 95 c0             	setne  %al
  43c360:	0f b6 c0             	movzbl %al,%eax
  43c363:	48 85 c0             	test   %rax,%rax
  43c366:	74 32                	je     43c39a <luaV_execute+0x78b1>
  43c368:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c36f:	48 8b 00             	mov    (%rax),%rax
  43c372:	48 83 c0 10          	add    $0x10,%rax
  43c376:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c37a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c37d:	c1 e8 07             	shr    $0x7,%eax
  43c380:	48 98                	cltq   
  43c382:	0f b6 c0             	movzbl %al,%eax
  43c385:	48 c1 e0 04          	shl    $0x4,%rax
  43c389:	48 89 c2             	mov    %rax,%rdx
  43c38c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c390:	48 01 d0             	add    %rdx,%rax
  43c393:	48 89 85 50 f4 ff ff 	mov    %rax,-0xbb0(%rbp)
  43c39a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c39e:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c3a2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c3a6:	8b 00                	mov    (%rax),%eax
  43c3a8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c3ab:	90                   	nop
  43c3ac:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c3af:	c1 e8 07             	shr    $0x7,%eax
  43c3b2:	48 98                	cltq   
  43c3b4:	0f b6 c0             	movzbl %al,%eax
  43c3b7:	48 c1 e0 04          	shl    $0x4,%rax
  43c3bb:	48 89 c2             	mov    %rax,%rdx
  43c3be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c3c2:	48 01 d0             	add    %rdx,%rax
  43c3c5:	48 89 85 48 f4 ff ff 	mov    %rax,-0xbb8(%rbp)
  43c3cc:	48 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%rax
  43c3d3:	48 83 c0 40          	add    $0x40,%rax
  43c3d7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43c3db:	0f b6 c0             	movzbl %al,%eax
  43c3de:	83 e0 0f             	and    $0xf,%eax
  43c3e1:	85 c0                	test   %eax,%eax
  43c3e3:	74 60                	je     43c445 <luaV_execute+0x795c>
  43c3e5:	48 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%rax
  43c3ec:	48 83 c0 20          	add    $0x20,%rax
  43c3f0:	48 89 85 40 f4 ff ff 	mov    %rax,-0xbc0(%rbp)
  43c3f7:	48 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%rax
  43c3fe:	48 83 c0 40          	add    $0x40,%rax
  43c402:	48 89 85 38 f4 ff ff 	mov    %rax,-0xbc8(%rbp)
  43c409:	48 8b 85 40 f4 ff ff 	mov    -0xbc0(%rbp),%rax
  43c410:	48 8b 95 38 f4 ff ff 	mov    -0xbc8(%rbp),%rdx
  43c417:	48 8b 12             	mov    (%rdx),%rdx
  43c41a:	48 89 10             	mov    %rdx,(%rax)
  43c41d:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  43c424:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43c428:	48 8b 85 40 f4 ff ff 	mov    -0xbc0(%rbp),%rax
  43c42f:	88 50 08             	mov    %dl,0x8(%rax)
  43c432:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c435:	c1 e8 0f             	shr    $0xf,%eax
  43c438:	48 98                	cltq   
  43c43a:	48 c1 e0 02          	shl    $0x2,%rax
  43c43e:	48 f7 d8             	neg    %rax
  43c441:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  43c445:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c449:	0f 95 c0             	setne  %al
  43c44c:	0f b6 c0             	movzbl %al,%eax
  43c44f:	48 85 c0             	test   %rax,%rax
  43c452:	74 2b                	je     43c47f <luaV_execute+0x7996>
  43c454:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c458:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c45f:	48 89 d6             	mov    %rdx,%rsi
  43c462:	48 89 c7             	mov    %rax,%rdi
  43c465:	e8 77 49 fd ff       	callq  410de1 <luaG_traceexec>
  43c46a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c46d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c474:	48 8b 00             	mov    (%rax),%rax
  43c477:	48 83 c0 10          	add    $0x10,%rax
  43c47b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c47f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c483:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c487:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c48b:	8b 00                	mov    (%rax),%eax
  43c48d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c490:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c493:	83 e0 7f             	and    $0x7f,%eax
  43c496:	89 c0                	mov    %eax,%eax
  43c498:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c49f:	00 
  43c4a0:	e9 07 88 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c4a5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c4a8:	c1 e8 07             	shr    $0x7,%eax
  43c4ab:	48 98                	cltq   
  43c4ad:	0f b6 c0             	movzbl %al,%eax
  43c4b0:	48 c1 e0 04          	shl    $0x4,%rax
  43c4b4:	48 89 c2             	mov    %rax,%rdx
  43c4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c4bb:	48 01 d0             	add    %rdx,%rax
  43c4be:	48 89 85 30 f4 ff ff 	mov    %rax,-0xbd0(%rbp)
  43c4c5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c4c8:	c1 e8 10             	shr    $0x10,%eax
  43c4cb:	25 ff 00 00 00       	and    $0xff,%eax
  43c4d0:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
  43c4d6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c4d9:	c1 e8 18             	shr    $0x18,%eax
  43c4dc:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  43c4e2:	48 8b 85 30 f4 ff ff 	mov    -0xbd0(%rbp),%rax
  43c4e9:	48 8b 00             	mov    (%rax),%rax
  43c4ec:	48 89 85 28 f4 ff ff 	mov    %rax,-0xbd8(%rbp)
  43c4f3:	83 bd 68 fe ff ff 00 	cmpl   $0x0,-0x198(%rbp)
  43c4fa:	75 21                	jne    43c51d <luaV_execute+0x7a34>
  43c4fc:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c503:	48 8b 40 10          	mov    0x10(%rax),%rax
  43c507:	48 2b 85 30 f4 ff ff 	sub    -0xbd0(%rbp),%rax
  43c50e:	48 c1 f8 04          	sar    $0x4,%rax
  43c512:	83 e8 01             	sub    $0x1,%eax
  43c515:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
  43c51b:	eb 16                	jmp    43c533 <luaV_execute+0x7a4a>
  43c51d:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c524:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43c528:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c52f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c533:	8b 85 68 fe ff ff    	mov    -0x198(%rbp),%eax
  43c539:	01 85 64 fe ff ff    	add    %eax,-0x19c(%rbp)
  43c53f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c542:	25 00 80 00 00       	and    $0x8000,%eax
  43c547:	85 c0                	test   %eax,%eax
  43c549:	74 17                	je     43c562 <luaV_execute+0x7a79>
  43c54b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c54f:	8b 00                	mov    (%rax),%eax
  43c551:	c1 e8 07             	shr    $0x7,%eax
  43c554:	c1 e0 08             	shl    $0x8,%eax
  43c557:	01 85 64 fe ff ff    	add    %eax,-0x19c(%rbp)
  43c55d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
  43c562:	48 8b 85 28 f4 ff ff 	mov    -0xbd8(%rbp),%rax
  43c569:	48 89 c7             	mov    %rax,%rdi
  43c56c:	e8 29 fe fe ff       	callq  42c39a <luaH_realasize>
  43c571:	39 85 64 fe ff ff    	cmp    %eax,-0x19c(%rbp)
  43c577:	0f 86 08 01 00 00    	jbe    43c685 <luaV_execute+0x7b9c>
  43c57d:	8b 95 64 fe ff ff    	mov    -0x19c(%rbp),%edx
  43c583:	48 8b 8d 28 f4 ff ff 	mov    -0xbd8(%rbp),%rcx
  43c58a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c591:	48 89 ce             	mov    %rcx,%rsi
  43c594:	48 89 c7             	mov    %rax,%rdi
  43c597:	e8 78 09 ff ff       	callq  42cf14 <luaH_resizearray>
  43c59c:	e9 e4 00 00 00       	jmpq   43c685 <luaV_execute+0x7b9c>
  43c5a1:	8b 85 68 fe ff ff    	mov    -0x198(%rbp),%eax
  43c5a7:	48 98                	cltq   
  43c5a9:	48 c1 e0 04          	shl    $0x4,%rax
  43c5ad:	48 89 c2             	mov    %rax,%rdx
  43c5b0:	48 8b 85 30 f4 ff ff 	mov    -0xbd0(%rbp),%rax
  43c5b7:	48 01 d0             	add    %rdx,%rax
  43c5ba:	48 89 85 20 f4 ff ff 	mov    %rax,-0xbe0(%rbp)
  43c5c1:	48 8b 85 28 f4 ff ff 	mov    -0xbd8(%rbp),%rax
  43c5c8:	48 8b 40 10          	mov    0x10(%rax),%rax
  43c5cc:	8b 95 64 fe ff ff    	mov    -0x19c(%rbp),%edx
  43c5d2:	83 ea 01             	sub    $0x1,%edx
  43c5d5:	89 d2                	mov    %edx,%edx
  43c5d7:	48 c1 e2 04          	shl    $0x4,%rdx
  43c5db:	48 01 d0             	add    %rdx,%rax
  43c5de:	48 89 85 18 f4 ff ff 	mov    %rax,-0xbe8(%rbp)
  43c5e5:	48 8b 85 20 f4 ff ff 	mov    -0xbe0(%rbp),%rax
  43c5ec:	48 89 85 10 f4 ff ff 	mov    %rax,-0xbf0(%rbp)
  43c5f3:	48 8b 85 18 f4 ff ff 	mov    -0xbe8(%rbp),%rax
  43c5fa:	48 8b 95 10 f4 ff ff 	mov    -0xbf0(%rbp),%rdx
  43c601:	48 8b 12             	mov    (%rdx),%rdx
  43c604:	48 89 10             	mov    %rdx,(%rax)
  43c607:	48 8b 85 10 f4 ff ff 	mov    -0xbf0(%rbp),%rax
  43c60e:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  43c612:	48 8b 85 18 f4 ff ff 	mov    -0xbe8(%rbp),%rax
  43c619:	88 50 08             	mov    %dl,0x8(%rax)
  43c61c:	83 ad 64 fe ff ff 01 	subl   $0x1,-0x19c(%rbp)
  43c623:	48 8b 85 20 f4 ff ff 	mov    -0xbe0(%rbp),%rax
  43c62a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  43c62e:	0f b6 c0             	movzbl %al,%eax
  43c631:	83 e0 40             	and    $0x40,%eax
  43c634:	85 c0                	test   %eax,%eax
  43c636:	74 46                	je     43c67e <luaV_execute+0x7b95>
  43c638:	48 8b 85 28 f4 ff ff 	mov    -0xbd8(%rbp),%rax
  43c63f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43c643:	0f b6 c0             	movzbl %al,%eax
  43c646:	83 e0 20             	and    $0x20,%eax
  43c649:	85 c0                	test   %eax,%eax
  43c64b:	74 31                	je     43c67e <luaV_execute+0x7b95>
  43c64d:	48 8b 85 20 f4 ff ff 	mov    -0xbe0(%rbp),%rax
  43c654:	48 8b 00             	mov    (%rax),%rax
  43c657:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  43c65b:	0f b6 c0             	movzbl %al,%eax
  43c65e:	83 e0 18             	and    $0x18,%eax
  43c661:	85 c0                	test   %eax,%eax
  43c663:	74 19                	je     43c67e <luaV_execute+0x7b95>
  43c665:	48 8b 95 28 f4 ff ff 	mov    -0xbd8(%rbp),%rdx
  43c66c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c673:	48 89 d6             	mov    %rdx,%rsi
  43c676:	48 89 c7             	mov    %rax,%rdi
  43c679:	e8 6d 84 fd ff       	callq  414aeb <luaC_barrierback_>
  43c67e:	83 ad 68 fe ff ff 01 	subl   $0x1,-0x198(%rbp)
  43c685:	83 bd 68 fe ff ff 00 	cmpl   $0x0,-0x198(%rbp)
  43c68c:	0f 8f 0f ff ff ff    	jg     43c5a1 <luaV_execute+0x7ab8>
  43c692:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c696:	0f 95 c0             	setne  %al
  43c699:	0f b6 c0             	movzbl %al,%eax
  43c69c:	48 85 c0             	test   %rax,%rax
  43c69f:	74 2b                	je     43c6cc <luaV_execute+0x7be3>
  43c6a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c6a5:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c6ac:	48 89 d6             	mov    %rdx,%rsi
  43c6af:	48 89 c7             	mov    %rax,%rdi
  43c6b2:	e8 2a 47 fd ff       	callq  410de1 <luaG_traceexec>
  43c6b7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c6ba:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c6c1:	48 8b 00             	mov    (%rax),%rax
  43c6c4:	48 83 c0 10          	add    $0x10,%rax
  43c6c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c6cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c6d0:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c6d4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c6d8:	8b 00                	mov    (%rax),%eax
  43c6da:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c6dd:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c6e0:	83 e0 7f             	and    $0x7f,%eax
  43c6e3:	89 c0                	mov    %eax,%eax
  43c6e5:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c6ec:	00 
  43c6ed:	e9 ba 85 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c6f2:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c6f5:	c1 e8 07             	shr    $0x7,%eax
  43c6f8:	48 98                	cltq   
  43c6fa:	0f b6 c0             	movzbl %al,%eax
  43c6fd:	48 c1 e0 04          	shl    $0x4,%rax
  43c701:	48 89 c2             	mov    %rax,%rdx
  43c704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c708:	48 01 d0             	add    %rdx,%rax
  43c70b:	48 89 85 08 f4 ff ff 	mov    %rax,-0xbf8(%rbp)
  43c712:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43c719:	48 8b 40 18          	mov    0x18(%rax),%rax
  43c71d:	48 8b 40 48          	mov    0x48(%rax),%rax
  43c721:	8b 55 e8             	mov    -0x18(%rbp),%edx
  43c724:	c1 ea 0f             	shr    $0xf,%edx
  43c727:	48 63 d2             	movslq %edx,%rdx
  43c72a:	48 c1 e2 03          	shl    $0x3,%rdx
  43c72e:	48 01 d0             	add    %rdx,%rax
  43c731:	48 8b 00             	mov    (%rax),%rax
  43c734:	48 89 85 00 f4 ff ff 	mov    %rax,-0xc00(%rbp)
  43c73b:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c742:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c746:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c74a:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c751:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43c755:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c75c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c760:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43c767:	48 8d 78 20          	lea    0x20(%rax),%rdi
  43c76b:	48 8b 8d 08 f4 ff ff 	mov    -0xbf8(%rbp),%rcx
  43c772:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43c776:	48 8b b5 00 f4 ff ff 	mov    -0xc00(%rbp),%rsi
  43c77d:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c784:	49 89 c8             	mov    %rcx,%r8
  43c787:	48 89 d1             	mov    %rdx,%rcx
  43c78a:	48 89 fa             	mov    %rdi,%rdx
  43c78d:	48 89 c7             	mov    %rax,%rdi
  43c790:	e8 17 7f ff ff       	callq  4346ac <pushclosure>
  43c795:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c79c:	48 8b 40 18          	mov    0x18(%rax),%rax
  43c7a0:	48 8b 40 18          	mov    0x18(%rax),%rax
  43c7a4:	48 85 c0             	test   %rax,%rax
  43c7a7:	7e 41                	jle    43c7ea <luaV_execute+0x7d01>
  43c7a9:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c7b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c7b4:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c7b8:	48 8b 85 08 f4 ff ff 	mov    -0xbf8(%rbp),%rax
  43c7bf:	48 8d 50 10          	lea    0x10(%rax),%rdx
  43c7c3:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c7ca:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c7ce:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c7d5:	48 89 c7             	mov    %rax,%rdi
  43c7d8:	e8 7b bb fd ff       	callq  418358 <luaC_step>
  43c7dd:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c7e4:	8b 40 28             	mov    0x28(%rax),%eax
  43c7e7:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c7ea:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c7ee:	0f 95 c0             	setne  %al
  43c7f1:	0f b6 c0             	movzbl %al,%eax
  43c7f4:	48 85 c0             	test   %rax,%rax
  43c7f7:	74 2b                	je     43c824 <luaV_execute+0x7d3b>
  43c7f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c7fd:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c804:	48 89 d6             	mov    %rdx,%rsi
  43c807:	48 89 c7             	mov    %rax,%rdi
  43c80a:	e8 d2 45 fd ff       	callq  410de1 <luaG_traceexec>
  43c80f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c812:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c819:	48 8b 00             	mov    (%rax),%rax
  43c81c:	48 83 c0 10          	add    $0x10,%rax
  43c820:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c824:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c828:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c82c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c830:	8b 00                	mov    (%rax),%eax
  43c832:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c835:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c838:	83 e0 7f             	and    $0x7f,%eax
  43c83b:	89 c0                	mov    %eax,%eax
  43c83d:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c844:	00 
  43c845:	e9 62 84 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c84a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c84d:	c1 e8 07             	shr    $0x7,%eax
  43c850:	48 98                	cltq   
  43c852:	0f b6 c0             	movzbl %al,%eax
  43c855:	48 c1 e0 04          	shl    $0x4,%rax
  43c859:	48 89 c2             	mov    %rax,%rdx
  43c85c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43c860:	48 01 d0             	add    %rdx,%rax
  43c863:	48 89 85 f8 f3 ff ff 	mov    %rax,-0xc08(%rbp)
  43c86a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c86d:	c1 e8 18             	shr    $0x18,%eax
  43c870:	83 e8 01             	sub    $0x1,%eax
  43c873:	89 85 f4 f3 ff ff    	mov    %eax,-0xc0c(%rbp)
  43c879:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c880:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c884:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c888:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c88f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43c893:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c89a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43c89e:	8b 8d f4 f3 ff ff    	mov    -0xc0c(%rbp),%ecx
  43c8a4:	48 8b 95 f8 f3 ff ff 	mov    -0xc08(%rbp),%rdx
  43c8ab:	48 8b b5 40 f3 ff ff 	mov    -0xcc0(%rbp),%rsi
  43c8b2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c8b9:	48 89 c7             	mov    %rax,%rdi
  43c8bc:	e8 2b 2f ff ff       	callq  42f7ec <luaT_getvarargs>
  43c8c1:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c8c8:	8b 40 28             	mov    0x28(%rax),%eax
  43c8cb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c8ce:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c8d2:	0f 95 c0             	setne  %al
  43c8d5:	0f b6 c0             	movzbl %al,%eax
  43c8d8:	48 85 c0             	test   %rax,%rax
  43c8db:	74 2b                	je     43c908 <luaV_execute+0x7e1f>
  43c8dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c8e1:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c8e8:	48 89 d6             	mov    %rdx,%rsi
  43c8eb:	48 89 c7             	mov    %rax,%rdi
  43c8ee:	e8 ee 44 fd ff       	callq  410de1 <luaG_traceexec>
  43c8f3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c8f6:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c8fd:	48 8b 00             	mov    (%rax),%rax
  43c900:	48 83 c0 10          	add    $0x10,%rax
  43c904:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c908:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c90c:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43c910:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43c914:	8b 00                	mov    (%rax),%eax
  43c916:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43c919:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c91c:	83 e0 7f             	and    $0x7f,%eax
  43c91f:	89 c0                	mov    %eax,%eax
  43c921:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43c928:	00 
  43c929:	e9 7e 83 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43c92e:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c935:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c939:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43c93d:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43c944:	48 8b 48 18          	mov    0x18(%rax),%rcx
  43c948:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43c94b:	c1 e8 07             	shr    $0x7,%eax
  43c94e:	0f b6 f0             	movzbl %al,%esi
  43c951:	48 8b 95 40 f3 ff ff 	mov    -0xcc0(%rbp),%rdx
  43c958:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c95f:	48 89 c7             	mov    %rax,%rdi
  43c962:	e8 e3 2c ff ff       	callq  42f64a <luaT_adjustvarargs>
  43c967:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c96e:	8b 40 28             	mov    0x28(%rax),%eax
  43c971:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c974:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c978:	0f 95 c0             	setne  %al
  43c97b:	0f b6 c0             	movzbl %al,%eax
  43c97e:	48 85 c0             	test   %rax,%rax
  43c981:	74 2a                	je     43c9ad <luaV_execute+0x7ec4>
  43c983:	48 8b 95 40 f3 ff ff 	mov    -0xcc0(%rbp),%rdx
  43c98a:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c991:	48 89 d6             	mov    %rdx,%rsi
  43c994:	48 89 c7             	mov    %rax,%rdi
  43c997:	e8 7d 51 fd ff       	callq  411b19 <luaD_hookcall>
  43c99c:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c9a3:	c7 80 b4 00 00 00 01 	movl   $0x1,0xb4(%rax)
  43c9aa:	00 00 00 
  43c9ad:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c9b4:	48 8b 00             	mov    (%rax),%rax
  43c9b7:	48 83 c0 10          	add    $0x10,%rax
  43c9bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c9bf:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43c9c3:	0f 95 c0             	setne  %al
  43c9c6:	0f b6 c0             	movzbl %al,%eax
  43c9c9:	48 85 c0             	test   %rax,%rax
  43c9cc:	74 2b                	je     43c9f9 <luaV_execute+0x7f10>
  43c9ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43c9d2:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43c9d9:	48 89 d6             	mov    %rdx,%rsi
  43c9dc:	48 89 c7             	mov    %rax,%rdi
  43c9df:	e8 fd 43 fd ff       	callq  410de1 <luaG_traceexec>
  43c9e4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43c9e7:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43c9ee:	48 8b 00             	mov    (%rax),%rax
  43c9f1:	48 83 c0 10          	add    $0x10,%rax
  43c9f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43c9f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c9fd:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43ca01:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43ca05:	8b 00                	mov    (%rax),%eax
  43ca07:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43ca0a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ca0d:	83 e0 7f             	and    $0x7f,%eax
  43ca10:	89 c0                	mov    %eax,%eax
  43ca12:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43ca19:	00 
  43ca1a:	e9 8d 82 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43ca1f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  43ca23:	0f 95 c0             	setne  %al
  43ca26:	0f b6 c0             	movzbl %al,%eax
  43ca29:	48 85 c0             	test   %rax,%rax
  43ca2c:	74 2b                	je     43ca59 <luaV_execute+0x7f70>
  43ca2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ca32:	48 8b 85 48 f3 ff ff 	mov    -0xcb8(%rbp),%rax
  43ca39:	48 89 d6             	mov    %rdx,%rsi
  43ca3c:	48 89 c7             	mov    %rax,%rdi
  43ca3f:	e8 9d 43 fd ff       	callq  410de1 <luaG_traceexec>
  43ca44:	89 45 ec             	mov    %eax,-0x14(%rbp)
  43ca47:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  43ca4e:	48 8b 00             	mov    (%rax),%rax
  43ca51:	48 83 c0 10          	add    $0x10,%rax
  43ca55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43ca59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ca5d:	48 8d 50 04          	lea    0x4(%rax),%rdx
  43ca61:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  43ca65:	8b 00                	mov    (%rax),%eax
  43ca67:	89 45 e8             	mov    %eax,-0x18(%rbp)
  43ca6a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  43ca6d:	83 e0 7f             	and    $0x7f,%eax
  43ca70:	89 c0                	mov    %eax,%eax
  43ca72:	48 8b 04 c5 20 36 44 	mov    0x443620(,%rax,8),%rax
  43ca79:	00 
  43ca7a:	e9 2d 82 ff ff       	jmpq   434cac <luaV_execute+0x1c3>
  43ca7f:	90                   	nop
  43ca80:	c9                   	leaveq 
  43ca81:	c3                   	retq   

000000000043ca82 <luaZ_fill>:
  43ca82:	55                   	push   %rbp
  43ca83:	48 89 e5             	mov    %rsp,%rbp
  43ca86:	48 83 ec 30          	sub    $0x30,%rsp
  43ca8a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  43ca8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43ca92:	48 8b 40 20          	mov    0x20(%rax),%rax
  43ca96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43ca9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43ca9e:	48 8b 40 10          	mov    0x10(%rax),%rax
  43caa2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  43caa6:	48 8b 72 18          	mov    0x18(%rdx),%rsi
  43caaa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  43caae:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43cab2:	48 89 cf             	mov    %rcx,%rdi
  43cab5:	ff d0                	callq  *%rax
  43cab7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  43cabb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  43cac0:	74 09                	je     43cacb <luaZ_fill+0x49>
  43cac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cac6:	48 85 c0             	test   %rax,%rax
  43cac9:	75 07                	jne    43cad2 <luaZ_fill+0x50>
  43cacb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  43cad0:	eb 35                	jmp    43cb07 <luaZ_fill+0x85>
  43cad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cad6:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  43cada:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43cade:	48 89 10             	mov    %rdx,(%rax)
  43cae1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43cae5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43cae9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  43caed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43caf1:	48 8b 40 08          	mov    0x8(%rax),%rax
  43caf5:	48 8d 48 01          	lea    0x1(%rax),%rcx
  43caf9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  43cafd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  43cb01:	0f b6 00             	movzbl (%rax),%eax
  43cb04:	0f b6 c0             	movzbl %al,%eax
  43cb07:	c9                   	leaveq 
  43cb08:	c3                   	retq   

000000000043cb09 <luaZ_init>:
  43cb09:	55                   	push   %rbp
  43cb0a:	48 89 e5             	mov    %rsp,%rbp
  43cb0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43cb11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  43cb15:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  43cb19:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  43cb1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43cb21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43cb25:	48 89 50 20          	mov    %rdx,0x20(%rax)
  43cb29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43cb2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  43cb31:	48 89 50 10          	mov    %rdx,0x10(%rax)
  43cb35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43cb39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  43cb3d:	48 89 50 18          	mov    %rdx,0x18(%rax)
  43cb41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43cb45:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  43cb4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43cb50:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  43cb57:	00 
  43cb58:	90                   	nop
  43cb59:	5d                   	pop    %rbp
  43cb5a:	c3                   	retq   

000000000043cb5b <luaZ_read>:
  43cb5b:	55                   	push   %rbp
  43cb5c:	48 89 e5             	mov    %rsp,%rbp
  43cb5f:	48 83 ec 30          	sub    $0x30,%rsp
  43cb63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43cb67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  43cb6b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  43cb6f:	e9 b7 00 00 00       	jmpq   43cc2b <luaZ_read+0xd0>
  43cb74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cb78:	48 8b 00             	mov    (%rax),%rax
  43cb7b:	48 85 c0             	test   %rax,%rax
  43cb7e:	75 40                	jne    43cbc0 <luaZ_read+0x65>
  43cb80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cb84:	48 89 c7             	mov    %rax,%rdi
  43cb87:	e8 f6 fe ff ff       	callq  43ca82 <luaZ_fill>
  43cb8c:	83 f8 ff             	cmp    $0xffffffff,%eax
  43cb8f:	75 09                	jne    43cb9a <luaZ_read+0x3f>
  43cb91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43cb95:	e9 a1 00 00 00       	jmpq   43cc3b <luaZ_read+0xe0>
  43cb9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cb9e:	48 8b 00             	mov    (%rax),%rax
  43cba1:	48 8d 50 01          	lea    0x1(%rax),%rdx
  43cba5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cba9:	48 89 10             	mov    %rdx,(%rax)
  43cbac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cbb0:	48 8b 40 08          	mov    0x8(%rax),%rax
  43cbb4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  43cbb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cbbc:	48 89 50 08          	mov    %rdx,0x8(%rax)
  43cbc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cbc4:	48 8b 00             	mov    (%rax),%rax
  43cbc7:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  43cbcb:	48 0f 46 45 d8       	cmovbe -0x28(%rbp),%rax
  43cbd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43cbd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cbd8:	48 8b 48 08          	mov    0x8(%rax),%rcx
  43cbdc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43cbe0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43cbe4:	48 89 ce             	mov    %rcx,%rsi
  43cbe7:	48 89 c7             	mov    %rax,%rdi
  43cbea:	e8 71 4c fc ff       	callq  401860 <memcpy@plt>
  43cbef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cbf3:	48 8b 00             	mov    (%rax),%rax
  43cbf6:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  43cbfa:	48 89 c2             	mov    %rax,%rdx
  43cbfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cc01:	48 89 10             	mov    %rdx,(%rax)
  43cc04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cc08:	48 8b 50 08          	mov    0x8(%rax),%rdx
  43cc0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc10:	48 01 c2             	add    %rax,%rdx
  43cc13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43cc17:	48 89 50 08          	mov    %rdx,0x8(%rax)
  43cc1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc1f:	48 01 45 e0          	add    %rax,-0x20(%rbp)
  43cc23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc27:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
  43cc2b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  43cc30:	0f 85 3e ff ff ff    	jne    43cb74 <luaZ_read+0x19>
  43cc36:	b8 00 00 00 00       	mov    $0x0,%eax
  43cc3b:	c9                   	leaveq 
  43cc3c:	c3                   	retq   

000000000043cc3d <main>:
#include "lualib.h"
#include "lauxlib.h"
}

int main()
{
  43cc3d:	55                   	push   %rbp
  43cc3e:	48 89 e5             	mov    %rsp,%rbp
  43cc41:	48 83 ec 10          	sub    $0x10,%rsp
    // 初始化Lua解释器
    lua_State* L = luaL_newstate();
  43cc45:	e8 30 b5 fc ff       	callq  40817a <luaL_newstate>
  43cc4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    luaL_openlibs(L);
  43cc4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc52:	48 89 c7             	mov    %rax,%rdi
  43cc55:	e8 4b b8 fd ff       	callq  4184a5 <luaL_openlibs>

    // 加载并执行Lua脚本文件
    luaL_dofile(L, "1.lua");
  43cc5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc5e:	ba 00 00 00 00       	mov    $0x0,%edx
  43cc63:	be f0 38 44 00       	mov    $0x4438f0,%esi
  43cc68:	48 89 c7             	mov    %rax,%rdi
  43cc6b:	e8 5f a7 fc ff       	callq  4073cf <luaL_loadfilex>
  43cc70:	85 c0                	test   %eax,%eax
  43cc72:	75 29                	jne    43cc9d <main+0x60>
  43cc74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cc78:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  43cc7e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  43cc84:	b9 00 00 00 00       	mov    $0x0,%ecx
  43cc89:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43cc8e:	be 00 00 00 00       	mov    $0x0,%esi
  43cc93:	48 89 c7             	mov    %rax,%rdi
  43cc96:	e8 28 79 fc ff       	callq  4045c3 <lua_pcallk>
  43cc9b:	85 c0                	test   %eax,%eax

    // 关闭Lua解释器
    lua_close(L);
  43cc9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43cca1:	48 89 c7             	mov    %rax,%rdi
  43cca4:	e8 5a 9a fe ff       	callq  426703 <lua_close>

    return 0;
  43cca9:	b8 00 00 00 00       	mov    $0x0,%eax
}
  43ccae:	c9                   	leaveq 
  43ccaf:	c3                   	retq   

000000000043ccb0 <__libc_csu_init>:
  43ccb0:	f3 0f 1e fa          	endbr64 
  43ccb4:	41 57                	push   %r15
  43ccb6:	49 89 d7             	mov    %rdx,%r15
  43ccb9:	41 56                	push   %r14
  43ccbb:	49 89 f6             	mov    %rsi,%r14
  43ccbe:	41 55                	push   %r13
  43ccc0:	41 89 fd             	mov    %edi,%r13d
  43ccc3:	41 54                	push   %r12
  43ccc5:	4c 8d 25 04 21 21 00 	lea    0x212104(%rip),%r12        # 64edd0 <__frame_dummy_init_array_entry>
  43cccc:	55                   	push   %rbp
  43cccd:	48 8d 2d 04 21 21 00 	lea    0x212104(%rip),%rbp        # 64edd8 <__init_array_end>
  43ccd4:	53                   	push   %rbx
  43ccd5:	4c 29 e5             	sub    %r12,%rbp
  43ccd8:	48 83 ec 08          	sub    $0x8,%rsp
  43ccdc:	e8 5f 49 fc ff       	callq  401640 <_init>
  43cce1:	48 c1 fd 03          	sar    $0x3,%rbp
  43cce5:	74 1f                	je     43cd06 <__libc_csu_init+0x56>
  43cce7:	31 db                	xor    %ebx,%ebx
  43cce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  43ccf0:	4c 89 fa             	mov    %r15,%rdx
  43ccf3:	4c 89 f6             	mov    %r14,%rsi
  43ccf6:	44 89 ef             	mov    %r13d,%edi
  43ccf9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  43ccfd:	48 83 c3 01          	add    $0x1,%rbx
  43cd01:	48 39 dd             	cmp    %rbx,%rbp
  43cd04:	75 ea                	jne    43ccf0 <__libc_csu_init+0x40>
  43cd06:	48 83 c4 08          	add    $0x8,%rsp
  43cd0a:	5b                   	pop    %rbx
  43cd0b:	5d                   	pop    %rbp
  43cd0c:	41 5c                	pop    %r12
  43cd0e:	41 5d                	pop    %r13
  43cd10:	41 5e                	pop    %r14
  43cd12:	41 5f                	pop    %r15
  43cd14:	c3                   	retq   

000000000043cd15 <.annobin___libc_csu_fini.start>:
  43cd15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  43cd1c:	00 00 00 00 

000000000043cd20 <__libc_csu_fini>:
  43cd20:	f3 0f 1e fa          	endbr64 
  43cd24:	c3                   	retq   

Disassembly of section .fini:

000000000043cd28 <_fini>:
  43cd28:	f3 0f 1e fa          	endbr64 
  43cd2c:	48 83 ec 08          	sub    $0x8,%rsp
  43cd30:	48 83 c4 08          	add    $0x8,%rsp
  43cd34:	c3                   	retq   
